[{"documents":[{"i":1,"t":"","u":"/blog/archive","b":["博客"]},{"i":2,"t":"","u":"/blog/authors","b":["博客"]},{"i":3,"t":"一句顶一万句","u":"/blog/一句顶一万句","b":["博客"]},{"i":5,"t":"","u":"/blog/authors/weidongkl","b":["博客"]},{"i":12,"t":"人类简史","u":"/blog/人类简史","b":["博客"]},{"i":22,"t":"南明史","u":"/blog/南明史","b":["博客"]},{"i":24,"t":"Makefile 常用方法","u":"/docs/note/build/makefile_function","b":["笔记","Build"]},{"i":90,"t":"Makefile 中 : 和 :: 的使用指南","u":"/docs/note/build/makefile:","b":["笔记","Build"]},{"i":109,"t":"microkernel 设计1","u":"/docs/note/design/microkernel/microkernel1","b":["笔记","Design","微内核设计模式"]},{"i":129,"t":"Token Bucket（令牌桶）算法","u":"/docs/note/design/algorithm/token_bucket","b":["笔记","Design","算法"]},{"i":152,"t":"microkernel 设计2","u":"/docs/note/design/microkernel/microkernel2","b":["笔记","Design","微内核设计模式"]},{"i":168,"t":"microkernel 设计3","u":"/docs/note/design/microkernel/microkernel3","b":["笔记","Design","微内核设计模式"]},{"i":179,"t":"Future-Proof 机制","u":"/docs/note/design/future_proof","b":["笔记","Design"]},{"i":203,"t":"microkernel 设计4","u":"/docs/note/design/microkernel/microkernel4","b":["笔记","Design","微内核设计模式"]},{"i":215,"t":"microkernel 设计5","u":"/docs/note/design/microkernel/microkernel5","b":["笔记","Design","微内核设计模式"]},{"i":223,"t":"microkernel 设计6","u":"/docs/note/design/microkernel/microkernel6","b":["笔记","Design","微内核设计模式"]},{"i":233,"t":"microkernel 设计7","u":"/docs/note/design/microkernel/microkernel7","b":["笔记","Design","微内核设计模式"]},{"i":245,"t":"microkernel 设计8","u":"/docs/note/design/microkernel/microkernel8","b":["笔记","Design","微内核设计模式"]},{"i":257,"t":"microkernel 设计9","u":"/docs/note/design/microkernel/microkernel9","b":["笔记","Design","微内核设计模式"]},{"i":279,"t":"接口隔离原则(ISP)","u":"/docs/note/design/oop_pinciple/isp","b":["笔记","Design","面相对象设计原则"]},{"i":305,"t":"Golang 多goroutine交互模型","u":"/docs/note/design/multi_goroutine","b":["笔记","Design"]},{"i":317,"t":"依赖倒置原则(DIP)","u":"/docs/note/design/oop_pinciple/dip","b":["笔记","Design","面相对象设计原则"]},{"i":345,"t":"面向对象编程中的设计原则","u":"/docs/note/design/oop_pinciple/principle","b":["笔记","Golang","Design","面相对象设计原则","Design","面相对象设计原则"]},{"i":353,"t":"里氏替换原则(LSP)","u":"/docs/note/design/oop_pinciple/lsp","b":["笔记","Design","面相对象设计原则"]},{"i":377,"t":"单一职责原则(SRP)","u":"/docs/note/design/oop_pinciple/srp","b":["笔记","Design","面相对象设计原则"]},{"i":404,"t":"开闭原则(OCP)","u":"/docs/note/design/oop_pinciple/ocp","b":["笔记","Design","面相对象设计原则"]},{"i":440,"t":"git 错误","u":"/docs/note/git/git_err","b":["笔记","Git"]},{"i":443,"t":"工厂模式（Factory Pattern）","u":"/docs/note/design/standard_design_patterns/create/factory","b":["笔记","Design","标准设计模式","创建者设计模式"]},{"i":473,"t":"Golang bcrypt","u":"/docs/note/golang/bcrypt","b":["笔记","Golang"]},{"i":491,"t":"Golang os/exec 用法","u":"/docs/note/golang/cmd","b":["笔记","Golang"]},{"i":517,"t":"Golang sync.Cond","u":"/docs/note/golang/concurrency/cond","b":["笔记","Golang","并发"]},{"i":547,"t":"Golang 并发编程","u":"/docs/note/golang/concurrency/","b":["笔记","Golang","并发"]},{"i":577,"t":"Golang runtime/debug 用法","u":"/docs/note/golang/debug","b":["笔记","Golang"]},{"i":594,"t":"Token Bucket（令牌桶）算法","u":"/docs/note/golang/design/algorithm/token_bucket","b":["笔记","Golang","Design","算法"]},{"i":617,"t":"microkernel 设计1","u":"/docs/note/golang/design/microkernel/microkernel1","b":["笔记","Golang","Design","微内核设计模式"]},{"i":637,"t":"microkernel 设计2","u":"/docs/note/golang/design/microkernel/microkernel2","b":["笔记","Golang","Design","微内核设计模式"]},{"i":653,"t":"microkernel 设计3","u":"/docs/note/golang/design/microkernel/microkernel3","b":["笔记","Golang","Design","微内核设计模式"]},{"i":664,"t":"microkernel 设计4","u":"/docs/note/golang/design/microkernel/microkernel4","b":["笔记","Golang","Design","微内核设计模式"]},{"i":676,"t":"microkernel 设计5","u":"/docs/note/golang/design/microkernel/microkernel5","b":["笔记","Golang","Design","微内核设计模式"]},{"i":684,"t":"Future-Proof 机制","u":"/docs/note/golang/design/future_proof","b":["笔记","Golang","Design"]},{"i":708,"t":"microkernel 设计7","u":"/docs/note/golang/design/microkernel/microkernel7","b":["笔记","Golang","Design","微内核设计模式"]},{"i":720,"t":"microkernel 设计8","u":"/docs/note/golang/design/microkernel/microkernel8","b":["笔记","Golang","Design","微内核设计模式"]},{"i":732,"t":"microkernel 设计6","u":"/docs/note/golang/design/microkernel/microkernel6","b":["笔记","Golang","Design","微内核设计模式"]},{"i":742,"t":"microkernel 设计9","u":"/docs/note/golang/design/microkernel/microkernel9","b":["笔记","Golang","Design","微内核设计模式"]},{"i":764,"t":"依赖倒置原则(DIP)","u":"/docs/note/golang/design/oop_pinciple/dip","b":["笔记","Golang","Design","面相对象设计原则"]},{"i":792,"t":"Golang 多goroutine交互模型","u":"/docs/note/golang/design/multi_goroutine","b":["笔记","Golang","Design"]},{"i":804,"t":"接口隔离原则(ISP)","u":"/docs/note/golang/design/oop_pinciple/isp","b":["笔记","Golang","Design","面相对象设计原则"]},{"i":830,"t":"里氏替换原则(LSP)","u":"/docs/note/golang/design/oop_pinciple/lsp","b":["笔记","Golang","Design","面相对象设计原则"]},{"i":854,"t":"面向对象编程中的设计原则","u":"/docs/note/golang/design/oop_pinciple/principle","b":["笔记","Golang","Design","面相对象设计原则"]},{"i":862,"t":"单一职责原则(SRP)","u":"/docs/note/golang/design/oop_pinciple/srp","b":["笔记","Golang","Design","面相对象设计原则"]},{"i":889,"t":"开闭原则(OCP)","u":"/docs/note/golang/design/oop_pinciple/ocp","b":["笔记","Golang","Design","面相对象设计原则"]},{"i":925,"t":"工厂模式（Factory Pattern）","u":"/docs/note/golang/design/standard_design_patterns/create/factory","b":["笔记","Golang","Design","标准设计模式","创建者设计模式"]},{"i":955,"t":"goland 问题处理记录","u":"/docs/note/golang/goland","b":["笔记","Golang"]},{"i":958,"t":"Golang 随笔","u":"/docs/note/golang/jotting","b":["笔记","Golang"]},{"i":981,"t":"kingpin 用法","u":"/docs/note/golang/kingpin","b":["笔记","Golang"]},{"i":1006,"t":"Golang JSON 解析","u":"/docs/note/golang/json","b":["笔记","Golang"]},{"i":1026,"t":"Golang 序列化/反序列化","u":"/docs/note/golang/serialization","b":["笔记","Golang"]},{"i":1062,"t":"Golang Validator","u":"/docs/note/golang/validator","b":["笔记","Golang"]},{"i":1079,"t":"Golang sys/unix syscall","u":"/docs/note/golang/syscall","b":["笔记","Golang"]},{"i":1123,"t":"Golang Reflect","u":"/docs/note/golang/reflect","b":["笔记","Golang"]},{"i":1143,"t":"chroot 用法","u":"/docs/note/os/chroot","b":["笔记","OS"]},{"i":1168,"t":"Golang Unix Socket 服务","u":"/docs/note/golang/web_server_unix","b":["笔记","Golang"]},{"i":1194,"t":"僵尸进程","u":"/docs/note/os/zombie","b":["笔记","OS"]},{"i":1204,"t":"GDB 调试工具","u":"/docs/note/os/debug/gdb","b":["笔记","OS","调试工具"]}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/1",[]],["t/2",[]],["t/3",[0,3.808,1,3.808,2,3.808]],["t/5",[]],["t/12",[3,4.399,4,4.399]],["t/22",[5,4.399,6,4.399]],["t/24",[7,0.16,8,3.808,9,3.808]],["t/90",[7,0.16,10,2.952,11,3.808]],["t/109",[7,0.219,12,1.166]],["t/129",[7,0.185,13,2.595,14,2.595,15,2.595]],["t/152",[7,0.219,12,1.166]],["t/168",[7,0.219,12,1.166]],["t/179",[7,0.219,16,3.292]],["t/203",[7,0.219,12,1.166]],["t/215",[7,0.219,12,1.166]],["t/223",[7,0.219,12,1.166]],["t/233",[7,0.219,12,1.166]],["t/245",[7,0.219,12,1.166]],["t/257",[7,0.219,12,1.166]],["t/279",[7,0.16,17,3.292,18,1.666]],["t/305",[7,0.185,19,2.595,20,2.595,21,2.595]],["t/317",[7,0.141,18,1.469,22,2.902,23,2.902]],["t/345",[10,2.603,12,1.028,18,1.469,24,2.902]],["t/353",[7,0.141,18,1.469,25,2.902,26,2.902]],["t/377",[7,0.141,18,1.469,27,2.902,28,2.902]],["t/404",[7,0.16,18,1.666,29,3.292]],["t/440",[7,0.184,30,4.399]],["t/443",[7,0.2,31,2.902,32,2.902]],["t/473",[7,0.241]],["t/491",[7,0.233,33,2.379]],["t/517",[7,0.25]],["t/547",[7,0.16,34,3.808,35,3.808]],["t/577",[7,0.233,33,2.379]],["t/594",[7,0.185,13,2.595,14,2.595,15,2.595]],["t/617",[7,0.219,12,1.166]],["t/637",[7,0.219,12,1.166]],["t/653",[7,0.219,12,1.166]],["t/664",[7,0.219,12,1.166]],["t/676",[7,0.219,12,1.166]],["t/684",[7,0.219,16,3.292]],["t/708",[7,0.219,12,1.166]],["t/720",[7,0.219,12,1.166]],["t/732",[7,0.219,12,1.166]],["t/742",[7,0.219,12,1.166]],["t/764",[7,0.141,18,1.469,22,2.902,23,2.902]],["t/792",[7,0.185,19,2.595,20,2.595,21,2.595]],["t/804",[7,0.16,17,3.292,18,1.666]],["t/830",[7,0.141,18,1.469,25,2.902,26,2.902]],["t/854",[10,2.603,12,1.028,18,1.469,24,2.902]],["t/862",[7,0.141,18,1.469,27,2.902,28,2.902]],["t/889",[7,0.16,18,1.666,29,3.292]],["t/925",[7,0.2,31,2.902,32,2.902]],["t/955",[7,0.141,36,3.358,37,3.358,38,3.358]],["t/958",[7,0.184,39,4.399]],["t/981",[7,0.184,33,3.117]],["t/1006",[7,0.219,40,3.808]],["t/1026",[7,0.141,41,4.78,42,3.358]],["t/1062",[7,0.241]],["t/1079",[7,0.254]],["t/1123",[7,0.241]],["t/1143",[7,0.184,33,3.117]],["t/1168",[7,0.233,43,3.358]],["t/1194",[44,4.399,45,4.399]],["t/1204",[7,0.16,46,3.808,47,3.808]]],"invertedIndex":[["",{"_index":7,"t":{"24":{"position":[[0,8]]},"90":{"position":[[0,8]]},"109":{"position":[[0,11],[14,1]]},"129":{"position":[[0,5],[6,6]]},"152":{"position":[[0,11],[14,1]]},"168":{"position":[[0,11],[14,1]]},"179":{"position":[[0,6],[7,5]]},"203":{"position":[[0,11],[14,1]]},"215":{"position":[[0,11],[14,1]]},"223":{"position":[[0,11],[14,1]]},"233":{"position":[[0,11],[14,1]]},"245":{"position":[[0,11],[14,1]]},"257":{"position":[[0,11],[14,1]]},"279":{"position":[[7,3]]},"305":{"position":[[0,6],[8,9]]},"317":{"position":[[7,3]]},"353":{"position":[[7,3]]},"377":{"position":[[7,3]]},"404":{"position":[[5,3]]},"440":{"position":[[0,3]]},"443":{"position":[[5,7],[13,7]]},"473":{"position":[[0,6],[7,6]]},"491":{"position":[[0,6],[7,2],[10,4]]},"517":{"position":[[0,6],[7,4],[12,4]]},"547":{"position":[[0,6]]},"577":{"position":[[0,6],[7,7],[15,5]]},"594":{"position":[[0,5],[6,6]]},"617":{"position":[[0,11],[14,1]]},"637":{"position":[[0,11],[14,1]]},"653":{"position":[[0,11],[14,1]]},"664":{"position":[[0,11],[14,1]]},"676":{"position":[[0,11],[14,1]]},"684":{"position":[[0,6],[7,5]]},"708":{"position":[[0,11],[14,1]]},"720":{"position":[[0,11],[14,1]]},"732":{"position":[[0,11],[14,1]]},"742":{"position":[[0,11],[14,1]]},"764":{"position":[[7,3]]},"792":{"position":[[0,6],[8,9]]},"804":{"position":[[7,3]]},"830":{"position":[[7,3]]},"862":{"position":[[7,3]]},"889":{"position":[[5,3]]},"925":{"position":[[5,7],[13,7]]},"955":{"position":[[0,6]]},"958":{"position":[[0,6]]},"981":{"position":[[0,7]]},"1006":{"position":[[0,6],[7,4]]},"1026":{"position":[[0,6]]},"1062":{"position":[[0,6],[7,9]]},"1079":{"position":[[0,6],[7,3],[11,4],[16,7]]},"1123":{"position":[[0,6],[7,7]]},"1143":{"position":[[0,6]]},"1168":{"position":[[0,6],[7,4],[12,6]]},"1204":{"position":[[0,3]]}}}],["一万句",{"_index":2,"t":{"3":{"position":[[3,3]]}}}],["一句",{"_index":0,"t":{"3":{"position":[[0,2]]}}}],["中",{"_index":10,"t":{"90":{"position":[[9,1]]},"345":{"position":[[6,1]]},"854":{"position":[[6,1]]}}}],["交互",{"_index":20,"t":{"305":{"position":[[17,2]]},"792":{"position":[[17,2]]}}}],["人类",{"_index":3,"t":{"12":{"position":[[0,2]]}}}],["令牌",{"_index":13,"t":{"129":{"position":[[13,2]]},"594":{"position":[[13,2]]}}}],["使用指南",{"_index":11,"t":{"90":{"position":[[19,4]]}}}],["依赖",{"_index":22,"t":{"317":{"position":[[0,2]]},"764":{"position":[[0,2]]}}}],["倒置",{"_index":23,"t":{"317":{"position":[[2,2]]},"764":{"position":[[2,2]]}}}],["僵尸",{"_index":44,"t":{"1194":{"position":[[0,2]]}}}],["单一",{"_index":27,"t":{"377":{"position":[[0,2]]},"862":{"position":[[0,2]]}}}],["南",{"_index":5,"t":{"22":{"position":[[0,1]]}}}],["原则",{"_index":18,"t":{"279":{"position":[[4,2]]},"317":{"position":[[4,2]]},"345":{"position":[[10,2]]},"353":{"position":[[4,2]]},"377":{"position":[[4,2]]},"404":{"position":[[2,2]]},"764":{"position":[[4,2]]},"804":{"position":[[4,2]]},"830":{"position":[[4,2]]},"854":{"position":[[10,2]]},"862":{"position":[[4,2]]},"889":{"position":[[2,2]]}}}],["反",{"_index":42,"t":{"1026":{"position":[[11,1]]}}}],["处理",{"_index":37,"t":{"955":{"position":[[9,2]]}}}],["多",{"_index":19,"t":{"305":{"position":[[7,1]]},"792":{"position":[[7,1]]}}}],["工具",{"_index":47,"t":{"1204":{"position":[[6,2]]}}}],["工厂",{"_index":31,"t":{"443":{"position":[[0,2]]},"925":{"position":[[0,2]]}}}],["常用",{"_index":8,"t":{"24":{"position":[[9,2]]}}}],["并发",{"_index":34,"t":{"547":{"position":[[7,2]]}}}],["序列化",{"_index":41,"t":{"1026":{"position":[[7,3],[12,3]]}}}],["开闭",{"_index":29,"t":{"404":{"position":[[0,2]]},"889":{"position":[[0,2]]}}}],["接口隔离",{"_index":17,"t":{"279":{"position":[[0,4]]},"804":{"position":[[0,4]]}}}],["方法",{"_index":9,"t":{"24":{"position":[[11,2]]}}}],["明史",{"_index":6,"t":{"22":{"position":[[1,2]]}}}],["替换",{"_index":26,"t":{"353":{"position":[[2,2]]},"830":{"position":[[2,2]]}}}],["服务",{"_index":43,"t":{"1168":{"position":[[19,2]]}}}],["机制",{"_index":16,"t":{"179":{"position":[[13,2]]},"684":{"position":[[13,2]]}}}],["桶",{"_index":14,"t":{"129":{"position":[[15,1]]},"594":{"position":[[15,1]]}}}],["模型",{"_index":21,"t":{"305":{"position":[[19,2]]},"792":{"position":[[19,2]]}}}],["模式",{"_index":32,"t":{"443":{"position":[[2,2]]},"925":{"position":[[2,2]]}}}],["用法",{"_index":33,"t":{"491":{"position":[[15,2]]},"577":{"position":[[21,2]]},"981":{"position":[[8,2]]},"1143":{"position":[[7,2]]}}}],["简史",{"_index":4,"t":{"12":{"position":[[2,2]]}}}],["算法",{"_index":15,"t":{"129":{"position":[[17,2]]},"594":{"position":[[17,2]]}}}],["编程",{"_index":35,"t":{"547":{"position":[[9,2]]}}}],["职责",{"_index":28,"t":{"377":{"position":[[2,2]]},"862":{"position":[[2,2]]}}}],["解析",{"_index":40,"t":{"1006":{"position":[[12,2]]}}}],["记录",{"_index":38,"t":{"955":{"position":[[11,2]]}}}],["设计",{"_index":12,"t":{"109":{"position":[[12,2]]},"152":{"position":[[12,2]]},"168":{"position":[[12,2]]},"203":{"position":[[12,2]]},"215":{"position":[[12,2]]},"223":{"position":[[12,2]]},"233":{"position":[[12,2]]},"245":{"position":[[12,2]]},"257":{"position":[[12,2]]},"345":{"position":[[8,2]]},"617":{"position":[[12,2]]},"637":{"position":[[12,2]]},"653":{"position":[[12,2]]},"664":{"position":[[12,2]]},"676":{"position":[[12,2]]},"708":{"position":[[12,2]]},"720":{"position":[[12,2]]},"732":{"position":[[12,2]]},"742":{"position":[[12,2]]},"854":{"position":[[8,2]]}}}],["调试",{"_index":46,"t":{"1204":{"position":[[4,2]]}}}],["进程",{"_index":45,"t":{"1194":{"position":[[2,2]]}}}],["里氏",{"_index":25,"t":{"353":{"position":[[0,2]]},"830":{"position":[[0,2]]}}}],["错误",{"_index":30,"t":{"440":{"position":[[4,2]]}}}],["问题",{"_index":36,"t":{"955":{"position":[[7,2]]}}}],["随笔",{"_index":39,"t":{"958":{"position":[[7,2]]}}}],["面向对象编程",{"_index":24,"t":{"345":{"position":[[0,6]]},"854":{"position":[[0,6]]}}}],["顶",{"_index":1,"t":{"3":{"position":[[2,1]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":6,"t":"人类简史","u":"/blog/authors/weidongkl","h":"","p":5},{"i":8,"t":"南明史","u":"/blog/authors/weidongkl","h":"","p":5},{"i":10,"t":"一句顶一万句","u":"/blog/authors/weidongkl","h":"","p":5},{"i":14,"t":"司法","u":"/blog/人类简史","h":"#司法","p":12},{"i":16,"t":"文化","u":"/blog/人类简史","h":"#文化","p":12},{"i":18,"t":"经济","u":"/blog/人类简史","h":"#经济","p":12},{"i":20,"t":"家庭","u":"/blog/人类简史","h":"#家庭","p":12},{"i":25,"t":"info/warning","u":"/docs/note/build/makefile_function","h":"#infowarning","p":24},{"i":26,"t":"功能：","u":"/docs/note/build/makefile_function","h":"#功能","p":24},{"i":28,"t":"调试：","u":"/docs/note/build/makefile_function","h":"#调试","p":24},{"i":30,"t":"示例：","u":"/docs/note/build/makefile_function","h":"#示例","p":24},{"i":32,"t":"subst","u":"/docs/note/build/makefile_function","h":"#subst","p":24},{"i":33,"t":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-1","p":24},{"i":35,"t":"用法：","u":"/docs/note/build/makefile_function","h":"#用法","p":24},{"i":37,"t":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-1","p":24},{"i":39,"t":"wildcard","u":"/docs/note/build/makefile_function","h":"#wildcard","p":24},{"i":40,"t":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-2","p":24},{"i":42,"t":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-1","p":24},{"i":44,"t":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-2","p":24},{"i":46,"t":"patsubst","u":"/docs/note/build/makefile_function","h":"#patsubst","p":24},{"i":47,"t":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-3","p":24},{"i":49,"t":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-2","p":24},{"i":51,"t":"区别：","u":"/docs/note/build/makefile_function","h":"#区别","p":24},{"i":53,"t":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-3","p":24},{"i":55,"t":"addsuffix","u":"/docs/note/build/makefile_function","h":"#addsuffix","p":24},{"i":56,"t":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-4","p":24},{"i":58,"t":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-3","p":24},{"i":60,"t":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-4","p":24},{"i":62,"t":"basename","u":"/docs/note/build/makefile_function","h":"#basename","p":24},{"i":63,"t":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-5","p":24},{"i":65,"t":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-4","p":24},{"i":67,"t":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-5","p":24},{"i":69,"t":"firstword","u":"/docs/note/build/makefile_function","h":"#firstword","p":24},{"i":70,"t":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-6","p":24},{"i":72,"t":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-5","p":24},{"i":74,"t":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-6","p":24},{"i":76,"t":"strip","u":"/docs/note/build/makefile_function","h":"#strip","p":24},{"i":77,"t":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-7","p":24},{"i":79,"t":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-6","p":24},{"i":81,"t":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-7","p":24},{"i":83,"t":"word","u":"/docs/note/build/makefile_function","h":"#word","p":24},{"i":84,"t":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-8","p":24},{"i":86,"t":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-7","p":24},{"i":88,"t":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-8","p":24},{"i":91,"t":"1. 概述","u":"/docs/note/build/makefile:","h":"#1-概述","p":90},{"i":93,"t":"2. :（单冒号）与 ::（双冒号）的区别","u":"/docs/note/build/makefile:","h":"#2-单冒号与-双冒号的区别","p":90},{"i":95,"t":"3. :（单冒号）的用法","u":"/docs/note/build/makefile:","h":"#3-单冒号的用法","p":90},{"i":96,"t":"3.1 基本示例","u":"/docs/note/build/makefile:","h":"#31-基本示例","p":90},{"i":98,"t":"3.2 依赖的覆盖","u":"/docs/note/build/makefile:","h":"#32-依赖的覆盖","p":90},{"i":100,"t":"4. ::（双冒号）的用法","u":"/docs/note/build/makefile:","h":"#4-双冒号的用法","p":90},{"i":101,"t":"4.1 基本示例","u":"/docs/note/build/makefile:","h":"#41-基本示例","p":90},{"i":103,"t":"4.2 组合依赖","u":"/docs/note/build/makefile:","h":"#42-组合依赖","p":90},{"i":105,"t":"5. : vs :: 适用场景总结","u":"/docs/note/build/makefile:","h":"#5--vs--适用场景总结","p":90},{"i":107,"t":"6. 结论","u":"/docs/note/build/makefile:","h":"#6-结论","p":90},{"i":111,"t":"1. 微内核核心设计","u":"/docs/note/design/microkernel/microkernel1","h":"#1-微内核核心设计","p":109},{"i":112,"t":"1.1 特点","u":"/docs/note/design/microkernel/microkernel1","h":"#11-特点","p":109},{"i":114,"t":"1.2 核心组件","u":"/docs/note/design/microkernel/microkernel1","h":"#12-核心组件","p":109},{"i":116,"t":"2. Go 实现 microkernel","u":"/docs/note/design/microkernel/microkernel1","h":"#2-go-实现-microkernel","p":109},{"i":117,"t":"2.1 定义 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel1","h":"#21-定义-kernel核心","p":109},{"i":119,"t":"2.2 实现示例服务（LogService）","u":"/docs/note/design/microkernel/microkernel1","h":"#22-实现示例服务logservice","p":109},{"i":121,"t":"2.3 主程序（运行微内核 + 服务）","u":"/docs/note/design/microkernel/microkernel1","h":"#23-主程序运行微内核--服务","p":109},{"i":123,"t":"2.4 运行结果","u":"/docs/note/design/microkernel/microkernel1","h":"#24-运行结果","p":109},{"i":125,"t":"3. 扩展方向","u":"/docs/note/design/microkernel/microkernel1","h":"#3-扩展方向","p":109},{"i":127,"t":"4. 总结","u":"/docs/note/design/microkernel/microkernel1","h":"#4-总结","p":109},{"i":130,"t":"1. 概述","u":"/docs/note/design/algorithm/token_bucket","h":"#1-概述","p":129},{"i":132,"t":"2. 基本原理","u":"/docs/note/design/algorithm/token_bucket","h":"#2-基本原理","p":129},{"i":134,"t":"3. 与漏桶（Leaky Bucket）区别","u":"/docs/note/design/algorithm/token_bucket","h":"#3-与漏桶leaky-bucket区别","p":129},{"i":136,"t":"4. 代码实现示例（Golang）","u":"/docs/note/design/algorithm/token_bucket","h":"#4-代码实现示例golang","p":129},{"i":138,"t":"5. 应用场景","u":"/docs/note/design/algorithm/token_bucket","h":"#5-应用场景","p":129},{"i":140,"t":"6. 优缺点","u":"/docs/note/design/algorithm/token_bucket","h":"#6-优缺点","p":129},{"i":142,"t":"7. 带优先级的Token Bucket算法","u":"/docs/note/design/algorithm/token_bucket","h":"#7-带优先级的token-bucket算法","p":129},{"i":144,"t":"7.1每个优先级一个桶","u":"/docs/note/design/algorithm/token_bucket","h":"#71每个优先级一个桶","p":129},{"i":146,"t":"7.2 调度器获取令牌时按优先级顺序尝试","u":"/docs/note/design/algorithm/token_bucket","h":"#72-调度器获取令牌时按优先级顺序尝试","p":129},{"i":148,"t":"7.3  目标特性","u":"/docs/note/design/algorithm/token_bucket","h":"#73--目标特性","p":129},{"i":150,"t":"7.4 示例","u":"/docs/note/design/algorithm/token_bucket","h":"#74-示例","p":129},{"i":154,"t":"1. 目标","u":"/docs/note/design/microkernel/microkernel2","h":"#1-目标","p":152},{"i":156,"t":"2. 代码改动","u":"/docs/note/design/microkernel/microkernel2","h":"#2-代码改动","p":152},{"i":157,"t":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel2","h":"#21-kernel核心","p":152},{"i":159,"t":"2.2 LogService","u":"/docs/note/design/microkernel/microkernel2","h":"#22-logservice","p":152},{"i":161,"t":"2.3 主程序（运行微内核 + 服务）","u":"/docs/note/design/microkernel/microkernel2","h":"#23-主程序运行微内核--服务","p":152},{"i":163,"t":"2.4 运行结果","u":"/docs/note/design/microkernel/microkernel2","h":"#24-运行结果","p":152},{"i":165,"t":"2.5 优化函数和变量命名","u":"/docs/note/design/microkernel/microkernel2","h":"#25-优化函数和变量命名","p":152},{"i":167,"t":"","u":"/docs/note/design/microkernel/microkernel2","h":"","p":152},{"i":169,"t":"1. 目标","u":"/docs/note/design/microkernel/microkernel3","h":"#1-目标","p":168},{"i":171,"t":"2. 代码改动","u":"/docs/note/design/microkernel/microkernel3","h":"#2-代码改动","p":168},{"i":173,"t":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel3","h":"#21-kernel核心","p":168},{"i":175,"t":"2.2 LogService","u":"/docs/note/design/microkernel/microkernel3","h":"#22-logservice","p":168},{"i":177,"t":"2.3 运行结果","u":"/docs/note/design/microkernel/microkernel3","h":"#23-运行结果","p":168},{"i":181,"t":"1. Future-Proof 机制的关键原则","u":"/docs/note/design/future_proof","h":"","p":179},{"i":183,"t":"1.1.  松耦合（Loose Coupling）","u":"/docs/note/design/future_proof","h":"#11--松耦合loose-coupling","p":179},{"i":185,"t":"1.2. 可扩展性（Extensibility）","u":"/docs/note/design/future_proof","h":"#12-可扩展性extensibility","p":179},{"i":187,"t":"1.3. 配置化而非硬编码","u":"/docs/note/design/future_proof","h":"#13-配置化而非硬编码","p":179},{"i":189,"t":"1.4. 协议与数据格式的兼容性","u":"/docs/note/design/future_proof","h":"#14-协议与数据格式的兼容性","p":179},{"i":191,"t":"1.5. 并发模型的可适应性","u":"/docs/note/design/future_proof","h":"#15-并发模型的可适应性","p":179},{"i":193,"t":"1.6. 可观测性（Observability）","u":"/docs/note/design/future_proof","h":"#16-可观测性observability","p":179},{"i":195,"t":"1.7. 防御性编程","u":"/docs/note/design/future_proof","h":"#17-防御性编程","p":179},{"i":197,"t":"2. 聚合器示例","u":"/docs/note/design/future_proof","h":"#2-聚合器示例","p":179},{"i":199,"t":"3. 反模式：非 Future-Proof 的设计","u":"/docs/note/design/future_proof","h":"#3-反模式非-future-proof-的设计","p":179},{"i":201,"t":"4. 总结","u":"/docs/note/design/future_proof","h":"#4-总结","p":179},{"i":204,"t":"1. 目标","u":"/docs/note/design/microkernel/microkernel4","h":"#1-目标","p":203},{"i":206,"t":"2. 代码改动","u":"/docs/note/design/microkernel/microkernel4","h":"#2-代码改动","p":203},{"i":207,"t":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel4","h":"#21-kernel核心","p":203},{"i":209,"t":"2.2 LogService","u":"/docs/note/design/microkernel/microkernel4","h":"#22-logservice","p":203},{"i":211,"t":"2.3 增加另一个类似的EchoService","u":"/docs/note/design/microkernel/microkernel4","h":"#23-增加另一个类似的echoservice","p":203},{"i":213,"t":"2.4 运行结果","u":"/docs/note/design/microkernel/microkernel4","h":"#24-运行结果","p":203},{"i":216,"t":"1. 目标","u":"/docs/note/design/microkernel/microkernel5","h":"#1-目标","p":215},{"i":218,"t":"2. 代码改动","u":"/docs/note/design/microkernel/microkernel5","h":"#2-代码改动","p":215},{"i":219,"t":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel5","h":"#21-kernel核心","p":215},{"i":221,"t":"2.2 运行结果","u":"/docs/note/design/microkernel/microkernel5","h":"#22-运行结果","p":215},{"i":224,"t":"1. 目标","u":"/docs/note/design/microkernel/microkernel6","h":"#1-目标","p":223},{"i":226,"t":"2. 代码改动","u":"/docs/note/design/microkernel/microkernel6","h":"#2-代码改动","p":223},{"i":227,"t":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel6","h":"#21-kernel核心","p":223},{"i":229,"t":"2.2 服务","u":"/docs/note/design/microkernel/microkernel6","h":"#22-服务","p":223},{"i":231,"t":"2.3 运行结果","u":"/docs/note/design/microkernel/microkernel6","h":"#23-运行结果","p":223},{"i":234,"t":"1. 目标","u":"/docs/note/design/microkernel/microkernel7","h":"#1-目标","p":233},{"i":236,"t":"2. 代码改动","u":"/docs/note/design/microkernel/microkernel7","h":"#2-代码改动","p":233},{"i":237,"t":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel7","h":"#21-kernel核心","p":233},{"i":239,"t":"2.2 日志服务","u":"/docs/note/design/microkernel/microkernel7","h":"#22-日志服务","p":233},{"i":241,"t":"2.3 main","u":"/docs/note/design/microkernel/microkernel7","h":"#23-main","p":233},{"i":243,"t":"2.4 运行结果","u":"/docs/note/design/microkernel/microkernel7","h":"#24-运行结果","p":233},{"i":246,"t":"1. 目标","u":"/docs/note/design/microkernel/microkernel8","h":"#1-目标","p":245},{"i":248,"t":"2. 代码改动","u":"/docs/note/design/microkernel/microkernel8","h":"#2-代码改动","p":245},{"i":249,"t":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel8","h":"#21-kernel核心","p":245},{"i":251,"t":"2.2 echo服务","u":"/docs/note/design/microkernel/microkernel8","h":"#22-echo服务","p":245},{"i":253,"t":"2.3 main","u":"/docs/note/design/microkernel/microkernel8","h":"#23-main","p":245},{"i":255,"t":"2.4 运行结果","u":"/docs/note/design/microkernel/microkernel8","h":"#24-运行结果","p":245},{"i":259,"t":"1. 目标","u":"/docs/note/design/microkernel/microkernel9","h":"#1-目标","p":257},{"i":261,"t":"2. 状态存储设计","u":"/docs/note/design/microkernel/microkernel9","h":"#2-状态存储设计","p":257},{"i":262,"t":"2.1 存储文件设计","u":"/docs/note/design/microkernel/microkernel9","h":"#21-存储文件设计","p":257},{"i":264,"t":"2.2 状态管理模块：StateStore","u":"/docs/note/design/microkernel/microkernel9","h":"#22-状态管理模块statestore","p":257},{"i":266,"t":"3. 内核集成","u":"/docs/note/design/microkernel/microkernel9","h":"#3-内核集成","p":257},{"i":267,"t":"3.1 kernel 初始化集成StateStore","u":"/docs/note/design/microkernel/microkernel9","h":"#31-kernel-初始化集成statestore","p":257},{"i":269,"t":"3.2 注册服务时尝试自动加载状态","u":"/docs/note/design/microkernel/microkernel9","h":"#32-注册服务时尝试自动加载状态","p":257},{"i":271,"t":"3.3 停止服务时，保存状态","u":"/docs/note/design/microkernel/microkernel9","h":"#33-停止服务时保存状态","p":257},{"i":273,"t":"3.4 定时持久化状态","u":"/docs/note/design/microkernel/microkernel9","h":"#34-定时持久化状态","p":257},{"i":275,"t":"4. main","u":"/docs/note/design/microkernel/microkernel9","h":"#4-main","p":257},{"i":277,"t":"4.1 运行结果","u":"/docs/note/design/microkernel/microkernel9","h":"#41-运行结果","p":257},{"i":280,"t":"1. 概述","u":"/docs/note/design/oop_pinciple/isp","h":"#1-概述","p":279},{"i":282,"t":"2. 核心概念","u":"/docs/note/design/oop_pinciple/isp","h":"#2-核心概念","p":279},{"i":284,"t":"3. Go语言中的ISP实现方式","u":"/docs/note/design/oop_pinciple/isp","h":"#3-go语言中的isp实现方式","p":279},{"i":285,"t":"3.1 违反ISP的例子","u":"/docs/note/design/oop_pinciple/isp","h":"#31-违反isp的例子","p":279},{"i":287,"t":"3.2 遵循ISP的改进方案","u":"/docs/note/design/oop_pinciple/isp","h":"#32-遵循isp的改进方案","p":279},{"i":289,"t":"4. Go语言中实践ISP的技巧","u":"/docs/note/design/oop_pinciple/isp","h":"#4-go语言中实践isp的技巧","p":279},{"i":290,"t":"4.1 使用接口组合","u":"/docs/note/design/oop_pinciple/isp","h":"#41-使用接口组合","p":279},{"i":292,"t":"4.2 客户端特定接口","u":"/docs/note/design/oop_pinciple/isp","h":"#42-客户端特定接口","p":279},{"i":294,"t":"4.3 避免接口污染","u":"/docs/note/design/oop_pinciple/isp","h":"#43-避免接口污染","p":279},{"i":296,"t":"5. 实际应用案例","u":"/docs/note/design/oop_pinciple/isp","h":"#5-实际应用案例","p":279},{"i":297,"t":"5.1 数据库访问层","u":"/docs/note/design/oop_pinciple/isp","h":"#51-数据库访问层","p":279},{"i":299,"t":"5.2 HTTP中间件","u":"/docs/note/design/oop_pinciple/isp","h":"#52-http中间件","p":279},{"i":301,"t":"6. 违反ISP的后果","u":"/docs/note/design/oop_pinciple/isp","h":"#6-违反isp的后果","p":279},{"i":303,"t":"7. 总结","u":"/docs/note/design/oop_pinciple/isp","h":"#7-总结","p":279},{"i":306,"t":"1. channel 交互","u":"/docs/note/design/multi_goroutine","h":"#1-channel-交互","p":305},{"i":308,"t":"2.  增加 channel 状态判断","u":"/docs/note/design/multi_goroutine","h":"#2--增加-channel-状态判断","p":305},{"i":309,"t":"2.1. 理解 channel 行为","u":"/docs/note/design/multi_goroutine","h":"#21-理解-channel-行为","p":305},{"i":311,"t":"2.2. 使用判断channel 优化示例","u":"/docs/note/design/multi_goroutine","h":"#22-使用判断channel-优化示例","p":305},{"i":313,"t":"3. 支持 context.Context","u":"/docs/note/design/multi_goroutine","h":"#3-支持-contextcontext","p":305},{"i":315,"t":"4. CommandHandler 模式","u":"/docs/note/design/multi_goroutine","h":"#4-commandhandler-模式","p":305},{"i":318,"t":"1. 概述","u":"/docs/note/design/oop_pinciple/dip","h":"#1-概述","p":317},{"i":320,"t":"2. 核心概念","u":"/docs/note/design/oop_pinciple/dip","h":"#2-核心概念","p":317},{"i":322,"t":"3. Go语言中的DIP实现方式","u":"/docs/note/design/oop_pinciple/dip","h":"#3-go语言中的dip实现方式","p":317},{"i":323,"t":"3.1 违反DIP的例子","u":"/docs/note/design/oop_pinciple/dip","h":"#31-违反dip的例子","p":317},{"i":325,"t":"3.2 遵循DIP的改进方案","u":"/docs/note/design/oop_pinciple/dip","h":"#32-遵循dip的改进方案","p":317},{"i":327,"t":"4. Go语言中实践DIP的技巧","u":"/docs/note/design/oop_pinciple/dip","h":"#4-go语言中实践dip的技巧","p":317},{"i":328,"t":"4.1 构造函数注入","u":"/docs/note/design/oop_pinciple/dip","h":"#41-构造函数注入","p":317},{"i":330,"t":"4.2 方法注入","u":"/docs/note/design/oop_pinciple/dip","h":"#42-方法注入","p":317},{"i":332,"t":"4.3 接口定义在调用方","u":"/docs/note/design/oop_pinciple/dip","h":"#43-接口定义在调用方","p":317},{"i":334,"t":"5. 实际应用案例","u":"/docs/note/design/oop_pinciple/dip","h":"#5-实际应用案例","p":317},{"i":335,"t":"5.1 数据库访问","u":"/docs/note/design/oop_pinciple/dip","h":"#51-数据库访问","p":317},{"i":337,"t":"5.2 HTTP服务","u":"/docs/note/design/oop_pinciple/dip","h":"#52-http服务","p":317},{"i":339,"t":"6. 依赖注入框架(可选)","u":"/docs/note/design/oop_pinciple/dip","h":"#6-依赖注入框架可选","p":317},{"i":341,"t":"7. 违反DIP的后果","u":"/docs/note/design/oop_pinciple/dip","h":"#7-违反dip的后果","p":317},{"i":343,"t":"8. 总结","u":"/docs/note/design/oop_pinciple/dip","h":"#8-总结","p":317},{"i":347,"t":"SOLID原则","u":"/docs/note/design/oop_pinciple/principle","h":"#solid原则","p":345},{"i":349,"t":"其他重要原则","u":"/docs/note/design/oop_pinciple/principle","h":"#其他重要原则","p":345},{"i":351,"t":"个人总结","u":"/docs/note/design/oop_pinciple/principle","h":"#个人总结","p":345},{"i":354,"t":"1. 概述","u":"/docs/note/design/oop_pinciple/lsp","h":"#1-概述","p":353},{"i":356,"t":"2. 核心概念","u":"/docs/note/design/oop_pinciple/lsp","h":"#2-核心概念","p":353},{"i":358,"t":"3. Go语言中的LSP实现方式","u":"/docs/note/design/oop_pinciple/lsp","h":"#3-go语言中的lsp实现方式","p":353},{"i":359,"t":"3.1 通过接口实现LSP","u":"/docs/note/design/oop_pinciple/lsp","h":"#31-通过接口实现lsp","p":353},{"i":361,"t":"3.2 符合LSP的改进方案","u":"/docs/note/design/oop_pinciple/lsp","h":"#32-符合lsp的改进方案","p":353},{"i":363,"t":"4. 违反LSP的常见情况与重构","u":"/docs/note/design/oop_pinciple/lsp","h":"#4-违反lsp的常见情况与重构","p":353},{"i":364,"t":"4.1 违反情况1：子类削弱前置条件","u":"/docs/note/design/oop_pinciple/lsp","h":"#41-违反情况1子类削弱前置条件","p":353},{"i":366,"t":"4.2 违反情况2：子类强化后置条件","u":"/docs/note/design/oop_pinciple/lsp","h":"#42-违反情况2子类强化后置条件","p":353},{"i":368,"t":"5. Go语言中实践LSP的技巧","u":"/docs/note/design/oop_pinciple/lsp","h":"#5-go语言中实践lsp的技巧","p":353},{"i":369,"t":"5.1 使用组合代替继承","u":"/docs/note/design/oop_pinciple/lsp","h":"#51-使用组合代替继承","p":353},{"i":371,"t":"5.2 接口隔离加强","u":"/docs/note/design/oop_pinciple/lsp","h":"#52-接口隔离加强","p":353},{"i":373,"t":"6. LSP的实际应用场景","u":"/docs/note/design/oop_pinciple/lsp","h":"#6-lsp的实际应用场景","p":353},{"i":375,"t":"7. 总结","u":"/docs/note/design/oop_pinciple/lsp","h":"#7-总结","p":353},{"i":378,"t":"1. 概述","u":"/docs/note/design/oop_pinciple/srp","h":"#1-概述","p":377},{"i":380,"t":"2. 为什么需要SRP？","u":"/docs/note/design/oop_pinciple/srp","h":"#2-为什么需要srp","p":377},{"i":381,"t":"优点：","u":"/docs/note/design/oop_pinciple/srp","h":"#优点","p":377},{"i":383,"t":"违反SRP的后果：","u":"/docs/note/design/oop_pinciple/srp","h":"#违反srp的后果","p":377},{"i":385,"t":"3. Go语言中的SRP示例","u":"/docs/note/design/oop_pinciple/srp","h":"#3-go语言中的srp示例","p":377},{"i":386,"t":"3.1 违反SRP的例子","u":"/docs/note/design/oop_pinciple/srp","h":"#31-违反srp的例子","p":377},{"i":388,"t":"3.2 遵循SRP的改进版本","u":"/docs/note/design/oop_pinciple/srp","h":"#32-遵循srp的改进版本","p":377},{"i":390,"t":"4. Go语言中实践SRP的技巧","u":"/docs/note/design/oop_pinciple/srp","h":"#4-go语言中实践srp的技巧","p":377},{"i":391,"t":"4.1 接口设计","u":"/docs/note/design/oop_pinciple/srp","h":"#41-接口设计","p":377},{"i":393,"t":"4.2 组合代替继承","u":"/docs/note/design/oop_pinciple/srp","h":"#42-组合代替继承","p":377},{"i":395,"t":"4.3 函数职责单一","u":"/docs/note/design/oop_pinciple/srp","h":"#43-函数职责单一","p":377},{"i":397,"t":"5. 何时应用SRP？","u":"/docs/note/design/oop_pinciple/srp","h":"#5-何时应用srp","p":377},{"i":398,"t":"应该应用SRP的情况：","u":"/docs/note/design/oop_pinciple/srp","h":"#应该应用srp的情况","p":377},{"i":400,"t":"不必过度应用：","u":"/docs/note/design/oop_pinciple/srp","h":"#不必过度应用","p":377},{"i":402,"t":"6. 总结","u":"/docs/note/design/oop_pinciple/srp","h":"#6-总结","p":377},{"i":405,"t":"1. 概述","u":"/docs/note/design/oop_pinciple/ocp","h":"#1-概述","p":404},{"i":407,"t":"2. 核心概念","u":"/docs/note/design/oop_pinciple/ocp","h":"#2-核心概念","p":404},{"i":409,"t":"3. Go语言中的OCP实现方式","u":"/docs/note/design/oop_pinciple/ocp","h":"#3-go语言中的ocp实现方式","p":404},{"i":410,"t":"3.1 使用接口实现OCP","u":"/docs/note/design/oop_pinciple/ocp","h":"#31-使用接口实现ocp","p":404},{"i":412,"t":"3.2 添加新支付方式（扩展）","u":"/docs/note/design/oop_pinciple/ocp","h":"#32-添加新支付方式扩展","p":404},{"i":414,"t":"4. 违反OCP的示例与重构","u":"/docs/note/design/oop_pinciple/ocp","h":"#4-违反ocp的示例与重构","p":404},{"i":415,"t":"4.1 违反OCP的代码","u":"/docs/note/design/oop_pinciple/ocp","h":"#41-违反ocp的代码","p":404},{"i":417,"t":"4.2 重构为符合OCP的代码","u":"/docs/note/design/oop_pinciple/ocp","h":"#42-重构为符合ocp的代码","p":404},{"i":419,"t":"5. Go语言中实践OCP的高级技巧","u":"/docs/note/design/oop_pinciple/ocp","h":"#5-go语言中实践ocp的高级技巧","p":404},{"i":420,"t":"5.1 函数选项模式(Functional Options)","u":"/docs/note/design/oop_pinciple/ocp","h":"#51-函数选项模式functional-options","p":404},{"i":422,"t":"5.2 中间件模式","u":"/docs/note/design/oop_pinciple/ocp","h":"#52-中间件模式","p":404},{"i":424,"t":"6. OCP的实际应用场景","u":"/docs/note/design/oop_pinciple/ocp","h":"#6-ocp的实际应用场景","p":404},{"i":426,"t":"7. OCP的日志系统","u":"/docs/note/design/oop_pinciple/ocp","h":"#7-ocp的日志系统","p":404},{"i":428,"t":"7.1 基础设计","u":"/docs/note/design/oop_pinciple/ocp","h":"#71-基础设计","p":404},{"i":430,"t":"7.2 组合日志器（支持多种输出）","u":"/docs/note/design/oop_pinciple/ocp","h":"#72-组合日志器支持多种输出","p":404},{"i":432,"t":"7.3 使用工厂方法创建日志器","u":"/docs/note/design/oop_pinciple/ocp","h":"#73-使用工厂方法创建日志器","p":404},{"i":434,"t":"7.4 添加网络日志输出（扩展示例）","u":"/docs/note/design/oop_pinciple/ocp","h":"#74-添加网络日志输出扩展示例","p":404},{"i":436,"t":"7.5 完整使用示例","u":"/docs/note/design/oop_pinciple/ocp","h":"#75-完整使用示例","p":404},{"i":438,"t":"8. 总结","u":"/docs/note/design/oop_pinciple/ocp","h":"#8-总结","p":404},{"i":441,"t":"1. tls 连接错误","u":"/docs/note/git/git_err","h":"#1-tls-连接错误","p":440},{"i":444,"t":"1. 概述","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#1-概述","p":443},{"i":446,"t":"2. 简单工厂（Simple Factory）","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#2-简单工厂simple-factory","p":443},{"i":447,"t":"2.1 示例：图形创建器","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#21-示例图形创建器","p":443},{"i":449,"t":"2.2 示例：网络连接","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#22-示例网络连接","p":443},{"i":451,"t":"2.3 优缺点","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#23-优缺点","p":443},{"i":453,"t":"3. 工厂方法（Factory Method）","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#3-工厂方法factory-method","p":443},{"i":454,"t":"3.1 示例：数据库连接器","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#31-示例数据库连接器","p":443},{"i":456,"t":"3.2 示例：日志系统","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#32-示例日志系统","p":443},{"i":458,"t":"3.3 优缺点","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#33-优缺点","p":443},{"i":460,"t":"4. 抽象工厂（Abstract Factory）","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#4-抽象工厂abstract-factory","p":443},{"i":461,"t":"4.1 示例：UI 工厂（按钮 + 文本框）","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#41-示例ui-工厂按钮--文本框","p":443},{"i":463,"t":"4.2 优缺点","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#42-优缺点","p":443},{"i":465,"t":"5. 函数式工厂（Functional Factory）","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#5-函数式工厂functional-factory","p":443},{"i":467,"t":"5.1 优点","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#51-优点","p":443},{"i":469,"t":"6.  工厂模式应用场景","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#6--工厂模式应用场景","p":443},{"i":471,"t":"7. 小结对比","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#7-小结对比","p":443},{"i":474,"t":"1. 概述","u":"/docs/note/golang/bcrypt","h":"#1-概述","p":473},{"i":476,"t":"2. 安装","u":"/docs/note/golang/bcrypt","h":"#2-安装","p":473},{"i":478,"t":"3. 基本用法","u":"/docs/note/golang/bcrypt","h":"#3-基本用法","p":473},{"i":479,"t":"3.1 生成哈希密码","u":"/docs/note/golang/bcrypt","h":"#31-生成哈希密码","p":473},{"i":481,"t":"3.2 校验密码","u":"/docs/note/golang/bcrypt","h":"#32-校验密码","p":473},{"i":483,"t":"3.3 修改密码","u":"/docs/note/golang/bcrypt","h":"#33-修改密码","p":473},{"i":485,"t":"3.4 确定哈希是否需要更新","u":"/docs/note/golang/bcrypt","h":"#34-确定哈希是否需要更新","p":473},{"i":487,"t":"4. 适用场景","u":"/docs/note/golang/bcrypt","h":"#4-适用场景","p":473},{"i":489,"t":"5. 总结","u":"/docs/note/golang/bcrypt","h":"#5-总结","p":473},{"i":492,"t":"1. os/exec 包简介","u":"/docs/note/golang/cmd","h":"#1-osexec-包简介","p":491},{"i":494,"t":"2. exec.Command 基本用法","u":"/docs/note/golang/cmd","h":"#2-execcommand-基本用法","p":491},{"i":496,"t":"2.1 获取stdout和stderr","u":"/docs/note/golang/cmd","h":"#21-获取stdout和stderr","p":491},{"i":498,"t":"2.2 只获取stdout","u":"/docs/note/golang/cmd","h":"#22-只获取stdout","p":491},{"i":500,"t":"3. 高级用法","u":"/docs/note/golang/cmd","h":"#3-高级用法","p":491},{"i":501,"t":"3.1 使用cmd.Stdout","u":"/docs/note/golang/cmd","h":"#31-使用cmdstdout","p":491},{"i":503,"t":"3.2 使用 StdoutPipe","u":"/docs/note/golang/cmd","h":"#32-使用-stdoutpipe","p":491},{"i":505,"t":"3.3 传递输入 (stdin)","u":"/docs/note/golang/cmd","h":"#33-传递输入-stdin","p":491},{"i":507,"t":"3.4 设置环境变量","u":"/docs/note/golang/cmd","h":"#34-设置环境变量","p":491},{"i":509,"t":"3.5 运行带超时的命令","u":"/docs/note/golang/cmd","h":"#35-运行带超时的命令","p":491},{"i":511,"t":"3.6 增加错误判断","u":"/docs/note/golang/cmd","h":"#36-增加错误判断","p":491},{"i":513,"t":"3.7 使用管道连接多个命令","u":"/docs/note/golang/cmd","h":"#37-使用管道连接多个命令","p":491},{"i":515,"t":"4. 结论","u":"/docs/note/golang/cmd","h":"#4-结论","p":491},{"i":518,"t":"1. 概述","u":"/docs/note/golang/concurrency/cond","h":"#1-概述","p":517},{"i":520,"t":"2. 基本概念","u":"/docs/note/golang/concurrency/cond","h":"#2-基本概念","p":517},{"i":521,"t":"2.1 条件变量","u":"/docs/note/golang/concurrency/cond","h":"#21-条件变量","p":517},{"i":523,"t":"2.2 Cond 结构","u":"/docs/note/golang/concurrency/cond","h":"#22-cond-结构","p":517},{"i":525,"t":"3. 核心方法","u":"/docs/note/golang/concurrency/cond","h":"#3-核心方法","p":517},{"i":526,"t":"3.1 创建 Cond","u":"/docs/note/golang/concurrency/cond","h":"#31-创建-cond","p":517},{"i":528,"t":"3.2 Wait 方法","u":"/docs/note/golang/concurrency/cond","h":"#32-wait-方法","p":517},{"i":530,"t":"3.3 Signal 方法","u":"/docs/note/golang/concurrency/cond","h":"#33-signal-方法","p":517},{"i":532,"t":"3.4 Broadcast 方法","u":"/docs/note/golang/concurrency/cond","h":"#34-broadcast-方法","p":517},{"i":534,"t":"4. 使用模式","u":"/docs/note/golang/concurrency/cond","h":"#4-使用模式","p":517},{"i":535,"t":"4.1 基本使用模式","u":"/docs/note/golang/concurrency/cond","h":"#41-基本使用模式","p":517},{"i":537,"t":"4.2 生产者-消费者示例","u":"/docs/note/golang/concurrency/cond","h":"#42-生产者-消费者示例","p":517},{"i":539,"t":"5. 注意事项","u":"/docs/note/golang/concurrency/cond","h":"#5-注意事项","p":517},{"i":541,"t":"6. 最佳实践","u":"/docs/note/golang/concurrency/cond","h":"#6-最佳实践","p":517},{"i":543,"t":"7. 与 channel 的对比","u":"/docs/note/golang/concurrency/cond","h":"#7-与-channel-的对比","p":517},{"i":545,"t":"8. 总结","u":"/docs/note/golang/concurrency/cond","h":"#8-总结","p":517},{"i":549,"t":"1. Channel（推荐方式）","u":"/docs/note/golang/concurrency/","h":"#1-channel推荐方式","p":547},{"i":551,"t":"1.1 Channel 的特点","u":"/docs/note/golang/concurrency/","h":"#11-channel-的特点","p":547},{"i":553,"t":"1.2 基础示例：","u":"/docs/note/golang/concurrency/","h":"#12-基础示例","p":547},{"i":555,"t":"1.3 select 结合 channel 用法","u":"/docs/note/golang/concurrency/","h":"#13-select-结合-channel-用法","p":547},{"i":557,"t":"1.4 Channel 的适用场景","u":"/docs/note/golang/concurrency/","h":"#14-channel-的适用场景","p":547},{"i":559,"t":"2. sync.WaitGroup`","u":"/docs/note/golang/concurrency/","h":"#2-syncwaitgroup","p":547},{"i":561,"t":"3.  sync.Mutex","u":"/docs/note/golang/concurrency/","h":"#3--syncmutex","p":547},{"i":563,"t":"4.  sync.Cond 进行事件通知","u":"/docs/note/golang/concurrency/","h":"#4--synccond-进行事件通知","p":547},{"i":565,"t":"5.  sync.Once","u":"/docs/note/golang/concurrency/","h":"#5--synconce","p":547},{"i":567,"t":"6.  atomic","u":"/docs/note/golang/concurrency/","h":"#6--atomic","p":547},{"i":569,"t":"示例：","u":"/docs/note/golang/concurrency/","h":"#示例","p":547},{"i":571,"t":"7.  context","u":"/docs/note/golang/concurrency/","h":"#7--context","p":547},{"i":573,"t":"示例：","u":"/docs/note/golang/concurrency/","h":"#示例-1","p":547},{"i":575,"t":"总结","u":"/docs/note/golang/concurrency/","h":"#总结","p":547},{"i":579,"t":"1. 内存和垃圾回收相关操作","u":"/docs/note/golang/debug","h":"#1-内存和垃圾回收相关操作","p":577},{"i":581,"t":"2. 堆栈信息操作","u":"/docs/note/golang/debug","h":"#2-堆栈信息操作","p":577},{"i":583,"t":"3. 构建信息读取","u":"/docs/note/golang/debug","h":"#3-构建信息读取","p":577},{"i":585,"t":"4. 实际应用示例","u":"/docs/note/golang/debug","h":"#4-实际应用示例","p":577},{"i":586,"t":"4.1. 内存监控工具","u":"/docs/note/golang/debug","h":"#41-内存监控工具","p":577},{"i":588,"t":"4.2. 增强的panic处理","u":"/docs/note/golang/debug","h":"#42-增强的panic处理","p":577},{"i":590,"t":"4.3. 构建信息展示","u":"/docs/note/golang/debug","h":"#43-构建信息展示","p":577},{"i":592,"t":"5. 注意事项","u":"/docs/note/golang/debug","h":"#5-注意事项","p":577},{"i":595,"t":"1. 概述","u":"/docs/note/golang/design/algorithm/token_bucket","h":"#1-概述","p":594},{"i":597,"t":"2. 基本原理","u":"/docs/note/golang/design/algorithm/token_bucket","h":"#2-基本原理","p":594},{"i":599,"t":"3. 与漏桶（Leaky Bucket）区别","u":"/docs/note/golang/design/algorithm/token_bucket","h":"#3-与漏桶leaky-bucket区别","p":594},{"i":601,"t":"4. 代码实现示例（Golang）","u":"/docs/note/golang/design/algorithm/token_bucket","h":"#4-代码实现示例golang","p":594},{"i":603,"t":"5. 应用场景","u":"/docs/note/golang/design/algorithm/token_bucket","h":"#5-应用场景","p":594},{"i":605,"t":"6. 优缺点","u":"/docs/note/golang/design/algorithm/token_bucket","h":"#6-优缺点","p":594},{"i":607,"t":"7. 带优先级的Token Bucket算法","u":"/docs/note/golang/design/algorithm/token_bucket","h":"#7-带优先级的token-bucket算法","p":594},{"i":609,"t":"7.1每个优先级一个桶","u":"/docs/note/golang/design/algorithm/token_bucket","h":"#71每个优先级一个桶","p":594},{"i":611,"t":"7.2 调度器获取令牌时按优先级顺序尝试","u":"/docs/note/golang/design/algorithm/token_bucket","h":"#72-调度器获取令牌时按优先级顺序尝试","p":594},{"i":613,"t":"7.3  目标特性","u":"/docs/note/golang/design/algorithm/token_bucket","h":"#73--目标特性","p":594},{"i":615,"t":"7.4 示例","u":"/docs/note/golang/design/algorithm/token_bucket","h":"#74-示例","p":594},{"i":619,"t":"1. 微内核核心设计","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#1-微内核核心设计","p":617},{"i":620,"t":"1.1 特点","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#11-特点","p":617},{"i":622,"t":"1.2 核心组件","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#12-核心组件","p":617},{"i":624,"t":"2. Go 实现 microkernel","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#2-go-实现-microkernel","p":617},{"i":625,"t":"2.1 定义 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#21-定义-kernel核心","p":617},{"i":627,"t":"2.2 实现示例服务（LogService）","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#22-实现示例服务logservice","p":617},{"i":629,"t":"2.3 主程序（运行微内核 + 服务）","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#23-主程序运行微内核--服务","p":617},{"i":631,"t":"2.4 运行结果","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#24-运行结果","p":617},{"i":633,"t":"3. 扩展方向","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#3-扩展方向","p":617},{"i":635,"t":"4. 总结","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#4-总结","p":617},{"i":639,"t":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#1-目标","p":637},{"i":641,"t":"2. 代码改动","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#2-代码改动","p":637},{"i":642,"t":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#21-kernel核心","p":637},{"i":644,"t":"2.2 LogService","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#22-logservice","p":637},{"i":646,"t":"2.3 主程序（运行微内核 + 服务）","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#23-主程序运行微内核--服务","p":637},{"i":648,"t":"2.4 运行结果","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#24-运行结果","p":637},{"i":650,"t":"2.5 优化函数和变量命名","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#25-优化函数和变量命名","p":637},{"i":652,"t":"","u":"/docs/note/golang/design/microkernel/microkernel2","h":"","p":637},{"i":654,"t":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel3","h":"#1-目标","p":653},{"i":656,"t":"2. 代码改动","u":"/docs/note/golang/design/microkernel/microkernel3","h":"#2-代码改动","p":653},{"i":658,"t":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel3","h":"#21-kernel核心","p":653},{"i":660,"t":"2.2 LogService","u":"/docs/note/golang/design/microkernel/microkernel3","h":"#22-logservice","p":653},{"i":662,"t":"2.3 运行结果","u":"/docs/note/golang/design/microkernel/microkernel3","h":"#23-运行结果","p":653},{"i":665,"t":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel4","h":"#1-目标","p":664},{"i":667,"t":"2. 代码改动","u":"/docs/note/golang/design/microkernel/microkernel4","h":"#2-代码改动","p":664},{"i":668,"t":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel4","h":"#21-kernel核心","p":664},{"i":670,"t":"2.2 LogService","u":"/docs/note/golang/design/microkernel/microkernel4","h":"#22-logservice","p":664},{"i":672,"t":"2.3 增加另一个类似的EchoService","u":"/docs/note/golang/design/microkernel/microkernel4","h":"#23-增加另一个类似的echoservice","p":664},{"i":674,"t":"2.4 运行结果","u":"/docs/note/golang/design/microkernel/microkernel4","h":"#24-运行结果","p":664},{"i":677,"t":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel5","h":"#1-目标","p":676},{"i":679,"t":"2. 代码改动","u":"/docs/note/golang/design/microkernel/microkernel5","h":"#2-代码改动","p":676},{"i":680,"t":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel5","h":"#21-kernel核心","p":676},{"i":682,"t":"2.2 运行结果","u":"/docs/note/golang/design/microkernel/microkernel5","h":"#22-运行结果","p":676},{"i":686,"t":"1. Future-Proof 机制的关键原则","u":"/docs/note/golang/design/future_proof","h":"","p":684},{"i":688,"t":"1.1.  松耦合（Loose Coupling）","u":"/docs/note/golang/design/future_proof","h":"#11--松耦合loose-coupling","p":684},{"i":690,"t":"1.2. 可扩展性（Extensibility）","u":"/docs/note/golang/design/future_proof","h":"#12-可扩展性extensibility","p":684},{"i":692,"t":"1.3. 配置化而非硬编码","u":"/docs/note/golang/design/future_proof","h":"#13-配置化而非硬编码","p":684},{"i":694,"t":"1.4. 协议与数据格式的兼容性","u":"/docs/note/golang/design/future_proof","h":"#14-协议与数据格式的兼容性","p":684},{"i":696,"t":"1.5. 并发模型的可适应性","u":"/docs/note/golang/design/future_proof","h":"#15-并发模型的可适应性","p":684},{"i":698,"t":"1.6. 可观测性（Observability）","u":"/docs/note/golang/design/future_proof","h":"#16-可观测性observability","p":684},{"i":700,"t":"1.7. 防御性编程","u":"/docs/note/golang/design/future_proof","h":"#17-防御性编程","p":684},{"i":702,"t":"2. 聚合器示例","u":"/docs/note/golang/design/future_proof","h":"#2-聚合器示例","p":684},{"i":704,"t":"3. 反模式：非 Future-Proof 的设计","u":"/docs/note/golang/design/future_proof","h":"#3-反模式非-future-proof-的设计","p":684},{"i":706,"t":"4. 总结","u":"/docs/note/golang/design/future_proof","h":"#4-总结","p":684},{"i":709,"t":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel7","h":"#1-目标","p":708},{"i":711,"t":"2. 代码改动","u":"/docs/note/golang/design/microkernel/microkernel7","h":"#2-代码改动","p":708},{"i":712,"t":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel7","h":"#21-kernel核心","p":708},{"i":714,"t":"2.2 日志服务","u":"/docs/note/golang/design/microkernel/microkernel7","h":"#22-日志服务","p":708},{"i":716,"t":"2.3 main","u":"/docs/note/golang/design/microkernel/microkernel7","h":"#23-main","p":708},{"i":718,"t":"2.4 运行结果","u":"/docs/note/golang/design/microkernel/microkernel7","h":"#24-运行结果","p":708},{"i":721,"t":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel8","h":"#1-目标","p":720},{"i":723,"t":"2. 代码改动","u":"/docs/note/golang/design/microkernel/microkernel8","h":"#2-代码改动","p":720},{"i":724,"t":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel8","h":"#21-kernel核心","p":720},{"i":726,"t":"2.2 echo服务","u":"/docs/note/golang/design/microkernel/microkernel8","h":"#22-echo服务","p":720},{"i":728,"t":"2.3 main","u":"/docs/note/golang/design/microkernel/microkernel8","h":"#23-main","p":720},{"i":730,"t":"2.4 运行结果","u":"/docs/note/golang/design/microkernel/microkernel8","h":"#24-运行结果","p":720},{"i":733,"t":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel6","h":"#1-目标","p":732},{"i":735,"t":"2. 代码改动","u":"/docs/note/golang/design/microkernel/microkernel6","h":"#2-代码改动","p":732},{"i":736,"t":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel6","h":"#21-kernel核心","p":732},{"i":738,"t":"2.2 服务","u":"/docs/note/golang/design/microkernel/microkernel6","h":"#22-服务","p":732},{"i":740,"t":"2.3 运行结果","u":"/docs/note/golang/design/microkernel/microkernel6","h":"#23-运行结果","p":732},{"i":744,"t":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#1-目标","p":742},{"i":746,"t":"2. 状态存储设计","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#2-状态存储设计","p":742},{"i":747,"t":"2.1 存储文件设计","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#21-存储文件设计","p":742},{"i":749,"t":"2.2 状态管理模块：StateStore","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#22-状态管理模块statestore","p":742},{"i":751,"t":"3. 内核集成","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#3-内核集成","p":742},{"i":752,"t":"3.1 kernel 初始化集成StateStore","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#31-kernel-初始化集成statestore","p":742},{"i":754,"t":"3.2 注册服务时尝试自动加载状态","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#32-注册服务时尝试自动加载状态","p":742},{"i":756,"t":"3.3 停止服务时，保存状态","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#33-停止服务时保存状态","p":742},{"i":758,"t":"3.4 定时持久化状态","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#34-定时持久化状态","p":742},{"i":760,"t":"4. main","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#4-main","p":742},{"i":762,"t":"4.1 运行结果","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#41-运行结果","p":742},{"i":765,"t":"1. 概述","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#1-概述","p":764},{"i":767,"t":"2. 核心概念","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#2-核心概念","p":764},{"i":769,"t":"3. Go语言中的DIP实现方式","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#3-go语言中的dip实现方式","p":764},{"i":770,"t":"3.1 违反DIP的例子","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#31-违反dip的例子","p":764},{"i":772,"t":"3.2 遵循DIP的改进方案","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#32-遵循dip的改进方案","p":764},{"i":774,"t":"4. Go语言中实践DIP的技巧","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#4-go语言中实践dip的技巧","p":764},{"i":775,"t":"4.1 构造函数注入","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#41-构造函数注入","p":764},{"i":777,"t":"4.2 方法注入","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#42-方法注入","p":764},{"i":779,"t":"4.3 接口定义在调用方","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#43-接口定义在调用方","p":764},{"i":781,"t":"5. 实际应用案例","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#5-实际应用案例","p":764},{"i":782,"t":"5.1 数据库访问","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#51-数据库访问","p":764},{"i":784,"t":"5.2 HTTP服务","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#52-http服务","p":764},{"i":786,"t":"6. 依赖注入框架(可选)","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#6-依赖注入框架可选","p":764},{"i":788,"t":"7. 违反DIP的后果","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#7-违反dip的后果","p":764},{"i":790,"t":"8. 总结","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#8-总结","p":764},{"i":793,"t":"1. channel 交互","u":"/docs/note/golang/design/multi_goroutine","h":"#1-channel-交互","p":792},{"i":795,"t":"2.  增加 channel 状态判断","u":"/docs/note/golang/design/multi_goroutine","h":"#2--增加-channel-状态判断","p":792},{"i":796,"t":"2.1. 理解 channel 行为","u":"/docs/note/golang/design/multi_goroutine","h":"#21-理解-channel-行为","p":792},{"i":798,"t":"2.2. 使用判断channel 优化示例","u":"/docs/note/golang/design/multi_goroutine","h":"#22-使用判断channel-优化示例","p":792},{"i":800,"t":"3. 支持 context.Context","u":"/docs/note/golang/design/multi_goroutine","h":"#3-支持-contextcontext","p":792},{"i":802,"t":"4. CommandHandler 模式","u":"/docs/note/golang/design/multi_goroutine","h":"#4-commandhandler-模式","p":792},{"i":805,"t":"1. 概述","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#1-概述","p":804},{"i":807,"t":"2. 核心概念","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#2-核心概念","p":804},{"i":809,"t":"3. Go语言中的ISP实现方式","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#3-go语言中的isp实现方式","p":804},{"i":810,"t":"3.1 违反ISP的例子","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#31-违反isp的例子","p":804},{"i":812,"t":"3.2 遵循ISP的改进方案","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#32-遵循isp的改进方案","p":804},{"i":814,"t":"4. Go语言中实践ISP的技巧","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#4-go语言中实践isp的技巧","p":804},{"i":815,"t":"4.1 使用接口组合","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#41-使用接口组合","p":804},{"i":817,"t":"4.2 客户端特定接口","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#42-客户端特定接口","p":804},{"i":819,"t":"4.3 避免接口污染","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#43-避免接口污染","p":804},{"i":821,"t":"5. 实际应用案例","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#5-实际应用案例","p":804},{"i":822,"t":"5.1 数据库访问层","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#51-数据库访问层","p":804},{"i":824,"t":"5.2 HTTP中间件","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#52-http中间件","p":804},{"i":826,"t":"6. 违反ISP的后果","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#6-违反isp的后果","p":804},{"i":828,"t":"7. 总结","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#7-总结","p":804},{"i":831,"t":"1. 概述","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#1-概述","p":830},{"i":833,"t":"2. 核心概念","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#2-核心概念","p":830},{"i":835,"t":"3. Go语言中的LSP实现方式","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#3-go语言中的lsp实现方式","p":830},{"i":836,"t":"3.1 通过接口实现LSP","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#31-通过接口实现lsp","p":830},{"i":838,"t":"3.2 符合LSP的改进方案","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#32-符合lsp的改进方案","p":830},{"i":840,"t":"4. 违反LSP的常见情况与重构","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#4-违反lsp的常见情况与重构","p":830},{"i":841,"t":"4.1 违反情况1：子类削弱前置条件","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#41-违反情况1子类削弱前置条件","p":830},{"i":843,"t":"4.2 违反情况2：子类强化后置条件","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#42-违反情况2子类强化后置条件","p":830},{"i":845,"t":"5. Go语言中实践LSP的技巧","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#5-go语言中实践lsp的技巧","p":830},{"i":846,"t":"5.1 使用组合代替继承","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#51-使用组合代替继承","p":830},{"i":848,"t":"5.2 接口隔离加强","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#52-接口隔离加强","p":830},{"i":850,"t":"6. LSP的实际应用场景","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#6-lsp的实际应用场景","p":830},{"i":852,"t":"7. 总结","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#7-总结","p":830},{"i":856,"t":"SOLID原则","u":"/docs/note/golang/design/oop_pinciple/principle","h":"#solid原则","p":854},{"i":858,"t":"其他重要原则","u":"/docs/note/golang/design/oop_pinciple/principle","h":"#其他重要原则","p":854},{"i":860,"t":"个人总结","u":"/docs/note/golang/design/oop_pinciple/principle","h":"#个人总结","p":854},{"i":863,"t":"1. 概述","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#1-概述","p":862},{"i":865,"t":"2. 为什么需要SRP？","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#2-为什么需要srp","p":862},{"i":866,"t":"优点：","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#优点","p":862},{"i":868,"t":"违反SRP的后果：","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#违反srp的后果","p":862},{"i":870,"t":"3. Go语言中的SRP示例","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#3-go语言中的srp示例","p":862},{"i":871,"t":"3.1 违反SRP的例子","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#31-违反srp的例子","p":862},{"i":873,"t":"3.2 遵循SRP的改进版本","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#32-遵循srp的改进版本","p":862},{"i":875,"t":"4. Go语言中实践SRP的技巧","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#4-go语言中实践srp的技巧","p":862},{"i":876,"t":"4.1 接口设计","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#41-接口设计","p":862},{"i":878,"t":"4.2 组合代替继承","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#42-组合代替继承","p":862},{"i":880,"t":"4.3 函数职责单一","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#43-函数职责单一","p":862},{"i":882,"t":"5. 何时应用SRP？","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#5-何时应用srp","p":862},{"i":883,"t":"应该应用SRP的情况：","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#应该应用srp的情况","p":862},{"i":885,"t":"不必过度应用：","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#不必过度应用","p":862},{"i":887,"t":"6. 总结","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#6-总结","p":862},{"i":890,"t":"1. 概述","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#1-概述","p":889},{"i":892,"t":"2. 核心概念","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#2-核心概念","p":889},{"i":894,"t":"3. Go语言中的OCP实现方式","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#3-go语言中的ocp实现方式","p":889},{"i":895,"t":"3.1 使用接口实现OCP","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#31-使用接口实现ocp","p":889},{"i":897,"t":"3.2 添加新支付方式（扩展）","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#32-添加新支付方式扩展","p":889},{"i":899,"t":"4. 违反OCP的示例与重构","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#4-违反ocp的示例与重构","p":889},{"i":900,"t":"4.1 违反OCP的代码","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#41-违反ocp的代码","p":889},{"i":902,"t":"4.2 重构为符合OCP的代码","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#42-重构为符合ocp的代码","p":889},{"i":904,"t":"5. Go语言中实践OCP的高级技巧","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#5-go语言中实践ocp的高级技巧","p":889},{"i":905,"t":"5.1 函数选项模式(Functional Options)","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#51-函数选项模式functional-options","p":889},{"i":907,"t":"5.2 中间件模式","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#52-中间件模式","p":889},{"i":909,"t":"6. OCP的实际应用场景","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#6-ocp的实际应用场景","p":889},{"i":911,"t":"7. OCP的日志系统","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#7-ocp的日志系统","p":889},{"i":913,"t":"7.1 基础设计","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#71-基础设计","p":889},{"i":915,"t":"7.2 组合日志器（支持多种输出）","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#72-组合日志器支持多种输出","p":889},{"i":917,"t":"7.3 使用工厂方法创建日志器","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#73-使用工厂方法创建日志器","p":889},{"i":919,"t":"7.4 添加网络日志输出（扩展示例）","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#74-添加网络日志输出扩展示例","p":889},{"i":921,"t":"7.5 完整使用示例","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#75-完整使用示例","p":889},{"i":923,"t":"8. 总结","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#8-总结","p":889},{"i":926,"t":"1. 概述","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#1-概述","p":925},{"i":928,"t":"2. 简单工厂（Simple Factory）","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#2-简单工厂simple-factory","p":925},{"i":929,"t":"2.1 示例：图形创建器","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#21-示例图形创建器","p":925},{"i":931,"t":"2.2 示例：网络连接","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#22-示例网络连接","p":925},{"i":933,"t":"2.3 优缺点","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#23-优缺点","p":925},{"i":935,"t":"3. 工厂方法（Factory Method）","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#3-工厂方法factory-method","p":925},{"i":936,"t":"3.1 示例：数据库连接器","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#31-示例数据库连接器","p":925},{"i":938,"t":"3.2 示例：日志系统","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#32-示例日志系统","p":925},{"i":940,"t":"3.3 优缺点","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#33-优缺点","p":925},{"i":942,"t":"4. 抽象工厂（Abstract Factory）","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#4-抽象工厂abstract-factory","p":925},{"i":943,"t":"4.1 示例：UI 工厂（按钮 + 文本框）","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#41-示例ui-工厂按钮--文本框","p":925},{"i":945,"t":"4.2 优缺点","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#42-优缺点","p":925},{"i":947,"t":"5. 函数式工厂（Functional Factory）","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#5-函数式工厂functional-factory","p":925},{"i":949,"t":"5.1 优点","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#51-优点","p":925},{"i":951,"t":"6.  工厂模式应用场景","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#6--工厂模式应用场景","p":925},{"i":953,"t":"7. 小结对比","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#7-小结对比","p":925},{"i":956,"t":"1. ide 警告找不到方法","u":"/docs/note/golang/goland","h":"#1-ide-警告找不到方法","p":955},{"i":959,"t":"错误处理","u":"/docs/note/golang/jotting","h":"#错误处理","p":958},{"i":961,"t":"普通函数","u":"/docs/note/golang/jotting","h":"#普通函数","p":958},{"i":963,"t":"结构体方法","u":"/docs/note/golang/jotting","h":"#结构体方法","p":958},{"i":965,"t":"Go 中何时使用 chan","u":"/docs/note/golang/jotting","h":"#go-中何时使用-chan","p":958},{"i":967,"t":"✅ 推荐使用的场景","u":"/docs/note/golang/jotting","h":"#-推荐使用的场景","p":958},{"i":969,"t":"❌ 不推荐的场景","u":"/docs/note/golang/jotting","h":"#-不推荐的场景","p":958},{"i":971,"t":"go mod tidy 报错 GOSUMDB","u":"/docs/note/golang/jotting","h":"#go-mod-tidy-报错-gosumdb","p":958},{"i":973,"t":"空接口 interface{} 与任意类型","u":"/docs/note/golang/jotting","h":"#空接口-interface-与任意类型","p":958},{"i":975,"t":"类型断言与转换","u":"/docs/note/golang/jotting","h":"#类型断言与转换","p":958},{"i":977,"t":"空结构体 struct{}","u":"/docs/note/golang/jotting","h":"#空结构体-struct","p":958},{"i":979,"t":"if 判断语法简化","u":"/docs/note/golang/jotting","h":"#if-判断语法简化","p":958},{"i":982,"t":"1. 简介","u":"/docs/note/golang/kingpin","h":"#1-简介","p":981},{"i":984,"t":"2. 安装","u":"/docs/note/golang/kingpin","h":"#2-安装","p":981},{"i":986,"t":"3. 基本用法","u":"/docs/note/golang/kingpin","h":"#3-基本用法","p":981},{"i":987,"t":"3.1 使用默认 App","u":"/docs/note/golang/kingpin","h":"#31-使用默认-app","p":981},{"i":989,"t":"3.2 定义命令行参数（使用 New 方法）","u":"/docs/note/golang/kingpin","h":"#32-定义命令行参数使用-new-方法","p":981},{"i":991,"t":"3.3 使用子命令","u":"/docs/note/golang/kingpin","h":"#33-使用子命令","p":981},{"i":993,"t":"3.4 绑定环境变量","u":"/docs/note/golang/kingpin","h":"#34-绑定环境变量","p":981},{"i":995,"t":"3.5 处理布尔标志","u":"/docs/note/golang/kingpin","h":"#35-处理布尔标志","p":981},{"i":997,"t":"3.6 解析列表参数","u":"/docs/note/golang/kingpin","h":"#36-解析列表参数","p":981},{"i":999,"t":"4. 其他高级用法","u":"/docs/note/golang/kingpin","h":"#4-其他高级用法","p":981},{"i":1000,"t":"4.1 自定义解析器","u":"/docs/note/golang/kingpin","h":"#41-自定义解析器","p":981},{"i":1002,"t":"5. 总结","u":"/docs/note/golang/kingpin","h":"#5-总结","p":981},{"i":1004,"t":"特点总结","u":"/docs/note/golang/kingpin","h":"#特点总结","p":981},{"i":1007,"t":"1. Golang 默认 JSON 解析 (encoding/json)","u":"/docs/note/golang/json","h":"#1-golang-默认-json-解析-encodingjson","p":1006},{"i":1009,"t":"2. 第三方 JSON 解析库","u":"/docs/note/golang/json","h":"#2-第三方-json-解析库","p":1006},{"i":1010,"t":"2.1 github.com/tidwall/gjson（高效 JSON 读取）","u":"/docs/note/golang/json","h":"#21-githubcomtidwallgjson高效-json-读取","p":1006},{"i":1012,"t":"优缺点对比","u":"/docs/note/golang/json","h":"#优缺点对比","p":1006},{"i":1014,"t":"2.2 github.com/json-iterator/go（高性能 JSON 解析）","u":"/docs/note/golang/json","h":"#22-githubcomjson-iteratorgo高性能-json-解析","p":1006},{"i":1016,"t":"优缺点对比","u":"/docs/note/golang/json","h":"#优缺点对比-1","p":1006},{"i":1018,"t":"2.3 github.com/buger/jsonparser（流式 JSON 解析）","u":"/docs/note/golang/json","h":"#23-githubcombugerjsonparser流式-json-解析","p":1006},{"i":1020,"t":"优缺点对比","u":"/docs/note/golang/json","h":"#优缺点对比-2","p":1006},{"i":1022,"t":"3. JSON 解析库对比","u":"/docs/note/golang/json","h":"#3-json-解析库对比","p":1006},{"i":1024,"t":"总结与推荐","u":"/docs/note/golang/json","h":"#总结与推荐","p":1006},{"i":1027,"t":"1. 引言","u":"/docs/note/golang/serialization","h":"#1-引言","p":1026},{"i":1029,"t":"2. 标准库的序列化支持","u":"/docs/note/golang/serialization","h":"#2-标准库的序列化支持","p":1026},{"i":1030,"t":"2.1 JSON序列化","u":"/docs/note/golang/serialization","h":"#21-json序列化","p":1026},{"i":1032,"t":"2.2 结构体标签","u":"/docs/note/golang/serialization","h":"#22-结构体标签","p":1026},{"i":1034,"t":"3. 自定义类型序列化","u":"/docs/note/golang/serialization","h":"#3-自定义类型序列化","p":1026},{"i":1036,"t":"3.1 实现Marshaler接口","u":"/docs/note/golang/serialization","h":"#31-实现marshaler接口","p":1026},{"i":1038,"t":"3.2 实现Unmarshaler接口","u":"/docs/note/golang/serialization","h":"#32-实现unmarshaler接口","p":1026},{"i":1040,"t":"4. 复合类型处理","u":"/docs/note/golang/serialization","h":"#4-复合类型处理","p":1026},{"i":1041,"t":"4.1 嵌套结构体","u":"/docs/note/golang/serialization","h":"#41-嵌套结构体","p":1026},{"i":1043,"t":"4.2 接口类型处理","u":"/docs/note/golang/serialization","h":"#42-接口类型处理","p":1026},{"i":1045,"t":"5. 性能优化","u":"/docs/note/golang/serialization","h":"#5-性能优化","p":1026},{"i":1046,"t":"5.1 使用缓冲池","u":"/docs/note/golang/serialization","h":"#51-使用缓冲池","p":1026},{"i":1048,"t":"5.2 使用第三方库","u":"/docs/note/golang/serialization","h":"#52-使用第三方库","p":1026},{"i":1050,"t":"6. 常见问题解决","u":"/docs/note/golang/serialization","h":"#6-常见问题解决","p":1026},{"i":1051,"t":"6.1 循环引用问题","u":"/docs/note/golang/serialization","h":"#61-循环引用问题","p":1026},{"i":1053,"t":"6.2 时间格式处理","u":"/docs/note/golang/serialization","h":"#62-时间格式处理","p":1026},{"i":1055,"t":"7. 测试验证","u":"/docs/note/golang/serialization","h":"#7-测试验证","p":1026},{"i":1056,"t":"7.1 单元测试示例","u":"/docs/note/golang/serialization","h":"#71-单元测试示例","p":1026},{"i":1058,"t":"8. 最佳实践","u":"/docs/note/golang/serialization","h":"#8-最佳实践","p":1026},{"i":1060,"t":"附录：完整示例","u":"/docs/note/golang/serialization","h":"#附录完整示例","p":1026},{"i":1063,"t":"1. 简介","u":"/docs/note/golang/validator","h":"#1-简介","p":1062},{"i":1065,"t":"2. 安装","u":"/docs/note/golang/validator","h":"#2-安装","p":1062},{"i":1067,"t":"3. 基本使用","u":"/docs/note/golang/validator","h":"#3-基本使用","p":1062},{"i":1069,"t":"4. 常见的内置验证标签","u":"/docs/note/golang/validator","h":"#4-常见的内置验证标签","p":1062},{"i":1071,"t":"5. 自定义验证","u":"/docs/note/golang/validator","h":"#5-自定义验证","p":1062},{"i":1073,"t":"6. 结构体嵌套验证","u":"/docs/note/golang/validator","h":"#6-结构体嵌套验证","p":1062},{"i":1075,"t":"7. 处理错误信息","u":"/docs/note/golang/validator","h":"#7-处理错误信息","p":1062},{"i":1077,"t":"8. 结论","u":"/docs/note/golang/validator","h":"#8-结论","p":1062},{"i":1080,"t":"1. 简介","u":"/docs/note/golang/syscall","h":"#1-简介","p":1079},{"i":1082,"t":"2. 安装","u":"/docs/note/golang/syscall","h":"#2-安装","p":1079},{"i":1084,"t":"3. 常见 Golang golang.org/x/sys/unix","u":"/docs/note/golang/syscall","h":"#3-常见-golang-golangorgxsysunix","p":1079},{"i":1085,"t":"1. 简介","u":"/docs/note/golang/syscall","h":"#1-简介-1","p":1079},{"i":1087,"t":"2. 安装","u":"/docs/note/golang/syscall","h":"#2-安装-1","p":1079},{"i":1089,"t":"3. 常见 unix 用法","u":"/docs/note/golang/syscall","h":"#3-常见-unix-用法","p":1079},{"i":1090,"t":"3.1 获取进程 ID","u":"/docs/note/golang/syscall","h":"#31-获取进程-id","p":1079},{"i":1092,"t":"3.2 文件操作","u":"/docs/note/golang/syscall","h":"#32-文件操作","p":1079},{"i":1094,"t":"3.3 进程控制","u":"/docs/note/golang/syscall","h":"#33-进程控制","p":1079},{"i":1096,"t":"3.4 信号处理","u":"/docs/note/golang/syscall","h":"#34-信号处理","p":1079},{"i":1098,"t":"3.5 内存管理","u":"/docs/note/golang/syscall","h":"#35-内存管理","p":1079},{"i":1100,"t":"4. unix 作为 syscall 的替代方案","u":"/docs/note/golang/syscall","h":"#4-unix-作为-syscall-的替代方案","p":1079},{"i":1102,"t":"5. 结论","u":"/docs/note/golang/syscall","h":"#5-结论","p":1079},{"i":1104,"t":"6. 参考","u":"/docs/note/golang/syscall","h":"#6-参考","p":1079},{"i":1106,"t":"** unix 用法**","u":"/docs/note/golang/syscall","h":"#-unix-用法","p":1079},{"i":1107,"t":"3.1 获取进程 ID","u":"/docs/note/golang/syscall","h":"#31-获取进程-id-1","p":1079},{"i":1109,"t":"3.2 文件操作","u":"/docs/note/golang/syscall","h":"#32-文件操作-1","p":1079},{"i":1111,"t":"3.3 进程控制","u":"/docs/note/golang/syscall","h":"#33-进程控制-1","p":1079},{"i":1113,"t":"3.4 信号处理","u":"/docs/note/golang/syscall","h":"#34-信号处理-1","p":1079},{"i":1115,"t":"3.5 内存管理","u":"/docs/note/golang/syscall","h":"#35-内存管理-1","p":1079},{"i":1117,"t":"4. unix 作为 syscall 的替代方案","u":"/docs/note/golang/syscall","h":"#4-unix-作为-syscall-的替代方案-1","p":1079},{"i":1119,"t":"5. 结论","u":"/docs/note/golang/syscall","h":"#5-结论-1","p":1079},{"i":1121,"t":"6. 参考","u":"/docs/note/golang/syscall","h":"#6-参考-1","p":1079},{"i":1124,"t":"1. 反射（Reflect）概述","u":"/docs/note/golang/reflect","h":"#1-反射reflect概述","p":1123},{"i":1126,"t":"2. 反射的基本类型","u":"/docs/note/golang/reflect","h":"#2-反射的基本类型","p":1123},{"i":1128,"t":"2.1 获取变量的类型和值","u":"/docs/note/golang/reflect","h":"#21-获取变量的类型和值","p":1123},{"i":1130,"t":"3. 反射修改变量值","u":"/docs/note/golang/reflect","h":"#3-反射修改变量值","p":1123},{"i":1132,"t":"4. 反射处理结构体","u":"/docs/note/golang/reflect","h":"#4-反射处理结构体","p":1123},{"i":1133,"t":"4.1 获取结构体字段信息","u":"/docs/note/golang/reflect","h":"#41-获取结构体字段信息","p":1123},{"i":1135,"t":"4.2 解析结构体标签（Tag）","u":"/docs/note/golang/reflect","h":"#42-解析结构体标签tag","p":1123},{"i":1137,"t":"5. 反射调用方法","u":"/docs/note/golang/reflect","h":"#5-反射调用方法","p":1123},{"i":1139,"t":"6. 反射的局限性","u":"/docs/note/golang/reflect","h":"#6-反射的局限性","p":1123},{"i":1141,"t":"7. 反射最佳实践","u":"/docs/note/golang/reflect","h":"#7-反射最佳实践","p":1123},{"i":1144,"t":"1. 概述","u":"/docs/note/os/chroot","h":"#1-概述","p":1143},{"i":1146,"t":"2. 工作原理","u":"/docs/note/os/chroot","h":"#2-工作原理","p":1143},{"i":1148,"t":"3. 基本用法","u":"/docs/note/os/chroot","h":"#3-基本用法","p":1143},{"i":1149,"t":"3.1. 进入 chroot 环境","u":"/docs/note/os/chroot","h":"#31-进入-chroot-环境","p":1143},{"i":1151,"t":"3.2. 在 chroot 环境中执行命令","u":"/docs/note/os/chroot","h":"#32-在-chroot-环境中执行命令","p":1143},{"i":1153,"t":"4. 创建一个基本的 chroot 环境","u":"/docs/note/os/chroot","h":"#4-创建一个基本的-chroot-环境","p":1143},{"i":1155,"t":"5. 使用场景","u":"/docs/note/os/chroot","h":"#5-使用场景","p":1143},{"i":1156,"t":"5.1. 系统恢复","u":"/docs/note/os/chroot","h":"#51-系统恢复","p":1143},{"i":1158,"t":"5.2. 隔离环境（Sandbox）","u":"/docs/note/os/chroot","h":"#52-隔离环境sandbox","p":1143},{"i":1160,"t":"5.3. 软件包编译","u":"/docs/note/os/chroot","h":"#53-软件包编译","p":1143},{"i":1162,"t":"5.4. 运行特定版本的应用程序","u":"/docs/note/os/chroot","h":"#54-运行特定版本的应用程序","p":1143},{"i":1164,"t":"6. 注意事项","u":"/docs/note/os/chroot","h":"#6-注意事项","p":1143},{"i":1166,"t":"7. 总结","u":"/docs/note/os/chroot","h":"#7-总结","p":1143},{"i":1169,"t":"1. Unix Socket 简介","u":"/docs/note/golang/web_server_unix","h":"#1-unix-socket-简介","p":1168},{"i":1171,"t":"2. 使用标准库 net/http 实现","u":"/docs/note/golang/web_server_unix","h":"#2-使用标准库-nethttp-实现","p":1168},{"i":1172,"t":"2.1 基础实现","u":"/docs/note/golang/web_server_unix","h":"#21-基础实现","p":1168},{"i":1174,"t":"2.2 高级配置","u":"/docs/note/golang/web_server_unix","h":"#22-高级配置","p":1168},{"i":1176,"t":"3. 使用 Gin 框架实现","u":"/docs/note/golang/web_server_unix","h":"#3-使用-gin-框架实现","p":1168},{"i":1177,"t":"3.1 基础实现","u":"/docs/note/golang/web_server_unix","h":"#31-基础实现","p":1168},{"i":1179,"t":"3.2 生产环境建议","u":"/docs/note/golang/web_server_unix","h":"#32-生产环境建议","p":1168},{"i":1181,"t":"4. 客户端连接方式","u":"/docs/note/golang/web_server_unix","h":"#4-客户端连接方式","p":1168},{"i":1182,"t":"4.1 标准HTTP客户端","u":"/docs/note/golang/web_server_unix","h":"#41-标准http客户端","p":1168},{"i":1184,"t":"4.2 通用Socket客户端","u":"/docs/note/golang/web_server_unix","h":"#42-通用socket客户端","p":1168},{"i":1186,"t":"5. 性能优化建议","u":"/docs/note/golang/web_server_unix","h":"#5-性能优化建议","p":1168},{"i":1188,"t":"6. 常见问题解答","u":"/docs/note/golang/web_server_unix","h":"#6-常见问题解答","p":1168},{"i":1190,"t":"7. 实际应用场景","u":"/docs/note/golang/web_server_unix","h":"#7-实际应用场景","p":1168},{"i":1192,"t":"总结","u":"/docs/note/golang/web_server_unix","h":"#总结","p":1168},{"i":1196,"t":"查杀僵尸进程","u":"/docs/note/os/zombie","h":"#查杀僵尸进程","p":1194},{"i":1198,"t":"举例","u":"/docs/note/os/zombie","h":"#举例","p":1194},{"i":1199,"t":"孤儿进程","u":"/docs/note/os/zombie","h":"#孤儿进程","p":1194},{"i":1202,"t":"回收儿子","u":"/docs/note/os/zombie","h":"#回收儿子","p":1194},{"i":1205,"t":"1. GDB 概述","u":"/docs/note/os/debug/gdb","h":"#1-gdb-概述","p":1204},{"i":1207,"t":"1.1 GDB的历史和发展","u":"/docs/note/os/debug/gdb","h":"#11-gdb的历史和发展","p":1204},{"i":1209,"t":"1.2 GDB应用场景","u":"/docs/note/os/debug/gdb","h":"#12-gdb应用场景","p":1204},{"i":1211,"t":"2. GDB安装","u":"/docs/note/os/debug/gdb","h":"#2-gdb安装","p":1204},{"i":1212,"t":"2.1 使用包管理器安装","u":"/docs/note/os/debug/gdb","h":"#21-使用包管理器安装","p":1204},{"i":1214,"t":"2.2 源码编译安装","u":"/docs/note/os/debug/gdb","h":"#22-源码编译安装","p":1204},{"i":1216,"t":"3. GDB 基本功能","u":"/docs/note/os/debug/gdb","h":"#3-gdb-基本功能","p":1204},{"i":1217,"t":"3.1 启动GDB","u":"/docs/note/os/debug/gdb","h":"#31-启动gdb","p":1204},{"i":1219,"t":"3.2 调试带参数的程序","u":"/docs/note/os/debug/gdb","h":"#32-调试带参数的程序","p":1204},{"i":1221,"t":"3.3 调试运行中的进程","u":"/docs/note/os/debug/gdb","h":"#33-调试运行中的进程","p":1204},{"i":1223,"t":"3.4 基本调试命令","u":"/docs/note/os/debug/gdb","h":"#34-基本调试命令","p":1204},{"i":1225,"t":"3.5 断点管理","u":"/docs/note/os/debug/gdb","h":"#35-断点管理","p":1204},{"i":1227,"t":"3.6 变量与内存操作","u":"/docs/note/os/debug/gdb","h":"#36-变量与内存操作","p":1204},{"i":1229,"t":"3.7 寄存器操作","u":"/docs/note/os/debug/gdb","h":"#37-寄存器操作","p":1204},{"i":1231,"t":"4. 高级调试技巧","u":"/docs/note/os/debug/gdb","h":"#4-高级调试技巧","p":1204},{"i":1232,"t":"4.1 多进程调试","u":"/docs/note/os/debug/gdb","h":"#41-多进程调试","p":1204},{"i":1234,"t":"4.2 多线程调试","u":"/docs/note/os/debug/gdb","h":"#42-多线程调试","p":1204},{"i":1236,"t":"4.3 观察点(Watchpoints)","u":"/docs/note/os/debug/gdb","h":"#43-观察点watchpoints","p":1204},{"i":1238,"t":"4.4 捕获点(Catchpoints)","u":"/docs/note/os/debug/gdb","h":"#44-捕获点catchpoints","p":1204},{"i":1240,"t":"4.5 自动化调试","u":"/docs/note/os/debug/gdb","h":"#45-自动化调试","p":1204},{"i":1242,"t":"4.6 远程调试","u":"/docs/note/os/debug/gdb","h":"#46-远程调试","p":1204},{"i":1244,"t":"4.7 切换栈帧","u":"/docs/note/os/debug/gdb","h":"#47-切换栈帧","p":1204},{"i":1246,"t":"5. 调试信息与符号","u":"/docs/note/os/debug/gdb","h":"#5-调试信息与符号","p":1204},{"i":1247,"t":"5.1 编译时添加调试信息","u":"/docs/note/os/debug/gdb","h":"#51-编译时添加调试信息","p":1204},{"i":1249,"t":"5.2 分离调试信息","u":"/docs/note/os/debug/gdb","h":"#52-分离调试信息","p":1204},{"i":1251,"t":"5.3 加载调试信息","u":"/docs/note/os/debug/gdb","h":"#53-加载调试信息","p":1204},{"i":1253,"t":"6. 调试案例","u":"/docs/note/os/debug/gdb","h":"#6-调试案例","p":1204},{"i":1254,"t":"6.1 段错误调试","u":"/docs/note/os/debug/gdb","h":"#61-段错误调试","p":1204},{"i":1256,"t":"6.2 内存泄漏检查","u":"/docs/note/os/debug/gdb","h":"#62-内存泄漏检查","p":1204},{"i":1258,"t":"6.3 死锁检测","u":"/docs/note/os/debug/gdb","h":"#63-死锁检测","p":1204},{"i":1260,"t":"7. GDB 实现原理","u":"/docs/note/os/debug/gdb","h":"#7-gdb-实现原理","p":1204},{"i":1261,"t":"7.1 ptrace系统调用","u":"/docs/note/os/debug/gdb","h":"#71-ptrace系统调用","p":1204},{"i":1263,"t":"7.2 断点实现原理","u":"/docs/note/os/debug/gdb","h":"#72-断点实现原理","p":1204},{"i":1265,"t":"8. 参考资源","u":"/docs/note/os/debug/gdb","h":"#8-参考资源","p":1204}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/6",[0,7.623,1,7.623]],["t/8",[2,7.623,3,7.623]],["t/10",[4,6.755,5,6.755,6,6.755]],["t/14",[7,8.748]],["t/16",[8,8.748]],["t/18",[9,8.748]],["t/20",[10,8.748]],["t/25",[11,0.171]],["t/26",[12,6.085]],["t/28",[13,5.809]],["t/30",[14,3.794]],["t/32",[11,0.154]],["t/33",[12,6.085]],["t/35",[15,5.048]],["t/37",[14,3.794]],["t/39",[11,0.154]],["t/40",[12,6.085]],["t/42",[15,5.048]],["t/44",[14,3.794]],["t/46",[11,0.154]],["t/47",[12,6.085]],["t/49",[15,5.048]],["t/51",[16,7.163]],["t/53",[14,3.794]],["t/55",[11,0.154]],["t/56",[12,6.085]],["t/58",[15,5.048]],["t/60",[14,3.794]],["t/62",[11,0.154]],["t/63",[12,6.085]],["t/65",[15,5.048]],["t/67",[14,3.794]],["t/69",[11,0.154]],["t/70",[12,6.085]],["t/72",[15,5.048]],["t/74",[14,3.794]],["t/76",[11,0.154]],["t/77",[12,6.085]],["t/79",[15,5.048]],["t/81",[14,3.794]],["t/83",[11,0.154]],["t/84",[12,6.085]],["t/86",[15,5.048]],["t/88",[14,3.794]],["t/91",[11,0.135,17,4.336]],["t/93",[11,0.089,16,4.122,18,4.61,19,6.288,20,4.61]],["t/95",[11,0.107,15,3.499,18,5.553,19,5.216]],["t/96",[11,0.147,14,2.63,21,4.027]],["t/98",[11,0.147,22,4.965,23,6.064]],["t/100",[11,0.107,15,3.499,19,5.216,20,5.553]],["t/101",[11,0.147,14,2.63,21,4.027]],["t/103",[11,0.147,22,4.965,24,4.218]],["t/105",[11,0.138,25,4.732,26,3.326,27,2.931]],["t/107",[11,0.135,28,5.99]],["t/111",[11,0.107,29,4.597,30,3.085,31,3.944]],["t/112",[11,0.158,32,5.531]],["t/114",[11,0.147,30,3.085,33,5.553]],["t/116",[11,0.168,34,3.192]],["t/117",[11,0.16,30,2.799,35,4.732]],["t/119",[11,0.152,14,2.183,34,2.65,36,2.948]],["t/121",[11,0.129,29,3.817,36,2.948,37,4.122,38,2.682]],["t/123",[11,0.147,38,3.231,39,3.551]],["t/125",[11,0.119,40,5.121,41,6.186]],["t/127",[11,0.135,27,4.061]],["t/130",[11,0.135,17,4.336]],["t/132",[11,0.135,42,6.981]],["t/134",[11,0.152,16,4.122,43,4.61,44,4.61]],["t/136",[11,0.138,14,2.386,34,2.896,45,3.129]],["t/138",[11,0.119,26,4.084,46,3.789]],["t/140",[11,0.135,47,5.062]],["t/142",[11,0.152,48,4.122,49,3.817,50,4.61]],["t/144",[11,0.138,49,4.171,51,5.038,52,5.038]],["t/146",[11,0.099,49,2.679,53,3.236,54,2.4,55,2.523,56,3.236,57,2.596,58,3.236,59,3.236,60,2.894]],["t/148",[11,0.147,61,3.551,62,5.553]],["t/150",[11,0.158,14,2.929]],["t/154",[11,0.135,61,4.465]],["t/156",[11,0.119,45,3.842,63,4.227]],["t/157",[11,0.168,30,3.085]],["t/159",[11,0.178]],["t/161",[11,0.129,29,3.817,36,2.948,37,4.122,38,2.682]],["t/163",[11,0.147,38,3.231,39,3.551]],["t/165",[11,0.129,64,3.817,65,3.502,66,3.955,67,4.61]],["t/167",[]],["t/169",[11,0.135,61,4.465]],["t/171",[11,0.119,45,3.842,63,4.227]],["t/173",[11,0.168,30,3.085]],["t/175",[11,0.178]],["t/177",[11,0.147,38,3.231,39,3.551]],["t/181",[11,0.152,68,4.61,69,4.61,70,3.817]],["t/183",[11,0.167,71,4.61,72,4.61]],["t/185",[11,0.168,73,5.553]],["t/187",[11,0.122,74,3.992,75,3.799,76,3.799,77,4.249,78,4.249]],["t/189",[11,0.138,79,5.038,80,5.038,81,5.038]],["t/191",[11,0.138,82,5.038,83,5.038,84,5.038]],["t/193",[11,0.16,85,5.038,86,5.038]],["t/195",[11,0.147,87,5.553,88,5.553]],["t/197",[11,0.107,14,2.63,54,4.118,89,5.553]],["t/199",[11,0.145,31,3.018,76,3.799,90,4.249,91,3.018]],["t/201",[11,0.135,27,4.061]],["t/204",[11,0.135,61,4.465]],["t/206",[11,0.119,45,3.842,63,4.227]],["t/207",[11,0.168,30,3.085]],["t/209",[11,0.178]],["t/211",[11,0.152,92,3.955,93,4.331,94,4.61]],["t/213",[11,0.147,38,3.231,39,3.551]],["t/216",[11,0.135,61,4.465]],["t/218",[11,0.119,45,3.842,63,4.227]],["t/219",[11,0.168,30,3.085]],["t/221",[11,0.147,38,3.231,39,3.551]],["t/224",[11,0.135,61,4.465]],["t/226",[11,0.119,45,3.842,63,4.227]],["t/227",[11,0.168,30,3.085]],["t/229",[11,0.158,36,3.956]],["t/231",[11,0.147,38,3.231,39,3.551]],["t/234",[11,0.135,61,4.465]],["t/236",[11,0.119,45,3.842,63,4.227]],["t/237",[11,0.168,30,3.085]],["t/239",[11,0.147,36,3.551,95,4.118]],["t/241",[11,0.178]],["t/243",[11,0.147,38,3.231,39,3.551]],["t/246",[11,0.135,61,4.465]],["t/248",[11,0.119,45,3.842,63,4.227]],["t/249",[11,0.168,30,3.085]],["t/251",[11,0.168,36,3.551]],["t/253",[11,0.178]],["t/255",[11,0.147,38,3.231,39,3.551]],["t/259",[11,0.135,61,4.465]],["t/261",[11,0.107,31,3.944,96,3.944,97,4.965]],["t/262",[11,0.138,31,3.578,97,4.504,98,4.504]],["t/264",[11,0.152,96,3.274,99,3.955,100,4.61]],["t/266",[11,0.119,101,6.186,102,5.531]],["t/267",[11,0.167,102,4.122,103,4.61]],["t/269",[11,0.109,36,2.35,57,2.947,60,3.285,96,2.609,104,3.674,105,3.674,106,3.452]],["t/271",[11,0.122,36,2.718,57,3.409,96,3.018,107,4.249,108,4.249]],["t/273",[11,0.129,75,4.122,96,3.274,109,4.61,110,4.61]],["t/275",[11,0.171]],["t/277",[11,0.147,38,3.231,39,3.551]],["t/280",[11,0.135,17,4.336]],["t/282",[11,0.119,30,3.436,111,4.822]],["t/284",[11,0.145,34,2.443,112,2.639,113,2.535,114,3.018]],["t/285",[11,0.16,115,3.044,116,4.171]],["t/287",[11,0.152,117,3.817,118,3.594,119,3.594]],["t/289",[11,0.145,112,2.639,113,2.535,120,2.959,121,3.081]],["t/290",[11,0.138,24,3.827,122,2.799,123,3.382]],["t/292",[11,0.138,123,3.382,124,4.322,125,4.732]],["t/294",[11,0.138,123,3.382,126,5.038,127,5.038]],["t/296",[11,0.107,46,3.401,128,4.118,129,4.765]],["t/297",[11,0.138,130,4.171,131,4.504,132,5.038]],["t/299",[11,0.168,133,4.965]],["t/301",[11,0.147,115,3.356,134,4.597]],["t/303",[11,0.135,27,4.061]],["t/306",[11,0.158,135,6.186]],["t/308",[11,0.138,92,4.322,96,3.578,136,4.322]],["t/309",[11,0.16,137,5.038,138,5.038]],["t/311",[11,0.145,14,2.012,64,3.518,122,2.361,136,3.646]],["t/313",[11,0.168,139,4.765]],["t/315",[11,0.158,91,4.393]],["t/318",[11,0.135,17,4.336]],["t/320",[11,0.119,30,3.436,111,4.822]],["t/322",[11,0.145,34,2.443,112,2.639,113,2.535,114,3.018]],["t/323",[11,0.16,115,3.044,116,4.171]],["t/325",[11,0.152,117,3.817,118,3.594,119,3.594]],["t/327",[11,0.145,112,2.639,113,2.535,120,2.959,121,3.081]],["t/328",[11,0.147,140,5.553,141,4.597]],["t/330",[11,0.147,141,4.597,142,3.795]],["t/332",[11,0.138,143,5.038,144,4.504,145,5.038]],["t/334",[11,0.107,46,3.401,128,4.118,129,4.765]],["t/335",[11,0.147,130,4.597,131,4.965]],["t/337",[11,0.168,36,3.551]],["t/339",[11,0.097,22,4.504,141,4.171,146,4.732,147,5.038]],["t/341",[11,0.147,115,3.356,134,4.597]],["t/343",[11,0.135,27,4.061]],["t/347",[11,0.135,70,5.78]],["t/349",[70,5.121,148,5.811,149,6.186]],["t/351",[27,4.061,150,6.981]],["t/354",[11,0.135,17,4.336]],["t/356",[11,0.119,30,3.436,111,4.822]],["t/358",[11,0.145,34,2.443,112,2.639,113,2.535,114,3.018]],["t/359",[11,0.152,34,2.65,123,3.095,151,4.61]],["t/361",[11,0.152,118,3.594,119,3.594,152,4.122]],["t/363",[11,0.129,115,2.786,153,3.817,154,3.594,155,3.817]],["t/364",[11,0.139,115,2.381,154,3.072,156,3.524,157,3.941,158,3.941]],["t/366",[11,0.133,115,2.22,154,2.864,156,3.285,159,3.674,160,3.674,161,3.452]],["t/368",[11,0.145,112,2.639,113,2.535,120,2.959,121,3.081]],["t/369",[11,0.129,24,3.502,122,2.561,162,4.122,163,4.122]],["t/371",[11,0.147,164,5.553,165,5.553]],["t/373",[11,0.138,26,3.326,46,3.086,128,3.736]],["t/375",[11,0.135,27,4.061]],["t/378",[11,0.135,17,4.336]],["t/380",[11,0.147,166,5.553,167,5.216]],["t/381",[168,7.163]],["t/383",[11,0.119,115,3.738,134,5.121]],["t/385",[11,0.152,14,2.183,112,2.863,113,2.75]],["t/386",[11,0.16,115,3.044,116,4.171]],["t/388",[11,0.152,117,3.817,118,3.594,169,4.331]],["t/390",[11,0.145,112,2.639,113,2.535,120,2.959,121,3.081]],["t/391",[11,0.147,31,3.944,123,3.728]],["t/393",[11,0.138,24,3.827,162,4.504,163,4.504]],["t/395",[11,0.138,65,3.827,170,5.038,171,5.038]],["t/397",[11,0.147,46,3.401,172,5.216]],["t/398",[11,0.107,46,3.401,154,4.329,173,5.553]],["t/400",[46,3.789,174,6.186,175,6.186]],["t/402",[11,0.135,27,4.061]],["t/405",[11,0.135,17,4.336]],["t/407",[11,0.119,30,3.436,111,4.822]],["t/409",[11,0.145,34,2.443,112,2.639,113,2.535,114,3.018]],["t/410",[11,0.152,34,2.65,122,2.561,123,3.095]],["t/412",[11,0.122,40,3.518,114,3.018,176,3.646,177,4.249,178,4.249]],["t/414",[11,0.138,14,2.386,115,3.044,155,4.171]],["t/415",[11,0.16,45,3.129,115,3.044]],["t/417",[11,0.152,45,2.863,152,4.122,155,3.817]],["t/419",[11,0.139,112,2.448,113,2.351,120,2.744,121,2.858,179,3.263]],["t/420",[11,0.16,65,3.228,91,3.018,180,4.249]],["t/422",[11,0.147,91,3.944,133,4.965]],["t/424",[11,0.138,26,3.326,46,3.086,128,3.736]],["t/426",[11,0.147,95,4.118,181,4.597]],["t/428",[11,0.147,31,3.944,182,4.765]],["t/430",[11,0.115,24,2.993,54,2.922,95,2.922,139,3.381,183,3.941,184,3.524]],["t/432",[11,0.115,54,2.922,95,2.922,122,2.189,142,2.693,185,2.693,186,3.263]],["t/434",[11,0.122,14,2.012,40,3.518,176,3.646,184,3.799,187,4.249]],["t/436",[11,0.138,14,2.386,122,2.799,188,4.732]],["t/438",[11,0.135,27,4.061]],["t/441",[11,0.147,189,5.216,190,5.553]],["t/444",[11,0.135,17,4.336]],["t/446",[11,0.16,185,3.443,191,5.038]],["t/447",[11,0.129,14,2.183,54,3.419,186,3.817,192,4.61]],["t/449",[11,0.147,14,2.63,193,5.553]],["t/451",[11,0.158,47,4.486]],["t/453",[11,0.16,142,3.443,185,3.443]],["t/454",[11,0.138,14,2.386,130,4.171,194,5.038]],["t/456",[11,0.138,14,2.386,95,3.736,181,4.171]],["t/458",[11,0.158,47,4.486]],["t/460",[11,0.16,185,3.443,195,5.038]],["t/461",[11,0.145,14,2.012,185,2.904,196,4.249,197,4.249]],["t/463",[11,0.158,47,4.486]],["t/465",[11,0.152,65,3.502,185,3.151,198,4.61]],["t/467",[11,0.158,168,5.531]],["t/469",[11,0.097,26,3.326,46,3.086,91,3.578,185,3.443]],["t/471",[11,0.119,199,6.186,200,4.962]],["t/474",[11,0.135,17,4.336]],["t/476",[11,0.135,201,5.442]],["t/478",[11,0.119,15,3.897,21,4.486]],["t/479",[11,0.138,202,5.501,203,5.038,204,4.732]],["t/481",[11,0.147,204,5.216,205,6.064]],["t/483",[11,0.147,204,5.216,206,5.553]],["t/485",[11,0.122,167,3.992,203,4.249,207,4.64,208,4.64,209,4.64]],["t/487",[11,0.119,25,5.811,26,4.084]],["t/489",[11,0.135,27,4.061]],["t/492",[11,0.16,210,5.038,211,4.171]],["t/494",[11,0.16,15,3.174,21,3.653]],["t/496",[11,0.174,55,3.928]],["t/498",[11,0.168,55,4.329]],["t/500",[11,0.119,15,3.897,179,5.121]],["t/501",[11,0.174,122,2.799]],["t/503",[11,0.168,122,3.085]],["t/505",[11,0.16,212,5.501,213,5.501]],["t/507",[11,0.147,214,6.064,215,5.553]],["t/509",[11,0.129,38,2.682,48,4.122,216,5.034,217,4.122]],["t/511",[11,0.147,92,4.765,218,6.064]],["t/513",[11,0.122,122,2.361,189,3.992,217,3.799,219,4.64,220,4.64]],["t/515",[11,0.135,28,5.99]],["t/518",[11,0.135,17,4.336]],["t/520",[11,0.135,221,7.623]],["t/521",[11,0.147,66,4.765,161,5.216]],["t/523",[11,0.168,222,4.218]],["t/525",[11,0.119,30,3.436,142,4.227]],["t/526",[11,0.168,186,4.597]],["t/528",[11,0.168,142,3.795]],["t/530",[11,0.168,142,3.795]],["t/532",[11,0.168,142,3.795]],["t/534",[11,0.119,91,4.393,122,3.436]],["t/535",[11,0.138,21,3.653,91,3.578,122,2.799]],["t/537",[11,0.138,14,2.386,223,5.501,224,5.501]],["t/539",[11,0.135,225,6.558]],["t/541",[11,0.119,120,4.307,226,5.811]],["t/543",[11,0.158,200,4.962]],["t/545",[11,0.135,27,4.061]],["t/549",[11,0.147,114,3.944,227,4.965]],["t/551",[11,0.168,32,4.965]],["t/553",[11,0.147,14,2.63,182,4.765]],["t/555",[11,0.167,15,2.905,228,5.034]],["t/557",[11,0.16,25,4.732,26,3.326]],["t/559",[11,0.178]],["t/561",[11,0.178]],["t/563",[11,0.152,229,5.034,230,5.034,231,5.034]],["t/565",[11,0.178]],["t/567",[11,0.171]],["t/569",[14,3.794]],["t/571",[11,0.171]],["t/573",[14,3.794]],["t/575",[27,4.66]],["t/579",[11,0.089,232,3.817,233,5.034,234,4.61,235,5.034,236,3.817]],["t/581",[11,0.107,236,4.597,237,6.064,238,4.765]],["t/583",[11,0.107,238,4.765,239,5.553,240,5.553]],["t/585",[11,0.107,14,2.63,46,3.401,128,4.118]],["t/586",[11,0.138,232,4.171,241,5.501,242,5.501]],["t/588",[11,0.16,243,5.501,244,4.171]],["t/590",[11,0.138,238,4.322,239,5.038,245,5.501]],["t/592",[11,0.135,225,6.558]],["t/595",[11,0.135,17,4.336]],["t/597",[11,0.135,42,6.981]],["t/599",[11,0.152,16,4.122,43,4.61,44,4.61]],["t/601",[11,0.138,14,2.386,34,2.896,45,3.129]],["t/603",[11,0.119,26,4.084,46,3.789]],["t/605",[11,0.135,47,5.062]],["t/607",[11,0.152,48,4.122,49,3.817,50,4.61]],["t/609",[11,0.138,49,4.171,51,5.038,52,5.038]],["t/611",[11,0.099,49,2.679,53,3.236,54,2.4,55,2.523,56,3.236,57,2.596,58,3.236,59,3.236,60,2.894]],["t/613",[11,0.147,61,3.551,62,5.553]],["t/615",[11,0.158,14,2.929]],["t/619",[11,0.107,29,4.597,30,3.085,31,3.944]],["t/620",[11,0.158,32,5.531]],["t/622",[11,0.147,30,3.085,33,5.553]],["t/624",[11,0.168,34,3.192]],["t/625",[11,0.16,30,2.799,35,4.732]],["t/627",[11,0.152,14,2.183,34,2.65,36,2.948]],["t/629",[11,0.129,29,3.817,36,2.948,37,4.122,38,2.682]],["t/631",[11,0.147,38,3.231,39,3.551]],["t/633",[11,0.119,40,5.121,41,6.186]],["t/635",[11,0.135,27,4.061]],["t/639",[11,0.135,61,4.465]],["t/641",[11,0.119,45,3.842,63,4.227]],["t/642",[11,0.168,30,3.085]],["t/644",[11,0.178]],["t/646",[11,0.129,29,3.817,36,2.948,37,4.122,38,2.682]],["t/648",[11,0.147,38,3.231,39,3.551]],["t/650",[11,0.129,64,3.817,65,3.502,66,3.955,67,4.61]],["t/652",[]],["t/654",[11,0.135,61,4.465]],["t/656",[11,0.119,45,3.842,63,4.227]],["t/658",[11,0.168,30,3.085]],["t/660",[11,0.178]],["t/662",[11,0.147,38,3.231,39,3.551]],["t/665",[11,0.135,61,4.465]],["t/667",[11,0.119,45,3.842,63,4.227]],["t/668",[11,0.168,30,3.085]],["t/670",[11,0.178]],["t/672",[11,0.152,92,3.955,93,4.331,94,4.61]],["t/674",[11,0.147,38,3.231,39,3.551]],["t/677",[11,0.135,61,4.465]],["t/679",[11,0.119,45,3.842,63,4.227]],["t/680",[11,0.168,30,3.085]],["t/682",[11,0.147,38,3.231,39,3.551]],["t/686",[11,0.152,68,4.61,69,4.61,70,3.817]],["t/688",[11,0.167,71,4.61,72,4.61]],["t/690",[11,0.168,73,5.553]],["t/692",[11,0.122,74,3.992,75,3.799,76,3.799,77,4.249,78,4.249]],["t/694",[11,0.138,79,5.038,80,5.038,81,5.038]],["t/696",[11,0.138,82,5.038,83,5.038,84,5.038]],["t/698",[11,0.16,85,5.038,86,5.038]],["t/700",[11,0.147,87,5.553,88,5.553]],["t/702",[11,0.107,14,2.63,54,4.118,89,5.553]],["t/704",[11,0.145,31,3.018,76,3.799,90,4.249,91,3.018]],["t/706",[11,0.135,27,4.061]],["t/709",[11,0.135,61,4.465]],["t/711",[11,0.119,45,3.842,63,4.227]],["t/712",[11,0.168,30,3.085]],["t/714",[11,0.147,36,3.551,95,4.118]],["t/716",[11,0.178]],["t/718",[11,0.147,38,3.231,39,3.551]],["t/721",[11,0.135,61,4.465]],["t/723",[11,0.119,45,3.842,63,4.227]],["t/724",[11,0.168,30,3.085]],["t/726",[11,0.168,36,3.551]],["t/728",[11,0.178]],["t/730",[11,0.147,38,3.231,39,3.551]],["t/733",[11,0.135,61,4.465]],["t/735",[11,0.119,45,3.842,63,4.227]],["t/736",[11,0.168,30,3.085]],["t/738",[11,0.158,36,3.956]],["t/740",[11,0.147,38,3.231,39,3.551]],["t/744",[11,0.135,61,4.465]],["t/746",[11,0.107,31,3.944,96,3.944,97,4.965]],["t/747",[11,0.138,31,3.578,97,4.504,98,4.504]],["t/749",[11,0.152,96,3.274,99,3.955,100,4.61]],["t/751",[11,0.119,101,6.186,102,5.531]],["t/752",[11,0.167,102,4.122,103,4.61]],["t/754",[11,0.109,36,2.35,57,2.947,60,3.285,96,2.609,104,3.674,105,3.674,106,3.452]],["t/756",[11,0.122,36,2.718,57,3.409,96,3.018,107,4.249,108,4.249]],["t/758",[11,0.129,75,4.122,96,3.274,109,4.61,110,4.61]],["t/760",[11,0.171]],["t/762",[11,0.147,38,3.231,39,3.551]],["t/765",[11,0.135,17,4.336]],["t/767",[11,0.119,30,3.436,111,4.822]],["t/769",[11,0.145,34,2.443,112,2.639,113,2.535,114,3.018]],["t/770",[11,0.16,115,3.044,116,4.171]],["t/772",[11,0.152,117,3.817,118,3.594,119,3.594]],["t/774",[11,0.145,112,2.639,113,2.535,120,2.959,121,3.081]],["t/775",[11,0.147,140,5.553,141,4.597]],["t/777",[11,0.147,141,4.597,142,3.795]],["t/779",[11,0.138,143,5.038,144,4.504,145,5.038]],["t/781",[11,0.107,46,3.401,128,4.118,129,4.765]],["t/782",[11,0.147,130,4.597,131,4.965]],["t/784",[11,0.168,36,3.551]],["t/786",[11,0.097,22,4.504,141,4.171,146,4.732,147,5.038]],["t/788",[11,0.147,115,3.356,134,4.597]],["t/790",[11,0.135,27,4.061]],["t/793",[11,0.158,135,6.186]],["t/795",[11,0.138,92,4.322,96,3.578,136,4.322]],["t/796",[11,0.16,137,5.038,138,5.038]],["t/798",[11,0.145,14,2.012,64,3.518,122,2.361,136,3.646]],["t/800",[11,0.168,139,4.765]],["t/802",[11,0.158,91,4.393]],["t/805",[11,0.135,17,4.336]],["t/807",[11,0.119,30,3.436,111,4.822]],["t/809",[11,0.145,34,2.443,112,2.639,113,2.535,114,3.018]],["t/810",[11,0.16,115,3.044,116,4.171]],["t/812",[11,0.152,117,3.817,118,3.594,119,3.594]],["t/814",[11,0.145,112,2.639,113,2.535,120,2.959,121,3.081]],["t/815",[11,0.138,24,3.827,122,2.799,123,3.382]],["t/817",[11,0.138,123,3.382,124,4.322,125,4.732]],["t/819",[11,0.138,123,3.382,126,5.038,127,5.038]],["t/821",[11,0.107,46,3.401,128,4.118,129,4.765]],["t/822",[11,0.138,130,4.171,131,4.504,132,5.038]],["t/824",[11,0.168,133,4.965]],["t/826",[11,0.147,115,3.356,134,4.597]],["t/828",[11,0.135,27,4.061]],["t/831",[11,0.135,17,4.336]],["t/833",[11,0.119,30,3.436,111,4.822]],["t/835",[11,0.145,34,2.443,112,2.639,113,2.535,114,3.018]],["t/836",[11,0.152,34,2.65,123,3.095,151,4.61]],["t/838",[11,0.152,118,3.594,119,3.594,152,4.122]],["t/840",[11,0.129,115,2.786,153,3.817,154,3.594,155,3.817]],["t/841",[11,0.139,115,2.381,154,3.072,156,3.524,157,3.941,158,3.941]],["t/843",[11,0.133,115,2.22,154,2.864,156,3.285,159,3.674,160,3.674,161,3.452]],["t/845",[11,0.145,112,2.639,113,2.535,120,2.959,121,3.081]],["t/846",[11,0.129,24,3.502,122,2.561,162,4.122,163,4.122]],["t/848",[11,0.147,164,5.553,165,5.553]],["t/850",[11,0.138,26,3.326,46,3.086,128,3.736]],["t/852",[11,0.135,27,4.061]],["t/856",[11,0.135,70,5.78]],["t/858",[70,5.121,148,5.811,149,6.186]],["t/860",[27,4.061,150,6.981]],["t/863",[11,0.135,17,4.336]],["t/865",[11,0.147,166,5.553,167,5.216]],["t/866",[168,7.163]],["t/868",[11,0.119,115,3.738,134,5.121]],["t/870",[11,0.152,14,2.183,112,2.863,113,2.75]],["t/871",[11,0.16,115,3.044,116,4.171]],["t/873",[11,0.152,117,3.817,118,3.594,169,4.331]],["t/875",[11,0.145,112,2.639,113,2.535,120,2.959,121,3.081]],["t/876",[11,0.147,31,3.944,123,3.728]],["t/878",[11,0.138,24,3.827,162,4.504,163,4.504]],["t/880",[11,0.138,65,3.827,170,5.038,171,5.038]],["t/882",[11,0.147,46,3.401,172,5.216]],["t/883",[11,0.107,46,3.401,154,4.329,173,5.553]],["t/885",[46,3.789,174,6.186,175,6.186]],["t/887",[11,0.135,27,4.061]],["t/890",[11,0.135,17,4.336]],["t/892",[11,0.119,30,3.436,111,4.822]],["t/894",[11,0.145,34,2.443,112,2.639,113,2.535,114,3.018]],["t/895",[11,0.152,34,2.65,122,2.561,123,3.095]],["t/897",[11,0.122,40,3.518,114,3.018,176,3.646,177,4.249,178,4.249]],["t/899",[11,0.138,14,2.386,115,3.044,155,4.171]],["t/900",[11,0.16,45,3.129,115,3.044]],["t/902",[11,0.152,45,2.863,152,4.122,155,3.817]],["t/904",[11,0.139,112,2.448,113,2.351,120,2.744,121,2.858,179,3.263]],["t/905",[11,0.16,65,3.228,91,3.018,180,4.249]],["t/907",[11,0.147,91,3.944,133,4.965]],["t/909",[11,0.138,26,3.326,46,3.086,128,3.736]],["t/911",[11,0.147,95,4.118,181,4.597]],["t/913",[11,0.147,31,3.944,182,4.765]],["t/915",[11,0.115,24,2.993,54,2.922,95,2.922,139,3.381,183,3.941,184,3.524]],["t/917",[11,0.115,54,2.922,95,2.922,122,2.189,142,2.693,185,2.693,186,3.263]],["t/919",[11,0.122,14,2.012,40,3.518,176,3.646,184,3.799,187,4.249]],["t/921",[11,0.138,14,2.386,122,2.799,188,4.732]],["t/923",[11,0.135,27,4.061]],["t/926",[11,0.135,17,4.336]],["t/928",[11,0.16,185,3.443,191,5.038]],["t/929",[11,0.129,14,2.183,54,3.419,186,3.817,192,4.61]],["t/931",[11,0.147,14,2.63,193,5.553]],["t/933",[11,0.158,47,4.486]],["t/935",[11,0.16,142,3.443,185,3.443]],["t/936",[11,0.138,14,2.386,130,4.171,194,5.038]],["t/938",[11,0.138,14,2.386,95,3.736,181,4.171]],["t/940",[11,0.158,47,4.486]],["t/942",[11,0.16,185,3.443,195,5.038]],["t/943",[11,0.145,14,2.012,185,2.904,196,4.249,197,4.249]],["t/945",[11,0.158,47,4.486]],["t/947",[11,0.152,65,3.502,185,3.151,198,4.61]],["t/949",[11,0.158,168,5.531]],["t/951",[11,0.097,26,3.326,46,3.086,91,3.578,185,3.443]],["t/953",[11,0.119,199,6.186,200,4.962]],["t/956",[11,0.129,142,3.151,246,5.034,247,5.034,248,5.034]],["t/959",[249,8.748]],["t/961",[65,5.303,250,7.623]],["t/963",[142,4.227,222,4.698,251,4.822]],["t/965",[11,0.138,113,3.005,122,2.799,172,4.732]],["t/967",[26,4.084,122,3.436,227,5.531]],["t/969",[26,4.609,227,6.242]],["t/971",[11,0.174,252,5.501]],["t/973",[11,0.097,123,3.382,253,5.038,254,5.501,255,4.171]],["t/975",[255,5.121,256,6.755,257,6.755]],["t/977",[11,0.107,222,4.218,251,4.329,253,5.553]],["t/979",[11,0.107,136,4.765,258,6.064,259,6.064]],["t/982",[11,0.135,211,5.78]],["t/984",[11,0.135,201,5.442]],["t/986",[11,0.119,15,3.897,21,4.486]],["t/987",[11,0.16,122,2.799,260,5.038]],["t/989",[11,0.139,35,3.702,122,2.189,142,2.693,261,4.303,262,3.702]],["t/991",[11,0.138,122,2.799,217,4.504,263,5.501]],["t/993",[11,0.147,215,5.553,264,6.064]],["t/995",[11,0.138,244,4.171,265,5.501,266,5.501]],["t/997",[11,0.138,262,4.732,267,4.041,268,5.501]],["t/999",[11,0.107,15,3.499,148,5.216,179,4.597]],["t/1000",[11,0.147,269,5.216,270,6.064]],["t/1002",[11,0.135,27,4.061]],["t/1004",[27,4.061,32,6.242]],["t/1007",[11,0.171,260,4.249,267,3.409]],["t/1009",[11,0.138,267,4.041,271,5.038,272,4.322]],["t/1010",[11,0.177,240,3.674,273,4.012]],["t/1012",[47,5.062,200,5.6]],["t/1014",[11,0.179,267,2.76,274,3.758]],["t/1016",[47,5.062,200,5.6]],["t/1018",[11,0.177,267,2.947,275,4.012]],["t/1020",[47,5.062,200,5.6]],["t/1022",[11,0.138,200,4.041,267,4.041,272,4.322]],["t/1024",[27,4.061,227,6.242]],["t/1027",[11,0.135,276,7.623]],["t/1029",[11,0.097,139,4.322,272,4.322,277,4.732,278,4.732]],["t/1030",[11,0.168,278,5.216]],["t/1032",[11,0.138,222,3.827,251,3.928,279,4.732]],["t/1034",[11,0.107,255,4.597,269,5.216,278,5.216]],["t/1036",[11,0.16,34,2.896,123,3.382]],["t/1038",[11,0.16,34,2.896,123,3.382]],["t/1040",[11,0.107,244,4.597,255,4.597,280,6.064]],["t/1041",[11,0.138,222,3.827,251,3.928,281,5.038]],["t/1043",[11,0.147,244,4.597,282,6.064]],["t/1045",[11,0.119,64,5.121,283,6.186]],["t/1046",[11,0.138,122,2.799,284,5.501,285,5.501]],["t/1048",[11,0.138,122,2.799,271,5.038,272,4.322]],["t/1050",[11,0.119,286,6.755,287,6.755]],["t/1051",[11,0.138,288,5.501,289,5.501,290,5.501]],["t/1053",[11,0.138,244,4.171,291,5.501,292,5.501]],["t/1055",[11,0.119,293,6.755,294,5.531]],["t/1056",[11,0.147,14,2.63,295,6.064]],["t/1058",[11,0.119,120,4.307,226,5.811]],["t/1060",[14,2.929,188,5.811,296,6.755]],["t/1063",[11,0.135,211,5.78]],["t/1065",[11,0.135,201,5.442]],["t/1067",[11,0.119,21,4.486,122,3.436]],["t/1069",[11,0.097,153,4.171,279,4.732,294,4.504,297,5.501]],["t/1071",[11,0.119,269,5.811,294,5.531]],["t/1073",[11,0.097,222,3.827,251,3.928,281,5.038,294,4.504]],["t/1075",[11,0.119,238,5.307,298,6.755]],["t/1077",[11,0.135,28,5.99]],["t/1080",[11,0.135,211,5.78]],["t/1082",[11,0.135,201,5.442]],["t/1084",[11,0.181,153,3.263]],["t/1085",[11,0.135,211,5.78]],["t/1087",[11,0.135,201,5.442]],["t/1089",[11,0.147,15,3.499,153,4.597]],["t/1090",[11,0.16,55,3.928,299,3.928]],["t/1092",[11,0.147,98,4.965,236,4.597]],["t/1094",[11,0.147,299,4.329,300,5.553]],["t/1096",[11,0.158,301,6.186]],["t/1098",[11,0.147,99,4.765,232,4.597]],["t/1100",[11,0.152,119,3.594,302,4.61,303,4.61]],["t/1102",[11,0.135,28,5.99]],["t/1104",[11,0.135,304,6.558]],["t/1106",[11,0.135,15,4.399]],["t/1107",[11,0.16,55,3.928,299,3.928]],["t/1109",[11,0.147,98,4.965,236,4.597]],["t/1111",[11,0.147,299,4.329,300,5.553]],["t/1113",[11,0.158,301,6.186]],["t/1115",[11,0.147,99,4.765,232,4.597]],["t/1117",[11,0.152,119,3.594,302,4.61,303,4.61]],["t/1119",[11,0.135,28,5.99]],["t/1121",[11,0.135,304,6.558]],["t/1124",[11,0.147,17,3.449,305,4.454]],["t/1126",[11,0.107,21,4.027,255,4.597,305,4.454]],["t/1128",[11,0.129,55,3.594,66,3.955,255,3.817,306,5.034]],["t/1130",[11,0.107,206,5.553,305,4.454,307,6.064]],["t/1132",[11,0.097,222,3.827,244,4.171,251,3.928,305,4.041]],["t/1133",[11,0.115,55,3.072,222,2.993,238,3.381,251,3.072,308,4.303,309,3.941]],["t/1135",[11,0.145,222,3.228,251,3.313,267,3.409,279,3.992]],["t/1137",[11,0.107,142,3.795,144,4.965,305,4.454]],["t/1139",[11,0.119,305,4.962,310,6.755]],["t/1141",[11,0.107,120,3.867,226,5.216,305,4.454]],["t/1144",[11,0.135,17,4.336]],["t/1146",[11,0.119,311,6.755,312,5.811]],["t/1148",[11,0.119,15,3.897,21,4.486]],["t/1149",[11,0.16,313,5.501,314,4.322]],["t/1151",[11,0.152,113,2.75,314,3.955,315,5.034]],["t/1153",[11,0.129,21,3.343,93,4.331,186,3.817,314,3.955]],["t/1155",[11,0.119,26,4.084,122,3.436]],["t/1156",[11,0.147,181,4.597,316,6.064]],["t/1158",[11,0.16,314,4.322,317,5.501]],["t/1160",[11,0.147,318,6.064,319,5.216]],["t/1162",[11,0.129,38,2.682,125,4.331,169,4.331,320,5.034]],["t/1164",[11,0.135,225,6.558]],["t/1166",[11,0.135,27,4.061]],["t/1169",[11,0.168,211,4.597]],["t/1171",[11,0.145,34,2.443,122,2.361,272,3.646,277,3.992]],["t/1172",[11,0.147,34,3.192,182,4.765]],["t/1174",[11,0.147,74,5.216,179,4.597]],["t/1176",[11,0.138,34,2.896,122,2.799,146,4.732]],["t/1177",[11,0.147,34,3.192,182,4.765]],["t/1179",[11,0.138,314,4.322,321,5.501,322,5.038]],["t/1181",[11,0.107,114,3.944,124,4.765,189,5.216]],["t/1182",[11,0.16,124,4.322,277,4.732]],["t/1184",[11,0.16,124,4.322,323,5.501]],["t/1186",[11,0.107,64,4.597,283,5.553,322,5.553]],["t/1188",[11,0.119,153,5.121,324,6.755]],["t/1190",[11,0.107,26,3.666,46,3.401,128,4.118]],["t/1192",[27,4.66]],["t/1196",[299,4.822,325,6.755,326,6.755]],["t/1198",[327,8.748]],["t/1199",[299,5.442,328,7.623]],["t/1202",[234,6.981,329,7.623]],["t/1205",[11,0.158,17,3.842]],["t/1207",[11,0.16,330,5.501,331,5.501]],["t/1209",[11,0.16,26,3.326,46,3.086]],["t/1211",[11,0.158,201,4.822]],["t/1212",[11,0.129,122,2.561,201,3.594,210,4.61,332,5.034]],["t/1214",[11,0.138,201,3.928,319,4.732,333,5.501]],["t/1216",[11,0.158,334,6.755]],["t/1217",[11,0.168,335,6.064]],["t/1219",[11,0.129,13,3.343,48,4.122,262,4.331,336,5.034]],["t/1221",[11,0.129,13,3.343,38,2.682,113,2.75,299,3.594]],["t/1223",[11,0.138,13,3.653,21,3.653,217,4.504]],["t/1225",[11,0.147,99,4.765,337,5.553]],["t/1227",[11,0.138,66,4.322,232,4.171,236,4.171]],["t/1229",[11,0.147,236,4.597,338,6.064]],["t/1231",[11,0.107,13,4.027,121,4.027,179,4.597]],["t/1232",[11,0.138,13,3.653,299,3.928,339,5.501]],["t/1234",[11,0.147,13,4.027,340,6.064]],["t/1236",[11,0.168,341,6.064]],["t/1238",[11,0.16,342,5.501,343,5.501]],["t/1240",[11,0.147,13,4.027,344,6.064]],["t/1242",[11,0.147,13,4.027,345,6.064]],["t/1244",[11,0.138,346,5.501,347,5.501,348,5.501]],["t/1246",[11,0.119,349,5.531,350,6.755]],["t/1247",[11,0.129,57,3.698,176,3.955,319,4.331,349,4.122]],["t/1249",[11,0.147,349,4.965,351,6.064]],["t/1251",[11,0.147,106,5.216,349,4.965]],["t/1253",[11,0.119,13,4.486,129,5.307]],["t/1254",[11,0.138,13,3.653,190,5.038,309,5.038]],["t/1256",[11,0.138,232,4.171,352,5.501,353,5.501]],["t/1258",[11,0.147,354,6.064,355,6.064]],["t/1260",[11,0.147,34,3.192,312,5.216]],["t/1261",[11,0.16,144,4.504,181,4.171]],["t/1263",[11,0.138,34,2.896,312,4.732,337,5.038]],["t/1265",[11,0.119,304,5.811,356,6.755]]],"invertedIndex":[["",{"_index":11,"t":{"25":{"position":[[0,4],[5,7]]},"32":{"position":[[0,5]]},"39":{"position":[[0,8]]},"46":{"position":[[0,8]]},"55":{"position":[[0,9]]},"62":{"position":[[0,8]]},"69":{"position":[[0,9]]},"76":{"position":[[0,5]]},"83":{"position":[[0,4]]},"91":{"position":[[0,1]]},"93":{"position":[[0,1]]},"95":{"position":[[0,1]]},"96":{"position":[[0,1],[2,1]]},"98":{"position":[[0,1],[2,1]]},"100":{"position":[[0,1]]},"101":{"position":[[0,1],[2,1]]},"103":{"position":[[0,1],[2,1]]},"105":{"position":[[0,1],[5,2]]},"107":{"position":[[0,1]]},"111":{"position":[[0,1]]},"112":{"position":[[0,1],[2,1]]},"114":{"position":[[0,1],[2,1]]},"116":{"position":[[0,1],[3,2],[9,11]]},"117":{"position":[[0,1],[2,1],[7,6]]},"119":{"position":[[0,1],[2,1],[11,10]]},"121":{"position":[[0,1],[2,1]]},"123":{"position":[[0,1],[2,1]]},"125":{"position":[[0,1]]},"127":{"position":[[0,1]]},"130":{"position":[[0,1]]},"132":{"position":[[0,1]]},"134":{"position":[[0,1],[7,5],[13,6]]},"136":{"position":[[0,1],[10,6]]},"138":{"position":[[0,1]]},"140":{"position":[[0,1]]},"142":{"position":[[0,1],[8,5],[14,6]]},"144":{"position":[[0,1],[2,1]]},"146":{"position":[[0,1],[2,1]]},"148":{"position":[[0,1],[2,1]]},"150":{"position":[[0,1],[2,1]]},"154":{"position":[[0,1]]},"156":{"position":[[0,1]]},"157":{"position":[[0,1],[2,1],[4,6]]},"159":{"position":[[0,1],[2,1],[4,10]]},"161":{"position":[[0,1],[2,1]]},"163":{"position":[[0,1],[2,1]]},"165":{"position":[[0,1],[2,1]]},"169":{"position":[[0,1]]},"171":{"position":[[0,1]]},"173":{"position":[[0,1],[2,1],[4,6]]},"175":{"position":[[0,1],[2,1],[4,10]]},"177":{"position":[[0,1],[2,1]]},"181":{"position":[[0,1],[3,6],[10,5]]},"183":{"position":[[0,1],[2,1],[10,5],[16,8]]},"185":{"position":[[0,1],[2,1],[10,13]]},"187":{"position":[[0,1],[2,1]]},"189":{"position":[[0,1],[2,1]]},"191":{"position":[[0,1],[2,1]]},"193":{"position":[[0,1],[2,1],[10,13]]},"195":{"position":[[0,1],[2,1]]},"197":{"position":[[0,1]]},"199":{"position":[[0,1],[9,6],[16,5]]},"201":{"position":[[0,1]]},"204":{"position":[[0,1]]},"206":{"position":[[0,1]]},"207":{"position":[[0,1],[2,1],[4,6]]},"209":{"position":[[0,1],[2,1],[4,10]]},"211":{"position":[[0,1],[2,1],[12,11]]},"213":{"position":[[0,1],[2,1]]},"216":{"position":[[0,1]]},"218":{"position":[[0,1]]},"219":{"position":[[0,1],[2,1],[4,6]]},"221":{"position":[[0,1],[2,1]]},"224":{"position":[[0,1]]},"226":{"position":[[0,1]]},"227":{"position":[[0,1],[2,1],[4,6]]},"229":{"position":[[0,1],[2,1]]},"231":{"position":[[0,1],[2,1]]},"234":{"position":[[0,1]]},"236":{"position":[[0,1]]},"237":{"position":[[0,1],[2,1],[4,6]]},"239":{"position":[[0,1],[2,1]]},"241":{"position":[[0,1],[2,1],[4,4]]},"243":{"position":[[0,1],[2,1]]},"246":{"position":[[0,1]]},"248":{"position":[[0,1]]},"249":{"position":[[0,1],[2,1],[4,6]]},"251":{"position":[[0,1],[2,1],[4,4]]},"253":{"position":[[0,1],[2,1],[4,4]]},"255":{"position":[[0,1],[2,1]]},"259":{"position":[[0,1]]},"261":{"position":[[0,1]]},"262":{"position":[[0,1],[2,1]]},"264":{"position":[[0,1],[2,1],[11,10]]},"266":{"position":[[0,1]]},"267":{"position":[[0,1],[2,1],[4,6],[16,10]]},"269":{"position":[[0,1],[2,1]]},"271":{"position":[[0,1],[2,1]]},"273":{"position":[[0,1],[2,1]]},"275":{"position":[[0,1],[3,4]]},"277":{"position":[[0,1],[2,1]]},"280":{"position":[[0,1]]},"282":{"position":[[0,1]]},"284":{"position":[[0,1],[3,2],[9,3]]},"285":{"position":[[0,1],[2,1],[6,3]]},"287":{"position":[[0,1],[2,1],[6,3]]},"289":{"position":[[0,1],[3,2],[10,3]]},"290":{"position":[[0,1],[2,1]]},"292":{"position":[[0,1],[2,1]]},"294":{"position":[[0,1],[2,1]]},"296":{"position":[[0,1]]},"297":{"position":[[0,1],[2,1]]},"299":{"position":[[0,1],[2,1],[4,4]]},"301":{"position":[[0,1],[5,3]]},"303":{"position":[[0,1]]},"306":{"position":[[0,1],[3,7]]},"308":{"position":[[0,1],[7,7]]},"309":{"position":[[0,1],[2,1],[8,7]]},"311":{"position":[[0,1],[2,1],[9,7]]},"313":{"position":[[0,1],[6,7],[14,7]]},"315":{"position":[[0,1],[3,14]]},"318":{"position":[[0,1]]},"320":{"position":[[0,1]]},"322":{"position":[[0,1],[3,2],[9,3]]},"323":{"position":[[0,1],[2,1],[6,3]]},"325":{"position":[[0,1],[2,1],[6,3]]},"327":{"position":[[0,1],[3,2],[10,3]]},"328":{"position":[[0,1],[2,1]]},"330":{"position":[[0,1],[2,1]]},"332":{"position":[[0,1],[2,1]]},"334":{"position":[[0,1]]},"335":{"position":[[0,1],[2,1]]},"337":{"position":[[0,1],[2,1],[4,4]]},"339":{"position":[[0,1]]},"341":{"position":[[0,1],[5,3]]},"343":{"position":[[0,1]]},"347":{"position":[[0,5]]},"354":{"position":[[0,1]]},"356":{"position":[[0,1]]},"358":{"position":[[0,1],[3,2],[9,3]]},"359":{"position":[[0,1],[2,1],[10,3]]},"361":{"position":[[0,1],[2,1],[6,3]]},"363":{"position":[[0,1],[5,3]]},"364":{"position":[[0,1],[2,1],[8,1]]},"366":{"position":[[0,1],[2,1],[8,1]]},"368":{"position":[[0,1],[3,2],[10,3]]},"369":{"position":[[0,1],[2,1]]},"371":{"position":[[0,1],[2,1]]},"373":{"position":[[0,1],[3,3]]},"375":{"position":[[0,1]]},"378":{"position":[[0,1]]},"380":{"position":[[0,1],[8,3]]},"383":{"position":[[2,3]]},"385":{"position":[[0,1],[3,2],[9,3]]},"386":{"position":[[0,1],[2,1],[6,3]]},"388":{"position":[[0,1],[2,1],[6,3]]},"390":{"position":[[0,1],[3,2],[10,3]]},"391":{"position":[[0,1],[2,1]]},"393":{"position":[[0,1],[2,1]]},"395":{"position":[[0,1],[2,1]]},"397":{"position":[[0,1],[7,3]]},"398":{"position":[[4,3]]},"402":{"position":[[0,1]]},"405":{"position":[[0,1]]},"407":{"position":[[0,1]]},"409":{"position":[[0,1],[3,2],[9,3]]},"410":{"position":[[0,1],[2,1],[10,3]]},"412":{"position":[[0,1],[2,1]]},"414":{"position":[[0,1],[5,3]]},"415":{"position":[[0,1],[2,1],[6,3]]},"417":{"position":[[0,1],[2,1],[9,3]]},"419":{"position":[[0,1],[3,2],[10,3]]},"420":{"position":[[0,1],[2,1],[11,10],[22,7]]},"422":{"position":[[0,1],[2,1]]},"424":{"position":[[0,1],[3,3]]},"426":{"position":[[0,1],[3,3]]},"428":{"position":[[0,1],[2,1]]},"430":{"position":[[0,1],[2,1]]},"432":{"position":[[0,1],[2,1]]},"434":{"position":[[0,1],[2,1]]},"436":{"position":[[0,1],[2,1]]},"438":{"position":[[0,1]]},"441":{"position":[[0,1],[3,3]]},"444":{"position":[[0,1]]},"446":{"position":[[0,1],[8,6],[15,7]]},"447":{"position":[[0,1],[2,1]]},"449":{"position":[[0,1],[2,1]]},"451":{"position":[[0,1],[2,1]]},"453":{"position":[[0,1],[8,7],[16,6]]},"454":{"position":[[0,1],[2,1]]},"456":{"position":[[0,1],[2,1]]},"458":{"position":[[0,1],[2,1]]},"460":{"position":[[0,1],[8,8],[17,7]]},"461":{"position":[[0,1],[2,1],[7,2]]},"463":{"position":[[0,1],[2,1]]},"465":{"position":[[0,1],[9,10],[20,7]]},"467":{"position":[[0,1],[2,1]]},"469":{"position":[[0,1]]},"471":{"position":[[0,1]]},"474":{"position":[[0,1]]},"476":{"position":[[0,1]]},"478":{"position":[[0,1]]},"479":{"position":[[0,1],[2,1]]},"481":{"position":[[0,1],[2,1]]},"483":{"position":[[0,1],[2,1]]},"485":{"position":[[0,1],[2,1]]},"487":{"position":[[0,1]]},"489":{"position":[[0,1]]},"492":{"position":[[0,1],[3,2],[6,4]]},"494":{"position":[[0,1],[3,4],[8,7]]},"496":{"position":[[0,1],[2,1],[6,6],[13,6]]},"498":{"position":[[0,1],[2,1],[7,6]]},"500":{"position":[[0,1]]},"501":{"position":[[0,1],[2,1],[6,3],[10,6]]},"503":{"position":[[0,1],[2,1],[7,10]]},"505":{"position":[[0,1],[2,1],[10,5]]},"507":{"position":[[0,1],[2,1]]},"509":{"position":[[0,1],[2,1]]},"511":{"position":[[0,1],[2,1]]},"513":{"position":[[0,1],[2,1]]},"515":{"position":[[0,1]]},"518":{"position":[[0,1]]},"520":{"position":[[0,1]]},"521":{"position":[[0,1],[2,1]]},"523":{"position":[[0,1],[2,1],[4,4]]},"525":{"position":[[0,1]]},"526":{"position":[[0,1],[2,1],[7,4]]},"528":{"position":[[0,1],[2,1],[4,4]]},"530":{"position":[[0,1],[2,1],[4,6]]},"532":{"position":[[0,1],[2,1],[4,9]]},"534":{"position":[[0,1]]},"535":{"position":[[0,1],[2,1]]},"537":{"position":[[0,1],[2,1]]},"539":{"position":[[0,1]]},"541":{"position":[[0,1]]},"543":{"position":[[0,1],[5,7]]},"545":{"position":[[0,1]]},"549":{"position":[[0,1],[3,7]]},"551":{"position":[[0,1],[2,1],[4,7]]},"553":{"position":[[0,1],[2,1]]},"555":{"position":[[0,1],[2,1],[4,6],[14,7]]},"557":{"position":[[0,1],[2,1],[4,7]]},"559":{"position":[[0,1],[3,4],[8,9]]},"561":{"position":[[0,1],[4,4],[9,5]]},"563":{"position":[[0,1],[4,4],[9,4]]},"565":{"position":[[0,1],[4,4],[9,4]]},"567":{"position":[[0,1],[4,6]]},"571":{"position":[[0,1],[4,7]]},"579":{"position":[[0,1]]},"581":{"position":[[0,1]]},"583":{"position":[[0,1]]},"585":{"position":[[0,1]]},"586":{"position":[[0,1],[2,1]]},"588":{"position":[[0,1],[2,1],[8,5]]},"590":{"position":[[0,1],[2,1]]},"592":{"position":[[0,1]]},"595":{"position":[[0,1]]},"597":{"position":[[0,1]]},"599":{"position":[[0,1],[7,5],[13,6]]},"601":{"position":[[0,1],[10,6]]},"603":{"position":[[0,1]]},"605":{"position":[[0,1]]},"607":{"position":[[0,1],[8,5],[14,6]]},"609":{"position":[[0,1],[2,1]]},"611":{"position":[[0,1],[2,1]]},"613":{"position":[[0,1],[2,1]]},"615":{"position":[[0,1],[2,1]]},"619":{"position":[[0,1]]},"620":{"position":[[0,1],[2,1]]},"622":{"position":[[0,1],[2,1]]},"624":{"position":[[0,1],[3,2],[9,11]]},"625":{"position":[[0,1],[2,1],[7,6]]},"627":{"position":[[0,1],[2,1],[11,10]]},"629":{"position":[[0,1],[2,1]]},"631":{"position":[[0,1],[2,1]]},"633":{"position":[[0,1]]},"635":{"position":[[0,1]]},"639":{"position":[[0,1]]},"641":{"position":[[0,1]]},"642":{"position":[[0,1],[2,1],[4,6]]},"644":{"position":[[0,1],[2,1],[4,10]]},"646":{"position":[[0,1],[2,1]]},"648":{"position":[[0,1],[2,1]]},"650":{"position":[[0,1],[2,1]]},"654":{"position":[[0,1]]},"656":{"position":[[0,1]]},"658":{"position":[[0,1],[2,1],[4,6]]},"660":{"position":[[0,1],[2,1],[4,10]]},"662":{"position":[[0,1],[2,1]]},"665":{"position":[[0,1]]},"667":{"position":[[0,1]]},"668":{"position":[[0,1],[2,1],[4,6]]},"670":{"position":[[0,1],[2,1],[4,10]]},"672":{"position":[[0,1],[2,1],[12,11]]},"674":{"position":[[0,1],[2,1]]},"677":{"position":[[0,1]]},"679":{"position":[[0,1]]},"680":{"position":[[0,1],[2,1],[4,6]]},"682":{"position":[[0,1],[2,1]]},"686":{"position":[[0,1],[3,6],[10,5]]},"688":{"position":[[0,1],[2,1],[10,5],[16,8]]},"690":{"position":[[0,1],[2,1],[10,13]]},"692":{"position":[[0,1],[2,1]]},"694":{"position":[[0,1],[2,1]]},"696":{"position":[[0,1],[2,1]]},"698":{"position":[[0,1],[2,1],[10,13]]},"700":{"position":[[0,1],[2,1]]},"702":{"position":[[0,1]]},"704":{"position":[[0,1],[9,6],[16,5]]},"706":{"position":[[0,1]]},"709":{"position":[[0,1]]},"711":{"position":[[0,1]]},"712":{"position":[[0,1],[2,1],[4,6]]},"714":{"position":[[0,1],[2,1]]},"716":{"position":[[0,1],[2,1],[4,4]]},"718":{"position":[[0,1],[2,1]]},"721":{"position":[[0,1]]},"723":{"position":[[0,1]]},"724":{"position":[[0,1],[2,1],[4,6]]},"726":{"position":[[0,1],[2,1],[4,4]]},"728":{"position":[[0,1],[2,1],[4,4]]},"730":{"position":[[0,1],[2,1]]},"733":{"position":[[0,1]]},"735":{"position":[[0,1]]},"736":{"position":[[0,1],[2,1],[4,6]]},"738":{"position":[[0,1],[2,1]]},"740":{"position":[[0,1],[2,1]]},"744":{"position":[[0,1]]},"746":{"position":[[0,1]]},"747":{"position":[[0,1],[2,1]]},"749":{"position":[[0,1],[2,1],[11,10]]},"751":{"position":[[0,1]]},"752":{"position":[[0,1],[2,1],[4,6],[16,10]]},"754":{"position":[[0,1],[2,1]]},"756":{"position":[[0,1],[2,1]]},"758":{"position":[[0,1],[2,1]]},"760":{"position":[[0,1],[3,4]]},"762":{"position":[[0,1],[2,1]]},"765":{"position":[[0,1]]},"767":{"position":[[0,1]]},"769":{"position":[[0,1],[3,2],[9,3]]},"770":{"position":[[0,1],[2,1],[6,3]]},"772":{"position":[[0,1],[2,1],[6,3]]},"774":{"position":[[0,1],[3,2],[10,3]]},"775":{"position":[[0,1],[2,1]]},"777":{"position":[[0,1],[2,1]]},"779":{"position":[[0,1],[2,1]]},"781":{"position":[[0,1]]},"782":{"position":[[0,1],[2,1]]},"784":{"position":[[0,1],[2,1],[4,4]]},"786":{"position":[[0,1]]},"788":{"position":[[0,1],[5,3]]},"790":{"position":[[0,1]]},"793":{"position":[[0,1],[3,7]]},"795":{"position":[[0,1],[7,7]]},"796":{"position":[[0,1],[2,1],[8,7]]},"798":{"position":[[0,1],[2,1],[9,7]]},"800":{"position":[[0,1],[6,7],[14,7]]},"802":{"position":[[0,1],[3,14]]},"805":{"position":[[0,1]]},"807":{"position":[[0,1]]},"809":{"position":[[0,1],[3,2],[9,3]]},"810":{"position":[[0,1],[2,1],[6,3]]},"812":{"position":[[0,1],[2,1],[6,3]]},"814":{"position":[[0,1],[3,2],[10,3]]},"815":{"position":[[0,1],[2,1]]},"817":{"position":[[0,1],[2,1]]},"819":{"position":[[0,1],[2,1]]},"821":{"position":[[0,1]]},"822":{"position":[[0,1],[2,1]]},"824":{"position":[[0,1],[2,1],[4,4]]},"826":{"position":[[0,1],[5,3]]},"828":{"position":[[0,1]]},"831":{"position":[[0,1]]},"833":{"position":[[0,1]]},"835":{"position":[[0,1],[3,2],[9,3]]},"836":{"position":[[0,1],[2,1],[10,3]]},"838":{"position":[[0,1],[2,1],[6,3]]},"840":{"position":[[0,1],[5,3]]},"841":{"position":[[0,1],[2,1],[8,1]]},"843":{"position":[[0,1],[2,1],[8,1]]},"845":{"position":[[0,1],[3,2],[10,3]]},"846":{"position":[[0,1],[2,1]]},"848":{"position":[[0,1],[2,1]]},"850":{"position":[[0,1],[3,3]]},"852":{"position":[[0,1]]},"856":{"position":[[0,5]]},"863":{"position":[[0,1]]},"865":{"position":[[0,1],[8,3]]},"868":{"position":[[2,3]]},"870":{"position":[[0,1],[3,2],[9,3]]},"871":{"position":[[0,1],[2,1],[6,3]]},"873":{"position":[[0,1],[2,1],[6,3]]},"875":{"position":[[0,1],[3,2],[10,3]]},"876":{"position":[[0,1],[2,1]]},"878":{"position":[[0,1],[2,1]]},"880":{"position":[[0,1],[2,1]]},"882":{"position":[[0,1],[7,3]]},"883":{"position":[[4,3]]},"887":{"position":[[0,1]]},"890":{"position":[[0,1]]},"892":{"position":[[0,1]]},"894":{"position":[[0,1],[3,2],[9,3]]},"895":{"position":[[0,1],[2,1],[10,3]]},"897":{"position":[[0,1],[2,1]]},"899":{"position":[[0,1],[5,3]]},"900":{"position":[[0,1],[2,1],[6,3]]},"902":{"position":[[0,1],[2,1],[9,3]]},"904":{"position":[[0,1],[3,2],[10,3]]},"905":{"position":[[0,1],[2,1],[11,10],[22,7]]},"907":{"position":[[0,1],[2,1]]},"909":{"position":[[0,1],[3,3]]},"911":{"position":[[0,1],[3,3]]},"913":{"position":[[0,1],[2,1]]},"915":{"position":[[0,1],[2,1]]},"917":{"position":[[0,1],[2,1]]},"919":{"position":[[0,1],[2,1]]},"921":{"position":[[0,1],[2,1]]},"923":{"position":[[0,1]]},"926":{"position":[[0,1]]},"928":{"position":[[0,1],[8,6],[15,7]]},"929":{"position":[[0,1],[2,1]]},"931":{"position":[[0,1],[2,1]]},"933":{"position":[[0,1],[2,1]]},"935":{"position":[[0,1],[8,7],[16,6]]},"936":{"position":[[0,1],[2,1]]},"938":{"position":[[0,1],[2,1]]},"940":{"position":[[0,1],[2,1]]},"942":{"position":[[0,1],[8,8],[17,7]]},"943":{"position":[[0,1],[2,1],[7,2]]},"945":{"position":[[0,1],[2,1]]},"947":{"position":[[0,1],[9,10],[20,7]]},"949":{"position":[[0,1],[2,1]]},"951":{"position":[[0,1]]},"953":{"position":[[0,1]]},"956":{"position":[[0,1],[3,3]]},"965":{"position":[[0,2],[9,4]]},"971":{"position":[[0,2],[3,3],[7,4],[15,7]]},"973":{"position":[[4,9]]},"977":{"position":[[5,6]]},"979":{"position":[[0,2]]},"982":{"position":[[0,1]]},"984":{"position":[[0,1]]},"986":{"position":[[0,1]]},"987":{"position":[[0,1],[2,1],[9,3]]},"989":{"position":[[0,1],[2,1],[15,3]]},"991":{"position":[[0,1],[2,1]]},"993":{"position":[[0,1],[2,1]]},"995":{"position":[[0,1],[2,1]]},"997":{"position":[[0,1],[2,1]]},"999":{"position":[[0,1]]},"1000":{"position":[[0,1],[2,1]]},"1002":{"position":[[0,1]]},"1007":{"position":[[0,1],[3,6],[13,4],[22,8],[31,4]]},"1009":{"position":[[0,1],[7,4]]},"1010":{"position":[[0,1],[2,1],[4,6],[11,3],[15,7],[23,5],[32,4]]},"1014":{"position":[[0,1],[2,1],[4,6],[11,3],[15,4],[20,8],[29,2],[36,4]]},"1018":{"position":[[0,1],[2,1],[4,6],[11,3],[15,5],[21,10],[35,4]]},"1022":{"position":[[0,1],[3,4]]},"1027":{"position":[[0,1]]},"1029":{"position":[[0,1]]},"1030":{"position":[[0,1],[2,1],[4,4]]},"1032":{"position":[[0,1],[2,1]]},"1034":{"position":[[0,1]]},"1036":{"position":[[0,1],[2,1],[6,9]]},"1038":{"position":[[0,1],[2,1],[6,11]]},"1040":{"position":[[0,1]]},"1041":{"position":[[0,1],[2,1]]},"1043":{"position":[[0,1],[2,1]]},"1045":{"position":[[0,1]]},"1046":{"position":[[0,1],[2,1]]},"1048":{"position":[[0,1],[2,1]]},"1050":{"position":[[0,1]]},"1051":{"position":[[0,1],[2,1]]},"1053":{"position":[[0,1],[2,1]]},"1055":{"position":[[0,1]]},"1056":{"position":[[0,1],[2,1]]},"1058":{"position":[[0,1]]},"1063":{"position":[[0,1]]},"1065":{"position":[[0,1]]},"1067":{"position":[[0,1]]},"1069":{"position":[[0,1]]},"1071":{"position":[[0,1]]},"1073":{"position":[[0,1]]},"1075":{"position":[[0,1]]},"1077":{"position":[[0,1]]},"1080":{"position":[[0,1]]},"1082":{"position":[[0,1]]},"1084":{"position":[[0,1],[6,6],[13,6],[20,3],[24,1],[26,3],[30,4]]},"1085":{"position":[[0,1]]},"1087":{"position":[[0,1]]},"1089":{"position":[[0,1],[6,4]]},"1090":{"position":[[0,1],[2,1],[9,2]]},"1092":{"position":[[0,1],[2,1]]},"1094":{"position":[[0,1],[2,1]]},"1096":{"position":[[0,1],[2,1]]},"1098":{"position":[[0,1],[2,1]]},"1100":{"position":[[0,1],[3,4],[11,7]]},"1102":{"position":[[0,1]]},"1104":{"position":[[0,1]]},"1106":{"position":[[3,4]]},"1107":{"position":[[0,1],[2,1],[9,2]]},"1109":{"position":[[0,1],[2,1]]},"1111":{"position":[[0,1],[2,1]]},"1113":{"position":[[0,1],[2,1]]},"1115":{"position":[[0,1],[2,1]]},"1117":{"position":[[0,1],[3,4],[11,7]]},"1119":{"position":[[0,1]]},"1121":{"position":[[0,1]]},"1124":{"position":[[0,1],[6,7]]},"1126":{"position":[[0,1]]},"1128":{"position":[[0,1],[2,1]]},"1130":{"position":[[0,1]]},"1132":{"position":[[0,1]]},"1133":{"position":[[0,1],[2,1]]},"1135":{"position":[[0,1],[2,1],[12,3]]},"1137":{"position":[[0,1]]},"1139":{"position":[[0,1]]},"1141":{"position":[[0,1]]},"1144":{"position":[[0,1]]},"1146":{"position":[[0,1]]},"1148":{"position":[[0,1]]},"1149":{"position":[[0,1],[2,1],[8,6]]},"1151":{"position":[[0,1],[2,1],[7,6]]},"1153":{"position":[[0,1],[11,6]]},"1155":{"position":[[0,1]]},"1156":{"position":[[0,1],[2,1]]},"1158":{"position":[[0,1],[2,1],[10,7]]},"1160":{"position":[[0,1],[2,1]]},"1162":{"position":[[0,1],[2,1]]},"1164":{"position":[[0,1]]},"1166":{"position":[[0,1]]},"1169":{"position":[[0,1],[3,4],[8,6]]},"1171":{"position":[[0,1],[9,3],[13,4]]},"1172":{"position":[[0,1],[2,1]]},"1174":{"position":[[0,1],[2,1]]},"1176":{"position":[[0,1],[6,3]]},"1177":{"position":[[0,1],[2,1]]},"1179":{"position":[[0,1],[2,1]]},"1181":{"position":[[0,1]]},"1182":{"position":[[0,1],[2,1],[6,4]]},"1184":{"position":[[0,1],[2,1],[6,6]]},"1186":{"position":[[0,1]]},"1188":{"position":[[0,1]]},"1190":{"position":[[0,1]]},"1205":{"position":[[0,1],[3,3]]},"1207":{"position":[[0,1],[2,1],[4,3]]},"1209":{"position":[[0,1],[2,1],[4,3]]},"1211":{"position":[[0,1],[3,3]]},"1212":{"position":[[0,1],[2,1]]},"1214":{"position":[[0,1],[2,1]]},"1216":{"position":[[0,1],[3,3]]},"1217":{"position":[[0,1],[2,1],[6,3]]},"1219":{"position":[[0,1],[2,1]]},"1221":{"position":[[0,1],[2,1]]},"1223":{"position":[[0,1],[2,1]]},"1225":{"position":[[0,1],[2,1]]},"1227":{"position":[[0,1],[2,1]]},"1229":{"position":[[0,1],[2,1]]},"1231":{"position":[[0,1]]},"1232":{"position":[[0,1],[2,1]]},"1234":{"position":[[0,1],[2,1]]},"1236":{"position":[[0,1],[2,1],[8,11]]},"1238":{"position":[[0,1],[2,1],[8,11]]},"1240":{"position":[[0,1],[2,1]]},"1242":{"position":[[0,1],[2,1]]},"1244":{"position":[[0,1],[2,1]]},"1246":{"position":[[0,1]]},"1247":{"position":[[0,1],[2,1]]},"1249":{"position":[[0,1],[2,1]]},"1251":{"position":[[0,1],[2,1]]},"1253":{"position":[[0,1]]},"1254":{"position":[[0,1],[2,1]]},"1256":{"position":[[0,1],[2,1]]},"1258":{"position":[[0,1],[2,1]]},"1260":{"position":[[0,1],[3,3]]},"1261":{"position":[[0,1],[2,1],[4,6]]},"1263":{"position":[[0,1],[2,1]]},"1265":{"position":[[0,1]]}}}],["一万句",{"_index":6,"t":{"10":{"position":[[3,3]]}}}],["一个",{"_index":93,"t":{"211":{"position":[[7,2]]},"672":{"position":[[7,2]]},"1153":{"position":[[5,2]]}}}],["一个桶",{"_index":52,"t":{"144":{"position":[[8,3]]},"609":{"position":[[8,3]]}}}],["一句",{"_index":4,"t":{"10":{"position":[[0,2]]}}}],["不到",{"_index":248,"t":{"956":{"position":[[10,2]]}}}],["不必",{"_index":174,"t":{"400":{"position":[[0,2]]},"885":{"position":[[0,2]]}}}],["个人",{"_index":150,"t":{"351":{"position":[[0,2]]},"860":{"position":[[0,2]]}}}],["中",{"_index":113,"t":{"284":{"position":[[7,1]]},"289":{"position":[[7,1]]},"322":{"position":[[7,1]]},"327":{"position":[[7,1]]},"358":{"position":[[7,1]]},"368":{"position":[[7,1]]},"385":{"position":[[7,1]]},"390":{"position":[[7,1]]},"409":{"position":[[7,1]]},"419":{"position":[[7,1]]},"769":{"position":[[7,1]]},"774":{"position":[[7,1]]},"809":{"position":[[7,1]]},"814":{"position":[[7,1]]},"835":{"position":[[7,1]]},"845":{"position":[[7,1]]},"870":{"position":[[7,1]]},"875":{"position":[[7,1]]},"894":{"position":[[7,1]]},"904":{"position":[[7,1]]},"965":{"position":[[3,1]]},"1151":{"position":[[16,1]]},"1221":{"position":[[8,1]]}}}],["中间件",{"_index":133,"t":{"299":{"position":[[8,3]]},"422":{"position":[[4,3]]},"824":{"position":[[8,3]]},"907":{"position":[[4,3]]}}}],["为什么",{"_index":166,"t":{"380":{"position":[[3,3]]},"865":{"position":[[3,3]]}}}],["主程序",{"_index":37,"t":{"121":{"position":[[4,3]]},"161":{"position":[[4,3]]},"629":{"position":[[4,3]]},"646":{"position":[[4,3]]}}}],["举例",{"_index":327,"t":{"1198":{"position":[[0,2]]}}}],["事件",{"_index":230,"t":{"563":{"position":[[16,2]]}}}],["交互",{"_index":135,"t":{"306":{"position":[[11,2]]},"793":{"position":[[11,2]]}}}],["人类",{"_index":0,"t":{"6":{"position":[[0,2]]}}}],["代替",{"_index":162,"t":{"369":{"position":[[8,2]]},"393":{"position":[[6,2]]},"846":{"position":[[8,2]]},"878":{"position":[[6,2]]}}}],["代码",{"_index":45,"t":{"136":{"position":[[3,2]]},"156":{"position":[[3,2]]},"171":{"position":[[3,2]]},"206":{"position":[[3,2]]},"218":{"position":[[3,2]]},"226":{"position":[[3,2]]},"236":{"position":[[3,2]]},"248":{"position":[[3,2]]},"415":{"position":[[10,2]]},"417":{"position":[[13,2]]},"601":{"position":[[3,2]]},"641":{"position":[[3,2]]},"656":{"position":[[3,2]]},"667":{"position":[[3,2]]},"679":{"position":[[3,2]]},"711":{"position":[[3,2]]},"723":{"position":[[3,2]]},"735":{"position":[[3,2]]},"900":{"position":[[10,2]]},"902":{"position":[[13,2]]}}}],["令牌",{"_index":56,"t":{"146":{"position":[[9,2]]},"611":{"position":[[9,2]]}}}],["任意",{"_index":254,"t":{"973":{"position":[[17,2]]}}}],["优先级",{"_index":49,"t":{"142":{"position":[[4,3]]},"144":{"position":[[5,3]]},"146":{"position":[[13,3]]},"607":{"position":[[4,3]]},"609":{"position":[[5,3]]},"611":{"position":[[13,3]]}}}],["优化",{"_index":64,"t":{"165":{"position":[[4,2]]},"311":{"position":[[17,2]]},"650":{"position":[[4,2]]},"798":{"position":[[17,2]]},"1045":{"position":[[5,2]]},"1186":{"position":[[5,2]]}}}],["优点",{"_index":168,"t":{"381":{"position":[[0,2]]},"467":{"position":[[4,2]]},"866":{"position":[[0,2]]},"949":{"position":[[4,2]]}}}],["优缺点",{"_index":47,"t":{"140":{"position":[[3,3]]},"451":{"position":[[4,3]]},"458":{"position":[[4,3]]},"463":{"position":[[4,3]]},"605":{"position":[[3,3]]},"933":{"position":[[4,3]]},"940":{"position":[[4,3]]},"945":{"position":[[4,3]]},"1012":{"position":[[0,3]]},"1016":{"position":[[0,3]]},"1020":{"position":[[0,3]]}}}],["传递",{"_index":212,"t":{"505":{"position":[[4,2]]}}}],["体",{"_index":251,"t":{"963":{"position":[[2,1]]},"977":{"position":[[3,1]]},"1032":{"position":[[6,1]]},"1041":{"position":[[8,1]]},"1073":{"position":[[5,1]]},"1132":{"position":[[9,1]]},"1133":{"position":[[8,1]]},"1135":{"position":[[8,1]]}}}],["何时",{"_index":172,"t":{"397":{"position":[[3,2]]},"882":{"position":[[3,2]]},"965":{"position":[[4,2]]}}}],["作为",{"_index":302,"t":{"1100":{"position":[[8,2]]},"1117":{"position":[[8,2]]}}}],["使用",{"_index":122,"t":{"290":{"position":[[4,2]]},"311":{"position":[[5,2]]},"369":{"position":[[4,2]]},"410":{"position":[[4,2]]},"432":{"position":[[4,2]]},"436":{"position":[[6,2]]},"501":{"position":[[4,2]]},"503":{"position":[[4,2]]},"513":{"position":[[4,2]]},"534":{"position":[[3,2]]},"535":{"position":[[6,2]]},"798":{"position":[[5,2]]},"815":{"position":[[4,2]]},"846":{"position":[[4,2]]},"895":{"position":[[4,2]]},"917":{"position":[[4,2]]},"921":{"position":[[6,2]]},"965":{"position":[[6,2]]},"967":{"position":[[4,2]]},"987":{"position":[[4,2]]},"989":{"position":[[12,2]]},"991":{"position":[[4,2]]},"1046":{"position":[[4,2]]},"1048":{"position":[[4,2]]},"1067":{"position":[[5,2]]},"1155":{"position":[[3,2]]},"1171":{"position":[[3,2]]},"1176":{"position":[[3,2]]},"1212":{"position":[[4,2]]}}}],["例子",{"_index":116,"t":{"285":{"position":[[10,2]]},"323":{"position":[[10,2]]},"386":{"position":[[10,2]]},"770":{"position":[[10,2]]},"810":{"position":[[10,2]]},"871":{"position":[[10,2]]}}}],["依赖",{"_index":22,"t":{"98":{"position":[[4,2]]},"103":{"position":[[6,2]]},"339":{"position":[[3,2]]},"786":{"position":[[3,2]]}}}],["保存",{"_index":108,"t":{"271":{"position":[[10,2]]},"756":{"position":[[10,2]]}}}],["信号处理",{"_index":301,"t":{"1096":{"position":[[4,4]]},"1113":{"position":[[4,4]]}}}],["信息",{"_index":238,"t":{"581":{"position":[[5,2]]},"583":{"position":[[5,2]]},"590":{"position":[[7,2]]},"1075":{"position":[[7,2]]},"1133":{"position":[[11,2]]}}}],["修改",{"_index":206,"t":{"483":{"position":[[4,2]]},"1130":{"position":[[5,2]]}}}],["值",{"_index":306,"t":{"1128":{"position":[[12,1]]}}}],["停止",{"_index":107,"t":{"271":{"position":[[4,2]]},"756":{"position":[[4,2]]}}}],["僵尸",{"_index":326,"t":{"1196":{"position":[[2,2]]}}}],["儿子",{"_index":329,"t":{"1202":{"position":[[2,2]]}}}],["关键",{"_index":69,"t":{"181":{"position":[[19,2]]},"686":{"position":[[19,2]]}}}],["其他",{"_index":148,"t":{"349":{"position":[[0,2]]},"858":{"position":[[0,2]]},"999":{"position":[[3,2]]}}}],["兼容性",{"_index":81,"t":{"189":{"position":[[13,3]]},"694":{"position":[[13,3]]}}}],["内存",{"_index":232,"t":{"579":{"position":[[3,2]]},"586":{"position":[[5,2]]},"1098":{"position":[[4,2]]},"1115":{"position":[[4,2]]},"1227":{"position":[[7,2]]},"1256":{"position":[[4,2]]}}}],["内核",{"_index":101,"t":{"266":{"position":[[3,2]]},"751":{"position":[[3,2]]}}}],["内置",{"_index":297,"t":{"1069":{"position":[[6,2]]}}}],["冒号",{"_index":19,"t":{"93":{"position":[[6,2],[15,2]]},"95":{"position":[[6,2]]},"100":{"position":[[7,2]]}}}],["函数",{"_index":65,"t":{"165":{"position":[[6,2]]},"395":{"position":[[4,2]]},"420":{"position":[[4,2]]},"465":{"position":[[3,2]]},"650":{"position":[[6,2]]},"880":{"position":[[4,2]]},"905":{"position":[[4,2]]},"947":{"position":[[3,2]]},"961":{"position":[[2,2]]}}}],["分离",{"_index":351,"t":{"1249":{"position":[[4,2]]}}}],["切换",{"_index":346,"t":{"1244":{"position":[[4,2]]}}}],["列表",{"_index":268,"t":{"997":{"position":[[6,2]]}}}],["创建",{"_index":186,"t":{"432":{"position":[[10,2]]},"447":{"position":[[9,2]]},"526":{"position":[[4,2]]},"917":{"position":[[10,2]]},"929":{"position":[[9,2]]},"1153":{"position":[[3,2]]}}}],["初始化",{"_index":103,"t":{"267":{"position":[[11,3]]},"752":{"position":[[11,3]]}}}],["判断",{"_index":136,"t":{"308":{"position":[[17,2]]},"311":{"position":[[7,2]]},"795":{"position":[[17,2]]},"798":{"position":[[7,2]]},"979":{"position":[[3,2]]}}}],["削弱",{"_index":157,"t":{"364":{"position":[[12,2]]},"841":{"position":[[12,2]]}}}],["前置条件",{"_index":158,"t":{"364":{"position":[[14,4]]},"841":{"position":[[14,4]]}}}],["功能",{"_index":12,"t":{"26":{"position":[[0,2]]},"33":{"position":[[0,2]]},"40":{"position":[[0,2]]},"47":{"position":[[0,2]]},"56":{"position":[[0,2]]},"63":{"position":[[0,2]]},"70":{"position":[[0,2]]},"77":{"position":[[0,2]]},"84":{"position":[[0,2]]}}}],["加强",{"_index":165,"t":{"371":{"position":[[8,2]]},"848":{"position":[[8,2]]}}}],["加载",{"_index":106,"t":{"269":{"position":[[13,2]]},"754":{"position":[[13,2]]},"1251":{"position":[[4,2]]}}}],["包",{"_index":210,"t":{"492":{"position":[[11,1]]},"1212":{"position":[[6,1]]}}}],["化",{"_index":75,"t":{"187":{"position":[[7,1]]},"273":{"position":[[8,1]]},"692":{"position":[[7,1]]},"758":{"position":[[8,1]]}}}],["区别",{"_index":16,"t":{"51":{"position":[[0,2]]},"93":{"position":[[19,2]]},"134":{"position":[[20,2]]},"599":{"position":[[20,2]]}}}],["协议",{"_index":79,"t":{"189":{"position":[[5,2]]},"694":{"position":[[5,2]]}}}],["单",{"_index":18,"t":{"93":{"position":[[5,1]]},"95":{"position":[[5,1]]}}}],["单一",{"_index":171,"t":{"395":{"position":[[8,2]]},"880":{"position":[[8,2]]}}}],["单元测试",{"_index":295,"t":{"1056":{"position":[[4,4]]}}}],["南",{"_index":2,"t":{"8":{"position":[[0,1]]}}}],["历史",{"_index":330,"t":{"1207":{"position":[[8,2]]}}}],["原则",{"_index":70,"t":{"181":{"position":[[21,2]]},"347":{"position":[[5,2]]},"349":{"position":[[4,2]]},"686":{"position":[[21,2]]},"856":{"position":[[5,2]]},"858":{"position":[[4,2]]}}}],["原理",{"_index":312,"t":{"1146":{"position":[[5,2]]},"1260":{"position":[[9,2]]},"1263":{"position":[[8,2]]}}}],["参数",{"_index":262,"t":{"989":{"position":[[9,2]]},"997":{"position":[[8,2]]},"1219":{"position":[[7,2]]}}}],["参考",{"_index":304,"t":{"1104":{"position":[[3,2]]},"1121":{"position":[[3,2]]},"1265":{"position":[[3,2]]}}}],["双",{"_index":20,"t":{"93":{"position":[[14,1]]},"100":{"position":[[6,1]]}}}],["反",{"_index":90,"t":{"199":{"position":[[3,1]]},"704":{"position":[[3,1]]}}}],["反射",{"_index":305,"t":{"1124":{"position":[[3,2]]},"1126":{"position":[[3,2]]},"1130":{"position":[[3,2]]},"1132":{"position":[[3,2]]},"1137":{"position":[[3,2]]},"1139":{"position":[[3,2]]},"1141":{"position":[[3,2]]}}}],["发展",{"_index":331,"t":{"1207":{"position":[[11,2]]}}}],["变量",{"_index":66,"t":{"165":{"position":[[9,2]]},"521":{"position":[[6,2]]},"650":{"position":[[9,2]]},"1128":{"position":[[6,2]]},"1227":{"position":[[4,2]]}}}],["变量值",{"_index":307,"t":{"1130":{"position":[[7,3]]}}}],["可扩展性",{"_index":73,"t":{"185":{"position":[[5,4]]},"690":{"position":[[5,4]]}}}],["司法",{"_index":7,"t":{"14":{"position":[[0,2]]}}}],["后果",{"_index":134,"t":{"301":{"position":[[9,2]]},"341":{"position":[[9,2]]},"383":{"position":[[6,2]]},"788":{"position":[[9,2]]},"826":{"position":[[9,2]]},"868":{"position":[[6,2]]}}}],["后置",{"_index":160,"t":{"366":{"position":[[14,2]]},"843":{"position":[[14,2]]}}}],["启动",{"_index":335,"t":{"1217":{"position":[[4,2]]}}}],["命令",{"_index":217,"t":{"509":{"position":[[10,2]]},"513":{"position":[[12,2]]},"991":{"position":[[7,2]]},"1223":{"position":[[8,2]]}}}],["命令行",{"_index":261,"t":{"989":{"position":[[6,3]]}}}],["命名",{"_index":67,"t":{"165":{"position":[[11,2]]},"650":{"position":[[11,2]]}}}],["哈希",{"_index":203,"t":{"479":{"position":[[6,2]]},"485":{"position":[[6,2]]}}}],["器",{"_index":54,"t":{"146":{"position":[[6,1]]},"197":{"position":[[5,1]]},"430":{"position":[[8,1]]},"432":{"position":[[14,1]]},"447":{"position":[[11,1]]},"611":{"position":[[6,1]]},"702":{"position":[[5,1]]},"915":{"position":[[8,1]]},"917":{"position":[[14,1]]},"929":{"position":[[11,1]]}}}],["回收",{"_index":234,"t":{"579":{"position":[[8,2]]},"1202":{"position":[[0,2]]}}}],["图形",{"_index":192,"t":{"447":{"position":[[7,2]]},"929":{"position":[[7,2]]}}}],["场景",{"_index":26,"t":{"105":{"position":[[13,2]]},"138":{"position":[[5,2]]},"373":{"position":[[11,2]]},"424":{"position":[[11,2]]},"469":{"position":[[10,2]]},"487":{"position":[[5,2]]},"557":{"position":[[15,2]]},"603":{"position":[[5,2]]},"850":{"position":[[11,2]]},"909":{"position":[[11,2]]},"951":{"position":[[10,2]]},"967":{"position":[[7,2]]},"969":{"position":[[6,2]]},"1155":{"position":[[5,2]]},"1190":{"position":[[7,2]]},"1209":{"position":[[9,2]]}}}],["垃圾",{"_index":233,"t":{"579":{"position":[[6,2]]}}}],["基本",{"_index":21,"t":{"96":{"position":[[4,2]]},"101":{"position":[[4,2]]},"478":{"position":[[3,2]]},"494":{"position":[[16,2]]},"535":{"position":[[4,2]]},"986":{"position":[[3,2]]},"1067":{"position":[[3,2]]},"1126":{"position":[[6,2]]},"1148":{"position":[[3,2]]},"1153":{"position":[[7,2]]},"1223":{"position":[[4,2]]}}}],["基本功能",{"_index":334,"t":{"1216":{"position":[[7,4]]}}}],["基本原理",{"_index":42,"t":{"132":{"position":[[3,4]]},"597":{"position":[[3,4]]}}}],["基本概念",{"_index":221,"t":{"520":{"position":[[3,4]]}}}],["基础",{"_index":182,"t":{"428":{"position":[[4,2]]},"553":{"position":[[4,2]]},"913":{"position":[[4,2]]},"1172":{"position":[[4,2]]},"1177":{"position":[[4,2]]}}}],["堆栈",{"_index":237,"t":{"581":{"position":[[3,2]]}}}],["增加",{"_index":92,"t":{"211":{"position":[[4,2]]},"308":{"position":[[4,2]]},"511":{"position":[[4,2]]},"672":{"position":[[4,2]]},"795":{"position":[[4,2]]}}}],["增强",{"_index":243,"t":{"588":{"position":[[5,2]]}}}],["处理",{"_index":244,"t":{"588":{"position":[[13,2]]},"995":{"position":[[4,2]]},"1040":{"position":[[7,2]]},"1043":{"position":[[8,2]]},"1053":{"position":[[8,2]]},"1132":{"position":[[5,2]]}}}],["处理错误",{"_index":298,"t":{"1075":{"position":[[3,4]]}}}],["复合",{"_index":280,"t":{"1040":{"position":[[3,2]]}}}],["多",{"_index":339,"t":{"1232":{"position":[[4,1]]}}}],["多个",{"_index":220,"t":{"513":{"position":[[10,2]]}}}],["多种",{"_index":183,"t":{"430":{"position":[[12,2]]},"915":{"position":[[12,2]]}}}],["多线程",{"_index":340,"t":{"1234":{"position":[[4,3]]}}}],["子",{"_index":263,"t":{"991":{"position":[[6,1]]}}}],["子类",{"_index":156,"t":{"364":{"position":[[10,2]]},"366":{"position":[[10,2]]},"841":{"position":[[10,2]]},"843":{"position":[[10,2]]}}}],["字",{"_index":308,"t":{"1133":{"position":[[9,1]]}}}],["存储",{"_index":97,"t":{"261":{"position":[[5,2]]},"262":{"position":[[4,2]]},"746":{"position":[[5,2]]},"747":{"position":[[4,2]]}}}],["孤儿",{"_index":328,"t":{"1199":{"position":[[0,2]]}}}],["安装",{"_index":201,"t":{"476":{"position":[[3,2]]},"984":{"position":[[3,2]]},"1065":{"position":[[3,2]]},"1082":{"position":[[3,2]]},"1087":{"position":[[3,2]]},"1211":{"position":[[6,2]]},"1212":{"position":[[10,2]]},"1214":{"position":[[8,2]]}}}],["完整",{"_index":188,"t":{"436":{"position":[[4,2]]},"921":{"position":[[4,2]]},"1060":{"position":[[3,2]]}}}],["定义",{"_index":35,"t":{"117":{"position":[[4,2]]},"625":{"position":[[4,2]]},"989":{"position":[[4,2]]}}}],["定时",{"_index":109,"t":{"273":{"position":[[4,2]]},"758":{"position":[[4,2]]}}}],["实现",{"_index":34,"t":{"116":{"position":[[6,2]]},"119":{"position":[[4,2]]},"136":{"position":[[5,2]]},"284":{"position":[[12,2]]},"322":{"position":[[12,2]]},"358":{"position":[[12,2]]},"359":{"position":[[8,2]]},"409":{"position":[[12,2]]},"410":{"position":[[8,2]]},"601":{"position":[[5,2]]},"624":{"position":[[6,2]]},"627":{"position":[[4,2]]},"769":{"position":[[12,2]]},"809":{"position":[[12,2]]},"835":{"position":[[12,2]]},"836":{"position":[[8,2]]},"894":{"position":[[12,2]]},"895":{"position":[[8,2]]},"1036":{"position":[[4,2]]},"1038":{"position":[[4,2]]},"1171":{"position":[[18,2]]},"1172":{"position":[[6,2]]},"1176":{"position":[[12,2]]},"1177":{"position":[[6,2]]},"1260":{"position":[[7,2]]},"1263":{"position":[[6,2]]}}}],["实践",{"_index":120,"t":{"289":{"position":[[8,2]]},"327":{"position":[[8,2]]},"368":{"position":[[8,2]]},"390":{"position":[[8,2]]},"419":{"position":[[8,2]]},"541":{"position":[[5,2]]},"774":{"position":[[8,2]]},"814":{"position":[[8,2]]},"845":{"position":[[8,2]]},"875":{"position":[[8,2]]},"904":{"position":[[8,2]]},"1058":{"position":[[5,2]]},"1141":{"position":[[7,2]]}}}],["实际",{"_index":128,"t":{"296":{"position":[[3,2]]},"334":{"position":[[3,2]]},"373":{"position":[[7,2]]},"424":{"position":[[7,2]]},"585":{"position":[[3,2]]},"781":{"position":[[3,2]]},"821":{"position":[[3,2]]},"850":{"position":[[7,2]]},"909":{"position":[[7,2]]},"1190":{"position":[[3,2]]}}}],["客户端",{"_index":124,"t":{"292":{"position":[[4,3]]},"817":{"position":[[4,3]]},"1181":{"position":[[3,3]]},"1182":{"position":[[10,3]]},"1184":{"position":[[12,3]]}}}],["家庭",{"_index":10,"t":{"20":{"position":[[0,2]]}}}],["寄存器",{"_index":338,"t":{"1229":{"position":[[4,3]]}}}],["密码",{"_index":204,"t":{"479":{"position":[[8,2]]},"481":{"position":[[6,2]]},"483":{"position":[[6,2]]}}}],["对比",{"_index":200,"t":{"471":{"position":[[5,2]]},"543":{"position":[[14,2]]},"953":{"position":[[5,2]]},"1012":{"position":[[3,2]]},"1016":{"position":[[3,2]]},"1020":{"position":[[3,2]]},"1022":{"position":[[11,2]]}}}],["小结",{"_index":199,"t":{"471":{"position":[[3,2]]},"953":{"position":[[3,2]]}}}],["尝试",{"_index":60,"t":{"146":{"position":[[18,2]]},"269":{"position":[[9,2]]},"611":{"position":[[18,2]]},"754":{"position":[[9,2]]}}}],["局限性",{"_index":310,"t":{"1139":{"position":[[6,3]]}}}],["层",{"_index":132,"t":{"297":{"position":[[9,1]]},"822":{"position":[[9,1]]}}}],["展示",{"_index":245,"t":{"590":{"position":[[9,2]]}}}],["嵌套",{"_index":281,"t":{"1041":{"position":[[4,2]]},"1073":{"position":[[6,2]]}}}],["工作",{"_index":311,"t":{"1146":{"position":[[3,2]]}}}],["工具",{"_index":242,"t":{"586":{"position":[[9,2]]}}}],["工厂",{"_index":185,"t":{"432":{"position":[[6,2]]},"446":{"position":[[5,2]]},"453":{"position":[[3,2]]},"460":{"position":[[5,2]]},"461":{"position":[[10,2]]},"465":{"position":[[6,2]]},"469":{"position":[[4,2]]},"917":{"position":[[6,2]]},"928":{"position":[[5,2]]},"935":{"position":[[3,2]]},"942":{"position":[[5,2]]},"943":{"position":[[10,2]]},"947":{"position":[[6,2]]},"951":{"position":[[4,2]]}}}],["布尔",{"_index":265,"t":{"995":{"position":[[6,2]]}}}],["带",{"_index":48,"t":{"142":{"position":[[3,1]]},"509":{"position":[[6,1]]},"607":{"position":[[3,1]]},"1219":{"position":[[6,1]]}}}],["帧",{"_index":348,"t":{"1244":{"position":[[7,1]]}}}],["常见",{"_index":153,"t":{"363":{"position":[[9,2]]},"840":{"position":[[9,2]]},"1069":{"position":[[3,2]]},"1084":{"position":[[3,2]]},"1089":{"position":[[3,2]]},"1188":{"position":[[3,2]]}}}],["常见问题",{"_index":286,"t":{"1050":{"position":[[3,4]]}}}],["并发",{"_index":82,"t":{"191":{"position":[[5,2]]},"696":{"position":[[5,2]]}}}],["序列化",{"_index":278,"t":{"1029":{"position":[[7,3]]},"1030":{"position":[[8,3]]},"1034":{"position":[[8,3]]}}}],["库",{"_index":272,"t":{"1009":{"position":[[14,1]]},"1022":{"position":[[10,1]]},"1029":{"position":[[5,1]]},"1048":{"position":[[9,1]]},"1171":{"position":[[7,1]]}}}],["应用",{"_index":46,"t":{"138":{"position":[[3,2]]},"296":{"position":[[5,2]]},"334":{"position":[[5,2]]},"373":{"position":[[9,2]]},"397":{"position":[[5,2]]},"398":{"position":[[2,2]]},"400":{"position":[[4,2]]},"424":{"position":[[9,2]]},"469":{"position":[[8,2]]},"585":{"position":[[5,2]]},"603":{"position":[[3,2]]},"781":{"position":[[5,2]]},"821":{"position":[[5,2]]},"850":{"position":[[9,2]]},"882":{"position":[[5,2]]},"883":{"position":[[2,2]]},"885":{"position":[[4,2]]},"909":{"position":[[9,2]]},"951":{"position":[[8,2]]},"1190":{"position":[[5,2]]},"1209":{"position":[[7,2]]}}}],["应用程序",{"_index":320,"t":{"1162":{"position":[[12,4]]}}}],["应该",{"_index":173,"t":{"398":{"position":[[0,2]]},"883":{"position":[[0,2]]}}}],["建议",{"_index":322,"t":{"1179":{"position":[[8,2]]},"1186":{"position":[[7,2]]}}}],["式",{"_index":198,"t":{"465":{"position":[[5,1]]},"947":{"position":[[5,1]]}}}],["引用",{"_index":289,"t":{"1051":{"position":[[6,2]]}}}],["引言",{"_index":276,"t":{"1027":{"position":[[3,2]]}}}],["强化",{"_index":159,"t":{"366":{"position":[[12,2]]},"843":{"position":[[12,2]]}}}],["循环",{"_index":288,"t":{"1051":{"position":[[4,2]]}}}],["微内核",{"_index":29,"t":{"111":{"position":[[3,3]]},"121":{"position":[[10,3]]},"161":{"position":[[10,3]]},"619":{"position":[[3,3]]},"629":{"position":[[10,3]]},"646":{"position":[[10,3]]}}}],["性",{"_index":86,"t":{"193":{"position":[[8,1]]},"698":{"position":[[8,1]]}}}],["性能",{"_index":283,"t":{"1045":{"position":[[3,2]]},"1186":{"position":[[3,2]]}}}],["总结",{"_index":27,"t":{"105":{"position":[[15,2]]},"127":{"position":[[3,2]]},"201":{"position":[[3,2]]},"303":{"position":[[3,2]]},"343":{"position":[[3,2]]},"351":{"position":[[2,2]]},"375":{"position":[[3,2]]},"402":{"position":[[3,2]]},"438":{"position":[[3,2]]},"489":{"position":[[3,2]]},"545":{"position":[[3,2]]},"575":{"position":[[0,2]]},"635":{"position":[[3,2]]},"706":{"position":[[3,2]]},"790":{"position":[[3,2]]},"828":{"position":[[3,2]]},"852":{"position":[[3,2]]},"860":{"position":[[2,2]]},"887":{"position":[[3,2]]},"923":{"position":[[3,2]]},"1002":{"position":[[3,2]]},"1004":{"position":[[2,2]]},"1024":{"position":[[0,2]]},"1166":{"position":[[3,2]]},"1192":{"position":[[0,2]]}}}],["恢复",{"_index":316,"t":{"1156":{"position":[[7,2]]}}}],["情况",{"_index":154,"t":{"363":{"position":[[11,2]]},"364":{"position":[[6,2]]},"366":{"position":[[6,2]]},"398":{"position":[[8,2]]},"840":{"position":[[11,2]]},"841":{"position":[[6,2]]},"843":{"position":[[6,2]]},"883":{"position":[[8,2]]}}}],["执行命令",{"_index":315,"t":{"1151":{"position":[[17,4]]}}}],["扩展",{"_index":40,"t":{"125":{"position":[[3,2]]},"412":{"position":[[12,2]]},"434":{"position":[[13,2]]},"633":{"position":[[3,2]]},"897":{"position":[[12,2]]},"919":{"position":[[13,2]]}}}],["找",{"_index":247,"t":{"956":{"position":[[9,1]]}}}],["技巧",{"_index":121,"t":{"289":{"position":[[14,2]]},"327":{"position":[[14,2]]},"368":{"position":[[14,2]]},"390":{"position":[[14,2]]},"419":{"position":[[16,2]]},"774":{"position":[[14,2]]},"814":{"position":[[14,2]]},"845":{"position":[[14,2]]},"875":{"position":[[14,2]]},"904":{"position":[[16,2]]},"1231":{"position":[[7,2]]}}}],["报错",{"_index":252,"t":{"971":{"position":[[12,2]]}}}],["抽象",{"_index":195,"t":{"460":{"position":[[3,2]]},"942":{"position":[[3,2]]}}}],["持久",{"_index":110,"t":{"273":{"position":[[6,2]]},"758":{"position":[[6,2]]}}}],["按",{"_index":58,"t":{"146":{"position":[[12,1]]},"611":{"position":[[12,1]]}}}],["按钮",{"_index":196,"t":{"461":{"position":[[13,2]]},"943":{"position":[[13,2]]}}}],["捕获",{"_index":342,"t":{"1238":{"position":[[4,2]]}}}],["接口",{"_index":123,"t":{"290":{"position":[[6,2]]},"292":{"position":[[9,2]]},"294":{"position":[[6,2]]},"359":{"position":[[6,2]]},"391":{"position":[[4,2]]},"410":{"position":[[6,2]]},"815":{"position":[[6,2]]},"817":{"position":[[9,2]]},"819":{"position":[[6,2]]},"836":{"position":[[6,2]]},"876":{"position":[[4,2]]},"895":{"position":[[6,2]]},"973":{"position":[[1,2]]},"1036":{"position":[[15,2]]},"1038":{"position":[[17,2]]}}}],["接口定义",{"_index":143,"t":{"332":{"position":[[4,4]]},"779":{"position":[[4,4]]}}}],["接口类型",{"_index":282,"t":{"1043":{"position":[[4,4]]}}}],["接口隔离",{"_index":164,"t":{"371":{"position":[[4,4]]},"848":{"position":[[4,4]]}}}],["控制",{"_index":300,"t":{"1094":{"position":[[6,2]]},"1111":{"position":[[6,2]]}}}],["推荐",{"_index":227,"t":{"549":{"position":[[11,2]]},"967":{"position":[[2,2]]},"969":{"position":[[3,2]]},"1024":{"position":[[3,2]]}}}],["操作",{"_index":236,"t":{"579":{"position":[[12,2]]},"581":{"position":[[7,2]]},"1092":{"position":[[6,2]]},"1109":{"position":[[6,2]]},"1227":{"position":[[9,2]]},"1229":{"position":[[7,2]]}}}],["支付",{"_index":178,"t":{"412":{"position":[[7,2]]},"897":{"position":[[7,2]]}}}],["支持",{"_index":139,"t":{"313":{"position":[[3,2]]},"430":{"position":[[10,2]]},"800":{"position":[[3,2]]},"915":{"position":[[10,2]]},"1029":{"position":[[10,2]]}}}],["改动",{"_index":63,"t":{"156":{"position":[[5,2]]},"171":{"position":[[5,2]]},"206":{"position":[[5,2]]},"218":{"position":[[5,2]]},"226":{"position":[[5,2]]},"236":{"position":[[5,2]]},"248":{"position":[[5,2]]},"641":{"position":[[5,2]]},"656":{"position":[[5,2]]},"667":{"position":[[5,2]]},"679":{"position":[[5,2]]},"711":{"position":[[5,2]]},"723":{"position":[[5,2]]},"735":{"position":[[5,2]]}}}],["改进",{"_index":118,"t":{"287":{"position":[[10,2]]},"325":{"position":[[10,2]]},"361":{"position":[[10,2]]},"388":{"position":[[10,2]]},"772":{"position":[[10,2]]},"812":{"position":[[10,2]]},"838":{"position":[[10,2]]},"873":{"position":[[10,2]]}}}],["数据库",{"_index":130,"t":{"297":{"position":[[4,3]]},"335":{"position":[[4,3]]},"454":{"position":[[7,3]]},"782":{"position":[[4,3]]},"822":{"position":[[4,3]]},"936":{"position":[[7,3]]}}}],["数据格式",{"_index":80,"t":{"189":{"position":[[8,4]]},"694":{"position":[[8,4]]}}}],["文件",{"_index":98,"t":{"262":{"position":[[6,2]]},"747":{"position":[[6,2]]},"1092":{"position":[[4,2]]},"1109":{"position":[[4,2]]}}}],["文化",{"_index":8,"t":{"16":{"position":[[0,2]]}}}],["文本框",{"_index":197,"t":{"461":{"position":[[18,3]]},"943":{"position":[[18,3]]}}}],["断点",{"_index":337,"t":{"1225":{"position":[[4,2]]},"1263":{"position":[[4,2]]}}}],["断言",{"_index":256,"t":{"975":{"position":[[2,2]]}}}],["新",{"_index":177,"t":{"412":{"position":[[6,1]]},"897":{"position":[[6,1]]}}}],["方",{"_index":145,"t":{"332":{"position":[[11,1]]},"779":{"position":[[11,1]]}}}],["方向",{"_index":41,"t":{"125":{"position":[[5,2]]},"633":{"position":[[5,2]]}}}],["方式",{"_index":114,"t":{"284":{"position":[[14,2]]},"322":{"position":[[14,2]]},"358":{"position":[[14,2]]},"409":{"position":[[14,2]]},"412":{"position":[[9,2]]},"549":{"position":[[13,2]]},"769":{"position":[[14,2]]},"809":{"position":[[14,2]]},"835":{"position":[[14,2]]},"894":{"position":[[14,2]]},"897":{"position":[[9,2]]},"1181":{"position":[[8,2]]}}}],["方案",{"_index":119,"t":{"287":{"position":[[12,2]]},"325":{"position":[[12,2]]},"361":{"position":[[12,2]]},"772":{"position":[[12,2]]},"812":{"position":[[12,2]]},"838":{"position":[[12,2]]},"1100":{"position":[[22,2]]},"1117":{"position":[[22,2]]}}}],["方法",{"_index":142,"t":{"330":{"position":[[4,2]]},"432":{"position":[[8,2]]},"453":{"position":[[5,2]]},"525":{"position":[[5,2]]},"528":{"position":[[9,2]]},"530":{"position":[[11,2]]},"532":{"position":[[14,2]]},"777":{"position":[[4,2]]},"917":{"position":[[8,2]]},"935":{"position":[[5,2]]},"956":{"position":[[12,2]]},"963":{"position":[[3,2]]},"989":{"position":[[19,2]]},"1137":{"position":[[7,2]]}}}],["日志",{"_index":95,"t":{"239":{"position":[[4,2]]},"426":{"position":[[7,2]]},"430":{"position":[[6,2]]},"432":{"position":[[12,2]]},"456":{"position":[[7,2]]},"714":{"position":[[4,2]]},"911":{"position":[[7,2]]},"915":{"position":[[6,2]]},"917":{"position":[[12,2]]},"938":{"position":[[7,2]]}}}],["时",{"_index":57,"t":{"146":{"position":[[11,1]]},"269":{"position":[[8,1]]},"271":{"position":[[8,1]]},"611":{"position":[[11,1]]},"754":{"position":[[8,1]]},"756":{"position":[[8,1]]},"1247":{"position":[[6,1]]}}}],["时间",{"_index":291,"t":{"1053":{"position":[[4,2]]}}}],["明史",{"_index":3,"t":{"8":{"position":[[1,2]]}}}],["是否",{"_index":208,"t":{"485":{"position":[[8,2]]}}}],["普通",{"_index":250,"t":{"961":{"position":[[0,2]]}}}],["更新",{"_index":209,"t":{"485":{"position":[[12,2]]}}}],["替代",{"_index":303,"t":{"1100":{"position":[[20,2]]},"1117":{"position":[[20,2]]}}}],["最佳",{"_index":226,"t":{"541":{"position":[[3,2]]},"1058":{"position":[[3,2]]},"1141":{"position":[[5,2]]}}}],["服务",{"_index":36,"t":{"119":{"position":[[8,2]]},"121":{"position":[[16,2]]},"161":{"position":[[16,2]]},"229":{"position":[[4,2]]},"239":{"position":[[6,2]]},"251":{"position":[[8,2]]},"269":{"position":[[6,2]]},"271":{"position":[[6,2]]},"337":{"position":[[8,2]]},"627":{"position":[[8,2]]},"629":{"position":[[16,2]]},"646":{"position":[[16,2]]},"714":{"position":[[6,2]]},"726":{"position":[[8,2]]},"738":{"position":[[4,2]]},"754":{"position":[[6,2]]},"756":{"position":[[6,2]]},"784":{"position":[[8,2]]}}}],["机制",{"_index":68,"t":{"181":{"position":[[16,2]]},"686":{"position":[[16,2]]}}}],["条件",{"_index":161,"t":{"366":{"position":[[16,2]]},"521":{"position":[[4,2]]},"843":{"position":[[16,2]]}}}],["松",{"_index":71,"t":{"183":{"position":[[6,1]]},"688":{"position":[[6,1]]}}}],["构建",{"_index":239,"t":{"583":{"position":[[3,2]]},"590":{"position":[[5,2]]}}}],["构造函数",{"_index":140,"t":{"328":{"position":[[4,4]]},"775":{"position":[[4,4]]}}}],["查杀",{"_index":325,"t":{"1196":{"position":[[0,2]]}}}],["标准",{"_index":277,"t":{"1029":{"position":[[3,2]]},"1171":{"position":[[5,2]]},"1182":{"position":[[4,2]]}}}],["标志",{"_index":266,"t":{"995":{"position":[[8,2]]}}}],["标签",{"_index":279,"t":{"1032":{"position":[[7,2]]},"1069":{"position":[[10,2]]},"1135":{"position":[[9,2]]}}}],["栈",{"_index":347,"t":{"1244":{"position":[[6,1]]}}}],["校验",{"_index":205,"t":{"481":{"position":[[4,2]]}}}],["核心",{"_index":30,"t":{"111":{"position":[[6,2]]},"114":{"position":[[4,2]]},"117":{"position":[[14,2]]},"157":{"position":[[11,2]]},"173":{"position":[[11,2]]},"207":{"position":[[11,2]]},"219":{"position":[[11,2]]},"227":{"position":[[11,2]]},"237":{"position":[[11,2]]},"249":{"position":[[11,2]]},"282":{"position":[[3,2]]},"320":{"position":[[3,2]]},"356":{"position":[[3,2]]},"407":{"position":[[3,2]]},"525":{"position":[[3,2]]},"619":{"position":[[6,2]]},"622":{"position":[[4,2]]},"625":{"position":[[14,2]]},"642":{"position":[[11,2]]},"658":{"position":[[11,2]]},"668":{"position":[[11,2]]},"680":{"position":[[11,2]]},"712":{"position":[[11,2]]},"724":{"position":[[11,2]]},"736":{"position":[[11,2]]},"767":{"position":[[3,2]]},"807":{"position":[[3,2]]},"833":{"position":[[3,2]]},"892":{"position":[[3,2]]}}}],["格式",{"_index":292,"t":{"1053":{"position":[[6,2]]}}}],["框架",{"_index":146,"t":{"339":{"position":[[7,2]]},"786":{"position":[[7,2]]},"1176":{"position":[[10,2]]}}}],["案例",{"_index":129,"t":{"296":{"position":[[7,2]]},"334":{"position":[[7,2]]},"781":{"position":[[7,2]]},"821":{"position":[[7,2]]},"1253":{"position":[[5,2]]}}}],["桶",{"_index":44,"t":{"134":{"position":[[5,1]]},"599":{"position":[[5,1]]}}}],["检查",{"_index":353,"t":{"1256":{"position":[[8,2]]}}}],["检测",{"_index":355,"t":{"1258":{"position":[[6,2]]}}}],["概念",{"_index":111,"t":{"282":{"position":[[5,2]]},"320":{"position":[[5,2]]},"356":{"position":[[5,2]]},"407":{"position":[[5,2]]},"767":{"position":[[5,2]]},"807":{"position":[[5,2]]},"833":{"position":[[5,2]]},"892":{"position":[[5,2]]}}}],["概述",{"_index":17,"t":{"91":{"position":[[3,2]]},"130":{"position":[[3,2]]},"280":{"position":[[3,2]]},"318":{"position":[[3,2]]},"354":{"position":[[3,2]]},"378":{"position":[[3,2]]},"405":{"position":[[3,2]]},"444":{"position":[[3,2]]},"474":{"position":[[3,2]]},"518":{"position":[[3,2]]},"595":{"position":[[3,2]]},"765":{"position":[[3,2]]},"805":{"position":[[3,2]]},"831":{"position":[[3,2]]},"863":{"position":[[3,2]]},"890":{"position":[[3,2]]},"926":{"position":[[3,2]]},"1124":{"position":[[14,2]]},"1144":{"position":[[3,2]]},"1205":{"position":[[7,2]]}}}],["模块",{"_index":100,"t":{"264":{"position":[[8,2]]},"749":{"position":[[8,2]]}}}],["模型",{"_index":83,"t":{"191":{"position":[[7,2]]},"696":{"position":[[7,2]]}}}],["模式",{"_index":91,"t":{"199":{"position":[[4,2]]},"315":{"position":[[18,2]]},"420":{"position":[[8,2]]},"422":{"position":[[7,2]]},"469":{"position":[[6,2]]},"534":{"position":[[5,2]]},"535":{"position":[[8,2]]},"704":{"position":[[4,2]]},"802":{"position":[[18,2]]},"905":{"position":[[8,2]]},"907":{"position":[[7,2]]},"951":{"position":[[6,2]]}}}],["死锁",{"_index":354,"t":{"1258":{"position":[[4,2]]}}}],["段",{"_index":309,"t":{"1133":{"position":[[10,1]]},"1254":{"position":[[4,1]]}}}],["每个",{"_index":51,"t":{"144":{"position":[[3,2]]},"609":{"position":[[3,2]]}}}],["池",{"_index":285,"t":{"1046":{"position":[[8,1]]}}}],["污染",{"_index":127,"t":{"294":{"position":[[8,2]]},"819":{"position":[[8,2]]}}}],["泄漏",{"_index":352,"t":{"1256":{"position":[[6,2]]}}}],["注入",{"_index":141,"t":{"328":{"position":[[8,2]]},"330":{"position":[[6,2]]},"339":{"position":[[5,2]]},"775":{"position":[[8,2]]},"777":{"position":[[6,2]]},"786":{"position":[[5,2]]}}}],["注册",{"_index":104,"t":{"269":{"position":[[4,2]]},"754":{"position":[[4,2]]}}}],["注意事项",{"_index":225,"t":{"539":{"position":[[3,4]]},"592":{"position":[[3,4]]},"1164":{"position":[[3,4]]}}}],["流式",{"_index":275,"t":{"1018":{"position":[[32,2]]}}}],["测试",{"_index":293,"t":{"1055":{"position":[[3,2]]}}}],["消费者",{"_index":224,"t":{"537":{"position":[[8,3]]}}}],["添加",{"_index":176,"t":{"412":{"position":[[4,2]]},"434":{"position":[[4,2]]},"897":{"position":[[4,2]]},"919":{"position":[[4,2]]},"1247":{"position":[[7,2]]}}}],["源码",{"_index":333,"t":{"1214":{"position":[[4,2]]}}}],["漏",{"_index":43,"t":{"134":{"position":[[4,1]]},"599":{"position":[[4,1]]}}}],["点",{"_index":343,"t":{"1238":{"position":[[6,1]]}}}],["版本",{"_index":169,"t":{"388":{"position":[[12,2]]},"873":{"position":[[12,2]]},"1162":{"position":[[9,2]]}}}],["特定",{"_index":125,"t":{"292":{"position":[[7,2]]},"817":{"position":[[7,2]]},"1162":{"position":[[7,2]]}}}],["特性",{"_index":62,"t":{"148":{"position":[[7,2]]},"613":{"position":[[7,2]]}}}],["特点",{"_index":32,"t":{"112":{"position":[[4,2]]},"551":{"position":[[13,2]]},"620":{"position":[[4,2]]},"1004":{"position":[[0,2]]}}}],["状态",{"_index":96,"t":{"261":{"position":[[3,2]]},"264":{"position":[[4,2]]},"269":{"position":[[15,2]]},"271":{"position":[[12,2]]},"273":{"position":[[9,2]]},"308":{"position":[[15,2]]},"746":{"position":[[3,2]]},"749":{"position":[[4,2]]},"754":{"position":[[15,2]]},"756":{"position":[[12,2]]},"758":{"position":[[9,2]]},"795":{"position":[[15,2]]}}}],["环境",{"_index":314,"t":{"1149":{"position":[[15,2]]},"1151":{"position":[[14,2]]},"1153":{"position":[[18,2]]},"1158":{"position":[[7,2]]},"1179":{"position":[[6,2]]}}}],["环境变量",{"_index":215,"t":{"507":{"position":[[6,4]]},"993":{"position":[[6,4]]}}}],["理解",{"_index":137,"t":{"309":{"position":[[5,2]]},"796":{"position":[[5,2]]}}}],["生产",{"_index":321,"t":{"1179":{"position":[[4,2]]}}}],["生产者",{"_index":223,"t":{"537":{"position":[[4,3]]}}}],["生成",{"_index":202,"t":{"479":{"position":[[4,2]]}}}],["用法",{"_index":15,"t":{"35":{"position":[[0,2]]},"42":{"position":[[0,2]]},"49":{"position":[[0,2]]},"58":{"position":[[0,2]]},"65":{"position":[[0,2]]},"72":{"position":[[0,2]]},"79":{"position":[[0,2]]},"86":{"position":[[0,2]]},"95":{"position":[[10,2]]},"100":{"position":[[11,2]]},"478":{"position":[[5,2]]},"494":{"position":[[18,2]]},"500":{"position":[[5,2]]},"555":{"position":[[22,2]]},"986":{"position":[[5,2]]},"999":{"position":[[7,2]]},"1089":{"position":[[11,2]]},"1106":{"position":[[8,2]]},"1148":{"position":[[5,2]]}}}],["监控",{"_index":241,"t":{"586":{"position":[[7,2]]}}}],["目标",{"_index":61,"t":{"148":{"position":[[5,2]]},"154":{"position":[[3,2]]},"169":{"position":[[3,2]]},"204":{"position":[[3,2]]},"216":{"position":[[3,2]]},"224":{"position":[[3,2]]},"234":{"position":[[3,2]]},"246":{"position":[[3,2]]},"259":{"position":[[3,2]]},"613":{"position":[[5,2]]},"639":{"position":[[3,2]]},"654":{"position":[[3,2]]},"665":{"position":[[3,2]]},"677":{"position":[[3,2]]},"709":{"position":[[3,2]]},"721":{"position":[[3,2]]},"733":{"position":[[3,2]]},"744":{"position":[[3,2]]}}}],["相关",{"_index":235,"t":{"579":{"position":[[10,2]]}}}],["硬",{"_index":77,"t":{"187":{"position":[[10,1]]},"692":{"position":[[10,1]]}}}],["确定",{"_index":207,"t":{"485":{"position":[[4,2]]}}}],["示例",{"_index":14,"t":{"30":{"position":[[0,2]]},"37":{"position":[[0,2]]},"44":{"position":[[0,2]]},"53":{"position":[[0,2]]},"60":{"position":[[0,2]]},"67":{"position":[[0,2]]},"74":{"position":[[0,2]]},"81":{"position":[[0,2]]},"88":{"position":[[0,2]]},"96":{"position":[[6,2]]},"101":{"position":[[6,2]]},"119":{"position":[[6,2]]},"136":{"position":[[7,2]]},"150":{"position":[[4,2]]},"197":{"position":[[6,2]]},"311":{"position":[[19,2]]},"385":{"position":[[12,2]]},"414":{"position":[[9,2]]},"434":{"position":[[15,2]]},"436":{"position":[[8,2]]},"447":{"position":[[4,2]]},"449":{"position":[[4,2]]},"454":{"position":[[4,2]]},"456":{"position":[[4,2]]},"461":{"position":[[4,2]]},"537":{"position":[[11,2]]},"553":{"position":[[6,2]]},"569":{"position":[[0,2]]},"573":{"position":[[0,2]]},"585":{"position":[[7,2]]},"601":{"position":[[7,2]]},"615":{"position":[[4,2]]},"627":{"position":[[6,2]]},"702":{"position":[[6,2]]},"798":{"position":[[19,2]]},"870":{"position":[[12,2]]},"899":{"position":[[9,2]]},"919":{"position":[[15,2]]},"921":{"position":[[8,2]]},"929":{"position":[[4,2]]},"931":{"position":[[4,2]]},"936":{"position":[[4,2]]},"938":{"position":[[4,2]]},"943":{"position":[[4,2]]},"1056":{"position":[[8,2]]},"1060":{"position":[[5,2]]}}}],["程序",{"_index":336,"t":{"1219":{"position":[[10,2]]}}}],["空",{"_index":253,"t":{"973":{"position":[[0,1]]},"977":{"position":[[0,1]]}}}],["符号",{"_index":350,"t":{"1246":{"position":[[8,2]]}}}],["符合",{"_index":152,"t":{"361":{"position":[[4,2]]},"417":{"position":[[7,2]]},"838":{"position":[[4,2]]},"902":{"position":[[7,2]]}}}],["第三方",{"_index":271,"t":{"1009":{"position":[[3,3]]},"1048":{"position":[[6,3]]}}}],["简介",{"_index":211,"t":{"492":{"position":[[12,2]]},"982":{"position":[[3,2]]},"1063":{"position":[[3,2]]},"1080":{"position":[[3,2]]},"1085":{"position":[[3,2]]},"1169":{"position":[[15,2]]}}}],["简化",{"_index":259,"t":{"979":{"position":[[7,2]]}}}],["简单",{"_index":191,"t":{"446":{"position":[[3,2]]},"928":{"position":[[3,2]]}}}],["简史",{"_index":1,"t":{"6":{"position":[[2,2]]}}}],["算法",{"_index":50,"t":{"142":{"position":[[20,2]]},"607":{"position":[[20,2]]}}}],["管理",{"_index":99,"t":{"264":{"position":[[6,2]]},"749":{"position":[[6,2]]},"1098":{"position":[[6,2]]},"1115":{"position":[[6,2]]},"1225":{"position":[[6,2]]}}}],["管理器",{"_index":332,"t":{"1212":{"position":[[7,3]]}}}],["管道",{"_index":219,"t":{"513":{"position":[[6,2]]}}}],["类似",{"_index":94,"t":{"211":{"position":[[9,2]]},"672":{"position":[[9,2]]}}}],["类型",{"_index":255,"t":{"973":{"position":[[19,2]]},"975":{"position":[[0,2]]},"1034":{"position":[[6,2]]},"1040":{"position":[[5,2]]},"1126":{"position":[[8,2]]},"1128":{"position":[[9,2]]}}}],["系统",{"_index":181,"t":{"426":{"position":[[9,2]]},"456":{"position":[[9,2]]},"911":{"position":[[9,2]]},"938":{"position":[[9,2]]},"1156":{"position":[[5,2]]},"1261":{"position":[[10,2]]}}}],["组件",{"_index":33,"t":{"114":{"position":[[6,2]]},"622":{"position":[[6,2]]}}}],["组合",{"_index":24,"t":{"103":{"position":[[4,2]]},"290":{"position":[[8,2]]},"369":{"position":[[6,2]]},"393":{"position":[[4,2]]},"430":{"position":[[4,2]]},"815":{"position":[[8,2]]},"846":{"position":[[6,2]]},"878":{"position":[[4,2]]},"915":{"position":[[4,2]]}}}],["经济",{"_index":9,"t":{"18":{"position":[[0,2]]}}}],["绑定",{"_index":264,"t":{"993":{"position":[[4,2]]}}}],["结合",{"_index":228,"t":{"555":{"position":[[11,2]]}}}],["结构",{"_index":222,"t":{"523":{"position":[[9,2]]},"963":{"position":[[0,2]]},"977":{"position":[[1,2]]},"1032":{"position":[[4,2]]},"1041":{"position":[[6,2]]},"1073":{"position":[[3,2]]},"1132":{"position":[[7,2]]},"1133":{"position":[[6,2]]},"1135":{"position":[[6,2]]}}}],["结果",{"_index":39,"t":{"123":{"position":[[6,2]]},"163":{"position":[[6,2]]},"177":{"position":[[6,2]]},"213":{"position":[[6,2]]},"221":{"position":[[6,2]]},"231":{"position":[[6,2]]},"243":{"position":[[6,2]]},"255":{"position":[[6,2]]},"277":{"position":[[6,2]]},"631":{"position":[[6,2]]},"648":{"position":[[6,2]]},"662":{"position":[[6,2]]},"674":{"position":[[6,2]]},"682":{"position":[[6,2]]},"718":{"position":[[6,2]]},"730":{"position":[[6,2]]},"740":{"position":[[6,2]]},"762":{"position":[[6,2]]}}}],["结论",{"_index":28,"t":{"107":{"position":[[3,2]]},"515":{"position":[[3,2]]},"1077":{"position":[[3,2]]},"1102":{"position":[[3,2]]},"1119":{"position":[[3,2]]}}}],["继承",{"_index":163,"t":{"369":{"position":[[10,2]]},"393":{"position":[[8,2]]},"846":{"position":[[10,2]]},"878":{"position":[[8,2]]}}}],["缓冲",{"_index":284,"t":{"1046":{"position":[[6,2]]}}}],["编码",{"_index":78,"t":{"187":{"position":[[11,2]]},"692":{"position":[[11,2]]}}}],["编程",{"_index":88,"t":{"195":{"position":[[8,2]]},"700":{"position":[[8,2]]}}}],["编译",{"_index":319,"t":{"1160":{"position":[[8,2]]},"1214":{"position":[[6,2]]},"1247":{"position":[[4,2]]}}}],["网络日志",{"_index":187,"t":{"434":{"position":[[6,4]]},"919":{"position":[[6,4]]}}}],["网络连接",{"_index":193,"t":{"449":{"position":[[7,4]]},"931":{"position":[[7,4]]}}}],["耦合",{"_index":72,"t":{"183":{"position":[[7,2]]},"688":{"position":[[7,2]]}}}],["职责",{"_index":170,"t":{"395":{"position":[[6,2]]},"880":{"position":[[6,2]]}}}],["聚合",{"_index":89,"t":{"197":{"position":[[3,2]]},"702":{"position":[[3,2]]}}}],["自动",{"_index":105,"t":{"269":{"position":[[11,2]]},"754":{"position":[[11,2]]}}}],["自动化",{"_index":344,"t":{"1240":{"position":[[4,3]]}}}],["自定义",{"_index":269,"t":{"1000":{"position":[[4,3]]},"1034":{"position":[[3,3]]},"1071":{"position":[[3,3]]}}}],["获取",{"_index":55,"t":{"146":{"position":[[7,2]]},"496":{"position":[[4,2]]},"498":{"position":[[5,2]]},"611":{"position":[[7,2]]},"1090":{"position":[[4,2]]},"1107":{"position":[[4,2]]},"1128":{"position":[[4,2]]},"1133":{"position":[[4,2]]}}}],["行为",{"_index":138,"t":{"309":{"position":[[16,2]]},"796":{"position":[[16,2]]}}}],["覆盖",{"_index":23,"t":{"98":{"position":[[7,2]]}}}],["观察点",{"_index":341,"t":{"1236":{"position":[[4,3]]}}}],["观测",{"_index":85,"t":{"193":{"position":[[6,2]]},"698":{"position":[[6,2]]}}}],["解决",{"_index":287,"t":{"1050":{"position":[[7,2]]}}}],["解析",{"_index":267,"t":{"997":{"position":[[4,2]]},"1007":{"position":[[18,2]]},"1009":{"position":[[12,2]]},"1014":{"position":[[41,2]]},"1018":{"position":[[40,2]]},"1022":{"position":[[8,2]]},"1135":{"position":[[4,2]]}}}],["解析器",{"_index":270,"t":{"1000":{"position":[[7,3]]}}}],["警告",{"_index":246,"t":{"956":{"position":[[7,2]]}}}],["设置",{"_index":214,"t":{"507":{"position":[[4,2]]}}}],["设计",{"_index":31,"t":{"111":{"position":[[8,2]]},"199":{"position":[[23,2]]},"261":{"position":[[7,2]]},"262":{"position":[[8,2]]},"391":{"position":[[6,2]]},"428":{"position":[[6,2]]},"619":{"position":[[8,2]]},"704":{"position":[[23,2]]},"746":{"position":[[7,2]]},"747":{"position":[[8,2]]},"876":{"position":[[6,2]]},"913":{"position":[[6,2]]}}}],["访问",{"_index":131,"t":{"297":{"position":[[7,2]]},"335":{"position":[[7,2]]},"782":{"position":[[7,2]]},"822":{"position":[[7,2]]}}}],["语法",{"_index":258,"t":{"979":{"position":[[5,2]]}}}],["语言",{"_index":112,"t":{"284":{"position":[[5,2]]},"289":{"position":[[5,2]]},"322":{"position":[[5,2]]},"327":{"position":[[5,2]]},"358":{"position":[[5,2]]},"368":{"position":[[5,2]]},"385":{"position":[[5,2]]},"390":{"position":[[5,2]]},"409":{"position":[[5,2]]},"419":{"position":[[5,2]]},"769":{"position":[[5,2]]},"774":{"position":[[5,2]]},"809":{"position":[[5,2]]},"814":{"position":[[5,2]]},"835":{"position":[[5,2]]},"845":{"position":[[5,2]]},"870":{"position":[[5,2]]},"875":{"position":[[5,2]]},"894":{"position":[[5,2]]},"904":{"position":[[5,2]]}}}],["读取",{"_index":240,"t":{"583":{"position":[[7,2]]},"1010":{"position":[[37,2]]}}}],["调度",{"_index":53,"t":{"146":{"position":[[4,2]]},"611":{"position":[[4,2]]}}}],["调用",{"_index":144,"t":{"332":{"position":[[9,2]]},"779":{"position":[[9,2]]},"1137":{"position":[[5,2]]},"1261":{"position":[[12,2]]}}}],["调试",{"_index":13,"t":{"28":{"position":[[0,2]]},"1219":{"position":[[4,2]]},"1221":{"position":[[4,2]]},"1223":{"position":[[6,2]]},"1231":{"position":[[5,2]]},"1232":{"position":[[7,2]]},"1234":{"position":[[7,2]]},"1240":{"position":[[7,2]]},"1242":{"position":[[6,2]]},"1253":{"position":[[3,2]]},"1254":{"position":[[7,2]]}}}],["调试信息",{"_index":349,"t":{"1246":{"position":[[3,4]]},"1247":{"position":[[9,4]]},"1249":{"position":[[6,4]]},"1251":{"position":[[6,4]]}}}],["资源",{"_index":356,"t":{"1265":{"position":[[5,2]]}}}],["超时",{"_index":216,"t":{"509":{"position":[[7,2]]}}}],["转换",{"_index":257,"t":{"975":{"position":[[5,2]]}}}],["软件包",{"_index":318,"t":{"1160":{"position":[[5,3]]}}}],["输入",{"_index":213,"t":{"505":{"position":[[6,2]]}}}],["输出",{"_index":184,"t":{"430":{"position":[[14,2]]},"434":{"position":[[10,2]]},"915":{"position":[[14,2]]},"919":{"position":[[10,2]]}}}],["过度",{"_index":175,"t":{"400":{"position":[[2,2]]},"885":{"position":[[2,2]]}}}],["运行",{"_index":38,"t":{"121":{"position":[[8,2]]},"123":{"position":[[4,2]]},"161":{"position":[[8,2]]},"163":{"position":[[4,2]]},"177":{"position":[[4,2]]},"213":{"position":[[4,2]]},"221":{"position":[[4,2]]},"231":{"position":[[4,2]]},"243":{"position":[[4,2]]},"255":{"position":[[4,2]]},"277":{"position":[[4,2]]},"509":{"position":[[4,2]]},"629":{"position":[[8,2]]},"631":{"position":[[4,2]]},"646":{"position":[[8,2]]},"648":{"position":[[4,2]]},"662":{"position":[[4,2]]},"674":{"position":[[4,2]]},"682":{"position":[[4,2]]},"718":{"position":[[4,2]]},"730":{"position":[[4,2]]},"740":{"position":[[4,2]]},"762":{"position":[[4,2]]},"1162":{"position":[[5,2]]},"1221":{"position":[[6,2]]}}}],["进入",{"_index":313,"t":{"1149":{"position":[[5,2]]}}}],["进程",{"_index":299,"t":{"1090":{"position":[[6,2]]},"1094":{"position":[[4,2]]},"1107":{"position":[[6,2]]},"1111":{"position":[[4,2]]},"1196":{"position":[[4,2]]},"1199":{"position":[[2,2]]},"1221":{"position":[[10,2]]},"1232":{"position":[[5,2]]}}}],["进行",{"_index":229,"t":{"563":{"position":[[14,2]]}}}],["远程",{"_index":345,"t":{"1242":{"position":[[4,2]]}}}],["违反",{"_index":115,"t":{"285":{"position":[[4,2]]},"301":{"position":[[3,2]]},"323":{"position":[[4,2]]},"341":{"position":[[3,2]]},"363":{"position":[[3,2]]},"364":{"position":[[4,2]]},"366":{"position":[[4,2]]},"383":{"position":[[0,2]]},"386":{"position":[[4,2]]},"414":{"position":[[3,2]]},"415":{"position":[[4,2]]},"770":{"position":[[4,2]]},"788":{"position":[[3,2]]},"810":{"position":[[4,2]]},"826":{"position":[[3,2]]},"840":{"position":[[3,2]]},"841":{"position":[[4,2]]},"843":{"position":[[4,2]]},"868":{"position":[[0,2]]},"871":{"position":[[4,2]]},"899":{"position":[[3,2]]},"900":{"position":[[4,2]]}}}],["连接",{"_index":189,"t":{"441":{"position":[[7,2]]},"513":{"position":[[8,2]]},"1181":{"position":[[6,2]]}}}],["连接器",{"_index":194,"t":{"454":{"position":[[10,3]]},"936":{"position":[[10,3]]}}}],["适应性",{"_index":84,"t":{"191":{"position":[[11,3]]},"696":{"position":[[11,3]]}}}],["适用",{"_index":25,"t":{"105":{"position":[[11,2]]},"487":{"position":[[3,2]]},"557":{"position":[[13,2]]}}}],["选",{"_index":147,"t":{"339":{"position":[[11,1]]},"786":{"position":[[11,1]]}}}],["选项",{"_index":180,"t":{"420":{"position":[[6,2]]},"905":{"position":[[6,2]]}}}],["通用",{"_index":323,"t":{"1184":{"position":[[4,2]]}}}],["通知",{"_index":231,"t":{"563":{"position":[[18,2]]}}}],["通过",{"_index":151,"t":{"359":{"position":[[4,2]]},"836":{"position":[[4,2]]}}}],["遵循",{"_index":117,"t":{"287":{"position":[[4,2]]},"325":{"position":[[4,2]]},"388":{"position":[[4,2]]},"772":{"position":[[4,2]]},"812":{"position":[[4,2]]},"873":{"position":[[4,2]]}}}],["避免",{"_index":126,"t":{"294":{"position":[[4,2]]},"819":{"position":[[4,2]]}}}],["配置",{"_index":74,"t":{"187":{"position":[[5,2]]},"692":{"position":[[5,2]]},"1174":{"position":[[6,2]]}}}],["重构",{"_index":155,"t":{"363":{"position":[[14,2]]},"414":{"position":[[12,2]]},"417":{"position":[[4,2]]},"840":{"position":[[14,2]]},"899":{"position":[[12,2]]},"902":{"position":[[4,2]]}}}],["重要",{"_index":149,"t":{"349":{"position":[[2,2]]},"858":{"position":[[2,2]]}}}],["错误",{"_index":190,"t":{"441":{"position":[[9,2]]},"1254":{"position":[[5,2]]}}}],["错误判断",{"_index":218,"t":{"511":{"position":[[6,4]]}}}],["错误处理",{"_index":249,"t":{"959":{"position":[[0,4]]}}}],["问题",{"_index":290,"t":{"1051":{"position":[[8,2]]}}}],["问题解答",{"_index":324,"t":{"1188":{"position":[[5,4]]}}}],["防御性",{"_index":87,"t":{"195":{"position":[[5,3]]},"700":{"position":[[5,3]]}}}],["附录",{"_index":296,"t":{"1060":{"position":[[0,2]]}}}],["隔离",{"_index":317,"t":{"1158":{"position":[[5,2]]}}}],["集成",{"_index":102,"t":{"266":{"position":[[5,2]]},"267":{"position":[[14,2]]},"751":{"position":[[5,2]]},"752":{"position":[[14,2]]}}}],["需要",{"_index":167,"t":{"380":{"position":[[6,2]]},"485":{"position":[[10,2]]},"865":{"position":[[6,2]]}}}],["非",{"_index":76,"t":{"187":{"position":[[9,1]]},"199":{"position":[[7,1]]},"692":{"position":[[9,1]]},"704":{"position":[[7,1]]}}}],["顶",{"_index":5,"t":{"10":{"position":[[2,1]]}}}],["顺序",{"_index":59,"t":{"146":{"position":[[16,2]]},"611":{"position":[[16,2]]}}}],["验证",{"_index":294,"t":{"1055":{"position":[[5,2]]},"1069":{"position":[[8,2]]},"1071":{"position":[[6,2]]},"1073":{"position":[[8,2]]}}}],["高性能",{"_index":274,"t":{"1014":{"position":[[32,3]]}}}],["高效",{"_index":273,"t":{"1010":{"position":[[29,2]]}}}],["高级",{"_index":179,"t":{"419":{"position":[[14,2]]},"500":{"position":[[3,2]]},"904":{"position":[[14,2]]},"999":{"position":[[5,2]]},"1174":{"position":[[4,2]]},"1231":{"position":[[3,2]]}}}],["默认",{"_index":260,"t":{"987":{"position":[[6,2]]},"1007":{"position":[[10,2]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":1,"t":"历史博文","s":"","u":"/blog/archive","p":1},{"i":3,"t":"能说的上话很重要。","s":"一句顶一万句","u":"/blog/一句顶一万句","p":3},{"i":12,"t":"『人类简史』纵览文化、宗教、社会等多元领域，虽在专业深度上有不足，却为我理解『人类社会』提供了宝贵视角。","s":"人类简史","u":"/blog/人类简史","p":12},{"i":22,"t":"历史书如同一面哈哈镜，常常放大特定利益阶层的功绩，却忽视或淡化了平凡人的力量与贡献。","s":"南明史","u":"/blog/南明史","p":22},{"i":24,"t":"info/warning","s":"Makefile 常用方法","u":"/docs/note/build/makefile_function","p":24},{"i":90,"t":"1. 概述","s":"Makefile 中 : 和 :: 的使用指南","u":"/docs/note/build/makefile:","p":90},{"i":109,"t":"microkernel（微内核）架构的核心思想是 核心功能最小化，其他功能以插件或服务的形式运行在用户态，通过 进程间通信（IPC） 与内核交互。","s":"microkernel 设计1","u":"/docs/note/design/microkernel/microkernel1","p":109},{"i":129,"t":"1. 概述","s":"Token Bucket（令牌桶）算法","u":"/docs/note/design/algorithm/token_bucket","p":129},{"i":152,"t":"microkernel 设计1 目前只支持服务发送消息，内核接受消息。","s":"microkernel 设计2","u":"/docs/note/design/microkernel/microkernel2","p":152},{"i":168,"t":"1. 目标","s":"microkernel 设计3","u":"/docs/note/design/microkernel/microkernel3","p":168},{"i":179,"t":"在编程和系统设计中，Future-Proof 机制指的是通过合理的架构设计和技术选择，使代码或系统能够适应未来的需求变化、技术演进和规模扩展，而无需大规模重构或重写。其核心目标是降低长期维护成本，提高可扩展性。","s":"Future-Proof 机制","u":"/docs/note/design/future_proof","p":179},{"i":203,"t":"1. 目标","s":"microkernel 设计4","u":"/docs/note/design/microkernel/microkernel4","p":203},{"i":215,"t":"1. 目标","s":"microkernel 设计5","u":"/docs/note/design/microkernel/microkernel5","p":215},{"i":223,"t":"1. 目标","s":"microkernel 设计6","u":"/docs/note/design/microkernel/microkernel6","p":223},{"i":233,"t":"1. 目标","s":"microkernel 设计7","u":"/docs/note/design/microkernel/microkernel7","p":233},{"i":245,"t":"1. 目标","s":"microkernel 设计8","u":"/docs/note/design/microkernel/microkernel8","p":245},{"i":257,"t":"服务状态持久化","s":"microkernel 设计9","u":"/docs/note/design/microkernel/microkernel9","p":257},{"i":279,"t":"1. 概述","s":"接口隔离原则(ISP)","u":"/docs/note/design/oop_pinciple/isp","p":279},{"i":305,"t":"1. channel 交互","s":"Golang 多goroutine交互模型","u":"/docs/note/design/multi_goroutine","p":305},{"i":317,"t":"1. 概述","s":"依赖倒置原则(DIP)","u":"/docs/note/design/oop_pinciple/dip","p":317},{"i":345,"t":"面向对象编程(OOP)有几个核心设计原则，这些原则有助于创建灵活、可维护和可扩展的软件系统。以下是主要的OOP设计原则：","s":"面向对象编程中的设计原则","u":"/docs/note/design/oop_pinciple/principle","p":345},{"i":353,"t":"1. 概述","s":"里氏替换原则(LSP)","u":"/docs/note/design/oop_pinciple/lsp","p":353},{"i":377,"t":"1. 概述","s":"单一职责原则(SRP)","u":"/docs/note/design/oop_pinciple/srp","p":377},{"i":404,"t":"1. 概述","s":"开闭原则(OCP)","u":"/docs/note/design/oop_pinciple/ocp","p":404},{"i":440,"t":"1. tls 连接错误","s":"git 错误","u":"/docs/note/git/git_err","p":440},{"i":443,"t":"1. 概述","s":"工厂模式（Factory Pattern）","u":"/docs/note/design/standard_design_patterns/create/factory","p":443},{"i":473,"t":"1. 概述","s":"Golang bcrypt","u":"/docs/note/golang/bcrypt","p":473},{"i":491,"t":"1. os/exec 包简介","s":"Golang os/exec 用法","u":"/docs/note/golang/cmd","p":491},{"i":517,"t":"1. 概述","s":"Golang sync.Cond","u":"/docs/note/golang/concurrency/cond","p":517},{"i":547,"t":"在 Golang 中，多协程 goroutine之间的交互主要通过以下几种方式实现：","s":"Golang 并发编程","u":"/docs/note/golang/concurrency/","p":547},{"i":577,"t":"runtime/debug 是 Go 标准库中用于调试和运行时信息收集的重要包，提供了多种实用功能。下面我将详细介绍其主要功能和用法：","s":"Golang runtime/debug 用法","u":"/docs/note/golang/debug","p":577},{"i":594,"t":"1. 概述","s":"Token Bucket（令牌桶）算法","u":"/docs/note/golang/design/algorithm/token_bucket","p":594},{"i":617,"t":"microkernel（微内核）架构的核心思想是 核心功能最小化，其他功能以插件或服务的形式运行在用户态，通过 进程间通信（IPC） 与内核交互。","s":"microkernel 设计1","u":"/docs/note/golang/design/microkernel/microkernel1","p":617},{"i":637,"t":"microkernel 设计1 目前只支持服务发送消息，内核接受消息。","s":"microkernel 设计2","u":"/docs/note/golang/design/microkernel/microkernel2","p":637},{"i":653,"t":"1. 目标","s":"microkernel 设计3","u":"/docs/note/golang/design/microkernel/microkernel3","p":653},{"i":664,"t":"1. 目标","s":"microkernel 设计4","u":"/docs/note/golang/design/microkernel/microkernel4","p":664},{"i":676,"t":"1. 目标","s":"microkernel 设计5","u":"/docs/note/golang/design/microkernel/microkernel5","p":676},{"i":684,"t":"在编程和系统设计中，Future-Proof 机制指的是通过合理的架构设计和技术选择，使代码或系统能够适应未来的需求变化、技术演进和规模扩展，而无需大规模重构或重写。其核心目标是降低长期维护成本，提高可扩展性。","s":"Future-Proof 机制","u":"/docs/note/golang/design/future_proof","p":684},{"i":708,"t":"1. 目标","s":"microkernel 设计7","u":"/docs/note/golang/design/microkernel/microkernel7","p":708},{"i":720,"t":"1. 目标","s":"microkernel 设计8","u":"/docs/note/golang/design/microkernel/microkernel8","p":720},{"i":732,"t":"1. 目标","s":"microkernel 设计6","u":"/docs/note/golang/design/microkernel/microkernel6","p":732},{"i":742,"t":"服务状态持久化","s":"microkernel 设计9","u":"/docs/note/golang/design/microkernel/microkernel9","p":742},{"i":764,"t":"1. 概述","s":"依赖倒置原则(DIP)","u":"/docs/note/golang/design/oop_pinciple/dip","p":764},{"i":792,"t":"1. channel 交互","s":"Golang 多goroutine交互模型","u":"/docs/note/golang/design/multi_goroutine","p":792},{"i":804,"t":"1. 概述","s":"接口隔离原则(ISP)","u":"/docs/note/golang/design/oop_pinciple/isp","p":804},{"i":830,"t":"1. 概述","s":"里氏替换原则(LSP)","u":"/docs/note/golang/design/oop_pinciple/lsp","p":830},{"i":854,"t":"面向对象编程(OOP)有几个核心设计原则，这些原则有助于创建灵活、可维护和可扩展的软件系统。以下是主要的OOP设计原则：","s":"面向对象编程中的设计原则","u":"/docs/note/golang/design/oop_pinciple/principle","p":854},{"i":862,"t":"1. 概述","s":"单一职责原则(SRP)","u":"/docs/note/golang/design/oop_pinciple/srp","p":862},{"i":889,"t":"1. 概述","s":"开闭原则(OCP)","u":"/docs/note/golang/design/oop_pinciple/ocp","p":889},{"i":925,"t":"1. 概述","s":"工厂模式（Factory Pattern）","u":"/docs/note/golang/design/standard_design_patterns/create/factory","p":925},{"i":955,"t":"1. ide 警告找不到方法","s":"goland 问题处理记录","u":"/docs/note/golang/goland","p":955},{"i":958,"t":"------","s":"Golang 随笔","u":"/docs/note/golang/jotting","p":958},{"i":981,"t":"1. 简介","s":"kingpin 用法","u":"/docs/note/golang/kingpin","p":981},{"i":1006,"t":"1. Golang 默认 JSON 解析 (encoding/json)","s":"Golang JSON 解析","u":"/docs/note/golang/json","p":1006},{"i":1026,"t":"1. 引言","s":"Golang 序列化/反序列化","u":"/docs/note/golang/serialization","p":1026},{"i":1062,"t":"1. 简介","s":"Golang Validator","u":"/docs/note/golang/validator","p":1062},{"i":1079,"t":"1. 简介","s":"Golang sys/unix syscall","u":"/docs/note/golang/syscall","p":1079},{"i":1123,"t":"1. 反射（Reflect）概述","s":"Golang Reflect","u":"/docs/note/golang/reflect","p":1123},{"i":1143,"t":"1. 概述","s":"chroot 用法","u":"/docs/note/os/chroot","p":1143},{"i":1168,"t":"1. Unix Socket 简介","s":"Golang Unix Socket 服务","u":"/docs/note/golang/web_server_unix","p":1168},{"i":1194,"t":"孤儿进程： 父亲先死，儿子被1号收养。","s":"僵尸进程","u":"/docs/note/os/zombie","p":1194},{"i":1204,"t":"1. GDB 概述","s":"GDB 调试工具","u":"/docs/note/os/debug/gdb","p":1204}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/1",[0,4.45,1,5.155]],["t/3",[2,4.35,3,4.35,4,4.35,5,3.755]],["t/12",[6,3.318,7,2.078,8,2.078,9,2.078,10,2.078,11,3.318,12,2.078,13,2.078,14,2.078,15,2.078,16,2.078,17,2.078,18,2.078,19,1.794,20,2.078,21,2.078]],["t/22",[0,1.939,22,2.246,23,2.246,24,2.246,25,2.246,26,2.246,27,2.246,28,2.246,29,2.246,30,2.246,31,2.246,32,2.246,33,2.246,34,2.246,35,2.246,36,2.246]],["t/24",[37,0.215]],["t/90",[37,0.175,38,1.548]],["t/109",[37,0.103,39,1.613,40,1.613,41,1.613,42,1.136,43,2.355,44,1.613,45,1.613,46,1.613,47,1.136,48,1.613,49,1.445,50,1.613,51,1.613,52,1.219,53,1.445,54,1.613,55,1.32,56,1.219]],["t/129",[37,0.175,38,1.548]],["t/152",[37,0.142,47,1.709,55,1.986,57,1.709,58,2.428,59,2.428,60,2.428,61,3.618,62,2.428]],["t/168",[37,0.175,63,2.026]],["t/179",[37,0.073,42,0.755,52,0.811,57,0.755,63,0.489,64,1.073,65,1.865,66,0.878,67,1.073,68,1.073,69,1.073,70,1.073,71,1.865,72,1.073,73,1.073,74,1.073,75,1.073,76,1.073,77,1.073,78,1.073,79,1.073,80,1.073,81,0.878,82,1.073,83,1.073,84,1.073,85,1.073,86,1.073,87,1.073,88,0.878,89,1.073,90,1.073,91,1.073]],["t/203",[37,0.175,63,2.026]],["t/215",[37,0.175,63,2.026]],["t/223",[37,0.175,63,2.026]],["t/233",[37,0.175,63,2.026]],["t/245",[37,0.175,63,2.026]],["t/257",[47,2.643,92,3.755,93,3.755,94,3.755]],["t/279",[37,0.175,38,1.548]],["t/305",[37,0.203,56,3.078]],["t/317",[37,0.175,38,1.548]],["t/345",[37,0.109,42,1.217,57,1.958,81,1.414,88,1.414,95,1.729,96,1.729,97,3.489,98,1.729,99,1.729,100,1.729,101,1.729,102,1.729,103,1.549,104,1.414]],["t/353",[37,0.175,38,1.548]],["t/377",[37,0.175,38,1.548]],["t/404",[37,0.175,38,1.548]],["t/440",[37,0.193,105,4.35,106,4.35]],["t/443",[37,0.175,38,1.548]],["t/473",[37,0.175,38,1.548]],["t/491",[37,0.207,107,3.483,108,2.632]],["t/517",[37,0.175,38,1.548]],["t/547",[37,0.128,52,1.593,56,1.593,66,1.725,103,1.889,104,1.725,109,2.442,110,2.442,111,2.442,112,2.442,113,2.442,114,2.442,115,2.442]],["t/577",[5,1.466,19,1.466,37,0.122,43,1.313,49,1.313,66,1.199,104,1.199,107,1.466,116,1.698,117,1.698,118,1.698,119,1.698,120,1.698,121,1.698,122,1.698,123,1.698,124,1.698,125,1.698,126,1.698,127,1.698,128,1.698,129,1.698]],["t/594",[37,0.175,38,1.548]],["t/617",[37,0.103,39,1.613,40,1.613,41,1.613,42,1.136,43,2.355,44,1.613,45,1.613,46,1.613,47,1.136,48,1.613,49,1.445,50,1.613,51,1.613,52,1.219,53,1.445,54,1.613,55,1.32,56,1.219]],["t/637",[37,0.142,47,1.709,55,1.986,57,1.709,58,2.428,59,2.428,60,2.428,61,3.618,62,2.428]],["t/653",[37,0.175,63,2.026]],["t/664",[37,0.175,63,2.026]],["t/676",[37,0.175,63,2.026]],["t/684",[37,0.073,42,0.755,52,0.811,57,0.755,63,0.489,64,1.073,65,1.865,66,0.878,67,1.073,68,1.073,69,1.073,70,1.073,71,1.865,72,1.073,73,1.073,74,1.073,75,1.073,76,1.073,77,1.073,78,1.073,79,1.073,80,1.073,81,0.878,82,1.073,83,1.073,84,1.073,85,1.073,86,1.073,87,1.073,88,0.878,89,1.073,90,1.073,91,1.073]],["t/708",[37,0.175,63,2.026]],["t/720",[37,0.175,63,2.026]],["t/732",[37,0.175,63,2.026]],["t/742",[47,2.643,92,3.755,93,3.755,94,3.755]],["t/764",[37,0.175,38,1.548]],["t/792",[37,0.203,56,3.078]],["t/804",[37,0.175,38,1.548]],["t/830",[37,0.175,38,1.548]],["t/854",[37,0.109,42,1.217,57,1.958,81,1.414,88,1.414,95,1.729,96,1.729,97,3.489,98,1.729,99,1.729,100,1.729,101,1.729,102,1.729,103,1.549,104,1.414]],["t/862",[37,0.175,38,1.548]],["t/889",[37,0.175,38,1.548]],["t/925",[37,0.175,38,1.548]],["t/955",[37,0.175,130,3.762,131,3.762,132,3.762,133,3.762]],["t/958",[]],["t/981",[37,0.175,108,3.363]],["t/1006",[37,0.22,134,3.524,135,3.524]],["t/1026",[37,0.175,136,5.155]],["t/1062",[37,0.175,108,3.363]],["t/1079",[37,0.175,108,3.363]],["t/1123",[37,0.193,38,1.307,137,4.35]],["t/1143",[37,0.175,38,1.548]],["t/1168",[37,0.215,108,2.838]],["t/1194",[37,0.106,53,2.419,138,3.128,139,3.128,140,3.128,141,3.128,142,3.128,143,3.128,144,3.128]],["t/1204",[37,0.203,38,1.417]]],"invertedIndex":[["",{"_index":37,"t":{"24":{"position":[[0,4],[5,7]]},"90":{"position":[[0,1]]},"109":{"position":[[0,11],[62,3]]},"129":{"position":[[0,1]]},"152":{"position":[[0,11],[14,1]]},"168":{"position":[[0,1]]},"179":{"position":[[10,6],[17,5]]},"203":{"position":[[0,1]]},"215":{"position":[[0,1]]},"223":{"position":[[0,1]]},"233":{"position":[[0,1]]},"245":{"position":[[0,1]]},"279":{"position":[[0,1]]},"305":{"position":[[0,1],[3,7]]},"317":{"position":[[0,1]]},"345":{"position":[[7,3],[52,3]]},"353":{"position":[[0,1]]},"377":{"position":[[0,1]]},"404":{"position":[[0,1]]},"440":{"position":[[0,1],[3,3]]},"443":{"position":[[0,1]]},"473":{"position":[[0,1]]},"491":{"position":[[0,1],[3,2],[6,4]]},"517":{"position":[[0,1]]},"547":{"position":[[2,6],[15,9]]},"577":{"position":[[0,7],[8,5],[16,2]]},"594":{"position":[[0,1]]},"617":{"position":[[0,11],[62,3]]},"637":{"position":[[0,11],[14,1]]},"653":{"position":[[0,1]]},"664":{"position":[[0,1]]},"676":{"position":[[0,1]]},"684":{"position":[[10,6],[17,5]]},"708":{"position":[[0,1]]},"720":{"position":[[0,1]]},"732":{"position":[[0,1]]},"764":{"position":[[0,1]]},"792":{"position":[[0,1],[3,7]]},"804":{"position":[[0,1]]},"830":{"position":[[0,1]]},"854":{"position":[[7,3],[52,3]]},"862":{"position":[[0,1]]},"889":{"position":[[0,1]]},"925":{"position":[[0,1]]},"955":{"position":[[0,1],[3,3]]},"981":{"position":[[0,1]]},"1006":{"position":[[0,1],[3,6],[13,4],[22,8],[31,4]]},"1026":{"position":[[0,1]]},"1062":{"position":[[0,1]]},"1079":{"position":[[0,1]]},"1123":{"position":[[0,1],[6,7]]},"1143":{"position":[[0,1]]},"1168":{"position":[[0,1],[3,4],[8,6]]},"1194":{"position":[[14,1]]},"1204":{"position":[[0,1],[3,3]]}}}],["一面",{"_index":24,"t":{"22":{"position":[[5,2]]}}}],["下面",{"_index":125,"t":{"577":{"position":[[50,2]]}}}],["不到",{"_index":132,"t":{"955":{"position":[[10,2]]}}}],["不足",{"_index":17,"t":{"12":{"position":[[30,2]]}}}],["专业",{"_index":15,"t":{"12":{"position":[[24,2]]}}}],["中",{"_index":66,"t":{"179":{"position":[[8,1]]},"547":{"position":[[9,1]]},"577":{"position":[[22,1]]},"684":{"position":[[8,1]]}}}],["主要",{"_index":104,"t":{"345":{"position":[[49,2]]},"547":{"position":[[29,2]]},"577":{"position":[[59,2]]},"854":{"position":[[49,2]]}}}],["之间",{"_index":112,"t":{"547":{"position":[[24,2]]}}}],["书",{"_index":22,"t":{"22":{"position":[[2,1]]}}}],["交互",{"_index":56,"t":{"109":{"position":[[70,2]]},"305":{"position":[[11,2]]},"547":{"position":[[27,2]]},"617":{"position":[[70,2]]},"792":{"position":[[11,2]]}}}],["人类",{"_index":6,"t":{"12":{"position":[[1,2],[39,2]]}}}],["介绍",{"_index":128,"t":{"577":{"position":[[56,2]]}}}],["代码",{"_index":73,"t":{"179":{"position":[[44,2]]},"684":{"position":[[44,2]]}}}],["以下",{"_index":103,"t":{"345":{"position":[[46,2]]},"547":{"position":[[33,2]]},"854":{"position":[[46,2]]}}}],["信息",{"_index":121,"t":{"577":{"position":[[31,2]]}}}],["儿子",{"_index":142,"t":{"1194":{"position":[[11,2]]}}}],["先",{"_index":140,"t":{"1194":{"position":[[8,1]]}}}],["其他",{"_index":45,"t":{"109":{"position":[[33,2]]},"617":{"position":[[33,2]]}}}],["内核",{"_index":55,"t":{"109":{"position":[[68,2]]},"152":{"position":[[28,2]]},"617":{"position":[[68,2]]},"637":{"position":[[28,2]]}}}],["几个",{"_index":96,"t":{"345":{"position":[[12,2]]},"854":{"position":[[12,2]]}}}],["几种",{"_index":113,"t":{"547":{"position":[[35,2]]}}}],["创建",{"_index":100,"t":{"345":{"position":[[28,2]]},"854":{"position":[[28,2]]}}}],["利益",{"_index":29,"t":{"22":{"position":[[17,2]]}}}],["力量",{"_index":35,"t":{"22":{"position":[[36,2]]}}}],["功绩",{"_index":31,"t":{"22":{"position":[[22,2]]}}}],["功能",{"_index":43,"t":{"109":{"position":[[27,2],[35,2]]},"577":{"position":[[61,2]]},"617":{"position":[[27,2],[35,2]]}}}],["包",{"_index":107,"t":{"491":{"position":[[11,1]]},"577":{"position":[[38,1]]}}}],["化",{"_index":94,"t":{"257":{"position":[[6,1]]},"742":{"position":[[6,1]]}}}],["协",{"_index":110,"t":{"547":{"position":[[12,1]]}}}],["博文",{"_index":1,"t":{"1":{"position":[[2,2]]}}}],["历史",{"_index":0,"t":{"1":{"position":[[0,2]]},"22":{"position":[[0,2]]}}}],["原则",{"_index":97,"t":{"345":{"position":[[18,2],[23,2],[57,2]]},"854":{"position":[[18,2],[23,2],[57,2]]}}}],["反射",{"_index":137,"t":{"1123":{"position":[[3,2]]}}}],["发送",{"_index":60,"t":{"152":{"position":[[23,2]]},"637":{"position":[[23,2]]}}}],["变化",{"_index":78,"t":{"179":{"position":[[58,2]]},"684":{"position":[[58,2]]}}}],["可扩展性",{"_index":91,"t":{"179":{"position":[[100,4]]},"684":{"position":[[100,4]]}}}],["号",{"_index":143,"t":{"1194":{"position":[[15,1]]}}}],["合理",{"_index":69,"t":{"179":{"position":[[30,2]]},"684":{"position":[[30,2]]}}}],["哈哈镜",{"_index":25,"t":{"22":{"position":[[7,3]]}}}],["多",{"_index":109,"t":{"547":{"position":[[11,1]]}}}],["多元",{"_index":13,"t":{"12":{"position":[[17,2]]}}}],["多种",{"_index":123,"t":{"577":{"position":[[43,2]]}}}],["大规模",{"_index":83,"t":{"179":{"position":[[74,3]]},"684":{"position":[[74,3]]}}}],["如同",{"_index":23,"t":{"22":{"position":[[3,2]]}}}],["孤儿",{"_index":138,"t":{"1194":{"position":[[0,2]]}}}],["宗教",{"_index":10,"t":{"12":{"position":[[11,2]]}}}],["宝贵",{"_index":20,"t":{"12":{"position":[[47,2]]}}}],["实现",{"_index":115,"t":{"547":{"position":[[39,2]]}}}],["实用功能",{"_index":124,"t":{"577":{"position":[[45,4]]}}}],["将",{"_index":126,"t":{"577":{"position":[[53,1]]}}}],["常常",{"_index":26,"t":{"22":{"position":[[11,2]]}}}],["平凡人",{"_index":34,"t":{"22":{"position":[[32,3]]}}}],["库",{"_index":117,"t":{"577":{"position":[[21,1]]}}}],["引言",{"_index":136,"t":{"1026":{"position":[[3,2]]}}}],["形式",{"_index":48,"t":{"109":{"position":[[44,2]]},"617":{"position":[[44,2]]}}}],["微内核",{"_index":39,"t":{"109":{"position":[[12,3]]},"617":{"position":[[12,3]]}}}],["忽视",{"_index":32,"t":{"22":{"position":[[26,2]]}}}],["态",{"_index":51,"t":{"109":{"position":[[51,1]]},"617":{"position":[[51,1]]}}}],["成本",{"_index":89,"t":{"179":{"position":[[95,2]]},"684":{"position":[[95,2]]}}}],["扩展",{"_index":81,"t":{"179":{"position":[[68,2]]},"345":{"position":[[38,2]]},"684":{"position":[[68,2]]},"854":{"position":[[38,2]]}}}],["找",{"_index":131,"t":{"955":{"position":[[9,1]]}}}],["技术",{"_index":71,"t":{"179":{"position":[[38,2],[61,2]]},"684":{"position":[[38,2],[61,2]]}}}],["持久",{"_index":93,"t":{"257":{"position":[[4,2]]},"742":{"position":[[4,2]]}}}],["指",{"_index":68,"t":{"179":{"position":[[25,1]]},"684":{"position":[[25,1]]}}}],["接受",{"_index":62,"t":{"152":{"position":[[30,2]]},"637":{"position":[[30,2]]}}}],["提供",{"_index":19,"t":{"12":{"position":[[44,2]]},"577":{"position":[[40,2]]}}}],["提高",{"_index":90,"t":{"179":{"position":[[98,2]]},"684":{"position":[[98,2]]}}}],["插件",{"_index":46,"t":{"109":{"position":[[38,2]]},"617":{"position":[[38,2]]}}}],["支持",{"_index":59,"t":{"152":{"position":[[19,2]]},"637":{"position":[[19,2]]}}}],["收养",{"_index":144,"t":{"1194":{"position":[[16,2]]}}}],["收集",{"_index":122,"t":{"577":{"position":[[33,2]]}}}],["放大",{"_index":27,"t":{"22":{"position":[[13,2]]}}}],["文化",{"_index":9,"t":{"12":{"position":[[8,2]]}}}],["方式",{"_index":114,"t":{"547":{"position":[[37,2]]}}}],["方法",{"_index":133,"t":{"955":{"position":[[12,2]]}}}],["无需",{"_index":82,"t":{"179":{"position":[[72,2]]},"684":{"position":[[72,2]]}}}],["时",{"_index":120,"t":{"577":{"position":[[30,1]]}}}],["最小化",{"_index":44,"t":{"109":{"position":[[29,3]]},"617":{"position":[[29,3]]}}}],["有助于",{"_index":99,"t":{"345":{"position":[[25,3]]},"854":{"position":[[25,3]]}}}],["服务",{"_index":47,"t":{"109":{"position":[[41,2]]},"152":{"position":[[21,2]]},"257":{"position":[[0,2]]},"617":{"position":[[41,2]]},"637":{"position":[[21,2]]},"742":{"position":[[0,2]]}}}],["未来",{"_index":76,"t":{"179":{"position":[[53,2]]},"684":{"position":[[53,2]]}}}],["机制",{"_index":67,"t":{"179":{"position":[[23,2]]},"684":{"position":[[23,2]]}}}],["架构",{"_index":40,"t":{"109":{"position":[[16,2]]},"617":{"position":[[16,2]]}}}],["架构设计",{"_index":70,"t":{"179":{"position":[[33,4]]},"684":{"position":[[33,4]]}}}],["标准",{"_index":116,"t":{"577":{"position":[[19,2]]}}}],["核心",{"_index":42,"t":{"109":{"position":[[25,2]]},"179":{"position":[[84,2]]},"345":{"position":[[14,2]]},"617":{"position":[[25,2]]},"684":{"position":[[84,2]]},"854":{"position":[[14,2]]}}}],["核心思想",{"_index":41,"t":{"109":{"position":[[19,4]]},"617":{"position":[[19,4]]}}}],["概述",{"_index":38,"t":{"90":{"position":[[3,2]]},"129":{"position":[[3,2]]},"279":{"position":[[3,2]]},"317":{"position":[[3,2]]},"353":{"position":[[3,2]]},"377":{"position":[[3,2]]},"404":{"position":[[3,2]]},"443":{"position":[[3,2]]},"473":{"position":[[3,2]]},"517":{"position":[[3,2]]},"594":{"position":[[3,2]]},"764":{"position":[[3,2]]},"804":{"position":[[3,2]]},"830":{"position":[[3,2]]},"862":{"position":[[3,2]]},"889":{"position":[[3,2]]},"925":{"position":[[3,2]]},"1123":{"position":[[14,2]]},"1143":{"position":[[3,2]]},"1204":{"position":[[7,2]]}}}],["死",{"_index":141,"t":{"1194":{"position":[[9,1]]}}}],["消息",{"_index":61,"t":{"152":{"position":[[25,2],[32,2]]},"637":{"position":[[25,2],[32,2]]}}}],["淡化",{"_index":33,"t":{"22":{"position":[[29,2]]}}}],["深度",{"_index":16,"t":{"12":{"position":[[26,2]]}}}],["演进",{"_index":79,"t":{"179":{"position":[[63,2]]},"684":{"position":[[63,2]]}}}],["灵活",{"_index":101,"t":{"345":{"position":[[30,2]]},"854":{"position":[[30,2]]}}}],["父亲",{"_index":139,"t":{"1194":{"position":[[6,2]]}}}],["特定",{"_index":28,"t":{"22":{"position":[[15,2]]}}}],["状态",{"_index":92,"t":{"257":{"position":[[2,2]]},"742":{"position":[[2,2]]}}}],["理解",{"_index":18,"t":{"12":{"position":[[36,2]]}}}],["用于",{"_index":118,"t":{"577":{"position":[[23,2]]}}}],["用户",{"_index":50,"t":{"109":{"position":[[49,2]]},"617":{"position":[[49,2]]}}}],["用法",{"_index":129,"t":{"577":{"position":[[64,2]]}}}],["目前",{"_index":58,"t":{"152":{"position":[[16,2]]},"637":{"position":[[16,2]]}}}],["目标",{"_index":63,"t":{"168":{"position":[[3,2]]},"179":{"position":[[86,2]]},"203":{"position":[[3,2]]},"215":{"position":[[3,2]]},"223":{"position":[[3,2]]},"233":{"position":[[3,2]]},"245":{"position":[[3,2]]},"653":{"position":[[3,2]]},"664":{"position":[[3,2]]},"676":{"position":[[3,2]]},"684":{"position":[[86,2]]},"708":{"position":[[3,2]]},"720":{"position":[[3,2]]},"732":{"position":[[3,2]]}}}],["社会",{"_index":11,"t":{"12":{"position":[[14,2],[41,2]]}}}],["程",{"_index":111,"t":{"547":{"position":[[13,1]]}}}],["等",{"_index":12,"t":{"12":{"position":[[16,1]]}}}],["简介",{"_index":108,"t":{"491":{"position":[[12,2]]},"981":{"position":[[3,2]]},"1062":{"position":[[3,2]]},"1079":{"position":[[3,2]]},"1168":{"position":[[15,2]]}}}],["简史",{"_index":7,"t":{"12":{"position":[[3,2]]}}}],["系统",{"_index":65,"t":{"179":{"position":[[4,2],[47,2]]},"684":{"position":[[4,2],[47,2]]}}}],["纵览",{"_index":8,"t":{"12":{"position":[[6,2]]}}}],["维护",{"_index":88,"t":{"179":{"position":[[93,2]]},"345":{"position":[[34,2]]},"684":{"position":[[93,2]]},"854":{"position":[[34,2]]}}}],["编程",{"_index":64,"t":{"179":{"position":[[1,2]]},"684":{"position":[[1,2]]}}}],["能",{"_index":2,"t":{"3":{"position":[[0,1]]}}}],["能够",{"_index":74,"t":{"179":{"position":[[49,2]]},"684":{"position":[[49,2]]}}}],["规模",{"_index":80,"t":{"179":{"position":[[66,2]]},"684":{"position":[[66,2]]}}}],["视角",{"_index":21,"t":{"12":{"position":[[49,2]]}}}],["解析",{"_index":135,"t":{"1006":{"position":[[18,2]]}}}],["警告",{"_index":130,"t":{"955":{"position":[[7,2]]}}}],["设计",{"_index":57,"t":{"152":{"position":[[12,2]]},"179":{"position":[[6,2]]},"345":{"position":[[16,2],[55,2]]},"637":{"position":[[12,2]]},"684":{"position":[[6,2]]},"854":{"position":[[16,2],[55,2]]}}}],["话",{"_index":4,"t":{"3":{"position":[[4,1]]}}}],["详细",{"_index":127,"t":{"577":{"position":[[54,2]]}}}],["说",{"_index":3,"t":{"3":{"position":[[1,1]]}}}],["调试",{"_index":119,"t":{"577":{"position":[[25,2]]}}}],["贡献",{"_index":36,"t":{"22":{"position":[[39,2]]}}}],["软件系统",{"_index":102,"t":{"345":{"position":[[41,4]]},"854":{"position":[[41,4]]}}}],["运行",{"_index":49,"t":{"109":{"position":[[46,2]]},"577":{"position":[[28,2]]},"617":{"position":[[46,2]]}}}],["这些",{"_index":98,"t":{"345":{"position":[[21,2]]},"854":{"position":[[21,2]]}}}],["进程",{"_index":53,"t":{"109":{"position":[[56,2]]},"617":{"position":[[56,2]]},"1194":{"position":[[2,2]]}}}],["连接",{"_index":105,"t":{"440":{"position":[[7,2]]}}}],["适应",{"_index":75,"t":{"179":{"position":[[51,2]]},"684":{"position":[[51,2]]}}}],["选择",{"_index":72,"t":{"179":{"position":[[40,2]]},"684":{"position":[[40,2]]}}}],["通过",{"_index":52,"t":{"109":{"position":[[53,2]]},"179":{"position":[[28,2]]},"547":{"position":[[31,2]]},"617":{"position":[[53,2]]},"684":{"position":[[28,2]]}}}],["重写",{"_index":85,"t":{"179":{"position":[[80,2]]},"684":{"position":[[80,2]]}}}],["重构",{"_index":84,"t":{"179":{"position":[[77,2]]},"684":{"position":[[77,2]]}}}],["重要",{"_index":5,"t":{"3":{"position":[[6,2]]},"577":{"position":[[36,2]]}}}],["错误",{"_index":106,"t":{"440":{"position":[[9,2]]}}}],["长期",{"_index":87,"t":{"179":{"position":[[91,2]]},"684":{"position":[[91,2]]}}}],["间通信",{"_index":54,"t":{"109":{"position":[[58,3]]},"617":{"position":[[58,3]]}}}],["阶层",{"_index":30,"t":{"22":{"position":[[19,2]]}}}],["降低",{"_index":86,"t":{"179":{"position":[[89,2]]},"684":{"position":[[89,2]]}}}],["需求",{"_index":77,"t":{"179":{"position":[[56,2]]},"684":{"position":[[56,2]]}}}],["面向对象编程",{"_index":95,"t":{"345":{"position":[[0,6]]},"854":{"position":[[0,6]]}}}],["领域",{"_index":14,"t":{"12":{"position":[[19,2]]}}}],["默认",{"_index":134,"t":{"1006":{"position":[[10,2]]}}}]],"pipeline":["stemmer"]}},{"documents":[],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]}},{"documents":[{"i":4,"t":"能说的上话很重要。 能说的上话很重要。","s":"一句顶一万句","u":"/blog/一句顶一万句","h":"","p":3},{"i":7,"t":"2025年4月25日 · 阅读需 6 分钟 weidongkl I can see your smile.","s":"人类简史","u":"/blog/authors/weidongkl","h":"","p":5},{"i":9,"t":"2025年2月22日 · 阅读需 2 分钟 weidongkl I can see your smile.","s":"南明史","u":"/blog/authors/weidongkl","h":"","p":5},{"i":11,"t":"2025年2月16日 · 阅读需 1 分钟 weidongkl I can see your smile.","s":"一句顶一万句","u":"/blog/authors/weidongkl","h":"","p":5},{"i":13,"t":"『人类简史』纵览文化、宗教、社会等多元领域，虽在专业深度上有不足，却为我理解『人类社会』提供了宝贵视角。","s":"人类简史","u":"/blog/人类简史","h":"","p":12},{"i":15,"t":"大航海时代的开启，使西班牙和葡萄牙率先步入强盛时期。然而，好景不长，荷兰后来居上。其中，一个关键因素在于其司法独立。荷兰重视并保护个人权利，尤其是私人财产，而独裁政权往往缺乏这种保障。这导致资本和财富自然流向更能提供安全与稳定的地区，从而推动了荷兰的崛起。 自由与平等是最基本的价值观，但两者之间存在内在矛盾。为了实现平等，必须对部分人的自由加以限制；而如果人人都享有绝对的自由，社会必然会走向不平等。因此，现实中的制度往往在两者之间寻求平衡，而非极端地追求其一。","s":"司法","u":"/blog/人类简史","h":"#司法","p":12},{"i":17,"t":"小国寡民的文化并非某些人刻意设计的剥削工具，而是历史巧合的产物，是在人类心理中寄生并繁衍的观念体系。成功的文化，如同人类与小麦一样，擅长自我复制与传播。然而，文化的成功并不意味着对人类有益——繁荣的文化未必是善良的文化，成功不等于优越。","s":"文化","u":"/blog/人类简史","h":"#文化","p":12},{"i":19,"t":"对大多数人而言，经济发展确实改善了生活，使他们比先辈更幸福。然而，这并非绝对。即便集体经济的蛋糕再大，若分配不公，仍会有人陷入困境。原始智人的迁徙与采集生活或许并不艰难，但农业革命后，人类开始聚居，随之而来的统治与压迫逐渐显现。工业革命提升了整体生活水平，却也加剧了财富的不均衡。 经济泡沫指的是虚拟资本（如股票、房地产）价格远超其实际价值，严重脱离实体经济的现象。它源于人性的贪婪和资本主义市场机制，同时也建立在人们对未来持续向好的信念之上。过去两百年间，武装掠夺与工业发展让投资者产生了一种盲目自信，坚信经济会不断繁荣。然而，工业技术的进步并非线性，而是类似于台阶式发展——经历一段稳定期后才会再次跃升。当经济进入稳定期，而预期中的高速增长未能兑现，泡沫便随之产生，仿佛是在透支未来。或许，只有日新月异的科技进步，才能缓解这一困局。 近代科技的飞速发展与资本主义密不可分。资本逐利，而技术领先往往意味着更高的回报。在这种相互促进的关系下，资本推动科技进步，科技反过来助力资本增长，两者共同塑造了现代社会的高速发展。 让普通人过上健康富足的生活，应当是圣人追求的至善之一。从这个角度来看，资本主义似乎扮演了“圣人”的角色，甚至被奉为唯一的“真理”。在这样的逻辑下，财富不仅意味着物质充裕，甚至成为道德的象征。 现代财富的根基在于人们希望增加个人财富的本能驱动。正是这种自私的动力推动了市场竞争与创新，而贪婪在一定程度上成为经济增长的重要催化剂。","s":"经济","u":"/blog/人类简史","h":"#经济","p":12},{"i":21,"t":"家庭关系颇为复杂。在古代，婚姻大多由父母做主，媒妁之言决定了一生，孩子对自己的婚姻和生活几乎没有自主权，这不免令人唏嘘。如今，情况大不相同。父母仍能影响孩子的生活，但孩子有更多自主权，人生的选择权掌握在自己手中。旁人的意见，不过是建议。然而，当生活遇到挫折时，孩子却往往仍会将责任归咎于父母，颇具讽刺意味。","s":"家庭","u":"/blog/人类简史","h":"#家庭","p":12},{"i":23,"t":"历史书如同一面哈哈镜，常常放大特定利益阶层的功绩，却忽视或淡化了平凡人的力量与贡献。 从《活着》中的普通人到李自成的大顺军，一再证明，平凡个体同样可以成就伟大。明代初年，名将多出自淮西，但若将他们置于一个稳定的时代，他们或许只是普通的农民或奴隶；若将他们放在不同的阵营，他们可能只是他人辉煌的背景。我们通常将伟大定义为时代赋予的成功与名声，但这种定义或许过于狭隘。伟大不应仅限于功成名就，而应更加包容和务实，更贴近人类共同的经验。勇敢、智慧，甚至失败，都值得被赋予伟大的意义。伟大存在于每个个体为生存、理想和信念所付出的努力中，无论成败。","s":"南明史","u":"/blog/南明史","h":"","p":22},{"i":27,"t":"用于打印调试信息。 info 打印内容，warning 打印内容并附加行号。","s":"功能：","u":"/docs/note/build/makefile_function","h":"#功能","p":24},{"i":29,"t":"可以使用 make -n 来打印命令但不执行，从而帮助调试。","s":"调试：","u":"/docs/note/build/makefile_function","h":"#调试","p":24},{"i":31,"t":"$(warning $(LANGUAGES)) # 29行 $(info $(LANGUAGES)) # 30行 $(warning xxx) # 31行 $ make -n Makefile:29: zh wd zh wd Makefile:31: xxx","s":"示例：","u":"/docs/note/build/makefile_function","h":"#示例","p":24},{"i":34,"t":"执行文本替换：将文本中所有出现的 from 替换为 to。","s":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-1","p":24},{"i":36,"t":"$(subst from,to,text)","s":"用法：","u":"/docs/note/build/makefile_function","h":"#用法","p":24},{"i":38,"t":"$(subst ee,EE,feet on the street) 输出：fEEt on the strEEt","s":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-1","p":24},{"i":41,"t":"通过通配符返回文件列表，类似于 Python 的 glob。","s":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-2","p":24},{"i":43,"t":"$(wildcard pattern)","s":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-1","p":24},{"i":45,"t":"获取 po 目录下所有以 .po 结尾的文件： $(warning $(wildcard po/*.po)) # Makefile:20: po/zh.po po/wd.po","s":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-2","p":24},{"i":48,"t":"替换字符串，可以使用 % 通配符，支持模式替换。","s":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-3","p":24},{"i":50,"t":"$(patsubst pattern,replacement,text)","s":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-2","p":24},{"i":52,"t":"subst 仅支持完全匹配替换。 patsubst 支持模式匹配。","s":"区别：","u":"/docs/note/build/makefile_function","h":"#区别","p":24},{"i":54,"t":"text := Hello, world! result := $(subst world,Makefile,$(text)) all: @echo $(result) # 输出: Hello, Makefile! files := src/foo.c src/bar.c src/baz.c objects := $(patsubst src/%.c,build/%.o,$(files)) all: @echo $(objects) # 输出: build/foo.o build/bar.o build/baz.o","s":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-3","p":24},{"i":57,"t":"为每个文件名添加后缀。","s":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-4","p":24},{"i":59,"t":"$(addsuffix suffix, names...)","s":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-3","p":24},{"i":61,"t":"$(addsuffix .c,foo bar) 返回值：foo.c bar.c","s":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-4","p":24},{"i":64,"t":"从文件名中提取前缀部分（即点号 . 之前的部分）。","s":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-5","p":24},{"i":66,"t":"$(basename names...)","s":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-4","p":24},{"i":68,"t":"$(basename src/foo.c src-1.0/bar.c /home/jack/.font.cache-1 hacks) 提取文件名和去掉后缀： filepath := src/foo.c # 提取文件名 filename := $(notdir $(filepath)) # 去掉后缀 name_without_ext := $(basename $(filename)) all: @echo \"Filename: $(filename)\" # 输出: foo.c @echo \"Name without extension: $(name_without_ext)\" # 输出: foo","s":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-5","p":24},{"i":71,"t":"从字符串中提取第一个单词。","s":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-6","p":24},{"i":73,"t":"$(firstword text)","s":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-5","p":24},{"i":75,"t":"words := foo bar baz first := $(firstword $(words)) all: @echo $(first) # 输出: foo","s":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-6","p":24},{"i":78,"t":"去除字符串开头和结尾的空格。","s":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-7","p":24},{"i":80,"t":"$(strip text)","s":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-6","p":24},{"i":82,"t":"text := foo bar baz stripped := $(strip $(text)) all: @echo \"$(stripped)\" # 输出: foo bar baz","s":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-7","p":24},{"i":85,"t":"提取字符串中的第 N 个单词（单词以空格分隔）。","s":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-8","p":24},{"i":87,"t":"$(word N,text)","s":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-7","p":24},{"i":89,"t":"words := foo bar baz second_word := $(word 2,$(words)) all: @echo $(second_word) # 输出: bar","s":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-8","p":24},{"i":92,"t":"在 Makefile 中，:（单冒号）和 ::（双冒号）都用于定义目标（target），但它们的行为存在关键区别。理解它们的用法可以帮助我们更好地组织 Makefile，提高可维护性和灵活性。","s":"1. 概述","u":"/docs/note/build/makefile:","h":"#1-概述","p":90},{"i":94,"t":"语法 行为 :（单冒号） 定义唯一规则，如果同一目标出现多次，后面的规则会覆盖前面的规则 ::（双冒号） 定义多个独立规则，同一目标可以有多个规则，所有规则都会被执行","s":"2. :（单冒号）与 ::（双冒号）的区别","u":"/docs/note/build/makefile:","h":"#2-单冒号与-双冒号的区别","p":90},{"i":97,"t":"all: build @echo \"Running build\" all: test @echo \"Running test\" 执行 make all 结果： Running test 解释： all: 目标被定义了两次。 后面的 all: test 覆盖 了前面的 all: build，因此只执行 test 相关的命令。","s":"3.1 基本示例","u":"/docs/note/build/makefile:","h":"#31-基本示例","p":90},{"i":99,"t":"all: build test: @echo \"Testing...\" all: test # 覆盖前面的规则 执行 make all 结果： Testing... 解释： all: build 先定义了 build 依赖。 all: test 覆盖了前面的 all: build，最终 all 只依赖 test。 适用场景： 适用于单一规则的目标，如 CC = gcc 这类变量定义。 确保不执行重复规则，仅保留最后一次的定义。","s":"3.2 依赖的覆盖","u":"/docs/note/build/makefile:","h":"#32-依赖的覆盖","p":90},{"i":102,"t":"all:: build @echo \"Running build\" all:: test @echo \"Running test\" 执行 make all 结果： Running build Running test 解释： all:: 目标被定义了两次，但不会相互覆盖。 make all 会依次执行所有 all:: 规则。","s":"4.1 基本示例","u":"/docs/note/build/makefile:","h":"#41-基本示例","p":90},{"i":104,"t":"test:: unit-test t@echo \"Integration testing...\" test:: integration-test t@echo \"Unit testing...\" 执行 make test 结果： Integration testing... Unit testing... 解释： test:: 目标多次定义，每个规则都会被执行。 适用场景： 适用于模块化规则，比如 make test 可能需要多个测试步骤。 扩展性更强，多个 Makefile 片段可以独立定义 test::，不会相互覆盖。","s":"4.2 组合依赖","u":"/docs/note/build/makefile:","h":"#42-组合依赖","p":90},{"i":106,"t":"适用场景 使用 :（单冒号） 使用 ::（双冒号） 唯一规则目标 ✅ ❌ 可累积执行的目标 ❌ ✅ 变量赋值（如 CC=gcc） ✅ ❌ 多 Makefile 规则合并 ❌ ✅ 防止规则覆盖 ❌ ✅","s":"5. : vs :: 适用场景总结","u":"/docs/note/build/makefile:","h":"#5--vs--适用场景总结","p":90},{"i":108,"t":":（单冒号） 适用于唯一规则，如果目标重复定义，后面的规则会覆盖前面的。 ::（双冒号） 允许多次定义相同目标，并且所有规则都会被执行。 如果 Makefile 可能被多个文件拆分并包含（include Makefile.common），推荐使用 :: 以避免目标覆盖。 🚀 掌握 : 和 :: 的区别，有助于编写更灵活和可维护的 Makefile！","s":"6. 结论","u":"/docs/note/build/makefile:","h":"#6-结论","p":90},{"i":110,"t":"microkernel（微内核）架构的核心思想是 核心功能最小化，其他功能以插件或服务的形式运行在用户态，通过 进程间通信（IPC） 与内核交互。","s":"microkernel 设计1","u":"/docs/note/design/microkernel/microkernel1","h":"","p":109},{"i":113,"t":"内核小、职责单一 内核只负责最基本的功能，比如线程调度、地址空间管理、IPC。 模块化、可扩展 文件系统、驱动程序等作为用户空间服务，易于替换和调试。 可靠性高 一个用户态服务崩溃不会影响整个系统。 通信开销大 模块间依赖消息传递，相比传统内核切换用户态和内核态的代价更大。","s":"1.1 特点","u":"/docs/note/design/microkernel/microkernel1","h":"#11-特点","p":109},{"i":115,"t":"Kernel（内核） 负责 服务注册、消息路由、生命周期管理。 Services（服务） 独立模块（如 LogService、StorageService），运行在用户态。 通信机制（IPC） 使用 Go 的 Channel 或 gRPC 进行通信。","s":"1.2 核心组件","u":"/docs/note/design/microkernel/microkernel1","h":"#12-核心组件","p":109},{"i":118,"t":"package kernel import ( \"context\" \"errors\" \"fmt\" \"sync\" ) // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string } // Kernel 微内核核心 type Kernel struct { // 注册的服务通道 services map[string]Service // 保护 services 的并发访问 mutex sync.RWMutex // 全局事件总线 eventCh chan Event } // Event 定义内核事件（用于服务间通信） type Event struct { From string Type string Content string } // NewKernel 创建微内核实例 func NewKernel() *Kernel { return &Kernel{ services: make(map[string]Service), eventCh: make(chan Event, 100), } } // RegisterService 注册服务 func (k *Kernel) RegisterService(s Service) error { k.mutex.Lock() defer k.mutex.Unlock() name := s.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = s return nil } // StartAll 启动所有服务 func (k *Kernel) StartAll() error { k.mutex.RLock() defer k.mutex.RUnlock() for _, s := range k.services { if err := s.Start(); err != nil { return err } } return nil } // StopAll 停止所有服务 func (k *Kernel) StopAll() error { k.mutex.RLock() defer k.mutex.RUnlock() var err error for _, s := range k.services { if e := s.Stop(); e != nil { err = e } } return err } // SendEvent 发送事件（模拟 IPC） func (k *Kernel) SendEvent(evt Event) { k.eventCh <- evt } // EventLoop 事件循环（处理服务间通信） func (k *Kernel) EventLoop(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: %s - %s\\n\", evt.From, evt.Type, evt.Content) } } }","s":"2.1 定义 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel1","h":"#21-定义-kernel核心","p":109},{"i":120,"t":"package service import ( \"fmt\" \"microkernel/kernel\" ) // LogService 日志服务 type LogService struct { name string kernel *kernel.Kernel logCh chan string stopCh chan struct{} } func NewLogService(name string, kernel *kernel.Kernel) *LogService { return &LogService{ name: name, kernel: kernel, logCh: make(chan string, 100), stopCh: make(chan struct{}), } } func (l *LogService) Start() error { fmt.Printf(\"[%s] starting...\\n\", l.name) go l.run() return nil } func (l *LogService) Stop() error { fmt.Printf(\"[%s] stopping...\\n\", l.name) close(l.stopCh) return nil } func (l *LogService) Name() string { return l.name } func (l *LogService) run() { for { select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 l.kernel.SendEvent(kernel.Event{ From: l.name, Type: \"log\", Content: log, }) } } } func (l *LogService) Log(msg string) { l.logCh <- msg }","s":"2.2 实现示例服务（LogService）","u":"/docs/note/design/microkernel/microkernel1","h":"#22-实现示例服务logservice","p":109},{"i":122,"t":"package main import ( \"context\" \"microkernel/kernel\" \"microkernel/service\" \"time\" ) func main() { // 1. 创建微内核 kernel := kernel.NewKernel() // 2. 注册服务 logSvc := service.NewLogService(\"logger\", kernel) if err := kernel.RegisterService(logSvc); err != nil { panic(err) } // 3. 启动所有服务 if err := kernel.StartAll(); err != nil { panic(err) } // 4. 启动事件循环 ctx, cancel := context.WithCancel(context.Background()) defer cancel() go kernel.EventLoop(ctx) // 5. 测试日志服务 logSvc.Log(\"Hello, Microkernel!\") time.Sleep(1 * time.Second) // 6. 停止所有服务 if err := kernel.StopAll(); err != nil { panic(err) } }","s":"2.3 主程序（运行微内核 + 服务）","u":"/docs/note/design/microkernel/microkernel1","h":"#23-主程序运行微内核--服务","p":109},{"i":124,"t":"[logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] stopping...","s":"2.4 运行结果","u":"/docs/note/design/microkernel/microkernel1","h":"#24-运行结果","p":109},{"i":126,"t":"使用 gRPC 替代 Channel（实现跨进程通信）。 动态加载服务（如插件化架构）。 增加服务发现机制（如 Consul/Etcd）。 支持更复杂的事件路由（如基于 Topic 的 Pub/Sub）。","s":"3. 扩展方向","u":"/docs/note/design/microkernel/microkernel1","h":"#3-扩展方向","p":109},{"i":128,"t":"微内核的核心：Kernel 只管理 Service 的生命周期和通信。 服务独立：每个 Service 运行在自己的 Goroutine 中，互不干扰。 通信方式： 简单场景：Channel（如示例）。 复杂场景：gRPC、NATS、WebSocket 等。 查看完整代码","s":"4. 总结","u":"/docs/note/design/microkernel/microkernel1","h":"#4-总结","p":109},{"i":131,"t":"Token Bucket（令牌桶）是一种流量控制算法，常用于： 限速（Rate Limiting）； 拒绝服务保护（DoS 防御）； API 调用频控； 网络带宽整形（如 Linux 中的 tc）。 本质思想：按照一定速率产生“令牌”，只有拿到令牌的请求才能继续处理。","s":"1. 概述","u":"/docs/note/design/algorithm/token_bucket","h":"#1-概述","p":129},{"i":133,"t":"组成部分 组成 描述 令牌桶 一个容量为 capacity 的容器，存放“令牌” 令牌生成速率 每 interval 时间放入一个令牌 请求获取令牌 请求到来时尝试从桶中获取一个令牌 工作流程 令牌桶按照固定速率产生令牌（如每秒 1 个）。 桶最多只能容纳 N 个令牌（即桶容量）。 当请求到来时： 如果桶里有令牌：消耗一个令牌，允许处理； 如果桶是空的：拒绝/排队/等待（视策略而定）。","s":"2. 基本原理","u":"/docs/note/design/algorithm/token_bucket","h":"#2-基本原理","p":129},{"i":135,"t":"项目 Token Bucket Leaky Bucket 控制策略 控制突发（允许瞬时高峰） 平滑处理 是否支持突发流量 ✅ 支持 ❌ 不支持 应用场景 限制速率，但允许瞬时爆发 网络整形，严格速率控制","s":"3. 与漏桶（Leaky Bucket）区别","u":"/docs/note/design/algorithm/token_bucket","h":"#3-与漏桶leaky-bucket区别","p":129},{"i":137,"t":"下面是一个简化的 Token Bucket 示例： type TokenBucket struct { tokens chan struct{} } func NewTokenBucket(rate time.Duration, capacity int) *TokenBucket { tb := &TokenBucket{ tokens: make(chan struct{}, capacity), } // 初始化填满桶 for i := 0; i < capacity; i++ { tb.tokens <- struct{}{} } // 定时产生令牌 go func() { ticker := time.NewTicker(rate) defer ticker.Stop() for range ticker.C { select { case tb.tokens <- struct{}{}: default: // 桶满了就丢弃新令牌 } } }() return tb } func (tb *TokenBucket) Allow() bool { select { case <-tb.tokens: return true default: return false } }","s":"4. 代码实现示例（Golang）","u":"/docs/note/design/algorithm/token_bucket","h":"#4-代码实现示例golang","p":129},{"i":139,"t":"防止用户频繁访问 API，限制为“每秒 5 次”： bucket := NewTokenBucket(200*time.Millisecond, 5) if !bucket.Allow() { http.Error(w, \"Rate limit exceeded\", http.StatusTooManyRequests) return }","s":"5. 应用场景","u":"/docs/note/design/algorithm/token_bucket","h":"#5-应用场景","p":129},{"i":141,"t":"✅ 优点 控制速率，避免系统过载； 支持突发流量； 实现简单，高效。 ❌ 缺点 对于极端高并发（几万 QPS），可能需使用更高性能结构（如令牌时间戳队列）； 实时性不高时，限流精度受 ticker 精度影响。","s":"6. 优缺点","u":"/docs/note/design/algorithm/token_bucket","h":"#6-优缺点","p":129},{"i":143,"t":"为实现 带优先级的 Token Bucket（令牌桶）算法，我们可以设计多个“桶”，每个桶代表一个优先级队列，然后用调度器（Scheduler）进行按比例或者优先权调度。","s":"7. 带优先级的Token Bucket算法","u":"/docs/note/design/algorithm/token_bucket","h":"#7-带优先级的token-bucket算法","p":129},{"i":145,"t":"高优先级桶：高速率、先获取； 低优先级桶：低速率、调度器最后处理； 桶之间独立生成令牌。","s":"7.1每个优先级一个桶","u":"/docs/note/design/algorithm/token_bucket","h":"#71每个优先级一个桶","p":129},{"i":147,"t":"┌────────┐ │ Client │ └───┬────┘ │ 请求 ┌───────▼────────┐ │ PriorityLimiter │ └───────┬────────┘ ▼ ┌────────┬─────────┬────────┐ │ High │ Mid │ Low │ │ Bucket │ Bucket │ Bucket │ └────────┴─────────┴────────┘","s":"7.2 调度器获取令牌时按优先级顺序尝试","u":"/docs/note/design/algorithm/token_bucket","h":"#72-调度器获取令牌时按优先级顺序尝试","p":129},{"i":149,"t":"高优先级请求尽可能快获得处理； 所有请求都有公平竞争机会（防止低优饥饿）； 支持动态调整优先级。","s":"7.3  目标特性","u":"/docs/note/design/algorithm/token_bucket","h":"#73--目标特性","p":129},{"i":151,"t":"基础桶，和之前代码相同 type TokenBucket struct { tokens chan struct{} } func NewTokenBucket(rate time.Duration, capacity int) *TokenBucket { tb := &TokenBucket{ tokens: make(chan struct{}, capacity), } // 填满令牌桶 for i := 0; i < capacity; i++ { tb.tokens <- struct{}{} } // 定期生成令牌 go func() { ticker := time.NewTicker(rate) defer ticker.Stop() for range ticker.C { select { case tb.tokens <- struct{}{}: default: } } }() return tb } func (tb *TokenBucket) TryTake() bool { select { case <-tb.tokens: return true default: return false } } 带调度器的多级优先限流器 type Priority int const ( High Priority = iota Medium Low ) func (p Priority) String() string { switch p { case High: return \"HIGH\" case Medium: return \"MEDIUM\" case Low: return \"LOW\" default: return \"UNKNOWN\" } } type PriorityLimiter struct { buckets map[Priority]*TokenBucket order []Priority // 调度顺序：High → Medium → Low } func NewPriorityLimiter() *PriorityLimiter { return &PriorityLimiter{ buckets: map[Priority]*TokenBucket{ High: NewTokenBucket(50*time.Millisecond, 10), Medium: NewTokenBucket(200*time.Millisecond, 5), Low: NewTokenBucket(500*time.Millisecond, 2), }, order: []Priority{High, Medium, Low}, } } // TryAllow 会按优先级顺序尝试令牌 func (pl *PriorityLimiter) TryAllow() bool { for _, p := range pl.order { if pl.buckets[p].TryTake() { return true } } return false } // 或者：TryAllowWithPriority 指定优先级 func (pl *PriorityLimiter) TryAllowWithPriority(p Priority) bool { return pl.buckets[p].TryTake() } 使用示例 limiter := NewPriorityLimiter() // 高优请求 if !limiter.TryAllowWithPriority(High) { fmt.Println(\"High priority request was throttled.\") } // 低优请求：可能被拒 if !limiter.TryAllowWithPriority(Low) { fmt.Println(\"Low priority request throttled.\") }","s":"7.4 示例","u":"/docs/note/design/algorithm/token_bucket","h":"#74-示例","p":129},{"i":153,"t":"microkernel 设计1 目前只支持服务发送消息，内核接受消息。 在本章节，我会增加内核发送消息到服务","s":"microkernel 设计2","u":"/docs/note/design/microkernel/microkernel2","h":"","p":152},{"i":155,"t":"内核发送消息到服务","s":"1. 目标","u":"/docs/note/design/microkernel/microkernel2","h":"#1-目标","p":152},{"i":158,"t":"服务增加消息处理方法 // kernel/kernel.go type Service interface { Start() error Stop() error Name() string // 增加消息处理方法 Handle(msg string) string } 事件增加发送地址 // kernel/kernel.go // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string } 内核发送事件到服务 // kernel/kernel.go // HandleEvent 处理事件（模拟服务间通信） func (k *Kernel) HandleEvent(evt Event) (msg string) { k.mutex.RLock() defer k.mutex.RUnlock() if svc, ok := k.services[evt.To]; ok { return svc.Handle(evt.Content) } return \"service not found\" }","s":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel2","h":"#21-kernel核心","p":152},{"i":160,"t":"增加Handle方法实现 // service/log.go // service 增加Handle接口实现 func (l *LogService) Handle(msg string) string { fmt.Printf(\"[%s] LOG handle kernel event: %s\\n\", l.name, msg) return fmt.Sprintf(\"[%s] LOG Handle: %s\\n\", l.name, msg) }","s":"2.2 LogService","u":"/docs/note/design/microkernel/microkernel2","h":"#22-logservice","p":152},{"i":162,"t":"kernel发送消息到service // main.go // 6. microKernel 发送事件到指定服务 microKernel.HandleEvent(kernel.Event{ From: \"microKernel\", To: \"logger\", Type: \"log\", Content: \"Hello, Log!\", }) time.Sleep(1 * time.Millisecond)","s":"2.3 主程序（运行微内核 + 服务）","u":"/docs/note/design/microkernel/microkernel2","h":"#23-主程序运行微内核--服务","p":152},{"i":164,"t":"[logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... 查看完整代码","s":"2.4 运行结果","u":"/docs/note/design/microkernel/microkernel2","h":"#24-运行结果","p":152},{"i":166,"t":"HandleEvent 修改为 Send SendEvent 修改为 Push LoopEvent 修改为Listen mutex修改为 mu 查看完整代码","s":"2.5 优化函数和变量命名","u":"/docs/note/design/microkernel/microkernel2","h":"#25-优化函数和变量命名","p":152},{"i":170,"t":"服务 能读取 Kernel 的返回信息 实现方法参考链接： gitee weidongkl.github.io","s":"1. 目标","u":"/docs/note/design/microkernel/microkernel3","h":"#1-目标","p":168},{"i":172,"t":"可以为每个 Service 提供一个专属的响应通道（channel），内核通过这个通道将处理结果或反馈信息“推送”回去。 每次发送消息附带一个 ReplyCh。 内核在收到消息后通过该通道写回响应。 Service 读取 ReplyCh 获取反馈。","s":"2. 代码改动","u":"/docs/note/design/microkernel/microkernel3","h":"#2-代码改动","p":168},{"i":174,"t":"事件增加读取返回的channel // kernel/kernel.go // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string // 增加响应通道 ReplyCh chan string } listen 增加返回值得写入 // kernel/kernel.go func (k *Kernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: %s - %s\\n\", evt.From, evt.Type, evt.Content) // 增加返回的写入 if evt.ReplyCh != nil { evt.ReplyCh <- fmt.Sprintf(\"ack: %s\", evt.Content) } } } }","s":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel3","h":"#21-kernel核心","p":168},{"i":176,"t":"服务增加返回的读取 func (l *LogService) run() { for { select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 replyCh := make(chan string, 1) l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", Content: log, ReplyCh: replyCh, }) // 等待内核回应 reply := <-replyCh fmt.Printf(\"[%s] got reply from kernel: %s\\n\", l.Name(), reply) } } }// service/log.go // service 增加Handle接口实现 func (l *LogService) Handle(msg string) string { fmt.Printf(\"[%s] LOG handle kernel event: %s\\n\", l.name, msg) return fmt.Sprintf(\"[%s] LOG Handle: %s\\n\", l.name, msg) }","s":"2.2 LogService","u":"/docs/note/design/microkernel/microkernel3","h":"#22-logservice","p":168},{"i":178,"t":"Registered: logger [logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] got reply from kernel: ack: Hello, Microkernel! [Kernel] Send Event to logger: Hello, Log! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... 查看完整代码","s":"2.3 运行结果","u":"/docs/note/design/microkernel/microkernel3","h":"#23-运行结果","p":168},{"i":180,"t":"在编程和系统设计中，Future-Proof 机制指的是通过合理的架构设计和技术选择，使代码或系统能够适应未来的需求变化、技术演进和规模扩展，而无需大规模重构或重写。其核心目标是降低长期维护成本，提高可扩展性。","s":"Future-Proof 机制","u":"/docs/note/design/future_proof","h":"","p":179},{"i":182,"t":"以下是实现 Future-Proof 代码的关键设计思想：","s":"1. Future-Proof 机制的关键原则","u":"/docs/note/design/future_proof","h":"","p":179},{"i":184,"t":"目标：模块间通过清晰的接口交互，而非直接依赖具体实现。使用接口（Go 的 interface）而非具体类型，依赖注入而非硬编码。 优点： 业务逻辑与具体实现解耦 易于扩展新的实现方式 便于单元测试（可以mock Notifier） 设计点： 面向接口编程：依赖抽象而非具体实现 依赖注入：通过构造函数或方法参数注入依赖 单一职责：每个组件只关注自己的核心功能 最小知识原则：组件只与直接相关的组件交互 松耦合示例： 定义接口 // Notifier 通知接口 type Notifier interface { Send(message string) error } 接口实现 // EmailNotifier 邮件通知实现 type EmailNotifier struct{} func (e EmailNotifier) Send(message string) error { fmt.Printf(\"发送邮件通知: %s\\n\", message) return nil } // SMSNotifier 短信通知实现 type SMSNotifier struct{} func (s SMSNotifier) Send(message string) error { fmt.Printf(\"发送短信通知: %s\\n\", message) return nil } 业务逻辑调用接口 // NotificationService 通知服务 type NotificationService struct { notifier Notifier } func NewNotificationService(notifier Notifier) *NotificationService { return &NotificationService{notifier: notifier} } func (s *NotificationService) ProcessOrder(orderID string) { // 处理订单逻辑... message := fmt.Sprintf(\"订单 %s 已处理\", orderID) _ = s.notifier.Send(message) } 主函数调用 func main() { // 可以轻松替换通知实现 emailNotifier := EmailNotifier{} service := NewNotificationService(emailNotifier) service.ProcessOrder(\"12345\") // 切换为短信通知不需要修改业务逻辑 smsNotifier := SMSNotifier{} service = NewNotificationService(smsNotifier) service.ProcessOrder(\"67890\") } 紧耦合示例： 使用具体类型 // EmailSender 邮件发送器 type EmailSender struct{} func (e EmailSender) SendEmail(message string) error { fmt.Printf(\"发送邮件: %s\\n\", message) return nil } 业务类型依赖具体类 // OrderProcessor 订单处理器 type OrderProcessor struct { emailSender EmailSender } func (p *OrderProcessor) ProcessOrder(orderID string) { // 处理订单逻辑... message := fmt.Sprintf(\"订单 %s 已处理\", orderID) _ = p.emailSender.SendEmail(message) } 主函数调用 func main() { processor := OrderProcessor{emailSender: EmailSender{}} processor.ProcessOrder(\"12345\") // 如果要改为短信通知，必须修改OrderProcessor结构体和所有相关代码 }","s":"1.1.  松耦合（Loose Coupling）","u":"/docs/note/design/future_proof","h":"#11--松耦合loose-coupling","p":179},{"i":186,"t":"目标：新增功能时无需修改现有代码。 示例：通过组合而非继承扩展行为（Go 的 embedding 或中间件模式）。 type LoggingAggregator struct { *EventAggregator // 嵌入原有功能 logger Logger } // 新增日志能力而不修改原始聚合器","s":"1.2. 可扩展性（Extensibility）","u":"/docs/note/design/future_proof","h":"#12-可扩展性extensibility","p":179},{"i":188,"t":"目标：将易变的参数（如超时时间、规则路径）外置为配置。 示例：通过环境变量或配置文件驱动行为： timeout := os.Getenv(\"AGGREGATOR_TIMEOUT\")","s":"1.3. 配置化而非硬编码","u":"/docs/note/design/future_proof","h":"#13-配置化而非硬编码","p":179},{"i":190,"t":"目标：数据交互格式（如 JSON、Protobuf）支持向后兼容。 示例：使用 Protocol Buffers 的字段编号机制，避免破坏旧版解析。","s":"1.4. 协议与数据格式的兼容性","u":"/docs/note/design/future_proof","h":"#14-协议与数据格式的兼容性","p":179},{"i":192,"t":"目标：并发模型能随规模调整（如 Goroutine 池 vs 固定 Worker）。 示例：在之前的聚合器代码中，通过 Channel 通信可轻松扩展为多 Worker： for i := 0; i < runtime.NumCPU(); i++ { go aggregator.processRequests() }","s":"1.5. 并发模型的可适应性","u":"/docs/note/design/future_proof","h":"#15-并发模型的可适应性","p":179},{"i":194,"t":"目标：内置日志、指标、链路追踪等，便于未来诊断问题。 示例：在 rulesUpdateRequest 中添加请求 ID 和计时： type rulesUpdateRequest struct { RequestID string // 用于追踪 StartTime time.Time // ...其他字段 }","s":"1.6. 可观测性（Observability）","u":"/docs/note/design/future_proof","h":"#16-可观测性observability","p":179},{"i":196,"t":"目标：处理边界条件（如 nil Channel、超时）。 示例：在 Channel 通信中添加超时： func (a *EventAggregator) UpdateRules(rules []string) error { req := &rulesUpdateRequest{..., response: make(chan error, 1)} select { case a.updateChannel <- req: return <-req.response case <-time.After(1 * time.Second): return errors.New(\"update timeout\") } }","s":"1.7. 防御性编程","u":"/docs/note/design/future_proof","h":"#17-防御性编程","p":179},{"i":198,"t":"package main import ( \"fmt\" \"time\" ) // EventAggregator manages a set of rules and processes updates through channels type EventAggregator struct { rules []string updateChannel chan *rulesUpdateRequest shutdownChan chan struct{} } // rulesUpdateRequest represents a request to update the rules type rulesUpdateRequest struct { newRules []string response chan error } // NewEventAggregator creates and starts a new EventAggregator func NewEventAggregator() *EventAggregator { agg := &EventAggregator{ rules: []string{}, updateChannel: make(chan *rulesUpdateRequest), shutdownChan: make(chan struct{}), } go agg.processRequests() return agg } // UpdateRules safely updates the rules by sending a request through the channel func (a *EventAggregator) UpdateRules(newRules []string) error { req := &rulesUpdateRequest{ newRules: newRules, response: make(chan error, 1), // Buffered to avoid blocking } a.updateChannel <- req return <-req.response } // Shutdown gracefully stops the aggregator func (a *EventAggregator) Shutdown() { close(a.shutdownChan) } // processRequests handles incoming requests in a thread-safe manner func (a *EventAggregator) processRequests() { for { select { case req := <-a.updateChannel: a.rules = req.newRules fmt.Println(\"Updated rules:\", a.rules) req.response <- nil case <-a.shutdownChan: fmt.Println(\"Shutting down aggregator\") return } } } func main() { // Create and start the aggregator aggregator := NewEventAggregator() defer aggregator.Shutdown() // Simulate some updates go func() { time.Sleep(500 * time.Millisecond) if err := aggregator.UpdateRules([]string{\"a\", \"b\", \"c\"}); err != nil { fmt.Println(\"Error updating rules:\", err) } }() go func() { time.Sleep(1 * time.Second) if err := aggregator.UpdateRules([]string{\"d\", \"e\", \"f\"}); err != nil { fmt.Println(\"Error updating rules:\", err) } }() // Give time for the updates to process time.Sleep(2 * time.Second) } 状态隔离：所有规则更新通过 Channel 串行化，避免竞态条件。 易于扩展：可新增 QueryRules() 方法而不影响现有逻辑。 并发友好：Channel 模型天然支持协程扩展。 关闭控制：通过 shutdownChan 实现优雅终止。 根据原则，执行部分优化 package main import ( \"context\" \"errors\" \"fmt\" \"sync\" \"time\" ) // RuleSet represents a collection of rules with metadata type RuleSet struct { Rules []string Version int // Track changes over time Modified time.Time // Last update timestamp } // SetRulesRequest encapsulates a rules update operation type SetRulesRequest struct { NewRules []string Response chan error RequestID string // For tracing Timestamp time.Time // For auditing } // AggregatorOptions configures aggregator behavior type AggregatorOptions struct { MaxPendingRequests int // Buffer size for requests RequestTimeout time.Duration // Timeout for rule updates EnableValidation bool // Future: validate rules before applying } // Aggregator manages rule sets with thread-safe operations type Aggregator struct { currentRuleSet RuleSet options AggregatorOptions requestChan chan *SetRulesRequest queryChan chan chan RuleSet // New channel for safe rule queries commandChan chan func() // Generic command channel for future extensions stopChan chan struct{} shutdownOnce sync.Once stopWg sync.WaitGroup } // NewAggregator creates a configured aggregator instance func NewAggregator(opts AggregatorOptions) *Aggregator { if opts.MaxPendingRequests <= 0 { opts.MaxPendingRequests = 10 } if opts.RequestTimeout <= 0 { opts.RequestTimeout = 2 * time.Second } return &Aggregator{ currentRuleSet: RuleSet{Version: 1}, options: opts, requestChan: make(chan *SetRulesRequest, opts.MaxPendingRequests), queryChan: make(chan chan RuleSet), commandChan: make(chan func()), stopChan: make(chan struct{}), } } // Run starts the aggregator's processing loop func (a *Aggregator) Run() { a.stopWg.Add(1) defer a.stopWg.Done() for { select { case req := <-a.requestChan: a.handleSetRules(req) case respChan := <-a.queryChan: a.handleGetRules(respChan) case cmd := <-a.commandChan: cmd() // Execute arbitrary commands case <-a.stopChan: return } } } func (a *Aggregator) handleSetRules(req *SetRulesRequest) { defer close(req.Response) // Future: could add validation here if a.options.EnableValidation { // Validate rules before applying } a.currentRuleSet = RuleSet{ Rules: req.NewRules, Version: a.currentRuleSet.Version + 1, Modified: time.Now(), } fmt.Printf(\"Updated rules (v%d): %v\\n\", a.currentRuleSet.Version, a.currentRuleSet.Rules) req.Response <- nil } func (a *Aggregator) handleGetRules(respChan chan RuleSet) { respChan <- a.currentRuleSet close(respChan) } // SetRules updates the rule set with timeout support func (a *Aggregator) SetRules(ctx context.Context, rules []string) error { req := &SetRulesRequest{ NewRules: rules, Response: make(chan error), RequestID: fmt.Sprintf(\"req-%d\", time.Now().UnixNano()), Timestamp: time.Now(), } select { case a.requestChan <- req: select { case err := <-req.Response: return err case <-ctx.Done(): return ctx.Err() } case <-a.stopChan: return errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return ctx.Err() } } // GetRules safely retrieves the current rule set func (a *Aggregator) GetRules(ctx context.Context) (RuleSet, error) { respChan := make(chan RuleSet) select { case a.queryChan <- respChan: select { case rules := <-respChan: return rules, nil case <-ctx.Done(): return RuleSet{}, ctx.Err() } case <-a.stopChan: return RuleSet{}, errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return RuleSet{}, ctx.Err() } } // Stop gracefully shuts down the aggregator func (a *Aggregator) Stop() { a.shutdownOnce.Do(func() { close(a.stopChan) a.stopWg.Wait() close(a.requestChan) close(a.queryChan) close(a.commandChan) fmt.Println(\"Aggregator stopped gracefully\") }) } // ExecuteCommand provides extension point for future operations func (a *Aggregator) ExecuteCommand(ctx context.Context, cmd func()) error { select { case a.commandChan <- cmd: return nil case <-a.stopChan: return errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return ctx.Err() } } func main() { // Configurable options opts := AggregatorOptions{ MaxPendingRequests: 20, RequestTimeout: 3 * time.Second, EnableValidation: false, // Could be enabled in future } aggregator := NewAggregator(opts) go aggregator.Run() // Example usage with context ctx, cancel := context.WithTimeout(context.Background(), 2*time.Second) defer cancel() // Set rules err := aggregator.SetRules(ctx, []string{\"a\", \"b\", \"c\"}) if err != nil { fmt.Println(\"Error setting rules:\", err) } // Get rules rules, err := aggregator.GetRules(ctx) if err != nil { fmt.Println(\"Error getting rules:\", err) } else { fmt.Printf(\"Current rules (v%d): %v\\n\", rules.Version, rules.Rules) } // Execute custom command aggregator.ExecuteCommand(ctx, func() { fmt.Println(\"Executing custom command\") }) aggregator.Stop() } Enhanced Rule Metadata: Added RuleSet struct with versioning and timestamps Supports audit trails and change tracking Configurable Options: AggregatorOptions allows tuning without code changes Supports future features like validation Multiple Communication Channels: Separate channels for commands (commandChan) and queries (queryChan) Prevents mixing of operation types Context Support: All operations respect context for timeouts/cancellation Better integration with modern Go applications Extension Points: ExecuteCommand method for adding future functionality Generic command channel pattern Improved Shutdown: sync.Once ensures safe single shutdown sync.WaitGroup for proper goroutine cleanup Thread-Safe Queries: Added safe GetRules method via channel No direct access to internal state Request Tracing: Added request IDs for debugging Timestamps for all operations 使用命令模式优化 package main import ( \"context\" \"errors\" \"fmt\" \"sync\" \"time\" ) // Command defines the interface all commands must implement type Command interface { Execute(ctx context.Context) error } // CommandHandler processes commands type CommandHandler struct { commands chan Command stopChan chan struct{} wg sync.WaitGroup } // NewCommandHandler creates a new handler with specified queue size func NewCommandHandler(queueSize int) *CommandHandler { return &CommandHandler{ commands: make(chan Command, queueSize), stopChan: make(chan struct{}), } } // Start begins processing commands func (h *CommandHandler) Start() { h.wg.Add(1) go func() { defer h.wg.Done() for { select { case cmd := <-h.commands: ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second) err := cmd.Execute(ctx) cancel() if err != nil { fmt.Printf(\"Command execution failed: %v\\n\", err) } case <-h.stopChan: return } } }() } // Submit sends a command for execution func (h *CommandHandler) Submit(ctx context.Context, cmd Command) error { select { case h.commands <- cmd: return nil case <-h.stopChan: return errors.New(\"handler is shutting down\") case <-ctx.Done(): return ctx.Err() } } // Stop gracefully shuts down the handler func (h *CommandHandler) Stop() { close(h.stopChan) h.wg.Wait() close(h.commands) } // --- Concrete Commands --- // SetRulesCommand implements Command for rule updates type SetRulesCommand struct { Aggregator *Aggregator NewRules []string } func (c *SetRulesCommand) Execute(ctx context.Context) error { return c.Aggregator.SetRules(ctx, c.NewRules) } // GetRulesCommand implements Command for rule queries type GetRulesCommand struct { Aggregator *Aggregator ResultChan chan<- RuleSet } func (c *GetRulesCommand) Execute(ctx context.Context) error { rules, err := c.Aggregator.GetRules(ctx) if err != nil { return err } c.ResultChan <- rules return nil } // --- Aggregator Implementation --- type RuleSet struct { Rules []string Version int Modified time.Time } type Aggregator struct { mu sync.Mutex currentRule RuleSet } func (a *Aggregator) SetRules(ctx context.Context, rules []string) error { a.mu.Lock() defer a.mu.Unlock() select { case <-ctx.Done(): return ctx.Err() default: a.currentRule = RuleSet{ Rules: rules, Version: a.currentRule.Version + 1, Modified: time.Now(), } fmt.Printf(\"Rules updated to version %d\\n\", a.currentRule.Version) return nil } } func (a *Aggregator) GetRules(ctx context.Context) (RuleSet, error) { a.mu.Lock() defer a.mu.Unlock() select { case <-ctx.Done(): return RuleSet{}, ctx.Err() default: return a.currentRule, nil } } // --- Usage Example --- func main() { // Create components handler := NewCommandHandler(10) aggregator := &Aggregator{ currentRule: RuleSet{Version: 0}, } // Start command processor handler.Start() defer handler.Stop() // Submit commands ctx := context.Background() // Set rules command setCmd := &SetRulesCommand{ Aggregator: aggregator, NewRules: []string{\"a\", \"b\", \"c\"}, } handler.Submit(ctx, setCmd) // Get rules command resultChan := make(chan RuleSet, 1) getCmd := &GetRulesCommand{ Aggregator: aggregator, ResultChan: resultChan, } handler.Submit(ctx, getCmd) // Wait for result select { case rules := <-resultChan: fmt.Printf(\"Current rules: %v\\n\", rules.Rules) case <-time.After(1 * time.Second): fmt.Println(\"Timeout waiting for rules\") } } The Command Handler pattern is a behavioral design pattern that encapsulates requests as objects, allowing for parameterization of clients with different requests, queuing of requests, and support for undoable operations. Here's how to implement it in your aggregator: Core Components Command Interface: Defines the execution contract Concrete Commands: Encapsulate specific actions and parameters Invoker: Receives and executes commands Receiver: Knows how to perform the operations Key Features Command Interface: type Command interface { Execute(ctx context.Context) error } Concrete Commands: Each command encapsulates all parameters needed for execution Commands can be serialized/deserialized for distributed systems Command Handler: Manages a queue of commands Processes commands sequentially in a goroutine Supports graceful shutdown Benefits: Decoupling: Separates command creation from execution Extensibility: Easy to add new command types Composability: Commands can be combined into macros Undo/Redo: Can be extended to support command history Advanced Extensions Command Middleware: type CommandMiddleware func(Command) Command func LoggingMiddleware(next Command) Command { return &loggedCommand{next} } Transaction Support: type TransactionCommand struct { Commands []Command } func (t *TransactionCommand) Execute(ctx context.Context) error { // Execute all or nothing } Priority Commands: type PriorityCommand struct { Command Priority int } // Use priority queue instead of channel","s":"2. 聚合器示例","u":"/docs/note/design/future_proof","h":"#2-聚合器示例","p":179},{"i":200,"t":"// 硬编码实现，未来难以修改 var globalRules []string func UpdateRules(rules []string) { globalRules = rules // 直接修改全局状态，线程不安全 }","s":"3. 反模式：非 Future-Proof 的设计","u":"/docs/note/design/future_proof","h":"#3-反模式非-future-proof-的设计","p":179},{"i":202,"t":"Future-Proof 不是过度设计，而是通过遵循 SOLID 原则和 并发安全实践，让代码具备： 适应变化的能力 平滑演进的路径 诊断问题的手段 在 Go 中，Channel 和 Interface 是构建 Future-Proof 系统的核心工具。","s":"4. 总结","u":"/docs/note/design/future_proof","h":"#4-总结","p":179},{"i":205,"t":"服务间通信（通过内核转发） 标准化消息协议结构 支持状态码、错误、数据负载。 异步+超时机制 服务发出请求时可以设置超时时间，避免长期阻塞。","s":"1. 目标","u":"/docs/note/design/microkernel/microkernel4","h":"#1-目标","p":203},{"i":208,"t":"定义标准消息格式 Reply 包含code/message/Data Event ReplyCh 使用标准格式的Reply // kernel/kernel.go // Reply 定义内核事件回复 type Reply struct { Code int // 0 表示成功，非0表示错误码 Message string // 描述信息 Data string // 可选负载 } // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string // 增加响应通道,使用 chan Reply，提高回复的灵活性 ReplyCh chan Reply // 可选：超时时间 TimeoutMs int } 服务改造 handle 从处理字符串修改为处理事件，返回标准Reply // kernel/kernel.go // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string Handle(Event) Reply } Listen 路由和事件总线设计 // Listen 事件循环（处理服务间通信） // 监听事件，处理服务间通信 // 重命名 EventLoop 为 Listen func (k *Kernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: - %s\\n\", evt.From, evt.Content) // 发送给 Kernel 自己 if evt.To == \"\" { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 0, Message: \"Handled by kernel\", Data: \"ok\"} } continue } // 路由到目标服务 k.mu.RLock() svc, ok := k.services[evt.To] k.mu.RUnlock() if !ok { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 404, Message: \"Service not found\", Data: \"\"} } continue } // 调用目标服务处理，并返回 go func(s Service, m Event) { result := s.Handle(m) if m.ReplyCh != nil { select { case m.ReplyCh <- result: case <-time.After(time.Duration(m.TimeoutMs) * time.Millisecond): m.ReplyCh <- Reply{Code: 408, Message: \"timeout\", Data: \"\"} } } }(svc, evt) } } }","s":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel4","h":"#21-kernel核心","p":203},{"i":210,"t":"根据count随机分发（Push 指定了发送位置） func (l *LogService) run() { var count = 1 for { count++ select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 replyCh := make(chan kernel.Reply, 1) if count%2 == 0 { l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", Content: log, ReplyCh: replyCh, TimeoutMs: 1000, }) } else { l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", To: \"echo\", Content: log, ReplyCh: replyCh, TimeoutMs: 1000, }) } // 等待内核回应 reply := <-replyCh fmt.Printf(\"[%s] got reply from kernel: %s\\n\", l.Name(), reply.Message) } } }","s":"2.2 LogService","u":"/docs/note/design/microkernel/microkernel4","h":"#22-logservice","p":203},{"i":212,"t":"func (e *EchoService) Handle(evt kernel.Event) kernel.Reply { return kernel.Reply{Code: 0, Message: \"echo service handled\", Data: fmt.Sprintf(\"from %s: %s\", evt.From, evt.Content)} }","s":"2.3 增加另一个类似的EchoService","u":"/docs/note/design/microkernel/microkernel4","h":"#23-增加另一个类似的echoservice","p":203},{"i":214,"t":"Registered: logger # 注册另一个服务 Registered: echo [logger] starting... [echo] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [Kernel] Event from logger: - Hello, Echo! # 转发到echoService 处理 [logger] got reply from kernel: echo service handled [Kernel] Send Event to logger: Hello, Log! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... [echo] stopping... 查看完整代码","s":"2.4 运行结果","u":"/docs/note/design/microkernel/microkernel4","h":"#24-运行结果","p":203},{"i":217,"t":"服务状态管理 单独服务管理 优化项目结构","s":"1. 目标","u":"/docs/note/design/microkernel/microkernel5","h":"#1-目标","p":215},{"i":220,"t":"定义服务状态和服务元数据 // kernel/service.go // ServiceState 定义微内核服务状态 type ServiceState int // 使用iota枚举类型，自动计算枚举值 const ( Created ServiceState = iota Running Stopped ) // ServiceState.String() func (s ServiceState) String() string { // 状态转换成字符串 // 其中[...]表示让编译器自动计算数组的长度 return [...]string{\"Created\", \"Running\", \"Stopped\"}[s] } // serviceMeta 定义微内核服务元数据 type serviceMeta struct { svc Service state ServiceState } 单个服务管理 // kernel/kernel.go func (k *MicroKernel) StartService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Running { return errors.New(\"service already started\") } if err := meta.svc.Start(); err != nil { return err } meta.state = Running fmt.Println(\"Started:\", meta.svc.Name()) return nil } func (k *MicroKernel) StopService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Stopped { return errors.New(\"service already stopped\") } if err := meta.svc.Stop(); err != nil { return err } meta.state = Stopped fmt.Println(\"Stopped:\", meta.svc.Name()) return nil } Listen 增加服务状态判断，未运行的服务，不再处理消息 // Listen 事件循环（处理服务间通信） // 监听事件，处理服务间通信 // 重命名 EventLoop 为 Listen func (k *MicroKernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[MicroKernel] Event from %s: - %s\\n\", evt.From, evt.Content) // 发送给 MicroKernel 自己 if evt.To == \"\" { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 0, Message: \"Handled by kernel\", Data: \"ok\"} } continue } // 路由到目标服务 k.mu.RLock() meta, ok := k.services[evt.To] k.mu.RUnlock() if !ok || meta.state != Running { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 404, Message: \"service unavailable\", Data: \"\"} } continue } // 调用目标服务处理，并返回 go func(s Service, m Event) { result := s.Handle(m) if m.ReplyCh != nil { select { case m.ReplyCh <- result: case <-time.After(time.Duration(m.TimeoutMs) * time.Millisecond): m.ReplyCh <- Reply{Code: 408, Message: \"timeout\", Data: \"\"} } } }(meta.svc, evt) } } }","s":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel5","h":"#21-kernel核心","p":215},{"i":222,"t":"Registered: logger Registered: echo Starting all services... [logger] starting... [echo] starting... [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } [logger] stopping... [echo] stopping... 查看完整代码","s":"2.2 运行结果","u":"/docs/note/design/microkernel/microkernel5","h":"#22-运行结果","p":215},{"i":225,"t":"支持服务依赖关系管理","s":"1. 目标","u":"/docs/note/design/microkernel/microkernel6","h":"#1-目标","p":223},{"i":228,"t":"定义服务依赖关系。依赖的是服务名称 // kernel/service.go // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string Handle(Event) Reply // Dependencies 返回依赖服务名称 Dependencies() []string // 新增接口 } // serviceMeta 定义微内核服务元数据 type serviceMeta struct { svc Service state ServiceState // 存储依赖，也可以不使用，直接使用svc.Dependencies deps []string } 注册Register增加deps // kernel/kernel.go // Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() name := svc.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil } 启动服务和停止服务增加拓扑排序 // kernel/kernel.go func (k *MicroKernel) topoSort() ([]string, error) { k.mu.RLock() defer k.mu.RUnlock() visited := make(map[string]bool) temp := make(map[string]bool) result := []string{} var visit func(string) error visit = func(name string) error { if temp[name] { return fmt.Errorf(\"circular dependency at %s\", name) } if visited[name] { return nil } temp[name] = true meta, ok := k.services[name] if !ok { return fmt.Errorf(\"service %s not registered\", name) } for _, dep := range meta.deps { if err := visit(dep); err != nil { return err } } visited[name] = true temp[name] = false result = append(result, name) return nil } for name := range k.services { if !visited[name] { if err := visit(name); err != nil { return nil, err } } } return result, nil } func (k *MicroKernel) StartAll() error { sorted, err := k.topoSort() // ... for _, name := range sorted { if err := k.StartService(name); err != nil { // ... } } return nil }","s":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel6","h":"#21-kernel核心","p":223},{"i":230,"t":"服务增加依赖方法实现 func (l *LogService) Dependencies() []string { return []string{\"echo\"} }","s":"2.2 服务","u":"/docs/note/design/microkernel/microkernel6","h":"#22-服务","p":223},{"i":232,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } Stopping all services... [logger] stopping... Stopped: logger [echo] stopping... Stopped: echo 查看完整代码","s":"2.3 运行结果","u":"/docs/note/design/microkernel/microkernel6","h":"#23-运行结果","p":223},{"i":235,"t":"支持服务热更新 所有服务和内核通过统一接口打印日志 时间戳、服务名、级别（INFO/WARN/ERROR） 动态控制日志级别 输出到 stdout、文件、远程服务等 xxx","s":"1. 目标","u":"/docs/note/design/microkernel/microkernel7","h":"#1-目标","p":233},{"i":238,"t":"新增ReplaceService 用于热替换服务 // kernel/kernel.go func (k *MicroKernel) ReplaceService(newSvc Service) error { k.mu.Lock() defer k.mu.Unlock() name := newSvc.Name() oldMeta, exists := k.services[name] if exists && oldMeta.state == Running { // 停止旧服务 oldMeta.svc.Stop() fmt.Printf(\"Stopped old version of %s\\n\", name) } // 替换服务实现，重建元信息 k.services[name] = &serviceMeta{ svc: newSvc, deps: newSvc.Dependencies(), state: Created, } // 重启服务（如旧服务在运行） if exists && oldMeta.state == Running { newSvc.Start() k.services[name].state = Running fmt.Printf(\"Started new version of %s\\n\", name) } else { fmt.Printf(\"Registered new version of %s (not started)\\n\", name) } return nil } 注册Register增加deps // kernel/kernel.go // Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() name := svc.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil } 启动服务和停止服务增加拓扑排序 // kernel/kernel.go func (k *MicroKernel) topoSort() ([]string, error) { k.mu.RLock() defer k.mu.RUnlock() visited := make(map[string]bool) temp := make(map[string]bool) result := []string{} var visit func(string) error visit = func(name string) error { if temp[name] { return fmt.Errorf(\"circular dependency at %s\", name) } if visited[name] { return nil } temp[name] = true meta, ok := k.services[name] if !ok { return fmt.Errorf(\"service %s not registered\", name) } for _, dep := range meta.deps { if err := visit(dep); err != nil { return err } } visited[name] = true temp[name] = false result = append(result, name) return nil } for name := range k.services { if !visited[name] { if err := visit(name); err != nil { return nil, err } } } return result, nil } func (k *MicroKernel) StartAll() error { sorted, err := k.topoSort() // ... for _, name := range sorted { if err := k.StartService(name); err != nil { // ... } } return nil }","s":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel7","h":"#21-kernel核心","p":233},{"i":240,"t":"日志服务设计 type LogLevel int const ( INFO LogLevel = iota WARN ERROR ) type Logger struct { mu sync.Mutex level LogLevel service string out io.Writer } 方法实现 func NewLogger(service string, level LogLevel, out io.Writer) *Logger { return &Logger{ service: service, level: level, out: out, } } func (l *Logger) logf(level LogLevel, format string, args ...any) { if level < l.level { return } l.mu.Lock() defer l.mu.Unlock() levelStr := [...]string{\"INFO\", \"WARN\", \"ERROR\"}[level] msg := fmt.Sprintf(format, args...) ts := time.Now().Format(\"2006-01-02 15:04:05.000\") fmt.Fprintf(l.out, \"[%s] [%s] [%s] %s\\n\", ts, levelStr, l.service, msg) } func (l *Logger) Infof(format string, args ...any) { l.logf(INFO, format, args...) } func (l *Logger) Warnf(format string, args ...any) { l.logf(WARN, format, args...) } func (l *Logger) Errorf(format string, args ...any) { l.logf(ERROR, format, args...) } 服务中使用 type EchoServiceV3 struct { log *Logger } func NewEchoServiceV3() *EchoServiceV3 { return &EchoServiceV3{ log: NewLogger(\"echo\", INFO, os.Stdout), } } //... func (e *EchoServiceV3) Start() { e.log.Infof(\"started\") }","s":"2.2 日志服务","u":"/docs/note/design/microkernel/microkernel7","h":"#22-日志服务","p":233},{"i":242,"t":"热替换服务 // 7. 热替换服务 // 热更新为 V2 _ = microKernel.ReplaceService(service.NewEchoServiceV2(microKernel)) // 测试 V2 行为 replyCh2 := make(chan microkernel.Reply, 1) microKernel.Push(microkernel.Event{ From: \"main\", Type: \"log\", Content: \"log\", ReplyCh: replyCh2, TimeoutMs: 1000, }) fmt.Println(\"v2 reply:\", <-replyCh2)","s":"2.3 main","u":"/docs/note/design/microkernel/microkernel7","h":"#23-main","p":233},{"i":244,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } [echo] stopping... Stopped old version of echo [2025-04-23 21:46:11.935] [INFO] [echo] [echov2] starting... Started new version of echo [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... [log] stopping Stopped: echo Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } Stopping all services... [logger] stopping... Stopped: logger [echo] stopping... Stopped: echo 查看完整代码","s":"2.4 运行结果","u":"/docs/note/design/microkernel/microkernel7","h":"#24-运行结果","p":233},{"i":247,"t":"服务热更新增加状态迁移 支持服务加密状态迁移","s":"1. 目标","u":"/docs/note/design/microkernel/microkernel8","h":"#1-目标","p":245},{"i":250,"t":"新增状态接口 // 旧服务可选实现：导出状态 type Exportable interface { ExportState() any } // 新服务可选实现：导入状态 type Importable interface { ImportState(state any) error } 加密接口 type Crypter interface { Encrypt(data any) ([]byte, error) Decrypt(cipher []byte) (any, error) } 加密实现 使用aes type AESCrypter struct { key []byte // 16/24/32 字节 } func NewAESCrypter(key []byte) *AESCrypter { return &AESCrypter{key: key} } func (a *AESCrypter) Encrypt(data any) ([]byte, error) { plaintext, err := json.Marshal(data) if err != nil { return nil, err } block, err := aes.NewCipher(a.key) if err != nil { return nil, err } aesgcm, err := cipher.NewGCM(block) if err != nil { return nil, err } nonce := make([]byte, aesgcm.NonceSize()) if _, err := io.ReadFull(rand.Reader, nonce); err != nil { return nil, err } ciphertext := aesgcm.Seal(nonce, nonce, plaintext, nil) return ciphertext, nil } func (a *AESCrypter) Decrypt(ciphertext []byte) (any, error) { block, err := aes.NewCipher(a.key) if err != nil { return nil, err } aesgcm, err := cipher.NewGCM(block) if err != nil { return nil, err } nonceSize := aesgcm.NonceSize() if len(ciphertext) < nonceSize { return nil, fmt.Errorf(\"ciphertext too short\") } nonce := ciphertext[:nonceSize] cipherData := ciphertext[nonceSize:] plaintext, err := aesgcm.Open(nil, nonce, cipherData, nil) if err != nil { return nil, err } var result any if err := json.Unmarshal(plaintext, &result); err != nil { return nil, err } return result, nil } 替换服务 //func (k *MicroKernel) ReplaceService(newSvc Service) error { // k.mu.Lock() // defer k.mu.Unlock() // // name := newSvc.Name() // oldMeta, exists := k.services[name] // var state any // // if exists { // if exporter, ok := oldMeta.svc.(Exportable); ok { // state = exporter.ExportState() // } // oldMeta.svc.Stop() // fmt.Printf(\"Stopped old version of %s\\n\", name) // } // // // 状态迁移 // if importer, ok := newSvc.(Importable); ok && state != nil { // if err := importer.ImportState(state); err != nil { // return fmt.Errorf(\"state import failed: %w\\n\", err) // } // fmt.Printf(\"State migrated for service %s\\n\", name) // } // // // 替换服务元信息 // k.services[name] = &serviceMeta{ // svc: newSvc, // deps: newSvc.Dependencies(), // state: Created, // } // // // 重启服务 // if exists && oldMeta.state == Running { // newSvc.Start() // k.services[name].state = Running // fmt.Printf(\"Started new version of %s\", name) // } else { // fmt.Printf(\"Registered new version of %s (not started)\", name) // } // // return nil //} func (k *MicroKernel) ReplaceServiceEncrypted(newSvc Service, crypter Crypter) error { k.mu.Lock() defer k.mu.Unlock() name := newSvc.Name() oldMeta, exists := k.services[name] var encryptedState []byte if exists { if exporter, ok := oldMeta.svc.(Exportable); ok { rawState := exporter.ExportState() cipher, err := crypter.Encrypt(rawState) if err != nil { return fmt.Errorf(\"state encryption failed: %w\", err) } encryptedState = cipher } oldMeta.svc.Stop() fmt.Printf(\"Stopped old version of %s\\n\", name) } // 状态导入（解密） if importer, ok := newSvc.(Importable); ok && encryptedState != nil { decrypted, err := crypter.Decrypt(encryptedState) if err != nil { return fmt.Errorf(\"state decryption failed: %w\", err) } if err := importer.ImportState(decrypted); err != nil { return fmt.Errorf(\"state import failed: %w\", err) } fmt.Printf(\"Encrypted state migrated for service %s\\n\", name) } k.services[name] = &serviceMeta{ svc: newSvc, deps: newSvc.Dependencies(), state: Created, } if exists && oldMeta.state == Running { newSvc.Start() k.services[name].state = Running fmt.Printf(\"Started new version of %s\\n\", name) } else { fmt.Printf(\"Registered new version of %s (not started)\\n\", name) } return nil }","s":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel8","h":"#21-kernel核心","p":245},{"i":252,"t":"实现状态接口 func (e *EchoServiceV2) ImportState(state any) error { if val, ok := state.(int); ok { e.echoCount = val return nil } return fmt.Errorf(\"invalid state type\") } func (e *EchoService) ExportState() any { return e.echoCount }","s":"2.2 echo服务","u":"/docs/note/design/microkernel/microkernel8","h":"#22-echo服务","p":245},{"i":254,"t":"热替换服务 // 7. 热替换服务 // 热更新为 V2 aesKey := []byte(\"1234567890123456\") // 16 字节对称密钥 microKernel.ReplaceServiceEncrypted(service.NewEchoServiceV2(microKernel), microkernel.NewAESCrypter(aesKey))","s":"2.3 main","u":"/docs/note/design/microkernel/microkernel8","h":"#23-main","p":245},{"i":256,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to echo: Hello, Log! {0 echo service handled from microKernel: Hello, Log!} [echo] stopping... Stopped old version of echo State migrated for service echo [2025-04-24 21:28:38.032] [INFO] [echo] [echov2] starting... Started new version of echo[MicroKernel] Send Event to echo: Hello, Log! [echo] count is 10 {0 echo v2 service handled from microKernel: Hello, Log!} [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... Stopped: echo [log] stopping 查看完整代码","s":"2.4 运行结果","u":"/docs/note/design/microkernel/microkernel8","h":"#24-运行结果","p":245},{"i":258,"t":"服务状态持久化","s":"microkernel 设计9","u":"/docs/note/design/microkernel/microkernel9","h":"","p":257},{"i":260,"t":"服务状态在 Stop() 或热替换时 导出 + 加密 + 写入磁盘 注册服务时若检测到磁盘中有状态，则 读取 + 解密 + 导入 每个服务有自己的状态文件（支持多服务）","s":"1. 目标","u":"/docs/note/design/microkernel/microkernel9","h":"#1-目标","p":257},{"i":263,"t":"存储目录：/var/lib/microkernel/state/（示例） 文件名：<service_name>.state 文件内容：已加密的字节流","s":"2.1 存储文件设计","u":"/docs/note/design/microkernel/microkernel9","h":"#21-存储文件设计","p":257},{"i":265,"t":"type StateStore struct { dir string crypter Crypter } func NewStateStore(dir string, crypter Crypter) *StateStore { return &StateStore{dir: dir, crypter: crypter} } func (s *StateStore) path(name string) string { return filepath.Join(s.dir, name+\".state\") } func (s *StateStore) Save(name string, state any) error { encrypted, err := s.crypter.Encrypt(state) if err != nil { return err } if err := os.MkdirAll(s.dir, 0755); err != nil { return err } return os.WriteFile(s.path(name), encrypted, 0600) } func (s *StateStore) Load(name string) (any, error) { data, err := os.ReadFile(s.path(name)) if err != nil { return nil, err } return s.crypter.Decrypt(data) } func (s *StateStore) Exists(name string) bool { _, err := os.Stat(s.path(name)) return err == nil }","s":"2.2 状态管理模块：StateStore","u":"/docs/note/design/microkernel/microkernel9","h":"#22-状态管理模块statestore","p":257},{"i":268,"t":"type MicroKernel struct { ... stateStore *StateStore } func NewMicroKernelWithState(store *StateStore) *MicroKernel { return &MicroKernel{ services: make(map[string]*serviceMeta), stateStore: store, logger: NewLogger(\"kernel\", INFO, os.Stdout), } }","s":"3.1 kernel 初始化集成StateStore","u":"/docs/note/design/microkernel/microkernel9","h":"#31-kernel-初始化集成statestore","p":257},{"i":270,"t":"// Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() // name 可以放在锁前面，优化性能 name := svc.Name() // 增加状态导入 // 如果使用的接口，这边就使用的接口方法 if k.stateStore != nil && k.stateStore.Exists(name) { // 查看服务是否支持状态导入 // 状态导入不要求每个服务必须实现 // 如果没有实现，就直接忽略 if importer, ok := svc.(Importable); ok { raw, err := k.stateStore.Load(name) if err != nil { return fmt.Errorf(\"state load failed: %w\\n\", err) } err = importer.ImportState(raw) if err != nil { return fmt.Errorf(\"state import failed: %w\\n\", err) } fmt.Printf(\"State migrated for service %s\\n\", name) } } if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil }","s":"3.2 注册服务时尝试自动加载状态","u":"/docs/note/design/microkernel/microkernel9","h":"#32-注册服务时尝试自动加载状态","p":257},{"i":272,"t":"func (k *MicroKernel) StopService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Stopped { return errors.New(\"service already stopped\") } // 增加状态导出判断 if exporter, ok := meta.svc.(Exportable); ok && k.stateStore != nil { if err := k.stateStore.Save(name, exporter.ExportState()); err == nil { fmt.Printf(\"State persisted for %s\\n\", name) } } if err := meta.svc.Stop(); err != nil { return err } meta.state = Stopped fmt.Println(\"Stopped:\", meta.svc.Name()) return nil }","s":"3.3 停止服务时，保存状态","u":"/docs/note/design/microkernel/microkernel9","h":"#33-停止服务时保存状态","p":257},{"i":274,"t":"func (k *MicroKernel) Listen(ctx context.Context) { // 间隔可以加在kernel的struct中，也可以使用方法来获取 ticker := time.NewTicker(2 * time.Second) for { select { case <-ctx.Done(): return case <-ticker.C: fmt.Println(\"Timed writing state\") if k.stateStore != nil { for name, meta := range k.services { if meta.state == Running { if exporter, ok := meta.svc.(Exportable); ok { if err := k.stateStore.Save(name, exporter.ExportState()); err == nil { fmt.Printf(\"State persisted for %s\\n\", name) } } } } }","s":"3.4 定时持久化状态","u":"/docs/note/design/microkernel/microkernel9","h":"#34-定时持久化状态","p":257},{"i":276,"t":"crypter := microkernel.NewAESCrypter([]byte(\"1234567890123456\")) store := microkernel.NewStateStore(\"./state\", crypter) // 1. 创建微内核 microKernel := microkernel.NewMicroKernel(store) // 增加加密存储","s":"4. main","u":"/docs/note/design/microkernel/microkernel9","h":"#4-main","p":257},{"i":278,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to echo: Hello, Log! {0 echo service handled from microKernel: Hello, Log!} [echo] stopping... Stopped old version of echo Encrypted state migrated for service echo [2025-04-26 19:47:00.801] [INFO] [echo] [echov2] starting... Started new version of echo [MicroKernel] Send Event to echo: Hello, Log! [echo] count is 10 {0 echo v2 service handled from microKernel: Hello, Log!} [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... Stopped: echo 查看完整代码","s":"4.1 运行结果","u":"/docs/note/design/microkernel/microkernel9","h":"#41-运行结果","p":257},{"i":281,"t":"接口隔离原则(Interface Segregation Principle, ISP) 是SOLID原则中的第四个原则，由Robert C. Martin提出。其核心思想是： 客户端不应该被迫依赖它们不使用的接口。换句话说，多个特定的小接口比一个通用的大接口更好。 在Go语言中，这一原则尤为重要，因为Go的接口是隐式实现的，且鼓励小而专注的设计。","s":"1. 概述","u":"/docs/note/design/oop_pinciple/isp","h":"#1-概述","p":279},{"i":283,"t":"小而专注：接口应该只包含客户端真正需要的方法 避免\"胖接口\"：不要让接口承担过多职责 按需实现：客户端应该只依赖它们实际使用的接口","s":"2. 核心概念","u":"/docs/note/design/oop_pinciple/isp","h":"#2-核心概念","p":279},{"i":286,"t":"// 一个\"胖接口\"包含太多方法 type Animal interface { Eat() Sleep() Fly() // 不是所有动物都会飞 Swim() // 不是所有动物都会游泳 Bark() // 不是所有动物都会叫 } // 实现这个接口很困难 type Dog struct{} func (d Dog) Eat() { fmt.Println(\"Dog eating\") } func (d Dog) Sleep() { fmt.Println(\"Dog sleeping\") } func (d Dog) Bark() { fmt.Println(\"Dog barking\") } func (d Dog) Fly() {} // 狗不会飞，但被迫实现 func (d Dog) Swim() {} // 有些狗会游泳，有些不会 问题：Dog被迫实现它不需要的方法(Fly)","s":"3.1 违反ISP的例子","u":"/docs/note/design/oop_pinciple/isp","h":"#31-违反isp的例子","p":279},{"i":288,"t":"// 拆分为多个小接口 type Eater interface { Eat() } type Sleeper interface { Sleep() } type Flyer interface { Fly() } type Swimmer interface { Swim() } type Barker interface { Bark() } // Dog只需要实现相关接口 type Dog struct{} func (d Dog) Eat() { fmt.Println(\"Dog eating\") } func (d Dog) Sleep() { fmt.Println(\"Dog sleeping\") } func (d Dog) Bark() { fmt.Println(\"Dog barking\") } // 可以按需组合 type AquaticDog struct { Dog } func (a AquaticDog) Swim() { fmt.Println(\"Dog swimming\") }","s":"3.2 遵循ISP的改进方案","u":"/docs/note/design/oop_pinciple/isp","h":"#32-遵循isp的改进方案","p":279},{"i":291,"t":"type Animal interface { Eater Sleeper } type Bird interface { Animal Flyer } type Fish interface { Animal Swimmer }","s":"4.1 使用接口组合","u":"/docs/note/design/oop_pinciple/isp","h":"#41-使用接口组合","p":279},{"i":293,"t":"// 在需要的地方定义接口 func Feed(e Eater) { e.Eat() } func PutToSleep(s Sleeper) { s.Sleep() }","s":"4.2 客户端特定接口","u":"/docs/note/design/oop_pinciple/isp","h":"#42-客户端特定接口","p":279},{"i":295,"t":"// 不好的设计 type FileHandler interface { Open() Close() Read() Write() Delete() Archive() // 不是所有处理器都需要归档 } // 好的设计 type FileOperator interface { Open() Close() } type FileReader interface { FileOperator Read() } type FileWriter interface { FileOperator Write() } type FileManager interface { FileReader FileWriter Delete() }","s":"4.3 避免接口污染","u":"/docs/note/design/oop_pinciple/isp","h":"#43-避免接口污染","p":279},{"i":298,"t":"type Reader interface { Get(id string) (Item, error) List() ([]Item, error) } type Writer interface { Create(item Item) error Update(item Item) error Delete(id string) error } // 只读客户端 func NewReadOnlyClient(r Reader) *ReadOnlyClient { return &ReadOnlyClient{reader: r} } // 读写客户端 func NewReadWriteClient(rw interface { Reader Writer }) *ReadWriteClient { return &ReadWriteClient{readerWriter: rw} }","s":"5.1 数据库访问层","u":"/docs/note/design/oop_pinciple/isp","h":"#51-数据库访问层","p":279},{"i":300,"t":"type RequestLogger interface { LogRequest(r *http.Request) } type ResponseLogger interface { LogResponse(w http.ResponseWriter) } // 只需要请求日志的中间件 func WithRequestLogging(l RequestLogger) func(http.Handler) http.Handler { return func(next http.Handler) http.Handler { return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) { l.LogRequest(r) next.ServeHTTP(w, r) }) } }","s":"5.2 HTTP中间件","u":"/docs/note/design/oop_pinciple/isp","h":"#52-http中间件","p":279},{"i":302,"t":"不必要的实现负担：类型被迫实现它们不需要的方法 脆弱的代码：接口变更会影响太多客户端 难以测试：需要模拟不相关的方法 低内聚性：接口包含不相关的方法","s":"6. 违反ISP的后果","u":"/docs/note/design/oop_pinciple/isp","h":"#6-违反isp的后果","p":279},{"i":304,"t":"ISP鼓励小而专注的接口设计 客户端不应该被迫依赖它们不使用的方法 Go语言的隐式接口机制天然支持ISP 使用接口组合构建更复杂的抽象 按需定义接口，而不是预先创建大接口 好的接口设计应该像Unix工具一样 - 每个工具只做一件事，但做得很好。","s":"7. 总结","u":"/docs/note/design/oop_pinciple/isp","h":"#7-总结","p":279},{"i":307,"t":"使用channel 在 goroutine 间进行通信和同步操作 package main import ( \"fmt\" \"time\" ) // SetRulesRequest 表示设置规则的请求结构 type SetRulesRequest struct { NewRules []string Response chan error // 用于同步返回是否成功 } // Aggregator 用于管理规则并支持并发设置 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} } // SetRules 是向 aggregator 发送新规则的接口 func (a *Aggregator) SetRules(r []string) error { req := &SetRulesRequest{ NewRules: r, Response: make(chan error), } a.setRulesChan <- req return <-req.Response // 等待响应结束 } // Run 启动 aggregator 的工作协程 func (a *Aggregator) Run() { for { select { case req := <-a.setRulesChan: a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) req.Response <- nil // 成功响应 case <-a.stopChan: return } } } // Stop 关闭 aggregator 的后台协程 func (a *Aggregator) Stop() { close(a.stopChan) } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), } go aggregator.Run() // 模拟使用 time.Sleep(500 * time.Millisecond) aggregator.SetRules([]string{\"a\", \"b\", \"c\"}) aggregator.SetRules([]string{\"d\", \"e\", \"f\"}) // 停止后台协程 aggregator.Stop() } 🔍 说明重点： 通信模型：调用者通过 SetRules 向 Aggregator 的 channel 发送数据，然后通过一个 Response channel 同步等待执行结果。 响应式设计：Aggregator 处理请求后通过 channel 回复，避免竞态。 易扩展性：你可以将更多操作（如查询、追加等）封装成不同的 request 结构体，并通过不同 channel 或类型区分处理。","s":"1. channel 交互","u":"/docs/note/design/multi_goroutine","h":"#1-channel-交互","p":305},{"i":310,"t":"发送端（ch <- v）向已关闭 channel 发送数据： 会 panic！ 接收端（<-chan）读取已关闭 channel： 不会 panic， 立即返回零值 第二个返回值判断是否关闭。即：v, ok := <-ch，如果 ok == false，说明 channel 已关闭。 不判断。即: v := <-ch，立即返回零值，无法判断 channel 是否关闭。 即：v, ok := <-ch，如果 ok == false，说明 channel 已关闭。 举例 package main import ( \"log\" \"time\" ) func main() { //ch := make(chan int, 2) ch := make(chan int) go func() { ch <- 20 time.Sleep(1 * time.Second) defer close(ch) }() // 只接收数据，不检查通道状态 rules := <-ch log.Println(\"Rules:\", rules) // 输出：14:47:31 Rules: 20 rules = <-ch log.Println(\"Rules:\", rules) // 输出：14:47:32 Rules: 0 rules = <-ch log.Println(\"Rules:\", rules) // 输出：14:47:32 Rules: 0 // 读取时检查通道是否仍然开放 rules, open := <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:39 Rules: 20 Open: true rules, open = <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:40 Rules: 0 Open: false rules, open = <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:40 Rules: 0 Open: false }","s":"2.1. 理解 channel 行为","u":"/docs/note/design/multi_goroutine","h":"#21-理解-channel-行为","p":305},{"i":312,"t":"✅ 特性亮点： 安全关闭 goroutine： setRulesChan 和 stopChan 都支持关闭，防止死锁或 panic。 带 ok 判断防止接收已关闭的 channel 导致数据为 nil。 封装清晰： Run() 执行逻辑清晰，Stop() 方法负责安全退出和资源清理。 package main import ( \"fmt\" \"time\" ) // 请求结构体，设置规则并通过 Response 返回结果 type SetRulesRequest struct { NewRules []string Response chan error } // 聚合器结构 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} doneChan chan struct{} // 通知主线程已退出 } // Run 启动 Aggregator 的工作协程 func (a *Aggregator) Run() { defer close(a.doneChan) // 通知主线程：后台协程已退出 for { select { case req, ok := <-a.setRulesChan: if !ok { fmt.Println(\"setRulesChan closed, exiting Run()\") return } a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) // 响应调用者 req.Response <- nil case <-a.stopChan: fmt.Println(\"Received stop signal, exiting Run()\") return } } } // SetRules 发送规则请求 func (a *Aggregator) SetRules(r []string) error { req := &SetRulesRequest{ NewRules: r, Response: make(chan error), } select { case a.setRulesChan <- req: return <-req.Response case <-a.stopChan: return fmt.Errorf(\"aggregator is shutting down\") } } // Stop 关闭 aggregator，确保 goroutine 优雅退出 func (a *Aggregator) Stop() { close(a.stopChan) // 通知退出 close(a.setRulesChan) // 防止阻塞在 <-setRulesChan <-a.doneChan // 等待后台处理完成 fmt.Println(\"Aggregator stopped gracefully\") } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), doneChan: make(chan struct{}), } go aggregator.Run() time.Sleep(500 * time.Millisecond) aggregator.SetRules([]string{\"a\", \"b\", \"c\"}) aggregator.SetRules([]string{\"x\", \"y\", \"z\"}) aggregator.Stop() }","s":"2.2. 使用判断channel 优化示例","u":"/docs/note/design/multi_goroutine","h":"#22-使用判断channel-优化示例","p":305},{"i":314,"t":"🧠 为啥用 context.Context？ 防止调用者被永久阻塞：例如 aggregator goroutine 迟迟不响应。 可设置 timeout 或 cancel，适合服务端编程模型。 可组合多种取消方式（定时取消 + 主动取消）。 ✅ 增强功能： SetRules 支持超时 / 取消（避免卡死等待响应）。 context.Context 控制响应等待过程。 依然保留 graceful shutdown 支持（Stop()）。 package main import ( \"context\" \"fmt\" \"time\" ) // 请求结构体，设置规则并通过 Response 返回结果 type SetRulesRequest struct { NewRules []string Response chan error } // 聚合器结构体 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} doneChan chan struct{} } // Run 启动 aggregator 的工作协程 func (a *Aggregator) Run() { defer close(a.doneChan) for { select { case req, ok := <-a.setRulesChan: if !ok { fmt.Println(\"setRulesChan closed, exiting Run()\") return } a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) req.Response <- nil case <-a.stopChan: fmt.Println(\"Received stop signal, exiting Run()\") return } } } // SetRulesCtx 支持 context 超时 / 取消控制 func (a *Aggregator) SetRulesCtx(ctx context.Context, rules []string) error { req := &SetRulesRequest{ NewRules: rules, Response: make(chan error, 1), // 非阻塞回写 } // 模拟耗时操作 time.Sleep(2 * time.Millisecond) select { case a.setRulesChan <- req: // 等待响应 or context 超时 select { case err := <-req.Response: return err case <-ctx.Done(): return fmt.Errorf(\"set rules timeout or cancelled: %w\", ctx.Err()) } case <-a.stopChan: return fmt.Errorf(\"aggregator shutting down\") case <-ctx.Done(): return fmt.Errorf(\"send timeout or cancelled: %w\", ctx.Err()) } } // Stop 优雅关闭 func (a *Aggregator) Stop() { close(a.stopChan) close(a.setRulesChan) <-a.doneChan fmt.Println(\"Aggregator stopped gracefully\") } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), doneChan: make(chan struct{}), } go aggregator.Run() // 模拟正常调用 ctx := context.Background() aggregator.SetRulesCtx(ctx, []string{\"a\", \"b\", \"c\"}) // 模拟带 timeout 的调用（1ms 会超时） ctxTimeout, cancel := context.WithTimeout(context.Background(), 1*time.Millisecond) defer cancel() err := aggregator.SetRulesCtx(ctxTimeout, []string{\"should\", \"fail\", \"fast\"}) if err != nil { fmt.Println(\"Timeout err:\", err) } // 正常调用 ctx2, cancel2 := context.WithTimeout(context.Background(), 2*time.Second) defer cancel2() aggregator.SetRulesCtx(ctx2, []string{\"x\", \"y\", \"z\"}) aggregator.Stop() }","s":"3. 支持 context.Context","u":"/docs/note/design/multi_goroutine","h":"#3-支持-contextcontext","p":305},{"i":316,"t":"CommandHandler 模式是命令模式（Command Pattern）的一种实现方式，常用于将请求（命令）与处理逻辑解耦，从而提高系统的灵活性和可扩展性。它通过将命令封装为对象，并由专门的 CommandHandler 负责执行这些命令，使得系统能够更轻松地管理命令的生命周期、支持撤销/重做操作、实现事务管理或异步处理。 核心概念 Command（命令） 定义一个接口或抽象类，声明执行命令的方法（如 execute()）。 具体命令类实现该接口，封装请求的具体逻辑。 CommandHandler（命令处理器） 负责接收命令对象并调用其 execute() 方法。 可以扩展为支持命令的调度、排队、事务管理或异步执行。 Invoker（调用者） 触发命令的对象，通常持有对 CommandHandler 的引用。 Receiver（接收者） 执行命令实际逻辑的对象，命令对象通过依赖注入或组合的方式与接收者交互。 🎯 目标： 支持不同类型请求的统一处理通道 类似“命令模式”：将操作封装为一个结构体 可扩展、可测试、context 支持、graceful shutdown ✅ 架构设计： +--------------------+ | CommandHandler | |--------------------| | chan Command |<----------- Send() | goroutine: dispatch| (通用异步接口) +--------------------+ | V +--------------------+ | Command (接口) |<-- 多种请求实现： | Execute(context) | - SetRulesCommand +--------------------+ - GetRulesCommand - AppendRulesCommand ✨ 通用实现（含 SetRules 和 GetRules）： package main import ( \"context\" \"errors\" \"fmt\" ) // Command 是所有请求的接口 type Command interface { Execute(ctx context.Context, h *Handler) Done() <-chan struct{} Err() error } // Handler 管理状态和调度命令执行 type Handler struct { rules []string cmdChan chan Command stop chan struct{} done chan struct{} } // 基础命令结构 type baseCommand struct { err error done chan struct{} } func (c *baseCommand) Done() <-chan struct{} { return c.done } func (c *baseCommand) Err() error { return c.err } // SetRulesCommand 设置规则 type SetRulesCommand struct { baseCommand NewRules []string } func (c *SetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) h.rules = c.NewRules fmt.Println(\"SetRulesCommand executed:\", h.rules) } // GetRulesCommand 获取规则 type GetRulesCommand struct { baseCommand Result chan []string } func (c *GetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) c.Result <- h.rules close(c.Result) } func NewHandler() *Handler { return &Handler{ rules: []string{}, cmdChan: make(chan Command), stop: make(chan struct{}), done: make(chan struct{}), } } // Run 启动处理循环 func (h *Handler) Run() { defer close(h.done) for { select { case cmd := <-h.cmdChan: ctx := context.Background() // 可支持 ctx 控制 cmd.Execute(ctx, h) case <-h.stop: return } } } // Send 提交命令（带超时支持） func (h *Handler) Send(ctx context.Context, cmd Command) error { select { case h.cmdChan <- cmd: select { case <-cmd.Done(): return cmd.Err() case <-ctx.Done(): return ctx.Err() } case <-h.stop: return errors.New(\"handler is stopped\") case <-ctx.Done(): return ctx.Err() } } // Stop 优雅关闭 func (h *Handler) Stop() { close(h.stop) <-h.done } func main() { handler := NewHandler() go handler.Run() ctx := context.Background() setCmd := &SetRulesCommand{ baseCommand: baseCommand{done: make(chan struct{})}, NewRules: []string{\"a\", \"b\", \"c\"}, } handler.Send(ctx, setCmd) // 获取规则 getCmd := &GetRulesCommand{ baseCommand: baseCommand{done: make(chan struct{})}, Result: make(chan []string, 1), } handler.Send(ctx, getCmd) fmt.Println(\"Current rules:\", <-getCmd.Result) handler.Stop() } ✅ 泛型式响应的 ResultCommand[T] 设计 实现目标： 命令支持携带强类型返回值（例如：[]string、int、bool 等）； 支持 context 控制； 解耦命令发送与执行，类型安全 的异步响应； 易扩展、结构清晰。 package main import ( \"context\" \"errors\" \"fmt\" \"time\" ) // 通用 Command 接口 type Command interface { Execute(context.Context, *Handler) Done() <-chan struct{} Err() error } // Handler：命令处理器 type Handler struct { rules []string cmdChan chan Command stop chan struct{} done chan struct{} } func NewHandler() *Handler { return &Handler{ rules: []string{}, cmdChan: make(chan Command), stop: make(chan struct{}), done: make(chan struct{}), } } func (h *Handler) Run() { defer close(h.done) for { select { case cmd := <-h.cmdChan: cmd.Execute(context.Background(), h) case <-h.stop: return } } } func (h *Handler) Stop() { close(h.stop) <-h.done } // Send 支持泛型命令发送 func (h *Handler) Send(ctx context.Context, cmd Command) error { select { case h.cmdChan <- cmd: select { case <-cmd.Done(): return cmd.Err() case <-ctx.Done(): return ctx.Err() } case <-ctx.Done(): return ctx.Err() case <-h.stop: return errors.New(\"handler stopped\") } } // 泛型命令 ResultCommand[T] // -------------------------------- type ResultCommand[T any] struct { result T err error done chan struct{} resultC chan T } func NewResultCommand[T any]() *ResultCommand[T] { return &ResultCommand[T]{ done: make(chan struct{}), resultC: make(chan T, 1), // 非阻塞写入 } } func (c *ResultCommand[T]) Done() <-chan struct{} { return c.done } func (c *ResultCommand[T]) Err() error { return c.err } // Wait 等待结果 func (c *ResultCommand[T]) Wait(ctx context.Context) (T, error) { select { case <-ctx.Done(): var zero T return zero, ctx.Err() case res := <-c.resultC: return res, c.err } } // -------------------------------- // 示例命令：GetRulesCommand 返回 []string // -------------------------------- type GetRulesCommand struct { *ResultCommand[[]string] } func NewGetRulesCommand() *GetRulesCommand { return &GetRulesCommand{ ResultCommand: NewResultCommand[[]string](), } } func (c *GetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) c.result = h.rules c.resultC <- h.rules } // -------------------------------- // 示例命令：SetRulesCommand // -------------------------------- type SetRulesCommand struct { newRules []string done chan struct{} err error } func NewSetRulesCommand(rules []string) *SetRulesCommand { return &SetRulesCommand{ newRules: rules, done: make(chan struct{}), } } func (c *SetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) h.rules = c.newRules fmt.Println(\"Rules updated:\", h.rules) } func (c *SetRulesCommand) Done() <-chan struct{} { return c.done } func (c *SetRulesCommand) Err() error { return c.err } // 🧪 Main 演示：SetRules 和 GetRules 泛型返回 func main() { h := NewHandler() go h.Run() ctx := context.Background() // Set rules setCmd := NewSetRulesCommand([]string{\"x\", \"y\", \"z\"}) _ = h.Send(ctx, setCmd) // Get rules getCmd := NewGetRulesCommand() _ = h.Send(ctx, getCmd) rules, err := getCmd.Wait(ctx) if err != nil { fmt.Println(\"GetRules error:\", err) } else { fmt.Println(\"Got rules:\", rules) } // 超时测试 timeoutCtx, cancel := context.WithTimeout(ctx, 1*time.Millisecond) defer cancel() getCmd2 := NewGetRulesCommand() _ = h.Send(timeoutCtx, getCmd2) rules2, err := getCmd2.Wait(timeoutCtx) fmt.Println(\"With timeout:\", rules2, err) h.Stop() } 输出示例： Rules updated: [x y z] Got rules: [x y z] With timeout: [] context deadline exceeded 📦 可扩展示例命令 GetStatsCommand struct{ ResultCommand[map[string]int] } FlushToDiskCommand struct{ ResultCommand[bool] } LoadConfigCommand struct{ ResultCommand[Config] } AppendRulesCommand struct{ Rules []string }","s":"4. CommandHandler 模式","u":"/docs/note/design/multi_goroutine","h":"#4-commandhandler-模式","p":305},{"i":319,"t":"依赖倒置原则(Dependency Inversion Principle, DIP) 是SOLID原则中的第五个原则，由Robert C. Martin提出。其核心思想是： 高层模块不应该依赖低层模块，两者都应该依赖抽象。抽象不应该依赖细节，细节应该依赖抽象。 在Go语言中，这一原则主要通过接口(interface)和依赖注入来实现。","s":"1. 概述","u":"/docs/note/design/oop_pinciple/dip","h":"#1-概述","p":317},{"i":321,"t":"依赖抽象：通过接口而非具体实现编程 控制反转(IoC)：将依赖的创建和使用分离 依赖注入(DI)：通过构造函数、方法或属性注入依赖","s":"2. 核心概念","u":"/docs/note/design/oop_pinciple/dip","h":"#2-核心概念","p":317},{"i":324,"t":"// 高层模块直接依赖低层模块 type MySQLDatabase struct {} func (m *MySQLDatabase) Save(data string) error { fmt.Println(\"保存数据到MySQL:\", data) return nil } type ReportGenerator struct { db *MySQLDatabase // 直接依赖具体实现 } func (r *ReportGenerator) Generate() error { return r.db.Save(\"报告数据\") } 问题：ReportGenerator直接依赖MySQLDatabase，难以切换其他数据库","s":"3.1 违反DIP的例子","u":"/docs/note/design/oop_pinciple/dip","h":"#31-违反dip的例子","p":317},{"i":326,"t":"// 定义抽象接口 type Database interface { Save(data string) error } // 低层模块实现接口 type MySQLDatabase struct {} func (m *MySQLDatabase) Save(data string) error { fmt.Println(\"保存数据到MySQL:\", data) return nil } type PostgreSQLDatabase struct {} func (p *PostgreSQLDatabase) Save(data string) error { fmt.Println(\"保存数据到PostgreSQL:\", data) return nil } // 高层模块依赖抽象 type ReportGenerator struct { db Database // 依赖接口而非具体实现 } func NewReportGenerator(db Database) *ReportGenerator { return &ReportGenerator{db: db} } func (r *ReportGenerator) Generate() error { return r.db.Save(\"报告数据\") }","s":"3.2 遵循DIP的改进方案","u":"/docs/note/design/oop_pinciple/dip","h":"#32-遵循dip的改进方案","p":317},{"i":329,"t":"构造结构体包含Logger对象 type Logger interface { Log(message string) } type ConsoleLogger struct{} func (c *ConsoleLogger) Log(message string) { fmt.Println(message) } type Service struct { logger Logger } func NewService(logger Logger) *Service { return &Service{logger: logger} } func (s *Service) DoWork() { s.logger.Log(\"工作开始\") // 业务逻辑... }","s":"4.1 构造函数注入","u":"/docs/note/design/oop_pinciple/dip","h":"#41-构造函数注入","p":317},{"i":331,"t":"type MailSender interface { Send(to, subject, body string) error } type UserService struct{} func (u *UserService) Register(email string, sender MailSender) error { // 注册逻辑... return sender.Send(email, \"欢迎\", \"感谢注册\") }","s":"4.2 方法注入","u":"/docs/note/design/oop_pinciple/dip","h":"#42-方法注入","p":317},{"i":333,"t":"// 在调用方定义接口（Go特色） package user type Database interface { Save(user User) error } type Service struct { db Database } // 实现可以在任何地方 type MySQLDB struct{} func (m *MySQLDB) Save(user User) error { ... }","s":"4.3 接口定义在调用方","u":"/docs/note/design/oop_pinciple/dip","h":"#43-接口定义在调用方","p":317},{"i":336,"t":"// storage.go type UserRepository interface { GetByID(id int) (*User, error) Save(user *User) error } // service.go type UserService struct { repo UserRepository } func NewUserService(repo UserRepository) *UserService { return &UserService{repo: repo} } // 可以轻松切换实现：MySQL, PostgreSQL, MongoDB等","s":"5.1 数据库访问","u":"/docs/note/design/oop_pinciple/dip","h":"#51-数据库访问","p":317},{"i":338,"t":"type Handler interface { Handle(w http.ResponseWriter, r *http.Request) error } type Router struct { handlers map[string]Handler } func (r *Router) Register(path string, handler Handler) { r.handlers[path] = handler } // 具体处理器实现 type UserHandler struct { service *UserService } func (h *UserHandler) Handle(w http.ResponseWriter, r *http.Request) error { // 处理请求... }","s":"5.2 HTTP服务","u":"/docs/note/design/oop_pinciple/dip","h":"#52-http服务","p":317},{"i":340,"t":"虽然Go不强制使用DI框架，但有一些流行选择： Google Wire：编译时依赖注入 // wire.go func InitializeUserService() *UserService { wire.Build(NewUserService, NewMySQLRepository) return &UserService{} } Dig：运行时依赖注入 container := dig.New() container.Provide(NewMySQLRepository) container.Provide(NewUserService) FX：基于Dig的框架 fx.New( fx.Provide(NewMySQLRepository), fx.Provide(NewUserService), fx.Invoke(func(s *UserService) { // 使用服务... }), )","s":"6. 依赖注入框架(可选)","u":"/docs/note/design/oop_pinciple/dip","h":"#6-依赖注入框架可选","p":317},{"i":342,"t":"紧耦合：组件间高度依赖，难以修改 难以测试：无法轻松替换真实依赖进行测试 扩展困难：添加新功能需要修改多处代码 复用性差：组件难以在不同上下文中使用","s":"7. 违反DIP的后果","u":"/docs/note/design/oop_pinciple/dip","h":"#7-违反dip的后果","p":317},{"i":344,"t":"DIP的核心是依赖抽象而非具体实现 在Go中主要通过接口和依赖注入实现 高层模块定义抽象接口，低层模块实现这些接口 使用构造函数注入或方法注入提供依赖 考虑使用DI框架管理复杂依赖关系 遵循DIP能提高代码的可测试性、可扩展性和可维护性 好的架构应该像插件系统 - 高层模块定义插槽，低层模块实现插件。","s":"8. 总结","u":"/docs/note/design/oop_pinciple/dip","h":"#8-总结","p":317},{"i":346,"t":"面向对象编程(OOP)有几个核心设计原则，这些原则有助于创建灵活、可维护和可扩展的软件系统。以下是主要的OOP设计原则：","s":"面向对象编程中的设计原则","u":"/docs/note/design/oop_pinciple/principle","h":"","p":345},{"i":348,"t":"单一职责原则(SRP - Single Responsibility Principle) 一个类应该只有一个引起它变化的原因 每个类只负责一项职责 开闭原则(OCP - Open/Closed Principle) 软件实体(类、模块、函数等)应该对扩展开放，对修改关闭 通过抽象和继承实现新功能，而不是修改现有代码 里氏替换原则(LSP - Liskov Substitution Principle) 子类型必须能够替换它们的基类型 派生类不应改变基类的行为，只能扩展它 接口隔离原则(ISP - Interface Segregation Principle) 客户端不应被迫依赖它们不使用的接口 将大接口拆分为更小、更具体的接口 依赖倒置原则(DIP - Dependency Inversion Principle) 高层模块不应依赖低层模块，两者都应依赖抽象 抽象不应依赖细节，细节应依赖抽象","s":"SOLID原则","u":"/docs/note/design/oop_pinciple/principle","h":"#solid原则","p":345},{"i":350,"t":"组合优于继承原则 优先使用对象组合而不是类继承来重用功能 提高灵活性，减少类层次结构的复杂性 迪米特法则(最少知识原则 - Law of Demeter) 一个对象应该对其他对象有最少的了解 只与直接的朋友通信，减少类之间的耦合 DRY原则(Don't Repeat Yourself) 避免重复代码 将重复逻辑提取到公共方法或类中 KISS原则(Keep It Simple, Stupid) 保持设计简单直接 避免不必要的复杂性 YAGNI原则(You Aren't Gonna Need It) 不要添加当前不需要的功能 避免过度设计","s":"其他重要原则","u":"/docs/note/design/oop_pinciple/principle","h":"#其他重要原则","p":345},{"i":352,"t":"整体而言，开发过程中多使用接口编程，方便程序扩展。接口定义应该保持职责单一和小。 使用接口编程，可以降低程序直接到耦合度。便于替换接口后端。","s":"个人总结","u":"/docs/note/design/oop_pinciple/principle","h":"#个人总结","p":345},{"i":355,"t":"里氏替换原则(Liskov Substitution Principle, LSP) 是SOLID原则中的第三个原则，由Barbara Liskov提出。其核心思想是： 如果S是T的子类型，那么程序中T类型的对象可以被替换为S类型的对象，而不会改变程序的任何期望属性。 在Go语言中，虽然没有传统意义上的继承，但通过**接口(interface)和嵌入(struct embedding)**同样需要遵循这一原则。","s":"1. 概述","u":"/docs/note/design/oop_pinciple/lsp","h":"#1-概述","p":353},{"i":357,"t":"可替换性：子类型必须能够完全替代父类型 行为一致性：子类型不应改变父类型的预期行为 契约遵守：子类型必须遵守父类型的隐式契约","s":"2. 核心概念","u":"/docs/note/design/oop_pinciple/lsp","h":"#2-核心概念","p":353},{"i":360,"t":"// 定义抽象接口 type Bird interface { Fly() string Sing() string } // 实现基类 type Sparrow struct{} func (s *Sparrow) Fly() string { return \"麻雀在飞翔\" } func (s *Sparrow) Sing() string { return \"麻雀在歌唱\" } // 实现子类 type Penguin struct{} func (p *Penguin) Fly() string { return \"企鹅不会飞\" // 违反LSP原则！ } func (p *Penguin) Sing() string { return \"企鹅在鸣叫\" } 问题分析：Penguin不能替换Bird，因为它改变了Fly()的预期行为","s":"3.1 通过接口实现LSP","u":"/docs/note/design/oop_pinciple/lsp","h":"#31-通过接口实现lsp","p":353},{"i":362,"t":"// 更精确的接口定义 type Flyer interface { Fly() string } type Singer interface { Sing() string } // 会飞的鸟 type FlyingBird struct{} func (f *FlyingBird) Fly() string { return \"鸟儿在飞翔\" } // 麻雀 type Sparrow struct { FlyingBird } func (s *Sparrow) Sing() string { return \"麻雀在歌唱\" } // 企鹅 type Penguin struct{} func (p *Penguin) Sing() string { return \"企鹅在鸣叫\" }","s":"3.2 符合LSP的改进方案","u":"/docs/note/design/oop_pinciple/lsp","h":"#32-符合lsp的改进方案","p":353},{"i":365,"t":"type PaymentProcessor interface { ProcessPayment(amount float64, currency string) error } // 基类实现 type BasicProcessor struct{} func (b *BasicProcessor) ProcessPayment(amount float64, currency string) error { if amount <= 0 { return errors.New(\"金额必须大于0\") } // 处理逻辑... } // 子类实现（违反LSP） type DiscountProcessor struct{} func (d *DiscountProcessor) ProcessPayment(amount float64, currency string) error { // 允许amount为0（削弱了前置条件） if amount < 0 { return errors.New(\"金额不能为负\") } // 处理逻辑... } 重构方案：保持前置条件不变或更强","s":"4.1 违反情况1：子类削弱前置条件","u":"/docs/note/design/oop_pinciple/lsp","h":"#41-违反情况1子类削弱前置条件","p":353},{"i":367,"t":"type DataStorage interface { Save(data []byte) (string, error) // 返回存储ID } // 基类实现 type FileStorage struct{} func (f *FileStorage) Save(data []byte) (string, error) { id := generateID() // 保存到文件... return id, nil // 可能返回空ID } // 子类实现（违反LSP） type GuaranteedStorage struct{} func (g *GuaranteedStorage) Save(data []byte) (string, error) { if len(data) == 0 { return \"\", errors.New(\"空数据不允许\") // 强化了后置条件 } id := generateID() // 保存到文件... return \"GID-\" + id, nil // 改变了ID格式 } 重构方案：保持后置条件不变或更弱","s":"4.2 违反情况2：子类强化后置条件","u":"/docs/note/design/oop_pinciple/lsp","h":"#42-违反情况2子类强化后置条件","p":353},{"i":370,"t":"golang 没有面相对象的继承用法 type Animal struct { name string } func (a *Animal) Eat() string { return a.name + \"在吃东西\" } // 正确方式：组合Animal type Dog struct { Animal } func (d *Dog) Bark() string { return \"汪汪汪\" } // 使用 dog := &Dog{Animal{name: \"阿黄\"}} fmt.Println(dog.Eat()) // 阿黄在吃东西 fmt.Println(dog.Bark()) // 汪汪汪","s":"5.1 使用组合代替继承","u":"/docs/note/design/oop_pinciple/lsp","h":"#51-使用组合代替继承","p":353},{"i":372,"t":"// 大接口 type BigInterface interface { Method1() Method2() Method3() } // 客户端只需要Method1 type Client struct { dep interface { Method1() } }","s":"5.2 接口隔离加强","u":"/docs/note/design/oop_pinciple/lsp","h":"#52-接口隔离加强","p":353},{"i":374,"t":"缓存系统：本地缓存、Redis缓存、Memcached缓存可互相替换 存储系统：文件存储、数据库存储、云存储可互相替换 支付网关：支付宝、微信支付、银联支付可互相替换 日志系统：文件日志、控制台日志、网络日志可互相替换","s":"6. LSP的实际应用场景","u":"/docs/note/design/oop_pinciple/lsp","h":"#6-lsp的实际应用场景","p":353},{"i":376,"t":"LSP的核心是可替换性和行为一致性 在Go中主要通过接口设计和组合来实现 子类型必须： 不加强前置条件 不减弱后置条件 保持不变量 不抛出新的异常 违反LSP会导致难以发现的运行时错误 \"is-a\"关系不仅看语法，更要看行为语义 好的子类型扩展应该像插件一样工作 - 可以无缝替换基类而不破坏现有功能。","s":"7. 总结","u":"/docs/note/design/oop_pinciple/lsp","h":"#7-总结","p":353},{"i":379,"t":"单一职责原则(Single Responsibility Principle, SRP) 是SOLID原则中的第一个原则，由Robert C. Martin提出。其核心思想是： 一个类或模块应该只有一个引起它变化的原因。换句话说，一个类或模块应该只负责一项职责。 在Go语言中，这一原则主要应用于struct和interface的设计。","s":"1. 概述","u":"/docs/note/design/oop_pinciple/srp","h":"#1-概述","p":377},{"i":382,"t":"提高可维护性：修改一个功能不会影响其他不相关的功能 降低复杂度：每个结构体/接口只做一件事，更易于理解 增强可测试性：单一职责的组件更容易测试 提高复用性：细粒度的组件可以在更多场景中被复用","s":"优点：","u":"/docs/note/design/oop_pinciple/srp","h":"#优点","p":377},{"i":384,"t":"代码难以理解和维护 修改一个功能可能意外破坏其他功能 测试困难 难以复用","s":"违反SRP的后果：","u":"/docs/note/design/oop_pinciple/srp","h":"#违反srp的后果","p":377},{"i":387,"t":"// 违反SRP的例子：UserManager承担了太多职责 type UserManager struct { db *sql.DB } func (um *UserManager) CreateUser(user User) error { // 创建用户逻辑 _, err := um.db.Exec(\"INSERT INTO users (...) VALUES (...)\") return err } func (um *UserManager) SendWelcomeEmail(user User) error { // 发送欢迎邮件逻辑 return sendEmail(user.Email, \"Welcome!\", \"Welcome to our platform!\") } func (um *UserManager) GenerateReport() ([]byte, error) { // 生成用户报告逻辑 rows, err := um.db.Query(\"SELECT * FROM users\") // ...处理rows生成报告 return reportData, nil } 问题分析： 用户管理 邮件发送 报告生成 这三个完全不相关的功能被耦合在同一个结构体中","s":"3.1 违反SRP的例子","u":"/docs/note/design/oop_pinciple/srp","h":"#31-违反srp的例子","p":377},{"i":389,"t":"// 用户存储职责 type UserRepository struct { db *sql.DB } func (ur *UserRepository) Create(user User) error { _, err := ur.db.Exec(\"INSERT INTO users (...) VALUES (...)\") return err } func (ur *UserRepository) GetAll() ([]User, error) { rows, err := ur.db.Query(\"SELECT * FROM users\") // ...处理rows返回用户列表 return users, nil } // 邮件服务职责 type EmailService struct { smtpServer string } func (es *EmailService) SendWelcomeEmail(user User) error { return sendEmail(user.Email, \"Welcome!\", \"Welcome to our platform!\") } // 报告生成职责 type ReportGenerator struct { userRepo *UserRepository } func (rg *ReportGenerator) GenerateUserReport() ([]byte, error) { users, err := rg.userRepo.GetAll() // ...基于用户数据生成报告 return reportData, nil } 改进点： 将原来的UserManager拆分为三个独立的组件 每个组件只负责一项明确的职责 组件之间通过依赖注入协作","s":"3.2 遵循SRP的改进版本","u":"/docs/note/design/oop_pinciple/srp","h":"#32-遵循srp的改进版本","p":377},{"i":392,"t":"// 小而专注的接口 type UserStorer interface { Create(user User) error GetByID(id int) (*User, error) } type EmailSender interface { Send(to, subject, body string) error }","s":"4.1 接口设计","u":"/docs/note/design/oop_pinciple/srp","h":"#41-接口设计","p":377},{"i":394,"t":"type UserService struct { repo UserRepository email EmailService report ReportGenerator } func (us *UserService) RegisterNewUser(user User) error { if err := us.repo.Create(user); err != nil { return err } return us.email.SendWelcomeEmail(user) }","s":"4.2 组合代替继承","u":"/docs/note/design/oop_pinciple/srp","h":"#42-组合代替继承","p":377},{"i":396,"t":"// 不好的例子：函数做太多事情 func processUserData(data []byte) (User, error) { // 1. 验证数据 // 2. 解析数据 // 3. 保存到数据库 // 4. 发送通知 } // 好的例子：拆分为多个单一职责的函数 func validateUserData(data []byte) error {} func parseUserData(data []byte) (User, error) {} func saveUser(user User) error {} func notifyUserCreated(user User) error {}","s":"4.3 函数职责单一","u":"/docs/note/design/oop_pinciple/srp","h":"#43-函数职责单一","p":377},{"i":399,"t":"当一个结构体/接口变得庞大时 当修改一个功能会影响不相关功能时 当难以给结构体起一个准确的名称时(如UserManagerAndReportGenerator)","s":"应该应用SRP的情况：","u":"/docs/note/design/oop_pinciple/srp","h":"#应该应用srp的情况","p":377},{"i":401,"t":"对于简单的小型项目 对于确实紧密相关的功能 当拆分会导致不必要的复杂性时","s":"不必过度应用：","u":"/docs/note/design/oop_pinciple/srp","h":"#不必过度应用","p":377},{"i":403,"t":"SRP是编写可维护、可扩展代码的基础 在Go中，通过小而专注的结构体和接口来实现SRP 组合优于继承，依赖注入是实现SRP的好帮手 合理应用SRP，但避免过度设计 记住：让一个结构体/接口只为一个改变的理由而存在。","s":"6. 总结","u":"/docs/note/design/oop_pinciple/srp","h":"#6-总结","p":377},{"i":406,"t":"开闭原则(Open/Closed Principle, OCP) 是SOLID原则中的第二个原则，由Bertrand Meyer提出。其核心思想是： 软件实体（类、模块、函数等）应该对扩展开放，对修改关闭。 在Go语言中，这一原则主要通过**接口(interface)和组合(composition)**来实现。","s":"1. 概述","u":"/docs/note/design/oop_pinciple/ocp","h":"#1-概述","p":404},{"i":408,"t":"对扩展开放：允许在不修改现有代码的情况下添加新功能 对修改关闭：现有代码应尽可能不被修改，以保持稳定性 抽象是关键：通过抽象建立灵活的基础结构","s":"2. 核心概念","u":"/docs/note/design/oop_pinciple/ocp","h":"#2-核心概念","p":404},{"i":411,"t":"// 支付方式接口 - 抽象层 type PaymentMethod interface { Pay(amount float64) error } // 信用卡支付实现 type CreditCardPayment struct{} func (c *CreditCardPayment) Pay(amount float64) error { fmt.Printf(\"支付 %.2f 元使用信用卡\\n\", amount) return nil } // 支付宝支付实现 type AlipayPayment struct{} func (a *AlipayPayment) Pay(amount float64) error { fmt.Printf(\"支付 %.2f 元使用支付宝\\n\", amount) return nil } // 支付处理器 - 对修改关闭 type PaymentProcessor struct { method PaymentMethod } func (p *PaymentProcessor) ProcessPayment(amount float64) error { return p.method.Pay(amount) }","s":"3.1 使用接口实现OCP","u":"/docs/note/design/oop_pinciple/ocp","h":"#31-使用接口实现ocp","p":404},{"i":413,"t":"// 新增微信支付 - 扩展而非修改 type WeChatPayment struct{} func (w *WeChatPayment) Pay(amount float64) error { fmt.Printf(\"支付 %.2f 元使用微信支付\\n\", amount) return nil } // 使用方式 func main() { processor := &PaymentProcessor{method: &WeChatPayment{}} processor.ProcessPayment(100.50) }","s":"3.2 添加新支付方式（扩展）","u":"/docs/note/design/oop_pinciple/ocp","h":"#32-添加新支付方式扩展","p":404},{"i":416,"t":"type PaymentType int const ( CreditCard PaymentType = iota Alipay ) // 直接依赖具体实现 func ProcessPayment(paymentType PaymentType, amount float64) error { switch paymentType { case CreditCard: fmt.Printf(\"支付 %.2f 元使用信用卡\\n\", amount) case Alipay: fmt.Printf(\"支付 %.2f 元使用支付宝\\n\", amount) default: return fmt.Errorf(\"不支持的支付方式\") } return nil } 问题：每次新增支付方式都需要修改ProcessPayment函数","s":"4.1 违反OCP的代码","u":"/docs/note/design/oop_pinciple/ocp","h":"#41-违反ocp的代码","p":404},{"i":418,"t":"// 使用接口抽象 type PaymentMethod interface { Pay(amount float64) error } // 注册支付方式的处理器 type PaymentHandler struct { methods map[string]PaymentMethod } func (h *PaymentHandler) Register(name string, method PaymentMethod) { h.methods[name] = method } func (h *PaymentHandler) Process(name string, amount float64) error { if method, ok := h.methods[name]; ok { return method.Pay(amount) } return fmt.Errorf(\"支付方式未注册\") }","s":"4.2 重构为符合OCP的代码","u":"/docs/note/design/oop_pinciple/ocp","h":"#42-重构为符合ocp的代码","p":404},{"i":421,"t":"type Server struct { host string port int timeout time.Duration } type Option func(*Server) func WithHost(host string) Option { return func(s *Server) { s.host = host } } func WithPort(port int) Option { return func(s *Server) { s.port = port } } func NewServer(opts ...Option) *Server { s := &Server{ host: \"localhost\", port: 8080, timeout: 30 * time.Second, } for _, opt := range opts { opt(s) } return s }","s":"5.1 函数选项模式(Functional Options)","u":"/docs/note/design/oop_pinciple/ocp","h":"#51-函数选项模式functional-options","p":404},{"i":423,"t":"type Handler func(http.ResponseWriter, *http.Request) func LoggingMiddleware(next Handler) Handler { return func(w http.ResponseWriter, r *http.Request) { log.Printf(\"请求开始: %s %s\", r.Method, r.URL.Path) next(w, r) log.Printf(\"请求结束: %s %s\", r.Method, r.URL.Path) } } func AuthMiddleware(next Handler) Handler { return func(w http.ResponseWriter, r *http.Request) { if r.Header.Get(\"Authorization\") == \"\" { http.Error(w, \"未授权\", http.StatusUnauthorized) return } next(w, r) } }","s":"5.2 中间件模式","u":"/docs/note/design/oop_pinciple/ocp","h":"#52-中间件模式","p":404},{"i":425,"t":"支付系统（如上面的示例） 日志系统（文件日志、控制台日志、网络日志等） 数据存储（MySQL、MongoDB、Redis等） 通知系统（邮件、短信、微信通知等） 中间件管道（Web中间件、RPC拦截器等）","s":"6. OCP的实际应用场景","u":"/docs/note/design/oop_pinciple/ocp","h":"#6-ocp的实际应用场景","p":404},{"i":427,"t":"控制台输出 文件输出 未来可以轻松添加网络日志","s":"7. OCP的日志系统","u":"/docs/note/design/oop_pinciple/ocp","h":"#7-ocp的日志系统","p":404},{"i":429,"t":"7.1.1 定义日志接口（抽象层）​ // Logger 日志接口 - 核心抽象 type Logger interface { Log(level string, message string) error Close() error } 7.1.2 实现具体日志输出​ 控制台日志输出 // ConsoleLogger 控制台日志实现 type ConsoleLogger struct { // 可以添加需要的字段，如是否彩色输出等 } func NewConsoleLogger() *ConsoleLogger { return &ConsoleLogger{} } func (c *ConsoleLogger) Log(level string, message string) error { _, err := fmt.Printf(\"[%s] %s\\n\", level, message) return err } func (c *ConsoleLogger) Close() error { // 控制台日志无需关闭资源 return nil } 文件日志输出 // FileLogger 文件日志实现 type FileLogger struct { file *os.File } func NewFileLogger(filename string) (*FileLogger, error) { file, err := os.OpenFile(filename, os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0644) if err != nil { return nil, err } return &FileLogger{file: file}, nil } func (f *FileLogger) Log(level string, message string) error { _, err := fmt.Fprintf(f.file, \"[%s] %s %s\\n\", time.Now().Format(\"2006-01-02 15:04:05\"), level, message) return err } func (f *FileLogger) Close() error { return f.file.Close() }","s":"7.1 基础设计","u":"/docs/note/design/oop_pinciple/ocp","h":"#71-基础设计","p":404},{"i":431,"t":"// CompositeLogger 组合多个日志输出 type CompositeLogger struct { loggers []Logger } func NewCompositeLogger(loggers ...Logger) *CompositeLogger { return &CompositeLogger{loggers: loggers} } func (c *CompositeLogger) Log(level string, message string) error { for _, logger := range c.loggers { if err := logger.Log(level, message); err != nil { return err } } return nil } func (c *CompositeLogger) Close() error { for _, logger := range c.loggers { if err := logger.Close(); err != nil { return err } } return nil }","s":"7.2 组合日志器（支持多种输出）","u":"/docs/note/design/oop_pinciple/ocp","h":"#72-组合日志器支持多种输出","p":404},{"i":433,"t":"// LoggerType 定义日志类型 type LoggerType string const ( LoggerConsole LoggerType = \"console\" LoggerFile LoggerType = \"file\" // 未来可以添加 LoggerNetwork ) // LoggerConfig 日志配置 type LoggerConfig struct { Type LoggerType FilePath string // 仅文件日志需要 } // NewLoggerFromConfig 根据配置创建日志器 func NewLoggerFromConfig(config LoggerConfig) (Logger, error) { switch config.Type { case LoggerConsole: return NewConsoleLogger(), nil case LoggerFile: return NewFileLogger(config.FilePath) default: return nil, fmt.Errorf(\"未知的日志类型: %s\", config.Type) } }","s":"7.3 使用工厂方法创建日志器","u":"/docs/note/design/oop_pinciple/ocp","h":"#73-使用工厂方法创建日志器","p":404},{"i":435,"t":"未来需要添加网络日志时，只需新增实现，无需修改现有代码： // NetworkLogger 网络日志实现 type NetworkLogger struct { endpoint string client *http.Client } func NewNetworkLogger(endpoint string) *NetworkLogger { return &NetworkLogger{ endpoint: endpoint, client: &http.Client{Timeout: 5 * time.Second}, } } func (n *NetworkLogger) Log(level string, message string) error { data := map[string]string{ \"level\": level, \"message\": message, \"time\": time.Now().Format(time.RFC3339), } jsonData, _ := json.Marshal(data) resp, err := n.client.Post(n.endpoint, \"application/json\", bytes.NewBuffer(jsonData)) if err != nil { return err } defer resp.Body.Close() if resp.StatusCode >= 400 { return fmt.Errorf(\"日志服务器返回错误状态码: %d\", resp.StatusCode) } return nil } func (n *NetworkLogger) Close() error { // 可以在这里关闭长连接等资源 return nil }","s":"7.4 添加网络日志输出（扩展示例）","u":"/docs/note/design/oop_pinciple/ocp","h":"#74-添加网络日志输出扩展示例","p":404},{"i":437,"t":"func main() { // 创建控制台日志器 consoleLogger := NewConsoleLogger() // 创建文件日志器 fileLogger, err := NewFileLogger(\"app.log\") if err != nil { panic(err) } // 创建组合日志器 compositeLogger := NewCompositeLogger(consoleLogger, fileLogger) // 使用日志 compositeLogger.Log(\"INFO\", \"应用程序启动\") compositeLogger.Log(\"WARN\", \"这是一个警告信息\") compositeLogger.Log(\"ERROR\", \"发生了一个错误\") // 关闭所有日志器 if err := compositeLogger.Close(); err != nil { fmt.Printf(\"关闭日志器时出错: %v\\n\", err) } // 未来添加网络日志 networkLogger := NewNetworkLogger(\"http://log-server.example.com/log\") extendedLogger := NewCompositeLogger(consoleLogger, fileLogger, networkLogger) extendedLogger.Log(\"INFO\", \"这条日志会输出到控制台、文件和网络\") extendedLogger.Close() }","s":"7.5 完整使用示例","u":"/docs/note/design/oop_pinciple/ocp","h":"#75-完整使用示例","p":404},{"i":439,"t":"OCP的核心是通过抽象来隔离变化 在Go中主要使用接口和组合来实现OCP 函数选项模式和中间件模式是实践OCP的优雅方式 平衡原则：不要过度设计，只为预期的变化做抽象 好的设计应该像插件系统一样工作 - 通过添加新代码而非修改现有代码来扩展功能。","s":"8. 总结","u":"/docs/note/design/oop_pinciple/ocp","h":"#8-总结","p":404},{"i":442,"t":"报错如下：​ gnutls_handshake() failed: The TLS connection was non-properly terminated. 解决方法：​ 关闭代理设置 unset all_proxy unset http_proxy unset https_proxy 排查方法：​ 报错是tls相关，猜测原因如下： 证书问题：过期。。。 协议或加密套不匹配 网络问题 证书问题排查： 通过浏览器查看证书信息，看证书是否受信任。 使用openssl s_client -connect <server>:<port> -showcerts 查看证书信息 设置调试日志排查 启用GnuTLS 的调试日志，查看详细的握手过程： export GNUTLS_DEBUG_LEVEL=3 # 使用`gnutls-cli -p <port> <server> -V` 通过关闭ssl认证测试是否可以下载 GIT_SSL_NO_VERIFY=1 git clone http:gitrepo 通过关闭所有代理，测试是否是代理导致的网络问题 显示关闭代理可以下载。也可以通过ssh来下载。ssh可以规避该问题。","s":"1. tls 连接错误","u":"/docs/note/git/git_err","h":"#1-tls-连接错误","p":440},{"i":445,"t":"工厂模式是一种创建型设计模式，目的是将对象的创建过程与使用过程分离，从而降低代码耦合、增强扩展性。 在 Go 中，虽然没有类和继承，但可以通过接口 + 工厂函数/结构来实现相同思想。","s":"1. 概述","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#1-概述","p":443},{"i":448,"t":"package main import \"fmt\" // 接口 type Shape interface { Draw() } // 实现类 type Circle struct{} func (c Circle) Draw() { fmt.Println(\"Drawing Circle\") } type Square struct{} func (s Square) Draw() { fmt.Println(\"Drawing Square\") } // 简单工厂 func ShapeFactory(shapeType string) Shape { switch shapeType { case \"circle\": return Circle{} case \"square\": return Square{} default: return nil } } func main() { s1 := ShapeFactory(\"circle\") s2 := ShapeFactory(\"square\") s1.Draw() s2.Draw() }","s":"2.1 示例：图形创建器","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#21-示例图形创建器","p":443},{"i":450,"t":"// 连接接口 type Conn interface { Send([]byte) error Receive() ([]byte, error) } // 简单工厂实现 func NewConn(network string, addr string) (Conn, error) { switch network { case \"tcp\": return &TCPConn{addr: addr}, nil case \"unix\": return &UnixConn{path: addr}, nil case \"http\": return &HTTPConn{url: addr}, nil default: return nil, fmt.Errorf(\"unsupported network\") } } // 使用示例 func main() { conn, _ := NewConn(\"http\", \"https://api.example.com\") conn.Send([]byte(\"GET /\")) }","s":"2.2 示例：网络连接","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#22-示例网络连接","p":443},{"i":452,"t":"✅ 简单直接，适合小规模使用 ❌ 增加新类型要修改工厂，违反开闭原则（OCP）","s":"2.3 优缺点","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#23-优缺点","p":443},{"i":455,"t":"package main import \"fmt\" // 接口 type DBConnector interface { Connect() } // 实现 type MySQLConnector struct{} func (m MySQLConnector) Connect() { fmt.Println(\"MySQL connected\") } type PostgresConnector struct{} func (p PostgresConnector) Connect() { fmt.Println(\"Postgres connected\") } // 工厂接口 type DBFactory interface { CreateConnector() DBConnector } // 实现工厂 type MySQLFactory struct{} func (f MySQLFactory) CreateConnector() DBConnector { return MySQLConnector{} } type PostgresFactory struct{} func (f PostgresFactory) CreateConnector() DBConnector { return PostgresConnector{} } func main() { var factory DBFactory factory = MySQLFactory{} conn := factory.CreateConnector() conn.Connect() factory = PostgresFactory{} conn = factory.CreateConnector() conn.Connect() }","s":"3.1 示例：数据库连接器","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#31-示例数据库连接器","p":443},{"i":457,"t":"// 日志接口 type Logger interface { Log(level string, msg string) } // 工厂接口 type LoggerFactory interface { Create() Logger } // 文件日志实现 type FileLogger struct { path string } func (f *FileLogger) Log(level, msg string) { // 实现文件写入 } type FileLoggerFactory struct { path string } func (f *FileLoggerFactory) Create() Logger { return &FileLogger{path: f.path} } // 控制台日志实现 type ConsoleLogger struct{} func (c *ConsoleLogger) Log(level, msg string) { fmt.Printf(\"[%s] %s\\n\", level, msg) } type ConsoleLoggerFactory struct{} func (f *ConsoleLoggerFactory) Create() Logger { return &ConsoleLogger{} } // 使用示例 func getLoggerFactory(env string) LoggerFactory { if env == \"production\" { return &FileLoggerFactory{path: \"/var/log/app.log\"} } return &ConsoleLoggerFactory{} } func main() { factory := getLoggerFactory(os.Getenv(\"APP_ENV\")) logger := factory.Create() logger.Log(\"INFO\", \"application started\") }","s":"3.2 示例：日志系统","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#32-示例日志系统","p":443},{"i":459,"t":"✅ 遵循开闭原则，新增类型无需改旧代码 ❌ 类（结构）增多，代码结构复杂","s":"3.3 优缺点","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#33-优缺点","p":443},{"i":462,"t":"package main import \"fmt\" // 产品接口族 type Button interface { Paint() } type Textbox interface { Draw() } // Windows 系列 type WindowsButton struct{} func (WindowsButton) Paint() { fmt.Println(\"Windows Button\") } type WindowsTextbox struct{} func (WindowsTextbox) Draw() { fmt.Println(\"Windows Textbox\") } // Mac 系列 type MacButton struct{} func (MacButton) Paint() { fmt.Println(\"Mac Button\") } type MacTextbox struct{} func (MacTextbox) Draw() { fmt.Println(\"Mac Textbox\") } // 抽象工厂接口 type GUIFactory interface { CreateButton() Button CreateTextbox() Textbox } // 具体工厂 type WindowsFactory struct{} func (WindowsFactory) CreateButton() Button { return WindowsButton{} } func (WindowsFactory) CreateTextbox() Textbox { return WindowsTextbox{} } type MacFactory struct{} func (MacFactory) CreateButton() Button { return MacButton{} } func (MacFactory) CreateTextbox() Textbox { return MacTextbox{} } // 使用 func main() { var factory GUIFactory factory = WindowsFactory{} factory.CreateButton().Paint() factory.CreateTextbox().Draw() factory = MacFactory{} factory.CreateButton().Paint() factory.CreateTextbox().Draw() }","s":"4.1 示例：UI 工厂（按钮 + 文本框）","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#41-示例ui-工厂按钮--文本框","p":443},{"i":464,"t":"✅ 保证一组产品的一致性（同属一个系统） ❌ 扩展产品族困难（需要修改接口）","s":"4.2 优缺点","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#42-优缺点","p":443},{"i":466,"t":"package main import \"fmt\" type Animal interface { Speak() } type Dog struct{} func (Dog) Speak() { fmt.Println(\"Woof!\") } type Cat struct{} func (Cat) Speak() { fmt.Println(\"Meow!\") } var animalRegistry = make(map[string]func() Animal) func RegisterAnimal(name string, factory func() Animal) { animalRegistry[name] = factory } func GetAnimal(name string) Animal { if f, ok := animalRegistry[name]; ok { return f() } return nil } func main() { RegisterAnimal(\"dog\", func() Animal { return Dog{} }) RegisterAnimal(\"cat\", func() Animal { return Cat{} }) GetAnimal(\"dog\").Speak() GetAnimal(\"cat\").Speak() }","s":"5. 函数式工厂（Functional Factory）","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#5-函数式工厂functional-factory","p":443},{"i":468,"t":"✅ 高度解耦，便于插件化开发 ✅ 新增产品无需改动旧工厂逻辑","s":"5.1 优点","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#51-优点","p":443},{"i":470,"t":"✅ 日志、数据库、配置适配器 ✅ 插件系统、驱动层抽象 ✅ UI 工具包的主题/皮肤切换","s":"6.  工厂模式应用场景","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#6--工厂模式应用场景","p":443},{"i":472,"t":"类型 是否可扩展 简洁性 应用范围 简单工厂 ❌ 不易扩展 ✅ 小项目 工厂方法 ✅ ✅ 通用 抽象工厂 ✅（产品） ❌ 系列产品 函数式注册 ✅ ✅ 插件式架构","s":"7. 小结对比","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#7-小结对比","p":443},{"i":475,"t":"bcrypt 是一种安全的密码哈希算法，适用于存储用户密码，防止明文泄露。Golang 提供 golang.org/x/crypto/bcrypt 包来简化 bcrypt 的使用。","s":"1. 概述","u":"/docs/note/golang/bcrypt","h":"#1-概述","p":473},{"i":477,"t":"bcrypt 属于 Go 的扩展库，需要手动安装： go get golang.org/x/crypto/bcrypt","s":"2. 安装","u":"/docs/note/golang/bcrypt","h":"#2-安装","p":473},{"i":480,"t":"package main import ( \"fmt\" \"golang.org/x/crypto/bcrypt\" ) func main() { password := \"my_secure_password\" // 生成 bcrypt 哈希 hashedPassword, err := bcrypt.GenerateFromPassword([]byte(password), bcrypt.DefaultCost) if err != nil { fmt.Println(\"Error generating hash:\", err) return } fmt.Println(\"Hashed Password:\", string(hashedPassword)) } 说明 bcrypt.GenerateFromPassword([]byte(password), bcrypt.DefaultCost) 生成哈希密码。 bcrypt.DefaultCost 是默认的计算成本（10），可以调整为 bcrypt.MinCost（较快）或 bcrypt.MaxCost（更安全但更慢）。 生成的哈希密码会自动包含 bcrypt 版本、成本因子和盐值。","s":"3.1 生成哈希密码","u":"/docs/note/golang/bcrypt","h":"#31-生成哈希密码","p":473},{"i":482,"t":"package main import ( \"fmt\" \"golang.org/x/crypto/bcrypt\" ) func main() { password := \"my_secure_password\" hashedPassword := \"$2a$10$P8HU5POQ9mC9dp5BqGkgYOdxz9b7zRbhq2bEn5B2c5rYrXsEoaQve\" // 之前存储的哈希 // 验证密码 err := bcrypt.CompareHashAndPassword([]byte(hashedPassword), []byte(password)) if err != nil { fmt.Println(\"Password incorrect\") } else { fmt.Println(\"Password correct\") } } 说明 bcrypt.CompareHashAndPassword(hashedPassword, password) 验证密码是否匹配哈希值。 如果密码匹配，返回 nil，否则返回 error。","s":"3.2 校验密码","u":"/docs/note/golang/bcrypt","h":"#32-校验密码","p":473},{"i":484,"t":"要修改密码，直接生成新哈希并存储： newPassword := \"new_secure_password\" newHashedPassword, _ := bcrypt.GenerateFromPassword([]byte(newPassword), bcrypt.DefaultCost) fmt.Println(\"Updated Hashed Password:\", string(newHashedPassword))","s":"3.3 修改密码","u":"/docs/note/golang/bcrypt","h":"#33-修改密码","p":473},{"i":486,"t":"如果哈希密码的成本过低，可以使用 bcrypt.Cost() 确定是否需要更新： cost, err := bcrypt.Cost([]byte(hashedPassword)) if err == nil && cost < bcrypt.DefaultCost { fmt.Println(\"Password hash is outdated, consider updating\") } 监测哈希成本并升级 如果 bcrypt.Cost 返回的值小于当前推荐值（如 12），则需要重新哈希密码： const recommendedCost = 12 func upgradePasswordHash(storedHash string, password string) string { cost, err := bcrypt.Cost([]byte(storedHash)) if err != nil { fmt.Println(\"Error getting cost:\", err) return storedHash } // 如果成本因子过低，则重新生成哈希 if cost < recommendedCost { newHash, err := bcrypt.GenerateFromPassword([]byte(password), recommendedCost) if err != nil { fmt.Println(\"Error upgrading hash:\", err) return storedHash } fmt.Println(\"Password hash upgraded.\") return string(newHash) } return storedHash }","s":"3.4 确定哈希是否需要更新","u":"/docs/note/golang/bcrypt","h":"#34-确定哈希是否需要更新","p":473},{"i":488,"t":"场景 说明 用户密码存储 安全存储用户密码，防止明文泄露 密码验证 在用户登录时进行哈希匹配 密码更新 检测哈希是否过时，并重新加密 防止暴力破解 bcrypt 计算开销高，能有效阻止暴力攻击","s":"4. 适用场景","u":"/docs/note/golang/bcrypt","h":"#4-适用场景","p":473},{"i":490,"t":"bcrypt.GenerateFromPassword() 生成哈希密码。 bcrypt.CompareHashAndPassword() 验证密码。 bcrypt.Cost() 检查哈希成本，确定是否需要升级。 Linux /etc/shadow 存储的是加密后的密码哈希，格式如下： $<加密算法>$<成本因子或迭代次数>$<salt+hash> 常见的加密算法： $1$ → MD5 $2a$ / $2b$ / $2y$ → bcrypt $5$ → SHA-256 $6$ → SHA-512 示例（bcrypt）： $2y$10$XGnVZqM9JpWcPKCqGRBBtuNA7E6x2ZK.7JsZh9y1X1Ij0wY2brJve $2y$ → 使用 bcrypt 加密 10 → 计算成本（cost factor） XGnVZqM9JpWcPKCqGRBBtu → 盐（salt） NA7E6x2ZK.7JsZh9y1X1Ij0wY2brJve → 哈希后的密码","s":"5. 总结","u":"/docs/note/golang/bcrypt","h":"#5-总结","p":473},{"i":493,"t":"os/exec 包提供了运行外部命令的方法，允许 Go 程序执行系统命令并与之交互。","s":"1. os/exec 包简介","u":"/docs/note/golang/cmd","h":"#1-osexec-包简介","p":491},{"i":495,"t":"exec.Command 用于创建一个代表外部命令的 Cmd 结构。","s":"2. exec.Command 基本用法","u":"/docs/note/golang/cmd","h":"#2-execcommand-基本用法","p":491},{"i":497,"t":"package main import ( \"fmt\" \"os/exec\" ) func main() { cmd := exec.Command(\"ls\", \"-l\") // 在 Linux/macOS 上列出当前目录内容 // 获取正确和错误输出 output, err := cmd.CombinedOutput() if err != nil { fmt.Println(\"Error:\", err) return } fmt.Println(string(output)) }","s":"2.1 获取stdout和stderr","u":"/docs/note/golang/cmd","h":"#21-获取stdout和stderr","p":491},{"i":499,"t":"package main import ( \"fmt\" \"os/exec\" ) func main() { cmd := exec.Command(\"ls\", \"-l\") output, err := cmd.Output() if err != nil { fmt.Println(\"Error:\", err) return } fmt.Println(\"Output:\", string(output)) }","s":"2.2 只获取stdout","u":"/docs/note/golang/cmd","h":"#22-只获取stdout","p":491},{"i":502,"t":"package main import ( \"bytes\" \"fmt\" \"os/exec\" ) func main() { cmd := exec.Command(\"echo\", \"Hello, World!\") var out bytes.Buffer cmd.Stdout = &out if err := cmd.Run(); err != nil { fmt.Println(\"Error:\", err) } fmt.Println(\"Output:\", out.String()) }","s":"3.1 使用cmd.Stdout","u":"/docs/note/golang/cmd","h":"#31-使用cmdstdout","p":491},{"i":504,"t":"StdoutPipe 允许我们以流式方式读取命令的标准输出。 package main import ( \"bufio\" \"fmt\" \"os/exec\" ) func main() { cmd := exec.Command(\"ping\", \"baidu.com\", \"-c\", \"30\") stdout, err := cmd.StdoutPipe() if err != nil { fmt.Println(\"Error creating StdoutPipe:\", err) return } if err := cmd.Start(); err != nil { fmt.Println(\"Error starting command:\", err) return } scanner := bufio.NewScanner(stdout) for scanner.Scan() { fmt.Println(\"Output line:\", scanner.Text()) } if err := cmd.Wait(); err != nil { fmt.Println(\"Error waiting for command:\", err) } }","s":"3.2 使用 StdoutPipe","u":"/docs/note/golang/cmd","h":"#32-使用-stdoutpipe","p":491},{"i":506,"t":"package main import ( \"bytes\" \"fmt\" \"os/exec\" ) func main() { cmd := exec.Command(\"cat\") var out bytes.Buffer cmd.Stdout = &out cmd.Stdin = bytes.NewBufferString(\"Hello from stdin!\") if err := cmd.Run(); err != nil { fmt.Println(\"Error:\", err) } fmt.Println(\"Output:\", out.String()) }","s":"3.3 传递输入 (stdin)","u":"/docs/note/golang/cmd","h":"#33-传递输入-stdin","p":491},{"i":508,"t":"cmd := exec.Command(\"printenv\") cmd.Env = append(cmd.Env, \"MY_VAR=HelloWorld\")","s":"3.4 设置环境变量","u":"/docs/note/golang/cmd","h":"#34-设置环境变量","p":491},{"i":510,"t":"package main import ( \"context\" \"fmt\" \"os/exec\" \"time\" ) func main() { ctx, cancel := context.WithTimeout(context.Background(), 2*time.Second) defer cancel() cmd := exec.CommandContext(ctx, \"sleep\", \"5\") if err := cmd.Run(); err != nil { fmt.Println(\"Command timed out or failed:\", err) } }","s":"3.5 运行带超时的命令","u":"/docs/note/golang/cmd","h":"#35-运行带超时的命令","p":491},{"i":512,"t":"package utils import ( \"os\" \"os/exec\" \"strings\" ) // Run executes a shell command without capturing its output. func Run(command string) error { cmd := prepareCommand(command) return cmd.Run() } // RunWithOutput executes a shell command and returns its combined stdout and stderr output. func RunWithOutput(command string) ([]byte, error) { cmd := prepareCommand(command) return cmd.CombinedOutput() } // RunWithExitCode executes a shell command and returns its output along with the exit code. func RunWithExitCode(command string) ([]byte, int, error) { cmd := prepareCommand(command) output, err := cmd.CombinedOutput() if err != nil { if exitErr, ok := err.(*exec.ExitError); ok { return output, exitErr.ExitCode(), err } return output, -1, err } return output, 0, nil } // prepareCommand initializes an *exec.Cmd with environment variables. func prepareCommand(command string) *exec.Cmd { args := strings.Fields(command) if len(args) == 0 { return exec.Command(\"\") // 处理空字符串情况，避免 panic } cmd := exec.Command(args[0], args[1:]...) cmd.Env = append(os.Environ(), \"LC_ALL=C\", \"LANG=C\") return cmd }","s":"3.6 增加错误判断","u":"/docs/note/golang/cmd","h":"#36-增加错误判断","p":491},{"i":514,"t":"package main // echo \"hello world!\" | grep World import ( \"bytes\" \"fmt\" \"os/exec\" ) func main() { cmd1 := exec.Command(\"echo\", \"Hello, World!\") cmd2 := exec.Command(\"grep\", \"World\") // 创建管道 pipe, err := cmd1.StdoutPipe() if err != nil { fmt.Println(\"Error creating pipe:\", err) return } cmd2.Stdin = pipe var out bytes.Buffer cmd2.Stdout = &out // 启动第一个命令 if err := cmd1.Start(); err != nil { fmt.Println(\"Error starting cmd1:\", err) return } // 启动第二个命令 if err := cmd2.Start(); err != nil { fmt.Println(\"Error starting cmd2:\", err) return } // 等待所有命令完成 if err := cmd1.Wait(); err != nil { fmt.Println(\"Error waiting for cmd1:\", err) return } if err := cmd2.Wait(); err != nil { fmt.Println(\"Error waiting for cmd2:\", err) return } fmt.Println(\"Filtered Output:\", out.String()) }","s":"3.7 使用管道连接多个命令","u":"/docs/note/golang/cmd","h":"#37-使用管道连接多个命令","p":491},{"i":516,"t":"exec.Command 用于创建并运行外部命令。 Stdout 和 Stderr 可以用于捕获命令输出。 StdoutPipe 适用于流式读取命令输出。 Output() 仅获取标准输出，而 CombinedOutput() 同时获取标准输出和标准错误。 Stdin 可以用于传递输入数据。 exec.CommandContext 可用于超时控制。 os/exec 包适用于需要在 Go 代码中执行外部命令的场景，例如自动化任务、系统管理和数据处理。","s":"4. 结论","u":"/docs/note/golang/cmd","h":"#4-结论","p":491},{"i":519,"t":"sync.Cond 是 Go 标准库中提供的一种条件变量，用于协调多个 goroutine 之间的同步。它允许一组 goroutine 在满足特定条件时被唤醒执行。","s":"1. 概述","u":"/docs/note/golang/concurrency/cond","h":"#1-概述","p":517},{"i":522,"t":"条件变量是一种同步原语，它： 允许 goroutine 在某个条件不满足时挂起（等待） 当条件可能满足时，通知等待的 goroutine 检查条件 连接池示例：我们创建一个指定大小的连接池，当到达池子大小时，无法再创建新的连接。此时所有的新建连接都应该是Cond.Wait()状态。当其中一个连接释放时，就可以广播Broadcast()通知等待的新建连接。","s":"2.1 条件变量","u":"/docs/note/golang/concurrency/cond","h":"#21-条件变量","p":517},{"i":524,"t":"type Cond struct { noCopy noCopy L Locker // 关联的互斥锁 notify notifyList }","s":"2.2 Cond 结构","u":"/docs/note/golang/concurrency/cond","h":"#22-cond-结构","p":517},{"i":527,"t":"func NewCond(l Locker) *Cond 示例： var mu sync.Mutex cond := sync.NewCond(&mu)","s":"3.1 创建 Cond","u":"/docs/note/golang/concurrency/cond","h":"#31-创建-cond","p":517},{"i":529,"t":"func (c *Cond) Wait() 必须先获取关联的锁 调用时会释放锁并挂起当前 goroutine 被唤醒时会重新获取锁","s":"3.2 Wait 方法","u":"/docs/note/golang/concurrency/cond","h":"#32-wait-方法","p":517},{"i":531,"t":"func (c *Cond) Signal() 唤醒一个等待的 goroutine","s":"3.3 Signal 方法","u":"/docs/note/golang/concurrency/cond","h":"#33-signal-方法","p":517},{"i":533,"t":"func (c *Cond) Broadcast() 唤醒所有等待的 goroutine","s":"3.4 Broadcast 方法","u":"/docs/note/golang/concurrency/cond","h":"#34-broadcast-方法","p":517},{"i":536,"t":"mu.Lock() // mu 是传递到 cond 的Lock。使用cond.L.Lock()也是相同的，mu传递进来就是cond.L // 检查条件 for !condition() { // for 防止虚假唤醒,或者多个协程被唤醒，只能执行一个 cond.Wait() } // 条件满足，执行操作 mu.Unlock()","s":"4.1 基本使用模式","u":"/docs/note/golang/concurrency/cond","h":"#41-基本使用模式","p":517},{"i":538,"t":"package main import ( \"fmt\" \"sync\" \"time\" ) var ( queue []int lock = sync.Mutex{} cond = sync.NewCond(&lock) ) func consumer(id int) { for { cond.L.Lock() for len(queue) == 0 { cond.Wait() } item := queue[0] queue = queue[1:] fmt.Printf(\"Consumer %d got item: %d\\n\", id, item) cond.L.Unlock() time.Sleep(500 * time.Millisecond) } } func producer() { for i := 0; i < 5; i++ { cond.L.Lock() queue = append(queue, i) fmt.Printf(\"Producer added item: %d\\n\", i) cond.Signal() // 或 cond.Broadcast() cond.L.Unlock() // 等待消费。这样确保生成一个后，消费完一个才继续执行下一个生成。 // 否则， time.Sleep(1 * time.Second) } } func main() { for i := 0; i < 2; i++ { go consumer(i) } producer() //time.Sleep(10 * time.Second) }","s":"4.2 生产者-消费者示例","u":"/docs/note/golang/concurrency/cond","h":"#42-生产者-消费者示例","p":517},{"i":540,"t":"必须持有锁时调用 Wait: Wait 会在调用时释放锁，但在返回前会重新获取锁 条件检查应使用循环: 被唤醒后应重新检查条件，因为可能有虚假唤醒 Signal 和 Broadcast 的区别: Signal 只唤醒一个等待的 goroutine Broadcast 唤醒所有等待的 goroutine 性能考虑: 在大多数情况下，channel 可能是更简单的选择 Cond 适用于复杂的条件等待场景","s":"5. 注意事项","u":"/docs/note/golang/concurrency/cond","h":"#5-注意事项","p":517},{"i":542,"t":"封装条件检查: func (s *Shared) waitForCondition() { s.mu.Lock() defer s.mu.Unlock() for !s.condition { s.cond.Wait() } } 使用 defer 释放锁: 确保在 Wait 返回后锁会被释放 避免过度使用: 在简单场景下优先考虑 channel","s":"6. 最佳实践","u":"/docs/note/golang/concurrency/cond","h":"#6-最佳实践","p":517},{"i":544,"t":"特性 sync.Cond channel 信号通知 ✅ ✅（缓冲通道或 select + close） 多等待者唤醒控制 ✅（Signal/Broadcast） ❌ 队列机制 ❌（需自己实现） ✅ 简单协程通信 ❌ ✅ 推荐优先使用 channel，除非必须使用 Cond 的信号语义。","s":"7. 与 channel 的对比","u":"/docs/note/golang/concurrency/cond","h":"#7-与-channel-的对比","p":517},{"i":546,"t":"sync.Cond 是 Go 中处理复杂同步问题的强大工具，但需要谨慎使用。理解其工作原理和正确使用模式对于编写正确的并发程序至关重要。","s":"8. 总结","u":"/docs/note/golang/concurrency/cond","h":"#8-总结","p":517},{"i":548,"t":"在 Golang 中，多协程 goroutine之间的交互主要通过以下几种方式实现：","s":"Golang 并发编程","u":"/docs/note/golang/concurrency/","h":"","p":547},{"i":550,"t":"Golang 提供了 channel 作为 goroutine 之间通信的主要方式。它是线程安全的，并且可以避免数据竞争。","s":"1. Channel（推荐方式）","u":"/docs/note/golang/concurrency/","h":"#1-channel推荐方式","p":547},{"i":552,"t":"避免竞争：channel 通过消息传递，而不是共享变量，减少数据竞争的可能性。 更符合 Go 语言哲学。 代码更简洁：避免手动加锁和解锁。","s":"1.1 Channel 的特点","u":"/docs/note/golang/concurrency/","h":"#11-channel-的特点","p":547},{"i":554,"t":"package main import ( \"fmt\" \"time\" ) func worker(ch chan string) { time.Sleep(2 * time.Second) ch <- \"任务完成\" } func main() { ch := make(chan string) // 创建一个无缓冲 channel go worker(ch) // 启动 goroutine fmt.Println(\"等待任务完成...\") msg := <-ch // 接收数据（阻塞） fmt.Println(\"收到消息:\", msg) } 解释： ch := make(chan string) 创建了一个无缓冲的 channel。 go worker(ch) 启动一个协程 worker，并通过 channel 发送消息。 msg := <-ch 在主线程阻塞等待，直到 worker 发送数据。","s":"1.2 基础示例：","u":"/docs/note/golang/concurrency/","h":"#12-基础示例","p":547},{"i":556,"t":"select 语句允许从多个 channel 读取数据，或者在通道无数据时执行默认操作。 package main import ( \"fmt\" \"time\" ) func main() { ch1 := make(chan string) ch2 := make(chan string) // 启动 goroutine 向 ch1 发送数据 go func() { time.Sleep(2 * time.Second) ch1 <- \"Message from ch1\" }() // 启动 goroutine 向 ch2 发送数据 go func() { time.Sleep(1 * time.Second) ch2 <- \"Message from ch2\" }() // `select` 监听多个 `channel` select { case msg1 := <-ch1: fmt.Println(\"Received:\", msg1) case msg2 := <-ch2: fmt.Println(\"Received:\", msg2) case <-time.After(3 * time.Second): fmt.Println(\"Timeout: No message received\") } } 代码解析 select 监听 ch1 和 ch2，哪个 channel 先有数据，就会执行对应的 case。 如果 3 秒内没有消息到达，则 case <-time.After(3 * time.Second) 触发，防止永久阻塞。 使用场景 监听多个 channel，避免阻塞。 超时控制：如 time.After 结合 select 限制请求时间。","s":"1.3 select 结合 channel 用法","u":"/docs/note/golang/concurrency/","h":"#13-select-结合-channel-用法","p":547},{"i":558,"t":"任务队列（生产者-消费者模型）。 多个 worker 处理任务，避免共享变量。 限制并发任务的数量。","s":"1.4 Channel 的适用场景","u":"/docs/note/golang/concurrency/","h":"#14-channel-的适用场景","p":547},{"i":560,"t":"如果多个 goroutine 需要同步执行完毕后再继续，sync.WaitGroup 是一种简单的方法。 示例： package main import ( \"fmt\" \"sync\" \"time\" ) func worker(id int, wg *sync.WaitGroup) { defer wg.Done() // 执行完成后减少计数 fmt.Printf(\"Worker %d 开始工作...\\n\", id) time.Sleep(2 * time.Second) fmt.Printf(\"Worker %d 完成工作!\\n\", id) } func main() { var wg sync.WaitGroup for i := 1; i <= 3; i++ { wg.Add(1) // 增加计数 go worker(i, &wg) // 启动 goroutine } wg.Wait() // 等待所有任务完成 fmt.Println(\"所有任务完成\") } 解释： wg.Add(1) 增加计数，每个 goroutine 开始时调用一次。 defer wg.Done() 在 goroutine 结束时减少计数。 wg.Wait() 阻塞主线程，直到所有 wg.Done() 调用完毕。","s":"2. sync.WaitGroup`","u":"/docs/note/golang/concurrency/","h":"#2-syncwaitgroup","p":547},{"i":562,"t":"当多个 goroutine 需要修改共享数据时，可以使用 sync.Mutex 防止竞态条件（race condition）。 示例： package main import ( \"fmt\" \"sync\" \"time\" ) var ( counter int mu sync.Mutex ) func worker(id int, wg *sync.WaitGroup) { defer wg.Done() mu.Lock() counter++ fmt.Printf(\"Worker %d 计数: %d\\n\", id, counter) mu.Unlock() } func main() { var wg sync.WaitGroup for i := 1; i <= 5; i++ { wg.Add(1) go worker(i, &wg) } wg.Wait() fmt.Println(\"最终计数:\", counter) } 解释： mu.Lock() 保护 counter，防止多个 goroutine 并发修改时发生竞态条件。 mu.Unlock() 释放锁，允许其他 goroutine 继续执行。","s":"3.  sync.Mutex","u":"/docs/note/golang/concurrency/","h":"#3--syncmutex","p":547},{"i":564,"t":"sync.Cond 适用于等待某个条件满足后再执行的场景，例如多个线程等待某个事件触发。 示例： package main import ( \"fmt\" \"sync\" \"time\" ) var ( ready = false cond = sync.NewCond(&sync.Mutex{}) ) func worker(id int) { cond.L.Lock() for !ready { cond.Wait() // 等待条件变为 true } fmt.Printf(\"Worker %d 开始工作!\\n\", id) cond.L.Unlock() } func main() { var wg sync.WaitGroup for i := 1; i <= 3; i++ { wg.Add(1) go func(id int) { defer wg.Done() worker(id) }(i) } time.Sleep(2 * time.Second) // 触发事件 cond.L.Lock() ready = true cond.L.Unlock() cond.Broadcast() // 通知所有等待的 goroutine wg.Wait() } 解释： cond.Wait() 等待条件 ready == true。 cond.Broadcast() 唤醒所有等待的 goroutine。","s":"4.  sync.Cond 进行事件通知","u":"/docs/note/golang/concurrency/","h":"#4--synccond-进行事件通知","p":547},{"i":566,"t":"sync.Once 确保某个操作在多个 goroutine 中只执行一次，例如初始化操作。 示例： package main import ( \"fmt\" \"sync\" ) var once sync.Once func initialize() { fmt.Println(\"初始化操作\") } func worker(wg *sync.WaitGroup) { defer wg.Done() once.Do(initialize) fmt.Println(\"Worker 执行\") } func main() { var wg sync.WaitGroup for i := 0; i < 5; i++ { wg.Add(1) go worker(&wg) } wg.Wait() } 解释： once.Do(initialize) 确保 initialize() 只执行一次，无论多少个 goroutine 访问它。","s":"5.  sync.Once","u":"/docs/note/golang/concurrency/","h":"#5--synconce","p":547},{"i":568,"t":"对于简单的数值操作，可以使用 sync/atomic 提供的原子操作代替 sync.Mutex，提升性能。","s":"6.  atomic","u":"/docs/note/golang/concurrency/","h":"#6--atomic","p":547},{"i":570,"t":"package main import ( \"fmt\" \"sync\" \"sync/atomic\" ) var counter int64 func worker(wg *sync.WaitGroup) { defer wg.Done() atomic.AddInt64(&counter, 1) // 原子递增 } func main() { var wg sync.WaitGroup for i := 0; i < 10; i++ { wg.Add(1) go worker(&wg) } wg.Wait() fmt.Println(\"最终计数:\", counter) } 解释： atomic.AddInt64(&counter, 1) 确保 counter 在多个 goroutine 中安全递增，无需使用 sync.Mutex。","s":"示例：","u":"/docs/note/golang/concurrency/","h":"#示例","p":547},{"i":572,"t":"context.Context 适用于控制多个 goroutine 的生命周期，例如超时、取消任务等。","s":"7.  context","u":"/docs/note/golang/concurrency/","h":"#7--context","p":547},{"i":574,"t":"package main import ( \"context\" \"fmt\" \"time\" ) func worker(ctx context.Context) { for { select { case <-ctx.Done(): fmt.Println(\"Worker 任务超时，退出\") return default: fmt.Println(\"Worker 正在工作...\") time.Sleep(500 * time.Millisecond) } } } func main() { ctx, cancel := context.WithTimeout(context.Background(), 2*time.Second) defer cancel() go worker(ctx) time.Sleep(3 * time.Second) // 主线程等待 fmt.Println(\"主线程退出\") } 解释： context.WithTimeout 2 秒后会自动取消 ctx，通知 worker 退出。","s":"示例：","u":"/docs/note/golang/concurrency/","h":"#示例-1","p":547},{"i":576,"t":"方式 适用场景 Channel 安全的数据传递，避免竞态条件 WaitGroup 等待多个 goroutine 结束 Mutex 保护共享资源，防止竞态 Cond 事件触发，等待通知 Once 只执行一次（单例模式） Atomic 高效数值计算，无锁并发 Context 超时、取消任务 如果主要是 goroutine 之间的通信，使用 channel（更安全，避免锁竞争）。 如果是多个 goroutine 操作同一个变量，使用 mutex（更高效）。 如果要限制并发数，二者可以结合使用，如 channel 控制并发，mutex 保护数据。 select 适用于监听多个 channel 和超时控制。 推荐做法： 优先考虑 channel，符合 Go 语言风格。 如果性能瓶颈明显（高频数据访问），使用 sync.Mutex 进行优化。 如果有并发控制需求，可以结合 channel 和 mutex。 select 适用于监听多个 channel 和超时控制。","s":"总结","u":"/docs/note/golang/concurrency/","h":"#总结","p":547},{"i":578,"t":"runtime/debug 是 Go 标准库中用于调试和运行时信息收集的重要包，提供了多种实用功能。下面我将详细介绍其主要功能和用法：","s":"Golang runtime/debug 用法","u":"/docs/note/golang/debug","h":"","p":577},{"i":580,"t":"强制垃圾回收 debug.GC() // 显式触发一次垃圾回收 强制将未使用的内存返回给操作系统。 注意：Go 会自动做内存管理，这个函数一般用于调试或特殊情况。 debug.FreeOSMemory() // 将未使用的内存返回给操作系统 设置垃圾回收器的触发频率。 默认值是 100，表示内存分配增长 100% 就触发 GC。 设置为负数会关闭 GC。 // 设置GC目标百分比（默认100） // 值越大GC越不频繁，但内存使用更多 debug.SetGCPercent(200) // Go 1.19+ 设置内存软限制 debug.SetMemoryLimit(512 * 1024 * 1024) // 512MB 读取GC统计信息 var stats debug.GCStats debug.ReadGCStats(&stats) fmt.Printf(\"上次GC时间: %v\\n\", stats.LastGC) fmt.Printf(\"GC总次数: %d\\n\", stats.NumGC) fmt.Printf(\"GC总暂停时间: %v\\n\", stats.PauseTotal) fmt.Printf(\"最近GC暂停时间: %v\\n\", stats.Pause) 生成堆转储 func writeHeapDump(filename string) error { f, err := os.Create(filename) if err != nil { return err } defer f.Close() return debug.WriteHeapDump(f.Fd()) // 需要文件描述符 }","s":"1. 内存和垃圾回收相关操作","u":"/docs/note/golang/debug","h":"#1-内存和垃圾回收相关操作","p":577},{"i":582,"t":"获取当前调用栈 stack := debug.Stack() // 返回[]byte fmt.Printf(\"%s\\n\", stack) 打印当前的堆栈信息（stack trace），常用于调试 panic 或 goroutine 调度问题。 // 打印对应goroutine 堆栈 debug.PrintStack() 设置最大堆栈深度 设置每个 goroutine 的最大堆栈大小。一般调试 goroutine stack 溢出问题才用。 debug.SetMaxStack(64 * 1024 * 1024) // 64MB 示例： package main import ( \"fmt\" \"runtime/debug\" \"time\" ) func main() { fmt.Println(\"Start\") go func() { defer func() { fmt.Println(\"Recovered\") }() fmt.Println(\"Hello World\") debug.PrintStack() }() time.Sleep(1 * time.Second) debug.PrintStack() fmt.Println(\"End\") } 设置panic堆栈跟踪级别 // 可选值: \"none\", \"single\", \"all\", \"system\", \"crash\" debug.SetTraceback(\"all\") // 显示所有goroutine的堆栈","s":"2. 堆栈信息操作","u":"/docs/note/golang/debug","h":"#2-堆栈信息操作","p":577},{"i":584,"t":"读取模块构建信息 package main import ( \"fmt\" \"github.com/sirupsen/logrus\" \"runtime/debug\" ) func main() { logrus.Info(\"Hello World\") bi, ok := debug.ReadBuildInfo() if ok { fmt.Printf(\"Go Version: %s\\n\", bi.GoVersion) fmt.Printf(\"Main Module: %s@%s\\n\", bi.Main.Path, bi.Main.Version) for _, dep := range bi.Deps { fmt.Printf(\"Dependency: %s@%s\\n\", dep.Path, dep.Version) } for _, set := range bi.Settings { fmt.Printf(\"Settings: %s@%s\\n\", set.Key, set.Value) } } } 打印如下： INFO[0000] Hello World Go Version: go1.20.4 Main Module: demo@(devel) Dependency: github.com/sirupsen/logrus@v1.9.3 Dependency: golang.org/x/sys@v0.29.0 Settings: -buildmode@exe Settings: -compiler@gc Settings: CGO_ENABLED@1 Settings: CGO_CFLAGS@ Settings: CGO_CPPFLAGS@ Settings: CGO_CXXFLAGS@ Settings: CGO_LDFLAGS@ Settings: GOARCH@amd64 Settings: GOOS@linux Settings: GOAMD64@v1 Settings: vcs@git Settings: vcs.revision@47a4d73f30696cd2bf2ec09a16f6d3ba7ae563e6 Settings: vcs.time@2025-04-07T09:35:26Z Settings: vcs.modified@false $ git log commit 47a4d73f30696cd2bf2ec09a16f6d3ba7ae563e6 (HEAD -> master) Author: Your Name <you@example.com> Date: Mon Apr 7 17:35:26 2025 +0800 1","s":"3. 构建信息读取","u":"/docs/note/golang/debug","h":"#3-构建信息读取","p":577},{"i":587,"t":"func monitorMemory(threshold uint64) { for { var m runtime.MemStats runtime.ReadMemStats(&m) if m.Alloc > threshold { debug.FreeOSMemory() debug.GC() f, _ := os.Create(\"heapdump.out\") debug.WriteHeapDump(f.Fd()) f.Close() return } time.Sleep(5 * time.Second) } }","s":"4.1. 内存监控工具","u":"/docs/note/golang/debug","h":"#41-内存监控工具","p":577},{"i":589,"t":"func setupPanicRecovery() { defer func() { if r := recover(); r != nil { fmt.Fprintf(os.Stderr, \"Panic: %v\\n\", r) debug.PrintStack() // 保存堆栈到文件 stack := debug.Stack() os.WriteFile(\"panic.log\", stack, 0644) os.Exit(1) } }() // 应用主逻辑 runApplication() }","s":"4.2. 增强的panic处理","u":"/docs/note/golang/debug","h":"#42-增强的panic处理","p":577},{"i":591,"t":"func showVersion() { bi, ok := debug.ReadBuildInfo() if !ok { fmt.Println(\"无法获取构建信息\") return } fmt.Printf(\"应用: %s\\n版本: %s\\nGo版本: %s\\n\", bi.Main.Path, bi.Main.Version, bi.GoVersion) fmt.Println(\"\\n依赖项:\") for _, dep := range bi.Deps { fmt.Printf(\"- %s@%s\\n\", dep.Path, dep.Version) } }","s":"4.3. 构建信息展示","u":"/docs/note/golang/debug","h":"#43-构建信息展示","p":577},{"i":593,"t":"WriteHeapDump 功能在不同平台上表现可能不同 设置过高的 SetGCPercent 可能导致内存使用过多 SetMemoryLimit 仅在 Go 1.19+ 可用 生产环境中谨慎使用 FreeOSMemory，可能导致性能下降 runtime/debug 包是 Go 开发者工具箱中的重要组成部分，特别适用于： 内存泄漏调试 性能问题诊断 构建版本管理 生产环境问题排查 自定义错误处理机制 通过合理使用这些功能，可以显著提升 Go 应用程序的可调试性和可靠性。","s":"5. 注意事项","u":"/docs/note/golang/debug","h":"#5-注意事项","p":577},{"i":596,"t":"Token Bucket（令牌桶）是一种流量控制算法，常用于： 限速（Rate Limiting）； 拒绝服务保护（DoS 防御）； API 调用频控； 网络带宽整形（如 Linux 中的 tc）。 本质思想：按照一定速率产生“令牌”，只有拿到令牌的请求才能继续处理。","s":"1. 概述","u":"/docs/note/golang/design/algorithm/token_bucket","h":"#1-概述","p":594},{"i":598,"t":"组成部分 组成 描述 令牌桶 一个容量为 capacity 的容器，存放“令牌” 令牌生成速率 每 interval 时间放入一个令牌 请求获取令牌 请求到来时尝试从桶中获取一个令牌 工作流程 令牌桶按照固定速率产生令牌（如每秒 1 个）。 桶最多只能容纳 N 个令牌（即桶容量）。 当请求到来时： 如果桶里有令牌：消耗一个令牌，允许处理； 如果桶是空的：拒绝/排队/等待（视策略而定）。","s":"2. 基本原理","u":"/docs/note/golang/design/algorithm/token_bucket","h":"#2-基本原理","p":594},{"i":600,"t":"项目 Token Bucket Leaky Bucket 控制策略 控制突发（允许瞬时高峰） 平滑处理 是否支持突发流量 ✅ 支持 ❌ 不支持 应用场景 限制速率，但允许瞬时爆发 网络整形，严格速率控制","s":"3. 与漏桶（Leaky Bucket）区别","u":"/docs/note/golang/design/algorithm/token_bucket","h":"#3-与漏桶leaky-bucket区别","p":594},{"i":602,"t":"下面是一个简化的 Token Bucket 示例： type TokenBucket struct { tokens chan struct{} } func NewTokenBucket(rate time.Duration, capacity int) *TokenBucket { tb := &TokenBucket{ tokens: make(chan struct{}, capacity), } // 初始化填满桶 for i := 0; i < capacity; i++ { tb.tokens <- struct{}{} } // 定时产生令牌 go func() { ticker := time.NewTicker(rate) defer ticker.Stop() for range ticker.C { select { case tb.tokens <- struct{}{}: default: // 桶满了就丢弃新令牌 } } }() return tb } func (tb *TokenBucket) Allow() bool { select { case <-tb.tokens: return true default: return false } }","s":"4. 代码实现示例（Golang）","u":"/docs/note/golang/design/algorithm/token_bucket","h":"#4-代码实现示例golang","p":594},{"i":604,"t":"防止用户频繁访问 API，限制为“每秒 5 次”： bucket := NewTokenBucket(200*time.Millisecond, 5) if !bucket.Allow() { http.Error(w, \"Rate limit exceeded\", http.StatusTooManyRequests) return }","s":"5. 应用场景","u":"/docs/note/golang/design/algorithm/token_bucket","h":"#5-应用场景","p":594},{"i":606,"t":"✅ 优点 控制速率，避免系统过载； 支持突发流量； 实现简单，高效。 ❌ 缺点 对于极端高并发（几万 QPS），可能需使用更高性能结构（如令牌时间戳队列）； 实时性不高时，限流精度受 ticker 精度影响。","s":"6. 优缺点","u":"/docs/note/golang/design/algorithm/token_bucket","h":"#6-优缺点","p":594},{"i":608,"t":"为实现 带优先级的 Token Bucket（令牌桶）算法，我们可以设计多个“桶”，每个桶代表一个优先级队列，然后用调度器（Scheduler）进行按比例或者优先权调度。","s":"7. 带优先级的Token Bucket算法","u":"/docs/note/golang/design/algorithm/token_bucket","h":"#7-带优先级的token-bucket算法","p":594},{"i":610,"t":"高优先级桶：高速率、先获取； 低优先级桶：低速率、调度器最后处理； 桶之间独立生成令牌。","s":"7.1每个优先级一个桶","u":"/docs/note/golang/design/algorithm/token_bucket","h":"#71每个优先级一个桶","p":594},{"i":612,"t":"┌────────┐ │ Client │ └───┬────┘ │ 请求 ┌───────▼────────┐ │ PriorityLimiter │ └───────┬────────┘ ▼ ┌────────┬─────────┬────────┐ │ High │ Mid │ Low │ │ Bucket │ Bucket │ Bucket │ └────────┴─────────┴────────┘","s":"7.2 调度器获取令牌时按优先级顺序尝试","u":"/docs/note/golang/design/algorithm/token_bucket","h":"#72-调度器获取令牌时按优先级顺序尝试","p":594},{"i":614,"t":"高优先级请求尽可能快获得处理； 所有请求都有公平竞争机会（防止低优饥饿）； 支持动态调整优先级。","s":"7.3  目标特性","u":"/docs/note/golang/design/algorithm/token_bucket","h":"#73--目标特性","p":594},{"i":616,"t":"基础桶，和之前代码相同 type TokenBucket struct { tokens chan struct{} } func NewTokenBucket(rate time.Duration, capacity int) *TokenBucket { tb := &TokenBucket{ tokens: make(chan struct{}, capacity), } // 填满令牌桶 for i := 0; i < capacity; i++ { tb.tokens <- struct{}{} } // 定期生成令牌 go func() { ticker := time.NewTicker(rate) defer ticker.Stop() for range ticker.C { select { case tb.tokens <- struct{}{}: default: } } }() return tb } func (tb *TokenBucket) TryTake() bool { select { case <-tb.tokens: return true default: return false } } 带调度器的多级优先限流器 type Priority int const ( High Priority = iota Medium Low ) func (p Priority) String() string { switch p { case High: return \"HIGH\" case Medium: return \"MEDIUM\" case Low: return \"LOW\" default: return \"UNKNOWN\" } } type PriorityLimiter struct { buckets map[Priority]*TokenBucket order []Priority // 调度顺序：High → Medium → Low } func NewPriorityLimiter() *PriorityLimiter { return &PriorityLimiter{ buckets: map[Priority]*TokenBucket{ High: NewTokenBucket(50*time.Millisecond, 10), Medium: NewTokenBucket(200*time.Millisecond, 5), Low: NewTokenBucket(500*time.Millisecond, 2), }, order: []Priority{High, Medium, Low}, } } // TryAllow 会按优先级顺序尝试令牌 func (pl *PriorityLimiter) TryAllow() bool { for _, p := range pl.order { if pl.buckets[p].TryTake() { return true } } return false } // 或者：TryAllowWithPriority 指定优先级 func (pl *PriorityLimiter) TryAllowWithPriority(p Priority) bool { return pl.buckets[p].TryTake() } 使用示例 limiter := NewPriorityLimiter() // 高优请求 if !limiter.TryAllowWithPriority(High) { fmt.Println(\"High priority request was throttled.\") } // 低优请求：可能被拒 if !limiter.TryAllowWithPriority(Low) { fmt.Println(\"Low priority request throttled.\") }","s":"7.4 示例","u":"/docs/note/golang/design/algorithm/token_bucket","h":"#74-示例","p":594},{"i":618,"t":"microkernel（微内核）架构的核心思想是 核心功能最小化，其他功能以插件或服务的形式运行在用户态，通过 进程间通信（IPC） 与内核交互。","s":"microkernel 设计1","u":"/docs/note/golang/design/microkernel/microkernel1","h":"","p":617},{"i":621,"t":"内核小、职责单一 内核只负责最基本的功能，比如线程调度、地址空间管理、IPC。 模块化、可扩展 文件系统、驱动程序等作为用户空间服务，易于替换和调试。 可靠性高 一个用户态服务崩溃不会影响整个系统。 通信开销大 模块间依赖消息传递，相比传统内核切换用户态和内核态的代价更大。","s":"1.1 特点","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#11-特点","p":617},{"i":623,"t":"Kernel（内核） 负责 服务注册、消息路由、生命周期管理。 Services（服务） 独立模块（如 LogService、StorageService），运行在用户态。 通信机制（IPC） 使用 Go 的 Channel 或 gRPC 进行通信。","s":"1.2 核心组件","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#12-核心组件","p":617},{"i":626,"t":"package kernel import ( \"context\" \"errors\" \"fmt\" \"sync\" ) // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string } // Kernel 微内核核心 type Kernel struct { // 注册的服务通道 services map[string]Service // 保护 services 的并发访问 mutex sync.RWMutex // 全局事件总线 eventCh chan Event } // Event 定义内核事件（用于服务间通信） type Event struct { From string Type string Content string } // NewKernel 创建微内核实例 func NewKernel() *Kernel { return &Kernel{ services: make(map[string]Service), eventCh: make(chan Event, 100), } } // RegisterService 注册服务 func (k *Kernel) RegisterService(s Service) error { k.mutex.Lock() defer k.mutex.Unlock() name := s.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = s return nil } // StartAll 启动所有服务 func (k *Kernel) StartAll() error { k.mutex.RLock() defer k.mutex.RUnlock() for _, s := range k.services { if err := s.Start(); err != nil { return err } } return nil } // StopAll 停止所有服务 func (k *Kernel) StopAll() error { k.mutex.RLock() defer k.mutex.RUnlock() var err error for _, s := range k.services { if e := s.Stop(); e != nil { err = e } } return err } // SendEvent 发送事件（模拟 IPC） func (k *Kernel) SendEvent(evt Event) { k.eventCh <- evt } // EventLoop 事件循环（处理服务间通信） func (k *Kernel) EventLoop(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: %s - %s\\n\", evt.From, evt.Type, evt.Content) } } }","s":"2.1 定义 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#21-定义-kernel核心","p":617},{"i":628,"t":"package service import ( \"fmt\" \"microkernel/kernel\" ) // LogService 日志服务 type LogService struct { name string kernel *kernel.Kernel logCh chan string stopCh chan struct{} } func NewLogService(name string, kernel *kernel.Kernel) *LogService { return &LogService{ name: name, kernel: kernel, logCh: make(chan string, 100), stopCh: make(chan struct{}), } } func (l *LogService) Start() error { fmt.Printf(\"[%s] starting...\\n\", l.name) go l.run() return nil } func (l *LogService) Stop() error { fmt.Printf(\"[%s] stopping...\\n\", l.name) close(l.stopCh) return nil } func (l *LogService) Name() string { return l.name } func (l *LogService) run() { for { select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 l.kernel.SendEvent(kernel.Event{ From: l.name, Type: \"log\", Content: log, }) } } } func (l *LogService) Log(msg string) { l.logCh <- msg }","s":"2.2 实现示例服务（LogService）","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#22-实现示例服务logservice","p":617},{"i":630,"t":"package main import ( \"context\" \"microkernel/kernel\" \"microkernel/service\" \"time\" ) func main() { // 1. 创建微内核 kernel := kernel.NewKernel() // 2. 注册服务 logSvc := service.NewLogService(\"logger\", kernel) if err := kernel.RegisterService(logSvc); err != nil { panic(err) } // 3. 启动所有服务 if err := kernel.StartAll(); err != nil { panic(err) } // 4. 启动事件循环 ctx, cancel := context.WithCancel(context.Background()) defer cancel() go kernel.EventLoop(ctx) // 5. 测试日志服务 logSvc.Log(\"Hello, Microkernel!\") time.Sleep(1 * time.Second) // 6. 停止所有服务 if err := kernel.StopAll(); err != nil { panic(err) } }","s":"2.3 主程序（运行微内核 + 服务）","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#23-主程序运行微内核--服务","p":617},{"i":632,"t":"[logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] stopping...","s":"2.4 运行结果","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#24-运行结果","p":617},{"i":634,"t":"使用 gRPC 替代 Channel（实现跨进程通信）。 动态加载服务（如插件化架构）。 增加服务发现机制（如 Consul/Etcd）。 支持更复杂的事件路由（如基于 Topic 的 Pub/Sub）。","s":"3. 扩展方向","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#3-扩展方向","p":617},{"i":636,"t":"微内核的核心：Kernel 只管理 Service 的生命周期和通信。 服务独立：每个 Service 运行在自己的 Goroutine 中，互不干扰。 通信方式： 简单场景：Channel（如示例）。 复杂场景：gRPC、NATS、WebSocket 等。 查看完整代码","s":"4. 总结","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#4-总结","p":617},{"i":638,"t":"microkernel 设计1 目前只支持服务发送消息，内核接受消息。 在本章节，我会增加内核发送消息到服务","s":"microkernel 设计2","u":"/docs/note/golang/design/microkernel/microkernel2","h":"","p":637},{"i":640,"t":"内核发送消息到服务","s":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#1-目标","p":637},{"i":643,"t":"服务增加消息处理方法 // kernel/kernel.go type Service interface { Start() error Stop() error Name() string // 增加消息处理方法 Handle(msg string) string } 事件增加发送地址 // kernel/kernel.go // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string } 内核发送事件到服务 // kernel/kernel.go // HandleEvent 处理事件（模拟服务间通信） func (k *Kernel) HandleEvent(evt Event) (msg string) { k.mutex.RLock() defer k.mutex.RUnlock() if svc, ok := k.services[evt.To]; ok { return svc.Handle(evt.Content) } return \"service not found\" }","s":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#21-kernel核心","p":637},{"i":645,"t":"增加Handle方法实现 // service/log.go // service 增加Handle接口实现 func (l *LogService) Handle(msg string) string { fmt.Printf(\"[%s] LOG handle kernel event: %s\\n\", l.name, msg) return fmt.Sprintf(\"[%s] LOG Handle: %s\\n\", l.name, msg) }","s":"2.2 LogService","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#22-logservice","p":637},{"i":647,"t":"kernel发送消息到service // main.go // 6. microKernel 发送事件到指定服务 microKernel.HandleEvent(kernel.Event{ From: \"microKernel\", To: \"logger\", Type: \"log\", Content: \"Hello, Log!\", }) time.Sleep(1 * time.Millisecond)","s":"2.3 主程序（运行微内核 + 服务）","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#23-主程序运行微内核--服务","p":637},{"i":649,"t":"[logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... 查看完整代码","s":"2.4 运行结果","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#24-运行结果","p":637},{"i":651,"t":"HandleEvent 修改为 Send SendEvent 修改为 Push LoopEvent 修改为Listen mutex修改为 mu 查看完整代码","s":"2.5 优化函数和变量命名","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#25-优化函数和变量命名","p":637},{"i":655,"t":"服务 能读取 Kernel 的返回信息 实现方法参考链接： gitee weidongkl.github.io","s":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel3","h":"#1-目标","p":653},{"i":657,"t":"可以为每个 Service 提供一个专属的响应通道（channel），内核通过这个通道将处理结果或反馈信息“推送”回去。 每次发送消息附带一个 ReplyCh。 内核在收到消息后通过该通道写回响应。 Service 读取 ReplyCh 获取反馈。","s":"2. 代码改动","u":"/docs/note/golang/design/microkernel/microkernel3","h":"#2-代码改动","p":653},{"i":659,"t":"事件增加读取返回的channel // kernel/kernel.go // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string // 增加响应通道 ReplyCh chan string } listen 增加返回值得写入 // kernel/kernel.go func (k *Kernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: %s - %s\\n\", evt.From, evt.Type, evt.Content) // 增加返回的写入 if evt.ReplyCh != nil { evt.ReplyCh <- fmt.Sprintf(\"ack: %s\", evt.Content) } } } }","s":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel3","h":"#21-kernel核心","p":653},{"i":661,"t":"服务增加返回的读取 func (l *LogService) run() { for { select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 replyCh := make(chan string, 1) l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", Content: log, ReplyCh: replyCh, }) // 等待内核回应 reply := <-replyCh fmt.Printf(\"[%s] got reply from kernel: %s\\n\", l.Name(), reply) } } }// service/log.go // service 增加Handle接口实现 func (l *LogService) Handle(msg string) string { fmt.Printf(\"[%s] LOG handle kernel event: %s\\n\", l.name, msg) return fmt.Sprintf(\"[%s] LOG Handle: %s\\n\", l.name, msg) }","s":"2.2 LogService","u":"/docs/note/golang/design/microkernel/microkernel3","h":"#22-logservice","p":653},{"i":663,"t":"Registered: logger [logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] got reply from kernel: ack: Hello, Microkernel! [Kernel] Send Event to logger: Hello, Log! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... 查看完整代码","s":"2.3 运行结果","u":"/docs/note/golang/design/microkernel/microkernel3","h":"#23-运行结果","p":653},{"i":666,"t":"服务间通信（通过内核转发） 标准化消息协议结构 支持状态码、错误、数据负载。 异步+超时机制 服务发出请求时可以设置超时时间，避免长期阻塞。","s":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel4","h":"#1-目标","p":664},{"i":669,"t":"定义标准消息格式 Reply 包含code/message/Data Event ReplyCh 使用标准格式的Reply // kernel/kernel.go // Reply 定义内核事件回复 type Reply struct { Code int // 0 表示成功，非0表示错误码 Message string // 描述信息 Data string // 可选负载 } // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string // 增加响应通道,使用 chan Reply，提高回复的灵活性 ReplyCh chan Reply // 可选：超时时间 TimeoutMs int } 服务改造 handle 从处理字符串修改为处理事件，返回标准Reply // kernel/kernel.go // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string Handle(Event) Reply } Listen 路由和事件总线设计 // Listen 事件循环（处理服务间通信） // 监听事件，处理服务间通信 // 重命名 EventLoop 为 Listen func (k *Kernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: - %s\\n\", evt.From, evt.Content) // 发送给 Kernel 自己 if evt.To == \"\" { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 0, Message: \"Handled by kernel\", Data: \"ok\"} } continue } // 路由到目标服务 k.mu.RLock() svc, ok := k.services[evt.To] k.mu.RUnlock() if !ok { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 404, Message: \"Service not found\", Data: \"\"} } continue } // 调用目标服务处理，并返回 go func(s Service, m Event) { result := s.Handle(m) if m.ReplyCh != nil { select { case m.ReplyCh <- result: case <-time.After(time.Duration(m.TimeoutMs) * time.Millisecond): m.ReplyCh <- Reply{Code: 408, Message: \"timeout\", Data: \"\"} } } }(svc, evt) } } }","s":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel4","h":"#21-kernel核心","p":664},{"i":671,"t":"根据count随机分发（Push 指定了发送位置） func (l *LogService) run() { var count = 1 for { count++ select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 replyCh := make(chan kernel.Reply, 1) if count%2 == 0 { l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", Content: log, ReplyCh: replyCh, TimeoutMs: 1000, }) } else { l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", To: \"echo\", Content: log, ReplyCh: replyCh, TimeoutMs: 1000, }) } // 等待内核回应 reply := <-replyCh fmt.Printf(\"[%s] got reply from kernel: %s\\n\", l.Name(), reply.Message) } } }","s":"2.2 LogService","u":"/docs/note/golang/design/microkernel/microkernel4","h":"#22-logservice","p":664},{"i":673,"t":"func (e *EchoService) Handle(evt kernel.Event) kernel.Reply { return kernel.Reply{Code: 0, Message: \"echo service handled\", Data: fmt.Sprintf(\"from %s: %s\", evt.From, evt.Content)} }","s":"2.3 增加另一个类似的EchoService","u":"/docs/note/golang/design/microkernel/microkernel4","h":"#23-增加另一个类似的echoservice","p":664},{"i":675,"t":"Registered: logger # 注册另一个服务 Registered: echo [logger] starting... [echo] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [Kernel] Event from logger: - Hello, Echo! # 转发到echoService 处理 [logger] got reply from kernel: echo service handled [Kernel] Send Event to logger: Hello, Log! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... [echo] stopping... 查看完整代码","s":"2.4 运行结果","u":"/docs/note/golang/design/microkernel/microkernel4","h":"#24-运行结果","p":664},{"i":678,"t":"服务状态管理 单独服务管理 优化项目结构","s":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel5","h":"#1-目标","p":676},{"i":681,"t":"定义服务状态和服务元数据 // kernel/service.go // ServiceState 定义微内核服务状态 type ServiceState int // 使用iota枚举类型，自动计算枚举值 const ( Created ServiceState = iota Running Stopped ) // ServiceState.String() func (s ServiceState) String() string { // 状态转换成字符串 // 其中[...]表示让编译器自动计算数组的长度 return [...]string{\"Created\", \"Running\", \"Stopped\"}[s] } // serviceMeta 定义微内核服务元数据 type serviceMeta struct { svc Service state ServiceState } 单个服务管理 // kernel/kernel.go func (k *MicroKernel) StartService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Running { return errors.New(\"service already started\") } if err := meta.svc.Start(); err != nil { return err } meta.state = Running fmt.Println(\"Started:\", meta.svc.Name()) return nil } func (k *MicroKernel) StopService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Stopped { return errors.New(\"service already stopped\") } if err := meta.svc.Stop(); err != nil { return err } meta.state = Stopped fmt.Println(\"Stopped:\", meta.svc.Name()) return nil } Listen 增加服务状态判断，未运行的服务，不再处理消息 // Listen 事件循环（处理服务间通信） // 监听事件，处理服务间通信 // 重命名 EventLoop 为 Listen func (k *MicroKernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[MicroKernel] Event from %s: - %s\\n\", evt.From, evt.Content) // 发送给 MicroKernel 自己 if evt.To == \"\" { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 0, Message: \"Handled by kernel\", Data: \"ok\"} } continue } // 路由到目标服务 k.mu.RLock() meta, ok := k.services[evt.To] k.mu.RUnlock() if !ok || meta.state != Running { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 404, Message: \"service unavailable\", Data: \"\"} } continue } // 调用目标服务处理，并返回 go func(s Service, m Event) { result := s.Handle(m) if m.ReplyCh != nil { select { case m.ReplyCh <- result: case <-time.After(time.Duration(m.TimeoutMs) * time.Millisecond): m.ReplyCh <- Reply{Code: 408, Message: \"timeout\", Data: \"\"} } } }(meta.svc, evt) } } }","s":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel5","h":"#21-kernel核心","p":676},{"i":683,"t":"Registered: logger Registered: echo Starting all services... [logger] starting... [echo] starting... [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } [logger] stopping... [echo] stopping... 查看完整代码","s":"2.2 运行结果","u":"/docs/note/golang/design/microkernel/microkernel5","h":"#22-运行结果","p":676},{"i":685,"t":"在编程和系统设计中，Future-Proof 机制指的是通过合理的架构设计和技术选择，使代码或系统能够适应未来的需求变化、技术演进和规模扩展，而无需大规模重构或重写。其核心目标是降低长期维护成本，提高可扩展性。","s":"Future-Proof 机制","u":"/docs/note/golang/design/future_proof","h":"","p":684},{"i":687,"t":"以下是实现 Future-Proof 代码的关键设计思想：","s":"1. Future-Proof 机制的关键原则","u":"/docs/note/golang/design/future_proof","h":"","p":684},{"i":689,"t":"目标：模块间通过清晰的接口交互，而非直接依赖具体实现。使用接口（Go 的 interface）而非具体类型，依赖注入而非硬编码。 优点： 业务逻辑与具体实现解耦 易于扩展新的实现方式 便于单元测试（可以mock Notifier） 设计点： 面向接口编程：依赖抽象而非具体实现 依赖注入：通过构造函数或方法参数注入依赖 单一职责：每个组件只关注自己的核心功能 最小知识原则：组件只与直接相关的组件交互 松耦合示例： 定义接口 // Notifier 通知接口 type Notifier interface { Send(message string) error } 接口实现 // EmailNotifier 邮件通知实现 type EmailNotifier struct{} func (e EmailNotifier) Send(message string) error { fmt.Printf(\"发送邮件通知: %s\\n\", message) return nil } // SMSNotifier 短信通知实现 type SMSNotifier struct{} func (s SMSNotifier) Send(message string) error { fmt.Printf(\"发送短信通知: %s\\n\", message) return nil } 业务逻辑调用接口 // NotificationService 通知服务 type NotificationService struct { notifier Notifier } func NewNotificationService(notifier Notifier) *NotificationService { return &NotificationService{notifier: notifier} } func (s *NotificationService) ProcessOrder(orderID string) { // 处理订单逻辑... message := fmt.Sprintf(\"订单 %s 已处理\", orderID) _ = s.notifier.Send(message) } 主函数调用 func main() { // 可以轻松替换通知实现 emailNotifier := EmailNotifier{} service := NewNotificationService(emailNotifier) service.ProcessOrder(\"12345\") // 切换为短信通知不需要修改业务逻辑 smsNotifier := SMSNotifier{} service = NewNotificationService(smsNotifier) service.ProcessOrder(\"67890\") } 紧耦合示例： 使用具体类型 // EmailSender 邮件发送器 type EmailSender struct{} func (e EmailSender) SendEmail(message string) error { fmt.Printf(\"发送邮件: %s\\n\", message) return nil } 业务类型依赖具体类 // OrderProcessor 订单处理器 type OrderProcessor struct { emailSender EmailSender } func (p *OrderProcessor) ProcessOrder(orderID string) { // 处理订单逻辑... message := fmt.Sprintf(\"订单 %s 已处理\", orderID) _ = p.emailSender.SendEmail(message) } 主函数调用 func main() { processor := OrderProcessor{emailSender: EmailSender{}} processor.ProcessOrder(\"12345\") // 如果要改为短信通知，必须修改OrderProcessor结构体和所有相关代码 }","s":"1.1.  松耦合（Loose Coupling）","u":"/docs/note/golang/design/future_proof","h":"#11--松耦合loose-coupling","p":684},{"i":691,"t":"目标：新增功能时无需修改现有代码。 示例：通过组合而非继承扩展行为（Go 的 embedding 或中间件模式）。 type LoggingAggregator struct { *EventAggregator // 嵌入原有功能 logger Logger } // 新增日志能力而不修改原始聚合器","s":"1.2. 可扩展性（Extensibility）","u":"/docs/note/golang/design/future_proof","h":"#12-可扩展性extensibility","p":684},{"i":693,"t":"目标：将易变的参数（如超时时间、规则路径）外置为配置。 示例：通过环境变量或配置文件驱动行为： timeout := os.Getenv(\"AGGREGATOR_TIMEOUT\")","s":"1.3. 配置化而非硬编码","u":"/docs/note/golang/design/future_proof","h":"#13-配置化而非硬编码","p":684},{"i":695,"t":"目标：数据交互格式（如 JSON、Protobuf）支持向后兼容。 示例：使用 Protocol Buffers 的字段编号机制，避免破坏旧版解析。","s":"1.4. 协议与数据格式的兼容性","u":"/docs/note/golang/design/future_proof","h":"#14-协议与数据格式的兼容性","p":684},{"i":697,"t":"目标：并发模型能随规模调整（如 Goroutine 池 vs 固定 Worker）。 示例：在之前的聚合器代码中，通过 Channel 通信可轻松扩展为多 Worker： for i := 0; i < runtime.NumCPU(); i++ { go aggregator.processRequests() }","s":"1.5. 并发模型的可适应性","u":"/docs/note/golang/design/future_proof","h":"#15-并发模型的可适应性","p":684},{"i":699,"t":"目标：内置日志、指标、链路追踪等，便于未来诊断问题。 示例：在 rulesUpdateRequest 中添加请求 ID 和计时： type rulesUpdateRequest struct { RequestID string // 用于追踪 StartTime time.Time // ...其他字段 }","s":"1.6. 可观测性（Observability）","u":"/docs/note/golang/design/future_proof","h":"#16-可观测性observability","p":684},{"i":701,"t":"目标：处理边界条件（如 nil Channel、超时）。 示例：在 Channel 通信中添加超时： func (a *EventAggregator) UpdateRules(rules []string) error { req := &rulesUpdateRequest{..., response: make(chan error, 1)} select { case a.updateChannel <- req: return <-req.response case <-time.After(1 * time.Second): return errors.New(\"update timeout\") } }","s":"1.7. 防御性编程","u":"/docs/note/golang/design/future_proof","h":"#17-防御性编程","p":684},{"i":703,"t":"package main import ( \"fmt\" \"time\" ) // EventAggregator manages a set of rules and processes updates through channels type EventAggregator struct { rules []string updateChannel chan *rulesUpdateRequest shutdownChan chan struct{} } // rulesUpdateRequest represents a request to update the rules type rulesUpdateRequest struct { newRules []string response chan error } // NewEventAggregator creates and starts a new EventAggregator func NewEventAggregator() *EventAggregator { agg := &EventAggregator{ rules: []string{}, updateChannel: make(chan *rulesUpdateRequest), shutdownChan: make(chan struct{}), } go agg.processRequests() return agg } // UpdateRules safely updates the rules by sending a request through the channel func (a *EventAggregator) UpdateRules(newRules []string) error { req := &rulesUpdateRequest{ newRules: newRules, response: make(chan error, 1), // Buffered to avoid blocking } a.updateChannel <- req return <-req.response } // Shutdown gracefully stops the aggregator func (a *EventAggregator) Shutdown() { close(a.shutdownChan) } // processRequests handles incoming requests in a thread-safe manner func (a *EventAggregator) processRequests() { for { select { case req := <-a.updateChannel: a.rules = req.newRules fmt.Println(\"Updated rules:\", a.rules) req.response <- nil case <-a.shutdownChan: fmt.Println(\"Shutting down aggregator\") return } } } func main() { // Create and start the aggregator aggregator := NewEventAggregator() defer aggregator.Shutdown() // Simulate some updates go func() { time.Sleep(500 * time.Millisecond) if err := aggregator.UpdateRules([]string{\"a\", \"b\", \"c\"}); err != nil { fmt.Println(\"Error updating rules:\", err) } }() go func() { time.Sleep(1 * time.Second) if err := aggregator.UpdateRules([]string{\"d\", \"e\", \"f\"}); err != nil { fmt.Println(\"Error updating rules:\", err) } }() // Give time for the updates to process time.Sleep(2 * time.Second) } 状态隔离：所有规则更新通过 Channel 串行化，避免竞态条件。 易于扩展：可新增 QueryRules() 方法而不影响现有逻辑。 并发友好：Channel 模型天然支持协程扩展。 关闭控制：通过 shutdownChan 实现优雅终止。 根据原则，执行部分优化 package main import ( \"context\" \"errors\" \"fmt\" \"sync\" \"time\" ) // RuleSet represents a collection of rules with metadata type RuleSet struct { Rules []string Version int // Track changes over time Modified time.Time // Last update timestamp } // SetRulesRequest encapsulates a rules update operation type SetRulesRequest struct { NewRules []string Response chan error RequestID string // For tracing Timestamp time.Time // For auditing } // AggregatorOptions configures aggregator behavior type AggregatorOptions struct { MaxPendingRequests int // Buffer size for requests RequestTimeout time.Duration // Timeout for rule updates EnableValidation bool // Future: validate rules before applying } // Aggregator manages rule sets with thread-safe operations type Aggregator struct { currentRuleSet RuleSet options AggregatorOptions requestChan chan *SetRulesRequest queryChan chan chan RuleSet // New channel for safe rule queries commandChan chan func() // Generic command channel for future extensions stopChan chan struct{} shutdownOnce sync.Once stopWg sync.WaitGroup } // NewAggregator creates a configured aggregator instance func NewAggregator(opts AggregatorOptions) *Aggregator { if opts.MaxPendingRequests <= 0 { opts.MaxPendingRequests = 10 } if opts.RequestTimeout <= 0 { opts.RequestTimeout = 2 * time.Second } return &Aggregator{ currentRuleSet: RuleSet{Version: 1}, options: opts, requestChan: make(chan *SetRulesRequest, opts.MaxPendingRequests), queryChan: make(chan chan RuleSet), commandChan: make(chan func()), stopChan: make(chan struct{}), } } // Run starts the aggregator's processing loop func (a *Aggregator) Run() { a.stopWg.Add(1) defer a.stopWg.Done() for { select { case req := <-a.requestChan: a.handleSetRules(req) case respChan := <-a.queryChan: a.handleGetRules(respChan) case cmd := <-a.commandChan: cmd() // Execute arbitrary commands case <-a.stopChan: return } } } func (a *Aggregator) handleSetRules(req *SetRulesRequest) { defer close(req.Response) // Future: could add validation here if a.options.EnableValidation { // Validate rules before applying } a.currentRuleSet = RuleSet{ Rules: req.NewRules, Version: a.currentRuleSet.Version + 1, Modified: time.Now(), } fmt.Printf(\"Updated rules (v%d): %v\\n\", a.currentRuleSet.Version, a.currentRuleSet.Rules) req.Response <- nil } func (a *Aggregator) handleGetRules(respChan chan RuleSet) { respChan <- a.currentRuleSet close(respChan) } // SetRules updates the rule set with timeout support func (a *Aggregator) SetRules(ctx context.Context, rules []string) error { req := &SetRulesRequest{ NewRules: rules, Response: make(chan error), RequestID: fmt.Sprintf(\"req-%d\", time.Now().UnixNano()), Timestamp: time.Now(), } select { case a.requestChan <- req: select { case err := <-req.Response: return err case <-ctx.Done(): return ctx.Err() } case <-a.stopChan: return errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return ctx.Err() } } // GetRules safely retrieves the current rule set func (a *Aggregator) GetRules(ctx context.Context) (RuleSet, error) { respChan := make(chan RuleSet) select { case a.queryChan <- respChan: select { case rules := <-respChan: return rules, nil case <-ctx.Done(): return RuleSet{}, ctx.Err() } case <-a.stopChan: return RuleSet{}, errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return RuleSet{}, ctx.Err() } } // Stop gracefully shuts down the aggregator func (a *Aggregator) Stop() { a.shutdownOnce.Do(func() { close(a.stopChan) a.stopWg.Wait() close(a.requestChan) close(a.queryChan) close(a.commandChan) fmt.Println(\"Aggregator stopped gracefully\") }) } // ExecuteCommand provides extension point for future operations func (a *Aggregator) ExecuteCommand(ctx context.Context, cmd func()) error { select { case a.commandChan <- cmd: return nil case <-a.stopChan: return errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return ctx.Err() } } func main() { // Configurable options opts := AggregatorOptions{ MaxPendingRequests: 20, RequestTimeout: 3 * time.Second, EnableValidation: false, // Could be enabled in future } aggregator := NewAggregator(opts) go aggregator.Run() // Example usage with context ctx, cancel := context.WithTimeout(context.Background(), 2*time.Second) defer cancel() // Set rules err := aggregator.SetRules(ctx, []string{\"a\", \"b\", \"c\"}) if err != nil { fmt.Println(\"Error setting rules:\", err) } // Get rules rules, err := aggregator.GetRules(ctx) if err != nil { fmt.Println(\"Error getting rules:\", err) } else { fmt.Printf(\"Current rules (v%d): %v\\n\", rules.Version, rules.Rules) } // Execute custom command aggregator.ExecuteCommand(ctx, func() { fmt.Println(\"Executing custom command\") }) aggregator.Stop() } Enhanced Rule Metadata: Added RuleSet struct with versioning and timestamps Supports audit trails and change tracking Configurable Options: AggregatorOptions allows tuning without code changes Supports future features like validation Multiple Communication Channels: Separate channels for commands (commandChan) and queries (queryChan) Prevents mixing of operation types Context Support: All operations respect context for timeouts/cancellation Better integration with modern Go applications Extension Points: ExecuteCommand method for adding future functionality Generic command channel pattern Improved Shutdown: sync.Once ensures safe single shutdown sync.WaitGroup for proper goroutine cleanup Thread-Safe Queries: Added safe GetRules method via channel No direct access to internal state Request Tracing: Added request IDs for debugging Timestamps for all operations 使用命令模式优化 package main import ( \"context\" \"errors\" \"fmt\" \"sync\" \"time\" ) // Command defines the interface all commands must implement type Command interface { Execute(ctx context.Context) error } // CommandHandler processes commands type CommandHandler struct { commands chan Command stopChan chan struct{} wg sync.WaitGroup } // NewCommandHandler creates a new handler with specified queue size func NewCommandHandler(queueSize int) *CommandHandler { return &CommandHandler{ commands: make(chan Command, queueSize), stopChan: make(chan struct{}), } } // Start begins processing commands func (h *CommandHandler) Start() { h.wg.Add(1) go func() { defer h.wg.Done() for { select { case cmd := <-h.commands: ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second) err := cmd.Execute(ctx) cancel() if err != nil { fmt.Printf(\"Command execution failed: %v\\n\", err) } case <-h.stopChan: return } } }() } // Submit sends a command for execution func (h *CommandHandler) Submit(ctx context.Context, cmd Command) error { select { case h.commands <- cmd: return nil case <-h.stopChan: return errors.New(\"handler is shutting down\") case <-ctx.Done(): return ctx.Err() } } // Stop gracefully shuts down the handler func (h *CommandHandler) Stop() { close(h.stopChan) h.wg.Wait() close(h.commands) } // --- Concrete Commands --- // SetRulesCommand implements Command for rule updates type SetRulesCommand struct { Aggregator *Aggregator NewRules []string } func (c *SetRulesCommand) Execute(ctx context.Context) error { return c.Aggregator.SetRules(ctx, c.NewRules) } // GetRulesCommand implements Command for rule queries type GetRulesCommand struct { Aggregator *Aggregator ResultChan chan<- RuleSet } func (c *GetRulesCommand) Execute(ctx context.Context) error { rules, err := c.Aggregator.GetRules(ctx) if err != nil { return err } c.ResultChan <- rules return nil } // --- Aggregator Implementation --- type RuleSet struct { Rules []string Version int Modified time.Time } type Aggregator struct { mu sync.Mutex currentRule RuleSet } func (a *Aggregator) SetRules(ctx context.Context, rules []string) error { a.mu.Lock() defer a.mu.Unlock() select { case <-ctx.Done(): return ctx.Err() default: a.currentRule = RuleSet{ Rules: rules, Version: a.currentRule.Version + 1, Modified: time.Now(), } fmt.Printf(\"Rules updated to version %d\\n\", a.currentRule.Version) return nil } } func (a *Aggregator) GetRules(ctx context.Context) (RuleSet, error) { a.mu.Lock() defer a.mu.Unlock() select { case <-ctx.Done(): return RuleSet{}, ctx.Err() default: return a.currentRule, nil } } // --- Usage Example --- func main() { // Create components handler := NewCommandHandler(10) aggregator := &Aggregator{ currentRule: RuleSet{Version: 0}, } // Start command processor handler.Start() defer handler.Stop() // Submit commands ctx := context.Background() // Set rules command setCmd := &SetRulesCommand{ Aggregator: aggregator, NewRules: []string{\"a\", \"b\", \"c\"}, } handler.Submit(ctx, setCmd) // Get rules command resultChan := make(chan RuleSet, 1) getCmd := &GetRulesCommand{ Aggregator: aggregator, ResultChan: resultChan, } handler.Submit(ctx, getCmd) // Wait for result select { case rules := <-resultChan: fmt.Printf(\"Current rules: %v\\n\", rules.Rules) case <-time.After(1 * time.Second): fmt.Println(\"Timeout waiting for rules\") } } The Command Handler pattern is a behavioral design pattern that encapsulates requests as objects, allowing for parameterization of clients with different requests, queuing of requests, and support for undoable operations. Here's how to implement it in your aggregator: Core Components Command Interface: Defines the execution contract Concrete Commands: Encapsulate specific actions and parameters Invoker: Receives and executes commands Receiver: Knows how to perform the operations Key Features Command Interface: type Command interface { Execute(ctx context.Context) error } Concrete Commands: Each command encapsulates all parameters needed for execution Commands can be serialized/deserialized for distributed systems Command Handler: Manages a queue of commands Processes commands sequentially in a goroutine Supports graceful shutdown Benefits: Decoupling: Separates command creation from execution Extensibility: Easy to add new command types Composability: Commands can be combined into macros Undo/Redo: Can be extended to support command history Advanced Extensions Command Middleware: type CommandMiddleware func(Command) Command func LoggingMiddleware(next Command) Command { return &loggedCommand{next} } Transaction Support: type TransactionCommand struct { Commands []Command } func (t *TransactionCommand) Execute(ctx context.Context) error { // Execute all or nothing } Priority Commands: type PriorityCommand struct { Command Priority int } // Use priority queue instead of channel","s":"2. 聚合器示例","u":"/docs/note/golang/design/future_proof","h":"#2-聚合器示例","p":684},{"i":705,"t":"// 硬编码实现，未来难以修改 var globalRules []string func UpdateRules(rules []string) { globalRules = rules // 直接修改全局状态，线程不安全 }","s":"3. 反模式：非 Future-Proof 的设计","u":"/docs/note/golang/design/future_proof","h":"#3-反模式非-future-proof-的设计","p":684},{"i":707,"t":"Future-Proof 不是过度设计，而是通过遵循 SOLID 原则和 并发安全实践，让代码具备： 适应变化的能力 平滑演进的路径 诊断问题的手段 在 Go 中，Channel 和 Interface 是构建 Future-Proof 系统的核心工具。","s":"4. 总结","u":"/docs/note/golang/design/future_proof","h":"#4-总结","p":684},{"i":710,"t":"支持服务热更新 所有服务和内核通过统一接口打印日志 时间戳、服务名、级别（INFO/WARN/ERROR） 动态控制日志级别 输出到 stdout、文件、远程服务等 xxx","s":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel7","h":"#1-目标","p":708},{"i":713,"t":"新增ReplaceService 用于热替换服务 // kernel/kernel.go func (k *MicroKernel) ReplaceService(newSvc Service) error { k.mu.Lock() defer k.mu.Unlock() name := newSvc.Name() oldMeta, exists := k.services[name] if exists && oldMeta.state == Running { // 停止旧服务 oldMeta.svc.Stop() fmt.Printf(\"Stopped old version of %s\\n\", name) } // 替换服务实现，重建元信息 k.services[name] = &serviceMeta{ svc: newSvc, deps: newSvc.Dependencies(), state: Created, } // 重启服务（如旧服务在运行） if exists && oldMeta.state == Running { newSvc.Start() k.services[name].state = Running fmt.Printf(\"Started new version of %s\\n\", name) } else { fmt.Printf(\"Registered new version of %s (not started)\\n\", name) } return nil } 注册Register增加deps // kernel/kernel.go // Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() name := svc.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil } 启动服务和停止服务增加拓扑排序 // kernel/kernel.go func (k *MicroKernel) topoSort() ([]string, error) { k.mu.RLock() defer k.mu.RUnlock() visited := make(map[string]bool) temp := make(map[string]bool) result := []string{} var visit func(string) error visit = func(name string) error { if temp[name] { return fmt.Errorf(\"circular dependency at %s\", name) } if visited[name] { return nil } temp[name] = true meta, ok := k.services[name] if !ok { return fmt.Errorf(\"service %s not registered\", name) } for _, dep := range meta.deps { if err := visit(dep); err != nil { return err } } visited[name] = true temp[name] = false result = append(result, name) return nil } for name := range k.services { if !visited[name] { if err := visit(name); err != nil { return nil, err } } } return result, nil } func (k *MicroKernel) StartAll() error { sorted, err := k.topoSort() // ... for _, name := range sorted { if err := k.StartService(name); err != nil { // ... } } return nil }","s":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel7","h":"#21-kernel核心","p":708},{"i":715,"t":"日志服务设计 type LogLevel int const ( INFO LogLevel = iota WARN ERROR ) type Logger struct { mu sync.Mutex level LogLevel service string out io.Writer } 方法实现 func NewLogger(service string, level LogLevel, out io.Writer) *Logger { return &Logger{ service: service, level: level, out: out, } } func (l *Logger) logf(level LogLevel, format string, args ...any) { if level < l.level { return } l.mu.Lock() defer l.mu.Unlock() levelStr := [...]string{\"INFO\", \"WARN\", \"ERROR\"}[level] msg := fmt.Sprintf(format, args...) ts := time.Now().Format(\"2006-01-02 15:04:05.000\") fmt.Fprintf(l.out, \"[%s] [%s] [%s] %s\\n\", ts, levelStr, l.service, msg) } func (l *Logger) Infof(format string, args ...any) { l.logf(INFO, format, args...) } func (l *Logger) Warnf(format string, args ...any) { l.logf(WARN, format, args...) } func (l *Logger) Errorf(format string, args ...any) { l.logf(ERROR, format, args...) } 服务中使用 type EchoServiceV3 struct { log *Logger } func NewEchoServiceV3() *EchoServiceV3 { return &EchoServiceV3{ log: NewLogger(\"echo\", INFO, os.Stdout), } } //... func (e *EchoServiceV3) Start() { e.log.Infof(\"started\") }","s":"2.2 日志服务","u":"/docs/note/golang/design/microkernel/microkernel7","h":"#22-日志服务","p":708},{"i":717,"t":"热替换服务 // 7. 热替换服务 // 热更新为 V2 _ = microKernel.ReplaceService(service.NewEchoServiceV2(microKernel)) // 测试 V2 行为 replyCh2 := make(chan microkernel.Reply, 1) microKernel.Push(microkernel.Event{ From: \"main\", Type: \"log\", Content: \"log\", ReplyCh: replyCh2, TimeoutMs: 1000, }) fmt.Println(\"v2 reply:\", <-replyCh2)","s":"2.3 main","u":"/docs/note/golang/design/microkernel/microkernel7","h":"#23-main","p":708},{"i":719,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } [echo] stopping... Stopped old version of echo [2025-04-23 21:46:11.935] [INFO] [echo] [echov2] starting... Started new version of echo [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... [log] stopping Stopped: echo Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } Stopping all services... [logger] stopping... Stopped: logger [echo] stopping... Stopped: echo 查看完整代码","s":"2.4 运行结果","u":"/docs/note/golang/design/microkernel/microkernel7","h":"#24-运行结果","p":708},{"i":722,"t":"服务热更新增加状态迁移 支持服务加密状态迁移","s":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel8","h":"#1-目标","p":720},{"i":725,"t":"新增状态接口 // 旧服务可选实现：导出状态 type Exportable interface { ExportState() any } // 新服务可选实现：导入状态 type Importable interface { ImportState(state any) error } 加密接口 type Crypter interface { Encrypt(data any) ([]byte, error) Decrypt(cipher []byte) (any, error) } 加密实现 使用aes type AESCrypter struct { key []byte // 16/24/32 字节 } func NewAESCrypter(key []byte) *AESCrypter { return &AESCrypter{key: key} } func (a *AESCrypter) Encrypt(data any) ([]byte, error) { plaintext, err := json.Marshal(data) if err != nil { return nil, err } block, err := aes.NewCipher(a.key) if err != nil { return nil, err } aesgcm, err := cipher.NewGCM(block) if err != nil { return nil, err } nonce := make([]byte, aesgcm.NonceSize()) if _, err := io.ReadFull(rand.Reader, nonce); err != nil { return nil, err } ciphertext := aesgcm.Seal(nonce, nonce, plaintext, nil) return ciphertext, nil } func (a *AESCrypter) Decrypt(ciphertext []byte) (any, error) { block, err := aes.NewCipher(a.key) if err != nil { return nil, err } aesgcm, err := cipher.NewGCM(block) if err != nil { return nil, err } nonceSize := aesgcm.NonceSize() if len(ciphertext) < nonceSize { return nil, fmt.Errorf(\"ciphertext too short\") } nonce := ciphertext[:nonceSize] cipherData := ciphertext[nonceSize:] plaintext, err := aesgcm.Open(nil, nonce, cipherData, nil) if err != nil { return nil, err } var result any if err := json.Unmarshal(plaintext, &result); err != nil { return nil, err } return result, nil } 替换服务 //func (k *MicroKernel) ReplaceService(newSvc Service) error { // k.mu.Lock() // defer k.mu.Unlock() // // name := newSvc.Name() // oldMeta, exists := k.services[name] // var state any // // if exists { // if exporter, ok := oldMeta.svc.(Exportable); ok { // state = exporter.ExportState() // } // oldMeta.svc.Stop() // fmt.Printf(\"Stopped old version of %s\\n\", name) // } // // // 状态迁移 // if importer, ok := newSvc.(Importable); ok && state != nil { // if err := importer.ImportState(state); err != nil { // return fmt.Errorf(\"state import failed: %w\\n\", err) // } // fmt.Printf(\"State migrated for service %s\\n\", name) // } // // // 替换服务元信息 // k.services[name] = &serviceMeta{ // svc: newSvc, // deps: newSvc.Dependencies(), // state: Created, // } // // // 重启服务 // if exists && oldMeta.state == Running { // newSvc.Start() // k.services[name].state = Running // fmt.Printf(\"Started new version of %s\", name) // } else { // fmt.Printf(\"Registered new version of %s (not started)\", name) // } // // return nil //} func (k *MicroKernel) ReplaceServiceEncrypted(newSvc Service, crypter Crypter) error { k.mu.Lock() defer k.mu.Unlock() name := newSvc.Name() oldMeta, exists := k.services[name] var encryptedState []byte if exists { if exporter, ok := oldMeta.svc.(Exportable); ok { rawState := exporter.ExportState() cipher, err := crypter.Encrypt(rawState) if err != nil { return fmt.Errorf(\"state encryption failed: %w\", err) } encryptedState = cipher } oldMeta.svc.Stop() fmt.Printf(\"Stopped old version of %s\\n\", name) } // 状态导入（解密） if importer, ok := newSvc.(Importable); ok && encryptedState != nil { decrypted, err := crypter.Decrypt(encryptedState) if err != nil { return fmt.Errorf(\"state decryption failed: %w\", err) } if err := importer.ImportState(decrypted); err != nil { return fmt.Errorf(\"state import failed: %w\", err) } fmt.Printf(\"Encrypted state migrated for service %s\\n\", name) } k.services[name] = &serviceMeta{ svc: newSvc, deps: newSvc.Dependencies(), state: Created, } if exists && oldMeta.state == Running { newSvc.Start() k.services[name].state = Running fmt.Printf(\"Started new version of %s\\n\", name) } else { fmt.Printf(\"Registered new version of %s (not started)\\n\", name) } return nil }","s":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel8","h":"#21-kernel核心","p":720},{"i":727,"t":"实现状态接口 func (e *EchoServiceV2) ImportState(state any) error { if val, ok := state.(int); ok { e.echoCount = val return nil } return fmt.Errorf(\"invalid state type\") } func (e *EchoService) ExportState() any { return e.echoCount }","s":"2.2 echo服务","u":"/docs/note/golang/design/microkernel/microkernel8","h":"#22-echo服务","p":720},{"i":729,"t":"热替换服务 // 7. 热替换服务 // 热更新为 V2 aesKey := []byte(\"1234567890123456\") // 16 字节对称密钥 microKernel.ReplaceServiceEncrypted(service.NewEchoServiceV2(microKernel), microkernel.NewAESCrypter(aesKey))","s":"2.3 main","u":"/docs/note/golang/design/microkernel/microkernel8","h":"#23-main","p":720},{"i":731,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to echo: Hello, Log! {0 echo service handled from microKernel: Hello, Log!} [echo] stopping... Stopped old version of echo State migrated for service echo [2025-04-24 21:28:38.032] [INFO] [echo] [echov2] starting... Started new version of echo[MicroKernel] Send Event to echo: Hello, Log! [echo] count is 10 {0 echo v2 service handled from microKernel: Hello, Log!} [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... Stopped: echo [log] stopping 查看完整代码","s":"2.4 运行结果","u":"/docs/note/golang/design/microkernel/microkernel8","h":"#24-运行结果","p":720},{"i":734,"t":"支持服务依赖关系管理","s":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel6","h":"#1-目标","p":732},{"i":737,"t":"定义服务依赖关系。依赖的是服务名称 // kernel/service.go // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string Handle(Event) Reply // Dependencies 返回依赖服务名称 Dependencies() []string // 新增接口 } // serviceMeta 定义微内核服务元数据 type serviceMeta struct { svc Service state ServiceState // 存储依赖，也可以不使用，直接使用svc.Dependencies deps []string } 注册Register增加deps // kernel/kernel.go // Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() name := svc.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil } 启动服务和停止服务增加拓扑排序 // kernel/kernel.go func (k *MicroKernel) topoSort() ([]string, error) { k.mu.RLock() defer k.mu.RUnlock() visited := make(map[string]bool) temp := make(map[string]bool) result := []string{} var visit func(string) error visit = func(name string) error { if temp[name] { return fmt.Errorf(\"circular dependency at %s\", name) } if visited[name] { return nil } temp[name] = true meta, ok := k.services[name] if !ok { return fmt.Errorf(\"service %s not registered\", name) } for _, dep := range meta.deps { if err := visit(dep); err != nil { return err } } visited[name] = true temp[name] = false result = append(result, name) return nil } for name := range k.services { if !visited[name] { if err := visit(name); err != nil { return nil, err } } } return result, nil } func (k *MicroKernel) StartAll() error { sorted, err := k.topoSort() // ... for _, name := range sorted { if err := k.StartService(name); err != nil { // ... } } return nil }","s":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel6","h":"#21-kernel核心","p":732},{"i":739,"t":"服务增加依赖方法实现 func (l *LogService) Dependencies() []string { return []string{\"echo\"} }","s":"2.2 服务","u":"/docs/note/golang/design/microkernel/microkernel6","h":"#22-服务","p":732},{"i":741,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } Stopping all services... [logger] stopping... Stopped: logger [echo] stopping... Stopped: echo 查看完整代码","s":"2.3 运行结果","u":"/docs/note/golang/design/microkernel/microkernel6","h":"#23-运行结果","p":732},{"i":743,"t":"服务状态持久化","s":"microkernel 设计9","u":"/docs/note/golang/design/microkernel/microkernel9","h":"","p":742},{"i":745,"t":"服务状态在 Stop() 或热替换时 导出 + 加密 + 写入磁盘 注册服务时若检测到磁盘中有状态，则 读取 + 解密 + 导入 每个服务有自己的状态文件（支持多服务）","s":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#1-目标","p":742},{"i":748,"t":"存储目录：/var/lib/microkernel/state/（示例） 文件名：<service_name>.state 文件内容：已加密的字节流","s":"2.1 存储文件设计","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#21-存储文件设计","p":742},{"i":750,"t":"type StateStore struct { dir string crypter Crypter } func NewStateStore(dir string, crypter Crypter) *StateStore { return &StateStore{dir: dir, crypter: crypter} } func (s *StateStore) path(name string) string { return filepath.Join(s.dir, name+\".state\") } func (s *StateStore) Save(name string, state any) error { encrypted, err := s.crypter.Encrypt(state) if err != nil { return err } if err := os.MkdirAll(s.dir, 0755); err != nil { return err } return os.WriteFile(s.path(name), encrypted, 0600) } func (s *StateStore) Load(name string) (any, error) { data, err := os.ReadFile(s.path(name)) if err != nil { return nil, err } return s.crypter.Decrypt(data) } func (s *StateStore) Exists(name string) bool { _, err := os.Stat(s.path(name)) return err == nil }","s":"2.2 状态管理模块：StateStore","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#22-状态管理模块statestore","p":742},{"i":753,"t":"type MicroKernel struct { ... stateStore *StateStore } func NewMicroKernelWithState(store *StateStore) *MicroKernel { return &MicroKernel{ services: make(map[string]*serviceMeta), stateStore: store, logger: NewLogger(\"kernel\", INFO, os.Stdout), } }","s":"3.1 kernel 初始化集成StateStore","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#31-kernel-初始化集成statestore","p":742},{"i":755,"t":"// Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() // name 可以放在锁前面，优化性能 name := svc.Name() // 增加状态导入 // 如果使用的接口，这边就使用的接口方法 if k.stateStore != nil && k.stateStore.Exists(name) { // 查看服务是否支持状态导入 // 状态导入不要求每个服务必须实现 // 如果没有实现，就直接忽略 if importer, ok := svc.(Importable); ok { raw, err := k.stateStore.Load(name) if err != nil { return fmt.Errorf(\"state load failed: %w\\n\", err) } err = importer.ImportState(raw) if err != nil { return fmt.Errorf(\"state import failed: %w\\n\", err) } fmt.Printf(\"State migrated for service %s\\n\", name) } } if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil }","s":"3.2 注册服务时尝试自动加载状态","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#32-注册服务时尝试自动加载状态","p":742},{"i":757,"t":"func (k *MicroKernel) StopService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Stopped { return errors.New(\"service already stopped\") } // 增加状态导出判断 if exporter, ok := meta.svc.(Exportable); ok && k.stateStore != nil { if err := k.stateStore.Save(name, exporter.ExportState()); err == nil { fmt.Printf(\"State persisted for %s\\n\", name) } } if err := meta.svc.Stop(); err != nil { return err } meta.state = Stopped fmt.Println(\"Stopped:\", meta.svc.Name()) return nil }","s":"3.3 停止服务时，保存状态","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#33-停止服务时保存状态","p":742},{"i":759,"t":"func (k *MicroKernel) Listen(ctx context.Context) { // 间隔可以加在kernel的struct中，也可以使用方法来获取 ticker := time.NewTicker(2 * time.Second) for { select { case <-ctx.Done(): return case <-ticker.C: fmt.Println(\"Timed writing state\") if k.stateStore != nil { for name, meta := range k.services { if meta.state == Running { if exporter, ok := meta.svc.(Exportable); ok { if err := k.stateStore.Save(name, exporter.ExportState()); err == nil { fmt.Printf(\"State persisted for %s\\n\", name) } } } } }","s":"3.4 定时持久化状态","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#34-定时持久化状态","p":742},{"i":761,"t":"crypter := microkernel.NewAESCrypter([]byte(\"1234567890123456\")) store := microkernel.NewStateStore(\"./state\", crypter) // 1. 创建微内核 microKernel := microkernel.NewMicroKernel(store) // 增加加密存储","s":"4. main","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#4-main","p":742},{"i":763,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to echo: Hello, Log! {0 echo service handled from microKernel: Hello, Log!} [echo] stopping... Stopped old version of echo Encrypted state migrated for service echo [2025-04-26 19:47:00.801] [INFO] [echo] [echov2] starting... Started new version of echo [MicroKernel] Send Event to echo: Hello, Log! [echo] count is 10 {0 echo v2 service handled from microKernel: Hello, Log!} [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... Stopped: echo 查看完整代码","s":"4.1 运行结果","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#41-运行结果","p":742},{"i":766,"t":"依赖倒置原则(Dependency Inversion Principle, DIP) 是SOLID原则中的第五个原则，由Robert C. Martin提出。其核心思想是： 高层模块不应该依赖低层模块，两者都应该依赖抽象。抽象不应该依赖细节，细节应该依赖抽象。 在Go语言中，这一原则主要通过接口(interface)和依赖注入来实现。","s":"1. 概述","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#1-概述","p":764},{"i":768,"t":"依赖抽象：通过接口而非具体实现编程 控制反转(IoC)：将依赖的创建和使用分离 依赖注入(DI)：通过构造函数、方法或属性注入依赖","s":"2. 核心概念","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#2-核心概念","p":764},{"i":771,"t":"// 高层模块直接依赖低层模块 type MySQLDatabase struct {} func (m *MySQLDatabase) Save(data string) error { fmt.Println(\"保存数据到MySQL:\", data) return nil } type ReportGenerator struct { db *MySQLDatabase // 直接依赖具体实现 } func (r *ReportGenerator) Generate() error { return r.db.Save(\"报告数据\") } 问题：ReportGenerator直接依赖MySQLDatabase，难以切换其他数据库","s":"3.1 违反DIP的例子","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#31-违反dip的例子","p":764},{"i":773,"t":"// 定义抽象接口 type Database interface { Save(data string) error } // 低层模块实现接口 type MySQLDatabase struct {} func (m *MySQLDatabase) Save(data string) error { fmt.Println(\"保存数据到MySQL:\", data) return nil } type PostgreSQLDatabase struct {} func (p *PostgreSQLDatabase) Save(data string) error { fmt.Println(\"保存数据到PostgreSQL:\", data) return nil } // 高层模块依赖抽象 type ReportGenerator struct { db Database // 依赖接口而非具体实现 } func NewReportGenerator(db Database) *ReportGenerator { return &ReportGenerator{db: db} } func (r *ReportGenerator) Generate() error { return r.db.Save(\"报告数据\") }","s":"3.2 遵循DIP的改进方案","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#32-遵循dip的改进方案","p":764},{"i":776,"t":"构造结构体包含Logger对象 type Logger interface { Log(message string) } type ConsoleLogger struct{} func (c *ConsoleLogger) Log(message string) { fmt.Println(message) } type Service struct { logger Logger } func NewService(logger Logger) *Service { return &Service{logger: logger} } func (s *Service) DoWork() { s.logger.Log(\"工作开始\") // 业务逻辑... }","s":"4.1 构造函数注入","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#41-构造函数注入","p":764},{"i":778,"t":"type MailSender interface { Send(to, subject, body string) error } type UserService struct{} func (u *UserService) Register(email string, sender MailSender) error { // 注册逻辑... return sender.Send(email, \"欢迎\", \"感谢注册\") }","s":"4.2 方法注入","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#42-方法注入","p":764},{"i":780,"t":"// 在调用方定义接口（Go特色） package user type Database interface { Save(user User) error } type Service struct { db Database } // 实现可以在任何地方 type MySQLDB struct{} func (m *MySQLDB) Save(user User) error { ... }","s":"4.3 接口定义在调用方","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#43-接口定义在调用方","p":764},{"i":783,"t":"// storage.go type UserRepository interface { GetByID(id int) (*User, error) Save(user *User) error } // service.go type UserService struct { repo UserRepository } func NewUserService(repo UserRepository) *UserService { return &UserService{repo: repo} } // 可以轻松切换实现：MySQL, PostgreSQL, MongoDB等","s":"5.1 数据库访问","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#51-数据库访问","p":764},{"i":785,"t":"type Handler interface { Handle(w http.ResponseWriter, r *http.Request) error } type Router struct { handlers map[string]Handler } func (r *Router) Register(path string, handler Handler) { r.handlers[path] = handler } // 具体处理器实现 type UserHandler struct { service *UserService } func (h *UserHandler) Handle(w http.ResponseWriter, r *http.Request) error { // 处理请求... }","s":"5.2 HTTP服务","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#52-http服务","p":764},{"i":787,"t":"虽然Go不强制使用DI框架，但有一些流行选择： Google Wire：编译时依赖注入 // wire.go func InitializeUserService() *UserService { wire.Build(NewUserService, NewMySQLRepository) return &UserService{} } Dig：运行时依赖注入 container := dig.New() container.Provide(NewMySQLRepository) container.Provide(NewUserService) FX：基于Dig的框架 fx.New( fx.Provide(NewMySQLRepository), fx.Provide(NewUserService), fx.Invoke(func(s *UserService) { // 使用服务... }), )","s":"6. 依赖注入框架(可选)","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#6-依赖注入框架可选","p":764},{"i":789,"t":"紧耦合：组件间高度依赖，难以修改 难以测试：无法轻松替换真实依赖进行测试 扩展困难：添加新功能需要修改多处代码 复用性差：组件难以在不同上下文中使用","s":"7. 违反DIP的后果","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#7-违反dip的后果","p":764},{"i":791,"t":"DIP的核心是依赖抽象而非具体实现 在Go中主要通过接口和依赖注入实现 高层模块定义抽象接口，低层模块实现这些接口 使用构造函数注入或方法注入提供依赖 考虑使用DI框架管理复杂依赖关系 遵循DIP能提高代码的可测试性、可扩展性和可维护性 好的架构应该像插件系统 - 高层模块定义插槽，低层模块实现插件。","s":"8. 总结","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#8-总结","p":764},{"i":794,"t":"使用channel 在 goroutine 间进行通信和同步操作 package main import ( \"fmt\" \"time\" ) // SetRulesRequest 表示设置规则的请求结构 type SetRulesRequest struct { NewRules []string Response chan error // 用于同步返回是否成功 } // Aggregator 用于管理规则并支持并发设置 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} } // SetRules 是向 aggregator 发送新规则的接口 func (a *Aggregator) SetRules(r []string) error { req := &SetRulesRequest{ NewRules: r, Response: make(chan error), } a.setRulesChan <- req return <-req.Response // 等待响应结束 } // Run 启动 aggregator 的工作协程 func (a *Aggregator) Run() { for { select { case req := <-a.setRulesChan: a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) req.Response <- nil // 成功响应 case <-a.stopChan: return } } } // Stop 关闭 aggregator 的后台协程 func (a *Aggregator) Stop() { close(a.stopChan) } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), } go aggregator.Run() // 模拟使用 time.Sleep(500 * time.Millisecond) aggregator.SetRules([]string{\"a\", \"b\", \"c\"}) aggregator.SetRules([]string{\"d\", \"e\", \"f\"}) // 停止后台协程 aggregator.Stop() } 🔍 说明重点： 通信模型：调用者通过 SetRules 向 Aggregator 的 channel 发送数据，然后通过一个 Response channel 同步等待执行结果。 响应式设计：Aggregator 处理请求后通过 channel 回复，避免竞态。 易扩展性：你可以将更多操作（如查询、追加等）封装成不同的 request 结构体，并通过不同 channel 或类型区分处理。","s":"1. channel 交互","u":"/docs/note/golang/design/multi_goroutine","h":"#1-channel-交互","p":792},{"i":797,"t":"发送端（ch <- v）向已关闭 channel 发送数据： 会 panic！ 接收端（<-chan）读取已关闭 channel： 不会 panic， 立即返回零值 第二个返回值判断是否关闭。即：v, ok := <-ch，如果 ok == false，说明 channel 已关闭。 不判断。即: v := <-ch，立即返回零值，无法判断 channel 是否关闭。 即：v, ok := <-ch，如果 ok == false，说明 channel 已关闭。 举例 package main import ( \"log\" \"time\" ) func main() { //ch := make(chan int, 2) ch := make(chan int) go func() { ch <- 20 time.Sleep(1 * time.Second) defer close(ch) }() // 只接收数据，不检查通道状态 rules := <-ch log.Println(\"Rules:\", rules) // 输出：14:47:31 Rules: 20 rules = <-ch log.Println(\"Rules:\", rules) // 输出：14:47:32 Rules: 0 rules = <-ch log.Println(\"Rules:\", rules) // 输出：14:47:32 Rules: 0 // 读取时检查通道是否仍然开放 rules, open := <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:39 Rules: 20 Open: true rules, open = <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:40 Rules: 0 Open: false rules, open = <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:40 Rules: 0 Open: false }","s":"2.1. 理解 channel 行为","u":"/docs/note/golang/design/multi_goroutine","h":"#21-理解-channel-行为","p":792},{"i":799,"t":"✅ 特性亮点： 安全关闭 goroutine： setRulesChan 和 stopChan 都支持关闭，防止死锁或 panic。 带 ok 判断防止接收已关闭的 channel 导致数据为 nil。 封装清晰： Run() 执行逻辑清晰，Stop() 方法负责安全退出和资源清理。 package main import ( \"fmt\" \"time\" ) // 请求结构体，设置规则并通过 Response 返回结果 type SetRulesRequest struct { NewRules []string Response chan error } // 聚合器结构 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} doneChan chan struct{} // 通知主线程已退出 } // Run 启动 Aggregator 的工作协程 func (a *Aggregator) Run() { defer close(a.doneChan) // 通知主线程：后台协程已退出 for { select { case req, ok := <-a.setRulesChan: if !ok { fmt.Println(\"setRulesChan closed, exiting Run()\") return } a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) // 响应调用者 req.Response <- nil case <-a.stopChan: fmt.Println(\"Received stop signal, exiting Run()\") return } } } // SetRules 发送规则请求 func (a *Aggregator) SetRules(r []string) error { req := &SetRulesRequest{ NewRules: r, Response: make(chan error), } select { case a.setRulesChan <- req: return <-req.Response case <-a.stopChan: return fmt.Errorf(\"aggregator is shutting down\") } } // Stop 关闭 aggregator，确保 goroutine 优雅退出 func (a *Aggregator) Stop() { close(a.stopChan) // 通知退出 close(a.setRulesChan) // 防止阻塞在 <-setRulesChan <-a.doneChan // 等待后台处理完成 fmt.Println(\"Aggregator stopped gracefully\") } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), doneChan: make(chan struct{}), } go aggregator.Run() time.Sleep(500 * time.Millisecond) aggregator.SetRules([]string{\"a\", \"b\", \"c\"}) aggregator.SetRules([]string{\"x\", \"y\", \"z\"}) aggregator.Stop() }","s":"2.2. 使用判断channel 优化示例","u":"/docs/note/golang/design/multi_goroutine","h":"#22-使用判断channel-优化示例","p":792},{"i":801,"t":"🧠 为啥用 context.Context？ 防止调用者被永久阻塞：例如 aggregator goroutine 迟迟不响应。 可设置 timeout 或 cancel，适合服务端编程模型。 可组合多种取消方式（定时取消 + 主动取消）。 ✅ 增强功能： SetRules 支持超时 / 取消（避免卡死等待响应）。 context.Context 控制响应等待过程。 依然保留 graceful shutdown 支持（Stop()）。 package main import ( \"context\" \"fmt\" \"time\" ) // 请求结构体，设置规则并通过 Response 返回结果 type SetRulesRequest struct { NewRules []string Response chan error } // 聚合器结构体 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} doneChan chan struct{} } // Run 启动 aggregator 的工作协程 func (a *Aggregator) Run() { defer close(a.doneChan) for { select { case req, ok := <-a.setRulesChan: if !ok { fmt.Println(\"setRulesChan closed, exiting Run()\") return } a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) req.Response <- nil case <-a.stopChan: fmt.Println(\"Received stop signal, exiting Run()\") return } } } // SetRulesCtx 支持 context 超时 / 取消控制 func (a *Aggregator) SetRulesCtx(ctx context.Context, rules []string) error { req := &SetRulesRequest{ NewRules: rules, Response: make(chan error, 1), // 非阻塞回写 } // 模拟耗时操作 time.Sleep(2 * time.Millisecond) select { case a.setRulesChan <- req: // 等待响应 or context 超时 select { case err := <-req.Response: return err case <-ctx.Done(): return fmt.Errorf(\"set rules timeout or cancelled: %w\", ctx.Err()) } case <-a.stopChan: return fmt.Errorf(\"aggregator shutting down\") case <-ctx.Done(): return fmt.Errorf(\"send timeout or cancelled: %w\", ctx.Err()) } } // Stop 优雅关闭 func (a *Aggregator) Stop() { close(a.stopChan) close(a.setRulesChan) <-a.doneChan fmt.Println(\"Aggregator stopped gracefully\") } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), doneChan: make(chan struct{}), } go aggregator.Run() // 模拟正常调用 ctx := context.Background() aggregator.SetRulesCtx(ctx, []string{\"a\", \"b\", \"c\"}) // 模拟带 timeout 的调用（1ms 会超时） ctxTimeout, cancel := context.WithTimeout(context.Background(), 1*time.Millisecond) defer cancel() err := aggregator.SetRulesCtx(ctxTimeout, []string{\"should\", \"fail\", \"fast\"}) if err != nil { fmt.Println(\"Timeout err:\", err) } // 正常调用 ctx2, cancel2 := context.WithTimeout(context.Background(), 2*time.Second) defer cancel2() aggregator.SetRulesCtx(ctx2, []string{\"x\", \"y\", \"z\"}) aggregator.Stop() }","s":"3. 支持 context.Context","u":"/docs/note/golang/design/multi_goroutine","h":"#3-支持-contextcontext","p":792},{"i":803,"t":"CommandHandler 模式是命令模式（Command Pattern）的一种实现方式，常用于将请求（命令）与处理逻辑解耦，从而提高系统的灵活性和可扩展性。它通过将命令封装为对象，并由专门的 CommandHandler 负责执行这些命令，使得系统能够更轻松地管理命令的生命周期、支持撤销/重做操作、实现事务管理或异步处理。 核心概念 Command（命令） 定义一个接口或抽象类，声明执行命令的方法（如 execute()）。 具体命令类实现该接口，封装请求的具体逻辑。 CommandHandler（命令处理器） 负责接收命令对象并调用其 execute() 方法。 可以扩展为支持命令的调度、排队、事务管理或异步执行。 Invoker（调用者） 触发命令的对象，通常持有对 CommandHandler 的引用。 Receiver（接收者） 执行命令实际逻辑的对象，命令对象通过依赖注入或组合的方式与接收者交互。 🎯 目标： 支持不同类型请求的统一处理通道 类似“命令模式”：将操作封装为一个结构体 可扩展、可测试、context 支持、graceful shutdown ✅ 架构设计： +--------------------+ | CommandHandler | |--------------------| | chan Command |<----------- Send() | goroutine: dispatch| (通用异步接口) +--------------------+ | V +--------------------+ | Command (接口) |<-- 多种请求实现： | Execute(context) | - SetRulesCommand +--------------------+ - GetRulesCommand - AppendRulesCommand ✨ 通用实现（含 SetRules 和 GetRules）： package main import ( \"context\" \"errors\" \"fmt\" ) // Command 是所有请求的接口 type Command interface { Execute(ctx context.Context, h *Handler) Done() <-chan struct{} Err() error } // Handler 管理状态和调度命令执行 type Handler struct { rules []string cmdChan chan Command stop chan struct{} done chan struct{} } // 基础命令结构 type baseCommand struct { err error done chan struct{} } func (c *baseCommand) Done() <-chan struct{} { return c.done } func (c *baseCommand) Err() error { return c.err } // SetRulesCommand 设置规则 type SetRulesCommand struct { baseCommand NewRules []string } func (c *SetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) h.rules = c.NewRules fmt.Println(\"SetRulesCommand executed:\", h.rules) } // GetRulesCommand 获取规则 type GetRulesCommand struct { baseCommand Result chan []string } func (c *GetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) c.Result <- h.rules close(c.Result) } func NewHandler() *Handler { return &Handler{ rules: []string{}, cmdChan: make(chan Command), stop: make(chan struct{}), done: make(chan struct{}), } } // Run 启动处理循环 func (h *Handler) Run() { defer close(h.done) for { select { case cmd := <-h.cmdChan: ctx := context.Background() // 可支持 ctx 控制 cmd.Execute(ctx, h) case <-h.stop: return } } } // Send 提交命令（带超时支持） func (h *Handler) Send(ctx context.Context, cmd Command) error { select { case h.cmdChan <- cmd: select { case <-cmd.Done(): return cmd.Err() case <-ctx.Done(): return ctx.Err() } case <-h.stop: return errors.New(\"handler is stopped\") case <-ctx.Done(): return ctx.Err() } } // Stop 优雅关闭 func (h *Handler) Stop() { close(h.stop) <-h.done } func main() { handler := NewHandler() go handler.Run() ctx := context.Background() setCmd := &SetRulesCommand{ baseCommand: baseCommand{done: make(chan struct{})}, NewRules: []string{\"a\", \"b\", \"c\"}, } handler.Send(ctx, setCmd) // 获取规则 getCmd := &GetRulesCommand{ baseCommand: baseCommand{done: make(chan struct{})}, Result: make(chan []string, 1), } handler.Send(ctx, getCmd) fmt.Println(\"Current rules:\", <-getCmd.Result) handler.Stop() } ✅ 泛型式响应的 ResultCommand[T] 设计 实现目标： 命令支持携带强类型返回值（例如：[]string、int、bool 等）； 支持 context 控制； 解耦命令发送与执行，类型安全 的异步响应； 易扩展、结构清晰。 package main import ( \"context\" \"errors\" \"fmt\" \"time\" ) // 通用 Command 接口 type Command interface { Execute(context.Context, *Handler) Done() <-chan struct{} Err() error } // Handler：命令处理器 type Handler struct { rules []string cmdChan chan Command stop chan struct{} done chan struct{} } func NewHandler() *Handler { return &Handler{ rules: []string{}, cmdChan: make(chan Command), stop: make(chan struct{}), done: make(chan struct{}), } } func (h *Handler) Run() { defer close(h.done) for { select { case cmd := <-h.cmdChan: cmd.Execute(context.Background(), h) case <-h.stop: return } } } func (h *Handler) Stop() { close(h.stop) <-h.done } // Send 支持泛型命令发送 func (h *Handler) Send(ctx context.Context, cmd Command) error { select { case h.cmdChan <- cmd: select { case <-cmd.Done(): return cmd.Err() case <-ctx.Done(): return ctx.Err() } case <-ctx.Done(): return ctx.Err() case <-h.stop: return errors.New(\"handler stopped\") } } // 泛型命令 ResultCommand[T] // -------------------------------- type ResultCommand[T any] struct { result T err error done chan struct{} resultC chan T } func NewResultCommand[T any]() *ResultCommand[T] { return &ResultCommand[T]{ done: make(chan struct{}), resultC: make(chan T, 1), // 非阻塞写入 } } func (c *ResultCommand[T]) Done() <-chan struct{} { return c.done } func (c *ResultCommand[T]) Err() error { return c.err } // Wait 等待结果 func (c *ResultCommand[T]) Wait(ctx context.Context) (T, error) { select { case <-ctx.Done(): var zero T return zero, ctx.Err() case res := <-c.resultC: return res, c.err } } // -------------------------------- // 示例命令：GetRulesCommand 返回 []string // -------------------------------- type GetRulesCommand struct { *ResultCommand[[]string] } func NewGetRulesCommand() *GetRulesCommand { return &GetRulesCommand{ ResultCommand: NewResultCommand[[]string](), } } func (c *GetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) c.result = h.rules c.resultC <- h.rules } // -------------------------------- // 示例命令：SetRulesCommand // -------------------------------- type SetRulesCommand struct { newRules []string done chan struct{} err error } func NewSetRulesCommand(rules []string) *SetRulesCommand { return &SetRulesCommand{ newRules: rules, done: make(chan struct{}), } } func (c *SetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) h.rules = c.newRules fmt.Println(\"Rules updated:\", h.rules) } func (c *SetRulesCommand) Done() <-chan struct{} { return c.done } func (c *SetRulesCommand) Err() error { return c.err } // 🧪 Main 演示：SetRules 和 GetRules 泛型返回 func main() { h := NewHandler() go h.Run() ctx := context.Background() // Set rules setCmd := NewSetRulesCommand([]string{\"x\", \"y\", \"z\"}) _ = h.Send(ctx, setCmd) // Get rules getCmd := NewGetRulesCommand() _ = h.Send(ctx, getCmd) rules, err := getCmd.Wait(ctx) if err != nil { fmt.Println(\"GetRules error:\", err) } else { fmt.Println(\"Got rules:\", rules) } // 超时测试 timeoutCtx, cancel := context.WithTimeout(ctx, 1*time.Millisecond) defer cancel() getCmd2 := NewGetRulesCommand() _ = h.Send(timeoutCtx, getCmd2) rules2, err := getCmd2.Wait(timeoutCtx) fmt.Println(\"With timeout:\", rules2, err) h.Stop() } 输出示例： Rules updated: [x y z] Got rules: [x y z] With timeout: [] context deadline exceeded 📦 可扩展示例命令 GetStatsCommand struct{ ResultCommand[map[string]int] } FlushToDiskCommand struct{ ResultCommand[bool] } LoadConfigCommand struct{ ResultCommand[Config] } AppendRulesCommand struct{ Rules []string }","s":"4. CommandHandler 模式","u":"/docs/note/golang/design/multi_goroutine","h":"#4-commandhandler-模式","p":792},{"i":806,"t":"接口隔离原则(Interface Segregation Principle, ISP) 是SOLID原则中的第四个原则，由Robert C. Martin提出。其核心思想是： 客户端不应该被迫依赖它们不使用的接口。换句话说，多个特定的小接口比一个通用的大接口更好。 在Go语言中，这一原则尤为重要，因为Go的接口是隐式实现的，且鼓励小而专注的设计。","s":"1. 概述","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#1-概述","p":804},{"i":808,"t":"小而专注：接口应该只包含客户端真正需要的方法 避免\"胖接口\"：不要让接口承担过多职责 按需实现：客户端应该只依赖它们实际使用的接口","s":"2. 核心概念","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#2-核心概念","p":804},{"i":811,"t":"// 一个\"胖接口\"包含太多方法 type Animal interface { Eat() Sleep() Fly() // 不是所有动物都会飞 Swim() // 不是所有动物都会游泳 Bark() // 不是所有动物都会叫 } // 实现这个接口很困难 type Dog struct{} func (d Dog) Eat() { fmt.Println(\"Dog eating\") } func (d Dog) Sleep() { fmt.Println(\"Dog sleeping\") } func (d Dog) Bark() { fmt.Println(\"Dog barking\") } func (d Dog) Fly() {} // 狗不会飞，但被迫实现 func (d Dog) Swim() {} // 有些狗会游泳，有些不会 问题：Dog被迫实现它不需要的方法(Fly)","s":"3.1 违反ISP的例子","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#31-违反isp的例子","p":804},{"i":813,"t":"// 拆分为多个小接口 type Eater interface { Eat() } type Sleeper interface { Sleep() } type Flyer interface { Fly() } type Swimmer interface { Swim() } type Barker interface { Bark() } // Dog只需要实现相关接口 type Dog struct{} func (d Dog) Eat() { fmt.Println(\"Dog eating\") } func (d Dog) Sleep() { fmt.Println(\"Dog sleeping\") } func (d Dog) Bark() { fmt.Println(\"Dog barking\") } // 可以按需组合 type AquaticDog struct { Dog } func (a AquaticDog) Swim() { fmt.Println(\"Dog swimming\") }","s":"3.2 遵循ISP的改进方案","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#32-遵循isp的改进方案","p":804},{"i":816,"t":"type Animal interface { Eater Sleeper } type Bird interface { Animal Flyer } type Fish interface { Animal Swimmer }","s":"4.1 使用接口组合","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#41-使用接口组合","p":804},{"i":818,"t":"// 在需要的地方定义接口 func Feed(e Eater) { e.Eat() } func PutToSleep(s Sleeper) { s.Sleep() }","s":"4.2 客户端特定接口","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#42-客户端特定接口","p":804},{"i":820,"t":"// 不好的设计 type FileHandler interface { Open() Close() Read() Write() Delete() Archive() // 不是所有处理器都需要归档 } // 好的设计 type FileOperator interface { Open() Close() } type FileReader interface { FileOperator Read() } type FileWriter interface { FileOperator Write() } type FileManager interface { FileReader FileWriter Delete() }","s":"4.3 避免接口污染","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#43-避免接口污染","p":804},{"i":823,"t":"type Reader interface { Get(id string) (Item, error) List() ([]Item, error) } type Writer interface { Create(item Item) error Update(item Item) error Delete(id string) error } // 只读客户端 func NewReadOnlyClient(r Reader) *ReadOnlyClient { return &ReadOnlyClient{reader: r} } // 读写客户端 func NewReadWriteClient(rw interface { Reader Writer }) *ReadWriteClient { return &ReadWriteClient{readerWriter: rw} }","s":"5.1 数据库访问层","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#51-数据库访问层","p":804},{"i":825,"t":"type RequestLogger interface { LogRequest(r *http.Request) } type ResponseLogger interface { LogResponse(w http.ResponseWriter) } // 只需要请求日志的中间件 func WithRequestLogging(l RequestLogger) func(http.Handler) http.Handler { return func(next http.Handler) http.Handler { return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) { l.LogRequest(r) next.ServeHTTP(w, r) }) } }","s":"5.2 HTTP中间件","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#52-http中间件","p":804},{"i":827,"t":"不必要的实现负担：类型被迫实现它们不需要的方法 脆弱的代码：接口变更会影响太多客户端 难以测试：需要模拟不相关的方法 低内聚性：接口包含不相关的方法","s":"6. 违反ISP的后果","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#6-违反isp的后果","p":804},{"i":829,"t":"ISP鼓励小而专注的接口设计 客户端不应该被迫依赖它们不使用的方法 Go语言的隐式接口机制天然支持ISP 使用接口组合构建更复杂的抽象 按需定义接口，而不是预先创建大接口 好的接口设计应该像Unix工具一样 - 每个工具只做一件事，但做得很好。","s":"7. 总结","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#7-总结","p":804},{"i":832,"t":"里氏替换原则(Liskov Substitution Principle, LSP) 是SOLID原则中的第三个原则，由Barbara Liskov提出。其核心思想是： 如果S是T的子类型，那么程序中T类型的对象可以被替换为S类型的对象，而不会改变程序的任何期望属性。 在Go语言中，虽然没有传统意义上的继承，但通过**接口(interface)和嵌入(struct embedding)**同样需要遵循这一原则。","s":"1. 概述","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#1-概述","p":830},{"i":834,"t":"可替换性：子类型必须能够完全替代父类型 行为一致性：子类型不应改变父类型的预期行为 契约遵守：子类型必须遵守父类型的隐式契约","s":"2. 核心概念","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#2-核心概念","p":830},{"i":837,"t":"// 定义抽象接口 type Bird interface { Fly() string Sing() string } // 实现基类 type Sparrow struct{} func (s *Sparrow) Fly() string { return \"麻雀在飞翔\" } func (s *Sparrow) Sing() string { return \"麻雀在歌唱\" } // 实现子类 type Penguin struct{} func (p *Penguin) Fly() string { return \"企鹅不会飞\" // 违反LSP原则！ } func (p *Penguin) Sing() string { return \"企鹅在鸣叫\" } 问题分析：Penguin不能替换Bird，因为它改变了Fly()的预期行为","s":"3.1 通过接口实现LSP","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#31-通过接口实现lsp","p":830},{"i":839,"t":"// 更精确的接口定义 type Flyer interface { Fly() string } type Singer interface { Sing() string } // 会飞的鸟 type FlyingBird struct{} func (f *FlyingBird) Fly() string { return \"鸟儿在飞翔\" } // 麻雀 type Sparrow struct { FlyingBird } func (s *Sparrow) Sing() string { return \"麻雀在歌唱\" } // 企鹅 type Penguin struct{} func (p *Penguin) Sing() string { return \"企鹅在鸣叫\" }","s":"3.2 符合LSP的改进方案","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#32-符合lsp的改进方案","p":830},{"i":842,"t":"type PaymentProcessor interface { ProcessPayment(amount float64, currency string) error } // 基类实现 type BasicProcessor struct{} func (b *BasicProcessor) ProcessPayment(amount float64, currency string) error { if amount <= 0 { return errors.New(\"金额必须大于0\") } // 处理逻辑... } // 子类实现（违反LSP） type DiscountProcessor struct{} func (d *DiscountProcessor) ProcessPayment(amount float64, currency string) error { // 允许amount为0（削弱了前置条件） if amount < 0 { return errors.New(\"金额不能为负\") } // 处理逻辑... } 重构方案：保持前置条件不变或更强","s":"4.1 违反情况1：子类削弱前置条件","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#41-违反情况1子类削弱前置条件","p":830},{"i":844,"t":"type DataStorage interface { Save(data []byte) (string, error) // 返回存储ID } // 基类实现 type FileStorage struct{} func (f *FileStorage) Save(data []byte) (string, error) { id := generateID() // 保存到文件... return id, nil // 可能返回空ID } // 子类实现（违反LSP） type GuaranteedStorage struct{} func (g *GuaranteedStorage) Save(data []byte) (string, error) { if len(data) == 0 { return \"\", errors.New(\"空数据不允许\") // 强化了后置条件 } id := generateID() // 保存到文件... return \"GID-\" + id, nil // 改变了ID格式 } 重构方案：保持后置条件不变或更弱","s":"4.2 违反情况2：子类强化后置条件","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#42-违反情况2子类强化后置条件","p":830},{"i":847,"t":"golang 没有面相对象的继承用法 type Animal struct { name string } func (a *Animal) Eat() string { return a.name + \"在吃东西\" } // 正确方式：组合Animal type Dog struct { Animal } func (d *Dog) Bark() string { return \"汪汪汪\" } // 使用 dog := &Dog{Animal{name: \"阿黄\"}} fmt.Println(dog.Eat()) // 阿黄在吃东西 fmt.Println(dog.Bark()) // 汪汪汪","s":"5.1 使用组合代替继承","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#51-使用组合代替继承","p":830},{"i":849,"t":"// 大接口 type BigInterface interface { Method1() Method2() Method3() } // 客户端只需要Method1 type Client struct { dep interface { Method1() } }","s":"5.2 接口隔离加强","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#52-接口隔离加强","p":830},{"i":851,"t":"缓存系统：本地缓存、Redis缓存、Memcached缓存可互相替换 存储系统：文件存储、数据库存储、云存储可互相替换 支付网关：支付宝、微信支付、银联支付可互相替换 日志系统：文件日志、控制台日志、网络日志可互相替换","s":"6. LSP的实际应用场景","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#6-lsp的实际应用场景","p":830},{"i":853,"t":"LSP的核心是可替换性和行为一致性 在Go中主要通过接口设计和组合来实现 子类型必须： 不加强前置条件 不减弱后置条件 保持不变量 不抛出新的异常 违反LSP会导致难以发现的运行时错误 \"is-a\"关系不仅看语法，更要看行为语义 好的子类型扩展应该像插件一样工作 - 可以无缝替换基类而不破坏现有功能。","s":"7. 总结","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#7-总结","p":830},{"i":855,"t":"面向对象编程(OOP)有几个核心设计原则，这些原则有助于创建灵活、可维护和可扩展的软件系统。以下是主要的OOP设计原则：","s":"面向对象编程中的设计原则","u":"/docs/note/golang/design/oop_pinciple/principle","h":"","p":854},{"i":857,"t":"单一职责原则(SRP - Single Responsibility Principle) 一个类应该只有一个引起它变化的原因 每个类只负责一项职责 开闭原则(OCP - Open/Closed Principle) 软件实体(类、模块、函数等)应该对扩展开放，对修改关闭 通过抽象和继承实现新功能，而不是修改现有代码 里氏替换原则(LSP - Liskov Substitution Principle) 子类型必须能够替换它们的基类型 派生类不应改变基类的行为，只能扩展它 接口隔离原则(ISP - Interface Segregation Principle) 客户端不应被迫依赖它们不使用的接口 将大接口拆分为更小、更具体的接口 依赖倒置原则(DIP - Dependency Inversion Principle) 高层模块不应依赖低层模块，两者都应依赖抽象 抽象不应依赖细节，细节应依赖抽象","s":"SOLID原则","u":"/docs/note/golang/design/oop_pinciple/principle","h":"#solid原则","p":854},{"i":859,"t":"组合优于继承原则 优先使用对象组合而不是类继承来重用功能 提高灵活性，减少类层次结构的复杂性 迪米特法则(最少知识原则 - Law of Demeter) 一个对象应该对其他对象有最少的了解 只与直接的朋友通信，减少类之间的耦合 DRY原则(Don't Repeat Yourself) 避免重复代码 将重复逻辑提取到公共方法或类中 KISS原则(Keep It Simple, Stupid) 保持设计简单直接 避免不必要的复杂性 YAGNI原则(You Aren't Gonna Need It) 不要添加当前不需要的功能 避免过度设计","s":"其他重要原则","u":"/docs/note/golang/design/oop_pinciple/principle","h":"#其他重要原则","p":854},{"i":861,"t":"整体而言，开发过程中多使用接口编程，方便程序扩展。接口定义应该保持职责单一和小。 使用接口编程，可以降低程序直接到耦合度。便于替换接口后端。","s":"个人总结","u":"/docs/note/golang/design/oop_pinciple/principle","h":"#个人总结","p":854},{"i":864,"t":"单一职责原则(Single Responsibility Principle, SRP) 是SOLID原则中的第一个原则，由Robert C. Martin提出。其核心思想是： 一个类或模块应该只有一个引起它变化的原因。换句话说，一个类或模块应该只负责一项职责。 在Go语言中，这一原则主要应用于struct和interface的设计。","s":"1. 概述","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#1-概述","p":862},{"i":867,"t":"提高可维护性：修改一个功能不会影响其他不相关的功能 降低复杂度：每个结构体/接口只做一件事，更易于理解 增强可测试性：单一职责的组件更容易测试 提高复用性：细粒度的组件可以在更多场景中被复用","s":"优点：","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#优点","p":862},{"i":869,"t":"代码难以理解和维护 修改一个功能可能意外破坏其他功能 测试困难 难以复用","s":"违反SRP的后果：","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#违反srp的后果","p":862},{"i":872,"t":"// 违反SRP的例子：UserManager承担了太多职责 type UserManager struct { db *sql.DB } func (um *UserManager) CreateUser(user User) error { // 创建用户逻辑 _, err := um.db.Exec(\"INSERT INTO users (...) VALUES (...)\") return err } func (um *UserManager) SendWelcomeEmail(user User) error { // 发送欢迎邮件逻辑 return sendEmail(user.Email, \"Welcome!\", \"Welcome to our platform!\") } func (um *UserManager) GenerateReport() ([]byte, error) { // 生成用户报告逻辑 rows, err := um.db.Query(\"SELECT * FROM users\") // ...处理rows生成报告 return reportData, nil } 问题分析： 用户管理 邮件发送 报告生成 这三个完全不相关的功能被耦合在同一个结构体中","s":"3.1 违反SRP的例子","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#31-违反srp的例子","p":862},{"i":874,"t":"// 用户存储职责 type UserRepository struct { db *sql.DB } func (ur *UserRepository) Create(user User) error { _, err := ur.db.Exec(\"INSERT INTO users (...) VALUES (...)\") return err } func (ur *UserRepository) GetAll() ([]User, error) { rows, err := ur.db.Query(\"SELECT * FROM users\") // ...处理rows返回用户列表 return users, nil } // 邮件服务职责 type EmailService struct { smtpServer string } func (es *EmailService) SendWelcomeEmail(user User) error { return sendEmail(user.Email, \"Welcome!\", \"Welcome to our platform!\") } // 报告生成职责 type ReportGenerator struct { userRepo *UserRepository } func (rg *ReportGenerator) GenerateUserReport() ([]byte, error) { users, err := rg.userRepo.GetAll() // ...基于用户数据生成报告 return reportData, nil } 改进点： 将原来的UserManager拆分为三个独立的组件 每个组件只负责一项明确的职责 组件之间通过依赖注入协作","s":"3.2 遵循SRP的改进版本","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#32-遵循srp的改进版本","p":862},{"i":877,"t":"// 小而专注的接口 type UserStorer interface { Create(user User) error GetByID(id int) (*User, error) } type EmailSender interface { Send(to, subject, body string) error }","s":"4.1 接口设计","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#41-接口设计","p":862},{"i":879,"t":"type UserService struct { repo UserRepository email EmailService report ReportGenerator } func (us *UserService) RegisterNewUser(user User) error { if err := us.repo.Create(user); err != nil { return err } return us.email.SendWelcomeEmail(user) }","s":"4.2 组合代替继承","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#42-组合代替继承","p":862},{"i":881,"t":"// 不好的例子：函数做太多事情 func processUserData(data []byte) (User, error) { // 1. 验证数据 // 2. 解析数据 // 3. 保存到数据库 // 4. 发送通知 } // 好的例子：拆分为多个单一职责的函数 func validateUserData(data []byte) error {} func parseUserData(data []byte) (User, error) {} func saveUser(user User) error {} func notifyUserCreated(user User) error {}","s":"4.3 函数职责单一","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#43-函数职责单一","p":862},{"i":884,"t":"当一个结构体/接口变得庞大时 当修改一个功能会影响不相关功能时 当难以给结构体起一个准确的名称时(如UserManagerAndReportGenerator)","s":"应该应用SRP的情况：","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#应该应用srp的情况","p":862},{"i":886,"t":"对于简单的小型项目 对于确实紧密相关的功能 当拆分会导致不必要的复杂性时","s":"不必过度应用：","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#不必过度应用","p":862},{"i":888,"t":"SRP是编写可维护、可扩展代码的基础 在Go中，通过小而专注的结构体和接口来实现SRP 组合优于继承，依赖注入是实现SRP的好帮手 合理应用SRP，但避免过度设计 记住：让一个结构体/接口只为一个改变的理由而存在。","s":"6. 总结","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#6-总结","p":862},{"i":891,"t":"开闭原则(Open/Closed Principle, OCP) 是SOLID原则中的第二个原则，由Bertrand Meyer提出。其核心思想是： 软件实体（类、模块、函数等）应该对扩展开放，对修改关闭。 在Go语言中，这一原则主要通过**接口(interface)和组合(composition)**来实现。","s":"1. 概述","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#1-概述","p":889},{"i":893,"t":"对扩展开放：允许在不修改现有代码的情况下添加新功能 对修改关闭：现有代码应尽可能不被修改，以保持稳定性 抽象是关键：通过抽象建立灵活的基础结构","s":"2. 核心概念","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#2-核心概念","p":889},{"i":896,"t":"// 支付方式接口 - 抽象层 type PaymentMethod interface { Pay(amount float64) error } // 信用卡支付实现 type CreditCardPayment struct{} func (c *CreditCardPayment) Pay(amount float64) error { fmt.Printf(\"支付 %.2f 元使用信用卡\\n\", amount) return nil } // 支付宝支付实现 type AlipayPayment struct{} func (a *AlipayPayment) Pay(amount float64) error { fmt.Printf(\"支付 %.2f 元使用支付宝\\n\", amount) return nil } // 支付处理器 - 对修改关闭 type PaymentProcessor struct { method PaymentMethod } func (p *PaymentProcessor) ProcessPayment(amount float64) error { return p.method.Pay(amount) }","s":"3.1 使用接口实现OCP","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#31-使用接口实现ocp","p":889},{"i":898,"t":"// 新增微信支付 - 扩展而非修改 type WeChatPayment struct{} func (w *WeChatPayment) Pay(amount float64) error { fmt.Printf(\"支付 %.2f 元使用微信支付\\n\", amount) return nil } // 使用方式 func main() { processor := &PaymentProcessor{method: &WeChatPayment{}} processor.ProcessPayment(100.50) }","s":"3.2 添加新支付方式（扩展）","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#32-添加新支付方式扩展","p":889},{"i":901,"t":"type PaymentType int const ( CreditCard PaymentType = iota Alipay ) // 直接依赖具体实现 func ProcessPayment(paymentType PaymentType, amount float64) error { switch paymentType { case CreditCard: fmt.Printf(\"支付 %.2f 元使用信用卡\\n\", amount) case Alipay: fmt.Printf(\"支付 %.2f 元使用支付宝\\n\", amount) default: return fmt.Errorf(\"不支持的支付方式\") } return nil } 问题：每次新增支付方式都需要修改ProcessPayment函数","s":"4.1 违反OCP的代码","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#41-违反ocp的代码","p":889},{"i":903,"t":"// 使用接口抽象 type PaymentMethod interface { Pay(amount float64) error } // 注册支付方式的处理器 type PaymentHandler struct { methods map[string]PaymentMethod } func (h *PaymentHandler) Register(name string, method PaymentMethod) { h.methods[name] = method } func (h *PaymentHandler) Process(name string, amount float64) error { if method, ok := h.methods[name]; ok { return method.Pay(amount) } return fmt.Errorf(\"支付方式未注册\") }","s":"4.2 重构为符合OCP的代码","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#42-重构为符合ocp的代码","p":889},{"i":906,"t":"type Server struct { host string port int timeout time.Duration } type Option func(*Server) func WithHost(host string) Option { return func(s *Server) { s.host = host } } func WithPort(port int) Option { return func(s *Server) { s.port = port } } func NewServer(opts ...Option) *Server { s := &Server{ host: \"localhost\", port: 8080, timeout: 30 * time.Second, } for _, opt := range opts { opt(s) } return s }","s":"5.1 函数选项模式(Functional Options)","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#51-函数选项模式functional-options","p":889},{"i":908,"t":"type Handler func(http.ResponseWriter, *http.Request) func LoggingMiddleware(next Handler) Handler { return func(w http.ResponseWriter, r *http.Request) { log.Printf(\"请求开始: %s %s\", r.Method, r.URL.Path) next(w, r) log.Printf(\"请求结束: %s %s\", r.Method, r.URL.Path) } } func AuthMiddleware(next Handler) Handler { return func(w http.ResponseWriter, r *http.Request) { if r.Header.Get(\"Authorization\") == \"\" { http.Error(w, \"未授权\", http.StatusUnauthorized) return } next(w, r) } }","s":"5.2 中间件模式","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#52-中间件模式","p":889},{"i":910,"t":"支付系统（如上面的示例） 日志系统（文件日志、控制台日志、网络日志等） 数据存储（MySQL、MongoDB、Redis等） 通知系统（邮件、短信、微信通知等） 中间件管道（Web中间件、RPC拦截器等）","s":"6. OCP的实际应用场景","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#6-ocp的实际应用场景","p":889},{"i":912,"t":"控制台输出 文件输出 未来可以轻松添加网络日志","s":"7. OCP的日志系统","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#7-ocp的日志系统","p":889},{"i":914,"t":"7.1.1 定义日志接口（抽象层）​ // Logger 日志接口 - 核心抽象 type Logger interface { Log(level string, message string) error Close() error } 7.1.2 实现具体日志输出​ 控制台日志输出 // ConsoleLogger 控制台日志实现 type ConsoleLogger struct { // 可以添加需要的字段，如是否彩色输出等 } func NewConsoleLogger() *ConsoleLogger { return &ConsoleLogger{} } func (c *ConsoleLogger) Log(level string, message string) error { _, err := fmt.Printf(\"[%s] %s\\n\", level, message) return err } func (c *ConsoleLogger) Close() error { // 控制台日志无需关闭资源 return nil } 文件日志输出 // FileLogger 文件日志实现 type FileLogger struct { file *os.File } func NewFileLogger(filename string) (*FileLogger, error) { file, err := os.OpenFile(filename, os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0644) if err != nil { return nil, err } return &FileLogger{file: file}, nil } func (f *FileLogger) Log(level string, message string) error { _, err := fmt.Fprintf(f.file, \"[%s] %s %s\\n\", time.Now().Format(\"2006-01-02 15:04:05\"), level, message) return err } func (f *FileLogger) Close() error { return f.file.Close() }","s":"7.1 基础设计","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#71-基础设计","p":889},{"i":916,"t":"// CompositeLogger 组合多个日志输出 type CompositeLogger struct { loggers []Logger } func NewCompositeLogger(loggers ...Logger) *CompositeLogger { return &CompositeLogger{loggers: loggers} } func (c *CompositeLogger) Log(level string, message string) error { for _, logger := range c.loggers { if err := logger.Log(level, message); err != nil { return err } } return nil } func (c *CompositeLogger) Close() error { for _, logger := range c.loggers { if err := logger.Close(); err != nil { return err } } return nil }","s":"7.2 组合日志器（支持多种输出）","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#72-组合日志器支持多种输出","p":889},{"i":918,"t":"// LoggerType 定义日志类型 type LoggerType string const ( LoggerConsole LoggerType = \"console\" LoggerFile LoggerType = \"file\" // 未来可以添加 LoggerNetwork ) // LoggerConfig 日志配置 type LoggerConfig struct { Type LoggerType FilePath string // 仅文件日志需要 } // NewLoggerFromConfig 根据配置创建日志器 func NewLoggerFromConfig(config LoggerConfig) (Logger, error) { switch config.Type { case LoggerConsole: return NewConsoleLogger(), nil case LoggerFile: return NewFileLogger(config.FilePath) default: return nil, fmt.Errorf(\"未知的日志类型: %s\", config.Type) } }","s":"7.3 使用工厂方法创建日志器","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#73-使用工厂方法创建日志器","p":889},{"i":920,"t":"未来需要添加网络日志时，只需新增实现，无需修改现有代码： // NetworkLogger 网络日志实现 type NetworkLogger struct { endpoint string client *http.Client } func NewNetworkLogger(endpoint string) *NetworkLogger { return &NetworkLogger{ endpoint: endpoint, client: &http.Client{Timeout: 5 * time.Second}, } } func (n *NetworkLogger) Log(level string, message string) error { data := map[string]string{ \"level\": level, \"message\": message, \"time\": time.Now().Format(time.RFC3339), } jsonData, _ := json.Marshal(data) resp, err := n.client.Post(n.endpoint, \"application/json\", bytes.NewBuffer(jsonData)) if err != nil { return err } defer resp.Body.Close() if resp.StatusCode >= 400 { return fmt.Errorf(\"日志服务器返回错误状态码: %d\", resp.StatusCode) } return nil } func (n *NetworkLogger) Close() error { // 可以在这里关闭长连接等资源 return nil }","s":"7.4 添加网络日志输出（扩展示例）","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#74-添加网络日志输出扩展示例","p":889},{"i":922,"t":"func main() { // 创建控制台日志器 consoleLogger := NewConsoleLogger() // 创建文件日志器 fileLogger, err := NewFileLogger(\"app.log\") if err != nil { panic(err) } // 创建组合日志器 compositeLogger := NewCompositeLogger(consoleLogger, fileLogger) // 使用日志 compositeLogger.Log(\"INFO\", \"应用程序启动\") compositeLogger.Log(\"WARN\", \"这是一个警告信息\") compositeLogger.Log(\"ERROR\", \"发生了一个错误\") // 关闭所有日志器 if err := compositeLogger.Close(); err != nil { fmt.Printf(\"关闭日志器时出错: %v\\n\", err) } // 未来添加网络日志 networkLogger := NewNetworkLogger(\"http://log-server.example.com/log\") extendedLogger := NewCompositeLogger(consoleLogger, fileLogger, networkLogger) extendedLogger.Log(\"INFO\", \"这条日志会输出到控制台、文件和网络\") extendedLogger.Close() }","s":"7.5 完整使用示例","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#75-完整使用示例","p":889},{"i":924,"t":"OCP的核心是通过抽象来隔离变化 在Go中主要使用接口和组合来实现OCP 函数选项模式和中间件模式是实践OCP的优雅方式 平衡原则：不要过度设计，只为预期的变化做抽象 好的设计应该像插件系统一样工作 - 通过添加新代码而非修改现有代码来扩展功能。","s":"8. 总结","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#8-总结","p":889},{"i":927,"t":"工厂模式是一种创建型设计模式，目的是将对象的创建过程与使用过程分离，从而降低代码耦合、增强扩展性。 在 Go 中，虽然没有类和继承，但可以通过接口 + 工厂函数/结构来实现相同思想。","s":"1. 概述","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#1-概述","p":925},{"i":930,"t":"package main import \"fmt\" // 接口 type Shape interface { Draw() } // 实现类 type Circle struct{} func (c Circle) Draw() { fmt.Println(\"Drawing Circle\") } type Square struct{} func (s Square) Draw() { fmt.Println(\"Drawing Square\") } // 简单工厂 func ShapeFactory(shapeType string) Shape { switch shapeType { case \"circle\": return Circle{} case \"square\": return Square{} default: return nil } } func main() { s1 := ShapeFactory(\"circle\") s2 := ShapeFactory(\"square\") s1.Draw() s2.Draw() }","s":"2.1 示例：图形创建器","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#21-示例图形创建器","p":925},{"i":932,"t":"// 连接接口 type Conn interface { Send([]byte) error Receive() ([]byte, error) } // 简单工厂实现 func NewConn(network string, addr string) (Conn, error) { switch network { case \"tcp\": return &TCPConn{addr: addr}, nil case \"unix\": return &UnixConn{path: addr}, nil case \"http\": return &HTTPConn{url: addr}, nil default: return nil, fmt.Errorf(\"unsupported network\") } } // 使用示例 func main() { conn, _ := NewConn(\"http\", \"https://api.example.com\") conn.Send([]byte(\"GET /\")) }","s":"2.2 示例：网络连接","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#22-示例网络连接","p":925},{"i":934,"t":"✅ 简单直接，适合小规模使用 ❌ 增加新类型要修改工厂，违反开闭原则（OCP）","s":"2.3 优缺点","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#23-优缺点","p":925},{"i":937,"t":"package main import \"fmt\" // 接口 type DBConnector interface { Connect() } // 实现 type MySQLConnector struct{} func (m MySQLConnector) Connect() { fmt.Println(\"MySQL connected\") } type PostgresConnector struct{} func (p PostgresConnector) Connect() { fmt.Println(\"Postgres connected\") } // 工厂接口 type DBFactory interface { CreateConnector() DBConnector } // 实现工厂 type MySQLFactory struct{} func (f MySQLFactory) CreateConnector() DBConnector { return MySQLConnector{} } type PostgresFactory struct{} func (f PostgresFactory) CreateConnector() DBConnector { return PostgresConnector{} } func main() { var factory DBFactory factory = MySQLFactory{} conn := factory.CreateConnector() conn.Connect() factory = PostgresFactory{} conn = factory.CreateConnector() conn.Connect() }","s":"3.1 示例：数据库连接器","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#31-示例数据库连接器","p":925},{"i":939,"t":"// 日志接口 type Logger interface { Log(level string, msg string) } // 工厂接口 type LoggerFactory interface { Create() Logger } // 文件日志实现 type FileLogger struct { path string } func (f *FileLogger) Log(level, msg string) { // 实现文件写入 } type FileLoggerFactory struct { path string } func (f *FileLoggerFactory) Create() Logger { return &FileLogger{path: f.path} } // 控制台日志实现 type ConsoleLogger struct{} func (c *ConsoleLogger) Log(level, msg string) { fmt.Printf(\"[%s] %s\\n\", level, msg) } type ConsoleLoggerFactory struct{} func (f *ConsoleLoggerFactory) Create() Logger { return &ConsoleLogger{} } // 使用示例 func getLoggerFactory(env string) LoggerFactory { if env == \"production\" { return &FileLoggerFactory{path: \"/var/log/app.log\"} } return &ConsoleLoggerFactory{} } func main() { factory := getLoggerFactory(os.Getenv(\"APP_ENV\")) logger := factory.Create() logger.Log(\"INFO\", \"application started\") }","s":"3.2 示例：日志系统","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#32-示例日志系统","p":925},{"i":941,"t":"✅ 遵循开闭原则，新增类型无需改旧代码 ❌ 类（结构）增多，代码结构复杂","s":"3.3 优缺点","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#33-优缺点","p":925},{"i":944,"t":"package main import \"fmt\" // 产品接口族 type Button interface { Paint() } type Textbox interface { Draw() } // Windows 系列 type WindowsButton struct{} func (WindowsButton) Paint() { fmt.Println(\"Windows Button\") } type WindowsTextbox struct{} func (WindowsTextbox) Draw() { fmt.Println(\"Windows Textbox\") } // Mac 系列 type MacButton struct{} func (MacButton) Paint() { fmt.Println(\"Mac Button\") } type MacTextbox struct{} func (MacTextbox) Draw() { fmt.Println(\"Mac Textbox\") } // 抽象工厂接口 type GUIFactory interface { CreateButton() Button CreateTextbox() Textbox } // 具体工厂 type WindowsFactory struct{} func (WindowsFactory) CreateButton() Button { return WindowsButton{} } func (WindowsFactory) CreateTextbox() Textbox { return WindowsTextbox{} } type MacFactory struct{} func (MacFactory) CreateButton() Button { return MacButton{} } func (MacFactory) CreateTextbox() Textbox { return MacTextbox{} } // 使用 func main() { var factory GUIFactory factory = WindowsFactory{} factory.CreateButton().Paint() factory.CreateTextbox().Draw() factory = MacFactory{} factory.CreateButton().Paint() factory.CreateTextbox().Draw() }","s":"4.1 示例：UI 工厂（按钮 + 文本框）","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#41-示例ui-工厂按钮--文本框","p":925},{"i":946,"t":"✅ 保证一组产品的一致性（同属一个系统） ❌ 扩展产品族困难（需要修改接口）","s":"4.2 优缺点","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#42-优缺点","p":925},{"i":948,"t":"package main import \"fmt\" type Animal interface { Speak() } type Dog struct{} func (Dog) Speak() { fmt.Println(\"Woof!\") } type Cat struct{} func (Cat) Speak() { fmt.Println(\"Meow!\") } var animalRegistry = make(map[string]func() Animal) func RegisterAnimal(name string, factory func() Animal) { animalRegistry[name] = factory } func GetAnimal(name string) Animal { if f, ok := animalRegistry[name]; ok { return f() } return nil } func main() { RegisterAnimal(\"dog\", func() Animal { return Dog{} }) RegisterAnimal(\"cat\", func() Animal { return Cat{} }) GetAnimal(\"dog\").Speak() GetAnimal(\"cat\").Speak() }","s":"5. 函数式工厂（Functional Factory）","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#5-函数式工厂functional-factory","p":925},{"i":950,"t":"✅ 高度解耦，便于插件化开发 ✅ 新增产品无需改动旧工厂逻辑","s":"5.1 优点","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#51-优点","p":925},{"i":952,"t":"✅ 日志、数据库、配置适配器 ✅ 插件系统、驱动层抽象 ✅ UI 工具包的主题/皮肤切换","s":"6.  工厂模式应用场景","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#6--工厂模式应用场景","p":925},{"i":954,"t":"类型 是否可扩展 简洁性 应用范围 简单工厂 ❌ 不易扩展 ✅ 小项目 工厂方法 ✅ ✅ 通用 抽象工厂 ✅（产品） ❌ 系列产品 函数式注册 ✅ ✅ 插件式架构","s":"7. 小结对比","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#7-小结对比","p":925},{"i":957,"t":"ide 警告找不到方法，但是又可以通过跳转找到对应的方法。在ide运行，手动运行也正常。 问题原因 识别到的库版本出现了差异，出现了版本不兼容的问题。 可以通过 go.mod 强行指定版本。 清理goland缓存。 有可能是ide的索引损坏了。可以通过点击菜单栏File -> Invalidate Caches / Restart...，选择 Invalidate and Restart重新生成索引。","s":"1. ide 警告找不到方法","u":"/docs/note/golang/goland","h":"#1-ide-警告找不到方法","p":955},{"i":960,"t":"在 Go 中，错误处理通常有两种方式：","s":"错误处理","u":"/docs/note/golang/jotting","h":"#错误处理","p":958},{"i":962,"t":"使用返回值返回一个 error 类型： func doSomething() (Result, error) { // ... }","s":"普通函数","u":"/docs/note/golang/jotting","h":"#普通函数","p":958},{"i":964,"t":"一种方式是像普通函数一样，直接返回一个 error。 另一种做法是，在结构体中增加一个 error 字段，在方法中设置这个字段的值。 type MyService struct { err error } func (s *MyService) Do() { // ... s.err = errors.New(\"something went wrong\") }","s":"结构体方法","u":"/docs/note/golang/jotting","h":"#结构体方法","p":958},{"i":966,"t":"在 Go 中，chan 是处理并发的核心工具之一，但并不是所有场景都适合使用它。以下是使用 chan 的建议与注意事项：","s":"Go 中何时使用 chan","u":"/docs/note/golang/jotting","h":"#go-中何时使用-chan","p":958},{"i":968,"t":"1. 异步操作 / 并发任务​ 函数中开启 goroutine 异步执行任务，通过返回的 chan 返回结果： func asyncAdd(a, b int) <-chan int { result := make(chan int) go func() { result <- a + b close(result) }() return result } 2. 流式数据传递​ 当函数生成一系列数据（如读取文件、流数据、分页 API 等），使用 chan 可以边生成边消费： func generate(n int) <-chan int { out := make(chan int) go func() { for i := 0; i < n; i++ { out <- i } close(out) }() return out } 3. 信号同步​ 当只需传递一个“完成”或“信号”，可以使用 chan struct{}： done := make(chan struct{}) go func() { // 做一些事 done <- struct{}{} }() <-done","s":"✅ 推荐使用的场景","u":"/docs/note/golang/jotting","h":"#-推荐使用的场景","p":958},{"i":970,"t":"只为传递一个返回值时：返回值即可，无需增加复杂度。 同步计算场景：没必要用 chan 包装同步调用。 为“函数式编程”风格强行引入 chan：Go 强调简洁，不宜滥用。","s":"❌ 不推荐的场景","u":"/docs/note/golang/jotting","h":"#-不推荐的场景","p":958},{"i":972,"t":"当你遇到如下报错： verifying module: invalid GOSUMDB: malformed verifier id 可能是 go.sum 校验失败。检查环境变量如下： $ go env GOSUMDB sum.golang.org $ go env GOPROXY https://goproxy.cn,direct 可尝试： 清空 go.sum 后重新运行 go mod tidy 切换 GOPROXY 为官方代理或关闭校验：GOSUMDB=off","s":"go mod tidy 报错 GOSUMDB","u":"/docs/note/golang/jotting","h":"#go-mod-tidy-报错-gosumdb","p":958},{"i":974,"t":"在 Go 中，空接口 interface{} 表示任意类型，类似于 Java 的 Object，但更加简洁高效。","s":"空接口 interface{} 与任意类型","u":"/docs/note/golang/jotting","h":"#空接口-interface-与任意类型","p":958},{"i":976,"t":"var arr = [3]int{1, 2, 3} value, ok := interface{}(arr).([3]int) ok 为 true 表示类型断言成功，value 即具体类型。 否则 ok 为 false。","s":"类型断言与转换","u":"/docs/note/golang/jotting","h":"#类型断言与转换","p":958},{"i":978,"t":"不占内存空间 在并发中常用于信号传递 ch := make(chan struct{}) ch <- struct{}{}","s":"空结构体 struct{}","u":"/docs/note/golang/jotting","h":"#空结构体-struct","p":958},{"i":980,"t":"Go 支持在 if 条件前定义变量： if n := \"abc\"; x < 0 { println(n[1]) } 等价于： n := \"abc\" if x < 0 { println(n[1]) } 注意：else if 与 else 的左大括号应与条件语句在同一行。","s":"if 判断语法简化","u":"/docs/note/golang/jotting","h":"#if-判断语法简化","p":958},{"i":983,"t":"kingpin 是一个用于解析命令行参数的 Golang 库，提供类似 flag 但更强大和直观的 API，支持子命令、默认值、环境变量等。","s":"1. 简介","u":"/docs/note/golang/kingpin","h":"#1-简介","p":981},{"i":985,"t":"go get github.com/alecthomas/kingpin","s":"2. 安装","u":"/docs/note/golang/kingpin","h":"#2-安装","p":981},{"i":988,"t":"kingpin 提供了默认的 kingpin.CommandLine，可以直接使用全局方法定义参数。 package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) var ( name = kingpin.Flag(\"name\", \"输入你的名字。\").Short('n').Default(\"World\").String() age = kingpin.Flag(\"age\", \"输入你的年龄。\").Int() ) func main() { kingpin.Parse() fmt.Printf(\"Hello %s! You are %d years old.\\n\", *name, *age) } 运行示例： ./example --name=Alice --age=30","s":"3.1 使用默认 App","u":"/docs/note/golang/kingpin","h":"#31-使用默认-app","p":981},{"i":990,"t":"package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"example\", \"示例应用程序。\") name := app.Flag(\"name\", \"输入你的名字。\").Short('n').Default(\"World\").String() age := app.Flag(\"age\", \"输入你的年龄。\").Int() kingpin.MustParse(app.Parse(os.Args[1:])) fmt.Printf(\"Hello %s! You are %d years old.\\n\", *name, *age) } 运行示例： ./example --name=Alice --age=30","s":"3.2 定义命令行参数（使用 New 方法）","u":"/docs/note/golang/kingpin","h":"#32-定义命令行参数使用-new-方法","p":981},{"i":992,"t":"package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"app\", \"一个支持子命令的示例。\") // 定义子命令 `greet` greetCmd := app.Command(\"greet\", \"打招呼。\") name := greetCmd.Flag(\"name\", \"你的名字。\").Default(\"World\").String() // 定义子命令 `bye` byeCmd := app.Command(\"bye\", \"告别。\") goodbye := byeCmd.Flag(\"message\", \"告别消息。\").Default(\"Goodbye!\").String() switch kingpin.MustParse(app.Parse(os.Args[1:])) { case greetCmd.FullCommand(): fmt.Printf(\"Hello, %s!\\n\", *name) case byeCmd.FullCommand(): fmt.Println(*goodbye) } } 运行示例： ./app greet --name=Bob ./app bye --message=\"See you!\"","s":"3.3 使用子命令","u":"/docs/note/golang/kingpin","h":"#33-使用子命令","p":981},{"i":994,"t":"package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"env-example\", \"示例环境变量支持。\") name := app.Flag(\"name\", \"你的名字。\").Envar(\"USER_NAME\").Default(\"Anonymous\").String() kingpin.MustParse(app.Parse(os.Args[1:])) fmt.Println(\"Hello,\", *name) } 运行示例： export USER_NAME=Charlie ./env-example","s":"3.4 绑定环境变量","u":"/docs/note/golang/kingpin","h":"#34-绑定环境变量","p":981},{"i":996,"t":"package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"bool-flag\", \"布尔标志示例。\") verbose := app.Flag(\"verbose\", \"开启详细模式。\").Short('v').Bool() kingpin.MustParse(app.Parse(os.Args[1:])) if *verbose { fmt.Println(\"Verbose mode enabled\") } else { fmt.Println(\"Verbose mode disabled\") } } 运行示例： ./bool-flag --verbose ./bool-flag -v","s":"3.5 处理布尔标志","u":"/docs/note/golang/kingpin","h":"#35-处理布尔标志","p":981},{"i":998,"t":"package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"list-example\", \"解析列表参数示例。\") items := app.Flag(\"items\", \"输入多个项。\").Strings() kingpin.MustParse(app.Parse(os.Args[1:])) fmt.Println(\"Items:\", *items) } 运行示例： ./list-example --items=apple --items=banana --items=cherry","s":"3.6 解析列表参数","u":"/docs/note/golang/kingpin","h":"#36-解析列表参数","p":981},{"i":1001,"t":"可以使用 kingpin.Action() 在解析参数后执行特定逻辑。 package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"custom-action\", \"示例：使用自定义解析逻辑。\") name := app.Flag(\"name\", \"输入你的名字。\").String() app.Action(func(c *kingpin.ParseContext) error { fmt.Println(\"解析完成，欢迎\", *name) return nil }) kingpin.MustParse(app.Parse(os.Args[1:])) }","s":"4.1 自定义解析器","u":"/docs/note/golang/kingpin","h":"#41-自定义解析器","p":981},{"i":1003,"t":"kingpin 提供了一种简单易用且功能强大的命令行解析方式，适用于各种 CLI 应用。","s":"5. 总结","u":"/docs/note/golang/kingpin","h":"#5-总结","p":981},{"i":1005,"t":"✅ 支持子命令 ✅ 支持环境变量 ✅ 友好的 API 设计 ✅ 丰富的参数类型支持 ✅ 自动生成帮助文档 如果需要构建复杂的命令行工具，kingpin 是一个值得推荐的选择。","s":"特点总结","u":"/docs/note/golang/kingpin","h":"#特点总结","p":981},{"i":1008,"t":"Golang 标准库提供 encoding/json 包，可用于解析和生成 JSON 数据。 示例：解析 JSON 到 map[string]interface{} package main import ( \"encoding/json\" \"fmt\" ) func main() { jsonData := `{\"name\": \"Alice\", \"age\": 25}` var result map[string]interface{} err := json.Unmarshal([]byte(jsonData), &result) if err != nil { fmt.Println(\"Error:\", err) return } fmt.Println(\"Name:\", result[\"name\"].(string)) fmt.Println(\"Age:\", result[\"age\"].(float64)) } 优缺点对比 优点 缺点 官方库，稳定可靠 需要手动类型断言 无需额外依赖 性能相对较低 适用于简单 JSON 解析 解析大 JSON 结构时性能不足","s":"1. Golang 默认 JSON 解析 (encoding/json)","u":"/docs/note/golang/json","h":"#1-golang-默认-json-解析-encodingjson","p":1006},{"i":1011,"t":"安装： go get github.com/tidwall/gjson 示例： package main import ( \"fmt\" \"github.com/tidwall/gjson\" ) func main() { jsonData := `{\"name\": \"Alice\", \"age\": 25}` if !gjson.Valid(jsonData) { fmt.Println(\"Invalid JSON data\") return } if gjson.Get(jsonData, \"name\").Exists() { fmt.Println(\"Name field exists\") } else { fmt.Println(\"Name field does not exist\") } name := gjson.Get(jsonData, \"name\") age := gjson.Get(jsonData, \"age\").Int() fmt.Println(\"Name:\", name.String()) fmt.Println(\"Age:\", age) }","s":"2.1 github.com/tidwall/gjson（高效 JSON 读取）","u":"/docs/note/golang/json","h":"#21-githubcomtidwallgjson高效-json-读取","p":1006},{"i":1013,"t":"优点 缺点 解析速度快 不能修改 JSON 支持 JSONPath 查询 适用于只读场景 代码简洁 -","s":"优缺点对比","u":"/docs/note/golang/json","h":"#优缺点对比","p":1006},{"i":1015,"t":"安装： go get github.com/json-iterator/go 示例： package main import ( \"fmt\" jsoniter \"github.com/json-iterator/go\" ) func main() { var json = jsoniter.ConfigCompatibleWithStandardLibrary jsonData := `{\"name\": \"Alice\", \"age\": 25}` var result map[string]interface{} json.Unmarshal([]byte(jsonData), &result) fmt.Println(\"Name:\", result[\"name\"]) fmt.Println(\"Age:\", result[\"age\"]) }","s":"2.2 github.com/json-iterator/go（高性能 JSON 解析）","u":"/docs/note/golang/json","h":"#22-githubcomjson-iteratorgo高性能-json-解析","p":1006},{"i":1017,"t":"优点 缺点 兼容 encoding/json，可直接替换 解析 JSON 数组不如 gjson 简洁 性能比 encoding/json 高 -","s":"优缺点对比","u":"/docs/note/golang/json","h":"#优缺点对比-1","p":1006},{"i":1019,"t":"安装： go get github.com/buger/jsonparser 示例： package main import ( \"fmt\" \"github.com/buger/jsonparser\" ) func main() { jsonData := []byte(`{\"name\": \"Alice\", \"age\": 25}`) name, _ := jsonparser.GetString(jsonData, \"name\") age, _ := jsonparser.GetInt(jsonData, \"age\") fmt.Println(\"Name:\", name) fmt.Println(\"Age:\", age) }","s":"2.3 github.com/buger/jsonparser（流式 JSON 解析）","u":"/docs/note/golang/json","h":"#23-githubcombugerjsonparser流式-json-解析","p":1006},{"i":1021,"t":"优点 缺点 适用于大 JSON 文件解析 不能修改 JSON 直接操作 []byte，性能高 代码较 gjson 复杂","s":"优缺点对比","u":"/docs/note/golang/json","h":"#优缺点对比-2","p":1006},{"i":1023,"t":"库 适用场景 优势 劣势 encoding/json 普通 JSON 解析 官方库，稳定 解析速度较慢，需要类型断言 gjson 只读 JSON 数据 语法简洁，性能高 不能修改 JSON json-iterator/go 高性能 JSON 解析 可直接替换标准库 解析 JSON 数组较繁琐 buger/jsonparser 解析大 JSON 直接操作 []byte，流式解析 代码较复杂","s":"3. JSON 解析库对比","u":"/docs/note/golang/json","h":"#3-json-解析库对比","p":1006},{"i":1025,"t":"只读取 JSON 数据（不修改）：✅ gjson 需要高性能 JSON 解析：✅ json-iterator/go 解析大 JSON 文件（如日志）：✅ buger/jsonparser 通用解析（兼容性好）：✅ encoding/json 根据具体需求选择合适的库，以提高 JSON 处理效率。","s":"总结与推荐","u":"/docs/note/golang/json","h":"#总结与推荐","p":1006},{"i":1028,"t":"在 Golang 中，序列化（Serialization）和反序列化（Deserialization）是数据持久化和网络传输的关键技术。默认情况下，encoding/json 标准库可以处理大部分常见的 JSON 数据格式。但在复杂业务场景中，我们可能需要对数据格式、字段校验、嵌套类型等进行定制化处理。 本培训文档旨在介绍如何通过实现 json.Marshaler 和 json.Unmarshaler 接口，实现对自定义类型的灵活处理，涵盖常见及进阶场景。","s":"1. 引言","u":"/docs/note/golang/serialization","h":"#1-引言","p":1026},{"i":1031,"t":"import \"encoding/json\" func main() { p := Person{\"Alice\", 30} // 序列化 data, err := json.Marshal(p) // 反序列化 var p2 Person err = json.Unmarshal(data, &p2) }","s":"2.1 JSON序列化","u":"/docs/note/golang/serialization","h":"#21-json序列化","p":1026},{"i":1033,"t":"type Product struct { ID int `json:\"id\"` Name string `json:\"name\"` CreatedAt time.Time `json:\"created_at,omitempty\"` }","s":"2.2 结构体标签","u":"/docs/note/golang/serialization","h":"#22-结构体标签","p":1026},{"i":1035,"t":"通过实现 json.Marshaler 接口，可以自定义对象转换为 JSON 的逻辑。类似的，通过实现yaml.Marshaler接口，可以自定义对象转化为 yaml的逻辑。 接口实现中，还可以增加校验规则，实现类似validate的效果 type Person struct { Name string Age int } // 自定义反序列化，加入数据校验 func (p *Person) UnmarshalJSON(data []byte) error { var temp struct { FullName string `json:\"full_name\"` Age int `json:\"age\"` } if err := json.Unmarshal(data, &temp); err != nil { return err } if temp.Age < 0 || temp.Age > 150 { return errors.New(\"age must be between 0 and 150\") }","s":"3. 自定义类型序列化","u":"/docs/note/golang/serialization","h":"#3-自定义类型序列化","p":1026},{"i":1037,"t":"type CustomDate time.Time func (cd CustomDate) MarshalJSON() ([]byte, error) { return json.Marshal(time.Time(cd).Format(\"2006-01-02\")) }","s":"3.1 实现Marshaler接口","u":"/docs/note/golang/serialization","h":"#31-实现marshaler接口","p":1026},{"i":1039,"t":"func (cd *CustomDate) UnmarshalJSON(data []byte) error { var s string if err := json.Unmarshal(data, &s); err != nil { return err } t, err := time.Parse(\"2006-01-02\", s) if err != nil { return err } *cd = CustomDate(t) return nil }","s":"3.2 实现Unmarshaler接口","u":"/docs/note/golang/serialization","h":"#32-实现unmarshaler接口","p":1026},{"i":1042,"t":"type Order struct { ID int `json:\"id\"` Products []Product `json:\"products\"` Date CustomDate `json:\"date\"` }","s":"4.1 嵌套结构体","u":"/docs/note/golang/serialization","h":"#41-嵌套结构体","p":1026},{"i":1044,"t":"type Shape interface { Area() float64 } type Circle struct { Radius float64 `json:\"radius\"` } func (c Circle) Area() float64 { return math.Pi * c.Radius * c.Radius } // 自定义序列化逻辑 func (c *Circle) MarshalJSON() ([]byte, error) { type Alias Circle return json.Marshal(&struct { Type string `json:\"type\"` *Alias }{ Type: \"circle\", Alias: (*Alias)(c), }) }","s":"4.2 接口类型处理","u":"/docs/note/golang/serialization","h":"#42-接口类型处理","p":1026},{"i":1047,"t":"var bufferPool = sync.Pool{ New: func() interface{} { return new(bytes.Buffer) }, } func MarshalWithPool(v interface{}) ([]byte, error) { buf := bufferPool.Get().(*bytes.Buffer) defer bufferPool.Put(buf) buf.Reset() encoder := json.NewEncoder(buf) if err := encoder.Encode(v); err != nil { return nil, err } return buf.Bytes(), nil }","s":"5.1 使用缓冲池","u":"/docs/note/golang/serialization","h":"#51-使用缓冲池","p":1026},{"i":1049,"t":"json-iterator: 兼容标准库的高性能实现 easyjson: 代码生成方案 protobuf: 二进制序列化方案","s":"5.2 使用第三方库","u":"/docs/note/golang/serialization","h":"#52-使用第三方库","p":1026},{"i":1052,"t":"type Node struct { Value int `json:\"value\"` Next *Node `json:\"next,omitempty\"` // 使用omitempty避免无限递归 }","s":"6.1 循环引用问题","u":"/docs/note/golang/serialization","h":"#61-循环引用问题","p":1026},{"i":1054,"t":"type Timestamp time.Time func (t *Timestamp) UnmarshalJSON(b []byte) error { s := strings.Trim(string(b), \"\\\"\") tm, err := time.Parse(time.RFC3339, s) if err != nil { return err } *t = Timestamp(tm) return nil }","s":"6.2 时间格式处理","u":"/docs/note/golang/serialization","h":"#62-时间格式处理","p":1026},{"i":1057,"t":"func TestCustomDate_MarshalJSON(t *testing.T) { cd := CustomDate(time.Date(2023, 1, 1, 0, 0, 0, 0, time.UTC)) data, err := json.Marshal(cd) assert.Nil(t, err) assert.Equal(t, `\"2023-01-01\"`, string(data)) } func TestCustomDate_UnmarshalJSON(t *testing.T) { var cd CustomDate err := json.Unmarshal([]byte(`\"2023-01-01\"`), &cd) assert.Nil(t, err) assert.Equal(t, 2023, time.Time(cd).Year()) }","s":"7.1 单元测试示例","u":"/docs/note/golang/serialization","h":"#71-单元测试示例","p":1026},{"i":1059,"t":"始终处理错误返回值 对敏感字段使用json:\"-\" 使用omitempty处理可选字段 对大对象使用流式处理（json.Decoder） 避免在Marshal/Unmarshal方法中修改共享状态","s":"8. 最佳实践","u":"/docs/note/golang/serialization","h":"#8-最佳实践","p":1026},{"i":1061,"t":"package main import ( \"encoding/json\" \"fmt\" \"time\" ) type CustomDate time.Time func (cd CustomDate) MarshalJSON() ([]byte, error) { return json.Marshal(time.Time(cd).Format(\"2006-01-02\")) } func (cd *CustomDate) UnmarshalJSON(data []byte) error { var s string if err := json.Unmarshal(data, &s); err != nil { return err } t, err := time.Parse(\"2006-01-02\", s) if err != nil { return err } *cd = CustomDate(t) return nil } type Event struct { Name string `json:\"name\"` EventDate CustomDate `json:\"event_date\"` } func main() { event := Event{ Name: \"Go Conference\", EventDate: CustomDate(time.Now()), } data, _ := json.Marshal(event) fmt.Println(string(data)) // {\"name\":\"Go Conference\",\"event_date\":\"2023-07-20\"} var newEvent Event _ = json.Unmarshal(data, &newEvent) fmt.Printf(\"%+v\\n\", newEvent) // {Name:Go Conference EventDate:2023-07-20 00:00:00 +0000 UTC} } secret 密码示例: package web import ( \"encoding/json\" \"errors\" ) /* * Secret 用于存储敏感信息的结构体，实现 yaml.Marshaler、json.Marshaler、yaml.Unmarshaler、json.Unmarshaler 接口， * 用于在 YAML 和 JSON 文件中隐藏敏感信息，并实现加密和解密功能。 * 我们在开发中，对需要yaml，和json处理的数据，可以采用类似的方法 */ // Secret 用于存储敏感信息的结构体 type Secret struct { value string } // NewSecret 创建新的 Secret func NewSecret(val string) Secret { return Secret{value: val} } // MarshalYAML 实现 yaml.Marshaler 接口 func (s Secret) MarshalYAML() (interface{}, error) { //if s.value != \"\" { // return \"<secret>\", nil //} //return nil, nil return \"<secret>\", nil } // MarshalJSON 实现 json.Marshaler 接口 func (s Secret) MarshalJSON() ([]byte, error) { return []byte(\"<secret>\"), nil } // UnmarshalYAML 实现 yaml.Unmarshaler 接口 func (s *Secret) UnmarshalYAML(unmarshal func(interface{}) error) error { if s == nil { return errors.New(\"cannot unmarshal into nil Secret\") } // 可以通过定义一个中间类型，如 plain，来避免递归调用 //type plain Secret // 定义 plain 为 Secret 的别名 //return unmarshal((*plain)(s)) // 将 s 转换为 *plain 类型，避免递归调用 // 也可以直接定义一个string变量，然后通过json.Unmarshal()方法将数据解析到该变量中 // 这样相当于调用的是string 的unmarshal方法,避免了递归调用 var raw string if err := unmarshal(&raw); err != nil { return err } s.value = raw return nil } // UnmarshalJSON 实现 json.Unmarshaler 接口 func (s *Secret) UnmarshalJSON(data []byte) error { if s == nil { return errors.New(\"cannot unmarshal into nil Secret\") } var raw string if err := json.Unmarshal(data, &raw); err != nil { return err } s.value = raw return nil } // Get 返回实际值，减少直接暴露 func (s Secret) Get() string { return s.value }","s":"附录：完整示例","u":"/docs/note/golang/serialization","h":"#附录完整示例","p":1026},{"i":1064,"t":"validator 是 Go 语言中一个强大的数据验证库，它提供结构体字段标签验证功能，并支持自定义验证规则。","s":"1. 简介","u":"/docs/note/golang/validator","h":"#1-简介","p":1062},{"i":1066,"t":"go get github.com/go-playground/validator/v10","s":"2. 安装","u":"/docs/note/golang/validator","h":"#2-安装","p":1062},{"i":1068,"t":"package main import ( \"fmt\" \"github.com/go-playground/validator/v10\" ) type User struct { Name string `validate:\"required\"` Age int `validate:\"gte=18,lte=65\"` Email string `validate:\"required,email\"` } func main() { validate := validator.New() user := User{ Name: \"\", Age: 17, Email: \"invalid-email\", } err := validate.Struct(user) if err != nil { for _, err := range err.(validator.ValidationErrors) { fmt.Println(\"Validation error:\", err) } } else { fmt.Println(\"Validation passed\") } }","s":"3. 基本使用","u":"/docs/note/golang/validator","h":"#3-基本使用","p":1062},{"i":1070,"t":"标签 描述 required 必填字段 email 必须是合法的邮箱格式 gte=X 大于等于 X lte=X 小于等于 X min=X 字符串、切片、映射的最小长度 max=X 字符串、切片、映射的最大长度 len=X 长度必须等于 X url 必须是合法的 URL numeric 必须是数字 alphanum 仅允许字母和数字 alpha 仅允许字母 contains=X 必须包含 X 子串 startswith=X 必须以 X 开头 endswith=X 必须以 X 结尾 lowercase 必须为小写 uppercase 必须为大写 ipv4 必须是合法的 IPv4 地址 ipv6 必须是合法的 IPv6 地址 boolean 必须是布尔值 datetime=layout 必须是指定格式的日期时间 base64 必须是 Base64 编码格式 hexcolor 必须是十六进制颜色代码 uuid 必须是合法的 UUID json 必须是合法的 JSON 字符串 ascii 仅允许 ASCII 字符 printascii 仅允许可打印 ASCII 字符 multibyte 允许多字节字符 containsany=chars 必须包含 chars 中的至少一个字符 excludesall=chars 不能包含 chars 中的任何字符 excludes=X 不能包含 X 子串 isdefault 必须是字段类型的默认值 dive 用于切片或者map的验证","s":"4. 常见的内置验证标签","u":"/docs/note/golang/validator","h":"#4-常见的内置验证标签","p":1062},{"i":1072,"t":"可以自定义验证规则，例如验证字符串是否为 \"hello\": func helloValidator(fl validator.FieldLevel) bool { return fl.Field().String() == \"hello\" } func main() { validate := validator.New() validate.RegisterValidation(\"hello\", helloValidator) type Test struct { Msg string `validate:\"hello\"` } t := Test{Msg: \"world\"} err := validate.Struct(t) if err != nil { fmt.Println(\"Validation failed:\", err) } else { fmt.Println(\"Validation passed\") } }","s":"5. 自定义验证","u":"/docs/note/golang/validator","h":"#5-自定义验证","p":1062},{"i":1074,"t":"type Address struct { City string `validate:\"required\"` ZipCode string `validate:\"numeric\"` } type Person struct { Name string `validate:\"required\"` Age int `validate:\"gte=18\"` Address Address `validate:\"required\"` } required 关键字表示深入到嵌套结构体中进行验证。","s":"6. 结构体嵌套验证","u":"/docs/note/golang/validator","h":"#6-结构体嵌套验证","p":1062},{"i":1076,"t":"if err != nil { for _, e := range err.(validator.ValidationErrors) { fmt.Printf(\"Field %s failed on '%s' tag\\n\", e.Field(), e.Tag()) } }","s":"7. 处理错误信息","u":"/docs/note/golang/validator","h":"#7-处理错误信息","p":1062},{"i":1078,"t":"validator 提供了丰富的验证功能，适用于 Go 项目中的输入校验场景，可以结合 gin 或其他 Web 框架进行 API 参数验证，提高数据的可靠性。","s":"8. 结论","u":"/docs/note/golang/validator","h":"#8-结论","p":1062},{"i":1081,"t":"golang.org/x/sys/unix 是 Go 官方提供的一个扩展包，专门用于执行 Unix/Linux 相关的系统调用。它是 syscall 包的替代方案，提供更丰富的功能，并保持持续维护和更新。","s":"1. 简介","u":"/docs/note/golang/syscall","h":"#1-简介","p":1079},{"i":1083,"t":"sys 不是 Go 标准库的一部分，需要手动安装： go get golang.org/x/sys/unix","s":"2. 安装","u":"/docs/note/golang/syscall","h":"#2-安装","p":1079},{"i":1086,"t":"golang.org/x/sys/unix 是 Go 官方提供的一个扩展包，专门用于执行 Unix/Linux 相关的系统调用。它是 syscall 包的替代方案，提供更丰富的功能，并保持持续维护和更新。","s":"1. 简介","u":"/docs/note/golang/syscall","h":"#1-简介-1","p":1079},{"i":1088,"t":"sys 不是 Go 标准库的一部分，需要手动安装： go get golang.org/x/sys/unix","s":"2. 安装","u":"/docs/note/golang/syscall","h":"#2-安装-1","p":1079},{"i":1091,"t":"package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { pid := unix.Getpid() fmt.Println(\"当前进程 ID:\", pid) ppid := unix.Getppid() fmt.Println(\"父进程 ID:\", ppid) }","s":"3.1 获取进程 ID","u":"/docs/note/golang/syscall","h":"#31-获取进程-id","p":1079},{"i":1093,"t":"3.2.1 使用 unix.Open 读取文件​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { fd, err := unix.Open(\"test.txt\", unix.O_RDONLY, 0) if err != nil { fmt.Println(\"打开文件失败:\", err) return } defer unix.Close(fd) var buf [100]byte n, err := unix.Read(fd, buf[:]) if err != nil { fmt.Println(\"读取文件失败:\", err) return } fmt.Println(\"文件内容:\", string(buf[:n])) }","s":"3.2 文件操作","u":"/docs/note/golang/syscall","h":"#32-文件操作","p":1079},{"i":1095,"t":"3.3.1 创建子进程​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { binary := \"/bin/ls\" args := []string{\"ls\", \"-l\"} err := unix.Exec(binary, args, nil) if err != nil { fmt.Println(\"执行失败:\", err) } }","s":"3.3 进程控制","u":"/docs/note/golang/syscall","h":"#33-进程控制","p":1079},{"i":1097,"t":"3.4.1 发送信号​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" \"time\" ) func main() { pid := unix.Getpid() fmt.Println(\"当前进程 ID:\", pid) go func() { time.Sleep(2 * time.Second) unix.Kill(pid, unix.SIGTERM) }() }","s":"3.4 信号处理","u":"/docs/note/golang/syscall","h":"#34-信号处理","p":1079},{"i":1099,"t":"3.5.1 mmap 映射文件​ package main import ( \"fmt\" \"os\" \"golang.org/x/sys/unix\" \"unsafe\" ) func main() { file, err := os.OpenFile(\"test.txt\", os.O_RDWR, 0666) if err != nil { fmt.Println(\"打开文件失败:\", err) return } defer file.Close() fi, _ := file.Stat() size := fi.Size() data, err := unix.Mmap(int(file.Fd()), 0, int(size), unix.PROT_READ, unix.MAP_SHARED) if err != nil { fmt.Println(\"mmap 失败:\", err) return } fmt.Println(\"文件内容:\", *(*string)(unsafe.Pointer(&data))) }","s":"3.5 内存管理","u":"/docs/note/golang/syscall","h":"#35-内存管理","p":1079},{"i":1101,"t":"功能 syscall (已废弃) x/sys/unix (推荐) 进程管理 ✅ ✅ 文件操作 ✅ ✅ 信号处理 ✅ ✅ 兼容性 ❌ 仅限 Linux/macOS/Windows ✅ 跨平台更好 未来维护 ❌ 停止维护 ✅ 推荐使用 示例（x/sys/unix 替代 syscall）： import \"golang.org/x/sys/unix\" func main() { unix.Getpid() // 替代 syscall.Getpid() }","s":"4. unix 作为 syscall 的替代方案","u":"/docs/note/golang/syscall","h":"#4-unix-作为-syscall-的替代方案","p":1079},{"i":1103,"t":"syscall 适用于低级系统调用，但已被废弃。 建议使用 golang.org/x/sys/unix，因为 syscall 不再维护。 适用于需要直接操作系统资源（如 mmap、fork、exec、signal）。 不适用于一般应用开发，Go 提供的标准库 os、io、net 足够大多数场景。","s":"5. 结论","u":"/docs/note/golang/syscall","h":"#5-结论","p":1079},{"i":1105,"t":"官方文档 GitHub 代码库","s":"6. 参考","u":"/docs/note/golang/syscall","h":"#6-参考","p":1079},{"i":1108,"t":"package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { pid := unix.Getpid() fmt.Println(\"当前进程 ID:\", pid) ppid := unix.Getppid() fmt.Println(\"父进程 ID:\", ppid) }","s":"3.1 获取进程 ID","u":"/docs/note/golang/syscall","h":"#31-获取进程-id-1","p":1079},{"i":1110,"t":"3.2.1 使用 unix.Open 读取文件​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { fd, err := unix.Open(\"test.txt\", unix.O_RDONLY, 0) if err != nil { fmt.Println(\"打开文件失败:\", err) return } defer unix.Close(fd) var buf [100]byte n, err := unix.Read(fd, buf[:]) if err != nil { fmt.Println(\"读取文件失败:\", err) return } fmt.Println(\"文件内容:\", string(buf[:n])) }","s":"3.2 文件操作","u":"/docs/note/golang/syscall","h":"#32-文件操作-1","p":1079},{"i":1112,"t":"3.3.1 创建子进程​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { binary := \"/bin/ls\" args := []string{\"ls\", \"-l\"} err := unix.Exec(binary, args, nil) if err != nil { fmt.Println(\"执行失败:\", err) } }","s":"3.3 进程控制","u":"/docs/note/golang/syscall","h":"#33-进程控制-1","p":1079},{"i":1114,"t":"3.4.1 发送信号​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" \"time\" ) func main() { pid := unix.Getpid() fmt.Println(\"当前进程 ID:\", pid) go func() { time.Sleep(2 * time.Second) unix.Kill(pid, unix.SIGTERM) }() }","s":"3.4 信号处理","u":"/docs/note/golang/syscall","h":"#34-信号处理-1","p":1079},{"i":1116,"t":"3.5.1 mmap 映射文件​ package main import ( \"fmt\" \"os\" \"golang.org/x/sys/unix\" \"unsafe\" ) func main() { file, err := os.OpenFile(\"test.txt\", os.O_RDWR, 0666) if err != nil { fmt.Println(\"打开文件失败:\", err) return } defer file.Close() fi, _ := file.Stat() size := fi.Size() data, err := unix.Mmap(int(file.Fd()), 0, int(size), unix.PROT_READ, unix.MAP_SHARED) if err != nil { fmt.Println(\"mmap 失败:\", err) return } fmt.Println(\"文件内容:\", *(*string)(unsafe.Pointer(&data))) }","s":"3.5 内存管理","u":"/docs/note/golang/syscall","h":"#35-内存管理-1","p":1079},{"i":1118,"t":"功能 syscall (已废弃) x/sys/unix (推荐) 进程管理 ✅ ✅ 文件操作 ✅ ✅ 信号处理 ✅ ✅ 兼容性 ❌ 仅限 Linux/macOS/Windows ✅ 跨平台更好 未来维护 ❌ 停止维护 ✅ 推荐使用 示例（x/sys/unix 替代 syscall）： import \"golang.org/x/sys/unix\" func main() { unix.Getpid() // 替代 syscall.Getpid() }","s":"4. unix 作为 syscall 的替代方案","u":"/docs/note/golang/syscall","h":"#4-unix-作为-syscall-的替代方案-1","p":1079},{"i":1120,"t":"syscall 适用于低级系统调用，但已被废弃。 建议使用 golang.org/x/sys/unix，因为 syscall 不再维护。 适用于需要直接操作系统资源（如 mmap、fork、exec、signal）。 不适用于一般应用开发，Go 提供的标准库 os、io、net 足够大多数场景。","s":"5. 结论","u":"/docs/note/golang/syscall","h":"#5-结论-1","p":1079},{"i":1122,"t":"官方文档 GitHub 代码库","s":"6. 参考","u":"/docs/note/golang/syscall","h":"#6-参考-1","p":1079},{"i":1125,"t":"反射是 Go 语言中的一个强大特性，允许程序在运行时检查和操作变量的类型和值。 reflect 包提供了一系列 API，使得开发者可以动态获取变量的信息、修改变量的值，并在一定程度上实现动态调用。 适用场景： 处理接口类型的变量 解析结构体标签（struct tag） 生成通用工具，如序列化、反序列化、ORM 框架等 reflect 包的核心功能： 类型检查：获取变量的类型信息。 值操作：获取和修改变量的值。 方法调用：动态调用结构体的方法。 字段操作：动态访问和修改结构体的字段。 创建实例：通过反射创建新的变量实例。","s":"1. 反射（Reflect）概述","u":"/docs/note/golang/reflect","h":"#1-反射reflect概述","p":1123},{"i":1127,"t":"在 reflect 包中，主要有两个核心类型： reflect.Type：表示变量的类型（TypeOf 获取） reflect.Value：表示变量的值（ValueOf 获取）","s":"2. 反射的基本类型","u":"/docs/note/golang/reflect","h":"#2-反射的基本类型","p":1123},{"i":1129,"t":"package main import ( \"fmt\" \"reflect\" ) func main() { var num int = 42 typeInfo := reflect.TypeOf(num) valueInfo := reflect.ValueOf(num) fmt.Println(\"Type:\", typeInfo) // int fmt.Println(\"Value:\", valueInfo) // 42 typeInfo = reflect.TypeOf(&num) valueInfo = reflect.ValueOf(&num) fmt.Println(\"Point Type:\", typeInfo) // *int fmt.Println(\"Point Value:\", valueInfo) // 0xc00010a000 }","s":"2.1 获取变量的类型和值","u":"/docs/note/golang/reflect","h":"#21-获取变量的类型和值","p":1123},{"i":1131,"t":"反射可以修改变量的值，但前提是 reflect.Value 必须是可设置的（CanSet() 方法返回 true）。 package main import ( \"fmt\" \"reflect\" ) func main() { var num int = 42 // 传递指针才能修改原值 // 此时的valueInfo是一个reflect.Value类型。代表num指针 valueInfo := reflect.ValueOf(&num) // 此时的valueElem是一个reflect.Value类型。代表num的值 valueElem := valueInfo.Elem() /* * 当你需要通过指针修改原始变量的值时，你需要先获取指针的 reflect.Value， * 然后通过 .Elem() 方法获取到实际的值并进行操作。 */ if valueElem.CanSet() { valueElem.SetInt(100) } fmt.Println(\"Modified value:\", num) // 100 }","s":"3. 反射修改变量值","u":"/docs/note/golang/reflect","h":"#3-反射修改变量值","p":1123},{"i":1134,"t":"package main import ( \"fmt\" \"reflect\" ) type Person struct { Name string Age int } func main() { p := Person{Name: \"Alice\", Age: 30} typeInfo := reflect.TypeOf(p) // NumField returns the number of fields in the struct. // It panics if the type of v is not a struct. for i := 0; i < typeInfo.NumField(); i++ { field := typeInfo.Field(i) fmt.Printf(\"Field Name: %s, Type: %s\\n\", field.Name, field.Type) } }","s":"4.1 获取结构体字段信息","u":"/docs/note/golang/reflect","h":"#41-获取结构体字段信息","p":1123},{"i":1136,"t":"结构体字段可以带有标签，用于元数据存储，如 JSON、数据库映射等。 package main import ( \"fmt\" \"reflect\" ) type User struct { ID int `json:\"id\" yaml:\"id\"` Name string `json:\"name\"` } func main() { typeInfo := reflect.TypeOf(User{}) for i := 0; i < typeInfo.NumField(); i++ { field := typeInfo.Field(i) // 打印字段标签 fmt.Printf(\"Field Tag: %s\\n\", field.Tag) tag := field.Tag.Get(\"json\") fmt.Printf(\"Field: %s, JSON Tag: %s\\n\", field.Name, tag) } }","s":"4.2 解析结构体标签（Tag）","u":"/docs/note/golang/reflect","h":"#42-解析结构体标签tag","p":1123},{"i":1138,"t":"有参数调用 package main import ( \"fmt\" \"reflect\" ) type Calculator struct{} func (c Calculator) Add(a, b int) int { return a + b } func main() { calc := Calculator{} method := reflect.ValueOf(calc).MethodByName(\"Add\") args := []reflect.Value{reflect.ValueOf(10), reflect.ValueOf(20)} result := method.Call(args) fmt.Println(\"Result:\", result[0].Int()) // 30 } 无参数调用 package main import ( \"fmt\" \"reflect\" ) type User struct { Name string } func (u User) SayHello() { fmt.Println(\"Hello,\", u.Name) } func main() { u := User{Name: \"Alice\"} v := reflect.ValueOf(u) method := v.MethodByName(\"SayHello\") method.Call(nil) // 输出: Hello, Alice }","s":"5. 反射调用方法","u":"/docs/note/golang/reflect","h":"#5-反射调用方法","p":1123},{"i":1140,"t":"代码可读性降低，调试难度增大 性能损耗，相比普通方法调用慢10倍以上","s":"6. 反射的局限性","u":"/docs/note/golang/reflect","h":"#6-反射的局限性","p":1123},{"i":1142,"t":"只有在动态需求时使用反射，避免滥用 使用 interface{} 和 switch 语句作为反射的替代方案 结合 json、protobuf 等库时，合理利用 reflect 提取字段信息","s":"7. 反射最佳实践","u":"/docs/note/golang/reflect","h":"#7-反射最佳实践","p":1123},{"i":1145,"t":"chroot 是一个 Linux 命令，用于将进程和其子进程的根目录（/）更改为指定的目录。换句话说，它改变了程序的根目录路径，使得程序无法访问更高层级的文件系统。常用于隔离环境、创建沙箱、进行系统恢复等场景。","s":"1. 概述","u":"/docs/note/os/chroot","h":"#1-概述","p":1143},{"i":1147,"t":"使用 chroot 命令时，指定的路径将成为新的根目录。进程运行时，文件系统的访问将相对于新根目录（chroot 目录）进行，系统的其他部分不可见。 chroot <new_root> [command] <new_root>：指定新的根目录。 [command]：可选的命令，表示在新的根目录环境中执行的命令。如果没有指定命令，则默认将会启动一个交互式 shell。","s":"2. 工作原理","u":"/docs/note/os/chroot","h":"#2-工作原理","p":1143},{"i":1150,"t":"sudo chroot /path/to/new_root 此命令将切换根目录到 /path/to/new_root，并启动一个交互式 shell。","s":"3.1. 进入 chroot 环境","u":"/docs/note/os/chroot","h":"#31-进入-chroot-环境","p":1143},{"i":1152,"t":"sudo chroot /path/to/new_root /bin/bash 在 /path/to/new_root 目录中执行 /bin/bash，并进入一个新的环境。","s":"3.2. 在 chroot 环境中执行命令","u":"/docs/note/os/chroot","h":"#32-在-chroot-环境中执行命令","p":1143},{"i":1154,"t":"创建新的根目录 sudo mkdir -p /path/to/new_root 挂载必要的虚拟文件系统 有些系统文件，如 /proc，需要在 chroot 环境中挂载。 sudo mount -t proc /proc /path/to/new_root/proc sudo mount -t sysfs /sys /path/to/new_root/sys sudo mount -o bind /dev /path/to/new_root/dev sudo mount -o bind /dev/pts /path/to/new_root/dev/pts 挂载 /proc、/sys、/dev 和 /dev/pts 等目录是为了确保进程能够正确访问和使用这些虚拟文件系统，它们提供了重要的系统信息和设备接口。如果没有这些挂载，某些程序或命令可能会失效，因为它们依赖于这些目录中的文件来获取系统状态或与硬件交互。 /proc 是一个虚拟文件系统，提供有关系统进程、内核信息以及其他运行时信息的数据。在 chroot 环境中，如果没有挂载 /proc，很多程序和命令（如 ps、top、free 等）就无法正常工作，因为它们依赖于 /proc 中的信息来获取关于当前系统和进程的状态。 /sys 也是一个虚拟文件系统，它提供了关于系统硬件、内核参数、设备状态等的动态信息。许多设备驱动程序和系统服务依赖于 /sys 中的文件来进行硬件管理和系统配置。没有挂载 /sys，某些程序可能无法获取硬件信息或无法与设备进行交互。 例如： 系统的 CPU 核心数 网络接口的配置 电池状态（在笔记本电脑上） /dev 目录包含了所有设备文件（如硬盘、终端、USB 设备等）。这些设备文件是用户空间程序与硬件设备交互的接口。对于在 chroot 环境中运行的程序来说，访问设备文件是必需的。 例如： /dev/sda：硬盘设备文件 /dev/null：丢弃数据的设备 /dev/tty：终端设备 如果没有挂载 /dev，程序就无法访问硬件设备，也无法与终端、网络接口等进行交互。 /dev/pts 目录是用于管理伪终端设备（pty）。它存储了与终端相关的设备文件，如 /dev/pts/0 等。这对于支持多用户、多终端系统非常重要，尤其是对于运行交互式 shell 和命令行程序的环境。 例如，当你使用 ssh 或 tmux 登录到系统时，终端设备通常是通过 /dev/pts 来表示的。如果没有挂载 /dev/pts，你将无法启动或使用交互式终端（比如在 chroot 环境中执行 bash 或 sh 命令时）。 安装必要的库和命令 确保在新的根目录中安装了所需的库和程序。你可能需要复制或挂载一些文件，来使 chroot 环境能够正常运行。 sudo cp /bin/bash /path/to/new_root/bin/ sudo cp /lib/x86_64-linux-gnu/libtinfo.so.6 /path/to/new_root/lib/x86_64-linux-gnu/ sudo cp /lib/x86_64-linux-gnu/libc.so.6 /path/to/new_root/lib/x86_64-linux-gnu/ 进入 chroot 环境 sudo chroot /path/to/new_root /bin/bash 此时你已经进入了一个新的 chroot 环境，根目录为 /path/to/new_root。","s":"4. 创建一个基本的 chroot 环境","u":"/docs/note/os/chroot","h":"#4-创建一个基本的-chroot-环境","p":1143},{"i":1157,"t":"当系统无法启动或损坏时，可以使用 chroot 来进入系统并修复问题。例如，通过 chroot 进入系统的根文件系统，重新安装引导程序或修复损坏的文件。 sudo mount /dev/sda1 /mnt sudo mount --bind /dev /mnt/dev sudo mount --bind /proc /mnt/proc sudo mount --bind /sys /mnt/sys sudo chroot /mnt","s":"5.1. 系统恢复","u":"/docs/note/os/chroot","h":"#51-系统恢复","p":1143},{"i":1159,"t":"chroot 可以用来创建一个受限的环境，限制某个进程只能访问特定目录。它常用于容器化技术的基础实现，尽管现代容器使用更强大的工具（如 Docker）来提供隔离。","s":"5.2. 隔离环境（Sandbox）","u":"/docs/note/os/chroot","h":"#52-隔离环境sandbox","p":1143},{"i":1161,"t":"在构建特定版本的程序或测试时，可以创建一个干净的环境，避免系统中现有软件包的影响。","s":"5.3. 软件包编译","u":"/docs/note/os/chroot","h":"#53-软件包编译","p":1143},{"i":1163,"t":"如果需要运行一个特定版本的程序，可以使用 chroot 来隔离旧版本的库和二进制文件。","s":"5.4. 运行特定版本的应用程序","u":"/docs/note/os/chroot","h":"#54-运行特定版本的应用程序","p":1143},{"i":1165,"t":"权限问题 chroot 需要具有足够的权限，通常只有 root 用户才能执行此操作。 安全性 chroot 只是提供了一种简单的隔离方式，并不能完全防止进程逃逸或访问敏感信息。更强的安全措施（如使用 namespaces 或 containers）应该用于高安全性需求的环境。 文件系统依赖 某些进程需要特定的系统文件（如 /dev, /proc, /sys 等）。如果没有挂载这些虚拟文件系统，程序可能会崩溃或无法正常工作。 无法逃逸 chroot 本身并不能防止进程从 chroot 环境中逃逸，因此对于高安全性要求的场景（如沙箱、容器）不推荐单独依赖 chroot。","s":"6. 注意事项","u":"/docs/note/os/chroot","h":"#6-注意事项","p":1143},{"i":1167,"t":"chroot 是一个强大的工具，用于将进程隔离在特定的目录树中。它在系统恢复、隔离测试、构建环境等方面非常有用。然而，它并不是一个完美的安全隔离工具，现代容器化技术提供了更强的隔离和安全性。 你可以根据需求扩展文档的内容，如添加更详细的安全性讨论、使用示例等。","s":"7. 总结","u":"/docs/note/os/chroot","h":"#7-总结","p":1143},{"i":1170,"t":"Unix Domain Socket (UDS) 是一种进程间通信(IPC)机制，特点： 仅限同一主机上的进程通信 通过文件系统路径标识 比TCP本地环回更快(绕过网络协议栈) 通过文件权限控制访问 优势： 高性能：比localhost TCP快约2倍 安全性：文件系统权限控制 资源占用少：无端口冲突问题","s":"1. Unix Socket 简介","u":"/docs/note/golang/web_server_unix","h":"#1-unix-socket-简介","p":1168},{"i":1173,"t":"package main import ( \"fmt\" \"log\" \"net\" \"net/http\" \"os\" \"os/signal\" \"syscall\" ) func main() { // 配置 socketPath := \"/tmp/http.sock\" // 清理旧socket if err := os.RemoveAll(socketPath); err != nil { log.Fatalf(\"清理socket失败: %v\", err) } // 创建监听器 listener, err := net.Listen(\"unix\", socketPath) if err != nil { log.Fatalf(\"监听失败: %v\", err) } defer func() { listener.Close() os.Remove(socketPath) }() // 设置文件权限(可选) if err := os.Chmod(socketPath, 0770); err != nil { log.Printf(\"设置权限失败: %v\", err) } // 注册路由 mux := http.NewServeMux() mux.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) { fmt.Fprintf(w, \"Hello from Unix Socket HTTP Server!\\n\") }) mux.HandleFunc(\"/health\", func(w http.ResponseWriter, r *http.Request) { w.WriteHeader(http.StatusOK) w.Write([]byte(\"OK\")) }) // 配置服务器 server := &http.Server{ Handler: mux, } // 优雅关闭 setupGracefulShutdown(server) // 启动服务 log.Printf(\"Server listening on unix socket: %s\", socketPath) if err := server.Serve(listener); err != nil && err != http.ErrServerClosed { log.Fatalf(\"服务异常: %v\", err) } } func setupGracefulShutdown(server *http.Server) { sigChan := make(chan os.Signal, 1) signal.Notify(sigChan, os.Interrupt, syscall.SIGTERM) go func() { <-sigChan log.Println(\"接收到终止信号，关闭服务器...\") if err := server.Close(); err != nil { log.Printf(\"服务器关闭错误: %v\", err) } }() }","s":"2.1 基础实现","u":"/docs/note/golang/web_server_unix","h":"#21-基础实现","p":1168},{"i":1175,"t":"// 在http.Server配置中添加 server := &http.Server{ Handler: mux, ReadTimeout: 10 * time.Second, WriteTimeout: 10 * time.Second, IdleTimeout: 60 * time.Second, }","s":"2.2 高级配置","u":"/docs/note/golang/web_server_unix","h":"#22-高级配置","p":1168},{"i":1178,"t":"package main import ( \"log\" \"net\" \"net/http\" \"os\" \"os/signal\" \"syscall\" \"time\" \"github.com/gin-gonic/gin\" ) func main() { // 配置 socketPath := \"/tmp/gin.sock\" // 清理旧socket if err := os.RemoveAll(socketPath); err != nil { log.Fatalf(\"清理socket失败: %v\", err) } // 创建监听器 listener, err := net.Listen(\"unix\", socketPath) if err != nil { log.Fatalf(\"监听失败: %v\", err) } defer func() { listener.Close() os.Remove(socketPath) }() // 设置文件权限 if err := os.Chmod(socketPath, 0770); err != nil { log.Printf(\"设置权限失败: %v\", err) } // 初始化Gin router := gin.New() // 中间件 router.Use(gin.Logger()) router.Use(gin.Recovery()) // 路由 router.GET(\"/\", func(c *gin.Context) { c.String(http.StatusOK, \"Hello from Gin Unix Socket Server!\") }) router.GET(\"/api/data\", func(c *gin.Context) { c.JSON(http.StatusOK, gin.H{ \"status\": \"success\", \"message\": \"Data retrieved\", \"data\": []string{\"item1\", \"item2\", \"item3\"}, }) }) // 配置服务器 server := &http.Server{ Handler: router, ReadTimeout: 10 * time.Second, WriteTimeout: 10 * time.Second, } // 优雅关闭 setupGracefulShutdown(server) // 启动服务 log.Printf(\"Gin server listening on unix socket: %s\", socketPath) if err := server.Serve(listener); err != nil && err != http.ErrServerClosed { log.Fatalf(\"服务异常: %v\", err) } }","s":"3.1 基础实现","u":"/docs/note/golang/web_server_unix","h":"#31-基础实现","p":1168},{"i":1180,"t":"// 在生产环境中使用ReleaseMode gin.SetMode(gin.ReleaseMode) // 添加健康检查端点 router.GET(\"/health\", func(c *gin.Context) { c.JSON(http.StatusOK, gin.H{\"status\": \"healthy\"}) }) // 添加监控中间件 router.Use(monitoringMiddleware()) func monitoringMiddleware() gin.HandlerFunc { return func(c *gin.Context) { start := time.Now() c.Next() duration := time.Since(start) log.Printf(\"请求 %s 耗时 %v\", c.Request.URL.Path, duration) } }","s":"3.2 生产环境建议","u":"/docs/note/golang/web_server_unix","h":"#32-生产环境建议","p":1168},{"i":1183,"t":"func main() { transport := &http.Transport{ Dial: func(_, _ string) (net.Conn, error) { return net.Dial(\"unix\", \"/tmp/http.sock\") }, } client := &http.Client{ Transport: transport, Timeout: 5 * time.Second, } resp, err := client.Get(\"http://unix/health\") if err != nil { log.Fatal(err) } defer resp.Body.Close() body, _ := io.ReadAll(resp.Body) fmt.Println(\"响应:\", string(body)) }","s":"4.1 标准HTTP客户端","u":"/docs/note/golang/web_server_unix","h":"#41-标准http客户端","p":1168},{"i":1185,"t":"func main() { conn, err := net.Dial(\"unix\", \"/tmp/http.sock\") if err != nil { log.Fatal(err) } defer conn.Close() // 构造HTTP请求 request := \"GET / HTTP/1.1\\r\\nHost: unix\\r\\n\\r\\n\" _, err = conn.Write([]byte(request)) if err != nil { log.Fatal(err) } // 读取响应 response, err := io.ReadAll(conn) if err != nil { log.Fatal(err) } fmt.Println(\"响应:\", string(response)) }","s":"4.2 通用Socket客户端","u":"/docs/note/golang/web_server_unix","h":"#42-通用socket客户端","p":1168},{"i":1187,"t":"连接池配置： transport := &http.Transport{ Dial: func(_, _ string) (net.Conn, error) { return net.Dial(\"unix\", socketPath) }, MaxIdleConns: 100, IdleConnTimeout: 90 * time.Second, TLSHandshakeTimeout: 10 * time.Second, } Gin性能优化： 使用gin.SetMode(gin.ReleaseMode) 避免在热路径中使用反射 使用c.AbortWithStatus()而不是return来终止请求 服务器配置： 适当调整ReadTimeout和WriteTimeout 考虑使用http.TimeoutHandler添加全局超时 监控指标： 添加Prometheus或OpenTelemetry监控 记录请求延迟和错误率","s":"5. 性能优化建议","u":"/docs/note/golang/web_server_unix","h":"#5-性能优化建议","p":1168},{"i":1189,"t":"Q1: 如何调试Unix Socket通信问题？ A1: 使用nc -U /tmp/your.sock测试基本连接 检查socket文件权限ls -l /tmp/your.sock 使用strace跟踪系统调用 Q2: 如何处理\"address already in use\"错误？ A2: 确保程序退出时删除socket文件 添加错误处理自动清理旧socket 使用lsof -U | grep your.sock查找占用进程 Q3: 如何限制客户端访问？ A3: 设置严格的文件权限(如0700) 使用系统组权限控制 在应用层添加认证 Q4: Unix Socket与TCP性能对比如何？ A4: 延迟降低约30-50% 吞吐量提高约20-30% CPU使用率降低约10-20%","s":"6. 常见问题解答","u":"/docs/note/golang/web_server_unix","h":"#6-常见问题解答","p":1168},{"i":1191,"t":"容器间通信： Docker/Kubernetes环境中容器间高效通信 通过共享volume挂载socket文件 反向代理集成： server { listen 8080; location / { proxy_pass http://unix:/tmp/http.sock; } } 微服务架构： 同一主机上的服务间通信 替代gRPC的TCP传输 特权服务： 仅限本机访问的管理接口 高安全性要求的内部通信 高性能API网关： 网关与后端服务间的高速通道 减少网络协议栈开销","s":"7. 实际应用场景","u":"/docs/note/golang/web_server_unix","h":"#7-实际应用场景","p":1168},{"i":1193,"t":"Unix Socket为Golang服务提供了高性能的本地通信方案。无论是使用标准库还是Gin框架，实现起来都相对简单。关键注意点包括： 妥善管理socket文件生命周期 设置适当的文件权限 客户端使用正确的连接方式 生产环境添加适当的监控和日志 通过本培训文档，您应该能够： 理解Unix Socket的工作原理 实现基于Unix Socket的HTTP服务 编写对应的客户端代码 部署生产级Unix Socket服务 诊断常见问题","s":"总结","u":"/docs/note/golang/web_server_unix","h":"#总结","p":1168},{"i":1195,"t":"孤儿进程： 父亲先死，儿子被1号收养。 僵尸进程：儿子先死，父亲不管不顾。","s":"僵尸进程","u":"/docs/note/os/zombie","h":"","p":1194},{"i":1197,"t":"top查看是否有僵尸进程 通过命令查询僵尸进程在哪 ps -A -ostat,ppid,pid,cmd | grep -e '^[Zz]' # 命令注解： # -A 参数列出所有进程 # -o 自定义输出字段 我们设定显示字段为 stat（状态）, ppid（进程父id）, pid(进程id)，cmd（命令）这四个参数 # 因为状态为 z或者Z的进程为僵尸进程，所以我们使用grep抓取stat状态为zZ进程","s":"查杀僵尸进程","u":"/docs/note/os/zombie","h":"#查杀僵尸进程","p":1194},{"i":1200,"t":"通过sleep时间，控制父亲先死，此时儿子被1号孤儿院收养。可以通过 ps查看，a.out的父进程变成了 1 #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <sys/wait.h> int main() { pid_t pid = fork(); // 创建子进程 if (pid < 0) { // fork失败 perror(\"fork failed\"); exit(EXIT_FAILURE); } else if (pid == 0) { // 子进程 printf(\"I am the child process with PID %d\\n\", getpid()); sleep(2000); // 让子进程运行一段时间 ，此时父亲已死。 printf(\"Child process exiting...\\n\"); exit(EXIT_SUCCESS); // 子进程退出 } else { // 父进程直接退出 printf(\"I am the parent process with PID %d and my child has PID %d\\n\", getpid(), pid); } return 0; }","s":"孤儿进程","u":"/docs/note/os/zombie","h":"#孤儿进程","p":1194},{"i":1201,"t":"通过sleep时间，控制子进程先死。但是，父进程不回收子进程。 #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <sys/wait.h> int main() { pid_t pid = fork(); // 创建子进程 if (pid < 0) { // fork失败 perror(\"fork failed\"); exit(EXIT_FAILURE); } else if (pid == 0) { // 子进程 printf(\"I am the child process with PID %d\\n\", getpid()); sleep(2); // 让子进程运行一段时间 printf(\"Child process exiting...\\n\"); exit(EXIT_SUCCESS); // 子进程退出 } else { // 父进程 printf(\"I am the parent process with PID %d and my child has PID %d\\n\", getpid(), pid); // 注意：这里父进程没有调用wait()或waitpid()，所以子进程会变成僵尸进程 sleep(10000); } return 0; } 查询僵尸进程 $ ps -A -ostat,ppid,pid,cmd | grep -e '^[Zz]' Z+ 933981 933982 [a.out] <defunct> $ ps -ef | grep a.out root 933981 933844 0 11:11 pts/4 00:00:00 ./a.out root 933982 933981 0 11:11 pts/4 00:00:00 [a.out] <defunct> root 934096 933897 0 11:13 pts/5 00:00:00 grep --color=auto a.out","s":"僵尸进程","u":"/docs/note/os/zombie","h":"#僵尸进程-1","p":1194},{"i":1203,"t":"#include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <signal.h> #include <sys/wait.h> // SIGCHLD 信号处理函数 void sigchld_handler(int signum) { // 使用 waitpid 非阻塞回收所有已终止的子进程 while (waitpid(-1, NULL, WNOHANG) > 0); } int main() { // 设置 SIGCHLD 信号处理函数 struct sigaction sa; sa.sa_handler = sigchld_handler; sigemptyset(&sa.sa_mask); sa.sa_flags = SA_RESTART; // 自动重启被中断的系统调用 if (sigaction(SIGCHLD, &sa, NULL) == -1) { perror(\"sigaction\"); exit(EXIT_FAILURE); } // 创建子进程 pid_t pid = fork(); if (pid < 0) { perror(\"fork\"); exit(EXIT_FAILURE); } if (pid == 0) { // 子进程 printf(\"子进程: PID = %d\\n\", getpid()); sleep(10); // 模拟子进程执行一些任务 printf(\"子进程结束: PID = %d\\n\", getpid()); exit(EXIT_SUCCESS); } else { // 父进程 printf(\"父进程: PID = %d, 子进程 PID = %d\\n\", getpid(), pid); // 父进程继续执行其他任务 for (int i = 0; i < 5; ++i) { printf(\"父进程正在工作...\\n\"); sleep(10000) } // 父进程结束前的收尾工作 printf(\"父进程结束: PID = %d\\n\", getpid()); } return 0; }","s":"回收儿子","u":"/docs/note/os/zombie","h":"#回收儿子","p":1194},{"i":1206,"t":"GDB（GNU Debugger）是一个强大的调试工具，广泛用于调试C、C++、Fortran等编程语言编写的程序。GDB可以在程序运行时执行控制，帮助开发人员诊断程序中的错误。","s":"1. GDB 概述","u":"/docs/note/os/debug/gdb","h":"#1-gdb-概述","p":1204},{"i":1208,"t":"GDB 是由 Free Software Foundation 开发和维护的，最早由 Richard Stallman 和 Roland H. Pesch 在 1986 年开始设计。如今，GDB已经成为Linux及其他操作系统上最广泛使用的调试工具。","s":"1.1 GDB的历史和发展","u":"/docs/note/os/debug/gdb","h":"#11-gdb的历史和发展","p":1204},{"i":1210,"t":"软件开发：用于程序调试和性能优化 嵌入式开发：调试在嵌入式系统上运行的应用程序 远程调试：通过网络调试远程机器上的程序 多线程调试：在多线程环境下调试并发问题","s":"1.2 GDB应用场景","u":"/docs/note/os/debug/gdb","h":"#12-gdb应用场景","p":1204},{"i":1213,"t":"yum install gdb","s":"2.1 使用包管理器安装","u":"/docs/note/os/debug/gdb","h":"#21-使用包管理器安装","p":1204},{"i":1215,"t":"（TODO：添加源码编译详细步骤）","s":"2.2 源码编译安装","u":"/docs/note/os/debug/gdb","h":"#22-源码编译安装","p":1204},{"i":1218,"t":"# 启动 GDB 调试指定程序 $ gdb <your_program> # 启动程序执行 `run`后面的参数会像进程正常执行一样传递给进程。通常，我们会在设置好断点之后。执行此命令 (gdb) run","s":"3.1 启动GDB","u":"/docs/note/os/debug/gdb","h":"#31-启动gdb","p":1204},{"i":1220,"t":"# 方法1：直接传参 (gdb) run arg1 arg2 arg3 # 方法2：预设参数 (gdb) set args arg1 arg2 arg3 (gdb) run # 方法3：修改参数 (gdb) set args new_arg1 new_arg2","s":"3.2 调试带参数的程序","u":"/docs/note/os/debug/gdb","h":"#32-调试带参数的程序","p":1204},{"i":1222,"t":"# 可以直接-p 指定pid $ gdb -p pid # 也可以启动gdb 后，attach pid $ gdb -q (gdb) <pid>","s":"3.3 调试运行中的进程","u":"/docs/note/os/debug/gdb","h":"#33-调试运行中的进程","p":1204},{"i":1224,"t":"命令 功能描述 b/break 设置断点 r/run 开始程序运行 start 在main函数开始前停止 c/continue 继续执行直到下一个断点 n/next 单步执行(不进入函数) s/step 单步执行(进入函数) p/print 打印变量的值 l/list 查看源代码 bt/backtrace 显示调用栈 until location 执行到指定位置 fini/finish 执行完成当前函数 q/quit 退出gdb","s":"3.4 基本调试命令","u":"/docs/note/os/debug/gdb","h":"#34-基本调试命令","p":1204},{"i":1226,"t":"通过 break 命令在特定位置设置断点（如函数或代码行）。 (gdb) break func_name # 设置函数断点 (gdb) break file.c:line # 设置文件行断点 (gdb) break file:line if condition # 条件断点 (gdb) info breakpoints # 查看断点信息 (gdb) delete <num> # 删除指定断点","s":"3.5 断点管理","u":"/docs/note/os/debug/gdb","h":"#35-断点管理","p":1204},{"i":1228,"t":"(gdb) print var # 打印变量 (gdb) info locals # 显示局部变量 (gdb) info args # 显示函数参数 (gdb) set var = value # 修改变量值 (gdb) x/10x <addr> # 查看内存内容（16进制）","s":"3.6 变量与内存操作","u":"/docs/note/os/debug/gdb","h":"#36-变量与内存操作","p":1204},{"i":1230,"t":"(gdb) info registers # 查看所有寄存器的值 (gdb) print $eax # 查看特定寄存器（如 x86 架构） (gdb) p/x $eax # 十六进制显示寄存器值 (gdb) set $eax = 0x10 # 修改寄存器值 # 特殊寄存器 (gdb) info registers float # 浮点寄存器 (gdb) info registers vector # 向量寄存器 (gdb) info registers eflags # 标志寄存器 (gdb) x/i $pc # 查看栈指针指向的内存 (gdb) x/i $pc # 反汇编当前指令 (gdb) stepi # 单步执行一条汇编指令 使用 $<寄存器名> 可以访问 CPU 寄存器；$pc 表示程序计数器，$sp 表示栈指针，$fp 为帧指针。 在GDB内部，$pc 实际上是一个宏，会根据当前调试目标的架构自动映射到正确的寄存器： x86-64 → 映射到 $rip ARM → 映射到 $r15 或 $pc MIPS → 映射到 $pc 示例 $ # gdb -q ./a.out Reading symbols from ./a.out... (gdb) l 1 #include <signal.h> 2 #include <stdlib.h> 3 #include <stdio.h> 4 5 int main() { 6 int a; 7 a=10; 8 printf(\"Hello World\\n\"); 9 printf(\"%d\\n\",a); 10 return 0; (gdb) b 8 Breakpoint 1 at 0x401145: file main.c, line 8. (gdb) r Starting program: /home/a.out [Thread debugging using libthread_db enabled] Breakpoint 1, main () at main.c:8 8 printf(\"Hello World\\n\"); (gdb) p a $1 = 10 (gdb) info locals a = 10 (gdb) set var a=11 (gdb) p a $2 = 11 (gdb) p &a $3 = (int *) 0x7fffffffe23c (gdb) x 0x7fffffffe23c 0x7fffffffe23c: 0x0000000b (gdb) x/10x 0x7fffffffe23c 0x7fffffffe23c: 0x0000000b 0x00000001 0x00000000 0xf7c29590 0x7fffffffe24c: 0x00007fff 0x00000000 0x00000000 0x00401136 0x7fffffffe25c: 0x00000000 0x00000000 (gdb) n Hello World 9 printf(\"%d\\n\",a); (gdb) 11 10 return 0; (gdb)","s":"3.7 寄存器操作","u":"/docs/note/os/debug/gdb","h":"#37-寄存器操作","p":1204},{"i":1233,"t":"# 使用 `info inferior` 命令查看当前程序中的所有进程。 (gdb) info inferior # 使用 `inferior` 命令切换不同进程进行调试 (gdb) inferior <process_id> # `follow-fork-mode` 参数用来设置gdb跟踪父进程还是子进程 # `set follow-fork-mode parent` 在fork之后，调试父进程，这也是gdb的默认值 (gdb) set follow-fork-mode child/parent # gdb是否控制未调试的进程 # `set detach-on-fork on` gdb默认值，gdb不控制未调试的进 (gdb) set detach-on-fork on/off gdb 默认只会跟踪父进程。当断点处在子进程路径时，程序可能会直接执行结束退出。 此时，可以通过设置 set follow-fork-mode child 再执行 run运行调试。 也可以 break fork 断点到fork时。","s":"4.1 多进程调试","u":"/docs/note/os/debug/gdb","h":"#41-多进程调试","p":1204},{"i":1235,"t":"# 使用 `info threads` 命令查看当前程序中的所有线程。 (gdb) info threads # 使用 `thread` 命令切换到特定线程。 (gdb) thread thread_id (gdb) break location thread thread_id","s":"4.2 多线程调试","u":"/docs/note/os/debug/gdb","h":"#42-多线程调试","p":1204},{"i":1237,"t":"# 标记观察断点，监控数值更改（wirte） (gdb) watch expression or variable # 标记观察断点，监控数值读取（read） (gdb) rwatch expression or variable # 标记观察断点。同时监控数据读取与更改（read and write） (gdb) awatch expression or variable 示例 $ gdb -q a.out Reading symbols from a.out...done. (gdb) l 1 #include <stdio.h> 2 3 int get_sum(int n) { 4 int sum = 0, i; 5 for (i = 0; i < n; i++) { 6 sum += i; 7 } 8 return sum; 9 } 10 (gdb) b 6 Breakpoint 1 at 0x4005ad: file main.c, line 6. (gdb) r Starting program: /tmp/a.out Missing separate debuginfos, use: yum debuginfo-install glibc-2.28-164.el8.x86_64 Breakpoint 1, get_sum (n=100) at main.c:6 6 sum += i; (gdb) watch i==99 Hardware watchpoint 2: i==99 (gdb) clear 6 Deleted breakpoint 1 (gdb) c Continuing. Hardware watchpoint 2: i==99 Old value = 0 New value = 1 0x00000000004005b7 in get_sum (n=100) at main.c:5 5 for (i = 0; i < n; i++) { (gdb) p i $1 = 99 (gdb) p sum $2 = 4851","s":"4.3 观察点(Watchpoints)","u":"/docs/note/os/debug/gdb","h":"#43-观察点watchpoints","p":1204},{"i":1239,"t":"参考链接 # 用捕捉断点监控某一事件的发生，等同于在程序中该事件发生的位置打普通断点。 (gdb) catch event 普通断点作用于程序中的某一行，当程序运行至此行时停止执行，观察断点作用于某一变量或表达式，当该变量（表达式）的值发生改变时，程序暂停。而捕捉断点的作用是，监控程序中某一事件的发生，例如程序发生某种异常时、某一动态库被加载时等等，一旦目标时间发生，则程序停止执行。","s":"4.4 捕获点(Catchpoints)","u":"/docs/note/os/debug/gdb","h":"#44-捕获点catchpoints","p":1204},{"i":1241,"t":"# 使用 `source` 命令执行 GDB 脚本，实现自动化调试。 (gdb) source <script_file>","s":"4.5 自动化调试","u":"/docs/note/os/debug/gdb","h":"#45-自动化调试","p":1204},{"i":1243,"t":"# GDB支持与远程系统调试，使用 `target remote` 命令连接远程程序。 (gdb) target remote <hostname>:<port>","s":"4.6 远程调试","u":"/docs/note/os/debug/gdb","h":"#46-远程调试","p":1204},{"i":1245,"t":"f 切换 (gdb) bt #0 add (low=1, high=10) at test1.c:5 #1 0x00000000004005e6 in main (argc=1, argv=0x7fffffffe408) at test1.c:12 (gdb) frame 1 #1 0x00000000004005e6 in main (argc=1, argv=0x7fffffffe408) at test1.c:12 12 result[0] = add(1,10); (gdb) f 1 #1 0x00000000004005e6 in main (argc=1, argv=0x7fffffffe408) at test1.c:12 12 result[0] = add(1,10); (gdb) i locals result = {-134224088, 32767, 0, 0}","s":"4.7 切换栈帧","u":"/docs/note/os/debug/gdb","h":"#47-切换栈帧","p":1204},{"i":1248,"t":"# -O0禁用优化，可以帮助调试代码 gcc -O0 -g program.c -o program","s":"5.1 编译时添加调试信息","u":"/docs/note/os/debug/gdb","h":"#51-编译时添加调试信息","p":1204},{"i":1250,"t":"# 拷贝elf中的调试信息到debug文件 objcopy --only-keep-debug program program.debug # 瘦身二进制程序 strip --strip-debug program","s":"5.2 分离调试信息","u":"/docs/note/os/debug/gdb","h":"#52-分离调试信息","p":1204},{"i":1252,"t":"运行时加载 (gdb) symbol-file program.debug 提前做好关联，无需运行时加载 $ objcopy --add-gnu-debuglink=program.debug program $ objdump -s -j .gnu_debuglink program program: file format elf64-x86-64 Contents of section .gnu_debuglink: 0000 70726f67 72616d2e 64656275 67000000 program.debug... 0010 cb07fc34","s":"5.3 加载调试信息","u":"/docs/note/os/debug/gdb","h":"#53-加载调试信息","p":1204},{"i":1255,"t":"(gdb) run (gdb) bt","s":"6.1 段错误调试","u":"/docs/note/os/debug/gdb","h":"#61-段错误调试","p":1204},{"i":1257,"t":"（结合valgrind使用）","s":"6.2 内存泄漏检查","u":"/docs/note/os/debug/gdb","h":"#62-内存泄漏检查","p":1204},{"i":1259,"t":"（多线程调试示例）","s":"6.3 死锁检测","u":"/docs/note/os/debug/gdb","h":"#63-死锁检测","p":1204},{"i":1262,"t":"GDB通过ptrace系统调用实现进程控制： long ptrace(enum __ptrace_request request, pid_t pid, void *addr, void *data);","s":"7.1 ptrace系统调用","u":"/docs/note/os/debug/gdb","h":"#71-ptrace系统调用","p":1204},{"i":1264,"t":"将断点处指令替换为int 3 保存原始指令 触发SIGTRAP信号","s":"7.2 断点实现原理","u":"/docs/note/os/debug/gdb","h":"#72-断点实现原理","p":1204},{"i":1266,"t":"GNU GDB官方文档 《The Art of Debugging with GDB, DDD, and Eclipse》 GDB Cheat Sheet","s":"8. 参考资源","u":"/docs/note/os/debug/gdb","h":"#8-参考资源","p":1204}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/4",[0,7.278,1,10.841,2,10.841,3,8.462]],["t/7",[4,0.24,5,7.045,6,7.412,7,7.412,8,7.412,9,5.147,10,7.412]],["t/9",[4,0.24,5,7.045,6,7.412,7,7.412,8,7.412,9,5.147,10,7.412]],["t/11",[4,0.24,5,7.045,6,7.412,7,7.412,8,7.412,9,5.147,10,7.412]],["t/13",[11,8.381,12,8.505,13,8.505,14,7.771,15,8.505,16,8.818,17,3.881,18,8.505,19,8.505,20,8.505,21,7.771,22,7.771,23,6.013,24,4.275,25,8.505,26,8.505]],["t/15",[0,3.614,16,4.613,24,2.706,27,3.052,28,5.384,29,4.919,30,4.613,31,5.384,32,5.384,33,5.384,34,5.384,35,5.384,36,4.202,37,5.384,38,8.842,39,5.384,40,4.385,41,1.845,42,5.384,43,4.919,44,5.384,45,5.384,46,3.92,47,4.919,48,5.384,49,4.919,50,5.384,51,5.384,52,5.384,53,6.528,54,5.384,55,4.613,56,5.384,57,3.705,58,4.919,59,4.919,60,5.384,61,5.384,62,2.365,63,3.203,64,4.385,65,5.384,66,4.051,67,4.919,68,5.384,69,8.842,70,8.842,71,4.385,72,5.384,73,7.619,74,4.202,75,5.384,76,5.384,77,4.919,78,1.508,79,3.099,80,3.052,81,4.202,82,5.384,83,3.532,84,2.882,85,5.384,86,2.882,87,5.384,88,4.919,89,5.384,90,2.387,91,5.384,92,4.613,93,5.384,94,1.57,95,5.384,96,5.384,97,4.613,98,2.921,99,4.613,100,4.385,101,4.919,102,5.384]],["t/17",[11,8.232,14,10.144,36,5.448,80,3.956,94,2.035,103,6.98,104,6.378,105,5.981,106,6.98,107,2.957,108,6.98,109,4.39,110,5.685,111,6.378,112,6.98,113,6.98,114,6.98,115,6.98,116,6.98,117,6.98,118,6.98,119,7.36,120,6.378,121,6.98,122,4.804,123,6.98,124,6.98,125,6.378,126,6.98,127,6.378,128,6.98,129,6.378,130,6.98,131,6.98,132,6.378,133,6.98]],["t/19",[3,2.424,11,2.529,16,2.661,27,1.76,36,3.914,43,2.837,47,2.837,53,2.661,55,4.297,58,6.617,59,6.617,62,2.203,67,4.582,80,2.842,88,2.837,90,2.797,94,0.905,101,2.837,104,2.837,110,2.529,127,4.582,129,2.837,134,2.529,135,3.105,136,8.5,137,7.242,138,2.661,139,3.105,140,6.617,141,2.837,142,3.105,143,3.105,144,3.105,145,3.105,146,3.105,147,3.105,148,3.105,149,3.105,150,2.424,151,3.105,152,3.105,153,3.105,154,4.582,155,3.105,156,3.105,157,3.105,158,2.137,159,3.105,160,3.105,161,3.105,162,3.105,163,3.105,164,3.105,165,3.105,166,2.661,167,3.105,168,3.105,169,3.105,170,3.105,171,5.015,172,2.661,173,2.661,174,3.105,175,3.105,176,3.105,177,3.105,178,3.105,179,2.261,180,3.105,181,3.105,182,3.105,183,2.424,184,3.105,185,3.105,186,3.105,187,5.015,188,6.308,189,3.105,190,2.661,191,2.661,192,5.015,193,2.934,194,2.661,195,2.837,196,3.105,197,3.105,198,3.105,199,2.085,200,3.105,201,3.105,202,5.015,203,3.105,204,3.652,205,1.88,206,3.105,207,3.105,208,3.105,209,3.105,210,3.914,211,3.105,212,3.105,213,2.195,214,3.105,215,3.105,216,3.105,217,5.015,218,2.661,219,3.105,220,3.105,221,2.424,222,2.261,223,4.582,224,5.764,225,3.105,226,3.105,227,3.105,228,3.105,229,3.105,230,3.105,231,2.137,232,3.105,233,5.015,234,2.424,235,3.105,236,3.105,237,3.105,238,5.015,239,3.105,240,3.105,241,3.105,242,3.105,243,1.788,244,3.105,245,3.105,246,2.085,247,3.105,248,3.105,249,2.424,250,2.837,251,3.105,252,4.297,253,2.837,254,2.424,255,3.105,256,3.105,257,3.105,258,5.015,259,3.105,260,2.837,261,2.261,262,3.105,263,3.105,264,3.105,265,3.105,266,3.105,267,4.582,268,3.105,269,2.529,270,3.105,271,2.661,272,1.619,273,2.661,274,3.105,275,3.105,276,4.297,277,3.105,278,3.105,279,3.105,280,3.105,281,1.417,282,3.105,283,2.424,284,3.105,285,3.105,286,3.105,287,3.105,288,3.105,289,2.529,290,2.837,291,3.105]],["t/21",[0,4.247,36,4.938,53,5.421,62,2.778,80,3.585,90,2.804,140,8.796,246,4.247,292,6.326,293,6.326,294,3.831,295,6.326,296,8.516,297,6.326,298,9.627,299,6.326,300,6.326,301,6.326,302,6.326,303,10.299,304,5.466,305,6.326,306,3.902,307,8.516,308,6.326,309,6.326,310,6.326,311,5.78,312,4.606,313,6.326,314,3.902,315,3.073,316,6.326,317,6.326,318,5.78,319,6.326,320,6.326,321,6.326,322,6.326,323,5.152,324,5.78,325,6.326,326,2.634,327,3.107,328,6.326,329,6.326,330,6.326,331,6.326,332,6.326]],["t/23",[11,3.963,29,6.474,41,1.668,55,4.17,62,2.137,64,3.963,74,3.798,86,2.605,94,2.066,111,4.447,119,3.544,120,4.447,141,8.386,154,6.474,195,4.447,250,4.447,253,4.447,267,4.447,315,2.364,327,4.105,333,4.866,334,4.866,335,4.866,336,4.866,337,4.866,338,3.124,339,4.866,340,4.866,341,4.866,342,4.866,343,4.866,344,4.866,345,4.866,346,4.866,347,4.866,348,4.866,349,4.866,350,4.866,351,4.866,352,4.866,353,7.086,354,4.17,355,1.583,356,4.866,357,9.755,358,4.866,359,4.866,360,4.866,361,4.866,362,4.866,363,4.866,364,4.866,365,6.474,366,3.798,367,4.866,368,4.866,369,4.17,370,3.349,371,4.866,372,2.717,373,4.866,374,4.866,375,4.866,376,3.267,377,3.544,378,3.029,379,7.086,380,4.866,381,4.866,382,4.866,383,4.877,384,4.866,385,4.866,386,4.447,387,4.866,388,4.866,389,4.866,390,4.866,391,4.866,392,4.866,393,3.124,394,3.963,395,4.866,396,2.538,397,4.866,398,4.866,399,4.866,400,4.866,401,4.447,402,4.866]],["t/27",[4,0.206,403,4.123,404,7.623,405,8.256,406,7.163,407,9.036,408,9.036]],["t/29",[4,0.208,66,6.859,355,2.965,404,6.121,409,2.24,410,4.816,411,3.932,412,7.117,413,5.091]],["t/31",[4,0.245,414,9.312]],["t/34",[4,0.206,94,2.634,327,4.439,411,3.897,415,10.67,416,4.918,417,4.006,418,7.743]],["t/36",[4,0.232]],["t/38",[4,0.242,419,4.67]],["t/41",[4,0.21,213,6.564,420,3.059,421,8.483,422,4.196,423,3.833,424,7.562]],["t/43",[4,0.217]],["t/45",[4,0.243,417,3.739,423,3.482,425,4.641,426,5.804,427,7.227]],["t/48",[355,3.02,409,2.281,416,4.997,421,8.483,428,6.09,429,3.801,430,5.727]],["t/50",[4,0.232]],["t/52",[4,0.209,416,4.24,429,4.415,431,6.699,432,6.922,433,7.493,434,9.2]],["t/54",[4,0.247,419,4.74]],["t/57",[396,5.026,435,7.523,436,4.735,437,8.807]],["t/59",[4,0.226]],["t/61",[4,0.24,438,6.505]],["t/64",[81,8.417,94,2.682,435,7.181,439,6.699,440,9.2,441,6.922,442,7.884,443,6.922]],["t/66",[4,0.217]],["t/68",[4,0.246,419,4.556,435,6.819,437,7.983,439,6.362,444,8.736]],["t/71",[94,2.783,428,6.263,439,6.952,445,7.776,446,8.723]],["t/73",[4,0.217]],["t/75",[4,0.242,419,4.67]],["t/78",[427,8.181,428,6.263,447,9.547,448,8.723,449,8.723]],["t/80",[4,0.217]],["t/82",[4,0.243,419,4.589]],["t/85",[4,0.178,94,2.682,428,6.035,439,6.699,446,9.853,449,8.406,450,9.2,451,9.2]],["t/87",[4,0.226]],["t/89",[4,0.244,419,4.472]],["t/92",[4,0.206,23,5.504,74,6.077,86,4.167,94,2.27,100,6.341,355,2.532,376,5.227,378,3.328,403,3.553,412,6.077,452,6.077,453,7.937,454,6.341,455,3.701,456,6.256,457,4.632,458,5.857,459,6.671,460,6.341,461,6.077,462,7.785,463,4.632,464,6.077,465,5.669]],["t/94",[84,4.013,86,4.013,90,4.219,269,6.106,355,2.438,378,4.068,411,3.233,417,3.324,418,6.424,452,5.852,453,7.751,454,6.106,455,4.524,457,4.461,466,6.106,467,6.383,468,7.751,469,6.424,470,6.106,471,5.459,472,5.64,473,4.963,474,5.033]],["t/97",[4,0.243,92,6.472,378,3.228,410,3.99,411,4.124,455,3.591,470,6.151,471,5.5,472,5.682,475,4.75,476,4.954,477,6.901,478,4.281]],["t/99",[4,0.241,378,4.208,411,3.784,431,4.817,455,3.145,467,5.418,471,6.389,472,6.601,475,4.16,476,4.339,479,4.553,480,3.75,481,5.669,482,4.899,483,3.365,484,4.006,485,3.749,486,3.87,487,4.553,488,5.388,489,5.669,490,5.669,491,5.164]],["t/102",[4,0.243,90,3.324,378,3.204,411,4.104,417,3.324,455,3.564,467,4.126,471,5.459,475,4.715,476,4.918,477,6.85,492,4.624,493,6.85,494,7.497]],["t/104",[4,0.242,62,2.814,86,3.429,90,2.84,355,2.083,372,3.577,378,3.671,396,3.341,411,3.704,455,3.045,467,4.726,469,5.489,471,4.665,473,4.479,474,4.301,475,4.029,476,4.202,482,4.795,483,3.259,492,3.951,493,5.853,495,5.489,496,5.217,497,2.461,498,6.406,499,5,500,4.665,501,6.406]],["t/106",[4,0.209,269,6.542,315,3.902,409,2.442,411,3.464,452,6.27,453,8.093,454,6.542,455,4.724,467,5.937,471,5.849,482,4.485,483,4.086,486,4.699,502,8.032,503,8.032,504,8.032,505,4.779]],["t/108",[4,0.212,62,2.944,84,4.738,86,3.588,90,3.924,269,5.459,318,6.125,372,3.742,378,3.783,409,1.647,411,2.891,417,2.972,423,2.768,452,5.232,453,7.209,454,5.459,455,4.711,459,5.744,467,5.453,469,5.744,470,5.459,471,6.445,472,5.043,473,3.495,482,3.742,488,5.459,506,3.799,507,5.043,508,6.125,509,5.744,510,4.134,511,4.881,512,3.221,513,5.744,514,5.043,515,5.232,516,3.988]],["t/110",[4,0.196,420,2.733,517,4.936,518,5.569,519,5.325,520,4.17,521,4.371,522,7.58,523,4.853,524,4.936,525,2.768,526,7.58,527,3.902,528,5.023,529,5.325,530,4.17,531,4.936,532,4.03,533,5.442]],["t/113",[4,0.126,17,2.961,27,4.909,41,2.223,62,2.85,71,5.284,199,4.356,243,3.735,314,4.002,413,3.623,416,2.99,480,2.773,484,3.929,492,4.002,495,5.56,496,5.284,521,2.798,525,2.891,528,5.905,529,6.259,532,5.054,534,3.623,535,4.002,536,4.724,537,4.256,538,5.064,539,7.422,540,3.301,541,2.824,542,4.587,543,5.56,544,5.284,545,4.587,546,5.284,547,5.56,548,5.928,549,2.961,550,3.473,551,5.284,552,3.57,553,5.56,554,5.56,555,5.928,556,3.929,557,5.928]],["t/115",[4,0.233,409,1.943,474,5.308,525,3.284,527,3.72,528,4.788,529,5.075,532,3.841,535,4.877,540,4.022,550,5.267,552,4.351,558,4.232,559,4.351,560,5.308,561,5.59,562,4.788,563,4.552]],["t/118",[4,0.248,46,2.112,107,1.229,378,2.028,403,1.324,409,0.713,417,2.103,517,3.582,520,1.458,525,2.901,531,2.823,532,1.409,558,2.54,564,0.851,565,1.947,566,2.112,567,1.947,568,1.726,569,1.726,570,1.756,571,1.644,572,1.756,573,2.182,574,3.627,575,2.362,576,1.311,577,2.485,578,1.425,579,1.789,580,1.35,581,1.697,582,1.903,583,1.198]],["t/120",[4,0.248,525,1.425,532,2.075,574,2.227,580,1.989,581,2.499,584,2.03]],["t/122",[4,0.247,417,3.39,517,3.221,525,3.216,558,2.897,574,2.823,576,2.446,578,3.757,579,3.339,582,3.551,585,4.946]],["t/124",[4,0.244]],["t/126",[4,0.23,62,3.419,78,2.18,281,3.553,294,4.714,409,1.913,429,3.188,518,5.227,524,4.632,525,3.252,530,3.914,550,4.167,560,5.227,562,4.714,574,4.06,586,5.227,587,7.114,588,5.504,589,6.341,590,5.358,591,6.341,592,5.669]],["t/128",[4,0.231,17,3.473,94,2.218,294,4.608,304,4.885,396,3.968,474,5.109,483,4.887,517,4.528,520,3.825,525,2.54,527,3.58,540,3.871,550,5.142,561,5.38,593,6.953,594,6.953,595,3.781,596,3.968,597,2.946,598,3.697,599,4.249,600,2.661]],["t/131",[4,0.229,46,5.302,94,2.123,204,5.302,205,4.409,231,5.011,234,5.683,289,5.93,583,3.006,601,6.362,602,4.674,603,5.478,604,6.653,605,5.302,606,6.653,607,6.653,608,6.653,609,3.499,610,6.653,611,6.653,612,6.653,613,5.93,614,6.653,615,5.478,616,5.93,617,4.888,618,6.653,619,3.577,620,6.239]],["t/133",[4,0.193,41,3.425,84,4.339,94,1.715,204,4.285,315,2.859,326,3.376,425,4.461,506,3.335,567,3.951,583,2.43,601,7.236,602,7.126,616,4.793,617,5.442,619,4.556,621,5.043,622,5.377,623,4.427,624,7.407,625,4.427,626,5.377,627,3.238,628,3.388,629,5.377,630,7.407,631,4.593,632,3.193,633,5.377,634,4.793,635,4.427,636,5.377,637,5.377,638,5.377,639,4.427,640,5.377,641,4.793,642,3.03,643,5.377,644,5.377,645,5.377]],["t/135",[4,0.215,83,5.03,429,4.326,483,3.901,506,5.471,583,3.166,603,5.768,613,6.245,617,6.48,646,5.277,647,7.006,648,5.099,649,7.862,650,8.82,651,7.006,652,6.245,653,4.281,654,4.822,655,7.006,656,5.583,657,6.57]],["t/137",[4,0.247,41,1.885,204,4.006,597,2.129,601,4.771,602,4.965,658,4.714,659,4.714,660,4.48,661,4.48,662,4.48,663,5.026,664,3.889,665,4.714,666,2.869]],["t/139",[4,0.244,83,5.187,505,4.705,528,4.788,572,4.788,634,6.44,667,6.775,668,7.225]],["t/141",[4,0.181,9,4.332,62,3.198,78,2.039,99,6.239,243,5.377,314,4.491,326,3.032,372,4.065,409,1.789,429,2.981,512,3.499,549,3.323,571,4.127,596,3.797,601,4.491,603,5.478,617,4.888,628,4.192,648,3.846,649,5.93,669,5.148,670,6.653,671,5.683,672,5.478,673,5.148,674,6.653,675,5.148,676,3.228,677,5.93,678,5.478,679,6.653,680,5.93,681,8.535,682,6.239]],["t/143",[4,0.206,41,2.668,78,2.18,107,3.298,355,2.532,376,5.227,396,4.06,473,4.06,537,6.393,563,4.482,601,4.802,602,6.829,678,5.857,683,5.227,684,6.89,685,6.671,686,6.341,687,5.857,688,4.413,689,5.227,690,7.114,691,5.504,692,7.114]],["t/145",[243,4.855,425,4.641,474,5.662,479,5.804,490,7.227,537,5.532,568,5.018,583,3.482,601,5.202,602,7.077,617,5.662,627,4.641,684,5.963,688,4.78,693,7.706,694,7.706,695,5.662]],["t/147",[4,0.24,619,4.519]],["t/149",[86,4.477,243,4.815,417,3.708,429,3.425,505,4.977,568,4.977,583,3.453,588,5.914,619,5.004,684,7.202,696,6.812,697,6.529,698,7.642,699,7.642,700,7.642,701,6.812,702,7.642,703,6.293]],["t/151",[4,0.248,90,1.332,243,1.729,372,1.677,409,0.738,443,2.26,507,2.26,537,3.202,568,1.787,597,1.163,600,1.05,601,3.804,602,3.134,619,2.398,627,1.653,631,2.345,661,2.446,680,2.446,683,2.017,684,3.452,688,2.767,689,2.017,691,2.124,701,3.976,704,2.067,705,2.745,706,2.745,707,2.187,708,4.461,709,1.819,710,2.745]],["t/153",[4,0.198,107,3.573,281,3.849,429,3.453,525,3.417,532,4.974,559,6.067,580,4.767,711,7.706,712,7.706,713,6.583,714,7.706,715,7.706]],["t/155",[525,3.216,532,4.682,559,5.304,580,4.487]],["t/158",[4,0.246,281,3.954,378,2.219,403,2.369,525,3.156,531,4.417,532,3.606,538,4.052,559,4.085,574,4.519,580,3.456,581,3.037,583,3.065,716,3.014,717,4.228]],["t/160",[4,0.246,78,2.568,281,4.185,564,2.075,716,2.874]],["t/162",[4,0.245,525,2.578,559,4.251,574,4.029,580,4.516,709,4.678]],["t/164",[4,0.245,598,3.902,599,4.485,600,2.809]],["t/166",[4,0.237,598,4.238,599,4.871,600,3.051,718,4.709]],["t/170",[0,5.908,4,0.23,78,2.464,422,3.977,525,2.937,716,3.573,719,4.775,720,4.649,721,7.541,722,7.541]],["t/172",[4,0.218,24,3.66,41,3.201,261,5.302,327,3.577,355,2.368,396,3.797,420,3.077,425,4.007,532,4.538,559,5.14,570,6.245,580,3.39,719,3.951,720,3.846,723,6.653,724,5.558,725,6.653,726,8.535,727,6.653,728,6.653,729,5.93,730,6.653,731,6.239,732,5.93,733,5.683]],["t/174",[4,0.247,281,4.387,378,2.301,394,4.385,403,2.457,422,3.996,525,1.797,531,3.203,532,2.615,570,3.26,574,3.973,719,2.921,724,3.203,734,5.387]],["t/176",[4,0.248,78,1.376,281,3.256,422,2.22,525,1.64,532,3.466,564,1.441,574,2.562,580,2.288,581,2.875,642,2.53,719,2.666,735,4.002]],["t/178",[4,0.247,598,3.438,599,3.952,600,2.475]],["t/180",[4,0.182,94,2.154,107,3.13,172,6.33,193,4.322,210,7.359,420,2.434,455,3.512,463,4.396,516,4.396,520,3.714,541,3.215,549,4.302,562,4.474,600,2.584,736,4.846,737,5.558,738,6.017,739,5.223,740,4.96,741,6.017,742,5.379,743,4.96,744,6.017,745,6.017,746,4.396,747,6.75,748,5.558,749,6.75,750,4.96,751,6.017,752,5.766,753,5.558]],["t/182",[4,0.21,78,2.6,107,3.934,458,6.985,600,3.247,615,6.985,754,6.985]],["t/184",[4,0.245,78,2.4,79,1.453,84,1.351,98,3.465,107,1.07,199,1.695,272,3.708,304,1.62,355,1.375,378,1.079,396,1.316,409,1.039,416,1.164,417,1.119,420,1.393,441,1.899,455,1.2,478,2.397,480,3.288,484,1.529,485,1.431,497,0.97,520,1.269,521,1.089,525,0.842,533,2.774,534,1.409,541,1.099,545,1.785,552,1.389,556,1.529,564,2.396,569,2.516,580,2.541,583,2.636,595,1.254,597,1.637,600,0.883,609,1.213,666,1.316,669,1.785,676,1.119,716,1.025,718,1.717,736,1.656,755,1.899,756,2.054,757,4.063,758,2.466,759,3.247,760,2.056,761,1.97,762,4.984,763,1.899,764,1.899,765,1.785,766,2.307,767,2.307,768,1.213,769,1.899,770,1.502,771,3.859,772,2.307,773,2.163,774,2.056,775,1.24,776,2.307,777,5.602,778,4.515,779,5.2,780,6.497,781,3.624,782,3.864,783,1.62,784,2.056,785,2.307,786,1.62,787,1.785,788,2.163,789,1.3]],["t/186",[4,0.23,98,4.038,150,5.809,326,3.099,420,2.452,430,4.59,455,3.538,457,4.428,521,4.085,541,3.239,584,3.538,597,2.881,600,2.603,688,4.218,718,3.846,746,4.428,790,5.289,791,4.506,792,3.832,793,4.59,794,4.996,795,6.061,796,6.8,797,6.061,798,5.262]],["t/188",[4,0.23,283,6.422,327,4.042,420,2.711,455,3.912,457,4.896,467,4.528,597,3.185,628,4.737,770,4.896,799,7.518,800,4.737,801,5.663,802,7.518,803,5.397,804,6.19,805,7.518]],["t/190",[4,0.221,409,2.055,429,3.425,455,3.976,512,4.019,533,5.487,562,5.065,597,3.238,806,3.708,807,5.914,808,6.529,809,5.065,810,5.065,811,7.642,812,6.293,813,7.642,814,4.893]],["t/192",[0,5.033,4,0.24,94,2.186,315,3.642,420,2.47,443,5.64,455,3.564,541,3.263,550,4.013,567,5.033,571,4.249,597,2.902,600,2.622,688,4.249,703,5.64,745,6.106,783,4.812,798,5.301,815,5.459,816,6.85]],["t/194",[4,0.236,17,3.499,94,2.235,193,4.486,403,3.499,436,3.766,455,3.645,523,4.486,584,3.645,597,2.968,619,3.766,765,5.421,809,4.643,810,4.643,817,7.006,818,6.57,819,7.006,820,8.82,821,5.583,822,4.05,823,7.006]],["t/196",[4,0.246,94,2.021,436,3.405,455,3.296,550,3.711,583,2.862,597,2.684,800,5.209,824,6.334]],["t/198",[4,0.249,78,0.165,81,0.461,272,0.308,314,0.364,409,0.145,410,0.312,411,0.254,417,0.262,420,0.372,429,0.242,430,0.364,467,0.325,512,0.283,529,0.379,541,0.491,545,0.417,571,0.334,648,0.312,716,0.24,775,0.29,790,0.329,791,0.357,815,0.43,825,0.278,826,0.406,827,0.364,828,0.539,829,0.444,830,0.351,831,0.506,832,0.481,833,0.379,834,0.364,835,0.287,836,0.379,837,0.461,838,0.406,839,0.758]],["t/200",[4,0.237,63,4.936,78,2.323,193,4.853,536,6.041,573,6.241,718,4.116,756,4.03,760,6.756,761,6.475,825,3.902,840,5.117]],["t/202",[4,0.231,63,4.461,94,2.186,107,3.176,109,4.715,110,6.106,420,2.47,520,3.769,549,3.421,571,4.249,600,2.622,652,6.106,741,6.106,743,5.033,744,6.106,775,3.683,797,6.106,801,5.16,821,5.459,822,3.96,841,4.316,842,5.16,843,5.301,844,6.106,845,6.85,846,6.85,847,5.033]],["t/205",[326,3.267,355,2.552,420,2.584,429,3.212,512,3.77,525,3.268,531,4.668,532,3.811,559,4.317,562,4.751,628,4.516,676,3.478,751,6.39,800,5.637,806,3.478,825,3.691,848,6.39,849,7.169,850,6.723,851,6.39,852,4.934,853,6.39,854,6.124,855,7.169,856,4.091,857,5.036]],["t/208",[4,0.247,98,1.517,107,1.951,119,2.036,281,1.276,304,1.795,378,2.908,403,1.276,409,1.442,422,2.081,428,1.834,455,2.189,463,1.664,465,2.036,510,1.725,517,1.664,525,2.855,531,3.492,532,2.237,559,1.539,560,3.091,564,0.82,565,1.877,566,2.036,567,1.877,568,1.664,569,1.664,570,1.693,574,3.923,575,2.278,582,1.834,583,2.809,609,1.344,623,2.104,628,1.61,717,2.278,718,1.136,720,1.477,724,1.664,800,1.61,807,3.255,853,2.278,858,3.554,859,3.75,860,2.84,861,2.555,862,3.353,863,2.555,864,1.977,865,1.877,866,2.278]],["t/210",[4,0.248,532,3.503,574,2.6,580,3.358,581,2.917,642,2.568,709,3.019,735,4.061,838,3.432,867,4.556,868,4.556,869,3.892]],["t/212",[4,0.246]],["t/214",[4,0.247,41,2.017,525,1.964,558,3.15,583,2.43,598,2.859,599,3.286,600,2.058,848,4.793]],["t/217",[525,3.599,540,5.486,646,6.332,676,4.079,825,4.328,839,6.176,870,7.884]],["t/220",[4,0.248,40,1.865,281,1.045,304,1.47,378,2.173,409,0.563,422,1.035,428,1.502,455,1.852,517,2.318,525,3.048,527,1.077,531,2.318,540,1.165,559,1.26,560,1.538,574,2.031,582,1.502,583,2.476,609,1.101,758,1.035,806,1.727,825,2.821,860,1.413,864,1.619,865,1.538,866,1.865,871,2.359,872,3.56,873,2.681,874,3.041,875,1.34,876,2.093,877,2.093,878,1.865,879,1.963,880,2.093,881,1.619,882,1.723,883,1.865]],["t/222",[4,0.247,598,2.962,599,3.404,600,2.132]],["t/225",[246,6.409,429,3.909,480,4.081,525,3.186,540,4.857]],["t/228",[4,0.248,107,1.138,246,1.803,281,2.032,355,0.873,378,2.438,409,1.401,422,1.213,480,2.837,517,2.649,525,2.934,558,2.383,564,1.306,565,1.803,566,1.955,567,1.803,568,1.598,569,1.598,578,1.319,579,1.656,756,1.304,790,1.499,806,1.19,865,1.803,871,1.626,884,3.626,885,1.478,886,2.187,887,2.187]],["t/230",[4,0.238,78,2.486,281,4.051,480,3.794,525,2.963,716,3.605]],["t/232",[4,0.248,598,2.732,599,3.14,600,1.966]],["t/235",[4,0.222,17,3.526,404,5.187,417,3.425,419,4.029,420,2.545,423,3.19,429,3.163,525,3.711,532,3.753,564,2.265,584,4.611,628,4.448,677,6.292,827,4.765,888,4.859,889,6.292,890,6.62,891,8.311,892,7.059,893,6.292]],["t/238",[4,0.248,78,0.678,281,1.864,403,1.105,416,1.882,525,2.809,527,1.139,558,2.186,578,1.19,579,2.519,720,1.279,790,1.352,865,1.626,871,1.467,886,1.972,887,1.972,888,1.523,894,2.679,895,2.213,896,1.89]],["t/240",[4,0.248,78,1.05,94,1.093,107,1.588,409,0.921,525,1.943,584,1.782,716,1.522]],["t/242",[4,0.246,416,4.189,457,4.153,525,3.033,827,4.305,888,6.357,897,4.018]],["t/244",[4,0.248,598,1.678,599,1.929,600,1.208]],["t/247",[281,4.123,429,3.7,525,3.561,825,5.019,827,5.574,888,5.683,898,8.69,899,5.574]],["t/250",[4,0.248,78,1.097,409,0.401,416,1.337,525,1.815,564,0.851,666,0.851,720,0.863,790,0.912,825,2.558,862,2.113,871,0.989,894,1.071,896,1.275,898,1.33,899,1.79,900,1.228,901,2.183,902,1.189,903,1.275]],["t/252",[4,0.246,78,2.084,564,2.182,825,3.501]],["t/254",[4,0.241,416,4.58,525,3.316,827,4.954,888,6.786,902,5.849,904,7.339,905,7.339]],["t/256",[4,0.248,598,1.999,599,2.297,600,1.439]],["t/258",[525,3.216,590,6.633,825,4.534,906,8.259]],["t/260",[4,0.152,94,2.287,304,5.036,315,3.811,326,4.078,396,4.091,416,3.616,423,3.239,429,3.212,525,3.731,558,4.199,719,4.257,734,5.547,825,5.022,888,4.934,899,4.839,900,5.902,901,5.902,903,6.124,907,8.948,908,6.723]],["t/263",[4,0.237,406,5.758,423,3.541,426,5.903,435,6.695,597,3.32,885,4.72,899,5.29,902,6.245,909,7.349]],["t/265",[4,0.248]],["t/268",[4,0.246]],["t/270",[4,0.247,78,1.735,79,2.34,84,3.317,281,1.855,306,2.508,355,1.322,369,3.483,396,2.12,409,1.523,429,1.664,472,3.058,525,2.506,558,2.176,564,1.817,598,1.975,653,2.27,664,4.381,716,1.651,756,1.975,825,3.532,839,2.729,865,2.729,901,5.649,910,2.874,911,2.557,912,3.714,913,3.311,914,3.714]],["t/272",[4,0.248,281,2.431,825,2.506,881,3.767,900,4.008]],["t/274",[4,0.247,94,1.667,355,2.585,409,1.405,425,3.147,716,2.322,915,5.225,916,5.225]],["t/276",[4,0.243,281,3.817,517,4.977,576,3.78,885,4.603,899,5.159]],["t/278",[4,0.248,598,2.007,599,2.307,600,1.445]],["t/281",[4,0.231,27,3.902,41,2.359,78,1.928,94,2.626,107,2.917,338,4.42,409,1.692,456,4.42,461,5.374,473,3.59,480,2.943,519,4.42,564,3.123,775,5.232,917,5.608,918,6.291,919,4.622,920,4.097,921,3.503,922,4.622,923,5.374,924,4.868,925,4.097,926,6.291,927,4.739,928,5.18,929,4.42,930,5.608,931,4.622]],["t/283",[9,4.705,78,2.214,179,5.757,254,6.172,315,3.841,409,1.943,456,5.075,480,3.38,497,3.037,510,4.877,512,3.799,534,4.415,564,3.287,689,5.308,716,3.211,920,5.855,921,5.006,931,5.308,932,7.225,933,6.44,934,5.949,935,6.44]],["t/286",[4,0.244,41,1.816,78,2.455,86,4.692,90,4.232,261,3.859,315,2.574,417,3.886,492,4.647,497,2.036,510,3.269,564,2.209,716,3.059,822,2.799,841,5.046,922,5.058,933,4.316,936,3.747,937,8.009,938,5.668,939,6.884,940,4.842,941,3.747,942,6.884,943,6.456]],["t/288",[4,0.247,9,3.481,78,1.638,355,1.903,473,3.051,478,3.316,497,2.247,564,2.368,689,3.928,792,3.013,944,4.137,945,4.137]],["t/291",[4,0.244]],["t/293",[4,0.242,378,3.697,497,3.323,564,2.536,946,7.045]],["t/295",[4,0.245,86,3.87,107,3.939,417,3.205,497,2.777,786,4.64,841,4.162,947,5.888,948,6.606]],["t/298",[4,0.247,920,5.266,949,5.459,950,6.125]],["t/300",[4,0.247,497,2.558,584,3.165,619,3.271,794,4.47]],["t/302",[78,2.716,90,3.425,314,4.765,315,3.753,456,4.959,478,5.497,497,3.726,510,4.765,564,2.844,568,4.597,581,4.52,600,2.702,716,4.305,758,3.491,840,4.765,897,4.448,920,4.597,922,5.187,936,5.462,951,5.812,952,7.059,953,7.059,954,7.059,955,7.059]],["t/304",[4,0.204,9,3.988,27,3.799,62,2.944,107,3.75,109,5.566,122,4.613,294,4.059,378,2.865,396,3.495,409,2.175,429,2.744,456,4.302,480,2.865,562,4.059,564,3.301,576,3.029,689,4.5,716,2.722,768,3.221,792,3.452,832,5.459,841,3.859,847,4.5,920,3.988,921,4.503,922,4.5,925,3.988,928,5.043,929,4.302,930,5.459,931,4.5,956,6.125,957,4.5,958,5.681,959,5.459,960,5.232]],["t/307",[4,0.246,17,1.435,41,1.077,62,1.381,107,1.332,119,3.688,199,2.111,315,1.527,327,1.544,355,1.022,370,3.486,403,2.311,409,1.245,411,1.356,420,2.403,422,1.421,429,1.287,467,3.5,475,1.977,499,2.454,512,1.511,529,2.018,540,1.599,550,1.683,563,1.81,564,0.922,571,1.782,578,1.544,579,1.939,580,1.464,581,1.839,583,2.091,619,2.488,632,1.706,642,2.608,653,1.755,666,1.639,676,2.246,687,2.365,724,3.785,758,1.421,789,1.619,829,2.365,833,4.083,834,3.923,835,1.527,856,2.641,859,2.56,860,1.939,929,2.018,961,2.872,962,3.581,963,2.223,964,4.125,965,2.289,966,2.872,967,2.872,968,2.223,969,2.365,970,2.56,971,1.782,972,2.454,973,2.872,974,2.289,975,2.872,976,2.872]],["t/310",[4,0.247,84,3.004,90,1.586,326,1.489,419,4.716,422,2.536,438,2.529,492,2.206,570,3.399,580,1.665,653,3.867,719,3.045,825,1.683,835,4.393,875,3.284,881,4.897,965,4.087,969,2.691,977,2.792,978,3.268,979,5.128,980,5.128,981,2.792,982,2.462,983,3.268,984,3.065,985,3.768,986,3.268,987,2.529]],["t/312",[4,0.247,57,1.974,63,2.797,86,1.535,272,1.495,411,1.237,420,0.945,422,1.296,429,1.174,467,2.587,475,1.803,487,1.974,505,3.554,535,1.769,578,1.409,580,1.335,583,1.184,619,2.309,632,1.556,642,1.477,676,2.084,683,1.925,688,1.625,716,1.164,724,1.706,755,3.536,777,3.756,789,1.477,798,2.028,806,1.271,833,3.017,834,4.261,835,3.356,836,1.841,856,1.495,857,1.841,881,2.028,964,3.828,968,2.028,974,2.088,988,2.336,989,2.62,990,2.62,991,2.238,992,5.391,993,1.974,994,2.157,995,3.669,996,2.028]],["t/314",[4,0.248,90,1.009,98,1.234,420,0.749,422,1.028,429,2.071,467,1.252,475,1.431,489,1.949,505,1.354,512,1.093,521,0.981,578,1.117,581,2.959,595,1.13,609,2.43,619,1.117,632,1.234,642,2.605,648,2.046,662,1.853,676,1.717,683,1.527,688,1.289,724,3.553,732,1.853,733,1.776,736,1.492,789,1.995,792,1.172,798,1.608,800,3.437,815,1.656,833,1.46,834,1.403,835,1.105,836,1.46,856,2.02,857,2.486,968,1.608,971,1.289,997,2.079,998,1.949,999,1.46,1000,2.079,1001,1.776,1002,2.079,1003,1.776,1004,5.227,1005,2.079,1006,1.711,1007,2.079,1008,1.656,1009,2.079,1010,1.949,1011,2.914]],["t/316",[4,0.248,17,0.435,41,0.608,62,0.418,63,0.567,66,0.717,78,1.032,80,0.54,98,0.517,100,0.776,107,0.403,179,0.693,205,0.577,213,0.673,272,1.3,327,1.224,355,0.31,370,0.655,377,0.693,378,0.407,410,4.502,411,1.347,417,0.422,419,0.497,420,0.585,422,0.802,425,0.977,429,2.214,430,1.538,438,0.673,455,0.453,463,0.567,465,0.693,467,1.372,475,0.599,480,0.407,485,0.54,500,0.693,520,0.479,533,0.625,535,1.095,537,1.164,540,0.903,541,1.36,549,0.81,561,0.673,564,1.227,570,0.577,578,0.468,580,0.826,582,0.625,583,1.29,595,0.882,597,1.209,605,0.693,609,0.458,619,1.81,641,0.776,642,0.49,648,0.938,676,1.105,683,0.639,704,0.655,716,0.721,724,1.056,734,0.673,738,0.776,740,0.639,753,0.717,755,0.717,757,0.938,758,1.126,759,0.567,763,1.335,764,1.335,783,0.611,786,1.139,789,0.49,792,0.49,800,1.022,825,0.448,835,0.463,836,0.611,854,2.439,856,0.497,857,0.611,889,0.776,897,1.022,924,1.762,958,0.611,968,0.673,970,0.776,971,1.006,974,1.815,991,0.743,999,0.611,1003,0.743,1012,2.273,1013,0.776,1014,0.655,1015,0.776,1016,0.87,1017,0.87,1018,1.622,1019,0.87,1020,0.87,1021,0.87,1022,1.622,1023,0.693,1024,0.816,1025,0.87,1026,1.622,1027,0.87,1028,0.87,1029,2.855,1030,0.87,1031,0.87,1032,0.87,1033,2.03,1034,0.87]],["t/319",[4,0.231,78,1.915,86,3.661,94,2.615,249,5.338,420,2.253,480,4.838,519,4.39,552,4.935,564,2.005,759,4.069,768,4.809,775,5.218,919,4.591,921,5.404,925,4.069,1035,5.57,1036,6.249,1037,4.486,1038,4.591,1039,7.304,1040,3.876]],["t/321",[4,0.192,78,2.249,98,4.358,327,3.946,409,1.974,420,3.273,480,4.819,564,2.355,576,3.63,648,4.243,716,3.262,736,5.269,757,4.243,759,5.912,768,3.86,769,6.043,1041,7.339,1042,6.542,1043,6.542]],["t/324",[4,0.244,78,1.84,480,4.195,523,3.845,552,4.808,556,3.98,756,4.767,757,3.472,806,3.873,822,3.472,840,4.054,1037,4.311,1038,4.412,1044,4.412,1045,4.647,1046,4.523]],["t/326",[4,0.247,78,2.158,98,2.969,378,2.339,480,3.294,552,4.24,564,2.616,757,2.89,768,3.703,806,3.955,1037,3.589,1038,3.673,1044,5.173,1045,3.868]],["t/329",[4,0.246,158,4.644,272,3.519,510,4.162,632,3.661,676,2.991,762,5.267,789,3.475,1012,4.162,1047,5.782]],["t/331",[4,0.245,272,4.029,558,5.192,1048,6.03,1049,7.059]],["t/333",[4,0.245,78,2.099,355,2.438,378,3.204,564,2.198,609,3.602,946,6.106,1050,6.85,1051,6.85,1052,5.852]],["t/336",[4,0.246,17,3.323,78,2.039,355,2.368,556,4.409,783,4.674]],["t/338",[4,0.247,78,1.865,583,2.749,619,3.271,757,3.517,786,4.274]],["t/340",[4,0.246,326,3.546,409,2.092,480,3.64,525,2.111,527,2.976,592,4.606,739,4.473,759,5.067,1053,4.759,1054,5.421,1055,6.201,1056,4.938,1057,5.78,1058,5.421]],["t/342",[94,2.169,199,4.996,370,5.122,409,1.829,416,3.43,436,3.656,480,4.049,497,2.859,521,3.209,541,3.239,563,4.284,569,4.428,600,2.603,666,3.881,718,3.846,771,6.697,783,4.777,784,6.061,840,6.427,897,5.453,941,5.262,982,5.122,1059,6.061,1060,6.8,1061,6.8,1062,5.599,1063,4.882,1064,6.8,1065,6.8]],["t/344",[0,4.169,4,0.198,24,3.121,78,2.862,94,1.81,98,3.369,246,4.169,294,3.76,378,3.595,409,2.066,420,2.046,463,3.695,464,4.847,480,4.369,518,4.169,520,3.121,524,5.004,540,3.159,549,2.834,552,5.624,564,2.796,600,2.172,716,2.521,753,4.672,757,3.28,759,5.674,768,4.041,769,4.672,843,4.39,897,3.575,921,3.159,957,4.169,1014,4.274,1037,5.517,1038,5.646,1040,3.519,1055,4.522,1063,4.073,1066,4.672,1067,5.674]],["t/346",[4,0.198,107,4.338,513,7.227,515,6.583,516,5.018,520,4.24,541,3.67,576,3.811,754,6.345,775,5.416,1014,5.804,1040,4.78,1068,7.706,1069,7.706,1070,7.706]],["t/348",[4,0.231,17,2.1,27,2.608,41,2.33,62,2.987,78,1.288,79,2.649,80,3.854,86,2.463,183,3.591,231,3.167,249,3.591,327,2.26,383,6.869,396,2.399,409,1.131,416,3.134,420,1.516,456,4.365,457,2.738,480,4.266,484,2.786,485,4.585,521,1.984,534,3.797,535,2.838,541,2.959,552,4.451,564,2.372,600,1.609,635,3.461,666,2.399,718,2.761,740,3.089,743,3.089,757,2.43,758,3.073,768,4.293,775,4.683,791,2.786,793,2.838,835,2.235,841,2.649,917,3.747,920,2.738,921,3.459,922,3.089,944,3.253,945,3.253,987,3.253,1035,3.747,1037,3.018,1038,3.089,1039,5.538,1071,3.747,1072,3.461,1073,3.461,1074,3.253,1075,3.747,1076,2.532,1077,3.747,1078,2.692,1079,4.204,1080,4.204,1081,2.953,1082,3.089]],["t/350",[4,0.235,41,1.826,80,3.019,94,1.553,107,3.204,272,2.778,327,2.617,409,1.309,436,2.617,439,3.879,463,3.17,465,3.879,485,5.423,488,6.159,497,2.046,512,4.224,521,3.261,523,3.117,550,2.852,569,3.17,596,2.778,600,1.863,695,3.576,707,3.879,716,2.163,756,3.673,774,4.339,775,4.964,792,3.894,793,4.664,841,3.067,842,3.666,921,2.71,934,4.008,951,4.008,1012,5.422,1083,4.339,1084,4.868,1085,5.689,1086,4.868,1087,6.159,1088,4.868,1089,4.868,1090,4.868,1091,6.909,1092,4.868,1093,4.868,1094,4.868,1095,3.286,1096,3.286]],["t/352",[94,2.287,315,3.811,355,2.552,409,2.406,416,3.616,484,4.751,534,4.38,541,3.414,564,3.13,565,5.267,736,6.424,750,5.267,756,3.811,765,5.547,921,3.991,977,6.124,1008,5.713,1095,4.839,1097,7.169,1098,5.4,1099,7.169,1100,5.389,1101,7.169]],["t/355",[4,0.236,84,3.495,94,2.852,306,4.028,354,5.595,355,2.124,416,4.009,420,2.151,492,4.028,497,2.508,519,4.191,564,1.915,758,4.42,775,5.124,793,4.028,795,5.318,843,4.617,919,4.384,925,3.885,1012,5.366,1043,5.318,1052,5.097,1053,4.913,1077,5.318,1078,3.82,1100,3.593,1102,5.967,1103,5.967,1104,5.967,1105,5.967,1106,5.967]],["t/357",[79,5.557,222,5.583,383,5.277,416,3.534,432,5.768,457,5.743,586,5.147,740,5.147,758,5.272,928,5.768,929,4.922,1063,5.03,1078,6.181,1081,4.922,1107,7.271,1108,5.768,1109,8.82,1110,8.82]],["t/360",[4,0.245,78,2.307,222,4.387,378,2.575,416,2.777,457,3.585,492,3.716,564,1.767,768,2.895,775,2.96,822,3.182,927,4.146,938,4.533,1081,3.867,1082,4.045,1111,6.71,1112,4.907,1113,4.907,1114,4.533,1115,6.71,1116,3.867,1117,4.907,1118,4.907,1119,4.146]],["t/362",[4,0.246,62,2.906,90,2.933,565,4.441,938,4.977,1111,7.146,1112,5.388,1113,5.388,1115,7.146,1117,5.388,1120,6.044,1121,6.044,1122,6.044]],["t/365",[4,0.246,62,2.54,78,2.243,79,3.33,272,4.177,500,4.212,506,3.278,583,3.307,748,4.351,1082,3.883,1095,3.568,1114,4.351,1116,3.713,1119,3.981,1123,7.319,1124,4.956,1125,5.285,1126,6.524,1127,5.285,1128,3.981,1129,4.711]],["t/367",[4,0.246,78,2.183,372,3.105,422,3.522,423,3.218,506,3.152,639,5.864,748,4.184,806,2.466,807,3.932,830,4.638,885,3.06,1044,5.233,1081,3.57,1082,3.734,1095,3.43,1114,4.184,1116,3.57,1128,3.828,1129,4.529,1130,5.082,1131,6.348,1132,5.082]],["t/370",[4,0.245,306,3.926,409,1.564,460,5.184,595,3.163,792,3.278,793,3.926,1012,3.926,1133,5.816,1134,7.814,1135,7.814,1136,4.635,1137,7.814,1138,7.814,1139,7.814,1140,7.814]],["t/372",[4,0.242,27,4.861,497,3.295,564,2.515,920,5.103]],["t/374",[4,0.181,416,5.014,423,3.857,549,4.263,584,4.903,885,5.675,1046,5.011,1141,9.323,1142,5.93,1143,9.941,1144,6.653,1145,6.653,1146,6.62,1147,6.239,1148,5.478,1149,5.302,1150,5.478,1151,6.653,1152,4.674,1153,4.888]],["t/376",[4,0.208,57,4.327,62,2.761,78,1.76,79,3.619,90,2.787,94,1.833,107,2.663,122,4.327,246,4.22,273,5.387,326,2.618,355,2.045,416,3.909,420,2.071,457,5.046,466,5.12,486,3.678,520,3.16,521,2.711,524,3.741,527,2.957,541,2.736,564,1.843,591,5.12,632,3.411,758,3.832,787,4.445,791,3.807,792,3.237,812,4.73,830,3.741,840,3.878,852,3.954,921,3.198,957,4.22,1040,3.563,1063,4.124,1078,4.961,1082,4.22,1095,3.878,1108,4.73,1116,4.035,1126,5.12,1131,5.12,1154,5.744,1155,5.744,1156,5.744,1157,5.744,1158,4.907,1159,5.387,1160,5.744]],["t/379",[4,0.234,41,3.475,94,2.662,107,2.978,231,4.837,445,5.724,484,4.256,485,5.175,519,4.512,534,5.098,535,4.335,552,5.024,654,4.42,743,4.719,775,5.274,919,4.719,921,4.645,923,5.486,925,4.182,1040,3.984,1071,5.724,1072,5.288,1073,5.288]],["t/382",[23,5.004,41,2.425,62,4.469,94,2.063,314,4.366,315,3.438,355,2.302,396,3.691,463,5.457,464,5.525,478,4.012,483,3.601,484,4.286,492,4.366,521,3.955,523,4.141,534,3.952,545,5.004,564,2.075,676,3.138,718,2.874,750,4.752,771,6.485,789,3.645,897,5.28,958,4.543,959,5.764,960,5.525,1006,5.325,1062,6.9,1063,6.016,1161,6.065,1162,6.467,1163,6.467]],["t/384",[23,6.116,41,2.964,372,4.83,516,5.147,521,4.483,523,5.061,600,3.025,718,3.512,812,6.508,840,6.413,897,4.98,941,6.116,1062,6.508,1164,7.904]],["t/387",[4,0.246,94,1.49,272,4.481,315,2.483,432,3.846,478,2.897,521,2.205,528,5.203,534,2.854,540,2.601,569,3.042,576,2.31,580,3.419,583,2.111,627,4.728,676,2.266,778,5.191,789,2.633,822,2.7,935,4.164,936,3.614,1045,6.075,1048,3.99,1116,3.281,1118,4.164,1165,4.164,1166,4.164,1167,4.381]],["t/389",[4,0.246,327,2.23,396,2.367,420,1.495,422,2.051,424,3.697,441,3.415,474,3.047,480,1.94,525,1.515,528,4.859,534,4.956,535,2.8,583,1.874,592,3.305,627,3.705,695,3.047,759,2.701,771,5.674,778,3.209,806,2.012,885,2.498,944,3.209,945,3.209,1045,4.76,1073,3.415,1166,3.697,1168,4.147,1169,4.147,1170,4.147,1171,4.147]],["t/392",[4,0.245,564,2.393,931,5.479]],["t/394",[4,0.246]],["t/396",[4,0.244,315,3.193,473,3.427,484,3.98,534,3.67,580,3.06,777,4.133,806,3.873,814,3.845,936,4.647,944,4.647,945,4.647,947,5.353,958,4.219,1044,4.412,1046,4.523,1076,4.808,1165,7.115,1172,6.005,1173,4.412]],["t/399",[4,0.158,41,3.724,90,3.618,314,5.034,326,4.525,478,4.626,521,4.328,564,2.393,676,4.449,718,3.314,789,5.168,840,5.034,884,6.647,1174,7.458,1175,7.458,1176,7.458]],["t/401",[57,6.005,90,3.868,138,7.476,326,3.633,478,4.945,509,7.476,521,3.763,596,4.55,646,6.005,673,7.388,951,6.564,1087,7.106,1177,7.972,1178,7.972]],["t/403",[4,0.218,41,3.201,74,5.683,78,2.616,94,2.123,107,3.085,420,2.399,480,3.112,512,3.499,514,5.478,516,4.332,541,3.169,564,2.739,600,2.546,654,4.579,676,4.141,704,5.011,737,5.478,759,4.332,789,4.81,792,3.75,793,4.491,842,5.011,931,4.888,1081,4.674,1083,5.93,1179,6.653,1180,6.653,1181,6.653]],["t/406",[4,0.233,17,3.299,78,2.024,80,5.27,94,2.711,183,5.643,420,2.381,485,4.097,519,4.64,541,3.146,552,3.978,564,2.12,718,2.936,775,5.33,792,3.723,835,3.512,919,4.853,921,3.678,925,4.301,981,5.643,987,5.111,1040,4.097,1074,5.111,1075,5.888,1076,3.978]],["t/408",[80,5.524,191,6.671,312,5.669,383,5.358,420,2.565,436,3.824,458,5.857,506,4.413,515,6.077,521,3.358,541,3.388,600,3.408,666,4.06,676,3.451,696,6.341,704,5.358,718,4.32,768,4.683,791,5.902,835,3.782,987,5.504,1095,4.802,1182,7.114]],["t/411",[4,0.246,78,2.174,80,3.135,409,1.908,564,1.622,595,2.748,718,2.246,768,2.658,786,3.55,835,2.687,871,4.702,1146,6.821,1148,5.842,1183,4.161,1184,6.324]],["t/413",[4,0.244,98,3.84,409,2.254,541,3.08,595,3.517,718,2.874,790,3.952,871,4.286,1146,6.531,1149,6.679,1150,6.9]],["t/416",[4,0.245,78,1.739,86,3.324,409,2.066,429,2.542,480,2.654,497,2.385,595,4.179,718,2.521,729,5.057,756,3.016,757,3.28,790,3.467,822,3.28,871,5.093,1076,3.417,1146,6.561,1148,4.672,1184,5.057]],["t/418",[4,0.247,409,1.554,558,3.386,564,1.855,595,4.231,768,3.04,786,4.061,1146,5.466,1185,5.78]],["t/421",[4,0.248]],["t/423",[4,0.247,158,3.981,619,3.935,882,4.351,963,4.089,1186,5.285]],["t/425",[4,0.22,17,5.032,423,3.119,549,4.788,584,4.988,597,2.924,777,6.013,778,5.34,779,6.151,794,6.419,806,3.348,885,4.156,1146,4.848,1149,5.5,1150,5.682,1152,4.848,1153,5.071,1187,6.901,1188,6.472,1189,6.901]],["t/427",[193,5.383,355,2.992,419,5.623,423,3.799,436,4.519,783,5.905,1152,5.905,1153,6.176]],["t/429",[4,0.247,17,1.668,78,1.967,355,1.188,378,1.562,419,4.139,423,2.357,436,1.795,497,1.404,520,1.837,564,1.674,584,4.689,653,2.04,746,2.174,757,1.93,768,2.742,809,2.213,810,2.213,835,1.775,993,2.515,1152,4.508,1183,2.749,1190,3.339]],["t/431",[4,0.247,419,3.142,473,3.142,584,2.864,792,3.103]],["t/433",[4,0.246,193,3.483,355,1.936,378,2.545,423,2.458,431,4.335,436,2.925,497,2.287,576,2.69,584,5.004,688,3.375,758,3.693,803,5.361,838,4.098,1191,5.44]],["t/435",[4,0.247,9,2.738,17,2.1,78,1.904,193,2.692,326,1.916,355,1.496,436,2.26,497,1.767,584,2.187,600,1.609,718,1.868,746,2.738,790,2.569,791,2.786,825,2.164,835,2.235,851,3.747,852,2.894,993,3.167,1153,4.565,1192,4.204,1193,3.943,1194,4.204,1195,3.253]],["t/437",[4,0.245,41,2.516,90,2.266,193,2.991,326,2.129,409,1.256,417,2.266,419,2.666,423,3.032,436,2.511,576,3.883,578,2.511,584,5.071,656,3.722,688,5.637,720,2.7,792,2.633,835,3.567,852,3.215,1152,4.713,1153,3.432,1196,3.99,1197,4.381,1198,4.164,1199,4.671,1200,4.671]],["t/439",[4,0.204,78,1.89,94,1.967,97,5.782,98,3.661,107,3.766,122,4.644,222,4.913,409,1.658,420,2.928,430,5.483,436,3.315,520,3.392,521,2.91,524,4.015,541,2.936,549,3.079,564,1.979,595,3.353,600,3.109,632,3.661,666,3.519,718,2.74,743,5.968,768,4.272,775,3.315,791,4.086,792,3.475,794,4.53,826,4.644,836,4.331,842,4.644,844,5.495,921,3.433,934,5.076,957,4.53,958,4.331,1040,3.824,1076,3.713,1201,6.165]],["t/442",[4,0.243,57,2.927,355,2.795,409,1.576,413,3.58,417,1.886,420,2.831,433,3.464,478,2.411,584,3.048,598,3.75,653,3.58,656,4.669,682,3.644,716,2.604,720,3.387,822,4.871,835,4.175,850,3.644,856,3.344,897,3.691,899,2.623,1008,3.097,1072,3.2,1202,5.859,1203,5.223,1204,4.253,1205,7.364,1206,7.053,1207,4.253,1208,9.221,1209,4.253,1210,4.253,1211,4.253,1212,4.253,1213,4.253,1214,3.32,1215,4.253,1216,3.886,1217,7.719,1218,4.253,1219,3.2,1220,4.253]],["t/445",[4,0.144,66,5.599,78,2.084,94,2.169,205,4.506,306,4.59,327,3.656,355,2.42,409,1.829,420,2.452,430,4.59,485,4.218,499,5.809,507,5.599,564,2.182,569,4.428,576,4.28,600,2.603,615,5.599,676,3.299,750,4.996,793,4.59,1006,5.599,1008,6.897,1012,4.59,1033,6.061,1042,6.061,1053,5.599,1076,4.095,1221,5.453,1222,6.8,1223,6.8]],["t/448",[4,0.247,78,1.707,485,3.456,564,1.788,596,3.18,1221,3.51]],["t/450",[4,0.247,78,1.677,409,1.472,564,1.756,596,3.123,597,2.318,1195,4.234,1221,3.448]],["t/452",[4,0.169,281,3.981,409,2.144,596,4.55,666,4.55,718,3.543,756,4.238,758,3.942,775,4.286,787,6.168,1001,6.81,1074,6.168,1116,5.6,1221,5.022,1224,7.972]],["t/455",[4,0.248,78,2.191,564,2.294,1221,4.505]],["t/457",[4,0.248,78,2.283,409,1.146,423,2.836,564,2.014,584,3.876,597,1.806,734,3.298,1152,2.994,1221,2.685]],["t/459",[485,4.988,600,3.673,676,3.901,746,5.236,758,3.977,775,4.323,790,4.914,843,6.222,894,5.773,1074,6.222,1225,8.041,1226,8.041,1227,8.041]],["t/462",[4,0.248,409,1.11,564,1.968,757,2.387,768,2.171,1221,3.863,1228,3.195,1229,3.68,1230,6.131]],["t/464",[41,3.016,497,3.381,541,3.83,549,4.016,564,2.58,718,3.573,941,6.222,1108,6.621,1228,7.427,1229,7.167,1231,8.041,1232,7.541,1233,8.041]],["t/466",[4,0.248]],["t/468",[272,4.589,524,5.236,590,6.057,746,5.236,763,6.621,764,6.621,765,6.222,790,4.914,894,5.773,1059,7.167,1098,6.057,1221,5.066,1228,6.222,1234,8.041]],["t/470",[4,0.17,283,6.869,524,5.236,549,4.016,556,5.329,584,4.184,768,4.229,803,5.773,1046,6.057,1183,6.621,1235,8.041,1236,8.041,1237,8.041,1238,8.041]],["t/472",[518,5.435,524,4.817,541,4.346,558,4.334,596,4.222,646,5.572,653,4.521,654,5.092,716,3.288,758,3.659,768,3.89,924,5.724,929,6.41,1076,4.455,1221,6.233,1228,5.724,1239,7.398,1240,7.398,1241,7.398,1242,7.398]],["t/475",[4,0.235,24,4.103,63,4.856,205,4.942,409,2.005,482,4.557,505,4.856,659,6.994,685,6.994,1243,7.095,1244,5.943,1245,7.458,1246,7.458,1247,7.458,1248,5.479]],["t/477",[4,0.239,497,3.351,541,3.797,1249,8.724,1250,4.734,1251,6.564,1252,6.353]],["t/480",[4,0.246,62,2.443,63,3.309,90,2.466,355,1.809,510,3.43,627,4.952,697,4.341,703,4.184,752,4.341,873,3.828,875,3.254,965,4.05,1243,5.511,1244,6.553,1253,4.05,1254,5.082,1255,4.529,1256,5.561,1257,4.184,1258,4.766,1259,5.082]],["t/482",[4,0.246,84,3.303,422,3.785,433,6.821,443,4.643,653,3.446,875,3.611,885,3.396,965,4.494,1173,5.622,1243,6.721,1244,6.098,1260,5.288]],["t/484",[4,0.244,627,4.317,666,4.091,718,3.186,756,3.811,787,5.547,885,4.317,1243,5.547,1244,5.713]],["t/486",[4,0.247,84,4.353,254,5.344,355,1.51,409,1.141,422,2.098,497,2.63,568,4.073,627,2.555,653,2.592,752,6.347,827,2.864,875,2.717,1096,2.864,1243,4.84,1244,6.535,1258,3.979,1261,4.243,1262,4.643,1263,4.243,1264,4.243,1265,4.643,1266,5.15]],["t/488",[0,4.888,4,0.141,63,4.332,243,4.192,326,3.032,433,5.93,483,3.704,505,5.558,528,5.656,551,5.93,563,4.192,653,4.065,827,4.491,874,5.683,885,4.007,899,4.491,908,6.239,965,5.302,1173,4.888,1243,7.692,1244,6.802,1245,6.653,1246,6.653,1247,6.653,1266,5.478,1267,6.653,1268,7.281,1269,7.281,1270,7.281,1271,7.281,1272,7.281,1273,7.281]],["t/490",[4,0.244,409,1.463,497,2.287,597,2.305,627,3.276,653,3.324,752,6.379,807,4.21,885,3.276,899,5.041,985,3.997,1173,3.997,1203,4.849,1243,7.101,1244,7.313,1254,5.44,1258,5.102,1259,5.44,1261,5.44,1263,5.44,1274,8.172,1275,5.954,1276,5.44,1277,5.44]],["t/493",[4,0.219,24,4.502,506,5.076,527,4.213,533,5.875,716,3.637,1248,6.012,1278,7.674,1279,8.183,1280,8.956]],["t/495",[4,0.221,41,3.153,403,4.198,576,4.157,676,4.079,686,7.493,1278,7.884]],["t/497",[4,0.246,406,4.888,419,3.797,425,4.007,852,4.579,1136,5.302,1281,6.653,1282,7.281]],["t/499",[4,0.246]],["t/502",[4,0.247]],["t/504",[4,0.247,376,3.775,410,2.97,419,2.932,506,3.187,595,2.794,719,3.051,858,3.405,1283,4.389]],["t/506",[4,0.247]],["t/508",[4,0.243]],["t/510",[4,0.247]],["t/512",[4,0.248,312,2.891,428,2.604,512,1.907,583,1.639,639,2.986]],["t/514",[4,0.248,410,4.25,417,2.021,445,3.714,576,2.06,578,3.318,642,2.348,981,3.559,996,3.224,1188,3.907]],["t/516",[4,0.233,94,1.856,190,5.455,355,2.781,403,4.712,410,4.517,411,2.745,419,5.384,425,4.706,431,4.635,482,4.775,483,3.238,497,2.445,527,2.995,576,2.877,600,2.226,648,3.363,719,3.454,800,3.665,806,2.822,852,4.003,858,5.848,999,4.086,1248,4.274,1278,7.328,1283,4.969,1284,6.366,1285,4.501,1286,4.789,1287,5.816,1288,4.381,1289,6.366,1290,6.366]],["t/519",[4,0.225,24,4.07,94,2.36,205,4.903,326,3.371,403,3.695,411,3.492,473,4.222,486,4.737,506,4.589,695,5.435,830,4.817,858,4.903,962,5.724,1232,6.938,1250,4.393,1291,8.097,1292,6.594,1293,8.097,1294,5.724]],["t/522",[4,0.208,27,3.563,40,5.12,41,2.906,86,3.365,205,3.807,326,3.996,355,2.045,372,3.51,376,4.22,417,2.787,486,3.678,506,3.563,576,3.832,597,2.434,642,4.942,664,4.445,666,3.278,709,3.807,777,5.333,825,2.957,830,6.112,921,3.198,962,4.445,982,4.327,985,4.22,1195,7.263,1292,6.907,1295,6.287,1296,5.12,1297,5.744,1298,7.749,1299,5.744,1300,5.744,1301,6.287,1302,6.287,1303,4.907,1304,8.48,1305,4.907,1306,6.287]],["t/524",[4,0.24,910,6.332,1307,7.674,1308,8.956]],["t/527",[4,0.243,597,3.407]],["t/529",[4,0.226,79,4.776,425,5.578,479,5.709,609,3.986,910,7.739,1096,5.117,1266,6.241,1294,5.865,1297,7.58,1305,6.475,1307,7.108,1309,10.136]],["t/531",[4,0.233,41,3.182,642,4.781,1294,6.564]],["t/533",[4,0.233,417,4.116,642,4.781,1294,6.564]],["t/536",[4,0.241,41,2.442,409,1.751,411,3.973,473,3.717,505,4.241,507,5.362,635,5.362,691,5.039,830,5.482,833,4.575,834,4.396,971,4.04,985,4.785,1285,6.514,1292,5.805,1294,6.514,1310,7.128,1311,7.128,1312,6.513]],["t/538",[4,0.248,41,2.764,218,3.925,271,3.925,487,3.152,627,3.729,642,2.359,1260,3.925,1313,6.193,1314,4.58,1315,3.73]],["t/540",[4,0.228,41,2.154,62,2.761,79,3.619,90,3.76,134,5.12,294,3.807,312,4.578,326,3.531,372,4.735,383,5.836,409,1.545,417,2.787,422,2.841,425,3.459,459,5.387,482,3.51,483,3.198,582,4.124,596,3.278,609,4.075,642,4.942,739,4.445,830,5.71,910,6.785,911,3.954,927,4.327,985,5.693,1024,5.387,1066,4.73,1266,6.38,1294,7.263,1305,4.907,1312,5.744,1316,5.12]],["t/542",[4,0.242,90,3.228,409,2.295,422,3.29,483,3.704,487,5.011,512,3.499,596,3.797,707,5.302,830,4.332,842,5.011,910,6.604,974,5.302,985,4.888,1066,5.478,1305,7.291]],["t/544",[4,0.232,9,4.396,78,2.069,79,4.253,304,4.742,315,3.589,409,2.317,511,5.379,550,3.954,562,4.474,570,4.474,596,3.852,642,3.804,648,3.902,678,5.558,707,5.379,777,4.646,833,4.742,834,4.557,988,6.017,1159,6.33,1294,5.223,1317,6.865,1318,6.75,1319,7.388,1320,7.388]],["t/546",[4,0.209,23,5.724,94,2.36,109,5.092,294,4.903,409,2.454,430,4.994,497,3.11,514,6.091,583,3.343,632,4.393,673,5.724,822,4.277,962,5.724,1136,7.271,1321,5.896,1322,7.398,1323,7.398,1324,8.097,1325,8.097]],["t/548",[4,0.203,78,2.464,94,2.565,315,4.275,420,2.899,533,5.773,595,4.373,695,5.908,754,6.621,833,5.649,834,5.428,1040,4.988,1326,8.8]],["t/550",[4,0.216,24,4.348,63,5.147,355,2.813,508,7.904,512,4.156,536,6.299,544,7.045,550,4.63,595,4.298,695,5.807,806,3.835,1040,4.903,1327,7.412]],["t/552",[4,0.193,62,4.386,420,2.667,486,4.737,512,4.798,553,6.938,600,2.831,806,3.589,841,4.661,925,4.817,1085,6.091,1251,6.091,1327,8.557,1328,6.32,1329,8.097,1330,7.398,1331,8.097,1332,6.091,1333,8.097,1334,8.097]],["t/554",[4,0.245,41,3.121,420,1.873,476,3.73,559,4.356,576,3.577,578,3.889,580,2.648,642,4.077,731,4.873,833,3.65,834,4.883,857,5.082,969,4.278,984,4.873,995,4.438,996,5.597,1288,5.449,1318,7.234,1335,4.873]],["t/556",[4,0.246,83,2.79,84,2.277,90,1.886,306,2.623,326,1.771,409,1.045,411,2.765,473,4.025,479,2.927,483,2.164,505,2.531,506,2.411,512,2.044,559,2.34,570,2.575,578,3.15,600,1.487,619,2.089,628,2.448,648,2.247,664,3.007,691,3.007,800,2.448,806,2.843,814,2.488,857,4.116,864,5.457,969,4.824,971,2.411,998,3.644,1023,3.097,1253,3.097,1300,3.886,1336,3.644,1337,4.253,1338,4.253,1339,3.464,1340,3.886,1341,4.253,1342,3.32]],["t/558",[4,0.167,83,5.674,473,4.511,486,5.061,512,4.156,571,4.903,583,3.571,678,6.508,815,6.299,1288,7.671,1328,6.752,1343,8.65,1344,8.65,1345,8.65]],["t/560",[4,0.246,84,2.452,158,4.664,205,2.774,281,3.093,326,2.822,396,2.388,411,2.923,417,3.576,473,2.388,476,3.004,491,3.575,497,1.759,578,2.25,596,2.388,597,1.773,609,3.256,620,3.925,632,3.677,642,2.359,716,1.86,834,2.825,857,2.94,962,3.238,963,3.238,995,3.575,996,6.304,1085,5.099,1288,4.664,1335,3.925,1346,6.777,1347,7.64]],["t/562",[4,0.246,46,3.613,326,2.992,355,1.614,409,1.219,473,3.747,476,3.255,481,4.252,497,1.906,505,4.276,506,2.812,523,2.903,529,4.613,571,2.812,597,1.921,718,2.918,806,2.2,829,5.406,830,4.276,910,3.508,1198,4.041,1305,3.873,1315,4.041,1328,3.873,1347,6.158]],["t/564",[4,0.247,158,3.181,411,1.993,417,3.025,473,2.41,476,3.032,482,2.581,483,2.351,536,3.366,574,3.558,597,1.789,632,2.508,642,5.148,777,2.907,830,4.826,999,2.967,1023,4.968,1292,3.764,1294,3.268,1296,5.557,1348,4.622]],["t/566",[4,0.246,94,1.667,401,5.225,411,3.939,473,2.982,476,3.751,487,5.47,491,6.204,572,3.463,597,2.214,660,6.473,971,5.177,999,3.671,1296,4.657,1349,5.718]],["t/568",[4,0.224,24,4.348,166,7.412,355,2.813,409,2.125,566,6.299,596,4.511,673,6.116,911,5.44,971,5.892,1350,7.412,1351,7.904]],["t/570",[4,0.247,63,3.628,94,1.777,409,1.498,473,3.18,476,4,481,5.225,487,4.196,746,3.628,1347,5.225,1351,5.571,1352,8.306]],["t/572",[4,0.219,17,4.087,473,4.67,482,5,561,6.332,648,4.731,800,5.156,999,5.749,1004,6.991,1288,6.164]],["t/574",[4,0.247,90,2.55,476,3.772,632,3.121,642,2.962,777,3.617,800,3.311,834,4.922,873,3.958,992,6.478,995,6.228,1004,4.489,1288,3.958,1340,5.255,1353,5.255]],["t/576",[4,0.234,46,4.886,62,2.947,63,3.992,83,2.964,84,5.065,355,2.182,409,2.176,411,1.949,430,2.787,452,3.527,473,4.619,482,4.469,483,2.299,486,2.644,491,3.527,505,2.689,511,3.29,512,3.224,529,4.307,550,2.419,563,2.601,571,5.02,572,2.736,574,2.356,595,2.245,642,3.455,648,4.679,671,5.237,695,3.034,707,3.29,742,3.29,777,2.842,787,3.195,800,4.607,806,3.548,829,5.048,830,2.689,839,3.034,864,4.744,874,3.527,910,4.744,911,2.842,925,2.689,963,3.195,971,2.561,1004,3.527,1023,3.29,1040,2.561,1066,3.4,1167,3.872,1285,3.195,1288,3.11,1327,3.872,1330,4.129,1342,5.237,1350,3.872,1354,4.519,1355,4.519,1356,4.129,1357,4.519,1358,4.129,1359,4.129,1360,4.519,1361,4.519,1362,4.519]],["t/578",[3,6.32,4,0.209,24,4.07,94,2.36,326,3.371,327,3.977,403,3.695,413,4.521,460,6.594,521,3.492,527,3.809,658,6.938,720,4.277,858,4.903,1003,6.32,1040,4.589,1214,6.32,1248,5.435,1250,4.393,1363,8.097,1364,8.097,1365,7.398]],["t/580",[4,0.245,27,2.109,62,1.635,83,2.441,90,2.566,224,3.4,261,2.71,312,2.71,315,1.808,327,2.844,403,1.698,409,1.746,413,2.078,422,2.616,423,1.537,455,1.769,491,2.905,497,1.43,540,1.893,627,2.048,628,4.09,664,2.631,667,3.189,688,2.109,719,2.019,720,1.966,835,1.808,856,4.18,860,2.296,873,2.561,875,2.177,882,4.355,929,2.389,958,2.389,1023,5.173,1054,4.961,1076,2.048,1253,2.71,1276,3.4,1366,7.105,1367,6.088,1368,3.722,1369,7.488,1370,4.715,1371,3.031,1372,3.031,1373,3.4,1374,3.722,1375,3.031,1376,3.722,1377,3.722,1378,3.722,1379,5.789,1380,3.722,1381,3.722,1382,3.722,1383,5.789,1384,5.29,1385,3.722,1386,3.722,1387,3.722,1388,3.722]],["t/582",[4,0.246,21,4.383,218,4.111,396,2.502,404,4.707,413,3.915,417,2.127,422,2.168,425,2.64,537,3.147,597,1.857,605,3.493,609,2.305,720,2.534,822,3.704,856,4.322,862,3.493,875,2.807,891,4.111,1096,4.325,1219,3.609,1299,4.383,1339,3.907,1372,3.907,1389,3.744,1390,9.256,1391,6.407,1392,4.797,1393,4.111]],["t/584",[4,0.248,404,2.36,552,1.934,719,1.907,720,1.857,847,2.36,1203,2.863]],["t/587",[4,0.247]],["t/589",[4,0.246,272,3.797,423,3.006,654,4.579,781,6.239,1044,4.888,1390,6.653]],["t/591",[4,0.247,425,3.593,480,2.791,654,4.107,720,3.449,847,4.384,982,4.494,1257,6.544,1394,5.967]],["t/593",[3,4.541,4,0.226,57,5.535,94,2.345,166,4.985,243,3.349,254,6.278,315,2.826,355,1.892,370,5.535,372,5.147,409,2.265,413,4.49,420,1.916,431,4.236,482,3.248,521,3.468,540,2.959,546,4.738,562,3.523,621,4.985,737,4.376,821,4.236,822,4.248,847,3.905,856,3.033,911,5.058,1014,4.004,1063,3.816,1196,4.541,1206,5.315,1248,3.905,1257,4.376,1322,5.315,1369,6.55,1395,5.817,1396,5.817,1397,5.817,1398,6.891,1399,5.058,1400,5.817,1401,5.315,1402,5.817,1403,5.817,1404,5.817,1405,4.113,1406,4.985,1407,5.817]],["t/596",[4,0.229,46,5.302,94,2.123,204,5.302,205,4.409,231,5.011,234,5.683,289,5.93,583,3.006,601,6.362,602,4.674,603,5.478,604,6.653,605,5.302,606,6.653,607,6.653,608,6.653,609,3.499,610,6.653,611,6.653,612,6.653,613,5.93,614,6.653,615,5.478,616,5.93,617,4.888,618,6.653,619,3.577,620,6.239]],["t/598",[4,0.193,41,3.425,84,4.339,94,1.715,204,4.285,315,2.859,326,3.376,425,4.461,506,3.335,567,3.951,583,2.43,601,7.236,602,7.126,616,4.793,617,5.442,619,4.556,621,5.043,622,5.377,623,4.427,624,7.407,625,4.427,626,5.377,627,3.238,628,3.388,629,5.377,630,7.407,631,4.593,632,3.193,633,5.377,634,4.793,635,4.427,636,5.377,637,5.377,638,5.377,639,4.427,640,5.377,641,4.793,642,3.03,643,5.377,644,5.377,645,5.377]],["t/600",[4,0.215,83,5.03,429,4.326,483,3.901,506,5.471,583,3.166,603,5.768,613,6.245,617,6.48,646,5.277,647,7.006,648,5.099,649,7.862,650,8.82,651,7.006,652,6.245,653,4.281,654,4.822,655,7.006,656,5.583,657,6.57]],["t/602",[4,0.247,41,1.885,204,4.006,597,2.129,601,4.771,602,4.965,658,4.714,659,4.714,660,4.48,661,4.48,662,4.48,663,5.026,664,3.889,665,4.714,666,2.869]],["t/604",[4,0.244,83,5.187,505,4.705,528,4.788,572,4.788,634,6.44,667,6.775,668,7.225]],["t/606",[4,0.181,9,4.332,62,3.198,78,2.039,99,6.239,243,5.377,314,4.491,326,3.032,372,4.065,409,1.789,429,2.981,512,3.499,549,3.323,571,4.127,596,3.797,601,4.491,603,5.478,617,4.888,628,4.192,648,3.846,649,5.93,669,5.148,670,6.653,671,5.683,672,5.478,673,5.148,674,6.653,675,5.148,676,3.228,677,5.93,678,5.478,679,6.653,680,5.93,681,8.535,682,6.239]],["t/608",[4,0.206,41,2.668,78,2.18,107,3.298,355,2.532,376,5.227,396,4.06,473,4.06,537,6.393,563,4.482,601,4.802,602,6.829,678,5.857,683,5.227,684,6.89,685,6.671,686,6.341,687,5.857,688,4.413,689,5.227,690,7.114,691,5.504,692,7.114]],["t/610",[243,4.855,425,4.641,474,5.662,479,5.804,490,7.227,537,5.532,568,5.018,583,3.482,601,5.202,602,7.077,617,5.662,627,4.641,684,5.963,688,4.78,693,7.706,694,7.706,695,5.662]],["t/612",[4,0.24,619,4.519]],["t/614",[86,4.477,243,4.815,417,3.708,429,3.425,505,4.977,568,4.977,583,3.453,588,5.914,619,5.004,684,7.202,696,6.812,697,6.529,698,7.642,699,7.642,700,7.642,701,6.812,702,7.642,703,6.293]],["t/616",[4,0.248,90,1.332,243,1.729,372,1.677,409,0.738,443,2.26,507,2.26,537,3.202,568,1.787,597,1.163,600,1.05,601,3.804,602,3.134,619,2.398,627,1.653,631,2.345,661,2.446,680,2.446,683,2.017,684,3.452,688,2.767,689,2.017,691,2.124,701,3.976,704,2.067,705,2.745,706,2.745,707,2.187,708,4.461,709,1.819,710,2.745]],["t/618",[4,0.196,420,2.733,517,4.936,518,5.569,519,5.325,520,4.17,521,4.371,522,7.58,523,4.853,524,4.936,525,2.768,526,7.58,527,3.902,528,5.023,529,5.325,530,4.17,531,4.936,532,4.03,533,5.442]],["t/621",[4,0.126,17,2.961,27,4.909,41,2.223,62,2.85,71,5.284,199,4.356,243,3.735,314,4.002,413,3.623,416,2.99,480,2.773,484,3.929,492,4.002,495,5.56,496,5.284,521,2.798,525,2.891,528,5.905,529,6.259,532,5.054,534,3.623,535,4.002,536,4.724,537,4.256,538,5.064,539,7.422,540,3.301,541,2.824,542,4.587,543,5.56,544,5.284,545,4.587,546,5.284,547,5.56,548,5.928,549,2.961,550,3.473,551,5.284,552,3.57,553,5.56,554,5.56,555,5.928,556,3.929,557,5.928]],["t/623",[4,0.233,409,1.943,474,5.308,525,3.284,527,3.72,528,4.788,529,5.075,532,3.841,535,4.877,540,4.022,550,5.267,552,4.351,558,4.232,559,4.351,560,5.308,561,5.59,562,4.788,563,4.552]],["t/626",[4,0.248,46,2.112,107,1.229,378,2.028,403,1.324,409,0.713,417,2.103,517,3.582,520,1.458,525,2.901,531,2.823,532,1.409,558,2.54,564,0.851,565,1.947,566,2.112,567,1.947,568,1.726,569,1.726,570,1.756,571,1.644,572,1.756,573,2.182,574,3.627,575,2.362,576,1.311,577,2.485,578,1.425,579,1.789,580,1.35,581,1.697,582,1.903,583,1.198]],["t/628",[4,0.248,525,1.425,532,2.075,574,2.227,580,1.989,581,2.499,584,2.03]],["t/630",[4,0.247,417,3.39,517,3.221,525,3.216,558,2.897,574,2.823,576,2.446,578,3.757,579,3.339,582,3.551,585,4.946]],["t/632",[4,0.244]],["t/634",[4,0.23,62,3.419,78,2.18,281,3.553,294,4.714,409,1.913,429,3.188,518,5.227,524,4.632,525,3.252,530,3.914,550,4.167,560,5.227,562,4.714,574,4.06,586,5.227,587,7.114,588,5.504,589,6.341,590,5.358,591,6.341,592,5.669]],["t/636",[4,0.231,17,3.473,94,2.218,294,4.608,304,4.885,396,3.968,474,5.109,483,4.887,517,4.528,520,3.825,525,2.54,527,3.58,540,3.871,550,5.142,561,5.38,593,6.953,594,6.953,595,3.781,596,3.968,597,2.946,598,3.697,599,4.249,600,2.661]],["t/638",[4,0.198,107,3.573,281,3.849,429,3.453,525,3.417,532,4.974,559,6.067,580,4.767,711,7.706,712,7.706,713,6.583,714,7.706,715,7.706]],["t/640",[525,3.216,532,4.682,559,5.304,580,4.487]],["t/643",[4,0.246,281,3.954,378,2.219,403,2.369,525,3.156,531,4.417,532,3.606,538,4.052,559,4.085,574,4.519,580,3.456,581,3.037,583,3.065,716,3.014,717,4.228]],["t/645",[4,0.246,78,2.568,281,4.185,564,2.075,716,2.874]],["t/647",[4,0.245,525,2.578,559,4.251,574,4.029,580,4.516,709,4.678]],["t/649",[4,0.245,598,3.902,599,4.485,600,2.809]],["t/651",[4,0.237,598,4.238,599,4.871,600,3.051,718,4.709]],["t/655",[0,5.908,4,0.23,78,2.464,422,3.977,525,2.937,716,3.573,719,4.775,720,4.649,721,7.541,722,7.541]],["t/657",[4,0.218,24,3.66,41,3.201,261,5.302,327,3.577,355,2.368,396,3.797,420,3.077,425,4.007,532,4.538,559,5.14,570,6.245,580,3.39,719,3.951,720,3.846,723,6.653,724,5.558,725,6.653,726,8.535,727,6.653,728,6.653,729,5.93,730,6.653,731,6.239,732,5.93,733,5.683]],["t/659",[4,0.247,281,4.387,378,2.301,394,4.385,403,2.457,422,3.996,525,1.797,531,3.203,532,2.615,570,3.26,574,3.973,719,2.921,724,3.203,734,5.387]],["t/661",[4,0.248,78,1.376,281,3.256,422,2.22,525,1.64,532,3.466,564,1.441,574,2.562,580,2.288,581,2.875,642,2.53,719,2.666,735,4.002]],["t/663",[4,0.247,598,3.438,599,3.952,600,2.475]],["t/666",[326,3.267,355,2.552,420,2.584,429,3.212,512,3.77,525,3.268,531,4.668,532,3.811,559,4.317,562,4.751,628,4.516,676,3.478,751,6.39,800,5.637,806,3.478,825,3.691,848,6.39,849,7.169,850,6.723,851,6.39,852,4.934,853,6.39,854,6.124,855,7.169,856,4.091,857,5.036]],["t/669",[4,0.247,98,1.517,107,1.951,119,2.036,281,1.276,304,1.795,378,2.908,403,1.276,409,1.442,422,2.081,428,1.834,455,2.189,463,1.664,465,2.036,510,1.725,517,1.664,525,2.855,531,3.492,532,2.237,559,1.539,560,3.091,564,0.82,565,1.877,566,2.036,567,1.877,568,1.664,569,1.664,570,1.693,574,3.923,575,2.278,582,1.834,583,2.809,609,1.344,623,2.104,628,1.61,717,2.278,718,1.136,720,1.477,724,1.664,800,1.61,807,3.255,853,2.278,858,3.554,859,3.75,860,2.84,861,2.555,862,3.353,863,2.555,864,1.977,865,1.877,866,2.278]],["t/671",[4,0.248,532,3.503,574,2.6,580,3.358,581,2.917,642,2.568,709,3.019,735,4.061,838,3.432,867,4.556,868,4.556,869,3.892]],["t/673",[4,0.246]],["t/675",[4,0.247,41,2.017,525,1.964,558,3.15,583,2.43,598,2.859,599,3.286,600,2.058,848,4.793]],["t/678",[525,3.599,540,5.486,646,6.332,676,4.079,825,4.328,839,6.176,870,7.884]],["t/681",[4,0.248,40,1.865,281,1.045,304,1.47,378,2.173,409,0.563,422,1.035,428,1.502,455,1.852,517,2.318,525,3.048,527,1.077,531,2.318,540,1.165,559,1.26,560,1.538,574,2.031,582,1.502,583,2.476,609,1.101,758,1.035,806,1.727,825,2.821,860,1.413,864,1.619,865,1.538,866,1.865,871,2.359,872,3.56,873,2.681,874,3.041,875,1.34,876,2.093,877,2.093,878,1.865,879,1.963,880,2.093,881,1.619,882,1.723,883,1.865]],["t/683",[4,0.247,598,2.962,599,3.404,600,2.132]],["t/685",[4,0.182,94,2.154,107,3.13,172,6.33,193,4.322,210,7.359,420,2.434,455,3.512,463,4.396,516,4.396,520,3.714,541,3.215,549,4.302,562,4.474,600,2.584,736,4.846,737,5.558,738,6.017,739,5.223,740,4.96,741,6.017,742,5.379,743,4.96,744,6.017,745,6.017,746,4.396,747,6.75,748,5.558,749,6.75,750,4.96,751,6.017,752,5.766,753,5.558]],["t/687",[4,0.21,78,2.6,107,3.934,458,6.985,600,3.247,615,6.985,754,6.985]],["t/689",[4,0.245,78,2.4,79,1.453,84,1.351,98,3.465,107,1.07,199,1.695,272,3.708,304,1.62,355,1.375,378,1.079,396,1.316,409,1.039,416,1.164,417,1.119,420,1.393,441,1.899,455,1.2,478,2.397,480,3.288,484,1.529,485,1.431,497,0.97,520,1.269,521,1.089,525,0.842,533,2.774,534,1.409,541,1.099,545,1.785,552,1.389,556,1.529,564,2.396,569,2.516,580,2.541,583,2.636,595,1.254,597,1.637,600,0.883,609,1.213,666,1.316,669,1.785,676,1.119,716,1.025,718,1.717,736,1.656,755,1.899,756,2.054,757,4.063,758,2.466,759,3.247,760,2.056,761,1.97,762,4.984,763,1.899,764,1.899,765,1.785,766,2.307,767,2.307,768,1.213,769,1.899,770,1.502,771,3.859,772,2.307,773,2.163,774,2.056,775,1.24,776,2.307,777,5.602,778,4.515,779,5.2,780,6.497,781,3.624,782,3.864,783,1.62,784,2.056,785,2.307,786,1.62,787,1.785,788,2.163,789,1.3]],["t/691",[4,0.23,98,4.038,150,5.809,326,3.099,420,2.452,430,4.59,455,3.538,457,4.428,521,4.085,541,3.239,584,3.538,597,2.881,600,2.603,688,4.218,718,3.846,746,4.428,790,5.289,791,4.506,792,3.832,793,4.59,794,4.996,795,6.061,796,6.8,797,6.061,798,5.262]],["t/693",[4,0.23,283,6.422,327,4.042,420,2.711,455,3.912,457,4.896,467,4.528,597,3.185,628,4.737,770,4.896,799,7.518,800,4.737,801,5.663,802,7.518,803,5.397,804,6.19,805,7.518]],["t/695",[4,0.221,409,2.055,429,3.425,455,3.976,512,4.019,533,5.487,562,5.065,597,3.238,806,3.708,807,5.914,808,6.529,809,5.065,810,5.065,811,7.642,812,6.293,813,7.642,814,4.893]],["t/697",[0,5.033,4,0.24,94,2.186,315,3.642,420,2.47,443,5.64,455,3.564,541,3.263,550,4.013,567,5.033,571,4.249,597,2.902,600,2.622,688,4.249,703,5.64,745,6.106,783,4.812,798,5.301,815,5.459,816,6.85]],["t/699",[4,0.236,17,3.499,94,2.235,193,4.486,403,3.499,436,3.766,455,3.645,523,4.486,584,3.645,597,2.968,619,3.766,765,5.421,809,4.643,810,4.643,817,7.006,818,6.57,819,7.006,820,8.82,821,5.583,822,4.05,823,7.006]],["t/701",[4,0.246,94,2.021,436,3.405,455,3.296,550,3.711,583,2.862,597,2.684,800,5.209,824,6.334]],["t/703",[4,0.249,78,0.165,81,0.461,272,0.308,314,0.364,409,0.145,410,0.312,411,0.254,417,0.262,420,0.372,429,0.242,430,0.364,467,0.325,512,0.283,529,0.379,541,0.491,545,0.417,571,0.334,648,0.312,716,0.24,775,0.29,790,0.329,791,0.357,815,0.43,825,0.278,826,0.406,827,0.364,828,0.539,829,0.444,830,0.351,831,0.506,832,0.481,833,0.379,834,0.364,835,0.287,836,0.379,837,0.461,838,0.406,839,0.758]],["t/705",[4,0.237,63,4.936,78,2.323,193,4.853,536,6.041,573,6.241,718,4.116,756,4.03,760,6.756,761,6.475,825,3.902,840,5.117]],["t/707",[4,0.231,63,4.461,94,2.186,107,3.176,109,4.715,110,6.106,420,2.47,520,3.769,549,3.421,571,4.249,600,2.622,652,6.106,741,6.106,743,5.033,744,6.106,775,3.683,797,6.106,801,5.16,821,5.459,822,3.96,841,4.316,842,5.16,843,5.301,844,6.106,845,6.85,846,6.85,847,5.033]],["t/710",[4,0.222,17,3.526,404,5.187,417,3.425,419,4.029,420,2.545,423,3.19,429,3.163,525,3.711,532,3.753,564,2.265,584,4.611,628,4.448,677,6.292,827,4.765,888,4.859,889,6.292,890,6.62,891,8.311,892,7.059,893,6.292]],["t/713",[4,0.248,78,0.678,281,1.864,403,1.105,416,1.882,525,2.809,527,1.139,558,2.186,578,1.19,579,2.519,720,1.279,790,1.352,865,1.626,871,1.467,886,1.972,887,1.972,888,1.523,894,2.679,895,2.213,896,1.89]],["t/715",[4,0.248,78,1.05,94,1.093,107,1.588,409,0.921,525,1.943,584,1.782,716,1.522]],["t/717",[4,0.246,416,4.189,457,4.153,525,3.033,827,4.305,888,6.357,897,4.018]],["t/719",[4,0.248,598,1.678,599,1.929,600,1.208]],["t/722",[281,4.123,429,3.7,525,3.561,825,5.019,827,5.574,888,5.683,898,8.69,899,5.574]],["t/725",[4,0.248,78,1.097,409,0.401,416,1.337,525,1.815,564,0.851,666,0.851,720,0.863,790,0.912,825,2.558,862,2.113,871,0.989,894,1.071,896,1.275,898,1.33,899,1.79,900,1.228,901,2.183,902,1.189,903,1.275]],["t/727",[4,0.246,78,2.084,564,2.182,825,3.501]],["t/729",[4,0.241,416,4.58,525,3.316,827,4.954,888,6.786,902,5.849,904,7.339,905,7.339]],["t/731",[4,0.248,598,1.999,599,2.297,600,1.439]],["t/734",[246,6.409,429,3.909,480,4.081,525,3.186,540,4.857]],["t/737",[4,0.248,107,1.138,246,1.803,281,2.032,355,0.873,378,2.438,409,1.401,422,1.213,480,2.837,517,2.649,525,2.934,558,2.383,564,1.306,565,1.803,566,1.955,567,1.803,568,1.598,569,1.598,578,1.319,579,1.656,756,1.304,790,1.499,806,1.19,865,1.803,871,1.626,884,3.626,885,1.478,886,2.187,887,2.187]],["t/739",[4,0.238,78,2.486,281,4.051,480,3.794,525,2.963,716,3.605]],["t/741",[4,0.248,598,2.732,599,3.14,600,1.966]],["t/743",[525,3.216,590,6.633,825,4.534,906,8.259]],["t/745",[4,0.152,94,2.287,304,5.036,315,3.811,326,4.078,396,4.091,416,3.616,423,3.239,429,3.212,525,3.731,558,4.199,719,4.257,734,5.547,825,5.022,888,4.934,899,4.839,900,5.902,901,5.902,903,6.124,907,8.948,908,6.723]],["t/748",[4,0.237,406,5.758,423,3.541,426,5.903,435,6.695,597,3.32,885,4.72,899,5.29,902,6.245,909,7.349]],["t/750",[4,0.248]],["t/753",[4,0.246]],["t/755",[4,0.247,78,1.735,79,2.34,84,3.317,281,1.855,306,2.508,355,1.322,369,3.483,396,2.12,409,1.523,429,1.664,472,3.058,525,2.506,558,2.176,564,1.817,598,1.975,653,2.27,664,4.381,716,1.651,756,1.975,825,3.532,839,2.729,865,2.729,901,5.649,910,2.874,911,2.557,912,3.714,913,3.311,914,3.714]],["t/757",[4,0.248,281,2.431,825,2.506,881,3.767,900,4.008]],["t/759",[4,0.247,94,1.667,355,2.585,409,1.405,425,3.147,716,2.322,915,5.225,916,5.225]],["t/761",[4,0.243,281,3.817,517,4.977,576,3.78,885,4.603,899,5.159]],["t/763",[4,0.248,598,2.007,599,2.307,600,1.445]],["t/766",[4,0.231,78,1.915,86,3.661,94,2.615,249,5.338,420,2.253,480,4.838,519,4.39,552,4.935,564,2.005,759,4.069,768,4.809,775,5.218,919,4.591,921,5.404,925,4.069,1035,5.57,1036,6.249,1037,4.486,1038,4.591,1039,7.304,1040,3.876]],["t/768",[4,0.192,78,2.249,98,4.358,327,3.946,409,1.974,420,3.273,480,4.819,564,2.355,576,3.63,648,4.243,716,3.262,736,5.269,757,4.243,759,5.912,768,3.86,769,6.043,1041,7.339,1042,6.542,1043,6.542]],["t/771",[4,0.244,78,1.84,480,4.195,523,3.845,552,4.808,556,3.98,756,4.767,757,3.472,806,3.873,822,3.472,840,4.054,1037,4.311,1038,4.412,1044,4.412,1045,4.647,1046,4.523]],["t/773",[4,0.247,78,2.158,98,2.969,378,2.339,480,3.294,552,4.24,564,2.616,757,2.89,768,3.703,806,3.955,1037,3.589,1038,3.673,1044,5.173,1045,3.868]],["t/776",[4,0.246,158,4.644,272,3.519,510,4.162,632,3.661,676,2.991,762,5.267,789,3.475,1012,4.162,1047,5.782]],["t/778",[4,0.245,272,4.029,558,5.192,1048,6.03,1049,7.059]],["t/780",[4,0.245,78,2.099,355,2.438,378,3.204,564,2.198,609,3.602,946,6.106,1050,6.85,1051,6.85,1052,5.852]],["t/783",[4,0.246,17,3.323,78,2.039,355,2.368,556,4.409,783,4.674]],["t/785",[4,0.247,78,1.865,583,2.749,619,3.271,757,3.517,786,4.274]],["t/787",[4,0.246,326,3.546,409,2.092,480,3.64,525,2.111,527,2.976,592,4.606,739,4.473,759,5.067,1053,4.759,1054,5.421,1055,6.201,1056,4.938,1057,5.78,1058,5.421]],["t/789",[94,2.169,199,4.996,370,5.122,409,1.829,416,3.43,436,3.656,480,4.049,497,2.859,521,3.209,541,3.239,563,4.284,569,4.428,600,2.603,666,3.881,718,3.846,771,6.697,783,4.777,784,6.061,840,6.427,897,5.453,941,5.262,982,5.122,1059,6.061,1060,6.8,1061,6.8,1062,5.599,1063,4.882,1064,6.8,1065,6.8]],["t/791",[0,4.169,4,0.198,24,3.121,78,2.862,94,1.81,98,3.369,246,4.169,294,3.76,378,3.595,409,2.066,420,2.046,463,3.695,464,4.847,480,4.369,518,4.169,520,3.121,524,5.004,540,3.159,549,2.834,552,5.624,564,2.796,600,2.172,716,2.521,753,4.672,757,3.28,759,5.674,768,4.041,769,4.672,843,4.39,897,3.575,921,3.159,957,4.169,1014,4.274,1037,5.517,1038,5.646,1040,3.519,1055,4.522,1063,4.073,1066,4.672,1067,5.674]],["t/794",[4,0.246,17,1.435,41,1.077,62,1.381,107,1.332,119,3.688,199,2.111,315,1.527,327,1.544,355,1.022,370,3.486,403,2.311,409,1.245,411,1.356,420,2.403,422,1.421,429,1.287,467,3.5,475,1.977,499,2.454,512,1.511,529,2.018,540,1.599,550,1.683,563,1.81,564,0.922,571,1.782,578,1.544,579,1.939,580,1.464,581,1.839,583,2.091,619,2.488,632,1.706,642,2.608,653,1.755,666,1.639,676,2.246,687,2.365,724,3.785,758,1.421,789,1.619,829,2.365,833,4.083,834,3.923,835,1.527,856,2.641,859,2.56,860,1.939,929,2.018,961,2.872,962,3.581,963,2.223,964,4.125,965,2.289,966,2.872,967,2.872,968,2.223,969,2.365,970,2.56,971,1.782,972,2.454,973,2.872,974,2.289,975,2.872,976,2.872]],["t/797",[4,0.247,84,3.004,90,1.586,326,1.489,419,4.716,422,2.536,438,2.529,492,2.206,570,3.399,580,1.665,653,3.867,719,3.045,825,1.683,835,4.393,875,3.284,881,4.897,965,4.087,969,2.691,977,2.792,978,3.268,979,5.128,980,5.128,981,2.792,982,2.462,983,3.268,984,3.065,985,3.768,986,3.268,987,2.529]],["t/799",[4,0.247,57,1.974,63,2.797,86,1.535,272,1.495,411,1.237,420,0.945,422,1.296,429,1.174,467,2.587,475,1.803,487,1.974,505,3.554,535,1.769,578,1.409,580,1.335,583,1.184,619,2.309,632,1.556,642,1.477,676,2.084,683,1.925,688,1.625,716,1.164,724,1.706,755,3.536,777,3.756,789,1.477,798,2.028,806,1.271,833,3.017,834,4.261,835,3.356,836,1.841,856,1.495,857,1.841,881,2.028,964,3.828,968,2.028,974,2.088,988,2.336,989,2.62,990,2.62,991,2.238,992,5.391,993,1.974,994,2.157,995,3.669,996,2.028]],["t/801",[4,0.248,90,1.009,98,1.234,420,0.749,422,1.028,429,2.071,467,1.252,475,1.431,489,1.949,505,1.354,512,1.093,521,0.981,578,1.117,581,2.959,595,1.13,609,2.43,619,1.117,632,1.234,642,2.605,648,2.046,662,1.853,676,1.717,683,1.527,688,1.289,724,3.553,732,1.853,733,1.776,736,1.492,789,1.995,792,1.172,798,1.608,800,3.437,815,1.656,833,1.46,834,1.403,835,1.105,836,1.46,856,2.02,857,2.486,968,1.608,971,1.289,997,2.079,998,1.949,999,1.46,1000,2.079,1001,1.776,1002,2.079,1003,1.776,1004,5.227,1005,2.079,1006,1.711,1007,2.079,1008,1.656,1009,2.079,1010,1.949,1011,2.914]],["t/803",[4,0.248,17,0.435,41,0.608,62,0.418,63,0.567,66,0.717,78,1.032,80,0.54,98,0.517,100,0.776,107,0.403,179,0.693,205,0.577,213,0.673,272,1.3,327,1.224,355,0.31,370,0.655,377,0.693,378,0.407,410,4.502,411,1.347,417,0.422,419,0.497,420,0.585,422,0.802,425,0.977,429,2.214,430,1.538,438,0.673,455,0.453,463,0.567,465,0.693,467,1.372,475,0.599,480,0.407,485,0.54,500,0.693,520,0.479,533,0.625,535,1.095,537,1.164,540,0.903,541,1.36,549,0.81,561,0.673,564,1.227,570,0.577,578,0.468,580,0.826,582,0.625,583,1.29,595,0.882,597,1.209,605,0.693,609,0.458,619,1.81,641,0.776,642,0.49,648,0.938,676,1.105,683,0.639,704,0.655,716,0.721,724,1.056,734,0.673,738,0.776,740,0.639,753,0.717,755,0.717,757,0.938,758,1.126,759,0.567,763,1.335,764,1.335,783,0.611,786,1.139,789,0.49,792,0.49,800,1.022,825,0.448,835,0.463,836,0.611,854,2.439,856,0.497,857,0.611,889,0.776,897,1.022,924,1.762,958,0.611,968,0.673,970,0.776,971,1.006,974,1.815,991,0.743,999,0.611,1003,0.743,1012,2.273,1013,0.776,1014,0.655,1015,0.776,1016,0.87,1017,0.87,1018,1.622,1019,0.87,1020,0.87,1021,0.87,1022,1.622,1023,0.693,1024,0.816,1025,0.87,1026,1.622,1027,0.87,1028,0.87,1029,2.855,1030,0.87,1031,0.87,1032,0.87,1033,2.03,1034,0.87]],["t/806",[4,0.231,27,3.902,41,2.359,78,1.928,94,2.626,107,2.917,338,4.42,409,1.692,456,4.42,461,5.374,473,3.59,480,2.943,519,4.42,564,3.123,775,5.232,917,5.608,918,6.291,919,4.622,920,4.097,921,3.503,922,4.622,923,5.374,924,4.868,925,4.097,926,6.291,927,4.739,928,5.18,929,4.42,930,5.608,931,4.622]],["t/808",[9,4.705,78,2.214,179,5.757,254,6.172,315,3.841,409,1.943,456,5.075,480,3.38,497,3.037,510,4.877,512,3.799,534,4.415,564,3.287,689,5.308,716,3.211,920,5.855,921,5.006,931,5.308,932,7.225,933,6.44,934,5.949,935,6.44]],["t/811",[4,0.244,41,1.816,78,2.455,86,4.692,90,4.232,261,3.859,315,2.574,417,3.886,492,4.647,497,2.036,510,3.269,564,2.209,716,3.059,822,2.799,841,5.046,922,5.058,933,4.316,936,3.747,937,8.009,938,5.668,939,6.884,940,4.842,941,3.747,942,6.884,943,6.456]],["t/813",[4,0.247,9,3.481,78,1.638,355,1.903,473,3.051,478,3.316,497,2.247,564,2.368,689,3.928,792,3.013,944,4.137,945,4.137]],["t/816",[4,0.244]],["t/818",[4,0.242,378,3.697,497,3.323,564,2.536,946,7.045]],["t/820",[4,0.245,86,3.87,107,3.939,417,3.205,497,2.777,786,4.64,841,4.162,947,5.888,948,6.606]],["t/823",[4,0.247,920,5.266,949,5.459,950,6.125]],["t/825",[4,0.247,497,2.558,584,3.165,619,3.271,794,4.47]],["t/827",[78,2.716,90,3.425,314,4.765,315,3.753,456,4.959,478,5.497,497,3.726,510,4.765,564,2.844,568,4.597,581,4.52,600,2.702,716,4.305,758,3.491,840,4.765,897,4.448,920,4.597,922,5.187,936,5.462,951,5.812,952,7.059,953,7.059,954,7.059,955,7.059]],["t/829",[4,0.204,9,3.988,27,3.799,62,2.944,107,3.75,109,5.566,122,4.613,294,4.059,378,2.865,396,3.495,409,2.175,429,2.744,456,4.302,480,2.865,562,4.059,564,3.301,576,3.029,689,4.5,716,2.722,768,3.221,792,3.452,832,5.459,841,3.859,847,4.5,920,3.988,921,4.503,922,4.5,925,3.988,928,5.043,929,4.302,930,5.459,931,4.5,956,6.125,957,4.5,958,5.681,959,5.459,960,5.232]],["t/832",[4,0.236,84,3.495,94,2.852,306,4.028,354,5.595,355,2.124,416,4.009,420,2.151,492,4.028,497,2.508,519,4.191,564,1.915,758,4.42,775,5.124,793,4.028,795,5.318,843,4.617,919,4.384,925,3.885,1012,5.366,1043,5.318,1052,5.097,1053,4.913,1077,5.318,1078,3.82,1100,3.593,1102,5.967,1103,5.967,1104,5.967,1105,5.967,1106,5.967]],["t/834",[79,5.557,222,5.583,383,5.277,416,3.534,432,5.768,457,5.743,586,5.147,740,5.147,758,5.272,928,5.768,929,4.922,1063,5.03,1078,6.181,1081,4.922,1107,7.271,1108,5.768,1109,8.82,1110,8.82]],["t/837",[4,0.245,78,2.307,222,4.387,378,2.575,416,2.777,457,3.585,492,3.716,564,1.767,768,2.895,775,2.96,822,3.182,927,4.146,938,4.533,1081,3.867,1082,4.045,1111,6.71,1112,4.907,1113,4.907,1114,4.533,1115,6.71,1116,3.867,1117,4.907,1118,4.907,1119,4.146]],["t/839",[4,0.246,62,2.906,90,2.933,565,4.441,938,4.977,1111,7.146,1112,5.388,1113,5.388,1115,7.146,1117,5.388,1120,6.044,1121,6.044,1122,6.044]],["t/842",[4,0.246,62,2.54,78,2.243,79,3.33,272,4.177,500,4.212,506,3.278,583,3.307,748,4.351,1082,3.883,1095,3.568,1114,4.351,1116,3.713,1119,3.981,1123,7.319,1124,4.956,1125,5.285,1126,6.524,1127,5.285,1128,3.981,1129,4.711]],["t/844",[4,0.246,78,2.183,372,3.105,422,3.522,423,3.218,506,3.152,639,5.864,748,4.184,806,2.466,807,3.932,830,4.638,885,3.06,1044,5.233,1081,3.57,1082,3.734,1095,3.43,1114,4.184,1116,3.57,1128,3.828,1129,4.529,1130,5.082,1131,6.348,1132,5.082]],["t/847",[4,0.245,306,3.926,409,1.564,460,5.184,595,3.163,792,3.278,793,3.926,1012,3.926,1133,5.816,1134,7.814,1135,7.814,1136,4.635,1137,7.814,1138,7.814,1139,7.814,1140,7.814]],["t/849",[4,0.242,27,4.861,497,3.295,564,2.515,920,5.103]],["t/851",[4,0.181,416,5.014,423,3.857,549,4.263,584,4.903,885,5.675,1046,5.011,1141,9.323,1142,5.93,1143,9.941,1144,6.653,1145,6.653,1146,6.62,1147,6.239,1148,5.478,1149,5.302,1150,5.478,1151,6.653,1152,4.674,1153,4.888]],["t/853",[4,0.208,57,4.327,62,2.761,78,1.76,79,3.619,90,2.787,94,1.833,107,2.663,122,4.327,246,4.22,273,5.387,326,2.618,355,2.045,416,3.909,420,2.071,457,5.046,466,5.12,486,3.678,520,3.16,521,2.711,524,3.741,527,2.957,541,2.736,564,1.843,591,5.12,632,3.411,758,3.832,787,4.445,791,3.807,792,3.237,812,4.73,830,3.741,840,3.878,852,3.954,921,3.198,957,4.22,1040,3.563,1063,4.124,1078,4.961,1082,4.22,1095,3.878,1108,4.73,1116,4.035,1126,5.12,1131,5.12,1154,5.744,1155,5.744,1156,5.744,1157,5.744,1158,4.907,1159,5.387,1160,5.744]],["t/855",[4,0.198,107,4.338,513,7.227,515,6.583,516,5.018,520,4.24,541,3.67,576,3.811,754,6.345,775,5.416,1014,5.804,1040,4.78,1068,7.706,1069,7.706,1070,7.706]],["t/857",[4,0.231,17,2.1,27,2.608,41,2.33,62,2.987,78,1.288,79,2.649,80,3.854,86,2.463,183,3.591,231,3.167,249,3.591,327,2.26,383,6.869,396,2.399,409,1.131,416,3.134,420,1.516,456,4.365,457,2.738,480,4.266,484,2.786,485,4.585,521,1.984,534,3.797,535,2.838,541,2.959,552,4.451,564,2.372,600,1.609,635,3.461,666,2.399,718,2.761,740,3.089,743,3.089,757,2.43,758,3.073,768,4.293,775,4.683,791,2.786,793,2.838,835,2.235,841,2.649,917,3.747,920,2.738,921,3.459,922,3.089,944,3.253,945,3.253,987,3.253,1035,3.747,1037,3.018,1038,3.089,1039,5.538,1071,3.747,1072,3.461,1073,3.461,1074,3.253,1075,3.747,1076,2.532,1077,3.747,1078,2.692,1079,4.204,1080,4.204,1081,2.953,1082,3.089]],["t/859",[4,0.235,41,1.826,80,3.019,94,1.553,107,3.204,272,2.778,327,2.617,409,1.309,436,2.617,439,3.879,463,3.17,465,3.879,485,5.423,488,6.159,497,2.046,512,4.224,521,3.261,523,3.117,550,2.852,569,3.17,596,2.778,600,1.863,695,3.576,707,3.879,716,2.163,756,3.673,774,4.339,775,4.964,792,3.894,793,4.664,841,3.067,842,3.666,921,2.71,934,4.008,951,4.008,1012,5.422,1083,4.339,1084,4.868,1085,5.689,1086,4.868,1087,6.159,1088,4.868,1089,4.868,1090,4.868,1091,6.909,1092,4.868,1093,4.868,1094,4.868,1095,3.286,1096,3.286]],["t/861",[94,2.287,315,3.811,355,2.552,409,2.406,416,3.616,484,4.751,534,4.38,541,3.414,564,3.13,565,5.267,736,6.424,750,5.267,756,3.811,765,5.547,921,3.991,977,6.124,1008,5.713,1095,4.839,1097,7.169,1098,5.4,1099,7.169,1100,5.389,1101,7.169]],["t/864",[4,0.234,41,3.475,94,2.662,107,2.978,231,4.837,445,5.724,484,4.256,485,5.175,519,4.512,534,5.098,535,4.335,552,5.024,654,4.42,743,4.719,775,5.274,919,4.719,921,4.645,923,5.486,925,4.182,1040,3.984,1071,5.724,1072,5.288,1073,5.288]],["t/867",[23,5.004,41,2.425,62,4.469,94,2.063,314,4.366,315,3.438,355,2.302,396,3.691,463,5.457,464,5.525,478,4.012,483,3.601,484,4.286,492,4.366,521,3.955,523,4.141,534,3.952,545,5.004,564,2.075,676,3.138,718,2.874,750,4.752,771,6.485,789,3.645,897,5.28,958,4.543,959,5.764,960,5.525,1006,5.325,1062,6.9,1063,6.016,1161,6.065,1162,6.467,1163,6.467]],["t/869",[23,6.116,41,2.964,372,4.83,516,5.147,521,4.483,523,5.061,600,3.025,718,3.512,812,6.508,840,6.413,897,4.98,941,6.116,1062,6.508,1164,7.904]],["t/872",[4,0.246,94,1.49,272,4.481,315,2.483,432,3.846,478,2.897,521,2.205,528,5.203,534,2.854,540,2.601,569,3.042,576,2.31,580,3.419,583,2.111,627,4.728,676,2.266,778,5.191,789,2.633,822,2.7,935,4.164,936,3.614,1045,6.075,1048,3.99,1116,3.281,1118,4.164,1165,4.164,1166,4.164,1167,4.381]],["t/874",[4,0.246,327,2.23,396,2.367,420,1.495,422,2.051,424,3.697,441,3.415,474,3.047,480,1.94,525,1.515,528,4.859,534,4.956,535,2.8,583,1.874,592,3.305,627,3.705,695,3.047,759,2.701,771,5.674,778,3.209,806,2.012,885,2.498,944,3.209,945,3.209,1045,4.76,1073,3.415,1166,3.697,1168,4.147,1169,4.147,1170,4.147,1171,4.147]],["t/877",[4,0.245,564,2.393,931,5.479]],["t/879",[4,0.246]],["t/881",[4,0.244,315,3.193,473,3.427,484,3.98,534,3.67,580,3.06,777,4.133,806,3.873,814,3.845,936,4.647,944,4.647,945,4.647,947,5.353,958,4.219,1044,4.412,1046,4.523,1076,4.808,1165,7.115,1172,6.005,1173,4.412]],["t/884",[4,0.158,41,3.724,90,3.618,314,5.034,326,4.525,478,4.626,521,4.328,564,2.393,676,4.449,718,3.314,789,5.168,840,5.034,884,6.647,1174,7.458,1175,7.458,1176,7.458]],["t/886",[57,6.005,90,3.868,138,7.476,326,3.633,478,4.945,509,7.476,521,3.763,596,4.55,646,6.005,673,7.388,951,6.564,1087,7.106,1177,7.972,1178,7.972]],["t/888",[4,0.218,41,3.201,74,5.683,78,2.616,94,2.123,107,3.085,420,2.399,480,3.112,512,3.499,514,5.478,516,4.332,541,3.169,564,2.739,600,2.546,654,4.579,676,4.141,704,5.011,737,5.478,759,4.332,789,4.81,792,3.75,793,4.491,842,5.011,931,4.888,1081,4.674,1083,5.93,1179,6.653,1180,6.653,1181,6.653]],["t/891",[4,0.233,17,3.299,78,2.024,80,5.27,94,2.711,183,5.643,420,2.381,485,4.097,519,4.64,541,3.146,552,3.978,564,2.12,718,2.936,775,5.33,792,3.723,835,3.512,919,4.853,921,3.678,925,4.301,981,5.643,987,5.111,1040,4.097,1074,5.111,1075,5.888,1076,3.978]],["t/893",[80,5.524,191,6.671,312,5.669,383,5.358,420,2.565,436,3.824,458,5.857,506,4.413,515,6.077,521,3.358,541,3.388,600,3.408,666,4.06,676,3.451,696,6.341,704,5.358,718,4.32,768,4.683,791,5.902,835,3.782,987,5.504,1095,4.802,1182,7.114]],["t/896",[4,0.246,78,2.174,80,3.135,409,1.908,564,1.622,595,2.748,718,2.246,768,2.658,786,3.55,835,2.687,871,4.702,1146,6.821,1148,5.842,1183,4.161,1184,6.324]],["t/898",[4,0.244,98,3.84,409,2.254,541,3.08,595,3.517,718,2.874,790,3.952,871,4.286,1146,6.531,1149,6.679,1150,6.9]],["t/901",[4,0.245,78,1.739,86,3.324,409,2.066,429,2.542,480,2.654,497,2.385,595,4.179,718,2.521,729,5.057,756,3.016,757,3.28,790,3.467,822,3.28,871,5.093,1076,3.417,1146,6.561,1148,4.672,1184,5.057]],["t/903",[4,0.247,409,1.554,558,3.386,564,1.855,595,4.231,768,3.04,786,4.061,1146,5.466,1185,5.78]],["t/906",[4,0.248]],["t/908",[4,0.247,158,3.981,619,3.935,882,4.351,963,4.089,1186,5.285]],["t/910",[4,0.22,17,5.032,423,3.119,549,4.788,584,4.988,597,2.924,777,6.013,778,5.34,779,6.151,794,6.419,806,3.348,885,4.156,1146,4.848,1149,5.5,1150,5.682,1152,4.848,1153,5.071,1187,6.901,1188,6.472,1189,6.901]],["t/912",[193,5.383,355,2.992,419,5.623,423,3.799,436,4.519,783,5.905,1152,5.905,1153,6.176]],["t/914",[4,0.247,17,1.668,78,1.967,355,1.188,378,1.562,419,4.139,423,2.357,436,1.795,497,1.404,520,1.837,564,1.674,584,4.689,653,2.04,746,2.174,757,1.93,768,2.742,809,2.213,810,2.213,835,1.775,993,2.515,1152,4.508,1183,2.749,1190,3.339]],["t/916",[4,0.247,419,3.142,473,3.142,584,2.864,792,3.103]],["t/918",[4,0.246,193,3.483,355,1.936,378,2.545,423,2.458,431,4.335,436,2.925,497,2.287,576,2.69,584,5.004,688,3.375,758,3.693,803,5.361,838,4.098,1191,5.44]],["t/920",[4,0.247,9,2.738,17,2.1,78,1.904,193,2.692,326,1.916,355,1.496,436,2.26,497,1.767,584,2.187,600,1.609,718,1.868,746,2.738,790,2.569,791,2.786,825,2.164,835,2.235,851,3.747,852,2.894,993,3.167,1153,4.565,1192,4.204,1193,3.943,1194,4.204,1195,3.253]],["t/922",[4,0.245,41,2.516,90,2.266,193,2.991,326,2.129,409,1.256,417,2.266,419,2.666,423,3.032,436,2.511,576,3.883,578,2.511,584,5.071,656,3.722,688,5.637,720,2.7,792,2.633,835,3.567,852,3.215,1152,4.713,1153,3.432,1196,3.99,1197,4.381,1198,4.164,1199,4.671,1200,4.671]],["t/924",[4,0.204,78,1.89,94,1.967,97,5.782,98,3.661,107,3.766,122,4.644,222,4.913,409,1.658,420,2.928,430,5.483,436,3.315,520,3.392,521,2.91,524,4.015,541,2.936,549,3.079,564,1.979,595,3.353,600,3.109,632,3.661,666,3.519,718,2.74,743,5.968,768,4.272,775,3.315,791,4.086,792,3.475,794,4.53,826,4.644,836,4.331,842,4.644,844,5.495,921,3.433,934,5.076,957,4.53,958,4.331,1040,3.824,1076,3.713,1201,6.165]],["t/927",[4,0.144,66,5.599,78,2.084,94,2.169,205,4.506,306,4.59,327,3.656,355,2.42,409,1.829,420,2.452,430,4.59,485,4.218,499,5.809,507,5.599,564,2.182,569,4.428,576,4.28,600,2.603,615,5.599,676,3.299,750,4.996,793,4.59,1006,5.599,1008,6.897,1012,4.59,1033,6.061,1042,6.061,1053,5.599,1076,4.095,1221,5.453,1222,6.8,1223,6.8]],["t/930",[4,0.247,78,1.707,485,3.456,564,1.788,596,3.18,1221,3.51]],["t/932",[4,0.247,78,1.677,409,1.472,564,1.756,596,3.123,597,2.318,1195,4.234,1221,3.448]],["t/934",[4,0.169,281,3.981,409,2.144,596,4.55,666,4.55,718,3.543,756,4.238,758,3.942,775,4.286,787,6.168,1001,6.81,1074,6.168,1116,5.6,1221,5.022,1224,7.972]],["t/937",[4,0.248,78,2.191,564,2.294,1221,4.505]],["t/939",[4,0.248,78,2.283,409,1.146,423,2.836,564,2.014,584,3.876,597,1.806,734,3.298,1152,2.994,1221,2.685]],["t/941",[485,4.988,600,3.673,676,3.901,746,5.236,758,3.977,775,4.323,790,4.914,843,6.222,894,5.773,1074,6.222,1225,8.041,1226,8.041,1227,8.041]],["t/944",[4,0.248,409,1.11,564,1.968,757,2.387,768,2.171,1221,3.863,1228,3.195,1229,3.68,1230,6.131]],["t/946",[41,3.016,497,3.381,541,3.83,549,4.016,564,2.58,718,3.573,941,6.222,1108,6.621,1228,7.427,1229,7.167,1231,8.041,1232,7.541,1233,8.041]],["t/948",[4,0.248]],["t/950",[272,4.589,524,5.236,590,6.057,746,5.236,763,6.621,764,6.621,765,6.222,790,4.914,894,5.773,1059,7.167,1098,6.057,1221,5.066,1228,6.222,1234,8.041]],["t/952",[4,0.17,283,6.869,524,5.236,549,4.016,556,5.329,584,4.184,768,4.229,803,5.773,1046,6.057,1183,6.621,1235,8.041,1236,8.041,1237,8.041,1238,8.041]],["t/954",[518,5.435,524,4.817,541,4.346,558,4.334,596,4.222,646,5.572,653,4.521,654,5.092,716,3.288,758,3.659,768,3.89,924,5.724,929,6.41,1076,4.455,1221,6.233,1228,5.724,1239,7.398,1240,7.398,1241,7.398,1242,7.398]],["t/957",[4,0.233,355,3.151,372,3.577,418,7.359,420,3.192,527,4.04,627,3.525,709,3.879,716,3.487,739,4.529,808,5,822,4.537,994,4.819,1011,4.819,1072,4.819,1141,5.489,1197,5.489,1250,3.476,1251,4.819,1257,7.289,1266,4.819,1339,5.217,1408,6.406,1409,6.406,1410,5.853,1411,6.406,1412,6.406,1413,6.406,1414,6.406,1415,5.853,1416,8.588,1417,5.853,1418,6.406,1419,6.406]],["t/960",[4,0.183,94,2.757,377,6.887,595,4.699,1406,8.104,1420,9.458]],["t/962",[4,0.232,41,3.124,409,2.24,422,4.12,438,6.446,758,4.12]],["t/964",[4,0.241,41,3.129,94,2.662,122,4.837,205,5.529,261,5.118,281,3.207,366,5.486,422,3.176,595,3.492,676,3.116,716,2.854,756,3.414,789,3.62,809,5.529,810,5.529,856,3.665,875,4.112,957,4.719,1076,3.868,1358,6.422]],["t/966",[4,0.213,86,4.514,94,2.459,109,5.304,260,7.706,323,6.869,409,2.516,417,3.739,483,4.29,520,4.24,571,4.78,583,3.482,754,6.345,841,4.855,1001,6.583,1421,8.434]],["t/968",[4,0.245,9,2.895,17,2.221,30,4.17,41,1.668,94,1.419,355,2.304,409,1.741,411,2.099,420,1.603,422,3.202,423,2.009,475,3.06,571,2.758,627,3.899,719,2.641,806,3.704,854,5.531,909,4.17,958,3.124,960,3.798,962,3.441,971,2.758,996,3.441,1056,3.798,1076,3.899,1283,3.798,1285,5.01,1288,4.877,1313,4.447,1317,5.159,1422,4.447,1423,4.866,1424,7.086]],["t/970",[4,0.205,41,2.647,281,3.526,326,3.217,438,6.857,483,3.93,609,3.712,736,5.068,746,4.597,874,6.03,929,4.959,962,6.857,1076,4.251,1161,6.62,1285,5.462,1332,5.812,1359,7.059,1415,7.059,1425,7.726,1426,7.726,1427,7.059,1428,7.726,1429,7.726,1430,7.726,1431,7.726,1432,7.059]],["t/972",[4,0.245,324,6.207,372,3.793,393,4.36,527,3.195,556,4.113,631,5.302,804,5.11,835,3.3,985,4.56,1202,6.207,1203,7.272,1205,5.821,1266,5.11,1433,7.272,1434,6.793,1435,4.803]],["t/974",[4,0.225,94,2.565,213,6.222,386,8.041,564,2.58,639,6.621,671,6.869,758,3.977,860,5.428,1332,6.621,1436,8.8]],["t/976",[4,0.244,119,5.849,757,4.243,758,4.49,860,4.954,1260,6.883,1437,6.883]],["t/978",[4,0.234,403,4.051,571,5.032,1285,6.277,1317,6.464,1438,8.877,1439,8.877,1440,8.877]],["t/980",[4,0.243,378,3.181,383,5.122,414,6.377,429,3.047,468,6.061,486,4.354,830,5.636,1316,6.061,1336,6.377,1371,6.061,1441,7.442,1442,7.442,1443,7.442]],["t/983",[4,0.221,17,3.786,24,4.17,41,2.843,62,3.644,213,5.865,403,3.786,410,4.382,429,3.397,770,4.936,804,6.241,814,4.853,1078,4.853,1250,4.501,1321,6.041,1375,6.756,1444,6.756,1445,8.296]],["t/985",[4,0.237]],["t/988",[4,0.246,24,3.102,355,2.007,378,2.638,409,1.516,527,2.903,573,4.643,597,2.389,716,2.506,756,2.998,770,3.672,1253,4.494,1286,6.301,1446,4.817,1447,5.639]],["t/990",[4,0.247,527,2.939,597,3.269,1196,4.877,1286,6.353,1446,4.877,1447,5.709]],["t/992",[4,0.247,41,1.826,378,3.232,410,4.644,429,2.181,527,2.506,559,2.932,597,2.927,1078,5.143,1446,4.158,1448,5.327,1449,7.562]],["t/994",[4,0.247,429,2.726,527,3.132,597,3.411,804,5.01,1446,5.197]],["t/996",[4,0.247,30,5.489,430,3.951,527,3.013,597,3.325,1214,5,1450,6.406,1451,5.853]],["t/998",[4,0.246,424,5.495,473,3.519,527,3.174,597,3.441,770,4.015,814,3.948,1286,5.076,1394,6.165]],["t/1001",[4,0.246,272,4.441,338,4.061,355,2.057,409,2.092,411,2.728,597,2.449,770,3.764,814,5.632,996,4.473,1048,4.938,1286,4.759,1405,4.473,1446,4.938]],["t/1003",[4,0.204,24,4.463,205,5.376,482,4.957,595,4.411,596,4.629,654,5.583,814,5.194,1444,7.23,1452,8.877,1453,8.877,1454,8.877]],["t/1005",[4,0.19,41,2.709,84,4.232,107,3.35,109,4.973,294,4.788,394,6.44,410,4.177,412,6.172,429,4.387,497,3.037,511,5.757,627,4.351,739,5.59,758,3.573,770,4.705,804,5.949,831,6.775,847,5.308,873,5.442,1078,4.626,1444,6.44,1455,6.44,1456,5.757]],["t/1008",[4,0.245,22,4.792,24,2.636,27,2.972,64,4.271,326,2.184,403,2.393,480,2.242,482,2.928,497,2.015,568,3.12,596,2.735,597,2.03,627,2.886,669,3.708,672,3.946,676,2.325,746,3.12,758,2.37,806,2.325,814,5.559,858,3.176,911,4.703,1248,3.521,1250,4.058,1251,3.946,1255,4.271,1435,3.708,1437,4.494,1457,5.245,1458,4.792,1459,5.245,1460,5.245,1461,4.494]],["t/1011",[4,0.248,597,2.265,1252,4.26]],["t/1013",[4,0.201,429,3.542,482,4.83,483,4.4,600,3.025,669,6.116,672,6.508,697,6.752,718,3.512,814,5.061,949,7.045,972,6.752,1119,5.953,1332,6.508,1462,7.904]],["t/1015",[4,0.247,597,2.595,1252,4.881]],["t/1017",[4,0.232,243,4.937,416,3.953,669,6.064,672,6.453,756,4.166,808,6.695,814,5.018,878,6.985,1332,6.453,1463,8.577,1464,8.577]],["t/1019",[4,0.247,597,2.702,1252,5.083]],["t/1021",[4,0.222,27,4.78,243,4.855,294,5.107,423,3.482,482,4.709,600,2.949,669,5.963,672,6.345,718,3.425,756,4.097,814,4.934,911,5.304,971,4.78,1119,5.804,1255,6.869]],["t/1023",[4,0.236,27,3.608,64,5.184,243,3.665,294,3.855,366,4.969,416,2.934,466,5.184,482,3.554,483,3.238,497,2.445,600,2.226,675,4.501,718,2.585,756,4.154,758,2.877,806,2.822,814,6.489,858,3.855,878,5.184,911,4.003,949,5.184,971,3.608,1119,4.381,1250,5.24,1255,6.965,1283,4.969,1332,4.789,1435,4.501,1437,5.455,1462,5.816,1465,5.816,1466,6.366,1467,6.366,1468,6.366]],["t/1025",[4,0.237,27,4.249,423,3.095,463,4.461,497,2.88,583,3.095,584,3.564,675,5.301,718,3.044,719,4.068,739,5.301,742,5.459,757,3.96,806,3.324,814,6.117,838,5.16,924,5.301,1250,4.068,1469,6.424,1470,7.497,1471,7.497]],["t/1028",[4,0.226,17,2.766,78,2.317,80,4.689,94,2.412,294,3.67,312,4.413,355,1.971,372,3.384,376,4.069,420,1.997,483,4.208,497,2.328,563,3.489,564,1.777,583,3.416,590,5.693,656,4.413,713,4.731,758,3.738,762,4.731,806,2.687,809,3.67,810,3.67,858,3.67,906,5.193,1250,3.289,1253,4.413,1277,7.559,1365,5.538,1405,4.285,1433,4.936,1456,4.413,1472,6.224,1473,4.936,1474,5.538,1475,6.061,1476,6.061,1477,8.272,1478,5.538,1479,6.061,1480,5.538,1481,6.061,1482,5.538,1483,6.061,1484,6.061,1485,6.061]],["t/1031",[4,0.245,1472,7.476,1473,6.542]],["t/1033",[4,0.245]],["t/1035",[4,0.246,78,2.648,94,1.513,213,5.248,272,3.871,281,2.369,355,2.818,420,2.445,467,2.856,564,2.541,806,2.301,1012,4.579,1405,6.127,1433,6.046,1472,3.905,1473,4.228,1486,4.743,1487,5.191,1488,5.191,1489,5.191]],["t/1037",[4,0.245]],["t/1039",[4,0.247]],["t/1042",[4,0.244]],["t/1044",[4,0.247,272,3.495,1405,4.739,1472,5.043]],["t/1047",[4,0.247]],["t/1049",[4,0.225,78,2.464,675,6.222,808,6.869,858,5.329,1128,7.229,1250,4.775,1472,6.621,1490,8.8,1491,7.541]],["t/1052",[4,0.242,409,2.107,512,4.121,1492,8.577,1493,7.837]],["t/1054",[4,0.247]],["t/1057",[4,0.248]],["t/1059",[4,0.226,27,4.379,80,5.497,94,2.252,409,2.605,438,5.462,512,3.712,583,4.005,716,3.137,718,3.137,809,4.678,810,5.873,825,3.634,1012,4.765,1283,6.03,1328,6.03,1494,7.726,1495,7.726,1496,6.62,1497,7.726]],["t/1061",[4,0.248,41,1.205,78,1.919,80,1.152,94,1.355,179,1.48,213,1.437,271,1.742,327,1.728,355,1.512,376,1.365,378,1.987,403,2.121,420,1.158,422,0.919,423,0.839,486,2.058,497,0.781,512,2.233,521,0.877,564,1.835,576,0.919,583,0.839,597,0.787,609,2.661,666,1.06,676,1.559,687,1.529,716,1.887,720,2.455,756,1.708,758,1.589,789,1.811,806,1.559,814,1.189,875,1.189,885,1.935,899,1.254,903,1.587,1085,1.529,1098,1.399,1243,1.437,1486,1.857,1493,4.247,1496,3.983,1498,2.033,1499,2.033,1500,2.033,1501,2.033,1502,2.033,1503,2.033]],["t/1064",[4,0.196,24,4.17,41,2.843,94,2.418,429,3.397,467,4.565,521,3.578,676,3.678,789,4.272,806,3.678,809,5.023,810,5.023,925,4.936,1173,7.348,1250,4.501,1321,6.041,1405,5.865,1504,6.756]],["t/1066",[4,0.24]],["t/1068",[4,0.248]],["t/1070",[4,0.242,41,1.289,79,6.638,94,1.702,132,6.538,315,1.828,403,1.717,404,2.526,427,3.225,428,4.693,431,5.872,448,3.438,506,4.947,510,4.974,538,4.558,623,2.831,628,2.166,691,2.661,709,2.279,758,1.7,761,2.937,773,3.225,807,5.059,809,3.536,810,3.536,879,6.131,902,2.74,1052,2.937,1119,4.019,1124,3.225,1173,2.526,1264,3.438,1375,3.065,1391,3.438,1504,3.065,1505,3.763,1506,9.236,1507,3.763,1508,7.155,1509,4.558,1510,5.839,1511,5.839,1512,5.839,1513,3.763,1514,3.763,1515,3.763,1516,3.763,1517,3.438,1518,3.763,1519,8.729,1520,3.763]],["t/1072",[4,0.247,355,2.083,428,4.202,467,3.525,653,3.577,999,4.112,1173,5.766,1405,4.529]],["t/1074",[4,0.245,94,2.138,563,4.222,676,3.251,789,3.777,860,4.524,1173,4.924,1478,6.701,1521,7.334,1522,7.334]],["t/1076",[4,0.246]],["t/1078",[4,0.224,24,4.038,94,2.342,355,2.612,463,4.779,482,4.485,483,4.086,521,3.464,523,4.699,546,6.542,563,4.624,646,5.528,770,4.779,806,3.561,1055,5.849,1173,6.671,1286,6.043,1342,6.27,1433,6.542,1455,6.542]],["t/1081",[4,0.234,24,4.852,41,2.627,62,3.368,194,6.57,403,3.499,411,3.307,478,4.346,516,4.562,521,3.307,541,3.337,549,3.499,586,5.147,609,3.684,827,4.729,1013,6.245,1095,4.729,1128,5.277,1248,6.48,1435,5.421,1455,6.245]],["t/1083",[4,0.239,497,3.323,841,4.98,858,5.238,1250,4.694,1251,6.508,1252,6.299,1523,7.904]],["t/1086",[4,0.234,24,4.852,41,2.627,62,3.368,194,6.57,403,3.499,411,3.307,478,4.346,516,4.562,521,3.307,541,3.337,549,3.499,586,5.147,609,3.684,827,4.729,1013,6.245,1095,4.729,1128,5.277,1248,6.48,1435,5.421,1455,6.245]],["t/1088",[4,0.239,497,3.323,841,4.98,858,5.238,1250,4.694,1251,6.508,1252,6.299,1523,7.904]],["t/1091",[4,0.245,530,4.899,1096,4.802,1107,5.358]],["t/1093",[4,0.247,393,5.204,406,3.951,409,1.446,423,4.126,719,4.399,1524,4.793]],["t/1095",[4,0.246,393,4.674,411,3.14,530,3.66,576,3.29,1078,4.26]],["t/1097",[4,0.246,530,3.66,580,3.39,1096,4.491,1317,5.302]],["t/1099",[4,0.248,393,4.927,406,3.653,423,3.672,1509,4.248,1524,4.432]],["t/1101",[4,0.243,193,4.084,409,1.715,423,2.882,461,5.448,511,6.619,516,5.408,521,3.01,530,3.509,540,3.551,579,4.305,586,6.102,597,2.702,971,3.956,1469,5.981,1525,5.685,1526,5.981,1527,5.685,1528,6.378]],["t/1103",[4,0.239,24,3.583,134,5.805,323,5.805,403,3.253,409,1.751,482,5.144,483,3.626,497,2.738,516,4.241,549,3.253,609,3.425,654,4.482,756,3.462,858,4.316,883,5.805,927,4.905,993,4.905,1098,4.905,1250,3.867,1370,5.805,1372,5.805,1525,5.805,1529,6.513,1530,6.513,1531,6.108]],["t/1105",[4,0.185,600,3.339,1250,5.18,1435,6.75,1456,6.952]],["t/1108",[4,0.245,530,4.899,1096,4.802,1107,5.358]],["t/1110",[4,0.247,393,5.204,406,3.951,409,1.446,423,4.126,719,4.399,1524,4.793]],["t/1112",[4,0.246,393,4.674,411,3.14,530,3.66,576,3.29,1078,4.26]],["t/1114",[4,0.246,530,3.66,580,3.39,1096,4.491,1317,5.302]],["t/1116",[4,0.248,393,4.927,406,3.653,423,3.672,1509,4.248,1524,4.432]],["t/1118",[4,0.243,193,4.084,409,1.715,423,2.882,461,5.448,511,6.619,516,5.408,521,3.01,530,3.509,540,3.551,579,4.305,586,6.102,597,2.702,971,3.956,1469,5.981,1525,5.685,1526,5.981,1527,5.685,1528,6.378]],["t/1120",[4,0.239,24,3.583,134,5.805,323,5.805,403,3.253,409,1.751,482,5.144,483,3.626,497,2.738,516,4.241,549,3.253,609,3.425,654,4.482,756,3.462,858,4.316,883,5.805,927,4.905,993,4.905,1098,4.905,1250,3.867,1370,5.805,1372,5.805,1525,5.805,1529,6.513,1530,6.513,1531,6.108]],["t/1122",[4,0.185,600,3.339,1250,5.18,1435,6.75,1456,6.952]],["t/1125",[4,0.207,17,2.345,24,2.583,41,1.761,78,1.439,94,1.498,109,3.231,289,4.185,290,4.695,326,2.14,355,1.671,420,1.693,425,4.742,482,2.869,483,2.614,486,6.25,506,2.912,520,2.583,521,2.216,527,2.417,572,3.111,576,3.33,577,6.315,583,2.121,588,6.655,609,4.14,627,2.827,666,2.679,676,3.82,716,2.992,718,3.499,720,2.714,758,3.33,789,4.437,809,4.462,810,4.462,814,3.006,875,5.507,924,3.633,925,3.057,971,4.884,985,3.449,988,4.185,1015,4.185,1055,3.741,1100,2.827,1248,4.947,1321,3.741,1401,4.695,1422,4.695,1472,5.544,1473,4.185,1504,4.185,1532,6.002,1533,5.138,1534,5.138,1535,5.138]],["t/1127",[4,0.233,94,2.418,425,5.578,486,5.93,520,4.17,758,4.58,860,6.252,875,4.853,1040,4.702,1248,5.569,1536,8.296]],["t/1129",[4,0.247]],["t/1131",[4,0.244,41,2.582,79,3.051,150,4.136,179,3.859,234,4.136,326,2.207,355,1.723,420,2.482,422,2.395,425,4.146,479,3.647,486,4.408,497,2.894,563,3.051,686,6.136,687,3.987,716,3.059,718,3.559,758,3.404,856,2.763,875,5.585,971,3.004,1285,3.747,1303,5.88,1532,4.316,1537,5.299,1538,8.723,1539,5.299]],["t/1134",[4,0.248]],["t/1136",[4,0.247,17,2.58,355,1.839,403,2.58,404,3.796,676,2.507,789,2.912,806,2.507,809,4.775,810,4.775,871,3.424,885,3.112,1046,3.892,1504,6.423,1509,4.414,1540,5.655]],["t/1138",[4,0.248,419,2.735,609,3.593,770,4.449]],["t/1140",[4,0.167,366,6.752,413,4.83,554,7.412,600,3.025,609,4.156,716,3.512,750,5.807,911,5.44,1541,8.65,1542,8.65,1543,8.65,1544,8.65,1545,8.65,1546,7.904,1547,8.65]],["t/1142",[4,0.222,17,3.553,231,5.358,326,4.058,409,2.395,439,5.669,512,3.741,544,6.341,586,5.227,588,5.504,720,4.112,737,5.857,742,5.669,809,4.714,810,4.714,1128,5.358,1250,4.224,1336,6.671,1342,6.077,1432,7.114,1532,7.937,1548,7.785]],["t/1145",[4,0.182,17,3.371,41,2.532,62,4.141,327,3.629,403,3.371,410,3.902,426,5.084,483,3.758,530,4.739,542,5.223,549,3.371,563,4.253,576,3.338,605,5.379,709,4.474,788,6.33,801,5.084,826,5.084,923,5.766,1015,6.017,1037,4.846,1081,4.742,1100,5.188,1399,4.646,1549,7.388,1550,7.679,1551,6.75,1552,6.75,1553,6.75,1554,6.75]],["t/1147",[4,0.232,41,2.181,81,4.969,84,3.407,90,2.822,94,1.856,276,5.455,306,3.926,326,3.561,327,4.744,409,1.564,410,5.454,411,2.745,426,4.381,523,3.724,527,2.995,530,3.2,542,4.501,549,2.905,563,3.665,572,3.855,578,3.127,666,5.384,709,5.848,801,4.381,860,3.926,862,4.635,1253,4.635,1399,4.003,1461,5.455,1550,8.409,1555,6.366,1556,5.455]],["t/1150",[4,0.242,41,2.866,327,4.109,410,4.418,556,5.065,578,4.109,1550,6.812,1556,7.167]],["t/1152",[4,0.243,41,2.797,94,2.379,221,6.371,411,3.52,426,5.617,666,4.256,1399,5.133]],["t/1154",[3,2.55,4,0.243,9,1.111,17,2.978,24,2.189,41,1.492,49,1.707,77,1.707,84,2.796,90,0.828,94,2.049,105,2.8,125,1.707,173,4.476,221,2.55,306,3.661,315,0.907,326,1.813,327,0.918,372,2.431,377,1.36,403,0.852,409,1.07,410,2.759,411,0.806,417,0.828,420,0.615,423,3.079,425,2.396,426,3.595,429,0.765,456,2.795,478,1.059,487,2.249,496,1.521,497,1.255,510,1.152,520,0.939,523,1.093,525,0.623,527,2.048,528,1.131,530,2.189,532,1.587,533,3.427,539,1.6,540,1.662,542,3.693,543,1.6,549,3.573,563,2.507,564,0.958,572,1.978,576,0.844,578,0.918,588,1.321,632,1.013,664,2.31,665,1.6,666,2.271,673,3.079,720,3.448,740,2.193,770,1.111,803,1.225,806,1.448,825,2.457,860,1.152,885,1.028,927,2.249,943,1.6,982,4.085,999,2.795,1011,2.458,1014,3.595,1056,1.458,1096,1.152,1100,4.104,1136,1.36,1250,1.773,1252,2.379,1267,1.707,1303,1.458,1356,1.707,1399,4.42,1427,2.985,1444,1.521,1550,3.547,1551,1.707,1556,2.8,1557,6.709,1558,1.707,1559,8.925,1560,1.868,1561,4.355,1562,6.527,1563,1.868,1564,1.868,1565,1.868,1566,3.267,1567,1.868,1568,1.868,1569,3.267,1570,1.868,1571,1.868,1572,3.267,1573,5.935,1574,1.868,1575,1.868,1576,1.868,1577,4.355,1578,1.868,1579,1.868,1580,1.707,1581,1.707]],["t/1157",[4,0.244,221,6.879,326,2.773,355,2.166,409,1.636,420,2.194,423,2.749,542,4.708,549,4.507,578,3.271,822,3.517,982,4.583,999,4.274,1100,3.664,1417,8.052,1582,8.812,1583,6.659,1584,6.659,1585,6.659]],["t/1159",[4,0.188,24,3.884,41,2.647,62,3.393,78,2.164,83,5.068,109,4.859,210,6.03,252,6.62,338,4.959,355,2.513,409,1.898,426,5.317,530,3.884,572,4.678,576,3.491,590,5.317,605,5.626,625,7.297,635,5.812,704,5.317,826,5.317,1296,6.292,1321,5.626,1399,4.859,1586,7.059,1587,7.726,1588,7.726]],["t/1161",[41,2.939,94,2.5,314,5.29,326,3.571,338,5.505,355,2.789,512,4.121,549,3.914,576,3.876,791,5.194,847,5.758,897,4.937,1100,4.72,1257,6.453,1399,5.394,1589,8.577,1590,8.577]],["t/1163",[4,0.169,41,2.99,84,4.67,338,5.6,355,2.837,409,2.144,423,3.602,497,3.351,527,4.104,826,6.005,1100,4.801,1250,4.734,1257,6.564,1491,7.476,1591,8.724]],["t/1165",[4,0.223,17,2.431,24,2.678,62,2.34,84,2.852,90,2.362,92,4.565,94,1.553,105,4.565,173,4.565,205,3.226,231,3.666,234,4.158,243,4.353,306,3.286,338,3.42,365,4.868,372,2.974,377,3.879,403,2.431,409,1.309,411,2.297,432,4.008,480,3.232,483,2.71,497,2.905,500,3.879,505,4.499,511,3.879,528,3.226,530,4.419,542,5.346,547,4.565,572,3.226,595,2.647,596,2.778,625,4.008,632,2.891,673,3.767,720,2.814,742,3.879,822,2.814,826,3.666,870,4.565,913,4.339,921,2.71,971,3.019,982,5.204,1011,4.008,1014,3.666,1100,2.932,1119,5.204,1399,4.756,1496,4.565,1531,4.565,1553,4.868,1557,4.565,1558,4.868,1592,5.689,1593,5.327,1594,7.16,1595,8.791,1596,5.327,1597,5.327]],["t/1167",[4,0.128,17,4.004,24,3.325,36,5.164,41,3.007,62,3.854,63,3.936,94,1.928,109,5.518,210,5.164,252,5.669,327,3.25,338,4.246,355,2.151,403,3.019,406,4.441,409,1.625,426,4.553,436,3.25,500,4.817,530,3.325,541,2.879,549,3.019,590,4.553,597,2.561,625,4.977,742,4.817,826,7.216,838,4.553,841,3.808,847,4.441,897,3.808,1214,5.164,1321,4.817,1399,4.16,1456,4.817,1554,6.044,1580,6.044,1594,7.146,1598,6.615,1599,6.615,1600,6.615,1601,6.615,1602,6.615]],["t/1170",[4,0.228,62,2.925,205,4.032,420,2.903,423,2.749,468,5.423,530,4.43,531,3.962,542,6.231,550,3.564,562,4.032,572,4.032,648,4.655,675,4.708,697,6.879,733,5.197,801,4.583,822,3.517,993,4.583,1142,5.423,1389,5.197,1465,6.084,1527,5.423,1546,6.084,1592,6.63,1594,5.423,1603,6.659,1604,6.084,1605,6.659,1606,6.659,1607,6.659,1608,6.084,1609,6.084,1610,6.084,1611,6.659,1612,6.659,1613,6.659]],["t/1173",[4,0.248,393,4.271,423,1.389,525,1.784,558,1.8,560,2.258,576,1.52,578,1.652,803,3.507,835,3.232,836,2.159,837,2.625,852,2.115,856,2.788,862,2.449,864,2.378,894,2.206,991,2.625,994,4.022,1158,2.625,1317,2.449,1592,4.022,1614,3.073,1615,5.701]],["t/1175",[4,0.244,94,2.399,436,4.042,803,5.397]],["t/1178",[4,0.248,393,4.416,423,1.461,525,1.858,560,2.376,576,1.599,578,1.739,660,2.883,794,2.376,803,3.651,835,1.719,836,2.272,856,2.903,864,2.502,894,2.322,994,4.188,1158,2.763,1592,4.188,1614,3.234,1615,3.033]],["t/1180",[4,0.247,94,1.81,409,1.526,436,4.131,619,3.05,794,4.169,1010,5.321,1398,5.321,1399,3.905,1616,6.21,1617,6.21,1618,4.847]],["t/1183",[4,0.247,724,3.812]],["t/1185",[4,0.247,619,3.013,719,3.329,724,4.963,1047,5.256]],["t/1187",[4,0.245,94,1.706,409,2.45,436,3.966,512,2.811,573,4.402,619,3.966,703,4.402,800,3.368,801,4.027,803,5.297,818,5.013,837,4.567,839,3.928,841,3.368,888,3.679,911,3.679,1066,4.402,1298,5.346,1532,4.765,1615,5.013,1618,6.303,1619,5.346,1620,5.851,1621,5.346,1622,5.851]],["t/1189",[4,0.243,71,4.002,83,3.223,326,2.046,409,2.265,413,2.743,423,3.469,436,3.505,463,2.924,487,3.382,530,2.47,549,3.256,550,2.63,572,2.975,583,2.029,609,2.361,648,2.596,657,4.21,750,4.79,822,2.596,852,3.09,856,2.562,873,3.382,894,3.223,897,2.829,911,3.09,920,2.924,985,3.299,992,3.474,994,3.697,1100,2.704,1195,3.474,1216,4.49,1393,4.21,1406,4.21,1458,4.49,1482,8.425,1592,6.321,1609,7.677,1610,4.49,1621,4.49,1623,4.49,1624,4.914,1625,4.914,1626,4.914,1627,4.914,1628,4.914]],["t/1191",[4,0.237,94,1.746,199,5.509,223,5.472,243,3.448,420,1.973,423,2.473,468,4.878,518,4.021,525,3.36,531,4.882,540,3.047,550,4.392,551,4.878,564,1.756,570,3.627,572,3.627,586,4.021,625,6.173,671,4.675,675,4.234,713,4.675,913,4.878,977,4.675,1085,4.506,1147,7.031,1149,4.361,1205,5.132,1328,4.675,1389,4.675,1399,3.766,1474,5.472,1527,4.878,1557,5.132,1594,4.878,1604,5.472,1608,5.472,1629,5.989,1630,5.989,1631,5.989,1632,5.989,1633,5.472]],["t/1193",[4,0.228,23,4.089,24,2.907,78,2.243,86,3.096,409,1.968,420,1.905,423,3.307,436,2.841,441,4.351,458,4.351,514,4.351,525,3.067,540,2.942,550,3.096,561,4.089,584,2.75,592,4.212,595,2.874,596,3.016,600,2.023,632,3.138,675,4.089,713,4.515,740,3.883,821,4.212,856,3.016,858,3.502,920,4.766,921,2.942,1055,4.212,1128,3.981,1136,4.212,1142,4.711,1195,4.089,1250,3.138,1323,5.285,1339,4.711,1371,4.711,1398,6.864,1399,3.637,1456,4.212,1461,4.956,1480,5.285,1552,5.285,1592,4.351,1618,4.515,1619,7.319,1634,5.784,1635,5.285,1636,5.784,1637,5.784,1638,5.784,1639,5.784,1640,5.784]],["t/1195",[4,0.167,442,7.412,479,7.155,530,5.226,1641,8.65,1642,9.499,1643,8.908,1644,9.499,1645,7.904,1646,7.412,1647,8.65]],["t/1197",[4,0.24,376,5.554,409,1.489,410,4.975,417,2.687,419,3.161,420,1.997,530,5.725,598,2.944,653,3.384,691,4.285,770,4.922,809,5.009,810,5.009,825,4.43,927,4.171,972,4.731,1107,4.171,1219,4.56,1281,5.538,1405,4.285,1646,8.07,1648,6.061,1649,6.061,1650,6.061,1651,5.538,1652,6.061]],["t/1200",[4,0.247,355,1.483,393,2.927,420,2.225,442,3.907,479,3.138,527,2.145,530,5,576,2.06,598,2.215,628,2.625,648,2.408,756,2.215,992,4.776,1078,5.205,1107,4.649,1303,5.272,1642,6.172,1643,5.788,1644,4.166,1645,4.166,1653,4.56,1654,4.166,1655,4.166]],["t/1201",[4,0.247,90,1.542,306,2.146,393,2.233,420,1.146,479,2.394,527,1.636,530,5.329,576,1.572,609,1.671,628,2.003,648,1.837,972,2.715,992,2.459,1078,5.474,1107,4.682,1193,2.981,1367,2.981,1371,2.833,1410,3.178,1643,2.981,1646,4.705,1651,3.178,1654,3.178,1655,3.178]],["t/1203",[4,0.247,98,1.921,409,0.87,411,1.526,417,1.569,523,2.071,530,5.429,549,1.615,576,1.599,581,2.071,609,1.701,632,3.02,837,2.763,856,1.846,857,2.272,873,2.436,896,2.763,963,4.864,1056,2.763,1076,3.063,1078,5.511,1107,6.197,1288,3.831,1315,2.883,1316,2.883,1353,3.234,1367,3.033,1526,4.77,1656,3.539,1657,3.539]],["t/1206",[4,0.23,17,3.553,41,2.668,94,2.27,109,4.896,326,3.242,355,2.532,403,3.553,411,3.358,412,6.077,413,5.441,514,5.857,648,4.112,821,5.669,852,4.896,1100,5.363,1321,5.669,1658,7.114,1659,7.785,1660,6.671,1661,7.785]],["t/1208",[4,0.239,5,6.44,107,3.35,109,4.973,158,5.442,276,6.775,311,7.225,409,1.943,413,4.415,516,4.705,1098,5.442,1370,6.44,1581,7.225,1658,7.225,1662,7.907,1663,7.907]],["t/1210",[403,3.608,413,6.439,420,2.605,527,3.72,549,3.608,571,4.481,656,5.757,822,4.177,839,5.308,893,8.014,911,4.973,1098,5.442,1100,4.351,1196,6.172,1399,4.973,1664,7.907,1665,7.907,1666,9.84,1667,7.907,1668,8.991]],["t/1213",[4,0.226]],["t/1215",[4,0.183,436,4.646,1058,8.104,1214,7.382,1669,9.458,1670,9.458]],["t/1218",[4,0.231,90,4.259,122,5.237,376,5.109,377,5.541,410,4.02,411,4.143,413,4.249,470,6.198,530,4.829,578,4.719,709,4.608,770,4.528,856,3.968,957,5.109,1011,5.725,1100,4.188,1279,6.953,1285,5.38,1671,5.541,1672,6.953]],["t/1220",[4,0.245,716,4.231,718,3.022,756,3.615,770,5.636,1673,7.442,1674,7.442,1675,7.442]],["t/1222",[4,0.242,355,3.364,578,4.213,709,5.194,756,4.166]],["t/1224",[4,0.241,41,2.102,158,5.74,221,6.51,404,4.118,410,3.24,411,4.386,486,3.589,521,2.645,579,3.784,598,2.98,609,2.948,623,4.615,709,3.715,856,3.199,869,4.788,875,3.589,992,4.337,996,4.337,1076,5.596,1096,3.784,1219,4.615,1315,4.996,1316,4.996,1335,5.256,1389,4.788,1660,5.256,1671,6.073,1676,7.621,1677,6.134]],["t/1226",[4,0.242,338,4.39,410,3.612,414,7.685,420,2.253,423,2.824,598,3.322,600,2.392,709,4.141,720,3.612,830,4.069,856,5.219,869,5.338,1076,4.935,1623,6.249,1671,8.242]],["t/1228",[4,0.243,404,5.187,406,5.187,486,4.52,598,3.753,718,3.137,1219,7.297,1369,6.292,1678,7.726,1679,7.726,1680,7.726,1681,7.726]],["t/1230",[4,0.247,41,0.945,90,1.223,338,1.771,355,0.897,409,0.678,411,1.19,413,1.54,417,1.223,455,1.311,518,3.056,572,1.67,597,1.068,598,2.824,718,1.12,838,1.898,860,2.808,873,1.898,875,3.401,890,2.364,1096,2.808,1100,1.518,1136,2.009,1219,2.075,1369,2.246,1373,2.52,1389,3.554,1451,2.52,1509,5.266,1517,2.52,1538,5.311,1633,2.52,1676,2.52,1682,9.732,1683,2.758,1684,2.758,1685,2.758,1686,2.758,1687,4.16,1688,2.758,1689,2.758,1690,2.758,1691,2.758,1692,2.758,1693,2.758]],["t/1233",[4,0.244,90,2.995,94,1.329,326,2.813,355,2.197,370,3.138,372,2.546,409,1.66,410,3.568,411,2.913,413,5.303,417,2.021,420,1.502,527,2.145,530,5.314,556,2.761,563,2.625,598,2.215,648,3.568,653,2.546,756,2.215,770,2.713,801,3.138,856,3.522,882,5.082,963,3.224,992,3.224,1078,3.952,1096,2.812,1100,3.717,1107,5.537,1253,3.32,1303,3.559,1375,5.501,1393,5.788,1586,4.166,1635,4.166,1671,4.919,1672,4.166,1694,4.56,1695,4.56]],["t/1235",[4,0.243,94,2.235,338,4.922,409,2.372,410,5.099,417,3.399,536,7.029,556,4.643,598,3.725,1096,4.729,1100,4.219]],["t/1237",[4,0.248,190,2.971,597,1.342,719,2.971,806,1.537,1350,4.692,1618,5.298,1671,4.942,1696,6.787,1697,6.202,1698,5.476]],["t/1239",[4,0.181,94,2.729,326,3.898,366,6.405,411,3.539,455,2.847,486,4.801,574,4.881,579,5.061,588,4.234,589,4.878,628,3.448,721,5.132,722,5.132,869,4.675,875,3.504,999,3.844,1081,3.844,1100,5.994,1158,4.675,1198,8.871,1250,3.25,1384,5.472,1618,6.405,1660,5.132,1671,7.68,1697,5.472,1699,8.205,1700,5.989,1701,9.36,1702,5.989,1703,5.989,1704,5.989,1705,8.205,1706,5.989,1707,5.989,1708,5.989]],["t/1241",[4,0.236,78,2.464,409,2.162,410,4.649,411,3.795,413,4.914,1287,8.041,1709,8.8]],["t/1243",[4,0.237,409,2.107,410,4.53,413,4.789,429,3.512,549,3.914,893,8.424,1100,4.72,1195,6.064]],["t/1245",[4,0.248,556,3.463]],["t/1248",[4,0.238,355,2.862,412,6.869,413,4.914,600,3.078,839,5.908,1710,8.8]],["t/1250",[4,0.242,94,2.438,405,7.642,423,3.453,1100,4.603,1491,7.167,1711,8.364,1712,8.364]],["t/1252",[4,0.246,326,3.686,527,4.164,589,7.209,746,3.988,1307,5.744,1713,6.703,1714,6.703]],["t/1255",[4,0.232]],["t/1257",[4,0.188,409,2.391,1342,7.595]],["t/1259",[413,5.433,597,3.767,1668,8.891]],["t/1262",[4,0.243,78,2.286,420,2.689,530,4.103,549,3.725,609,3.922,648,4.311]],["t/1264",[4,0.218,150,6.929,327,4.361,416,4.092,1023,6.464,1044,5.96,1317,6.464,1671,6.464,1687,9.648,1715,8.877]],["t/1266",[4,0.243,1435,6.116,1456,6.299]]],"invertedIndex":[["",{"_index":4,"t":{"7":{"position":[[0,4],[5,1],[7,2],[17,1],[22,9],[32,1],[34,3],[38,3],[42,4],[47,5]]},"9":{"position":[[0,4],[5,1],[7,2],[17,1],[22,9],[32,1],[34,3],[38,3],[42,4],[47,5]]},"11":{"position":[[0,4],[5,1],[7,2],[17,1],[22,9],[32,1],[34,3],[38,3],[42,4],[47,5]]},"27":{"position":[[10,4],[20,7]]},"29":{"position":[[5,4],[11,1]]},"31":{"position":[[2,7],[12,9],[26,2],[32,4],[39,9],[53,2],[59,7],[67,3],[74,2],[80,4],[86,1],[88,8],[97,2],[101,2],[104,2],[107,2],[110,2],[113,8],[122,2],[126,3]]},"34":{"position":[[17,4],[26,2]]},"36":{"position":[[2,5],[8,4],[13,2],[16,4]]},"38":{"position":[[2,5],[8,2],[11,2],[14,4],[19,2],[22,3],[26,6],[37,4],[42,2],[45,3],[49,6]]},"41":{"position":[[16,6],[25,4]]},"43":{"position":[[2,8],[11,7]]},"45":{"position":[[3,2],[14,2],[26,7],[36,8],[45,2],[50,2],[57,8],[66,2],[70,2],[73,2],[76,2],[79,2],[82,2],[85,2]]},"50":{"position":[[2,8],[11,7],[19,11],[31,4]]},"52":{"position":[[0,5],[17,8]]},"54":{"position":[[0,4],[8,5],[15,5],[22,6],[34,5],[40,5],[46,8],[57,4],[64,3],[70,4],[77,6],[91,5],[98,8],[108,5],[117,3],[121,3],[125,1],[127,3],[131,3],[135,1],[137,3],[141,3],[145,1],[147,7],[160,8],[169,3],[175,1],[177,5],[185,1],[189,5],[197,3],[203,4],[210,7],[225,5],[231,3],[235,1],[237,5],[243,3],[247,1],[249,5],[255,3],[259,1]]},"59":{"position":[[2,9],[12,6],[20,5]]},"61":{"position":[[2,9],[13,1],[15,3],[19,3],[28,3],[32,1],[34,3],[38,1]]},"66":{"position":[[2,8],[11,5]]},"68":{"position":[[2,8],[11,3],[15,3],[19,1],[21,3],[25,1],[27,1],[29,3],[33,1],[36,4],[41,4],[47,4],[52,5],[58,1],[60,5],[79,8],[91,3],[95,3],[99,1],[109,8],[123,6],[132,8],[150,16],[150,4],[155,7],[163,3],[172,8],[183,8],[194,3],[200,4],[206,8],[218,8],[235,3],[239,1],[242,4],[248,4],[253,7],[261,9],[274,16],[274,4],[279,7],[287,3],[299,3]]},"73":{"position":[[2,9],[12,4]]},"75":{"position":[[0,5],[9,3],[13,3],[17,3],[21,5],[32,9],[44,5],[52,3],[58,4],[65,5],[78,3]]},"80":{"position":[[2,5],[8,4]]},"82":{"position":[[0,4],[8,3],[12,3],[16,3],[20,8],[34,5],[42,4],[49,3],[55,4],[63,8],[80,3],[84,3],[88,3]]},"85":{"position":[[9,1]]},"87":{"position":[[2,4],[7,1],[9,4]]},"89":{"position":[[0,5],[9,3],[13,3],[17,3],[21,11],[21,6],[28,4],[38,4],[43,1],[47,5],[55,3],[61,4],[68,11],[68,6],[75,4],[87,3]]},"92":{"position":[[2,8],[36,6],[76,8]]},"97":{"position":[[0,3],[5,5],[12,4],[18,7],[26,5],[33,3],[38,4],[44,4],[50,7],[58,4],[67,4],[72,3],[80,7],[88,4],[97,3],[116,3],[121,4],[134,3],[139,5],[151,4]]},"99":{"position":[[0,3],[5,5],[11,4],[18,4],[24,7],[36,3],[41,4],[59,4],[64,3],[72,7],[87,3],[92,5],[103,5],[113,3],[118,4],[130,3],[135,5],[144,3],[152,4],[177,2],[182,3]]},"102":{"position":[[0,3],[6,5],[13,4],[19,7],[27,5],[34,3],[40,4],[46,4],[52,7],[60,4],[69,4],[74,3],[82,7],[90,5],[96,7],[104,4],[113,3],[137,4],[142,3],[154,3]]},"104":{"position":[[0,4],[7,4],[12,4],[17,1],[19,4],[25,11],[37,7],[49,4],[56,11],[68,4],[73,1],[75,4],[81,4],[86,7],[101,4],[106,4],[115,11],[127,7],[138,4],[143,7],[158,4],[201,4],[206,4],[232,8],[250,4]]},"106":{"position":[[57,2],[60,3],[71,8]]},"108":{"position":[[72,8],[94,7],[102,8],[111,6],[167,8]]},"110":{"position":[[0,11],[62,3]]},"113":{"position":[[35,3]]},"115":{"position":[[0,6],[32,8],[52,10],[63,14],[92,3],[100,2],[105,7],[115,4]]},"118":{"position":[[0,7],[8,6],[15,6],[25,7],[35,6],[44,3],[50,4],[61,7],[94,6],[108,4],[113,7],[121,9],[133,5],[141,5],[147,4],[154,5],[160,4],[167,6],[179,6],[192,4],[197,6],[204,6],[224,8],[233,3],[237,6],[244,7],[258,8],[273,5],[279,4],[284,7],[302,7],[310,4],[315,5],[326,5],[348,4],[353,5],[359,6],[368,4],[373,6],[380,4],[385,6],[392,7],[400,6],[412,9],[430,4],[435,9],[448,6],[457,6],[465,6],[473,8],[483,4],[488,3],[492,6],[499,7],[509,7],[518,4],[523,4],[528,5],[535,3],[548,15],[569,4],[575,1],[578,6],[586,15],[602,1],[604,7],[613,5],[621,1],[623,5],[629,4],[636,5],[642,1],[644,5],[650,6],[659,4],[667,1],[669,4],[676,2],[679,1],[682,2],[688,1],[690,8],[699,4],[706,2],[711,6],[718,6],[725,3],[730,7],[738,7],[746,10],[761,1],[763,8],[772,4],[780,1],[782,6],[789,3],[798,8],[814,4],[820,1],[823,6],[831,8],[842,5],[850,1],[852,5],[858,5],[866,5],[872,1],[874,5],[880,7],[890,3],[894,1],[897,1],[902,5],[908,1],[910,8],[921,2],[924,3],[931,1],[933,5],[942,3],[949,3],[955,6],[962,3],[970,6],[977,3],[986,7],[1001,4],[1007,1],[1010,6],[1018,7],[1028,5],[1036,1],[1038,5],[1044,5],[1052,5],[1058,1],[1060,5],[1066,7],[1076,3],[1080,3],[1084,5],[1090,3],[1094,1],[1097,1],[1102,5],[1108,1],[1110,8],[1121,2],[1124,1],[1129,1],[1131,4],[1139,1],[1144,3],[1150,3],[1156,1],[1162,6],[1169,3],[1178,9],[1196,3],[1201,4],[1207,1],[1210,6],[1218,9],[1228,3],[1232,5],[1241,1],[1243,7],[1254,3],[1263,9],[1287,4],[1293,1],[1296,6],[1304,9],[1314,3],[1318,7],[1326,7],[1337,3],[1343,6],[1352,4],[1359,3],[1363,4],[1371,6],[1378,4],[1383,3],[1392,1],[1394,7],[1403,3],[1407,6],[1416,6],[1424,5],[1430,4],[1436,1],[1440,1],[1445,1],[1447,1],[1451,3],[1455,4],[1461,3],[1465,4],[1471,3],[1475,7]]},"120":{"position":[[0,7],[8,7],[16,6],[26,3],[32,11],[44,6],[57,10],[73,4],[78,10],[89,6],[98,4],[103,6],[110,6],[118,6],[125,6],[132,5],[138,4],[143,6],[150,6],[157,4],[162,6],[173,4],[178,13],[192,4],[197,6],[205,6],[213,6],[220,6],[229,10],[242,6],[250,10],[262,4],[268,4],[274,6],[282,6],[290,5],[297,4],[302,4],[307,6],[315,3],[321,6],[329,4],[334,4],[339,6],[354,4],[360,1],[363,10],[375,5],[383,5],[391,3],[395,6],[405,1],[408,8],[420,1],[424,1],[426,4],[432,2],[435,1],[437,3],[443,6],[450,3],[456,4],[462,1],[465,10],[477,4],[484,5],[492,3],[496,6],[506,1],[509,8],[521,1],[525,1],[527,4],[533,5],[539,1],[541,6],[549,6],[556,3],[562,4],[568,1],[571,10],[583,4],[590,6],[599,6],[606,1],[608,4],[615,4],[621,1],[624,10],[636,3],[644,3],[650,6],[659,4],[666,1],[668,6],[676,6],[683,4],[688,3],[697,1],[699,5],[706,3],[710,6],[720,1],[723,3],[729,1],[731,1],[735,1],[737,4],[743,3],[761,1],[763,6],[770,9],[780,6],[787,5],[794,4],[800,1],[802,4],[808,4],[815,3],[821,7],[830,3],[844,4],[850,1],[853,10],[865,3],[869,3],[873,6],[883,1],[885,5],[894,3]]},"122":{"position":[[0,7],[8,4],[13,6],[23,7],[33,11],[45,6],[54,11],[66,7],[76,4],[84,4],[89,4],[101,1],[110,6],[120,6],[127,9],[142,1],[150,6],[160,7],[168,13],[183,6],[192,6],[200,2],[203,3],[210,6],[217,15],[233,6],[242,3],[249,3],[255,5],[261,3],[271,1],[281,2],[284,3],[291,6],[298,8],[310,3],[317,3],[323,5],[329,3],[339,1],[349,3],[354,6],[364,7],[372,10],[383,7],[391,10],[405,5],[411,6],[420,2],[423,6],[430,9],[440,3],[448,1],[458,6],[465,3],[470,5],[477,11],[492,4],[497,5],[503,1],[507,4],[512,6],[523,1],[533,2],[536,3],[543,6],[550,7],[561,3],[568,3],[574,5],[580,3]]},"124":{"position":[[1,6],[9,8],[22,6],[30,3],[35,5],[42,11],[56,6],[64,5],[70,4],[75,6],[83,3],[89,5],[96,11],[110,6],[118,8]]},"126":{"position":[[3,4],[11,7],[56,6],[63,4],[85,5],[93,3],[97,3]]},"128":{"position":[[7,6],[18,7],[44,7],[59,9],[88,7],[107,4],[112,4],[117,9]]},"131":{"position":[[0,5],[6,6],[35,4],[40,8],[58,3],[67,3],[86,5],[95,2]]},"133":{"position":[[21,8],[50,8],[115,1],[129,1]]},"135":{"position":[[3,5],[9,6],[16,5],[22,6]]},"137":{"position":[[9,5],[15,6],[26,4],[31,11],[43,6],[52,6],[59,4],[64,6],[75,4],[80,14],[95,4],[100,4],[105,8],[115,8],[124,3],[130,11],[144,2],[151,11],[164,6],[172,4],[177,4],[182,6],[192,8],[215,3],[219,1],[224,1],[227,1],[231,8],[241,1],[247,2],[250,6],[260,6],[283,2],[286,4],[295,6],[305,4],[310,9],[320,4],[326,5],[332,6],[339,4],[346,3],[350,5],[356,6],[363,1],[367,6],[376,4],[381,2],[384,6],[394,6],[406,7],[436,6],[443,2],[448,4],[454,2],[458,11],[471,5],[479,4],[486,6],[495,4],[502,2],[505,6],[513,6],[520,4],[525,7],[534,6],[541,5]]},"139":{"position":[[9,3],[20,1],[26,6],[36,14],[51,3],[55,4],[60,11],[73,1],[76,2],[80,6],[87,5],[97,4],[102,5],[108,1],[112,4],[117,5],[123,8],[134,4],[139,21],[162,6]]},"141":{"position":[[51,3],[92,6]]},"143":{"position":[[10,5],[16,6],[62,9]]},"147":{"position":[[13,6],[59,15],[130,4],[137,3],[143,3],[151,6],[160,6],[169,6]]},"151":{"position":[[12,4],[17,11],[29,6],[38,6],[45,4],[50,6],[61,4],[66,14],[81,4],[86,4],[91,8],[101,8],[110,3],[116,11],[130,2],[137,11],[150,6],[158,4],[163,4],[168,6],[178,8],[200,3],[204,1],[209,1],[212,1],[216,8],[226,1],[232,2],[235,6],[245,6],[268,2],[271,4],[280,6],[290,4],[295,9],[305,4],[311,5],[317,6],[324,4],[331,3],[335,5],[341,6],[348,1],[352,6],[361,4],[366,2],[369,6],[379,6],[391,7],[408,6],[415,2],[420,4],[426,2],[430,11],[443,7],[453,4],[460,6],[469,4],[476,2],[479,6],[487,6],[494,4],[499,7],[508,6],[515,5],[538,4],[543,8],[552,3],[556,5],[564,4],[569,8],[580,4],[585,6],[592,3],[598,4],[604,1],[606,8],[616,6],[625,6],[634,6],[641,1],[645,4],[650,4],[656,6],[664,4],[670,4],[675,6],[683,6],[691,6],[699,4],[704,3],[709,6],[717,3],[722,7],[731,6],[739,7],[752,4],[757,15],[773,6],[782,7],[790,3],[794,8],[804,11],[816,5],[824,8],[841,4],[848,6],[857,3],[863,4],[868,18],[890,15],[908,6],[916,15],[933,7],[942,3],[946,8],[956,11],[969,4],[975,14],[990,2],[993,4],[998,11],[1011,2],[1016,6],[1024,14],[1039,3],[1043,4],[1048,11],[1061,1],[1065,3],[1070,14],[1085,3],[1089,4],[1094,11],[1107,1],[1114,5],[1123,8],[1132,4],[1138,6],[1146,3],[1159,8],[1180,4],[1186,2],[1190,15],[1207,8],[1218,4],[1225,3],[1229,1],[1232,1],[1237,5],[1243,2],[1246,5],[1254,2],[1257,2],[1260,7],[1268,1],[1271,7],[1283,6],[1290,4],[1299,6],[1306,5],[1320,20],[1347,4],[1353,2],[1357,15],[1374,20],[1395,1],[1397,8],[1407,4],[1414,6],[1421,2],[1424,7],[1432,1],[1435,7],[1452,7],[1463,18],[1492,2],[1496,7],[1504,20],[1525,4],[1533,3],[1537,7],[1546,4],[1551,8],[1560,7],[1568,3],[1572,9],[1600,2],[1604,7],[1612,20],[1633,3],[1640,3],[1644,7],[1653,3],[1657,8],[1666,7],[1674,9]]},"153":{"position":[[0,11],[14,1]]},"158":{"position":[[14,6],[21,6],[28,2],[31,4],[36,7],[44,9],[56,5],[64,5],[70,4],[77,5],[83,4],[90,6],[109,6],[116,3],[120,6],[128,6],[149,6],[156,6],[163,2],[169,5],[191,4],[196,5],[202,6],[211,2],[214,6],[221,4],[226,6],[233,4],[238,6],[245,7],[253,6],[275,6],[282,6],[289,2],[295,11],[321,4],[327,1],[330,6],[338,11],[350,3],[354,5],[362,3],[366,6],[376,1],[378,5],[384,5],[392,5],[398,1],[400,5],[406,7],[416,2],[419,3],[424,2],[430,1],[432,8],[441,3],[445,2],[450,2],[455,6],[462,3],[466,6],[473,3],[477,7],[488,6],[496,7],[504,3],[508,5]]},"160":{"position":[[2,6],[16,7],[24,3],[28,2],[34,7],[44,6],[55,4],[61,1],[64,10],[76,6],[83,3],[87,6],[95,6],[104,3],[108,6],[118,1],[121,3],[125,6],[132,6],[139,5],[147,1],[149,1],[153,1],[155,4],[161,3],[166,6],[173,3],[177,7],[188,1],[191,3],[195,6],[204,1],[206,1],[210,1],[212,4],[218,3]]},"162":{"position":[[0,6],[11,7],[22,4],[27,2],[33,1],[36,11],[58,11],[70,11],[82,6],[89,5],[96,4],[103,11],[117,2],[122,6],[131,4],[138,3],[144,7],[154,5],[161,3],[171,4],[176,5],[182,1],[186,4],[191,11]]},"164":{"position":[[1,6],[9,8],[22,6],[30,3],[35,5],[42,11],[56,6],[64,5],[70,4],[75,6],[83,3],[89,5],[96,11],[110,6],[118,3],[122,6],[129,6],[136,5],[143,5],[150,3],[156,6],[164,8]]},"166":{"position":[[0,11],[16,4],[21,9],[35,4],[40,9],[53,6],[60,5],[69,2]]},"170":{"position":[[7,6],[30,5],[36,9],[46,6],[53,2]]},"172":{"position":[[6,7],[26,7],[72,7],[100,7],[111,7]]},"174":{"position":[[9,7],[20,6],[27,6],[34,2],[40,5],[62,4],[67,5],[73,6],[82,2],[85,6],[92,4],[97,6],[104,4],[109,6],[116,7],[124,6],[141,7],[149,4],[154,6],[163,6],[182,6],[189,6],[196,2],[199,4],[205,1],[208,6],[216,6],[223,3],[227,7],[235,7],[246,3],[252,6],[261,4],[268,3],[272,4],[280,6],[287,4],[292,3],[301,1],[303,7],[312,3],[316,6],[325,6],[333,5],[339,4],[345,1],[349,1],[354,1],[356,1],[360,3],[364,4],[370,3],[374,4],[380,3],[384,7],[404,2],[407,3],[411,7],[422,3],[428,3],[432,7],[443,3],[447,7],[456,3],[462,1],[466,3],[470,7]]},"176":{"position":[[10,4],[16,1],[19,10],[31,3],[39,3],[45,6],[54,4],[61,1],[63,6],[71,6],[78,4],[83,3],[92,1],[94,5],[101,3],[105,6],[115,1],[118,3],[124,1],[126,1],[130,1],[132,4],[138,3],[156,7],[167,4],[172,4],[177,6],[185,1],[188,1],[190,6],[197,4],[202,6],[209,5],[216,4],[222,1],[224,4],[230,4],[237,3],[243,7],[252,3],[257,7],[266,7],[288,5],[299,7],[307,3],[311,6],[321,1],[324,3],[328,5],[334,4],[339,6],[348,1],[350,1],[354,1],[356,4],[364,5],[379,7],[387,3],[391,2],[397,7],[407,6],[418,4],[424,1],[427,10],[439,6],[446,3],[450,6],[458,6],[467,3],[471,6],[481,1],[484,3],[488,6],[495,6],[502,5],[510,1],[512,1],[516,1],[518,4],[524,3],[529,6],[536,3],[540,7],[551,1],[554,3],[558,6],[567,1],[569,1],[573,1],[575,4],[581,3]]},"178":{"position":[[0,10],[12,6],[20,6],[28,8],[41,6],[49,3],[54,5],[61,11],[75,6],[83,5],[89,4],[94,6],[102,3],[108,5],[115,11],[129,6],[137,3],[141,5],[147,4],[152,6],[160,3],[165,5],[172,11],[186,6],[194,4],[199,5],[205,2],[208,6],[216,5],[223,3],[229,6],[237,3],[241,6],[248,6],[255,5],[262,5],[269,3],[275,6],[283,8]]},"180":{"position":[[10,6],[17,5]]},"182":{"position":[[6,6],[13,5]]},"184":{"position":[[32,2],[37,9],[101,4],[106,8],[216,8],[230,4],[235,8],[244,9],[256,4],[261,7],[269,6],[277,5],[293,13],[314,4],[319,13],[333,6],[342,4],[348,1],[350,13],[365,4],[370,7],[378,6],[386,5],[394,3],[398,6],[415,1],[417,1],[421,7],[430,6],[437,3],[446,11],[465,4],[470,11],[482,6],[491,4],[497,1],[499,11],[512,4],[517,7],[525,6],[533,5],[541,3],[545,6],[562,1],[564,1],[568,7],[577,6],[584,3],[602,19],[627,4],[632,19],[652,6],[661,8],[670,8],[681,4],[686,22],[709,8],[718,8],[729,19],[751,6],[759,19],[779,8],[789,8],[801,4],[807,1],[810,19],[831,12],[844,7],[852,6],[875,7],[886,3],[890,7],[903,1],[911,7],[920,1],[924,1],[926,8],[935,4],[940,7],[957,4],[962,4],[985,13],[1002,13],[1018,7],[1029,22],[1052,13],[1067,7],[1075,12],[1089,5],[1117,11],[1132,11],[1146,7],[1156,22],[1179,11],[1192,7],[1200,12],[1214,5],[1241,11],[1259,4],[1264,11],[1276,6],[1285,4],[1291,1],[1293,11],[1306,9],[1316,7],[1324,6],[1332,5],[1340,3],[1344,6],[1359,1],[1361,1],[1365,7],[1374,6],[1381,3],[1400,14],[1421,4],[1426,14],[1441,6],[1450,11],[1462,11],[1476,4],[1482,1],[1485,14],[1501,12],[1514,7],[1522,6],[1545,7],[1556,3],[1560,7],[1573,1],[1581,7],[1590,1],[1594,1],[1596,11],[1608,9],[1618,7],[1635,4],[1640,4],[1649,9],[1662,14],[1677,11],[1690,11],[1705,9],[1715,12],[1729,5],[1754,14]]},"186":{"position":[[34,2],[39,9],[58,4],[63,17],[81,6],[91,15],[117,6],[124,6]]},"188":{"position":[[48,7],[59,2],[62,6],[70,18],[70,10],[81,7]]},"190":{"position":[[12,4],[17,8],[40,8],[49,7]]},"192":{"position":[[16,9],[28,2],[34,6],[60,7],[78,6],[86,3],[90,1],[95,1],[98,1],[102,7],[110,6],[120,1],[126,2],[129,10],[140,15]]},"194":{"position":[[32,18],[57,2],[65,4],[70,18],[89,6],[98,9],[108,6],[123,9],[133,4],[138,4]]},"196":{"position":[[12,3],[16,7],[34,7],[51,4],[57,1],[60,15],[77,11],[89,5],[97,6],[105,5],[113,3],[121,18],[145,8],[155,4],[160,4],[165,5],[172,1],[176,6],[185,4],[190,1],[192,13],[209,3],[214,6],[223,3],[227,8],[236,4],[243,4],[248,5],[254,1],[258,4],[263,6],[272,6],[279,6],[286,3],[291,6],[298,7]]},"198":{"position":[[0,7],[8,4],[13,6],[23,3],[29,4],[40,15],[56,7],[64,1],[66,3],[70,2],[73,5],[79,3],[83,9],[93,7],[101,7],[109,8],[118,4],[123,15],[139,6],[148,5],[156,6],[163,13],[177,4],[183,18],[202,12],[215,4],[220,6],[234,18],[253,10],[264,1],[266,7],[274,2],[277,6],[284,3],[288,5],[294,4],[299,18],[318,6],[327,8],[338,6],[345,8],[354,4],[359,5],[370,18],[389,7],[397,3],[401,6],[408,1],[410,3],[414,15],[430,4],[435,18],[457,15],[475,3],[483,15],[500,5],[509,6],[519,13],[534,4],[539,4],[545,18],[566,12],[580,4],[585,4],[590,6],[603,2],[606,3],[610,15],[628,6],[635,3],[644,11],[656,6],[663,7],[671,3],[675,5],[681,2],[684,7],[692,1],[694,7],[702,7],[710,3],[714,7],[722,4],[728,1],[731,15],[748,11],[760,8],[771,6],[779,5],[787,3],[795,18],[815,8],[825,8],[835,8],[845,4],[850,4],[855,5],[862,1],[869,8],[878,2],[881,5],[887,8],[898,1],[900,13],[917,3],[921,6],[930,3],[934,8],[948,8],[957,10],[968,5],[974,3],[978,10],[989,4],[995,1],[998,15],[1015,8],[1028,5],[1034,1],[1036,12],[1055,15],[1071,7],[1079,8],[1088,8],[1097,2],[1100,1],[1102,6],[1109,4],[1114,6],[1121,4],[1127,1],[1130,15],[1147,15],[1167,3],[1173,6],[1182,4],[1187,3],[1196,1],[1198,13],[1213,1],[1215,5],[1223,3],[1227,8],[1236,3],[1240,7],[1249,7],[1257,5],[1266,1],[1268,5],[1275,3],[1279,8],[1291,3],[1295,4],[1302,1],[1304,12],[1318,3],[1322,7],[1331,8],[1340,4],[1345,10],[1358,6],[1371,4],[1376,4],[1388,6],[1395,3],[1399,5],[1405,3],[1409,10],[1420,10],[1434,18],[1455,5],[1461,10],[1472,8],[1486,8],[1495,4],[1500,7],[1508,2],[1511,4],[1520,4],[1525,5],[1531,3],[1537,4],[1542,11],[1555,2],[1558,3],[1565,10],[1576,11],[1590,6],[1598,1],[1603,1],[1608,1],[1614,3],[1621,3],[1627,3],[1631,7],[1640,5],[1646,8],[1655,5],[1664,3],[1675,2],[1678,4],[1687,4],[1692,5],[1698,1],[1702,4],[1707,6],[1715,2],[1718,3],[1725,10],[1736,11],[1750,6],[1758,1],[1763,1],[1768,1],[1774,3],[1781,3],[1787,3],[1791,7],[1800,5],[1806,8],[1815,5],[1824,3],[1838,4],[1843,4],[1848,3],[1852,3],[1856,7],[1864,2],[1867,7],[1875,4],[1880,5],[1886,1],[1890,4],[1895,6],[1919,7],[1948,10],[1978,7],[2006,12],[2039,7],[2047,4],[2052,6],[2062,7],[2072,6],[2081,3],[2087,4],[2094,4],[2105,7],[2113,10],[2124,1],[2126,10],[2137,2],[2140,5],[2146,4],[2151,8],[2160,4],[2165,7],[2173,6],[2182,5],[2190,6],[2197,7],[2205,3],[2212,5],[2218,7],[2226,4],[2231,4],[2236,8],[2245,4],[2250,4],[2258,4],[2263,6],[2270,9],[2285,15],[2301,12],[2314,1],[2316,5],[2322,6],[2329,9],[2339,4],[2344,15],[2360,6],[2369,8],[2380,6],[2387,8],[2396,4],[2401,5],[2407,9],[2417,6],[2427,3],[2431,7],[2439,9],[2449,4],[2454,4],[2462,3],[2466,8],[2480,17],[2498,10],[2509,10],[2520,8],[2529,4],[2534,17],[2552,6],[2561,18],[2580,3],[2587,6],[2594,4],[2599,3],[2603,8],[2612,14],[2627,4],[2632,8],[2644,7],[2652,3],[2656,4],[2661,7],[2669,16],[2686,4],[2694,6],[2702,8],[2711,5],[2717,6],[2724,8],[2738,10],[2749,7],[2757,4],[2762,4],[2767,4],[2772,6],[2779,4],[2784,10],[2795,4],[2800,10],[2811,6],[2820,14],[2835,7],[2843,7],[2851,17],[2869,11],[2881,4],[2887,15],[2903,9],[2913,4],[2918,4],[2923,7],[2934,3],[2938,7],[2946,3],[2950,4],[2955,4],[2960,7],[2968,11],[2980,4],[2985,4],[2995,7],[3003,7],[3011,7],[3019,3],[3023,6],[3030,10],[3041,8],[3050,4],[3055,6],[3064,12],[3077,4],[3082,4],[3087,6],[3094,4],[3099,9],[3114,13],[3128,7],[3136,1],[3138,10],[3149,10],[3160,8],[3169,4],[3174,13],[3188,4],[3193,17],[3213,10],[3226,2],[3229,4],[3234,18],[3256,1],[3260,4],[3265,18],[3286,2],[3291,2],[3294,4],[3299,14],[3317,1],[3321,4],[3326,14],[3343,1],[3347,4],[3352,6],[3361,6],[3369,10],[3381,14],[3397,7],[3405,7],[3414,1],[3418,7],[3427,4],[3433,11],[3446,4],[3451,4],[3457,15],[3474,4],[3479,18],[3500,9],[3511,4],[3516,4],[3521,4],[3526,7],[3536,11],[3549,4],[3554,4],[3559,4],[3568,8],[3578,4],[3583,4],[3588,6],[3606,3],[3610,6],[3617,3],[3621,10],[3632,1],[3634,10],[3645,4],[3650,4],[3656,1],[3659,10],[3671,3],[3679,1],[3681,6],[3688,3],[3692,1],[3695,5],[3701,1],[3703,6],[3710,4],[3717,3],[3723,6],[3732,4],[3737,3],[3746,1],[3748,11],[3761,1],[3763,14],[3778,3],[3783,4],[3788,8],[3802,1],[3804,9],[3815,1],[3817,14],[3832,8],[3842,4],[3847,3],[3856,1],[3858,11],[3871,3],[3880,7],[3888,9],[3898,8],[3907,4],[3914,1],[3916,8],[3926,6],[3939,4],[3945,1],[3948,10],[3960,14],[3975,3],[3980,15],[3999,5],[4005,5],[4011,3],[4015,8],[4028,6],[4036,5],[4042,3],[4046,10],[4057,4],[4062,2],[4065,1],[4067,7],[4075,16],[4097,8],[4106,5],[4112,6],[4119,8],[4130,1],[4132,14],[4149,7],[4158,5],[4165,3],[4169,8],[4179,7],[4188,1],[4190,14],[4205,7],[4215,1],[4218,8],[4228,4],[4233,3],[4242,3],[4246,6],[4254,7],[4262,5],[4269,1],[4271,1],[4276,1],[4278,1],[4282,1],[4284,14],[4299,7],[4308,1],[4310,14],[4325,5],[4332,3],[4336,8],[4348,3],[4354,4],[4360,1],[4363,10],[4375,14],[4390,8],[4399,4],[4404,7],[4415,8],[4427,1],[4429,14],[4444,5],[4450,8],[4465,8],[4474,7],[4482,3],[4486,4],[4491,3],[4495,4],[4500,7],[4508,7],[4516,4],[4522,1],[4525,10],[4537,8],[4546,3],[4550,7],[4558,7],[4567,5],[4575,6],[4583,5],[4591,3],[4599,15],[4616,8],[4626,5],[4633,8],[4643,4],[4648,4],[4653,5],[4661,9],[4672,3],[4676,7],[4685,3],[4690,1],[4694,4],[4699,3],[4705,8],[4718,9],[4729,4],[4734,3],[4743,6],[4752,4],[4757,1],[4759,11],[4774,3],[4779,6],[4788,4],[4793,3],[4802,3],[4806,8],[4816,6],[4823,3],[4827,4],[4834,3],[4838,4],[4846,6],[4853,3],[4857,3],[4865,4],[4872,1],[4874,8],[4884,6],[4891,6],[4898,3],[4903,10],[4914,2],[4917,8],[4926,4],[4933,4],[4940,3],[4944,4],[4952,6],[4959,3],[4963,3],[4976,8],[4985,6],[4992,9],[5002,3],[5006,7],[5014,4],[5019,3],[5023,4],[5029,1],[5032,10],[5044,8],[5053,3],[5057,7],[5065,7],[5075,7],[5084,5],[5093,8],[5105,4],[5110,4],[5115,7],[5124,6],[5133,4],[5138,1],[5140,9],[5153,8],[5163,6],[5172,4],[5177,5],[5188,8],[5198,6],[5205,5],[5212,3],[5216,4],[5223,3],[5227,4],[5235,6],[5242,7],[5253,3],[5257,3],[5265,4],[5272,1],[5274,8],[5284,6],[5291,7],[5302,6],[5309,3],[5314,10],[5325,2],[5328,8],[5337,4],[5344,4],[5351,3],[5355,4],[5363,6],[5370,7],[5381,3],[5385,3],[5398,4],[5403,10],[5414,5],[5420,4],[5425,3],[5429,10],[5440,4],[5446,1],[5449,10],[5461,4],[5470,1],[5472,12],[5485,2],[5488,4],[5497,5],[5503,1],[5505,8],[5515,1],[5517,6],[5524,4],[5531,5],[5537,1],[5539,11],[5552,5],[5558,1],[5560,9],[5571,5],[5577,1],[5579,11],[5592,3],[5596,7],[5605,10],[5616,7],[5624,10],[5645,14],[5660,8],[5669,9],[5679,5],[5685,3],[5689,6],[5696,10],[5707,4],[5713,1],[5716,10],[5728,14],[5743,3],[5747,7],[5755,7],[5764,3],[5768,4],[5776,5],[5784,6],[5793,4],[5798,1],[5800,11],[5815,3],[5820,6],[5827,3],[5831,4],[5838,1],[5840,8],[5850,6],[5857,6],[5864,3],[5869,10],[5880,2],[5883,8],[5892,4],[5899,4],[5906,3],[5910,4],[5918,6],[5925,3],[5929,3],[5939,4],[5944,4],[5956,12],[5969,7],[5977,4],[5985,17],[6004,18],[6024,2],[6028,14],[6044,1],[6048,4],[6053,6],[6061,16],[6079,5],[6089,5],[6095,2],[6098,7],[6106,2],[6109,6],[6118,10],[6132,13],[6146,4],[6152,2],[6155,10],[6166,3],[6175,7],[6183,5],[6189,4],[6194,7],[6202,3],[6207,6],[6217,7],[6225,11],[6237,7],[6245,10],[6259,1],[6261,4],[6266,6],[6274,5],[6280,6],[6292,3],[6296,5],[6302,3],[6309,10],[6320,8],[6329,3],[6336,6],[6344,1],[6349,1],[6354,1],[6359,2],[6362,3],[6369,3],[6375,3],[6379,7],[6388,5],[6394,7],[6402,5],[6411,3],[6421,3],[6425,5],[6431,5],[6438,3],[6445,10],[6456,8],[6465,3],[6470,2],[6473,3],[6480,3],[6486,3],[6490,7],[6499,5],[6505,7],[6513,5],[6522,3],[6529,4],[6536,3],[6540,6],[6548,7],[6556,5],[6563,1],[6565,1],[6570,1],[6572,1],[6576,5],[6582,7],[6591,5],[6597,5],[6609,7],[6617,6],[6624,7],[6632,10],[6643,14],[6658,3],[6663,4],[6672,3],[6676,7],[6685,9],[6695,6],[6702,7],[6715,10],[6726,4],[6735,8],[6744,4],[6749,8],[6759,5],[6765,7],[6773,6],[6780,4],[6785,10],[6796,3],[6800,10],[6811,8],[6820,5],[6826,6],[6833,3],[6837,6],[6844,8],[6853,12],[6866,7],[6875,17],[6893,6],[6900,6],[6907,7],[6915,4],[6920,7],[6928,8],[6937,6],[6944,8],[6953,4],[6958,10],[6969,8],[6978,13],[6992,8],[7002,8],[7011,8],[7020,3],[7024,8],[7034,11],[7047,3],[7051,7],[7060,9],[7071,8],[7080,6],[7087,2],[7090,9],[7100,5],[7106,7],[7114,7],[7123,3],[7127,10],[7138,7],[7146,7],[7154,3],[7158,8],[7167,12],[7180,6],[7187,11],[7199,4],[7204,6],[7211,2],[7214,12],[7227,9],[7237,6],[7245,14],[7260,6],[7267,3],[7271,6],[7278,6],[7285,13],[7299,7],[7307,7],[7315,7],[7323,7],[7331,8],[7340,8],[7350,4],[7355,4],[7360,7],[7368,4],[7373,6],[7380,8],[7389,4],[7394,9],[7404,3],[7408,6],[7415,9],[7425,7],[7433,6],[7440,4],[7445,7],[7454,5],[7460,4],[7465,8],[7474,6],[7481,3],[7485,7],[7493,2],[7496,6],[7503,6],[7510,2],[7513,8],[7522,5],[7528,7],[7536,7],[7545,5],[7551,7],[7559,3],[7563,3],[7567,9],[7577,10],[7588,3],[7592,3],[7596,10],[7616,7],[7624,4],[7629,6],[7639,7],[7649,6],[7658,3],[7664,4],[7671,4],[7682,7],[7690,7],[7698,3],[7702,9],[7712,3],[7716,8],[7725,4],[7730,9],[7740,4],[7745,7],[7753,9],[7765,7],[7773,3],[7777,7],[7785,7],[7794,5],[7805,14],[7820,9],[7830,8],[7839,4],[7844,14],[7859,6],[7868,8],[7877,4],[7882,7],[7890,8],[7899,4],[7904,6],[7913,2],[7916,4],[7921,9],[7936,17],[7954,7],[7962,1],[7964,3],[7968,7],[7976,4],[7981,9],[7991,5],[7997,4],[8002,4],[8007,17],[8025,9],[8035,3],[8041,14],[8058,6],[8066,14],[8082,8],[8092,4],[8097,4],[8102,7],[8111,9],[8123,8],[8133,4],[8138,4],[8143,6],[8161,5],[8167,6],[8174,10],[8185,8],[8194,4],[8200,1],[8203,14],[8219,5],[8229,1],[8231,2],[8234,3],[8238,1],[8241,2],[8244,4],[8253,5],[8259,1],[8261,2],[8264,4],[8271,3],[8277,6],[8286,4],[8291,3],[8300,1],[8302,8],[8312,3],[8317,6],[8327,7],[8335,11],[8347,7],[8355,10],[8369,1],[8371,4],[8376,6],[8384,3],[8391,3],[8395,7],[8403,3],[8408,6],[8417,2],[8420,3],[8427,3],[8433,3],[8437,6],[8445,7],[8453,9],[8463,6],[8472,1],[8474,1],[8478,3],[8485,4],[8492,1],[8494,8],[8504,6],[8524,6],[8531,5],[8537,1],[8539,7],[8547,3],[8551,9],[8561,4],[8567,1],[8570,14],[8586,6],[8593,3],[8597,7],[8605,7],[8614,3],[8618,7],[8627,5],[8635,6],[8644,4],[8649,1],[8651,8],[8663,3],[8668,6],[8675,3],[8679,4],[8686,1],[8688,8],[8698,6],[8705,6],[8712,3],[8717,7],[8725,2],[8728,8],[8737,4],[8744,4],[8751,3],[8755,4],[8763,6],[8770,3],[8774,3],[8787,4],[8792,10],[8803,5],[8809,4],[8814,3],[8818,7],[8826,4],[8832,1],[8835,14],[8851,4],[8860,5],[8866,1],[8868,8],[8878,1],[8880,2],[8883,4],[8890,5],[8896,1],[8898,8],[8917,8],[8926,8],[8942,15],[8958,10],[8969,7],[8977,3],[8981,4],[8986,7],[8994,4],[8999,15],[9015,6],[9024,10],[9036,10],[9047,8],[9058,6],[9067,4],[9073,1],[9076,15],[9093,7],[9101,3],[9105,7],[9113,7],[9122,5],[9130,6],[9137,1],[9139,10],[9150,8],[9159,3],[9164,1],[9166,8],[9181,15],[9197,10],[9208,7],[9216,3],[9220,4],[9225,7],[9233,4],[9238,15],[9254,6],[9263,10],[9275,10],[9286,10],[9297,4],[9304,7],[9314,4],[9320,1],[9323,15],[9340,7],[9348,3],[9352,7],[9360,7],[9369,5],[9377,5],[9384,3],[9391,1],[9393,10],[9404,8],[9413,3],[9418,2],[9421,3],[9428,3],[9434,6],[9441,3],[9447,1],[9449,10],[9463,5],[9469,6],[9476,3],[9489,10],[9500,14],[9519,4],[9524,7],[9532,6],[9541,5],[9549,6],[9556,7],[9564,3],[9568,8],[9577,4],[9582,4],[9589,4],[9594,10],[9605,6],[9614,2],[9617,4],[9622,5],[9628,11],[9640,7],[9650,4],[9656,1],[9659,10],[9671,8],[9680,3],[9684,7],[9692,7],[9701,5],[9709,6],[9717,5],[9725,1],[9727,2],[9730,4],[9737,5],[9743,1],[9745,2],[9748,6],[9757,6],[9766,4],[9773,3],[9777,4],[9785,6],[9792,3],[9796,3],[9802,7],[9811,1],[9813,11],[9827,7],[9836,5],[9843,5],[9850,7],[9859,1],[9861,11],[9873,7],[9883,1],[9886,8],[9896,4],[9901,3],[9910,3],[9914,6],[9922,5],[9928,7],[9936,2],[9939,7],[9948,1],[9950,1],[9954,1],[9956,11],[9968,7],[9977,6],[9984,3],[9992,4],[9998,1],[10001,10],[10013,8],[10022,3],[10026,7],[10034,7],[10044,7],[10053,5],[10062,1],[10064,2],[10067,4],[10074,5],[10080,1],[10082,2],[10085,6],[10094,6],[10103,4],[10110,3],[10114,4],[10122,6],[10129,7],[10140,3],[10144,3],[10150,7],[10159,6],[10166,1],[10168,11],[10181,3],[10196,5],[10202,7],[10214,4],[10219,4],[10231,6],[10238,10],[10249,7],[10260,17],[10278,2],[10282,10],[10297,10],[10309,11],[10322,7],[10330,7],[10339,1],[10348,5],[10354,7],[10362,9],[10372,7],[10380,5],[10388,5],[10394,7],[10402,4],[10412,6],[10419,8],[10428,3],[10435,7],[10443,10],[10459,3],[10463,5],[10469,7],[10477,6],[10488,15],[10505,10],[10517,10],[10529,8],[10541,6],[10549,1],[10554,1],[10559,1],[10566,7],[10574,6],[10581,3],[10586,6],[10597,3],[10601,5],[10607,7],[10615,10],[10629,4],[10634,4],[10639,7],[10648,1],[10651,6],[10662,15],[10679,10],[10691,10],[10703,10],[10715,10],[10729,7],[10737,6],[10744,3],[10749,6],[10760,4],[10765,3],[10769,6],[10776,6],[10785,4],[10790,5],[10801,10],[10813,3],[10817,6],[10825,7],[10833,5],[10841,1],[10843,1],[10847,5],[10853,5],[10860,4],[10867,4],[10872,5],[10878,1],[10882,4],[10887,6],[10896,3],[10900,7],[10909,7],[10917,7],[10925,3],[10929,5],[10941,3],[10945,7],[10953,7],[10961,7],[10969,2],[10972,1],[10974,10],[10985,6],[10992,7],[11000,4],[11005,12],[11018,8],[11027,2],[11030,7],[11039,8],[11048,3],[11052,16],[11069,2],[11072,7],[11080,4],[11085,9],[11095,8],[11105,7],[11113,2],[11116,8],[11126,3],[11130,7],[11138,3],[11142,8],[11151,10],[11163,4],[11168,1],[11170,3],[11174,2],[11177,9],[11187,2],[11190,2],[11193,4],[11198,10],[11210,4],[11215,10],[11226,7],[11234,9],[11245,7],[11253,3],[11257,9],[11267,8],[11276,8],[11285,8],[11295,11],[11307,8],[11316,7],[11324,3],[11328,10],[11339,7],[11348,8],[11357,3],[11361,8],[11370,8],[11379,8],[11389,5],[11395,3],[11399,2],[11402,7],[11410,3],[11414,10],[11425,3],[11429,8],[11438,7],[11446,9],[11457,4],[11462,7],[11470,9],[11482,7],[11490,3],[11494,7],[11502,7],[11511,5],[11519,8],[11528,8],[11538,4],[11543,7],[11551,12],[11564,3],[11568,10],[11579,6],[11586,3],[11590,9],[11600,8],[11609,3],[11613,2],[11616,10],[11627,12],[11640,3],[11644,11],[11656,7],[11664,7],[11672,7],[11681,7],[11689,1],[11691,5],[11697,2],[11700,8],[11709,9],[11719,8],[11728,12],[11741,2],[11744,1],[11746,9],[11756,8],[11765,8],[11774,8],[11783,8],[11793,10],[11805,9],[11815,7],[11823,8],[11832,4],[11837,9],[11847,13],[11862,4],[11867,2],[11870,3],[11874,3],[11878,7],[11886,5],[11892,13],[11907,8],[11916,3],[11920,2],[11923,8],[11932,4],[11937,6],[11944,4],[11949,4],[11955,3],[11959,2],[11962,8],[11971,2],[11974,7],[11982,7],[11990,7],[11998,8],[12007,10],[12018,7],[12026,10],[12038,4],[12043,17],[12061,4],[12066,7],[12075,7],[12083,4],[12088,17],[12106,4],[12111,7],[12120,7],[12130,6],[12138,13],[12152,4],[12160,11],[12172,7],[12181,4],[12186,18],[12205,6],[12214,8],[12225,7],[12235,4],[12241,1],[12244,18],[12264,7],[12272,3],[12276,7],[12284,7],[12293,5],[12304,7],[12312,3],[12316,2],[12319,7],[12329,8],[12338,8],[12348,4],[12353,15],[12369,6],[12378,7],[12386,8],[12395,3],[12404,3],[12408,8],[12417,5],[12423,7],[12431,2],[12434,7]]},"200":{"position":[[16,3],[20,11],[34,6],[41,4],[46,11],[58,5],[66,6],[76,11],[90,5]]},"202":{"position":[[0,6],[7,5],[27,5],[77,2],[82,7],[92,9],[106,6],[113,5]]},"208":{"position":[[9,5],[17,4],[22,7],[30,4],[35,5],[41,7],[56,5],[65,6],[72,6],[79,2],[85,5],[100,4],[105,5],[111,6],[120,4],[125,3],[132,1],[140,1],[147,7],[155,6],[170,4],[175,6],[195,5],[217,4],[222,5],[228,6],[237,2],[240,6],[247,4],[252,6],[259,4],[264,6],[271,7],[279,6],[299,4],[304,5],[319,7],[327,4],[332,5],[349,9],[359,3],[370,6],[395,5],[404,6],[411,6],[418,2],[424,7],[457,6],[471,4],[476,7],[484,9],[496,5],[504,5],[510,4],[517,5],[523,4],[530,6],[537,6],[544,5],[551,5],[559,6],[579,6],[623,9],[635,6],[642,4],[648,1],[651,6],[659,6],[666,3],[670,7],[678,7],[689,3],[695,6],[704,4],[711,3],[715,4],[723,6],[730,4],[735,3],[744,1],[746,7],[755,3],[759,6],[768,6],[776,5],[782,4],[788,1],[794,1],[796,1],[800,3],[804,4],[810,3],[814,7],[830,6],[840,2],[843,3],[847,2],[858,2],[861,3],[865,7],[876,3],[882,3],[886,7],[897,5],[903,4],[909,1],[912,7],[922,7],[930,2],[933,6],[942,4],[949,2],[956,8],[978,1],[980,2],[983,5],[991,3],[996,2],[1002,1],[1004,8],[1013,3],[1017,2],[1021,1],[1023,2],[1026,7],[1036,2],[1040,2],[1045,2],[1048,3],[1052,7],[1063,3],[1069,3],[1073,7],[1084,5],[1090,4],[1096,3],[1101,7],[1111,7],[1119,3],[1123,5],[1131,4],[1143,8],[1170,2],[1173,4],[1178,1],[1180,7],[1189,1],[1191,5],[1200,6],[1210,1],[1212,6],[1219,1],[1222,2],[1225,1],[1227,7],[1238,3],[1244,6],[1253,4],[1258,1],[1260,7],[1271,6],[1279,4],[1286,4],[1291,5],[1297,4],[1302,8],[1311,1],[1313,9],[1326,4],[1331,11],[1345,1],[1347,7],[1358,5],[1364,4],[1370,3],[1375,7],[1385,7],[1395,4],[1411,3],[1416,3]]},"210":{"position":[[2,5],[12,4],[26,4],[32,1],[35,10],[47,3],[55,3],[59,5],[67,1],[69,3],[75,5],[83,6],[92,4],[99,1],[101,6],[109,6],[116,4],[121,3],[130,1],[132,5],[139,3],[143,6],[153,1],[156,3],[162,1],[164,1],[168,1],[170,4],[176,3],[194,7],[205,4],[210,4],[215,6],[222,5],[229,1],[232,2],[235,5],[241,1],[246,1],[250,1],[252,6],[259,4],[264,6],[271,5],[278,4],[284,1],[286,4],[292,4],[299,3],[305,7],[314,3],[319,7],[328,7],[337,9],[348,4],[359,4],[366,1],[368,6],[375,4],[380,6],[387,5],[394,4],[400,1],[402,4],[408,4],[415,3],[421,2],[426,4],[433,7],[442,3],[447,7],[456,7],[465,9],[476,4],[497,5],[508,7],[516,3],[520,6],[530,1],[533,3],[537,5],[543,4],[548,6],[557,1],[559,1],[563,1],[565,4],[573,5],[579,7]]},"212":{"position":[[0,4],[6,1],[9,11],[22,6],[29,3],[33,6],[40,5],[47,6],[54,5],[62,6],[69,6],[76,5],[82,4],[88,1],[91,7],[101,4],[106,7],[114,7],[124,4],[130,3],[134,7],[143,4],[149,1],[153,1],[157,3],[161,4],[167,3],[171,7]]},"214":{"position":[[0,10],[12,6],[29,10],[41,4],[47,6],[55,8],[68,4],[74,8],[87,6],[95,3],[100,5],[107,11],[121,6],[129,5],[135,4],[140,6],[150,5],[157,11],[171,6],[179,3],[183,5],[189,4],[194,6],[202,7],[210,2],[213,6],[221,6],[229,3],[234,5],[241,4],[248,6],[256,5],[262,4],[267,6],[277,5],[284,4],[295,11],[311,6],[319,3],[323,5],[329,4],[334,6],[342,4],[347,7],[355,7],[364,6],[372,4],[377,5],[383,2],[386,6],[394,5],[401,3],[407,6],[415,3],[419,6],[426,6],[433,5],[440,5],[447,3],[453,6],[461,8],[474,4],[480,8]]},"220":{"position":[[16,6],[23,7],[31,2],[37,12],[60,4],[65,12],[78,3],[87,4],[104,5],[112,7],[120,12],[135,4],[140,7],[148,7],[161,12],[174,6],[183,4],[189,1],[191,12],[205,6],[214,6],[261,6],[273,6],[281,7],[292,7],[303,7],[313,1],[321,11],[344,4],[349,11],[361,6],[370,3],[374,7],[382,5],[388,12],[413,6],[420,6],[427,2],[430,4],[436,1],[439,11],[452,12],[465,4],[470,6],[478,5],[486,1],[488,2],[491,4],[498,5],[504,1],[506,2],[509,6],[518,4],[524,2],[530,1],[532,8],[541,4],[547,2],[551,2],[556,6],[563,6],[570,3],[575,7],[583,3],[587,10],[602,2],[605,4],[610,5],[619,7],[629,6],[636,6],[643,3],[648,7],[656,7],[664,7],[676,2],[679,3],[686,4],[691,3],[695,5],[704,3],[711,3],[717,6],[724,3],[730,4],[735,5],[743,7],[751,3],[755,7],[764,7],[775,4],[780,3],[784,4],[792,6],[799,3],[805,4],[811,1],[814,11],[827,11],[839,4],[844,6],[852,5],[860,1],[862,2],[865,4],[872,5],[878,1],[880,2],[883,6],[892,4],[898,2],[904,1],[906,8],[915,4],[921,2],[925,2],[930,6],[937,6],[944,3],[949,7],[957,3],[961,10],[976,2],[979,4],[984,5],[993,7],[1003,6],[1010,6],[1017,3],[1022,7],[1030,7],[1038,7],[1050,2],[1053,3],[1060,4],[1065,3],[1069,4],[1077,3],[1084,3],[1090,6],[1097,3],[1103,4],[1108,5],[1116,7],[1124,3],[1128,7],[1137,7],[1148,4],[1153,3],[1157,4],[1165,6],[1172,3],[1178,6],[1211,6],[1255,9],[1267,6],[1274,4],[1280,1],[1283,11],[1296,6],[1303,3],[1307,7],[1315,7],[1326,3],[1332,6],[1341,4],[1348,3],[1352,4],[1360,6],[1367,4],[1372,3],[1381,1],[1383,7],[1392,3],[1396,6],[1405,11],[1418,5],[1424,4],[1430,1],[1436,1],[1438,1],[1442,3],[1446,4],[1452,3],[1456,7],[1472,11],[1487,2],[1490,3],[1494,2],[1505,2],[1508,3],[1512,7],[1523,3],[1529,3],[1533,7],[1544,5],[1550,4],[1556,1],[1559,7],[1569,7],[1577,2],[1580,6],[1589,4],[1596,2],[1603,8],[1625,1],[1627,2],[1630,5],[1638,4],[1644,2],[1650,1],[1652,8],[1661,3],[1665,2],[1669,1],[1671,2],[1674,7],[1684,2],[1688,2],[1694,4],[1699,5],[1708,7],[1718,2],[1721,3],[1725,7],[1736,3],[1742,3],[1746,7],[1757,5],[1763,4],[1769,3],[1774,7],[1784,7],[1792,11],[1806,4],[1818,8],[1845,2],[1848,4],[1853,1],[1855,7],[1864,1],[1866,5],[1875,6],[1885,1],[1887,6],[1894,1],[1897,2],[1900,1],[1902,7],[1913,3],[1919,6],[1928,4],[1933,1],[1935,7],[1946,6],[1954,4],[1961,4],[1966,5],[1972,4],[1977,8],[1986,1],[1988,9],[2001,4],[2006,11],[2020,1],[2022,7],[2033,5],[2039,4],[2045,3],[2050,7],[2060,7],[2070,4],[2086,4],[2091,3],[2096,3]]},"222":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[62,6],[70,8],[83,4],[89,8],[102,6],[110,3],[115,5],[122,11],[136,11],[149,5],[155,4],[160,6],[170,5],[177,11],[191,6],[199,3],[203,5],[209,4],[214,6],[222,7],[230,2],[233,6],[241,6],[249,3],[254,5],[261,4],[268,11],[281,5],[287,4],[292,6],[302,5],[309,4],[316,6],[324,3],[328,5],[334,4],[339,6],[347,4],[352,7],[360,7],[369,11],[382,4],[387,5],[393,2],[396,7],[405,5],[412,3],[418,3],[422,3],[426,5],[432,7],[443,6],[451,8],[464,4],[470,8]]},"228":{"position":[[21,6],[28,7],[36,2],[42,7],[75,6],[89,4],[94,7],[102,9],[114,5],[122,5],[128,4],[135,5],[141,4],[148,6],[155,6],[162,5],[169,5],[178,12],[200,12],[217,6],[237,11],[260,4],[265,11],[277,6],[286,3],[290,7],[298,5],[304,12],[336,3],[340,12],[353,4],[360,6],[371,8],[381,4],[389,6],[396,6],[403,2],[409,8],[430,15],[448,8],[457,4],[463,1],[466,11],[479,8],[488,3],[492,7],[501,5],[509,1],[511,2],[514,4],[521,5],[527,1],[529,2],[532,6],[541,4],[549,3],[553,4],[560,2],[563,1],[566,2],[572,1],[574,8],[583,4],[590,2],[595,6],[602,6],[609,3],[614,7],[622,7],[630,10],[645,1],[647,8],[656,4],[665,11],[678,3],[683,3],[688,5],[695,7],[704,4],[710,3],[714,12],[732,3],[736,7],[745,10],[759,3],[763,4],[771,6],[778,3],[803,6],[810,6],[817,2],[820,4],[826,1],[829,11],[842,8],[856,6],[864,5],[873,1],[875,2],[878,5],[886,5],[892,1],[894,2],[897,7],[907,7],[918,4],[923,3],[927,6],[934,4],[940,4],[948,4],[953,3],[957,6],[964,4],[970,6],[982,6],[991,3],[995,5],[1001,4],[1006,6],[1014,5],[1020,5],[1028,4],[1033,4],[1038,6],[1046,5],[1054,2],[1057,4],[1062,4],[1070,6],[1077,3],[1081,6],[1089,8],[1098,10],[1109,2],[1113,1],[1117,4],[1125,2],[1128,7],[1136,4],[1144,6],[1151,3],[1157,4],[1162,4],[1170,4],[1175,4],[1181,2],[1187,1],[1189,8],[1198,4],[1204,2],[1208,2],[1213,6],[1220,3],[1224,6],[1232,7],[1241,1],[1243,3],[1247,10],[1260,4],[1268,3],[1272,1],[1275,3],[1282,5],[1288,4],[1293,4],[1300,2],[1303,3],[1310,5],[1316,3],[1322,3],[1329,3],[1335,6],[1342,3],[1350,7],[1358,4],[1366,4],[1371,4],[1376,4],[1384,5],[1390,6],[1399,6],[1406,6],[1414,4],[1420,6],[1427,3],[1433,3],[1437,4],[1445,5],[1451,1],[1453,8],[1464,2],[1468,7],[1476,4],[1484,2],[1487,3],[1494,5],[1500,4],[1507,3],[1514,3],[1520,6],[1527,3],[1532,3],[1542,6],[1549,6],[1557,3],[1563,4],[1569,1],[1572,11],[1585,8],[1596,5],[1604,6],[1612,3],[1619,1],[1621,8],[1639,3],[1643,1],[1646,4],[1654,5],[1660,6],[1669,2],[1672,3],[1679,1],[1681,12],[1694,4],[1701,3],[1708,3],[1725,6],[1732,3]]},"230":{"position":[[11,4],[17,1],[20,10],[32,12],[49,6],[58,6],[67,6],[75,4]]},"232":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,7],[459,5],[466,3],[472,3],[476,3],[480,5],[486,7],[496,8],[505,3],[509,8],[522,6],[530,8],[542,7],[551,6],[559,4],[565,8],[577,7],[586,4]]},"235":{"position":[[37,4],[42,4],[47,5],[67,6],[83,3]]},"238":{"position":[[2,14],[28,6],[35,6],[42,2],[45,4],[51,1],[54,11],[67,14],[82,6],[89,7],[98,5],[106,1],[108,2],[111,4],[118,5],[124,1],[126,2],[129,6],[138,4],[146,6],[153,4],[160,7],[169,6],[179,1],[181,8],[190,4],[196,2],[199,6],[209,7],[217,5],[226,7],[245,7],[253,3],[257,4],[264,3],[268,6],[276,7],[284,3],[288,7],[296,2],[300,1],[302,1],[306,4],[330,1],[332,8],[341,4],[350,11],[363,3],[368,6],[376,4],[382,6],[389,12],[405,5],[412,7],[440,2],[443,6],[453,7],[461,5],[470,7],[480,6],[487,5],[495,1],[497,8],[506,4],[512,5],[520,7],[528,3],[532,6],[540,7],[548,3],[552,7],[560,2],[564,1],[566,1],[570,4],[578,4],[585,3],[589,6],[597,10],[608,3],[612,7],[620,2],[624,1],[627,3],[631,7],[640,1],[644,4],[652,6],[659,3],[667,8],[677,4],[685,6],[692,6],[699,2],[705,8],[726,15],[744,8],[753,4],[759,1],[762,11],[775,8],[784,3],[788,7],[797,5],[805,1],[807,2],[810,4],[817,5],[823,1],[825,2],[828,6],[837,4],[845,3],[849,4],[856,2],[859,1],[862,2],[868,1],[870,8],[879,4],[886,2],[891,6],[898,6],[905,3],[910,7],[918,7],[926,10],[941,1],[943,8],[952,4],[961,11],[974,3],[979,3],[984,5],[991,7],[1000,4],[1006,3],[1010,12],[1028,3],[1032,7],[1041,10],[1055,3],[1059,4],[1067,6],[1074,3],[1099,6],[1106,6],[1113,2],[1116,4],[1122,1],[1125,11],[1138,8],[1152,6],[1160,5],[1169,1],[1171,2],[1174,5],[1182,5],[1188,1],[1190,2],[1193,7],[1203,7],[1214,4],[1219,3],[1223,6],[1230,4],[1236,4],[1244,4],[1249,3],[1253,6],[1260,4],[1266,6],[1278,6],[1287,3],[1291,5],[1297,4],[1302,6],[1310,5],[1316,5],[1324,4],[1329,4],[1334,6],[1342,5],[1350,2],[1353,4],[1358,4],[1366,6],[1373,3],[1377,6],[1385,8],[1394,10],[1405,2],[1409,1],[1413,4],[1421,2],[1424,7],[1432,4],[1440,6],[1447,3],[1453,4],[1458,4],[1466,4],[1471,4],[1477,2],[1483,1],[1485,8],[1494,4],[1500,2],[1504,2],[1509,6],[1516,3],[1520,6],[1528,7],[1537,1],[1539,3],[1543,10],[1556,4],[1564,3],[1568,1],[1571,3],[1578,5],[1584,4],[1589,4],[1596,2],[1599,3],[1606,5],[1612,3],[1618,3],[1625,3],[1631,6],[1638,3],[1646,7],[1654,4],[1662,4],[1667,4],[1672,4],[1680,5],[1686,6],[1695,6],[1702,6],[1710,4],[1716,6],[1723,3],[1729,3],[1733,4],[1741,5],[1747,1],[1749,8],[1760,2],[1764,7],[1772,4],[1780,2],[1783,3],[1790,5],[1796,4],[1803,3],[1810,3],[1816,6],[1823,3],[1828,3],[1838,6],[1845,6],[1853,3],[1859,4],[1865,1],[1868,11],[1881,8],[1892,5],[1900,6],[1908,3],[1915,1],[1917,8],[1935,3],[1939,1],[1942,4],[1950,5],[1956,6],[1965,2],[1968,3],[1975,1],[1977,12],[1990,4],[1997,3],[2004,3],[2021,6],[2028,3]]},"240":{"position":[[7,4],[12,8],[21,3],[25,5],[33,4],[38,8],[49,4],[54,4],[59,5],[67,4],[72,6],[79,6],[88,2],[91,4],[96,5],[102,5],[108,8],[117,7],[125,6],[132,3],[136,2],[139,6],[153,4],[158,9],[168,7],[176,6],[184,5],[190,8],[200,3],[204,2],[207,6],[216,6],[225,6],[233,6],[241,7],[250,7],[259,5],[266,5],[273,3],[278,3],[287,4],[293,1],[296,6],[304,4],[309,5],[315,8],[325,6],[332,6],[340,4],[348,3],[355,2],[358,5],[366,1],[368,5],[376,6],[385,1],[387,2],[390,4],[397,5],[403,1],[405,2],[408,6],[417,8],[434,6],[442,4],[450,4],[458,5],[466,5],[473,3],[480,3],[484,7],[492,6],[500,4],[509,2],[515,4],[520,3],[526,6],[534,4],[539,2],[542,2],[545,2],[548,2],[551,2],[554,3],[560,3],[564,7],[572,1],[574,3],[582,1],[587,1],[592,1],[596,1],[598,1],[602,2],[606,8],[616,1],[618,7],[627,3],[634,4],[640,1],[643,6],[651,5],[657,6],[664,6],[672,4],[680,3],[687,1],[689,4],[694,4],[700,6],[708,4],[719,4],[725,1],[728,6],[736,5],[742,6],[749,6],[757,4],[765,3],[772,1],[774,4],[779,4],[785,6],[793,4],[804,4],[810,1],[813,6],[821,6],[828,6],[835,6],[843,4],[851,3],[858,1],[860,4],[865,5],[872,6],[880,4],[897,4],[902,13],[916,6],[925,3],[930,6],[939,4],[944,16],[964,13],[980,6],[988,13],[1003,3],[1008,9],[1019,4],[1026,4],[1032,2],[1035,6],[1054,4],[1060,1],[1063,13],[1078,5],[1088,1],[1090,3],[1094,5],[1101,7]]},"242":{"position":[[9,1],[26,2],[29,1],[33,11],[45,14],[60,7],[68,16],[85,11],[105,2],[111,8],[123,4],[128,4],[133,11],[145,5],[152,1],[155,11],[167,4],[172,11],[184,5],[191,4],[198,4],[205,4],[212,3],[218,7],[228,3],[234,7],[243,8],[253,9],[264,4],[273,3],[277,7],[286,2],[289,5],[300,8]]},"244":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,7],[459,5],[466,3],[472,3],[476,3],[480,5],[486,7],[497,4],[503,8],[515,7],[523,3],[527,7],[535,2],[538,4],[544,4],[549,2],[552,2],[555,2],[558,2],[561,2],[564,3],[570,4],[577,4],[584,6],[592,8],[604,7],[612,3],[616,7],[624,2],[627,4],[633,11],[646,5],[652,4],[657,4],[665,3],[669,2],[672,5],[680,1],[682,7],[690,2],[693,6],[700,2],[704,8],[713,3],[717,8],[730,6],[738,8],[750,7],[759,6],[767,6],[775,8],[788,3],[793,8],[802,7],[811,4],[816,10],[828,6],[835,10],[847,4],[852,8],[861,3],[865,8],[877,8],[888,4],[893,6],[902,4],[908,8],[920,7],[929,4],[935,6],[943,8],[955,7],[964,6],[972,6],[980,3],[985,5],[992,11],[1006,11],[1019,5],[1025,4],[1030,6],[1040,5],[1047,11],[1061,6],[1069,3],[1073,5],[1079,4],[1084,6],[1092,7],[1100,2],[1103,6],[1111,6],[1119,3],[1124,5],[1131,4],[1138,11],[1151,5],[1157,4],[1162,6],[1172,5],[1179,4],[1186,6],[1194,3],[1198,5],[1204,4],[1209,6],[1217,4],[1222,7],[1230,7],[1239,11],[1252,4],[1257,5],[1263,2],[1266,7],[1275,5],[1282,3],[1288,3],[1292,3],[1296,5],[1302,7],[1312,8],[1321,3],[1325,8],[1338,6],[1346,8],[1358,7],[1367,6],[1375,4],[1381,8],[1393,7],[1402,4]]},"250":{"position":[[23,4],[28,10],[39,9],[51,11],[65,3],[87,4],[92,10],[103,9],[115,11],[127,5],[133,3],[138,5],[151,4],[156,7],[164,9],[176,7],[184,4],[189,3],[197,4],[203,5],[210,7],[218,6],[227,4],[234,3],[239,5],[255,3],[259,4],[264,10],[275,6],[284,3],[290,4],[298,2],[301,2],[304,2],[312,4],[317,13],[331,3],[337,4],[344,10],[357,6],[365,10],[376,3],[381,3],[388,4],[394,1],[397,10],[409,7],[417,4],[422,3],[430,4],[436,5],[445,9],[456,3],[463,4],[468,7],[476,4],[482,2],[485,3],[492,3],[498,6],[505,3],[510,3],[516,5],[523,3],[530,3],[534,9],[544,1],[546,3],[551,2],[554,3],[561,3],[567,6],[574,3],[579,3],[585,6],[593,3],[600,6],[607,6],[614,5],[621,2],[624,3],[631,3],[637,6],[644,3],[649,3],[655,5],[664,4],[671,4],[677,6],[684,9],[697,2],[700,1],[703,3],[710,2],[713,8],[722,4],[727,6],[735,5],[743,3],[750,3],[756,6],[763,3],[768,3],[774,10],[788,6],[795,4],[800,5],[807,5],[814,9],[825,3],[830,6],[837,10],[849,3],[855,4],[861,1],[864,10],[876,7],[884,10],[897,4],[904,3],[909,5],[918,5],[925,3],[932,3],[936,9],[946,1],[948,3],[953,2],[956,3],[963,3],[969,6],[976,3],[981,3],[987,6],[995,3],[1002,6],[1009,6],[1016,5],[1023,2],[1026,3],[1033,3],[1039,6],[1046,3],[1051,3],[1057,9],[1070,6],[1077,9],[1089,2],[1092,3],[1096,10],[1110,9],[1122,6],[1129,3],[1134,3],[1138,6],[1146,10],[1157,3],[1161,5],[1171,5],[1180,10],[1192,9],[1203,10],[1217,10],[1228,9],[1240,9],[1251,3],[1258,6],[1265,4],[1270,3],[1275,5],[1282,10],[1294,3],[1299,2],[1302,3],[1309,3],[1315,6],[1322,3],[1327,3],[1333,3],[1337,6],[1344,3],[1348,2],[1351,3],[1358,4],[1363,9],[1373,9],[1385,6],[1394,3],[1401,3],[1407,6],[1414,3],[1419,3],[1425,6],[1432,6],[1440,3],[1453,4],[1459,1],[1462,11],[1475,14],[1490,6],[1497,7],[1506,5],[1517,1],[1519,2],[1522,4],[1532,5],[1538,1],[1540,2],[1543,6],[1558,4],[1566,6],[1573,4],[1583,7],[1592,6],[1602,1],[1604,8],[1613,4],[1622,3],[1626,5],[1632,3],[1642,2],[1645,6],[1657,2],[1660,8],[1670,2],[1676,7],[1684,3],[1689,10],[1702,2],[1710,5],[1718,8],[1727,11],[1749,7],[1757,3],[1761,4],[1771,3],[1775,6],[1783,7],[1791,3],[1795,7],[1803,2],[1807,1],[1809,1],[1813,4],[1841,2],[1844,8],[1854,2],[1860,6],[1868,10],[1881,2],[1887,5],[1896,3],[1905,2],[1908,3],[1915,8],[1924,11],[1936,5],[1944,3],[1951,3],[1960,6],[1967,3],[1971,6],[1979,5],[1985,6],[1992,6],[2001,1],[2003,1],[2007,3],[2020,3],[2024,6],[2032,5],[2038,8],[2047,3],[2051,7],[2060,1],[2062,1],[2066,4],[2097,1],[2099,8],[2108,4],[2117,11],[2133,3],[2138,6],[2149,4],[2155,6],[2162,12],[2181,5],[2188,7],[2219,2],[2222,6],[2232,7],[2240,5],[2249,7],[2262,6],[2269,5],[2280,1],[2282,8],[2291,4],[2297,5],[2305,7],[2316,3],[2320,6],[2328,7],[2336,3],[2340,7],[2348,2],[2352,1],[2356,4],[2367,4],[2377,3],[2381,6],[2389,10],[2400,3],[2404,7],[2412,2],[2416,1],[2419,3],[2423,7],[2434,4],[2451,6],[2458,3],[2466,4],[2472,1],[2475,11],[2488,23],[2512,6],[2519,7],[2528,7],[2536,7],[2545,5],[2553,1],[2555,2],[2558,4],[2565,5],[2571,1],[2573,2],[2576,6],[2585,4],[2593,6],[2600,4],[2607,7],[2616,6],[2626,1],[2628,8],[2637,4],[2643,3],[2647,14],[2664,4],[2669,2],[2672,6],[2681,2],[2684,8],[2694,2],[2700,7],[2708,3],[2713,10],[2726,2],[2731,8],[2743,8],[2752,11],[2766,6],[2774,3],[2781,7],[2789,7],[2797,8],[2807,2],[2810,3],[2817,3],[2823,6],[2830,3],[2834,6],[2842,5],[2848,10],[2859,6],[2868,1],[2872,3],[2879,14],[2896,6],[2905,7],[2913,3],[2917,4],[2924,3],[2928,6],[2936,7],[2944,3],[2948,7],[2956,2],[2960,1],[2962,1],[2966,4],[2986,2],[2989,8],[2999,2],[3005,6],[3013,10],[3026,2],[3032,14],[3050,3],[3056,9],[3067,3],[3074,7],[3082,7],[3090,14],[3106,2],[3109,3],[3116,3],[3122,6],[3129,3],[3133,6],[3141,5],[3147,10],[3158,6],[3167,1],[3171,3],[3178,2],[3181,3],[3188,8],[3197,11],[3209,9],[3221,3],[3228,3],[3234,6],[3241,3],[3245,6],[3253,5],[3259,6],[3266,6],[3275,1],[3279,3],[3286,3],[3290,6],[3298,9],[3308,5],[3314,8],[3323,3],[3327,7],[3336,1],[3338,1],[3342,4],[3350,1],[3352,8],[3361,4],[3370,11],[3383,3],[3388,6],[3396,4],[3402,6],[3409,12],[3425,5],[3432,7],[3443,2],[3446,6],[3456,7],[3464,5],[3473,7],[3483,6],[3490,5],[3498,1],[3500,8],[3509,4],[3515,5],[3523,7],[3531,3],[3535,6],[3543,7],[3551,3],[3555,7],[3563,2],[3567,1],[3569,1],[3573,4],[3581,4],[3588,3],[3592,6],[3600,10],[3611,3],[3615,7],[3623,2],[3627,1],[3630,3],[3634,7],[3643,1],[3647,4],[3655,6],[3662,3]]},"252":{"position":[[7,4],[13,1],[16,13],[31,11],[43,5],[49,3],[54,5],[62,2],[65,3],[70,2],[76,5],[83,3],[89,2],[94,1],[96,9],[108,3],[112,6],[119,3],[125,6],[132,3],[136,6],[144,7],[152,5],[158,4],[167,4],[173,1],[176,11],[189,11],[203,3],[209,6],[216,1],[218,9]]},"254":{"position":[[9,1],[26,2],[29,6],[41,4],[47,16],[69,2],[79,11],[91,23],[115,7],[123,16],[140,11],[154,11],[166,13],[180,6]]},"256":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,4],[456,5],[463,3],[469,1],[471,4],[476,7],[484,7],[492,4],[497,11],[510,5],[517,3],[524,4],[530,8],[542,7],[550,3],[554,7],[562,2],[565,4],[570,5],[576,8],[585,3],[589,7],[597,4],[603,4],[608,2],[611,2],[614,2],[617,2],[620,2],[623,3],[629,4],[636,4],[643,6],[651,8],[663,7],[671,3],[675,7],[683,2],[686,4],[691,11],[704,4],[709,5],[715,2],[718,4],[724,5],[731,3],[737,4],[743,5],[749,2],[752,2],[756,1],[758,4],[763,2],[766,7],[774,7],[782,4],[787,11],[800,5],[807,3],[814,11],[827,5],[833,4],[838,4],[846,3],[850,2],[853,5],[861,1],[863,7],[871,2],[874,6],[881,2],[885,8],[894,3],[898,8],[911,6],[919,8],[931,7],[940,6],[948,6],[956,8],[968,7],[977,4],[983,3],[988,8]]},"260":{"position":[[6,4]]},"263":{"position":[[6,3],[10,3],[14,11],[26,5],[42,12],[42,7],[50,4],[56,5]]},"265":{"position":[[0,4],[5,10],[16,6],[25,3],[29,6],[36,7],[44,7],[54,4],[59,13],[73,3],[77,6],[85,7],[93,7],[103,10],[116,6],[124,10],[135,3],[140,3],[145,7],[154,7],[165,4],[171,1],[174,10],[186,4],[191,4],[196,6],[204,6],[213,6],[220,8],[229,4],[234,1],[236,3],[241,4],[248,5],[258,4],[264,1],[267,10],[279,4],[284,4],[289,6],[297,5],[303,3],[308,5],[316,9],[327,3],[334,1],[336,7],[344,7],[352,5],[359,2],[362,3],[369,3],[375,6],[382,3],[388,2],[391,3],[398,2],[401,8],[410,1],[412,3],[417,4],[424,3],[431,3],[437,6],[444,3],[450,6],[457,2],[460,9],[470,1],[472,4],[477,4],[484,9],[495,4],[503,4],[509,1],[512,10],[524,4],[529,4],[534,6],[543,3],[548,5],[557,4],[563,3],[570,2],[573,8],[582,1],[584,4],[589,4],[596,2],[599,3],[606,3],[612,6],[619,3],[624,3],[630,6],[637,1],[639,7],[647,7],[655,4],[663,4],[669,1],[672,10],[684,6],[691,4],[696,6],[704,4],[711,1],[714,3],[721,2],[724,4],[729,1],[731,4],[736,4],[743,6],[750,3],[757,3]]},"268":{"position":[[0,4],[5,11],[17,6],[30,10],[42,10],[55,4],[60,23],[84,5],[91,10],[104,11],[118,6],[126,11],[139,8],[149,4],[154,3],[158,6],[166,11],[180,10],[192,5],[199,6],[207,9],[218,6],[227,4],[233,2],[236,6]]},"270":{"position":[[3,8],[24,15],[42,8],[51,4],[57,1],[60,11],[73,8],[82,3],[86,7],[95,5],[103,1],[105,2],[108,4],[115,5],[121,1],[123,2],[126,6],[138,4],[156,4],[164,3],[168,4],[207,2],[210,1],[212,10],[226,3],[233,1],[235,10],[246,6],[253,4],[312,2],[315,8],[325,2],[331,3],[336,10],[349,2],[354,3],[359,3],[366,1],[368,10],[379,4],[384,4],[390,2],[393,3],[400,3],[406,6],[413,3],[417,6],[425,5],[431,4],[436,6],[445,1],[447,1],[451,3],[458,3],[464,8],[473,11],[485,3],[490,2],[493,3],[500,3],[506,6],[513,3],[517,6],[525,5],[531,6],[538,6],[547,1],[549,1],[553,3],[560,3],[564,6],[572,5],[578,8],[587,3],[591,7],[600,1],[602,1],[606,4],[616,2],[619,1],[622,2],[628,1],[630,8],[639,4],[646,2],[651,6],[658,6],[665,3],[670,7],[678,7],[686,10],[701,1],[703,8],[712,4],[721,11],[734,3],[739,3],[744,5],[751,7],[760,4],[766,3],[770,12],[788,3],[792,7],[801,10],[815,3],[819,4],[827,6],[834,3]]},"272":{"position":[[0,4],[6,1],[9,11],[22,11],[34,4],[39,6],[47,5],[55,1],[57,2],[60,4],[67,5],[73,1],[75,2],[78,6],[87,4],[93,2],[99,1],[101,8],[110,4],[116,2],[120,2],[125,6],[132,6],[139,3],[144,7],[152,3],[156,10],[171,2],[174,4],[179,5],[188,7],[198,6],[205,6],[212,3],[217,7],[225,7],[233,7],[257,2],[260,8],[270,2],[276,4],[281,3],[286,10],[299,2],[305,1],[307,10],[321,3],[327,2],[330,3],[337,1],[339,10],[350,4],[355,4],[361,8],[370,11],[386,3],[393,3],[399,3],[403,6],[411,5],[417,9],[427,3],[432,1],[434,1],[438,4],[448,2],[451,3],[458,4],[463,3],[467,4],[475,3],[482,3],[488,6],[495,3],[501,4],[506,5],[514,7],[522,3],[526,7],[535,7],[546,4],[551,3],[555,4],[563,6],[570,3]]},"274":{"position":[[0,4],[6,1],[9,11],[22,6],[29,3],[33,7],[41,7],[61,6],[68,6],[87,6],[97,4],[102,9],[112,1],[116,4],[121,6],[129,3],[135,6],[144,4],[151,3],[155,4],[163,6],[170,4],[177,6],[184,1],[187,3],[191,7],[200,5],[206,7],[214,5],[222,2],[225,1],[227,10],[241,3],[247,3],[251,4],[257,4],[265,5],[271,1],[273,8],[284,2],[287,4],[292,5],[301,7],[311,2],[314,8],[324,2],[330,4],[335,3],[340,10],[353,2],[358,2],[361,3],[368,1],[370,10],[381,4],[386,4],[392,8],[401,11],[417,3],[424,3],[430,3],[434,6],[442,5],[448,9],[458,3],[463,1],[465,1],[469,4]]},"276":{"position":[[0,7],[11,11],[23,13],[39,4],[45,16],[65,5],[74,11],[86,13],[103,5],[111,7],[123,1],[132,11],[147,11],[159,14],[174,5]]},"278":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,4],[456,5],[463,3],[469,1],[471,4],[476,7],[484,7],[492,4],[497,11],[510,5],[517,3],[524,4],[530,8],[542,7],[550,3],[554,7],[562,2],[565,4],[570,9],[580,5],[586,8],[595,3],[599,7],[607,4],[613,4],[618,2],[621,2],[624,2],[627,2],[630,2],[633,3],[639,4],[646,4],[653,6],[661,8],[673,7],[681,3],[685,7],[693,2],[696,4],[702,11],[715,4],[720,5],[726,2],[729,4],[735,5],[742,3],[748,4],[754,5],[760,2],[763,2],[767,1],[769,4],[774,2],[777,7],[785,7],[793,4],[798,11],[811,5],[818,3],[825,11],[838,5],[844,4],[849,4],[857,3],[861,2],[864,5],[872,1],[874,7],[882,2],[885,6],[892,2],[896,8],[905,3],[909,8],[922,6],[930,8],[942,7],[951,6],[959,6],[967,8],[979,7],[988,4]]},"281":{"position":[[7,9],[17,11],[29,9],[40,3],[46,5],[62,6],[69,1],[72,6],[135,2],[152,2]]},"286":{"position":[[17,4],[22,6],[29,9],[41,3],[47,5],[55,3],[74,4],[95,4],[130,4],[135,3],[139,6],[148,4],[154,1],[156,3],[161,3],[169,3],[173,7],[182,3],[186,6],[197,4],[203,1],[205,3],[210,5],[220,3],[224,7],[233,3],[237,8],[250,4],[256,1],[258,3],[263,4],[272,3],[276,7],[285,3],[289,7],[301,4],[307,1],[309,3],[314,3],[337,4],[343,1],[345,3],[350,4],[378,3],[393,3]]},"288":{"position":[[12,4],[17,5],[23,9],[35,3],[43,4],[48,7],[56,9],[68,5],[78,4],[83,5],[89,9],[101,3],[109,4],[114,7],[122,9],[134,4],[143,4],[148,6],[155,9],[167,4],[179,3],[192,4],[197,3],[201,6],[210,4],[216,1],[218,3],[223,3],[231,3],[235,7],[244,3],[248,6],[259,4],[265,1],[267,3],[272,5],[282,3],[286,7],[295,3],[299,8],[312,4],[318,1],[320,3],[325,4],[334,3],[338,7],[347,3],[351,7],[373,4],[378,10],[389,6],[398,3],[404,4],[410,1],[412,10],[424,4],[433,3],[437,7],[446,3],[450,8]]},"291":{"position":[[0,4],[5,6],[12,9],[24,5],[30,7],[40,4],[45,4],[50,9],[62,6],[69,5],[77,4],[82,4],[87,9],[99,6],[106,7]]},"293":{"position":[[14,4],[19,4],[24,1],[26,5],[35,1],[37,3],[45,4],[50,10],[61,1],[63,7],[74,1],[76,5]]},"295":{"position":[[9,4],[14,11],[26,9],[38,4],[45,5],[53,4],[60,5],[68,6],[77,7],[113,4],[118,12],[131,9],[143,4],[150,5],[160,4],[165,10],[176,9],[188,12],[201,4],[210,4],[215,10],[226,9],[238,12],[251,5],[261,4],[266,11],[278,9],[290,10],[301,10],[312,6]]},"298":{"position":[[0,4],[5,6],[12,9],[24,3],[28,2],[31,6],[40,4],[46,5],[53,4],[63,4],[69,5],[78,4],[83,6],[90,9],[102,6],[109,4],[114,4],[120,5],[126,6],[133,4],[138,4],[144,5],[150,6],[157,2],[160,6],[168,5],[185,4],[190,17],[208,1],[210,6],[219,14],[236,6],[244,14],[259,6],[267,1],[281,4],[286,18],[305,2],[308,9],[320,6],[327,6],[338,15],[356,6],[364,15],[380,12],[394,2]]},"300":{"position":[[0,4],[5,13],[19,9],[31,10],[42,1],[45,4],[50,7],[61,4],[66,14],[81,9],[93,11],[105,1],[107,4],[112,14],[145,4],[150,18],[169,1],[171,13],[186,4],[191,4],[196,7],[205,4],[210,7],[220,6],[227,4],[232,4],[237,4],[242,7],[251,4],[256,7],[266,6],[273,4],[278,11],[290,4],[295,1],[297,4],[302,14],[318,1],[321,4],[326,7],[337,1],[339,10],[350,1],[353,4],[358,9],[368,1],[371,1]]},"304":{"position":[[0,3],[34,2],[49,3],[95,4]]},"307":{"position":[[2,7],[12,9],[33,7],[41,4],[46,6],[56,3],[62,4],[73,15],[101,4],[106,15],[122,6],[131,8],[142,6],[149,8],[158,4],[163,5],[188,10],[213,4],[218,10],[229,6],[238,5],[246,6],[253,12],[266,4],[272,15],[288,8],[297,4],[302,6],[316,8],[328,10],[348,4],[354,1],[357,10],[369,8],[378,1],[382,6],[390,5],[398,3],[406,15],[423,8],[433,1],[436,8],[446,4],[451,4],[456,5],[466,1],[468,12],[484,3],[488,6],[497,3],[501,8],[525,3],[532,10],[549,4],[555,1],[558,10],[570,3],[578,3],[584,6],[593,4],[598,3],[607,1],[609,12],[623,1],[625,5],[633,3],[637,8],[646,3],[650,7],[659,7],[667,5],[676,1],[678,5],[685,3],[689,8],[701,3],[713,4],[720,1],[722,8],[732,6],[748,4],[756,10],[773,4],[779,1],[782,10],[794,4],[803,5],[809,1],[811,8],[823,4],[828,4],[837,10],[852,10],[864,5],[873,6],[883,12],[897,4],[902,4],[908,15],[926,8],[936,4],[941,4],[946,6],[959,2],[962,10],[973,3],[987,4],[992,5],[998,3],[1004,4],[1009,11],[1022,10],[1033,8],[1044,6],[1052,1],[1057,1],[1062,1],[1067,10],[1078,8],[1089,6],[1097,1],[1102,1],[1107,1],[1122,10],[1133,4],[1162,8],[1173,10],[1186,7],[1206,8],[1215,7],[1239,10],[1258,7],[1304,7],[1322,7]]},"310":{"position":[[4,2],[10,1],[17,7],[33,5],[46,4],[57,7],[69,5],[98,1],[101,2],[109,2],[115,2],[121,5],[130,7],[150,1],[157,2],[172,7],[188,1],[191,2],[199,2],[205,2],[211,5],[220,7],[236,7],[244,4],[249,6],[259,3],[265,4],[273,4],[278,4],[289,2],[295,4],[300,4],[305,3],[310,1],[313,2],[319,4],[324,4],[329,3],[334,2],[337,4],[346,2],[352,2],[355,4],[360,5],[366,1],[370,4],[375,6],[383,5],[389,5],[395,2],[420,5],[431,2],[434,3],[438,7],[447,5],[456,5],[469,2],[472,2],[475,2],[478,5],[485,2],[488,5],[498,2],[501,3],[505,7],[514,5],[523,5],[536,2],[539,2],[542,2],[545,5],[552,1],[554,5],[564,2],[567,3],[571,7],[580,5],[589,5],[602,2],[605,2],[608,2],[611,5],[618,1],[637,5],[644,4],[654,2],[657,3],[661,7],[670,5],[679,5],[687,4],[695,4],[707,2],[710,2],[713,2],[716,5],[723,2],[726,4],[732,4],[737,5],[744,4],[753,2],[756,3],[760,7],[769,5],[778,5],[786,4],[794,4],[806,2],[809,2],[812,2],[815,5],[822,1],[824,4],[830,5],[836,5],[843,4],[852,2],[855,3],[859,7],[868,5],[877,5],[885,4],[893,4],[905,2],[908,2],[911,2],[914,5],[921,1],[923,4],[929,5]]},"312":{"position":[[13,9],[24,12],[39,8],[60,5],[69,2],[83,7],[97,3],[108,3],[121,4],[143,7],[151,4],[156,6],[166,3],[172,4],[197,8],[211,4],[216,15],[232,6],[241,8],[252,6],[259,8],[268,4],[273,5],[290,4],[295,10],[306,6],[315,5],[323,6],[330,12],[343,4],[349,15],[365,8],[374,4],[379,6],[388,8],[397,4],[402,6],[428,3],[435,10],[452,4],[458,1],[461,10],[473,3],[481,5],[487,5],[493,1],[495,8],[522,3],[528,6],[537,4],[542,3],[547,2],[555,1],[557,12],[571,2],[575,2],[580,3],[584,7],[593,12],[606,6],[614,7],[622,3],[630,6],[639,1],[641,5],[649,3],[653,8],[662,3],[666,7],[675,7],[683,5],[692,1],[694,5],[710,3],[714,8],[726,3],[730,4],[737,1],[739,8],[749,3],[753,7],[762,8],[771,4],[776,6],[784,7],[792,3],[800,6],[816,8],[832,4],[838,1],[841,10],[853,8],[862,1],[866,6],[874,5],[882,3],[890,15],[907,8],[917,1],[920,8],[930,4],[935,4],[940,5],[950,6],[959,4],[964,1],[966,12],[982,3],[987,6],[996,3],[1000,8],[1009,4],[1016,1],[1018,8],[1028,6],[1035,3],[1039,6],[1047,10],[1058,2],[1061,8],[1070,4],[1084,4],[1092,10],[1106,9],[1121,4],[1127,1],[1130,10],[1142,4],[1151,5],[1157,1],[1159,8],[1177,5],[1183,1],[1185,12],[1210,12],[1225,1],[1227,8],[1248,3],[1252,7],[1261,10],[1272,7],[1280,10],[1295,4],[1300,4],[1309,10],[1324,10],[1336,5],[1345,6],[1355,12],[1369,4],[1374,4],[1380,15],[1398,8],[1408,4],[1413,4],[1418,6],[1429,8],[1439,4],[1444,4],[1449,6],[1462,2],[1465,10],[1476,3],[1482,4],[1487,5],[1493,3],[1499,4],[1504,11],[1517,10],[1528,8],[1539,6],[1547,1],[1552,1],[1557,1],[1562,10],[1573,8],[1584,6],[1592,1],[1597,1],[1602,1],[1607,10],[1618,4]]},"314":{"position":[[7,7],[15,7],[38,10],[49,9],[70,7],[80,6],[130,8],[160,7],[168,7],[191,8],[200,8],[212,4],[221,7],[229,4],[234,6],[244,7],[254,3],[260,4],[285,8],[299,4],[304,15],[320,6],[329,8],[340,6],[347,8],[356,4],[361,5],[379,4],[384,10],[395,6],[404,5],[412,6],[419,12],[432,4],[438,15],[454,8],[463,4],[468,6],[477,8],[486,4],[491,6],[505,3],[512,10],[529,4],[535,1],[538,10],[550,3],[558,5],[564,5],[570,1],[572,8],[582,3],[588,6],[597,4],[602,3],[607,2],[615,1],[617,12],[631,2],[635,2],[640,3],[644,7],[653,12],[666,6],[674,7],[682,3],[690,6],[699,1],[701,5],[709,3],[713,8],[722,3],[726,7],[735,7],[743,5],[752,1],[754,5],[761,3],[765,8],[777,3],[781,4],[788,1],[790,8],[800,3],[804,7],[813,8],[822,4],[827,6],[835,7],[843,3],[851,6],[867,11],[882,7],[900,4],[906,1],[909,10],[921,11],[933,3],[937,7],[945,7],[954,5],[962,6],[970,5],[978,3],[986,15],[1003,8],[1013,5],[1020,8],[1030,4],[1035,4],[1040,5],[1047,1],[1072,4],[1077,5],[1083,1],[1087,4],[1092,11],[1105,6],[1114,4],[1119,1],[1121,12],[1137,3],[1150,2],[1153,7],[1164,6],[1173,4],[1178,3],[1187,3],[1191,8],[1201,6],[1208,3],[1212,4],[1219,3],[1223,4],[1231,6],[1238,3],[1242,6],[1250,3],[1254,5],[1260,7],[1268,2],[1271,9],[1283,1],[1287,3],[1291,3],[1300,4],[1307,1],[1309,8],[1319,6],[1326,3],[1330,6],[1338,10],[1349,8],[1358,4],[1365,4],[1372,3],[1376,4],[1384,6],[1391,3],[1395,6],[1403,4],[1408,7],[1416,2],[1419,9],[1431,1],[1435,3],[1439,3],[1453,4],[1463,4],[1469,1],[1472,10],[1484,4],[1493,5],[1499,1],[1501,8],[1511,5],[1517,1],[1519,12],[1535,1],[1537,8],[1546,3],[1550,7],[1559,10],[1570,7],[1578,10],[1593,4],[1598,4],[1607,10],[1622,10],[1634,5],[1643,6],[1653,12],[1667,4],[1672,4],[1678,15],[1696,8],[1706,4],[1711,4],[1716,6],[1727,8],[1737,4],[1742,4],[1747,6],[1760,2],[1763,10],[1774,3],[1790,3],[1797,7],[1805,10],[1818,10],[1829,11],[1841,3],[1848,6],[1856,1],[1861,1],[1866,1],[1878,7],[1890,3],[1899,10],[1911,6],[1921,7],[1929,11],[1941,7],[1949,10],[1963,1],[1965,4],[1970,11],[1983,5],[1989,6],[1998,3],[2005,10],[2016,11],[2028,10],[2042,6],[2050,6],[2060,4],[2068,4],[2076,2],[2079,3],[2086,3],[2092,3],[2096,7],[2105,7],[2113,3],[2120,3],[2135,4],[2141,7],[2152,7],[2160,11],[2172,7],[2180,10],[2194,1],[2196,4],[2201,6],[2209,5],[2215,7],[2225,10],[2236,11],[2248,4],[2256,6],[2264,1],[2269,1],[2274,1],[2279,10],[2290,4]]},"316":{"position":[[0,14],[23,7],[31,7],[99,14],[171,7],[206,7],[240,14],[275,7],[316,7],[343,14],[363,8],[465,7],[476,8],[485,8],[527,14],[569,4],[574,7],[596,4],[605,9],[616,8],[660,1],[687,7],[715,7],[723,7],[736,15],[777,15],[795,18],[823,8],[834,8],[845,7],[853,4],[858,6],[868,7],[878,6],[887,3],[897,7],[914,4],[919,7],[927,9],[939,7],[947,3],[951,7],[959,7],[968,1],[971,7],[980,4],[989,4],[994,6],[1003,3],[1009,5],[1020,7],[1040,4],[1045,7],[1053,6],[1062,5],[1070,6],[1077,7],[1085,4],[1090,7],[1098,4],[1103,4],[1108,6],[1117,4],[1122,4],[1127,6],[1148,4],[1153,11],[1165,6],[1174,3],[1178,5],[1184,4],[1189,4],[1194,6],[1205,4],[1211,1],[1214,11],[1227,4],[1236,4],[1241,6],[1252,6],[1259,1],[1261,4],[1268,4],[1274,1],[1277,11],[1290,3],[1296,5],[1304,6],[1311,1],[1313,3],[1322,15],[1343,4],[1348,15],[1364,6],[1373,11],[1385,8],[1396,6],[1405,4],[1411,1],[1414,15],[1431,7],[1439,3],[1443,7],[1451,7],[1460,1],[1463,7],[1474,5],[1480,5],[1486,1],[1488,4],[1494,1],[1496,5],[1504,1],[1506,8],[1515,3],[1519,7],[1528,15],[1544,8],[1556,1],[1558,5],[1570,15],[1591,4],[1596,15],[1612,6],[1621,11],[1633,6],[1640,4],[1647,6],[1656,4],[1662,1],[1665,15],[1682,7],[1690,3],[1694,7],[1702,7],[1711,1],[1714,7],[1725,5],[1731,5],[1737,1],[1739,4],[1745,1],[1747,6],[1757,1],[1759,5],[1765,5],[1771,1],[1773,6],[1783,4],[1788,10],[1802,7],[1812,6],[1820,7],[1829,5],[1838,6],[1848,7],[1857,4],[1862,4],[1867,7],[1877,4],[1883,4],[1888,4],[1893,6],[1904,4],[1910,4],[1915,4],[1920,6],[1938,3],[1949,4],[1955,1],[1958,7],[1967,3],[1975,5],[1981,5],[1987,1],[1989,4],[1995,3],[2001,6],[2010,4],[2015,3],[2024,1],[2026,7],[2035,3],[2042,7],[2050,10],[2070,3],[2077,3],[2081,7],[2089,3],[2094,1],[2097,4],[2104,1],[2106,4],[2112,6],[2128,4],[2145,4],[2151,1],[2154,7],[2163,4],[2168,3],[2172,7],[2180,7],[2189,3],[2193,7],[2202,5],[2210,6],[2219,4],[2224,1],[2226,7],[2237,3],[2242,6],[2251,4],[2258,3],[2262,4],[2270,6],[2277,3],[2281,3],[2287,4],[2294,3],[2298,4],[2306,6],[2313,3],[2317,3],[2325,4],[2332,1],[2334,4],[2340,6],[2347,6],[2354,3],[2359,7],[2367,2],[2370,7],[2380,4],[2387,3],[2391,4],[2399,6],[2406,3],[2410,3],[2423,4],[2433,4],[2439,1],[2442,7],[2451,4],[2460,5],[2466,1],[2468,4],[2476,1],[2478,4],[2485,4],[2490,4],[2499,7],[2510,10],[2523,2],[2526,7],[2534,3],[2540,3],[2547,7],[2555,10],[2568,6],[2579,15],[2596,11],[2609,11],[2621,4],[2627,4],[2632,4],[2637,6],[2649,8],[2661,6],[2669,1],[2674,1],[2679,1],[2686,7],[2694,4],[2699,3],[2704,6],[2720,6],[2731,15],[2748,11],[2761,11],[2773,4],[2779,4],[2784,4],[2789,6],[2801,6],[2809,4],[2814,4],[2821,6],[2829,1],[2835,7],[2843,4],[2848,3],[2853,6],[2861,3],[2865,7],[2874,7],[2882,5],[2893,6],[2900,6],[2908,7],[2916,4],[2934,13],[2948,1],[2978,6],[2985,3],[2989,4],[3001,7],[3045,7],[3053,4],[3058,6],[3068,7],[3078,6],[3087,3],[3093,4],[3107,7],[3118,4],[3123,7],[3131,9],[3143,7],[3151,7],[3159,7],[3169,7],[3178,4],[3187,4],[3192,6],[3201,3],[3207,5],[3218,7],[3232,4],[3237,7],[3245,6],[3254,5],[3262,6],[3269,7],[3277,4],[3282,7],[3290,4],[3295,4],[3300,6],[3309,4],[3314,4],[3319,6],[3330,4],[3335,10],[3349,7],[3359,6],[3367,7],[3376,5],[3385,6],[3395,7],[3404,4],[3409,4],[3414,7],[3424,4],[3430,4],[3435,4],[3440,6],[3451,4],[3457,4],[3462,4],[3467,6],[3482,4],[3488,1],[3491,7],[3500,3],[3508,5],[3514,5],[3520,1],[3522,4],[3528,3],[3534,6],[3543,4],[3548,3],[3557,1],[3559,7],[3568,3],[3572,7],[3580,7],[3588,10],[3602,1],[3605,4],[3612,1],[3614,4],[3620,6],[3633,4],[3639,1],[3642,7],[3651,4],[3660,5],[3666,1],[3668,4],[3676,1],[3678,4],[3688,4],[3702,4],[3708,1],[3711,7],[3720,4],[3725,3],[3729,7],[3737,7],[3746,3],[3750,7],[3759,5],[3767,6],[3776,4],[3781,1],[3783,7],[3794,3],[3799,6],[3808,4],[3815,3],[3819,4],[3827,6],[3834,3],[3838,3],[3844,4],[3851,3],[3855,4],[3863,6],[3870,3],[3874,3],[3882,4],[3889,3],[3893,4],[3901,6],[3908,3],[3912,3],[3918,4],[3925,1],[3927,4],[3933,6],[3940,6],[3947,3],[3952,7],[3960,7],[3982,13],[3996,1],[4035,4],[4040,13],[4054,1],[4056,3],[4061,6],[4070,6],[4077,1],[4079,3],[4083,5],[4089,4],[4094,4],[4099,6],[4108,7],[4116,4],[4121,1],[4125,4],[4130,16],[4147,1],[4149,3],[4157,13],[4171,1],[4176,6],[4184,13],[4198,1],[4202,4],[4208,4],[4213,4],[4218,6],[4229,7],[4238,4],[4243,4],[4248,1],[4251,1],[4268,4],[4274,1],[4277,13],[4291,1],[4295,4],[4304,4],[4309,6],[4320,6],[4327,1],[4329,4],[4336,4],[4342,1],[4345,13],[4359,1],[4363,3],[4369,5],[4377,6],[4384,1],[4386,3],[4395,4],[4405,4],[4411,1],[4414,13],[4428,1],[4432,4],[4437,3],[4441,7],[4449,7],[4459,1],[4462,5],[4471,6],[4480,4],[4487,3],[4491,4],[4499,3],[4503,4],[4508,1],[4510,6],[4517,4],[4523,3],[4527,3],[4533,4],[4538,3],[4547,1],[4549,7],[4558,6],[4565,3],[4570,1],[4572,3],[4624,15],[4645,6],[4688,4],[4693,15],[4709,6],[4719,13],[4735,6],[4745,4],[4750,18],[4772,15],[4790,6],[4798,15],[4815,13],[4830,16],[4849,6],[4864,4],[4870,1],[4873,15],[4890,7],[4898,3],[4902,7],[4910,7],[4919,1],[4922,7],[4933,5],[4939,5],[4945,1],[4947,4],[4953,1],[4955,6],[4964,1],[4966,5],[4972,1],[4974,7],[4985,1],[4987,5],[5039,15],[5091,4],[5096,15],[5112,6],[5121,8],[5132,6],[5139,4],[5144,4],[5149,6],[5158,3],[5162,5],[5170,4],[5175,18],[5194,5],[5202,6],[5211,15],[5229,6],[5237,15],[5254,8],[5264,5],[5271,4],[5277,4],[5282,4],[5287,6],[5302,4],[5308,1],[5311,15],[5328,7],[5336,3],[5340,7],[5348,7],[5357,1],[5360,7],[5371,5],[5377,5],[5383,1],[5385,4],[5391,1],[5393,5],[5401,1],[5403,8],[5412,3],[5416,7],[5425,5],[5431,7],[5442,1],[5444,5],[5453,4],[5459,1],[5462,15],[5479,4],[5488,4],[5493,6],[5504,6],[5511,1],[5513,4],[5520,4],[5526,1],[5529,15],[5546,3],[5552,5],[5560,6],[5567,1],[5569,3],[5581,4],[5589,8],[5600,8],[5614,4],[5619,4],[5628,1],[5633,10],[5646,2],[5649,1],[5651,3],[5657,3],[5664,7],[5672,10],[5688,3],[5692,5],[5698,6],[5708,18],[5729,6],[5737,1],[5742,1],[5747,1],[5752,1],[5756,1],[5758,4],[5763,3],[5768,6],[5779,3],[5783,5],[5789,6],[5799,18],[5820,1],[5824,1],[5826,4],[5831,3],[5836,6],[5844,5],[5851,3],[5858,6],[5865,4],[5870,3],[5875,2],[5878,3],[5885,3],[5891,3],[5895,7],[5904,8],[5913,5],[5922,3],[5929,4],[5936,3],[5940,7],[5949,3],[5953,5],[5962,5],[5979,10],[5991,6],[6001,7],[6009,11],[6021,3],[6026,1],[6028,4],[6033,11],[6046,5],[6052,6],[6061,7],[6072,18],[6093,1],[6097,1],[6099,4],[6104,10],[6116,7],[6125,6],[6133,3],[6140,7],[6148,4],[6153,10],[6165,3],[6169,7],[6178,4],[6183,7],[6194,6],[6202,3],[6207,1],[6209,4],[6224,5],[6230,7],[6240,1],[6242,1],[6244,1],[6247,3],[6251,5],[6259,1],[6261,1],[6263,1],[6266,4],[6271,7],[6283,7],[6291,8],[6300,8],[6320,15],[6336,6],[6344,13],[6358,3],[6362,6],[6369,3],[6376,18],[6395,6],[6403,13],[6417,4],[6425,17],[6443,6],[6451,13],[6465,6],[6475,18],[6494,6],[6502,5],[6510,6]]},"319":{"position":[[7,10],[18,9],[28,9],[39,3],[45,5],[61,6],[68,1],[71,6],[133,2],[150,9]]},"321":{"position":[[23,3],[45,2]]},"324":{"position":[[16,4],[21,13],[35,6],[45,4],[51,1],[54,13],[69,4],[74,4],[79,6],[87,5],[95,3],[99,7],[113,5],[122,4],[128,6],[135,3],[141,4],[146,15],[162,6],[171,2],[175,13],[203,4],[209,1],[212,15],[229,8],[240,5],[248,6],[255,1],[257,2],[260,4],[278,15],[297,13]]},"326":{"position":[[10,4],[15,8],[24,9],[36,4],[41,4],[46,6],[54,5],[74,4],[79,13],[93,6],[103,4],[109,1],[112,13],[127,4],[132,4],[137,6],[145,5],[153,3],[157,7],[171,5],[180,4],[186,6],[193,3],[199,4],[204,18],[223,6],[233,4],[239,1],[242,18],[262,4],[267,4],[272,6],[280,5],[288,3],[292,7],[306,10],[320,4],[326,6],[333,3],[351,4],[356,15],[372,6],[381,2],[384,8],[409,4],[414,18],[433,2],[436,8],[447,15],[465,6],[473,15],[489,2],[493,2],[499,4],[505,1],[508,15],[525,8],[536,5],[544,6],[551,1],[553,2],[556,4]]},"329":{"position":[[7,6],[16,4],[21,6],[28,9],[40,3],[44,7],[52,6],[62,4],[67,13],[81,6],[90,4],[96,1],[99,13],[114,3],[118,7],[126,6],[136,3],[140,7],[148,7],[159,4],[164,7],[172,6],[181,6],[188,6],[197,4],[202,10],[213,6],[220,6],[229,7],[239,6],[247,7],[255,6],[263,6],[273,4],[279,1],[282,7],[291,6],[302,1],[304,6],[311,3]]},"331":{"position":[[0,4],[5,10],[16,9],[28,4],[33,2],[37,7],[46,4],[51,6],[59,5],[67,4],[72,11],[84,6],[93,4],[99,1],[102,11],[115,8],[124,5],[130,6],[138,6],[145,10],[157,5],[176,6],[183,6],[190,4],[195,5]]},"333":{"position":[[12,2],[18,7],[26,4],[31,4],[36,8],[45,9],[57,4],[62,4],[67,4],[73,5],[81,4],[86,7],[94,6],[103,2],[106,8],[130,4],[135,7],[143,6],[152,4],[158,1],[161,7],[170,4],[175,4],[180,4],[186,5]]},"336":{"position":[[3,7],[11,2],[14,4],[19,14],[34,9],[46,7],[54,2],[57,3],[64,4],[70,5],[77,4],[82,4],[88,4],[94,5],[105,7],[113,2],[116,4],[121,11],[133,6],[142,4],[147,14],[164,4],[169,14],[184,4],[189,14],[206,11],[220,6],[228,11],[240,4],[246,4],[266,5],[273,10],[285,7]]},"338":{"position":[[0,4],[5,7],[13,9],[25,6],[32,1],[34,4],[39,14],[55,1],[58,4],[63,7],[72,5],[80,4],[85,6],[92,6],[101,8],[110,3],[114,6],[121,7],[131,4],[137,1],[140,6],[148,8],[157,4],[162,6],[170,7],[178,7],[189,1],[191,8],[200,4],[208,7],[229,4],[234,11],[246,6],[255,7],[264,11],[278,4],[284,1],[287,11],[300,6],[307,1],[309,4],[314,14],[330,1],[333,4],[338,7],[347,5]]},"340":{"position":[[2,2],[9,2],[24,6],[31,4],[47,4],[52,2],[55,4],[60,21],[85,11],[99,4],[104,5],[110,14],[126,18],[146,6],[154,11],[170,3],[182,9],[195,3],[199,3],[205,9],[215,7],[223,18],[243,9],[253,7],[261,14],[277,2],[282,3],[289,2],[292,3],[297,2],[300,7],[308,18],[329,2],[332,7],[340,14],[357,2],[360,6],[367,4],[372,1],[375,11]]},"344":{"position":[[0,3],[19,2],[80,2],[95,3]]},"346":{"position":[[7,3],[52,3]]},"348":{"position":[[7,3],[13,6],[20,14],[35,9],[80,3],[86,4],[91,6],[98,9],[167,3],[173,6],[180,12],[193,9],[246,3],[252,9],[262,11],[274,9],[327,3],[333,10],[344,9],[354,9]]},"350":{"position":[[62,3],[66,2],[69,7],[115,3],[121,3],[125,1],[127,6],[134,8],[167,4],[174,4],[179,2],[182,6],[190,6],[217,5],[225,3],[229,4],[234,1],[236,5],[242,4],[247,2]]},"355":{"position":[[7,6],[14,12],[27,9],[38,3],[44,5],[60,7],[68,6],[87,1],[89,1],[100,1],[112,1],[136,2],[163,9],[177,6],[184,9]]},"360":{"position":[[10,4],[15,4],[20,9],[32,3],[38,6],[45,4],[52,6],[69,4],[74,7],[82,6],[91,4],[97,1],[100,7],[109,3],[115,6],[124,6],[141,4],[147,1],[150,7],[159,4],[166,6],[175,6],[200,4],[205,7],[213,6],[222,4],[228,1],[231,7],[240,3],[246,6],[255,6],[275,3],[284,4],[290,1],[293,7],[302,4],[309,6],[318,6],[340,7],[351,4],[362,3]]},"362":{"position":[[12,4],[17,5],[23,9],[35,3],[41,6],[50,4],[55,6],[62,9],[74,4],[81,6],[98,4],[103,10],[114,6],[123,4],[129,1],[132,10],[144,3],[150,6],[159,6],[182,4],[187,7],[195,6],[204,10],[217,4],[223,1],[226,7],[235,4],[242,6],[251,6],[274,4],[279,7],[287,6],[296,4],[302,1],[305,7],[314,4],[321,6],[330,6]]},"365":{"position":[[0,4],[5,16],[22,9],[34,14],[49,6],[56,7],[65,8],[74,6],[82,5],[98,4],[103,14],[118,6],[127,4],[133,1],[136,14],[152,14],[167,6],[174,7],[183,8],[192,6],[200,5],[208,2],[211,6],[221,1],[225,6],[232,6],[239,3],[250,1],[279,3],[284,4],[289,17],[307,6],[316,4],[322,1],[325,17],[344,14],[359,6],[366,7],[375,8],[384,6],[392,5],[405,6],[412,1],[423,2],[426,6],[435,1],[439,6],[446,6],[453,3]]},"367":{"position":[[0,4],[5,11],[17,9],[29,4],[34,4],[41,4],[48,6],[56,5],[70,2],[83,4],[88,11],[100,6],[109,4],[115,1],[118,11],[131,4],[136,4],[143,4],[150,6],[158,5],[167,2],[173,10],[198,6],[205,2],[209,3],[221,2],[236,3],[241,4],[246,17],[264,6],[273,4],[279,1],[282,17],[301,4],[306,4],[313,4],[320,6],[328,5],[337,2],[340,3],[344,4],[353,1],[357,6],[368,6],[375,3],[402,2],[408,10],[433,6],[441,3],[449,2],[453,3],[463,2]]},"370":{"position":[[0,6],[19,4],[24,6],[31,6],[40,4],[45,6],[54,4],[60,1],[63,6],[71,3],[77,6],[86,6],[93,1],[95,4],[121,6],[128,4],[133,3],[137,6],[146,6],[155,4],[161,1],[164,3],[169,4],[176,6],[185,6],[206,3],[214,3],[218,6],[225,4],[238,3],[242,7],[250,3],[254,3],[271,3],[275,7],[283,3],[287,4]]},"372":{"position":[[7,4],[12,12],[25,9],[37,7],[47,7],[57,7],[78,7],[86,4],[91,6],[98,6],[107,3],[111,9],[123,7]]},"374":{"position":[[10,5],[18,9]]},"376":{"position":[[0,3],[19,2],[76,3],[94,2],[97,1]]},"379":{"position":[[7,6],[14,14],[29,9],[40,3],[46,5],[62,6],[69,1],[72,6],[133,2],[148,6],[155,9]]},"387":{"position":[[5,3],[12,11],[31,4],[36,11],[48,6],[57,2],[61,3],[65,2],[70,4],[76,2],[80,11],[93,10],[104,4],[109,4],[115,5],[133,1],[136,3],[143,2],[146,2],[149,4],[155,6],[162,4],[167,5],[179,6],[194,6],[201,3],[207,4],[213,2],[217,11],[230,16],[247,4],[252,4],[258,5],[278,6],[285,9],[295,4],[300,5],[308,7],[320,7],[328,2],[331,3],[335,8],[349,4],[355,2],[359,11],[372,14],[392,4],[398,5],[419,4],[425,3],[432,2],[435,2],[438,5],[445,6],[454,4],[459,5],[475,4],[484,6],[491,10],[503,3]]},"389":{"position":[[10,4],[15,14],[30,6],[39,2],[43,3],[47,2],[52,4],[58,2],[62,14],[78,6],[85,4],[90,4],[96,5],[104,1],[107,3],[114,2],[117,2],[120,4],[126,6],[133,4],[138,5],[150,6],[165,6],[172,3],[178,4],[184,2],[188,14],[204,6],[216,4],[222,5],[231,4],[237,3],[244,2],[247,2],[250,5],[257,6],[266,4],[271,5],[287,4],[298,6],[305,5],[312,3],[328,4],[333,12],[346,6],[355,10],[366,6],[375,4],[381,2],[385,12],[399,16],[416,4],[421,4],[427,5],[435,6],[442,9],[452,4],[457,5],[465,7],[477,7],[485,2],[488,3],[492,8],[516,4],[521,15],[537,6],[546,8],[556,14],[573,4],[579,2],[583,15],[600,18],[624,4],[630,5],[639,5],[646,3],[653,2],[656,8],[665,6],[691,6],[698,10],[710,3],[725,11]]},"392":{"position":[[11,4],[16,10],[27,9],[39,6],[46,4],[51,4],[57,5],[63,7],[71,2],[74,3],[81,4],[87,5],[96,4],[101,11],[113,9],[125,4],[130,2],[134,7],[143,4],[148,6],[156,5]]},"394":{"position":[[0,4],[5,11],[17,6],[26,4],[31,14],[46,5],[52,12],[65,6],[72,15],[90,4],[96,2],[100,11],[113,15],[129,4],[134,4],[140,5],[148,2],[151,3],[158,2],[161,4],[166,6],[173,4],[180,3],[187,3],[193,6],[200,3],[206,6],[213,2],[216,5],[222,16],[239,4]]},"396":{"position":[[17,4],[22,15],[38,4],[45,4],[52,4],[58,5],[70,1],[81,1],[92,1],[105,1],[136,4],[141,16],[158,4],[165,4],[171,5],[180,4],[185,13],[199,4],[206,4],[213,4],[219,5],[229,4],[234,8],[243,4],[248,4],[254,5],[263,4],[268,17],[286,4],[291,4],[297,5]]},"399":{"position":[[50,29]]},"403":{"position":[[0,3],[20,2],[40,3],[58,3],[70,3]]},"406":{"position":[[5,4],[10,6],[17,9],[28,3],[34,5],[50,8],[59,5],[105,2],[124,9],[138,11]]},"411":{"position":[[16,4],[21,13],[35,9],[47,3],[51,6],[58,7],[67,5],[86,4],[91,17],[109,6],[118,4],[124,1],[127,17],[146,3],[150,6],[157,7],[166,5],[174,3],[178,6],[191,2],[201,1],[205,6],[213,6],[220,3],[237,4],[242,13],[256,6],[265,4],[271,1],[274,13],[289,3],[293,6],[300,7],[309,5],[317,3],[321,6],[334,2],[344,1],[348,6],[356,6],[363,3],[386,4],[391,16],[408,6],[417,6],[424,13],[440,4],[446,1],[449,16],[467,14],[482,6],[489,7],[498,5],[506,6],[513,1],[515,6],[522,3],[526,6]]},"413":{"position":[[19,4],[24,13],[38,6],[47,4],[53,1],[56,13],[71,3],[75,6],[82,7],[91,5],[99,3],[103,6],[116,2],[127,1],[131,6],[139,6],[146,3],[160,4],[165,4],[174,9],[188,16],[205,6],[214,13],[231,9],[241,14],[256,3],[260,2]]},"416":{"position":[[0,4],[5,11],[17,3],[21,5],[29,10],[40,11],[54,4],[59,6],[80,4],[85,14],[100,11],[112,11],[125,6],[132,7],[141,5],[149,6],[156,11],[170,4],[175,10],[187,3],[191,6],[204,2],[214,1],[218,6],[226,4],[231,6],[239,3],[243,6],[256,2],[266,1],[270,6],[278,7],[287,6],[294,3],[298,6],[319,6],[326,3],[348,14]]},"418":{"position":[[10,4],[15,13],[29,9],[41,3],[45,6],[52,7],[61,5],[83,4],[88,14],[103,6],[112,7],[120,3],[124,6],[131,13],[147,4],[153,1],[156,14],[172,8],[181,4],[186,6],[194,6],[201,13],[218,1],[220,7],[228,4],[236,6],[245,4],[251,1],[254,14],[270,7],[278,4],[283,6],[291,6],[298,7],[307,5],[315,2],[318,6],[326,2],[332,1],[334,7],[342,4],[349,2],[354,6],[361,6],[368,3],[372,6],[382,6],[389,3],[393,6]]},"421":{"position":[[0,4],[5,6],[12,6],[21,4],[26,6],[33,4],[38,3],[42,7],[50,4],[55,8],[66,4],[71,6],[78,4],[84,6],[92,4],[97,8],[106,4],[111,6],[119,6],[128,6],[135,4],[140,1],[143,6],[153,1],[155,4],[162,4],[171,4],[176,8],[185,4],[190,3],[195,6],[204,6],[211,4],[216,1],[219,6],[229,1],[231,4],[238,4],[247,4],[252,9],[262,4],[270,6],[279,6],[288,1],[294,6],[302,4],[309,9],[321,4],[327,4],[333,7],[342,2],[347,4],[352,6],[362,3],[366,1],[369,3],[376,5],[382,4],[389,3],[393,1],[398,6],[405,1]]},"423":{"position":[[0,4],[5,7],[13,4],[18,4],[23,14],[40,4],[45,7],[54,4],[59,17],[77,4],[82,7],[91,7],[101,6],[108,4],[113,1],[115,4],[120,14],[136,1],[139,4],[144,7],[155,3],[159,6],[174,1],[177,1],[181,1],[183,6],[191,1],[193,3],[197,4],[203,4],[208,1],[211,1],[214,3],[218,6],[233,1],[236,1],[240,1],[242,6],[250,1],[252,3],[256,4],[266,4],[271,14],[286,4],[291,7],[300,7],[310,6],[317,4],[322,1],[324,4],[329,14],[345,1],[348,4],[353,7],[364,2],[367,1],[369,6],[376,3],[381,13],[405,4],[410,5],[416,1],[426,4],[431,18],[451,6],[460,4],[465,1],[468,1]]},"425":{"position":[[41,5],[47,7],[55,5],[87,3],[94,3]]},"429":{"position":[[0,1],[2,1],[4,1],[22,6],[41,4],[46,6],[53,9],[65,3],[69,5],[75,6],[83,7],[91,6],[99,5],[105,5],[113,5],[121,1],[123,1],[125,1],[148,13],[170,4],[175,13],[189,6],[222,4],[227,16],[247,13],[263,6],[271,13],[289,4],[295,1],[298,13],[313,3],[317,5],[323,6],[331,7],[339,6],[347,5],[355,1],[358,3],[365,3],[369,6],[379,1],[383,1],[385,1],[389,5],[396,7],[405,6],[412,3],[418,4],[424,1],[427,13],[442,5],[450,5],[473,6],[480,3],[496,10],[514,4],[519,10],[530,6],[539,4],[545,2],[548,4],[555,4],[560,13],[574,8],[583,6],[593,10],[605,5],[614,4],[620,3],[627,2],[630,8],[639,8],[649,2],[652,8],[652,1],[654,6],[661,2],[664,8],[664,1],[666,6],[673,2],[676,8],[676,1],[678,6],[686,4],[692,2],[695,3],[702,3],[708,6],[715,3],[720,3],[726,6],[734,10],[745,4],[751,4],[758,3],[764,4],[770,1],[773,10],[785,3],[789,5],[795,6],[803,7],[811,6],[819,5],[827,1],[830,3],[837,3],[841,7],[849,1],[851,4],[860,1],[864,1],[867,1],[869,1],[873,4],[878,3],[884,6],[892,4],[897,2],[900,2],[903,2],[906,2],[909,2],[915,5],[922,7],[931,6],[938,3],[944,4],[950,1],[953,10],[965,5],[973,5],[981,6],[988,1],[990,4],[995,5]]},"431":{"position":[[3,15],[28,4],[33,15],[49,6],[58,7],[68,6],[77,4],[82,18],[101,7],[112,6],[121,15],[139,6],[147,15],[163,7],[172,7],[183,4],[189,1],[192,15],[209,3],[213,5],[219,6],[227,7],[235,6],[243,5],[251,3],[255,1],[258,6],[268,5],[274,1],[276,7],[286,2],[289,3],[296,6],[303,3],[307,5],[314,7],[324,3],[331,3],[337,6],[344,3],[352,6],[359,3],[365,4],[371,1],[374,15],[391,5],[399,5],[407,3],[411,1],[414,6],[424,5],[430,1],[432,7],[442,2],[445,3],[452,6],[459,5],[468,3],[475,3],[481,6],[488,3],[496,6],[503,3]]},"433":{"position":[[3,10],[21,4],[26,10],[37,6],[44,5],[52,13],[66,10],[80,7],[89,10],[100,10],[114,4],[130,13],[149,12],[167,4],[172,12],[185,6],[194,4],[199,10],[210,8],[219,6],[242,19],[272,4],[277,19],[297,6],[304,12],[319,6],[327,5],[336,6],[343,6],[350,4],[357,4],[362,13],[377,6],[384,16],[404,3],[408,4],[413,10],[425,6],[432,13],[446,6],[453,8],[463,7],[472,6],[479,3],[484,3],[488,6],[506,1],[510,6],[517,4]]},"435":{"position":[[32,13],[53,4],[58,13],[72,6],[81,8],[90,6],[97,6],[105,4],[110,6],[119,4],[124,16],[141,8],[150,6],[159,13],[175,6],[183,13],[198,8],[208,8],[218,6],[227,4],[232,6],[239,7],[248,1],[252,4],[257,6],[270,4],[276,1],[279,13],[294,3],[298,5],[304,6],[312,7],[320,6],[328,5],[336,4],[344,3],[348,6],[355,6],[364,5],[372,5],[380,7],[390,7],[400,4],[407,4],[412,3],[418,6],[425,4],[430,7],[442,8],[452,1],[457,4],[462,7],[470,4],[476,4],[482,3],[489,1],[491,6],[498,4],[503,1],[505,8],[516,11],[528,4],[535,5],[541,9],[551,8],[562,2],[565,3],[572,3],[578,6],[585,3],[591,5],[597,4],[602,4],[607,5],[615,2],[618,4],[623,10],[637,3],[643,6],[650,3],[654,6],[677,1],[681,4],[686,10],[700,6],[707,3],[713,4],[719,1],[722,13],[737,5],[745,5],[770,6],[777,3]]},"437":{"position":[[0,4],[5,4],[26,13],[43,16],[73,10],[85,3],[92,13],[107,3],[111,3],[117,2],[120,3],[127,3],[133,5],[139,3],[157,15],[176,18],[195,13],[210,10],[230,15],[246,3],[251,4],[268,15],[284,3],[289,4],[308,15],[324,3],[329,5],[359,2],[362,3],[369,15],[385,5],[394,3],[401,3],[407,3],[411,6],[430,1],[432,1],[436,3],[455,13],[472,16],[490,4],[497,3],[501,6],[508,7],[516,3],[520,3],[526,14],[544,18],[563,13],[578,10],[590,13],[605,14],[620,3],[625,4],[653,14],[668,5]]},"439":{"position":[[0,3],[18,2],[33,3],[52,3]]},"442":{"position":[[7,16],[7,6],[14,9],[26,6],[34,3],[38,3],[42,10],[53,3],[57,3],[61,8],[70,10],[96,5],[102,9],[102,3],[106,5],[112,5],[118,10],[118,4],[123,5],[129,5],[135,11],[135,5],[141,5],[157,3],[229,7],[237,8],[237,1],[239,6],[247,7],[256,6],[265,4],[272,9],[300,6],[324,6],[331,18],[331,6],[338,5],[344,5],[350,1],[357,6],[364,3],[369,1],[372,4],[379,6],[388,1],[395,3],[409,17],[409,3],[413,3],[417,2],[420,6],[427,1],[429,3],[433,5],[439,4],[444,7],[492,3],[499,3]]},"445":{"position":[[52,2]]},"448":{"position":[[0,7],[8,4],[13,6],[21,3],[32,4],[37,5],[43,9],[55,4],[71,4],[76,6],[83,6],[92,4],[98,1],[100,6],[108,4],[117,3],[121,7],[130,7],[138,6],[149,4],[154,6],[161,6],[170,4],[176,1],[178,6],[186,4],[195,3],[199,7],[208,7],[216,6],[235,4],[240,12],[253,9],[263,6],[271,5],[279,6],[286,9],[298,4],[304,6],[313,6],[320,6],[329,4],[335,6],[344,6],[351,6],[360,7],[369,6],[376,3],[384,4],[389,4],[398,2],[404,12],[418,6],[427,2],[433,12],[447,6],[456,2],[459,4],[466,2],[469,4]]},"450":{"position":[[8,4],[13,4],[18,9],[30,4],[37,4],[43,5],[49,7],[62,4],[68,5],[87,4],[92,7],[100,7],[108,6],[116,4],[121,6],[130,4],[136,5],[145,6],[152,7],[162,4],[168,3],[174,6],[182,7],[190,4],[196,4],[203,3],[207,4],[213,4],[220,6],[228,8],[237,4],[243,4],[250,3],[254,4],[260,4],[267,6],[275,8],[284,3],[289,4],[296,3],[300,7],[309,6],[316,3],[321,3],[325,6],[333,11],[345,7],[367,4],[372,4],[381,4],[387,1],[392,7],[401,4],[409,5],[417,3],[421,7],[429,3],[435,4],[440,4],[447,4],[453,3]]},"452":{"position":[[35,3]]},"455":{"position":[[0,7],[8,4],[13,6],[21,3],[32,4],[37,11],[49,9],[61,7],[79,4],[84,14],[99,6],[108,4],[114,1],[116,14],[132,7],[144,3],[148,7],[157,5],[163,9],[177,4],[182,17],[200,6],[209,4],[215,1],[217,17],[236,7],[248,3],[252,7],[261,8],[270,9],[292,4],[297,9],[307,9],[319,15],[337,11],[359,4],[364,12],[377,6],[386,4],[392,1],[394,12],[408,15],[426,11],[440,6],[447,14],[466,4],[471,15],[487,6],[496,4],[502,1],[504,15],[521,15],[539,11],[553,6],[560,17],[582,4],[587,4],[596,3],[600,7],[608,9],[618,7],[628,12],[643,4],[651,7],[659,15],[677,4],[682,7],[692,7],[702,15],[720,4],[727,7],[735,15],[753,4],[758,7]]},"457":{"position":[[8,4],[13,6],[20,9],[32,3],[36,5],[42,6],[50,3],[54,6],[72,4],[77,13],[91,9],[103,6],[112,6],[131,4],[136,10],[147,6],[156,4],[161,6],[170,4],[176,1],[179,10],[191,3],[195,5],[202,3],[206,6],[228,4],[233,17],[251,6],[260,4],[265,6],[274,4],[280,1],[283,17],[302,6],[311,6],[320,6],[328,10],[339,4],[345,1],[347,4],[366,4],[371,13],[385,6],[394,4],[400,1],[403,13],[418,3],[422,5],[429,3],[433,6],[443,3],[447,6],[457,1],[461,1],[463,1],[467,5],[474,3],[481,4],[486,20],[507,6],[516,4],[522,1],[525,20],[547,6],[556,6],[565,6],[573,13],[599,4],[604,16],[621,3],[625,6],[633,13],[649,2],[652,3],[660,10],[674,6],[682,17],[700,4],[708,3],[712,3],[716,3],[720,3],[728,6],[736,20],[761,4],[766,4],[775,7],[786,16],[803,2],[806,6],[814,7],[814,3],[818,3],[825,6],[835,7],[843,6],[852,6],[859,3],[864,4],[872,11],[884,7]]},"462":{"position":[[0,7],[8,4],[13,6],[21,3],[35,4],[40,6],[47,9],[59,5],[69,4],[74,7],[82,9],[94,4],[106,7],[117,4],[122,13],[136,6],[145,4],[151,13],[166,5],[176,3],[180,7],[189,7],[197,6],[208,4],[213,14],[228,6],[237,4],[243,14],[259,4],[268,3],[272,7],[281,7],[289,7],[304,3],[311,4],[316,9],[326,6],[335,4],[341,9],[352,5],[362,3],[366,7],[375,3],[379,6],[390,4],[395,10],[406,6],[415,4],[421,10],[433,4],[442,3],[446,7],[455,3],[459,7],[481,4],[486,10],[497,9],[509,12],[524,6],[531,13],[547,7],[565,4],[570,14],[585,6],[594,4],[600,14],[616,12],[631,6],[640,6],[647,13],[665,4],[671,14],[687,13],[703,7],[713,6],[720,14],[739,4],[744,10],[755,6],[764,4],[770,10],[782,12],[797,6],[806,6],[813,9],[827,4],[833,10],[845,13],[861,7],[871,6],[878,10],[899,4],[904,4],[913,3],[917,7],[925,10],[936,7],[946,14],[963,7],[971,12],[986,5],[994,7],[1002,13],[1018,4],[1025,7],[1035,10],[1048,7],[1056,12],[1071,5],[1079,7],[1087,13],[1103,4]]},"466":{"position":[[0,7],[8,4],[13,6],[21,3],[26,4],[31,6],[38,9],[50,5],[60,4],[65,3],[69,6],[78,4],[84,3],[89,5],[99,3],[103,7],[112,4],[122,4],[127,3],[131,6],[140,4],[146,3],[151,5],[161,3],[165,7],[174,4],[184,3],[188,14],[205,4],[210,3],[214,6],[221,4],[228,6],[236,4],[241,14],[256,4],[261,6],[269,7],[277,4],[284,6],[294,14],[309,4],[317,7],[327,4],[332,9],[342,4],[347,6],[355,6],[364,2],[367,1],[370,2],[376,14],[391,4],[398,2],[403,6],[410,1],[416,6],[423,3],[429,4],[434,4],[443,14],[459,3],[465,4],[472,6],[481,6],[488,3],[497,14],[513,3],[519,4],[526,6],[535,6],[542,3],[551,9],[562,3],[568,5],[576,9],[587,3],[593,5]]},"470":{"position":[[30,2]]},"475":{"position":[[0,6],[37,6],[47,6],[54,3],[58,1],[60,6],[67,6],[79,6]]},"477":{"position":[[0,6],[10,2],[26,2],[29,3],[33,6],[40,3],[44,1],[46,6],[53,6]]},"480":{"position":[[0,7],[8,4],[13,6],[23,3],[29,6],[36,3],[40,1],[42,6],[49,6],[59,4],[64,4],[73,8],[86,18],[86,2],[89,6],[96,8],[112,6],[122,14],[138,3],[145,6],[152,20],[175,4],[180,8],[191,6],[198,11],[211,2],[214,3],[221,3],[227,3],[231,7],[240,5],[246,10],[257,4],[265,3],[270,6],[279,3],[283,7],[292,6],[299,8],[311,6],[318,14],[340,6],[347,20],[370,4],[375,8],[386,6],[393,11],[414,6],[421,11],[442,2],[452,6],[459,7],[472,6],[479,7],[509,6]]},"482":{"position":[[0,7],[8,4],[13,6],[23,3],[29,6],[36,3],[40,1],[42,6],[49,6],[59,4],[64,4],[73,8],[86,18],[86,2],[89,6],[96,8],[106,14],[126,2],[129,2],[132,53],[206,3],[213,6],[220,22],[245,4],[250,14],[269,4],[274,8],[285,2],[288,3],[295,3],[301,3],[305,7],[314,8],[323,9],[337,4],[344,3],[348,7],[357,8],[366,7],[383,6],[390,22],[413,14],[429,8],[462,3],[471,5]]},"484":{"position":[[18,11],[34,19],[34,3],[38,6],[45,8],[55,17],[74,1],[79,6],[86,20],[109,4],[114,11],[128,6],[135,11],[148,3],[152,7],[161,7],[169,6],[176,8],[188,6],[195,17]]},"486":{"position":[[17,6],[24,4],[41,4],[47,3],[54,6],[61,4],[68,4],[73,14],[90,2],[93,3],[100,3],[107,4],[114,6],[121,11],[135,3],[139,7],[148,8],[157,4],[162,2],[165,8],[175,8],[184,8],[210,6],[217,4],[236,2],[251,5],[257,15],[275,2],[278,4],[283,19],[303,10],[314,6],[322,8],[331,6],[339,6],[348,4],[354,3],[361,6],[368,4],[375,4],[380,10],[393,2],[396,3],[403,3],[409,3],[413,7],[422,5],[428,7],[436,4],[444,3],[449,6],[456,10],[489,2],[492,4],[499,15],[517,7],[526,3],[533,6],[540,20],[563,4],[568,8],[579,15],[596,2],[599,3],[606,3],[612,3],[616,7],[625,5],[631,9],[641,4],[649,3],[654,6],[661,10],[674,3],[678,7],[687,8],[696,4],[701,8],[713,6],[720,6],[727,7],[738,6],[745,10]]},"488":{"position":[[74,6]]},"490":{"position":[[0,6],[7,20],[38,6],[45,22],[76,6],[83,4],[107,5],[114,3],[118,6],[165,4],[170,4],[186,1],[191,3],[196,2],[203,2],[210,2],[216,6],[224,1],[229,3],[233,3],[238,1],[243,3],[247,3],[254,6],[264,2],[267,2],[270,31],[302,21],[325,2],[334,6],[344,2],[354,4],[359,6],[367,22],[394,4],[400,9],[410,21]]},"493":{"position":[[0,2],[3,4],[25,2]]},"495":{"position":[[0,4],[5,7],[27,3]]},"497":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[32,4],[40,4],[45,4],[54,3],[61,4],[66,7],[75,2],[82,1],[91,5],[97,5],[126,6],[134,3],[141,3],[145,14],[162,2],[165,3],[172,3],[178,3],[182,7],[191,5],[200,3],[205,6],[214,3],[218,7],[226,6],[233,6]]},"499":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[32,4],[40,4],[45,4],[54,3],[61,4],[66,7],[75,2],[82,1],[86,6],[94,3],[101,3],[105,6],[114,2],[117,3],[124,3],[130,3],[134,7],[143,5],[152,3],[157,6],[166,3],[170,7],[179,6],[189,6],[196,6]]},"502":{"position":[[0,7],[8,4],[13,6],[23,5],[31,3],[37,2],[40,4],[48,4],[53,4],[62,3],[69,4],[74,7],[83,4],[91,5],[98,5],[107,3],[111,3],[115,5],[121,6],[128,3],[132,6],[142,3],[146,2],[149,3],[156,3],[160,3],[167,3],[174,3],[180,3],[184,7],[193,5],[202,3],[209,3],[213,7],[222,6],[232,3],[236,6]]},"504":{"position":[[0,10],[31,7],[39,4],[44,6],[54,5],[62,3],[68,2],[71,4],[79,4],[84,4],[93,3],[100,4],[105,7],[114,4],[122,5],[128,3],[136,1],[141,2],[146,6],[154,3],[161,3],[165,10],[178,2],[181,3],[188,3],[194,3],[198,7],[207,5],[213,8],[222,10],[236,3],[241,6],[250,2],[253,3],[260,3],[264,5],[273,3],[280,3],[286,3],[290,7],[299,5],[305,8],[314,7],[325,3],[330,6],[339,7],[350,5],[356,10],[367,6],[375,3],[379,7],[387,4],[396,3],[400,7],[409,6],[416,4],[424,7],[432,4],[442,2],[445,3],[452,3],[456,4],[464,3],[471,3],[477,3],[481,7],[490,5],[496,7],[504,3],[508,7],[519,3]]},"506":{"position":[[0,7],[8,4],[13,6],[23,5],[31,3],[37,2],[40,4],[48,4],[53,4],[62,3],[69,4],[74,7],[83,3],[89,3],[93,3],[97,5],[103,6],[110,3],[114,6],[124,3],[128,3],[132,5],[140,5],[146,15],[163,5],[169,4],[174,5],[183,2],[186,3],[193,3],[197,3],[204,3],[211,3],[217,3],[221,7],[230,5],[239,3],[246,3],[250,7],[259,6],[269,3],[273,6]]},"508":{"position":[[0,3],[7,4],[12,7],[21,8],[32,3],[36,3],[42,6],[49,3],[53,3],[59,6],[59,2],[62,3],[66,10]]},"510":{"position":[[0,7],[8,4],[13,6],[23,7],[33,3],[39,2],[42,4],[49,4],[57,4],[62,4],[71,3],[76,6],[86,7],[94,11],[106,7],[114,10],[128,1],[130,4],[135,6],[143,5],[149,6],[158,3],[165,4],[170,14],[185,3],[191,5],[200,1],[204,2],[207,3],[214,3],[218,3],[225,3],[232,3],[238,3],[242,7],[251,7],[259,5],[265,3],[269,2],[272,6],[282,3]]},"512":{"position":[[0,7],[8,5],[14,6],[24,2],[29,2],[32,4],[39,7],[53,3],[57,8],[66,1],[68,5],[74,7],[82,7],[90,9],[100,3],[104,6],[112,4],[117,3],[121,7],[129,6],[137,5],[145,3],[152,14],[167,7],[176,6],[183,3],[187,3],[198,13],[212,8],[221,1],[223,5],[229,7],[237,3],[241,7],[249,3],[253,8],[262,6],[269,3],[273,6],[280,6],[288,4],[293,13],[307,7],[315,6],[326,4],[332,5],[341,3],[348,14],[363,7],[372,6],[379,3],[383,14],[405,15],[421,8],[430,1],[432,5],[438,7],[446,3],[450,7],[458,3],[462,6],[469,5],[475,4],[480,3],[484,4],[489,4],[495,4],[500,15],[516,7],[524,6],[535,4],[541,3],[546,5],[555,3],[562,14],[577,7],[586,6],[594,3],[601,3],[605,14],[622,2],[625,3],[632,3],[638,2],[641,7],[650,2],[656,3],[662,4],[667,9],[679,2],[684,6],[691,6],[699,7],[707,8],[719,3],[725,6],[732,6],[741,1],[744,3],[750,6],[757,6],[765,1],[768,3],[777,14],[792,11],[804,2],[808,4],[813,3],[817,4],[822,11],[834,9],[845,4],[850,14],[865,7],[873,6],[882,4],[887,3],[893,4],[901,7],[909,6],[916,7],[925,2],[928,3],[932,4],[941,1],[945,6],[952,4],[957,7],[984,5],[992,3],[999,4],[1004,7],[1012,4],[1017,1],[1021,4],[1026,1],[1034,3],[1038,3],[1044,6],[1051,2],[1054,7],[1066,6],[1066,2],[1069,3],[1073,1],[1078,4],[1083,1],[1087,6],[1094,3]]},"514":{"position":[[0,7],[8,4],[16,4],[22,5],[28,5],[38,4],[43,5],[49,6],[59,5],[67,3],[73,2],[76,4],[84,4],[89,4],[98,4],[106,4],[111,7],[120,4],[128,5],[135,5],[144,4],[152,4],[157,7],[166,4],[174,5],[190,4],[196,3],[203,4],[208,10],[221,2],[224,3],[231,3],[237,3],[241,7],[250,5],[256,8],[265,4],[273,3],[278,6],[287,4],[292,5],[300,4],[305,3],[309,3],[313,5],[319,6],[326,4],[331,6],[341,3],[356,2],[359,3],[366,4],[371,5],[380,3],[387,3],[393,3],[397,7],[406,5],[412,8],[421,4],[429,3],[434,6],[454,2],[457,3],[464,4],[469,5],[478,3],[485,3],[491,3],[495,7],[504,5],[510,8],[519,4],[527,3],[532,6],[553,2],[556,3],[563,4],[568,4],[576,3],[583,3],[589,3],[593,7],[602,5],[608,7],[616,3],[620,4],[628,3],[633,6],[642,2],[645,3],[652,4],[657,4],[665,3],[672,3],[678,3],[682,7],[691,5],[697,7],[705,3],[709,4],[717,3],[722,6],[731,3],[735,7],[744,8],[753,6],[763,3],[767,6]]},"516":{"position":[[0,4],[5,7],[26,6],[35,6],[54,10],[78,6],[97,14],[129,5],[147,4],[152,14],[176,2],[179,4],[192,2]]},"519":{"position":[[0,4],[5,4],[12,2],[36,9],[58,9]]},"522":{"position":[[18,9],[59,9],[127,4],[132,4],[157,9]]},"524":{"position":[[0,4],[5,4],[10,6],[19,6],[26,6],[33,1],[35,6],[52,6],[59,10]]},"527":{"position":[[0,4],[5,7],[13,1],[15,6],[24,4],[33,3],[37,2],[40,4],[45,5],[51,4],[59,4],[64,7],[73,2]]},"529":{"position":[[0,4],[6,1],[9,4],[15,4],[45,9]]},"531":{"position":[[0,4],[6,1],[9,4],[15,6],[32,9]]},"533":{"position":[[0,4],[6,1],[9,4],[15,9],[35,9]]},"536":{"position":[[0,2],[3,4],[13,2],[21,4],[27,4],[34,4],[39,1],[41,4],[53,2],[61,4],[66,1],[76,3],[81,9],[98,3],[126,4],[131,4],[153,2],[156,6]]},"538":{"position":[[0,7],[8,4],[13,6],[23,3],[29,4],[36,4],[44,3],[50,5],[58,3],[62,4],[69,4],[74,5],[82,4],[89,4],[94,7],[103,4],[111,4],[116,8],[125,2],[128,3],[135,3],[141,4],[146,1],[148,4],[155,3],[159,3],[163,5],[173,1],[177,4],[182,4],[191,4],[199,5],[205,1],[208,5],[216,5],[222,1],[226,3],[230,6],[238,8],[248,1],[250,3],[254,4],[261,1],[263,1],[267,2],[271,4],[277,4],[282,1],[284,6],[293,4],[298,5],[304,3],[310,4],[315,11],[332,4],[337,8],[350,3],[354,1],[359,1],[362,1],[366,1],[369,1],[375,4],[380,1],[382,4],[389,5],[397,6],[404,5],[411,1],[414,3],[418,6],[426,8],[435,5],[441,4],[448,1],[450,1],[454,1],[457,4],[462,6],[476,4],[481,9],[493,4],[498,1],[500,6],[551,4],[556,5],[562,1],[566,4],[571,6],[583,4],[588,4],[597,3],[601,1],[606,1],[609,1],[613,1],[616,1],[622,2],[625,8],[634,1],[639,8],[652,4],[657,5],[663,2],[668,4],[673,6]]},"540":{"position":[[9,4],[15,4],[74,6],[83,9],[98,6],[114,9],[124,9],[142,9],[166,7],[184,4]]},"542":{"position":[[8,4],[14,1],[17,6],[25,16],[46,1],[48,2],[51,4],[58,5],[64,1],[66,2],[69,6],[78,3],[83,1],[85,9],[97,1],[99,4],[104,4],[118,5],[133,4],[166,7]]},"544":{"position":[[3,4],[8,4],[13,7],[36,6],[45,5],[63,6],[70,9],[117,7],[132,4]]},"546":{"position":[[0,4],[5,4],[12,2]]},"548":{"position":[[2,6],[15,9]]},"550":{"position":[[0,6],[11,7],[22,9]]},"552":{"position":[[5,7],[44,2]]},"554":{"position":[[0,7],[8,4],[13,6],[23,3],[29,4],[37,4],[42,6],[49,2],[52,4],[57,6],[67,4],[72,5],[78,1],[82,4],[87,6],[95,2],[110,4],[115,4],[124,2],[130,4],[135,4],[140,6],[159,7],[167,2],[170,6],[177,2],[187,9],[197,3],[201,7],[222,3],[231,2],[246,3],[250,7],[267,3],[278,2],[284,4],[289,4],[294,6],[312,7],[321,2],[324,6],[331,2],[342,6],[353,7],[367,3],[376,2],[391,6]]},"556":{"position":[[0,6],[15,7],[45,7],[53,4],[58,6],[68,3],[74,4],[82,4],[87,4],[96,3],[103,4],[108,4],[113,6],[121,3],[128,4],[133,4],[138,6],[152,9],[164,3],[173,2],[176,4],[185,4],[190,5],[196,1],[200,4],[205,6],[213,3],[221,7],[229,4],[234,3],[249,9],[261,3],[270,2],[273,4],[282,4],[287,5],[293,1],[297,4],[302,6],[310,3],[318,7],[326,4],[331,3],[344,6],[358,7],[367,6],[376,4],[381,4],[391,3],[396,3],[400,7],[409,8],[421,4],[427,4],[432,4],[442,3],[447,3],[451,7],[460,8],[472,4],[478,4],[485,4],[490,5],[496,1],[500,4],[505,6],[514,3],[518,7],[527,7],[536,2],[539,7],[547,8],[567,6],[577,3],[583,3],[590,7],[611,4],[620,1],[633,4],[640,4],[645,5],[651,1],[655,4],[660,6],[689,7],[710,4],[715,5],[724,6]]},"558":{"position":[[20,6]]},"560":{"position":[[5,9],[28,4],[33,9],[57,7],[65,4],[70,6],[80,3],[86,4],[93,4],[101,4],[106,6],[113,2],[116,3],[121,2],[125,4],[130,9],[143,5],[149,2],[152,4],[172,3],[176,6],[184,6],[192,1],[202,1],[206,2],[210,4],[215,5],[221,1],[225,4],[230,6],[238,3],[242,6],[250,6],[258,1],[266,1],[270,2],[276,4],[281,4],[290,3],[294,2],[297,4],[302,9],[312,3],[316,1],[321,1],[324,1],[329,1],[332,1],[338,2],[341,3],[345,1],[356,2],[359,6],[366,1],[370,2],[380,9],[392,2],[395,4],[414,3],[418,7],[442,2],[445,3],[449,1],[460,9],[479,5],[485,2],[488,4],[497,9],[516,2],[519,4],[537,2],[540,4]]},"562":{"position":[[4,9],[29,4],[34,5],[47,4],[52,9],[68,7],[76,4],[81,6],[91,3],[97,4],[104,4],[112,3],[118,7],[126,3],[130,2],[133,4],[138,5],[146,4],[151,6],[158,2],[161,3],[166,2],[170,4],[175,9],[188,5],[194,2],[197,4],[204,2],[207,4],[214,7],[224,3],[228,6],[236,6],[244,1],[251,1],[253,1],[257,2],[261,7],[270,2],[273,6],[284,4],[289,4],[298,3],[302,2],[305,4],[310,9],[320,3],[324,1],[329,1],[332,1],[337,1],[340,1],[346,2],[349,3],[353,1],[356,2],[359,6],[366,1],[370,2],[376,2],[379,4],[386,3],[390,7],[407,7],[422,2],[425,4],[435,7],[448,9],[471,2],[474,6],[492,9]]},"564":{"position":[[0,4],[5,4],[49,7],[57,4],[62,6],[72,3],[78,4],[85,4],[93,3],[99,5],[107,5],[113,4],[120,4],[125,7],[134,4],[139,5],[150,4],[155,6],[162,2],[165,3],[172,4],[177,1],[179,4],[186,3],[191,5],[199,4],[204,4],[221,4],[228,3],[232,6],[240,6],[248,1],[256,1],[260,2],[264,4],[269,1],[271,6],[282,4],[287,4],[296,3],[300,2],[303,4],[308,9],[318,3],[322,1],[327,1],[330,1],[335,1],[338,1],[344,2],[347,3],[351,1],[354,2],[357,4],[362,2],[365,3],[372,5],[378,2],[381,4],[388,6],[395,2],[401,1],[406,4],[411,5],[417,1],[421,4],[426,6],[442,4],[447,1],[449,4],[456,5],[464,4],[469,4],[474,1],[476,6],[485,4],[490,9],[513,9],[523,2],[526,4],[539,4],[544,4],[556,5],[565,4],[571,4],[576,9],[596,9]]},"566":{"position":[[0,4],[5,4],[20,9],[50,7],[58,4],[63,6],[73,3],[79,4],[87,3],[91,4],[96,4],[101,4],[106,4],[111,10],[126,3],[130,7],[149,4],[154,6],[161,2],[165,4],[170,9],[183,5],[189,2],[192,4],[199,4],[204,2],[207,10],[219,3],[223,7],[232,6],[246,4],[251,4],[260,3],[264,2],[267,4],[272,9],[282,3],[286,1],[291,1],[294,1],[298,1],[301,1],[307,2],[310,3],[314,1],[317,2],[320,6],[328,2],[334,2],[337,4],[350,4],[355,2],[358,10],[373,10],[398,9]]},"568":{"position":[[15,4],[20,6],[37,4],[42,5]]},"570":{"position":[[0,7],[8,4],[13,6],[23,3],[29,4],[36,4],[41,6],[51,3],[55,7],[63,5],[69,4],[74,6],[81,2],[85,4],[90,9],[103,5],[109,2],[112,4],[119,6],[126,8],[136,7],[145,1],[158,4],[163,4],[172,3],[176,2],[179,4],[184,9],[194,3],[198,1],[203,1],[206,1],[210,2],[214,1],[220,2],[223,3],[227,1],[230,2],[233,6],[241,2],[247,2],[250,4],[257,3],[261,7],[278,7],[293,6],[300,8],[310,7],[319,1],[325,7],[337,9],[358,4],[363,5]]},"572":{"position":[[0,7],[8,7],[24,9]]},"574":{"position":[[0,7],[8,4],[13,6],[23,7],[33,3],[39,4],[47,4],[52,6],[59,3],[63,7],[71,7],[82,3],[88,6],[97,4],[104,3],[108,4],[116,3],[120,7],[129,6],[146,6],[153,7],[162,3],[166,7],[175,6],[192,4],[197,5],[203,3],[209,4],[214,11],[233,4],[238,4],[247,3],[252,6],[262,7],[270,11],[282,7],[290,10],[304,1],[306,4],[311,6],[319,5],[325,6],[334,2],[337,6],[344,3],[349,4],[354,5],[360,1],[364,4],[369,6],[386,3],[390,7],[413,7],[421,11],[433,1],[443,3],[450,6]]},"576":{"position":[[8,7],[31,9],[46,9],[59,5],[77,4],[92,4],[109,6],[128,7],[150,9],[169,7],[195,9],[216,5],[248,7],[261,5],[273,6],[288,7],[314,7],[325,2],[354,4],[359,5],[386,7],[396,5],[403,6],[418,7]]},"578":{"position":[[0,7],[8,5],[16,2]]},"580":{"position":[[7,5],[13,2],[53,2],[82,5],[88,12],[140,3],[153,3],[162,2],[175,2],[184,2],[194,3],[205,2],[220,5],[226,12],[239,3],[247,2],[250,1],[252,2],[264,5],[270,14],[285,3],[291,4],[298,4],[307,5],[315,2],[322,3],[326,5],[332,5],[338,7],[346,5],[352,11],[365,5],[372,3],[376,6],[386,2],[393,1],[395,1],[399,5],[405,6],[413,3],[417,6],[425,2],[433,1],[435,1],[439,5],[445,5],[452,3],[456,6],[464,2],[474,1],[476,1],[480,5],[486,10],[498,3],[502,6],[512,2],[521,1],[523,1],[527,5],[533,5],[546,4],[551,13],[565,8],[574,6],[582,5],[590,1],[593,3],[600,2],[603,6],[610,8],[620,2],[623,3],[630,3],[636,6],[643,3],[649,5],[655,1],[657,5],[665,6],[672,5],[678,13],[692,1],[694,2]]},"582":{"position":[[8,5],[17,5],[23,5],[38,4],[43,3],[47,6],[56,1],[58,1],[62,5],[79,5],[85,5],[98,5],[106,9],[129,9],[142,5],[148,10],[175,9],[198,9],[208,5],[222,5],[228,11],[240,2],[245,4],[252,4],[261,4],[270,7],[278,4],[283,6],[293,3],[299,7],[307,5],[315,4],[323,4],[328,4],[337,3],[341,7],[350,5],[358,2],[361,4],[370,5],[376,4],[385,3],[389,7],[398,9],[414,3],[418,7],[427,5],[433,5],[441,5],[447,10],[464,4],[469,5],[475,1],[479,4],[484,6],[492,5],[498,10],[511,3],[515,7],[524,3],[534,5],[555,4],[563,6],[573,3],[580,6],[590,5],[597,5],[603,12],[617,3],[630,9]]},"584":{"position":[[9,7],[17,4],[22,6],[32,3],[38,6],[45,3],[49,8],[58,6],[67,7],[75,5],[84,4],[89,4],[98,6],[105,4],[111,5],[117,5],[125,2],[129,2],[135,5],[141,13],[157,2],[160,2],[165,3],[169,6],[177,2],[180,7],[190,1],[192,1],[196,2],[199,9],[210,3],[214,6],[222,4],[227,6],[236,1],[239,1],[241,1],[245,2],[248,4],[253,4],[259,2],[262,4],[267,7],[276,3],[280,1],[283,3],[290,5],[296,2],[299,4],[306,3],[310,6],[318,10],[331,1],[334,1],[336,1],[340,3],[344,4],[350,3],[354,7],[365,3],[369,1],[372,3],[379,5],[385,2],[388,8],[399,3],[403,6],[411,8],[422,1],[425,1],[427,1],[431,3],[435,3],[440,3],[444,5],[463,4],[468,4],[474,5],[480,5],[486,2],[489,7],[498,3],[502,2],[505,1],[507,4],[512,6],[520,4],[526,5],[533,10],[545,6],[552,3],[556,8],[565,6],[572,2],[575,1],[577,1],[579,10],[591,6],[598,3],[602,1],[604,3],[608,2],[611,2],[614,1],[616,8],[627,9],[637,3],[641,8],[652,8],[661,2],[664,8],[674,11],[674,3],[678,7],[686,1],[688,8],[698,10],[698,3],[702,6],[710,8],[720,12],[720,3],[724,8],[734,8],[744,12],[744,3],[748,8],[758,8],[768,11],[768,3],[772,7],[781,8],[791,6],[798,5],[804,8],[814,4],[819,5],[825,8],[835,7],[843,2],[846,8],[856,3],[860,3],[864,8],[874,3],[878,8],[887,40],[928,8],[938,3],[942,4],[947,4],[952,2],[955,5],[961,2],[964,3],[968,8],[978,3],[982,8],[991,5],[999,3],[1003,3],[1007,6],[1014,40],[1056,4],[1064,6],[1072,6],[1080,4],[1085,4],[1091,3],[1095,7],[1103,3],[1108,4],[1114,3],[1118,3],[1122,1],[1124,2],[1127,2],[1130,2],[1133,4],[1139,4],[1144,1]]},"587":{"position":[[0,4],[5,13],[19,9],[29,6],[39,3],[45,3],[49,1],[51,7],[59,8],[68,7],[76,12],[90,1],[93,2],[96,1],[98,5],[106,9],[118,5],[124,12],[139,5],[145,2],[150,1],[153,1],[158,2],[161,6],[169,8],[178,3],[184,5],[190,13],[204,1],[206,2],[212,1],[214,5],[222,6],[231,4],[236,5],[242,1],[246,4],[251,6]]},"589":{"position":[[0,4],[5,18],[28,5],[34,4],[43,2],[46,1],[51,7],[62,1],[67,3],[73,3],[77,7],[85,2],[88,6],[97,5],[105,1],[107,1],[111,1],[114,5],[120,10],[144,5],[153,5],[159,5],[167,2],[170,9],[181,5],[187,3],[193,5],[200,4],[206,2],[209,4],[214,1],[232,14]]},"591":{"position":[[0,4],[5,11],[21,2],[25,2],[31,5],[37,13],[53,2],[57,2],[62,3],[66,7],[86,6],[95,3],[99,6],[112,1],[114,1],[120,1],[122,3],[130,1],[132,1],[136,2],[139,4],[144,4],[150,2],[153,4],[158,7],[167,2],[170,9],[181,3],[185,7],[195,1],[203,3],[207,1],[210,3],[217,5],[223,2],[226,4],[233,3],[237,6],[248,1],[251,1],[253,1],[257,3],[261,4],[267,3],[271,7]]},"593":{"position":[[0,13],[35,12],[59,14],[77,2],[80,1],[82,2],[99,12],[121,7],[129,5],[138,2],[221,2]]},"596":{"position":[[0,5],[6,6],[35,4],[40,8],[58,3],[67,3],[86,5],[95,2]]},"598":{"position":[[21,8],[50,8],[115,1],[129,1]]},"600":{"position":[[3,5],[9,6],[16,5],[22,6]]},"602":{"position":[[9,5],[15,6],[26,4],[31,11],[43,6],[52,6],[59,4],[64,6],[75,4],[80,14],[95,4],[100,4],[105,8],[115,8],[124,3],[130,11],[144,2],[151,11],[164,6],[172,4],[177,4],[182,6],[192,8],[215,3],[219,1],[224,1],[227,1],[231,8],[241,1],[247,2],[250,6],[260,6],[283,2],[286,4],[295,6],[305,4],[310,9],[320,4],[326,5],[332,6],[339,4],[346,3],[350,5],[356,6],[363,1],[367,6],[376,4],[381,2],[384,6],[394,6],[406,7],[436,6],[443,2],[448,4],[454,2],[458,11],[471,5],[479,4],[486,6],[495,4],[502,2],[505,6],[513,6],[520,4],[525,7],[534,6],[541,5]]},"604":{"position":[[9,3],[20,1],[26,6],[36,14],[51,3],[55,4],[60,11],[73,1],[76,2],[80,6],[87,5],[97,4],[102,5],[108,1],[112,4],[117,5],[123,8],[134,4],[139,21],[162,6]]},"606":{"position":[[51,3],[92,6]]},"608":{"position":[[10,5],[16,6],[62,9]]},"612":{"position":[[13,6],[59,15],[130,4],[137,3],[143,3],[151,6],[160,6],[169,6]]},"616":{"position":[[12,4],[17,11],[29,6],[38,6],[45,4],[50,6],[61,4],[66,14],[81,4],[86,4],[91,8],[101,8],[110,3],[116,11],[130,2],[137,11],[150,6],[158,4],[163,4],[168,6],[178,8],[200,3],[204,1],[209,1],[212,1],[216,8],[226,1],[232,2],[235,6],[245,6],[268,2],[271,4],[280,6],[290,4],[295,9],[305,4],[311,5],[317,6],[324,4],[331,3],[335,5],[341,6],[348,1],[352,6],[361,4],[366,2],[369,6],[379,6],[391,7],[408,6],[415,2],[420,4],[426,2],[430,11],[443,7],[453,4],[460,6],[469,4],[476,2],[479,6],[487,6],[494,4],[499,7],[508,6],[515,5],[538,4],[543,8],[552,3],[556,5],[564,4],[569,8],[580,4],[585,6],[592,3],[598,4],[604,1],[606,8],[616,6],[625,6],[634,6],[641,1],[645,4],[650,4],[656,6],[664,4],[670,4],[675,6],[683,6],[691,6],[699,4],[704,3],[709,6],[717,3],[722,7],[731,6],[739,7],[752,4],[757,15],[773,6],[782,7],[790,3],[794,8],[804,11],[816,5],[824,8],[841,4],[848,6],[857,3],[863,4],[868,18],[890,15],[908,6],[916,15],[933,7],[942,3],[946,8],[956,11],[969,4],[975,14],[990,2],[993,4],[998,11],[1011,2],[1016,6],[1024,14],[1039,3],[1043,4],[1048,11],[1061,1],[1065,3],[1070,14],[1085,3],[1089,4],[1094,11],[1107,1],[1114,5],[1123,8],[1132,4],[1138,6],[1146,3],[1159,8],[1180,4],[1186,2],[1190,15],[1207,8],[1218,4],[1225,3],[1229,1],[1232,1],[1237,5],[1243,2],[1246,5],[1254,2],[1257,2],[1260,7],[1268,1],[1271,7],[1283,6],[1290,4],[1299,6],[1306,5],[1320,20],[1347,4],[1353,2],[1357,15],[1374,20],[1395,1],[1397,8],[1407,4],[1414,6],[1421,2],[1424,7],[1432,1],[1435,7],[1452,7],[1463,18],[1492,2],[1496,7],[1504,20],[1525,4],[1533,3],[1537,7],[1546,4],[1551,8],[1560,7],[1568,3],[1572,9],[1600,2],[1604,7],[1612,20],[1633,3],[1640,3],[1644,7],[1653,3],[1657,8],[1666,7],[1674,9]]},"618":{"position":[[0,11],[62,3]]},"621":{"position":[[35,3]]},"623":{"position":[[0,6],[32,8],[52,10],[63,14],[92,3],[100,2],[105,7],[115,4]]},"626":{"position":[[0,7],[8,6],[15,6],[25,7],[35,6],[44,3],[50,4],[61,7],[94,6],[108,4],[113,7],[121,9],[133,5],[141,5],[147,4],[154,5],[160,4],[167,6],[179,6],[192,4],[197,6],[204,6],[224,8],[233,3],[237,6],[244,7],[258,8],[273,5],[279,4],[284,7],[302,7],[310,4],[315,5],[326,5],[348,4],[353,5],[359,6],[368,4],[373,6],[380,4],[385,6],[392,7],[400,6],[412,9],[430,4],[435,9],[448,6],[457,6],[465,6],[473,8],[483,4],[488,3],[492,6],[499,7],[509,7],[518,4],[523,4],[528,5],[535,3],[548,15],[569,4],[575,1],[578,6],[586,15],[602,1],[604,7],[613,5],[621,1],[623,5],[629,4],[636,5],[642,1],[644,5],[650,6],[659,4],[667,1],[669,4],[676,2],[679,1],[682,2],[688,1],[690,8],[699,4],[706,2],[711,6],[718,6],[725,3],[730,7],[738,7],[746,10],[761,1],[763,8],[772,4],[780,1],[782,6],[789,3],[798,8],[814,4],[820,1],[823,6],[831,8],[842,5],[850,1],[852,5],[858,5],[866,5],[872,1],[874,5],[880,7],[890,3],[894,1],[897,1],[902,5],[908,1],[910,8],[921,2],[924,3],[931,1],[933,5],[942,3],[949,3],[955,6],[962,3],[970,6],[977,3],[986,7],[1001,4],[1007,1],[1010,6],[1018,7],[1028,5],[1036,1],[1038,5],[1044,5],[1052,5],[1058,1],[1060,5],[1066,7],[1076,3],[1080,3],[1084,5],[1090,3],[1094,1],[1097,1],[1102,5],[1108,1],[1110,8],[1121,2],[1124,1],[1129,1],[1131,4],[1139,1],[1144,3],[1150,3],[1156,1],[1162,6],[1169,3],[1178,9],[1196,3],[1201,4],[1207,1],[1210,6],[1218,9],[1228,3],[1232,5],[1241,1],[1243,7],[1254,3],[1263,9],[1287,4],[1293,1],[1296,6],[1304,9],[1314,3],[1318,7],[1326,7],[1337,3],[1343,6],[1352,4],[1359,3],[1363,4],[1371,6],[1378,4],[1383,3],[1392,1],[1394,7],[1403,3],[1407,6],[1416,6],[1424,5],[1430,4],[1436,1],[1440,1],[1445,1],[1447,1],[1451,3],[1455,4],[1461,3],[1465,4],[1471,3],[1475,7]]},"628":{"position":[[0,7],[8,7],[16,6],[26,3],[32,11],[44,6],[57,10],[73,4],[78,10],[89,6],[98,4],[103,6],[110,6],[118,6],[125,6],[132,5],[138,4],[143,6],[150,6],[157,4],[162,6],[173,4],[178,13],[192,4],[197,6],[205,6],[213,6],[220,6],[229,10],[242,6],[250,10],[262,4],[268,4],[274,6],[282,6],[290,5],[297,4],[302,4],[307,6],[315,3],[321,6],[329,4],[334,4],[339,6],[354,4],[360,1],[363,10],[375,5],[383,5],[391,3],[395,6],[405,1],[408,8],[420,1],[424,1],[426,4],[432,2],[435,1],[437,3],[443,6],[450,3],[456,4],[462,1],[465,10],[477,4],[484,5],[492,3],[496,6],[506,1],[509,8],[521,1],[525,1],[527,4],[533,5],[539,1],[541,6],[549,6],[556,3],[562,4],[568,1],[571,10],[583,4],[590,6],[599,6],[606,1],[608,4],[615,4],[621,1],[624,10],[636,3],[644,3],[650,6],[659,4],[666,1],[668,6],[676,6],[683,4],[688,3],[697,1],[699,5],[706,3],[710,6],[720,1],[723,3],[729,1],[731,1],[735,1],[737,4],[743,3],[761,1],[763,6],[770,9],[780,6],[787,5],[794,4],[800,1],[802,4],[808,4],[815,3],[821,7],[830,3],[844,4],[850,1],[853,10],[865,3],[869,3],[873,6],[883,1],[885,5],[894,3]]},"630":{"position":[[0,7],[8,4],[13,6],[23,7],[33,11],[45,6],[54,11],[66,7],[76,4],[84,4],[89,4],[101,1],[110,6],[120,6],[127,9],[142,1],[150,6],[160,7],[168,13],[183,6],[192,6],[200,2],[203,3],[210,6],[217,15],[233,6],[242,3],[249,3],[255,5],[261,3],[271,1],[281,2],[284,3],[291,6],[298,8],[310,3],[317,3],[323,5],[329,3],[339,1],[349,3],[354,6],[364,7],[372,10],[383,7],[391,10],[405,5],[411,6],[420,2],[423,6],[430,9],[440,3],[448,1],[458,6],[465,3],[470,5],[477,11],[492,4],[497,5],[503,1],[507,4],[512,6],[523,1],[533,2],[536,3],[543,6],[550,7],[561,3],[568,3],[574,5],[580,3]]},"632":{"position":[[1,6],[9,8],[22,6],[30,3],[35,5],[42,11],[56,6],[64,5],[70,4],[75,6],[83,3],[89,5],[96,11],[110,6],[118,8]]},"634":{"position":[[3,4],[11,7],[56,6],[63,4],[85,5],[93,3],[97,3]]},"636":{"position":[[7,6],[18,7],[44,7],[59,9],[88,7],[107,4],[112,4],[117,9]]},"638":{"position":[[0,11],[14,1]]},"643":{"position":[[14,6],[21,6],[28,2],[31,4],[36,7],[44,9],[56,5],[64,5],[70,4],[77,5],[83,4],[90,6],[109,6],[116,3],[120,6],[128,6],[149,6],[156,6],[163,2],[169,5],[191,4],[196,5],[202,6],[211,2],[214,6],[221,4],[226,6],[233,4],[238,6],[245,7],[253,6],[275,6],[282,6],[289,2],[295,11],[321,4],[327,1],[330,6],[338,11],[350,3],[354,5],[362,3],[366,6],[376,1],[378,5],[384,5],[392,5],[398,1],[400,5],[406,7],[416,2],[419,3],[424,2],[430,1],[432,8],[441,3],[445,2],[450,2],[455,6],[462,3],[466,6],[473,3],[477,7],[488,6],[496,7],[504,3],[508,5]]},"645":{"position":[[2,6],[16,7],[24,3],[28,2],[34,7],[44,6],[55,4],[61,1],[64,10],[76,6],[83,3],[87,6],[95,6],[104,3],[108,6],[118,1],[121,3],[125,6],[132,6],[139,5],[147,1],[149,1],[153,1],[155,4],[161,3],[166,6],[173,3],[177,7],[188,1],[191,3],[195,6],[204,1],[206,1],[210,1],[212,4],[218,3]]},"647":{"position":[[0,6],[11,7],[22,4],[27,2],[33,1],[36,11],[58,11],[70,11],[82,6],[89,5],[96,4],[103,11],[117,2],[122,6],[131,4],[138,3],[144,7],[154,5],[161,3],[171,4],[176,5],[182,1],[186,4],[191,11]]},"649":{"position":[[1,6],[9,8],[22,6],[30,3],[35,5],[42,11],[56,6],[64,5],[70,4],[75,6],[83,3],[89,5],[96,11],[110,6],[118,3],[122,6],[129,6],[136,5],[143,5],[150,3],[156,6],[164,8]]},"651":{"position":[[0,11],[16,4],[21,9],[35,4],[40,9],[53,6],[60,5],[69,2]]},"655":{"position":[[7,6],[30,5],[36,9],[46,6],[53,2]]},"657":{"position":[[6,7],[26,7],[72,7],[100,7],[111,7]]},"659":{"position":[[9,7],[20,6],[27,6],[34,2],[40,5],[62,4],[67,5],[73,6],[82,2],[85,6],[92,4],[97,6],[104,4],[109,6],[116,7],[124,6],[141,7],[149,4],[154,6],[163,6],[182,6],[189,6],[196,2],[199,4],[205,1],[208,6],[216,6],[223,3],[227,7],[235,7],[246,3],[252,6],[261,4],[268,3],[272,4],[280,6],[287,4],[292,3],[301,1],[303,7],[312,3],[316,6],[325,6],[333,5],[339,4],[345,1],[349,1],[354,1],[356,1],[360,3],[364,4],[370,3],[374,4],[380,3],[384,7],[404,2],[407,3],[411,7],[422,3],[428,3],[432,7],[443,3],[447,7],[456,3],[462,1],[466,3],[470,7]]},"661":{"position":[[10,4],[16,1],[19,10],[31,3],[39,3],[45,6],[54,4],[61,1],[63,6],[71,6],[78,4],[83,3],[92,1],[94,5],[101,3],[105,6],[115,1],[118,3],[124,1],[126,1],[130,1],[132,4],[138,3],[156,7],[167,4],[172,4],[177,6],[185,1],[188,1],[190,6],[197,4],[202,6],[209,5],[216,4],[222,1],[224,4],[230,4],[237,3],[243,7],[252,3],[257,7],[266,7],[288,5],[299,7],[307,3],[311,6],[321,1],[324,3],[328,5],[334,4],[339,6],[348,1],[350,1],[354,1],[356,4],[364,5],[379,7],[387,3],[391,2],[397,7],[407,6],[418,4],[424,1],[427,10],[439,6],[446,3],[450,6],[458,6],[467,3],[471,6],[481,1],[484,3],[488,6],[495,6],[502,5],[510,1],[512,1],[516,1],[518,4],[524,3],[529,6],[536,3],[540,7],[551,1],[554,3],[558,6],[567,1],[569,1],[573,1],[575,4],[581,3]]},"663":{"position":[[0,10],[12,6],[20,6],[28,8],[41,6],[49,3],[54,5],[61,11],[75,6],[83,5],[89,4],[94,6],[102,3],[108,5],[115,11],[129,6],[137,3],[141,5],[147,4],[152,6],[160,3],[165,5],[172,11],[186,6],[194,4],[199,5],[205,2],[208,6],[216,5],[223,3],[229,6],[237,3],[241,6],[248,6],[255,5],[262,5],[269,3],[275,6],[283,8]]},"669":{"position":[[9,5],[17,4],[22,7],[30,4],[35,5],[41,7],[56,5],[65,6],[72,6],[79,2],[85,5],[100,4],[105,5],[111,6],[120,4],[125,3],[132,1],[140,1],[147,7],[155,6],[170,4],[175,6],[195,5],[217,4],[222,5],[228,6],[237,2],[240,6],[247,4],[252,6],[259,4],[264,6],[271,7],[279,6],[299,4],[304,5],[319,7],[327,4],[332,5],[349,9],[359,3],[370,6],[395,5],[404,6],[411,6],[418,2],[424,7],[457,6],[471,4],[476,7],[484,9],[496,5],[504,5],[510,4],[517,5],[523,4],[530,6],[537,6],[544,5],[551,5],[559,6],[579,6],[623,9],[635,6],[642,4],[648,1],[651,6],[659,6],[666,3],[670,7],[678,7],[689,3],[695,6],[704,4],[711,3],[715,4],[723,6],[730,4],[735,3],[744,1],[746,7],[755,3],[759,6],[768,6],[776,5],[782,4],[788,1],[794,1],[796,1],[800,3],[804,4],[810,3],[814,7],[830,6],[840,2],[843,3],[847,2],[858,2],[861,3],[865,7],[876,3],[882,3],[886,7],[897,5],[903,4],[909,1],[912,7],[922,7],[930,2],[933,6],[942,4],[949,2],[956,8],[978,1],[980,2],[983,5],[991,3],[996,2],[1002,1],[1004,8],[1013,3],[1017,2],[1021,1],[1023,2],[1026,7],[1036,2],[1040,2],[1045,2],[1048,3],[1052,7],[1063,3],[1069,3],[1073,7],[1084,5],[1090,4],[1096,3],[1101,7],[1111,7],[1119,3],[1123,5],[1131,4],[1143,8],[1170,2],[1173,4],[1178,1],[1180,7],[1189,1],[1191,5],[1200,6],[1210,1],[1212,6],[1219,1],[1222,2],[1225,1],[1227,7],[1238,3],[1244,6],[1253,4],[1258,1],[1260,7],[1271,6],[1279,4],[1286,4],[1291,5],[1297,4],[1302,8],[1311,1],[1313,9],[1326,4],[1331,11],[1345,1],[1347,7],[1358,5],[1364,4],[1370,3],[1375,7],[1385,7],[1395,4],[1411,3],[1416,3]]},"671":{"position":[[2,5],[12,4],[26,4],[32,1],[35,10],[47,3],[55,3],[59,5],[67,1],[69,3],[75,5],[83,6],[92,4],[99,1],[101,6],[109,6],[116,4],[121,3],[130,1],[132,5],[139,3],[143,6],[153,1],[156,3],[162,1],[164,1],[168,1],[170,4],[176,3],[194,7],[205,4],[210,4],[215,6],[222,5],[229,1],[232,2],[235,5],[241,1],[246,1],[250,1],[252,6],[259,4],[264,6],[271,5],[278,4],[284,1],[286,4],[292,4],[299,3],[305,7],[314,3],[319,7],[328,7],[337,9],[348,4],[359,4],[366,1],[368,6],[375,4],[380,6],[387,5],[394,4],[400,1],[402,4],[408,4],[415,3],[421,2],[426,4],[433,7],[442,3],[447,7],[456,7],[465,9],[476,4],[497,5],[508,7],[516,3],[520,6],[530,1],[533,3],[537,5],[543,4],[548,6],[557,1],[559,1],[563,1],[565,4],[573,5],[579,7]]},"673":{"position":[[0,4],[6,1],[9,11],[22,6],[29,3],[33,6],[40,5],[47,6],[54,5],[62,6],[69,6],[76,5],[82,4],[88,1],[91,7],[101,4],[106,7],[114,7],[124,4],[130,3],[134,7],[143,4],[149,1],[153,1],[157,3],[161,4],[167,3],[171,7]]},"675":{"position":[[0,10],[12,6],[29,10],[41,4],[47,6],[55,8],[68,4],[74,8],[87,6],[95,3],[100,5],[107,11],[121,6],[129,5],[135,4],[140,6],[150,5],[157,11],[171,6],[179,3],[183,5],[189,4],[194,6],[202,7],[210,2],[213,6],[221,6],[229,3],[234,5],[241,4],[248,6],[256,5],[262,4],[267,6],[277,5],[284,4],[295,11],[311,6],[319,3],[323,5],[329,4],[334,6],[342,4],[347,7],[355,7],[364,6],[372,4],[377,5],[383,2],[386,6],[394,5],[401,3],[407,6],[415,3],[419,6],[426,6],[433,5],[440,5],[447,3],[453,6],[461,8],[474,4],[480,8]]},"681":{"position":[[16,6],[23,7],[31,2],[37,12],[60,4],[65,12],[78,3],[87,4],[104,5],[112,7],[120,12],[135,4],[140,7],[148,7],[161,12],[174,6],[183,4],[189,1],[191,12],[205,6],[214,6],[261,6],[273,6],[281,7],[292,7],[303,7],[313,1],[321,11],[344,4],[349,11],[361,6],[370,3],[374,7],[382,5],[388,12],[413,6],[420,6],[427,2],[430,4],[436,1],[439,11],[452,12],[465,4],[470,6],[478,5],[486,1],[488,2],[491,4],[498,5],[504,1],[506,2],[509,6],[518,4],[524,2],[530,1],[532,8],[541,4],[547,2],[551,2],[556,6],[563,6],[570,3],[575,7],[583,3],[587,10],[602,2],[605,4],[610,5],[619,7],[629,6],[636,6],[643,3],[648,7],[656,7],[664,7],[676,2],[679,3],[686,4],[691,3],[695,5],[704,3],[711,3],[717,6],[724,3],[730,4],[735,5],[743,7],[751,3],[755,7],[764,7],[775,4],[780,3],[784,4],[792,6],[799,3],[805,4],[811,1],[814,11],[827,11],[839,4],[844,6],[852,5],[860,1],[862,2],[865,4],[872,5],[878,1],[880,2],[883,6],[892,4],[898,2],[904,1],[906,8],[915,4],[921,2],[925,2],[930,6],[937,6],[944,3],[949,7],[957,3],[961,10],[976,2],[979,4],[984,5],[993,7],[1003,6],[1010,6],[1017,3],[1022,7],[1030,7],[1038,7],[1050,2],[1053,3],[1060,4],[1065,3],[1069,4],[1077,3],[1084,3],[1090,6],[1097,3],[1103,4],[1108,5],[1116,7],[1124,3],[1128,7],[1137,7],[1148,4],[1153,3],[1157,4],[1165,6],[1172,3],[1178,6],[1211,6],[1255,9],[1267,6],[1274,4],[1280,1],[1283,11],[1296,6],[1303,3],[1307,7],[1315,7],[1326,3],[1332,6],[1341,4],[1348,3],[1352,4],[1360,6],[1367,4],[1372,3],[1381,1],[1383,7],[1392,3],[1396,6],[1405,11],[1418,5],[1424,4],[1430,1],[1436,1],[1438,1],[1442,3],[1446,4],[1452,3],[1456,7],[1472,11],[1487,2],[1490,3],[1494,2],[1505,2],[1508,3],[1512,7],[1523,3],[1529,3],[1533,7],[1544,5],[1550,4],[1556,1],[1559,7],[1569,7],[1577,2],[1580,6],[1589,4],[1596,2],[1603,8],[1625,1],[1627,2],[1630,5],[1638,4],[1644,2],[1650,1],[1652,8],[1661,3],[1665,2],[1669,1],[1671,2],[1674,7],[1684,2],[1688,2],[1694,4],[1699,5],[1708,7],[1718,2],[1721,3],[1725,7],[1736,3],[1742,3],[1746,7],[1757,5],[1763,4],[1769,3],[1774,7],[1784,7],[1792,11],[1806,4],[1818,8],[1845,2],[1848,4],[1853,1],[1855,7],[1864,1],[1866,5],[1875,6],[1885,1],[1887,6],[1894,1],[1897,2],[1900,1],[1902,7],[1913,3],[1919,6],[1928,4],[1933,1],[1935,7],[1946,6],[1954,4],[1961,4],[1966,5],[1972,4],[1977,8],[1986,1],[1988,9],[2001,4],[2006,11],[2020,1],[2022,7],[2033,5],[2039,4],[2045,3],[2050,7],[2060,7],[2070,4],[2086,4],[2091,3],[2096,3]]},"683":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[62,6],[70,8],[83,4],[89,8],[102,6],[110,3],[115,5],[122,11],[136,11],[149,5],[155,4],[160,6],[170,5],[177,11],[191,6],[199,3],[203,5],[209,4],[214,6],[222,7],[230,2],[233,6],[241,6],[249,3],[254,5],[261,4],[268,11],[281,5],[287,4],[292,6],[302,5],[309,4],[316,6],[324,3],[328,5],[334,4],[339,6],[347,4],[352,7],[360,7],[369,11],[382,4],[387,5],[393,2],[396,7],[405,5],[412,3],[418,3],[422,3],[426,5],[432,7],[443,6],[451,8],[464,4],[470,8]]},"685":{"position":[[10,6],[17,5]]},"687":{"position":[[6,6],[13,5]]},"689":{"position":[[32,2],[37,9],[101,4],[106,8],[216,8],[230,4],[235,8],[244,9],[256,4],[261,7],[269,6],[277,5],[293,13],[314,4],[319,13],[333,6],[342,4],[348,1],[350,13],[365,4],[370,7],[378,6],[386,5],[394,3],[398,6],[415,1],[417,1],[421,7],[430,6],[437,3],[446,11],[465,4],[470,11],[482,6],[491,4],[497,1],[499,11],[512,4],[517,7],[525,6],[533,5],[541,3],[545,6],[562,1],[564,1],[568,7],[577,6],[584,3],[602,19],[627,4],[632,19],[652,6],[661,8],[670,8],[681,4],[686,22],[709,8],[718,8],[729,19],[751,6],[759,19],[779,8],[789,8],[801,4],[807,1],[810,19],[831,12],[844,7],[852,6],[875,7],[886,3],[890,7],[903,1],[911,7],[920,1],[924,1],[926,8],[935,4],[940,7],[957,4],[962,4],[985,13],[1002,13],[1018,7],[1029,22],[1052,13],[1067,7],[1075,12],[1089,5],[1117,11],[1132,11],[1146,7],[1156,22],[1179,11],[1192,7],[1200,12],[1214,5],[1241,11],[1259,4],[1264,11],[1276,6],[1285,4],[1291,1],[1293,11],[1306,9],[1316,7],[1324,6],[1332,5],[1340,3],[1344,6],[1359,1],[1361,1],[1365,7],[1374,6],[1381,3],[1400,14],[1421,4],[1426,14],[1441,6],[1450,11],[1462,11],[1476,4],[1482,1],[1485,14],[1501,12],[1514,7],[1522,6],[1545,7],[1556,3],[1560,7],[1573,1],[1581,7],[1590,1],[1594,1],[1596,11],[1608,9],[1618,7],[1635,4],[1640,4],[1649,9],[1662,14],[1677,11],[1690,11],[1705,9],[1715,12],[1729,5],[1754,14]]},"691":{"position":[[34,2],[39,9],[58,4],[63,17],[81,6],[91,15],[117,6],[124,6]]},"693":{"position":[[48,7],[59,2],[62,6],[70,18],[70,10],[81,7]]},"695":{"position":[[12,4],[17,8],[40,8],[49,7]]},"697":{"position":[[16,9],[28,2],[34,6],[60,7],[78,6],[86,3],[90,1],[95,1],[98,1],[102,7],[110,6],[120,1],[126,2],[129,10],[140,15]]},"699":{"position":[[32,18],[57,2],[65,4],[70,18],[89,6],[98,9],[108,6],[123,9],[133,4],[138,4]]},"701":{"position":[[12,3],[16,7],[34,7],[51,4],[57,1],[60,15],[77,11],[89,5],[97,6],[105,5],[113,3],[121,18],[145,8],[155,4],[160,4],[165,5],[172,1],[176,6],[185,4],[190,1],[192,13],[209,3],[214,6],[223,3],[227,8],[236,4],[243,4],[248,5],[254,1],[258,4],[263,6],[272,6],[279,6],[286,3],[291,6],[298,7]]},"703":{"position":[[0,7],[8,4],[13,6],[23,3],[29,4],[40,15],[56,7],[64,1],[66,3],[70,2],[73,5],[79,3],[83,9],[93,7],[101,7],[109,8],[118,4],[123,15],[139,6],[148,5],[156,6],[163,13],[177,4],[183,18],[202,12],[215,4],[220,6],[234,18],[253,10],[264,1],[266,7],[274,2],[277,6],[284,3],[288,5],[294,4],[299,18],[318,6],[327,8],[338,6],[345,8],[354,4],[359,5],[370,18],[389,7],[397,3],[401,6],[408,1],[410,3],[414,15],[430,4],[435,18],[457,15],[475,3],[483,15],[500,5],[509,6],[519,13],[534,4],[539,4],[545,18],[566,12],[580,4],[585,4],[590,6],[603,2],[606,3],[610,15],[628,6],[635,3],[644,11],[656,6],[663,7],[671,3],[675,5],[681,2],[684,7],[692,1],[694,7],[702,7],[710,3],[714,7],[722,4],[728,1],[731,15],[748,11],[760,8],[771,6],[779,5],[787,3],[795,18],[815,8],[825,8],[835,8],[845,4],[850,4],[855,5],[862,1],[869,8],[878,2],[881,5],[887,8],[898,1],[900,13],[917,3],[921,6],[930,3],[934,8],[948,8],[957,10],[968,5],[974,3],[978,10],[989,4],[995,1],[998,15],[1015,8],[1028,5],[1034,1],[1036,12],[1055,15],[1071,7],[1079,8],[1088,8],[1097,2],[1100,1],[1102,6],[1109,4],[1114,6],[1121,4],[1127,1],[1130,15],[1147,15],[1167,3],[1173,6],[1182,4],[1187,3],[1196,1],[1198,13],[1213,1],[1215,5],[1223,3],[1227,8],[1236,3],[1240,7],[1249,7],[1257,5],[1266,1],[1268,5],[1275,3],[1279,8],[1291,3],[1295,4],[1302,1],[1304,12],[1318,3],[1322,7],[1331,8],[1340,4],[1345,10],[1358,6],[1371,4],[1376,4],[1388,6],[1395,3],[1399,5],[1405,3],[1409,10],[1420,10],[1434,18],[1455,5],[1461,10],[1472,8],[1486,8],[1495,4],[1500,7],[1508,2],[1511,4],[1520,4],[1525,5],[1531,3],[1537,4],[1542,11],[1555,2],[1558,3],[1565,10],[1576,11],[1590,6],[1598,1],[1603,1],[1608,1],[1614,3],[1621,3],[1627,3],[1631,7],[1640,5],[1646,8],[1655,5],[1664,3],[1675,2],[1678,4],[1687,4],[1692,5],[1698,1],[1702,4],[1707,6],[1715,2],[1718,3],[1725,10],[1736,11],[1750,6],[1758,1],[1763,1],[1768,1],[1774,3],[1781,3],[1787,3],[1791,7],[1800,5],[1806,8],[1815,5],[1824,3],[1838,4],[1843,4],[1848,3],[1852,3],[1856,7],[1864,2],[1867,7],[1875,4],[1880,5],[1886,1],[1890,4],[1895,6],[1919,7],[1948,10],[1978,7],[2006,12],[2039,7],[2047,4],[2052,6],[2062,7],[2072,6],[2081,3],[2087,4],[2094,4],[2105,7],[2113,10],[2124,1],[2126,10],[2137,2],[2140,5],[2146,4],[2151,8],[2160,4],[2165,7],[2173,6],[2182,5],[2190,6],[2197,7],[2205,3],[2212,5],[2218,7],[2226,4],[2231,4],[2236,8],[2245,4],[2250,4],[2258,4],[2263,6],[2270,9],[2285,15],[2301,12],[2314,1],[2316,5],[2322,6],[2329,9],[2339,4],[2344,15],[2360,6],[2369,8],[2380,6],[2387,8],[2396,4],[2401,5],[2407,9],[2417,6],[2427,3],[2431,7],[2439,9],[2449,4],[2454,4],[2462,3],[2466,8],[2480,17],[2498,10],[2509,10],[2520,8],[2529,4],[2534,17],[2552,6],[2561,18],[2580,3],[2587,6],[2594,4],[2599,3],[2603,8],[2612,14],[2627,4],[2632,8],[2644,7],[2652,3],[2656,4],[2661,7],[2669,16],[2686,4],[2694,6],[2702,8],[2711,5],[2717,6],[2724,8],[2738,10],[2749,7],[2757,4],[2762,4],[2767,4],[2772,6],[2779,4],[2784,10],[2795,4],[2800,10],[2811,6],[2820,14],[2835,7],[2843,7],[2851,17],[2869,11],[2881,4],[2887,15],[2903,9],[2913,4],[2918,4],[2923,7],[2934,3],[2938,7],[2946,3],[2950,4],[2955,4],[2960,7],[2968,11],[2980,4],[2985,4],[2995,7],[3003,7],[3011,7],[3019,3],[3023,6],[3030,10],[3041,8],[3050,4],[3055,6],[3064,12],[3077,4],[3082,4],[3087,6],[3094,4],[3099,9],[3114,13],[3128,7],[3136,1],[3138,10],[3149,10],[3160,8],[3169,4],[3174,13],[3188,4],[3193,17],[3213,10],[3226,2],[3229,4],[3234,18],[3256,1],[3260,4],[3265,18],[3286,2],[3291,2],[3294,4],[3299,14],[3317,1],[3321,4],[3326,14],[3343,1],[3347,4],[3352,6],[3361,6],[3369,10],[3381,14],[3397,7],[3405,7],[3414,1],[3418,7],[3427,4],[3433,11],[3446,4],[3451,4],[3457,15],[3474,4],[3479,18],[3500,9],[3511,4],[3516,4],[3521,4],[3526,7],[3536,11],[3549,4],[3554,4],[3559,4],[3568,8],[3578,4],[3583,4],[3588,6],[3606,3],[3610,6],[3617,3],[3621,10],[3632,1],[3634,10],[3645,4],[3650,4],[3656,1],[3659,10],[3671,3],[3679,1],[3681,6],[3688,3],[3692,1],[3695,5],[3701,1],[3703,6],[3710,4],[3717,3],[3723,6],[3732,4],[3737,3],[3746,1],[3748,11],[3761,1],[3763,14],[3778,3],[3783,4],[3788,8],[3802,1],[3804,9],[3815,1],[3817,14],[3832,8],[3842,4],[3847,3],[3856,1],[3858,11],[3871,3],[3880,7],[3888,9],[3898,8],[3907,4],[3914,1],[3916,8],[3926,6],[3939,4],[3945,1],[3948,10],[3960,14],[3975,3],[3980,15],[3999,5],[4005,5],[4011,3],[4015,8],[4028,6],[4036,5],[4042,3],[4046,10],[4057,4],[4062,2],[4065,1],[4067,7],[4075,16],[4097,8],[4106,5],[4112,6],[4119,8],[4130,1],[4132,14],[4149,7],[4158,5],[4165,3],[4169,8],[4179,7],[4188,1],[4190,14],[4205,7],[4215,1],[4218,8],[4228,4],[4233,3],[4242,3],[4246,6],[4254,7],[4262,5],[4269,1],[4271,1],[4276,1],[4278,1],[4282,1],[4284,14],[4299,7],[4308,1],[4310,14],[4325,5],[4332,3],[4336,8],[4348,3],[4354,4],[4360,1],[4363,10],[4375,14],[4390,8],[4399,4],[4404,7],[4415,8],[4427,1],[4429,14],[4444,5],[4450,8],[4465,8],[4474,7],[4482,3],[4486,4],[4491,3],[4495,4],[4500,7],[4508,7],[4516,4],[4522,1],[4525,10],[4537,8],[4546,3],[4550,7],[4558,7],[4567,5],[4575,6],[4583,5],[4591,3],[4599,15],[4616,8],[4626,5],[4633,8],[4643,4],[4648,4],[4653,5],[4661,9],[4672,3],[4676,7],[4685,3],[4690,1],[4694,4],[4699,3],[4705,8],[4718,9],[4729,4],[4734,3],[4743,6],[4752,4],[4757,1],[4759,11],[4774,3],[4779,6],[4788,4],[4793,3],[4802,3],[4806,8],[4816,6],[4823,3],[4827,4],[4834,3],[4838,4],[4846,6],[4853,3],[4857,3],[4865,4],[4872,1],[4874,8],[4884,6],[4891,6],[4898,3],[4903,10],[4914,2],[4917,8],[4926,4],[4933,4],[4940,3],[4944,4],[4952,6],[4959,3],[4963,3],[4976,8],[4985,6],[4992,9],[5002,3],[5006,7],[5014,4],[5019,3],[5023,4],[5029,1],[5032,10],[5044,8],[5053,3],[5057,7],[5065,7],[5075,7],[5084,5],[5093,8],[5105,4],[5110,4],[5115,7],[5124,6],[5133,4],[5138,1],[5140,9],[5153,8],[5163,6],[5172,4],[5177,5],[5188,8],[5198,6],[5205,5],[5212,3],[5216,4],[5223,3],[5227,4],[5235,6],[5242,7],[5253,3],[5257,3],[5265,4],[5272,1],[5274,8],[5284,6],[5291,7],[5302,6],[5309,3],[5314,10],[5325,2],[5328,8],[5337,4],[5344,4],[5351,3],[5355,4],[5363,6],[5370,7],[5381,3],[5385,3],[5398,4],[5403,10],[5414,5],[5420,4],[5425,3],[5429,10],[5440,4],[5446,1],[5449,10],[5461,4],[5470,1],[5472,12],[5485,2],[5488,4],[5497,5],[5503,1],[5505,8],[5515,1],[5517,6],[5524,4],[5531,5],[5537,1],[5539,11],[5552,5],[5558,1],[5560,9],[5571,5],[5577,1],[5579,11],[5592,3],[5596,7],[5605,10],[5616,7],[5624,10],[5645,14],[5660,8],[5669,9],[5679,5],[5685,3],[5689,6],[5696,10],[5707,4],[5713,1],[5716,10],[5728,14],[5743,3],[5747,7],[5755,7],[5764,3],[5768,4],[5776,5],[5784,6],[5793,4],[5798,1],[5800,11],[5815,3],[5820,6],[5827,3],[5831,4],[5838,1],[5840,8],[5850,6],[5857,6],[5864,3],[5869,10],[5880,2],[5883,8],[5892,4],[5899,4],[5906,3],[5910,4],[5918,6],[5925,3],[5929,3],[5939,4],[5944,4],[5956,12],[5969,7],[5977,4],[5985,17],[6004,18],[6024,2],[6028,14],[6044,1],[6048,4],[6053,6],[6061,16],[6079,5],[6089,5],[6095,2],[6098,7],[6106,2],[6109,6],[6118,10],[6132,13],[6146,4],[6152,2],[6155,10],[6166,3],[6175,7],[6183,5],[6189,4],[6194,7],[6202,3],[6207,6],[6217,7],[6225,11],[6237,7],[6245,10],[6259,1],[6261,4],[6266,6],[6274,5],[6280,6],[6292,3],[6296,5],[6302,3],[6309,10],[6320,8],[6329,3],[6336,6],[6344,1],[6349,1],[6354,1],[6359,2],[6362,3],[6369,3],[6375,3],[6379,7],[6388,5],[6394,7],[6402,5],[6411,3],[6421,3],[6425,5],[6431,5],[6438,3],[6445,10],[6456,8],[6465,3],[6470,2],[6473,3],[6480,3],[6486,3],[6490,7],[6499,5],[6505,7],[6513,5],[6522,3],[6529,4],[6536,3],[6540,6],[6548,7],[6556,5],[6563,1],[6565,1],[6570,1],[6572,1],[6576,5],[6582,7],[6591,5],[6597,5],[6609,7],[6617,6],[6624,7],[6632,10],[6643,14],[6658,3],[6663,4],[6672,3],[6676,7],[6685,9],[6695,6],[6702,7],[6715,10],[6726,4],[6735,8],[6744,4],[6749,8],[6759,5],[6765,7],[6773,6],[6780,4],[6785,10],[6796,3],[6800,10],[6811,8],[6820,5],[6826,6],[6833,3],[6837,6],[6844,8],[6853,12],[6866,7],[6875,17],[6893,6],[6900,6],[6907,7],[6915,4],[6920,7],[6928,8],[6937,6],[6944,8],[6953,4],[6958,10],[6969,8],[6978,13],[6992,8],[7002,8],[7011,8],[7020,3],[7024,8],[7034,11],[7047,3],[7051,7],[7060,9],[7071,8],[7080,6],[7087,2],[7090,9],[7100,5],[7106,7],[7114,7],[7123,3],[7127,10],[7138,7],[7146,7],[7154,3],[7158,8],[7167,12],[7180,6],[7187,11],[7199,4],[7204,6],[7211,2],[7214,12],[7227,9],[7237,6],[7245,14],[7260,6],[7267,3],[7271,6],[7278,6],[7285,13],[7299,7],[7307,7],[7315,7],[7323,7],[7331,8],[7340,8],[7350,4],[7355,4],[7360,7],[7368,4],[7373,6],[7380,8],[7389,4],[7394,9],[7404,3],[7408,6],[7415,9],[7425,7],[7433,6],[7440,4],[7445,7],[7454,5],[7460,4],[7465,8],[7474,6],[7481,3],[7485,7],[7493,2],[7496,6],[7503,6],[7510,2],[7513,8],[7522,5],[7528,7],[7536,7],[7545,5],[7551,7],[7559,3],[7563,3],[7567,9],[7577,10],[7588,3],[7592,3],[7596,10],[7616,7],[7624,4],[7629,6],[7639,7],[7649,6],[7658,3],[7664,4],[7671,4],[7682,7],[7690,7],[7698,3],[7702,9],[7712,3],[7716,8],[7725,4],[7730,9],[7740,4],[7745,7],[7753,9],[7765,7],[7773,3],[7777,7],[7785,7],[7794,5],[7805,14],[7820,9],[7830,8],[7839,4],[7844,14],[7859,6],[7868,8],[7877,4],[7882,7],[7890,8],[7899,4],[7904,6],[7913,2],[7916,4],[7921,9],[7936,17],[7954,7],[7962,1],[7964,3],[7968,7],[7976,4],[7981,9],[7991,5],[7997,4],[8002,4],[8007,17],[8025,9],[8035,3],[8041,14],[8058,6],[8066,14],[8082,8],[8092,4],[8097,4],[8102,7],[8111,9],[8123,8],[8133,4],[8138,4],[8143,6],[8161,5],[8167,6],[8174,10],[8185,8],[8194,4],[8200,1],[8203,14],[8219,5],[8229,1],[8231,2],[8234,3],[8238,1],[8241,2],[8244,4],[8253,5],[8259,1],[8261,2],[8264,4],[8271,3],[8277,6],[8286,4],[8291,3],[8300,1],[8302,8],[8312,3],[8317,6],[8327,7],[8335,11],[8347,7],[8355,10],[8369,1],[8371,4],[8376,6],[8384,3],[8391,3],[8395,7],[8403,3],[8408,6],[8417,2],[8420,3],[8427,3],[8433,3],[8437,6],[8445,7],[8453,9],[8463,6],[8472,1],[8474,1],[8478,3],[8485,4],[8492,1],[8494,8],[8504,6],[8524,6],[8531,5],[8537,1],[8539,7],[8547,3],[8551,9],[8561,4],[8567,1],[8570,14],[8586,6],[8593,3],[8597,7],[8605,7],[8614,3],[8618,7],[8627,5],[8635,6],[8644,4],[8649,1],[8651,8],[8663,3],[8668,6],[8675,3],[8679,4],[8686,1],[8688,8],[8698,6],[8705,6],[8712,3],[8717,7],[8725,2],[8728,8],[8737,4],[8744,4],[8751,3],[8755,4],[8763,6],[8770,3],[8774,3],[8787,4],[8792,10],[8803,5],[8809,4],[8814,3],[8818,7],[8826,4],[8832,1],[8835,14],[8851,4],[8860,5],[8866,1],[8868,8],[8878,1],[8880,2],[8883,4],[8890,5],[8896,1],[8898,8],[8917,8],[8926,8],[8942,15],[8958,10],[8969,7],[8977,3],[8981,4],[8986,7],[8994,4],[8999,15],[9015,6],[9024,10],[9036,10],[9047,8],[9058,6],[9067,4],[9073,1],[9076,15],[9093,7],[9101,3],[9105,7],[9113,7],[9122,5],[9130,6],[9137,1],[9139,10],[9150,8],[9159,3],[9164,1],[9166,8],[9181,15],[9197,10],[9208,7],[9216,3],[9220,4],[9225,7],[9233,4],[9238,15],[9254,6],[9263,10],[9275,10],[9286,10],[9297,4],[9304,7],[9314,4],[9320,1],[9323,15],[9340,7],[9348,3],[9352,7],[9360,7],[9369,5],[9377,5],[9384,3],[9391,1],[9393,10],[9404,8],[9413,3],[9418,2],[9421,3],[9428,3],[9434,6],[9441,3],[9447,1],[9449,10],[9463,5],[9469,6],[9476,3],[9489,10],[9500,14],[9519,4],[9524,7],[9532,6],[9541,5],[9549,6],[9556,7],[9564,3],[9568,8],[9577,4],[9582,4],[9589,4],[9594,10],[9605,6],[9614,2],[9617,4],[9622,5],[9628,11],[9640,7],[9650,4],[9656,1],[9659,10],[9671,8],[9680,3],[9684,7],[9692,7],[9701,5],[9709,6],[9717,5],[9725,1],[9727,2],[9730,4],[9737,5],[9743,1],[9745,2],[9748,6],[9757,6],[9766,4],[9773,3],[9777,4],[9785,6],[9792,3],[9796,3],[9802,7],[9811,1],[9813,11],[9827,7],[9836,5],[9843,5],[9850,7],[9859,1],[9861,11],[9873,7],[9883,1],[9886,8],[9896,4],[9901,3],[9910,3],[9914,6],[9922,5],[9928,7],[9936,2],[9939,7],[9948,1],[9950,1],[9954,1],[9956,11],[9968,7],[9977,6],[9984,3],[9992,4],[9998,1],[10001,10],[10013,8],[10022,3],[10026,7],[10034,7],[10044,7],[10053,5],[10062,1],[10064,2],[10067,4],[10074,5],[10080,1],[10082,2],[10085,6],[10094,6],[10103,4],[10110,3],[10114,4],[10122,6],[10129,7],[10140,3],[10144,3],[10150,7],[10159,6],[10166,1],[10168,11],[10181,3],[10196,5],[10202,7],[10214,4],[10219,4],[10231,6],[10238,10],[10249,7],[10260,17],[10278,2],[10282,10],[10297,10],[10309,11],[10322,7],[10330,7],[10339,1],[10348,5],[10354,7],[10362,9],[10372,7],[10380,5],[10388,5],[10394,7],[10402,4],[10412,6],[10419,8],[10428,3],[10435,7],[10443,10],[10459,3],[10463,5],[10469,7],[10477,6],[10488,15],[10505,10],[10517,10],[10529,8],[10541,6],[10549,1],[10554,1],[10559,1],[10566,7],[10574,6],[10581,3],[10586,6],[10597,3],[10601,5],[10607,7],[10615,10],[10629,4],[10634,4],[10639,7],[10648,1],[10651,6],[10662,15],[10679,10],[10691,10],[10703,10],[10715,10],[10729,7],[10737,6],[10744,3],[10749,6],[10760,4],[10765,3],[10769,6],[10776,6],[10785,4],[10790,5],[10801,10],[10813,3],[10817,6],[10825,7],[10833,5],[10841,1],[10843,1],[10847,5],[10853,5],[10860,4],[10867,4],[10872,5],[10878,1],[10882,4],[10887,6],[10896,3],[10900,7],[10909,7],[10917,7],[10925,3],[10929,5],[10941,3],[10945,7],[10953,7],[10961,7],[10969,2],[10972,1],[10974,10],[10985,6],[10992,7],[11000,4],[11005,12],[11018,8],[11027,2],[11030,7],[11039,8],[11048,3],[11052,16],[11069,2],[11072,7],[11080,4],[11085,9],[11095,8],[11105,7],[11113,2],[11116,8],[11126,3],[11130,7],[11138,3],[11142,8],[11151,10],[11163,4],[11168,1],[11170,3],[11174,2],[11177,9],[11187,2],[11190,2],[11193,4],[11198,10],[11210,4],[11215,10],[11226,7],[11234,9],[11245,7],[11253,3],[11257,9],[11267,8],[11276,8],[11285,8],[11295,11],[11307,8],[11316,7],[11324,3],[11328,10],[11339,7],[11348,8],[11357,3],[11361,8],[11370,8],[11379,8],[11389,5],[11395,3],[11399,2],[11402,7],[11410,3],[11414,10],[11425,3],[11429,8],[11438,7],[11446,9],[11457,4],[11462,7],[11470,9],[11482,7],[11490,3],[11494,7],[11502,7],[11511,5],[11519,8],[11528,8],[11538,4],[11543,7],[11551,12],[11564,3],[11568,10],[11579,6],[11586,3],[11590,9],[11600,8],[11609,3],[11613,2],[11616,10],[11627,12],[11640,3],[11644,11],[11656,7],[11664,7],[11672,7],[11681,7],[11689,1],[11691,5],[11697,2],[11700,8],[11709,9],[11719,8],[11728,12],[11741,2],[11744,1],[11746,9],[11756,8],[11765,8],[11774,8],[11783,8],[11793,10],[11805,9],[11815,7],[11823,8],[11832,4],[11837,9],[11847,13],[11862,4],[11867,2],[11870,3],[11874,3],[11878,7],[11886,5],[11892,13],[11907,8],[11916,3],[11920,2],[11923,8],[11932,4],[11937,6],[11944,4],[11949,4],[11955,3],[11959,2],[11962,8],[11971,2],[11974,7],[11982,7],[11990,7],[11998,8],[12007,10],[12018,7],[12026,10],[12038,4],[12043,17],[12061,4],[12066,7],[12075,7],[12083,4],[12088,17],[12106,4],[12111,7],[12120,7],[12130,6],[12138,13],[12152,4],[12160,11],[12172,7],[12181,4],[12186,18],[12205,6],[12214,8],[12225,7],[12235,4],[12241,1],[12244,18],[12264,7],[12272,3],[12276,7],[12284,7],[12293,5],[12304,7],[12312,3],[12316,2],[12319,7],[12329,8],[12338,8],[12348,4],[12353,15],[12369,6],[12378,7],[12386,8],[12395,3],[12404,3],[12408,8],[12417,5],[12423,7],[12431,2],[12434,7]]},"705":{"position":[[16,3],[20,11],[34,6],[41,4],[46,11],[58,5],[66,6],[76,11],[90,5]]},"707":{"position":[[0,6],[7,5],[27,5],[77,2],[82,7],[92,9],[106,6],[113,5]]},"710":{"position":[[37,4],[42,4],[47,5],[67,6],[83,3]]},"713":{"position":[[2,14],[28,6],[35,6],[42,2],[45,4],[51,1],[54,11],[67,14],[82,6],[89,7],[98,5],[106,1],[108,2],[111,4],[118,5],[124,1],[126,2],[129,6],[138,4],[146,6],[153,4],[160,7],[169,6],[179,1],[181,8],[190,4],[196,2],[199,6],[209,7],[217,5],[226,7],[245,7],[253,3],[257,4],[264,3],[268,6],[276,7],[284,3],[288,7],[296,2],[300,1],[302,1],[306,4],[330,1],[332,8],[341,4],[350,11],[363,3],[368,6],[376,4],[382,6],[389,12],[405,5],[412,7],[440,2],[443,6],[453,7],[461,5],[470,7],[480,6],[487,5],[495,1],[497,8],[506,4],[512,5],[520,7],[528,3],[532,6],[540,7],[548,3],[552,7],[560,2],[564,1],[566,1],[570,4],[578,4],[585,3],[589,6],[597,10],[608,3],[612,7],[620,2],[624,1],[627,3],[631,7],[640,1],[644,4],[652,6],[659,3],[667,8],[677,4],[685,6],[692,6],[699,2],[705,8],[726,15],[744,8],[753,4],[759,1],[762,11],[775,8],[784,3],[788,7],[797,5],[805,1],[807,2],[810,4],[817,5],[823,1],[825,2],[828,6],[837,4],[845,3],[849,4],[856,2],[859,1],[862,2],[868,1],[870,8],[879,4],[886,2],[891,6],[898,6],[905,3],[910,7],[918,7],[926,10],[941,1],[943,8],[952,4],[961,11],[974,3],[979,3],[984,5],[991,7],[1000,4],[1006,3],[1010,12],[1028,3],[1032,7],[1041,10],[1055,3],[1059,4],[1067,6],[1074,3],[1099,6],[1106,6],[1113,2],[1116,4],[1122,1],[1125,11],[1138,8],[1152,6],[1160,5],[1169,1],[1171,2],[1174,5],[1182,5],[1188,1],[1190,2],[1193,7],[1203,7],[1214,4],[1219,3],[1223,6],[1230,4],[1236,4],[1244,4],[1249,3],[1253,6],[1260,4],[1266,6],[1278,6],[1287,3],[1291,5],[1297,4],[1302,6],[1310,5],[1316,5],[1324,4],[1329,4],[1334,6],[1342,5],[1350,2],[1353,4],[1358,4],[1366,6],[1373,3],[1377,6],[1385,8],[1394,10],[1405,2],[1409,1],[1413,4],[1421,2],[1424,7],[1432,4],[1440,6],[1447,3],[1453,4],[1458,4],[1466,4],[1471,4],[1477,2],[1483,1],[1485,8],[1494,4],[1500,2],[1504,2],[1509,6],[1516,3],[1520,6],[1528,7],[1537,1],[1539,3],[1543,10],[1556,4],[1564,3],[1568,1],[1571,3],[1578,5],[1584,4],[1589,4],[1596,2],[1599,3],[1606,5],[1612,3],[1618,3],[1625,3],[1631,6],[1638,3],[1646,7],[1654,4],[1662,4],[1667,4],[1672,4],[1680,5],[1686,6],[1695,6],[1702,6],[1710,4],[1716,6],[1723,3],[1729,3],[1733,4],[1741,5],[1747,1],[1749,8],[1760,2],[1764,7],[1772,4],[1780,2],[1783,3],[1790,5],[1796,4],[1803,3],[1810,3],[1816,6],[1823,3],[1828,3],[1838,6],[1845,6],[1853,3],[1859,4],[1865,1],[1868,11],[1881,8],[1892,5],[1900,6],[1908,3],[1915,1],[1917,8],[1935,3],[1939,1],[1942,4],[1950,5],[1956,6],[1965,2],[1968,3],[1975,1],[1977,12],[1990,4],[1997,3],[2004,3],[2021,6],[2028,3]]},"715":{"position":[[7,4],[12,8],[21,3],[25,5],[33,4],[38,8],[49,4],[54,4],[59,5],[67,4],[72,6],[79,6],[88,2],[91,4],[96,5],[102,5],[108,8],[117,7],[125,6],[132,3],[136,2],[139,6],[153,4],[158,9],[168,7],[176,6],[184,5],[190,8],[200,3],[204,2],[207,6],[216,6],[225,6],[233,6],[241,7],[250,7],[259,5],[266,5],[273,3],[278,3],[287,4],[293,1],[296,6],[304,4],[309,5],[315,8],[325,6],[332,6],[340,4],[348,3],[355,2],[358,5],[366,1],[368,5],[376,6],[385,1],[387,2],[390,4],[397,5],[403,1],[405,2],[408,6],[417,8],[434,6],[442,4],[450,4],[458,5],[466,5],[473,3],[480,3],[484,7],[492,6],[500,4],[509,2],[515,4],[520,3],[526,6],[534,4],[539,2],[542,2],[545,2],[548,2],[551,2],[554,3],[560,3],[564,7],[572,1],[574,3],[582,1],[587,1],[592,1],[596,1],[598,1],[602,2],[606,8],[616,1],[618,7],[627,3],[634,4],[640,1],[643,6],[651,5],[657,6],[664,6],[672,4],[680,3],[687,1],[689,4],[694,4],[700,6],[708,4],[719,4],[725,1],[728,6],[736,5],[742,6],[749,6],[757,4],[765,3],[772,1],[774,4],[779,4],[785,6],[793,4],[804,4],[810,1],[813,6],[821,6],[828,6],[835,6],[843,4],[851,3],[858,1],[860,4],[865,5],[872,6],[880,4],[897,4],[902,13],[916,6],[925,3],[930,6],[939,4],[944,16],[964,13],[980,6],[988,13],[1003,3],[1008,9],[1019,4],[1026,4],[1032,2],[1035,6],[1054,4],[1060,1],[1063,13],[1078,5],[1088,1],[1090,3],[1094,5],[1101,7]]},"717":{"position":[[9,1],[26,2],[29,1],[33,11],[45,14],[60,7],[68,16],[85,11],[105,2],[111,8],[123,4],[128,4],[133,11],[145,5],[152,1],[155,11],[167,4],[172,11],[184,5],[191,4],[198,4],[205,4],[212,3],[218,7],[228,3],[234,7],[243,8],[253,9],[264,4],[273,3],[277,7],[286,2],[289,5],[300,8]]},"719":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,7],[459,5],[466,3],[472,3],[476,3],[480,5],[486,7],[497,4],[503,8],[515,7],[523,3],[527,7],[535,2],[538,4],[544,4],[549,2],[552,2],[555,2],[558,2],[561,2],[564,3],[570,4],[577,4],[584,6],[592,8],[604,7],[612,3],[616,7],[624,2],[627,4],[633,11],[646,5],[652,4],[657,4],[665,3],[669,2],[672,5],[680,1],[682,7],[690,2],[693,6],[700,2],[704,8],[713,3],[717,8],[730,6],[738,8],[750,7],[759,6],[767,6],[775,8],[788,3],[793,8],[802,7],[811,4],[816,10],[828,6],[835,10],[847,4],[852,8],[861,3],[865,8],[877,8],[888,4],[893,6],[902,4],[908,8],[920,7],[929,4],[935,6],[943,8],[955,7],[964,6],[972,6],[980,3],[985,5],[992,11],[1006,11],[1019,5],[1025,4],[1030,6],[1040,5],[1047,11],[1061,6],[1069,3],[1073,5],[1079,4],[1084,6],[1092,7],[1100,2],[1103,6],[1111,6],[1119,3],[1124,5],[1131,4],[1138,11],[1151,5],[1157,4],[1162,6],[1172,5],[1179,4],[1186,6],[1194,3],[1198,5],[1204,4],[1209,6],[1217,4],[1222,7],[1230,7],[1239,11],[1252,4],[1257,5],[1263,2],[1266,7],[1275,5],[1282,3],[1288,3],[1292,3],[1296,5],[1302,7],[1312,8],[1321,3],[1325,8],[1338,6],[1346,8],[1358,7],[1367,6],[1375,4],[1381,8],[1393,7],[1402,4]]},"725":{"position":[[23,4],[28,10],[39,9],[51,11],[65,3],[87,4],[92,10],[103,9],[115,11],[127,5],[133,3],[138,5],[151,4],[156,7],[164,9],[176,7],[184,4],[189,3],[197,4],[203,5],[210,7],[218,6],[227,4],[234,3],[239,5],[255,3],[259,4],[264,10],[275,6],[284,3],[290,4],[298,2],[301,2],[304,2],[312,4],[317,13],[331,3],[337,4],[344,10],[357,6],[365,10],[376,3],[381,3],[388,4],[394,1],[397,10],[409,7],[417,4],[422,3],[430,4],[436,5],[445,9],[456,3],[463,4],[468,7],[476,4],[482,2],[485,3],[492,3],[498,6],[505,3],[510,3],[516,5],[523,3],[530,3],[534,9],[544,1],[546,3],[551,2],[554,3],[561,3],[567,6],[574,3],[579,3],[585,6],[593,3],[600,6],[607,6],[614,5],[621,2],[624,3],[631,3],[637,6],[644,3],[649,3],[655,5],[664,4],[671,4],[677,6],[684,9],[697,2],[700,1],[703,3],[710,2],[713,8],[722,4],[727,6],[735,5],[743,3],[750,3],[756,6],[763,3],[768,3],[774,10],[788,6],[795,4],[800,5],[807,5],[814,9],[825,3],[830,6],[837,10],[849,3],[855,4],[861,1],[864,10],[876,7],[884,10],[897,4],[904,3],[909,5],[918,5],[925,3],[932,3],[936,9],[946,1],[948,3],[953,2],[956,3],[963,3],[969,6],[976,3],[981,3],[987,6],[995,3],[1002,6],[1009,6],[1016,5],[1023,2],[1026,3],[1033,3],[1039,6],[1046,3],[1051,3],[1057,9],[1070,6],[1077,9],[1089,2],[1092,3],[1096,10],[1110,9],[1122,6],[1129,3],[1134,3],[1138,6],[1146,10],[1157,3],[1161,5],[1171,5],[1180,10],[1192,9],[1203,10],[1217,10],[1228,9],[1240,9],[1251,3],[1258,6],[1265,4],[1270,3],[1275,5],[1282,10],[1294,3],[1299,2],[1302,3],[1309,3],[1315,6],[1322,3],[1327,3],[1333,3],[1337,6],[1344,3],[1348,2],[1351,3],[1358,4],[1363,9],[1373,9],[1385,6],[1394,3],[1401,3],[1407,6],[1414,3],[1419,3],[1425,6],[1432,6],[1440,3],[1453,4],[1459,1],[1462,11],[1475,14],[1490,6],[1497,7],[1506,5],[1517,1],[1519,2],[1522,4],[1532,5],[1538,1],[1540,2],[1543,6],[1558,4],[1566,6],[1573,4],[1583,7],[1592,6],[1602,1],[1604,8],[1613,4],[1622,3],[1626,5],[1632,3],[1642,2],[1645,6],[1657,2],[1660,8],[1670,2],[1676,7],[1684,3],[1689,10],[1702,2],[1710,5],[1718,8],[1727,11],[1749,7],[1757,3],[1761,4],[1771,3],[1775,6],[1783,7],[1791,3],[1795,7],[1803,2],[1807,1],[1809,1],[1813,4],[1841,2],[1844,8],[1854,2],[1860,6],[1868,10],[1881,2],[1887,5],[1896,3],[1905,2],[1908,3],[1915,8],[1924,11],[1936,5],[1944,3],[1951,3],[1960,6],[1967,3],[1971,6],[1979,5],[1985,6],[1992,6],[2001,1],[2003,1],[2007,3],[2020,3],[2024,6],[2032,5],[2038,8],[2047,3],[2051,7],[2060,1],[2062,1],[2066,4],[2097,1],[2099,8],[2108,4],[2117,11],[2133,3],[2138,6],[2149,4],[2155,6],[2162,12],[2181,5],[2188,7],[2219,2],[2222,6],[2232,7],[2240,5],[2249,7],[2262,6],[2269,5],[2280,1],[2282,8],[2291,4],[2297,5],[2305,7],[2316,3],[2320,6],[2328,7],[2336,3],[2340,7],[2348,2],[2352,1],[2356,4],[2367,4],[2377,3],[2381,6],[2389,10],[2400,3],[2404,7],[2412,2],[2416,1],[2419,3],[2423,7],[2434,4],[2451,6],[2458,3],[2466,4],[2472,1],[2475,11],[2488,23],[2512,6],[2519,7],[2528,7],[2536,7],[2545,5],[2553,1],[2555,2],[2558,4],[2565,5],[2571,1],[2573,2],[2576,6],[2585,4],[2593,6],[2600,4],[2607,7],[2616,6],[2626,1],[2628,8],[2637,4],[2643,3],[2647,14],[2664,4],[2669,2],[2672,6],[2681,2],[2684,8],[2694,2],[2700,7],[2708,3],[2713,10],[2726,2],[2731,8],[2743,8],[2752,11],[2766,6],[2774,3],[2781,7],[2789,7],[2797,8],[2807,2],[2810,3],[2817,3],[2823,6],[2830,3],[2834,6],[2842,5],[2848,10],[2859,6],[2868,1],[2872,3],[2879,14],[2896,6],[2905,7],[2913,3],[2917,4],[2924,3],[2928,6],[2936,7],[2944,3],[2948,7],[2956,2],[2960,1],[2962,1],[2966,4],[2986,2],[2989,8],[2999,2],[3005,6],[3013,10],[3026,2],[3032,14],[3050,3],[3056,9],[3067,3],[3074,7],[3082,7],[3090,14],[3106,2],[3109,3],[3116,3],[3122,6],[3129,3],[3133,6],[3141,5],[3147,10],[3158,6],[3167,1],[3171,3],[3178,2],[3181,3],[3188,8],[3197,11],[3209,9],[3221,3],[3228,3],[3234,6],[3241,3],[3245,6],[3253,5],[3259,6],[3266,6],[3275,1],[3279,3],[3286,3],[3290,6],[3298,9],[3308,5],[3314,8],[3323,3],[3327,7],[3336,1],[3338,1],[3342,4],[3350,1],[3352,8],[3361,4],[3370,11],[3383,3],[3388,6],[3396,4],[3402,6],[3409,12],[3425,5],[3432,7],[3443,2],[3446,6],[3456,7],[3464,5],[3473,7],[3483,6],[3490,5],[3498,1],[3500,8],[3509,4],[3515,5],[3523,7],[3531,3],[3535,6],[3543,7],[3551,3],[3555,7],[3563,2],[3567,1],[3569,1],[3573,4],[3581,4],[3588,3],[3592,6],[3600,10],[3611,3],[3615,7],[3623,2],[3627,1],[3630,3],[3634,7],[3643,1],[3647,4],[3655,6],[3662,3]]},"727":{"position":[[7,4],[13,1],[16,13],[31,11],[43,5],[49,3],[54,5],[62,2],[65,3],[70,2],[76,5],[83,3],[89,2],[94,1],[96,9],[108,3],[112,6],[119,3],[125,6],[132,3],[136,6],[144,7],[152,5],[158,4],[167,4],[173,1],[176,11],[189,11],[203,3],[209,6],[216,1],[218,9]]},"729":{"position":[[9,1],[26,2],[29,6],[41,4],[47,16],[69,2],[79,11],[91,23],[115,7],[123,16],[140,11],[154,11],[166,13],[180,6]]},"731":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,4],[456,5],[463,3],[469,1],[471,4],[476,7],[484,7],[492,4],[497,11],[510,5],[517,3],[524,4],[530,8],[542,7],[550,3],[554,7],[562,2],[565,4],[570,5],[576,8],[585,3],[589,7],[597,4],[603,4],[608,2],[611,2],[614,2],[617,2],[620,2],[623,3],[629,4],[636,4],[643,6],[651,8],[663,7],[671,3],[675,7],[683,2],[686,4],[691,11],[704,4],[709,5],[715,2],[718,4],[724,5],[731,3],[737,4],[743,5],[749,2],[752,2],[756,1],[758,4],[763,2],[766,7],[774,7],[782,4],[787,11],[800,5],[807,3],[814,11],[827,5],[833,4],[838,4],[846,3],[850,2],[853,5],[861,1],[863,7],[871,2],[874,6],[881,2],[885,8],[894,3],[898,8],[911,6],[919,8],[931,7],[940,6],[948,6],[956,8],[968,7],[977,4],[983,3],[988,8]]},"737":{"position":[[21,6],[28,7],[36,2],[42,7],[75,6],[89,4],[94,7],[102,9],[114,5],[122,5],[128,4],[135,5],[141,4],[148,6],[155,6],[162,5],[169,5],[178,12],[200,12],[217,6],[237,11],[260,4],[265,11],[277,6],[286,3],[290,7],[298,5],[304,12],[336,3],[340,12],[353,4],[360,6],[371,8],[381,4],[389,6],[396,6],[403,2],[409,8],[430,15],[448,8],[457,4],[463,1],[466,11],[479,8],[488,3],[492,7],[501,5],[509,1],[511,2],[514,4],[521,5],[527,1],[529,2],[532,6],[541,4],[549,3],[553,4],[560,2],[563,1],[566,2],[572,1],[574,8],[583,4],[590,2],[595,6],[602,6],[609,3],[614,7],[622,7],[630,10],[645,1],[647,8],[656,4],[665,11],[678,3],[683,3],[688,5],[695,7],[704,4],[710,3],[714,12],[732,3],[736,7],[745,10],[759,3],[763,4],[771,6],[778,3],[803,6],[810,6],[817,2],[820,4],[826,1],[829,11],[842,8],[856,6],[864,5],[873,1],[875,2],[878,5],[886,5],[892,1],[894,2],[897,7],[907,7],[918,4],[923,3],[927,6],[934,4],[940,4],[948,4],[953,3],[957,6],[964,4],[970,6],[982,6],[991,3],[995,5],[1001,4],[1006,6],[1014,5],[1020,5],[1028,4],[1033,4],[1038,6],[1046,5],[1054,2],[1057,4],[1062,4],[1070,6],[1077,3],[1081,6],[1089,8],[1098,10],[1109,2],[1113,1],[1117,4],[1125,2],[1128,7],[1136,4],[1144,6],[1151,3],[1157,4],[1162,4],[1170,4],[1175,4],[1181,2],[1187,1],[1189,8],[1198,4],[1204,2],[1208,2],[1213,6],[1220,3],[1224,6],[1232,7],[1241,1],[1243,3],[1247,10],[1260,4],[1268,3],[1272,1],[1275,3],[1282,5],[1288,4],[1293,4],[1300,2],[1303,3],[1310,5],[1316,3],[1322,3],[1329,3],[1335,6],[1342,3],[1350,7],[1358,4],[1366,4],[1371,4],[1376,4],[1384,5],[1390,6],[1399,6],[1406,6],[1414,4],[1420,6],[1427,3],[1433,3],[1437,4],[1445,5],[1451,1],[1453,8],[1464,2],[1468,7],[1476,4],[1484,2],[1487,3],[1494,5],[1500,4],[1507,3],[1514,3],[1520,6],[1527,3],[1532,3],[1542,6],[1549,6],[1557,3],[1563,4],[1569,1],[1572,11],[1585,8],[1596,5],[1604,6],[1612,3],[1619,1],[1621,8],[1639,3],[1643,1],[1646,4],[1654,5],[1660,6],[1669,2],[1672,3],[1679,1],[1681,12],[1694,4],[1701,3],[1708,3],[1725,6],[1732,3]]},"739":{"position":[[11,4],[17,1],[20,10],[32,12],[49,6],[58,6],[67,6],[75,4]]},"741":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,7],[459,5],[466,3],[472,3],[476,3],[480,5],[486,7],[496,8],[505,3],[509,8],[522,6],[530,8],[542,7],[551,6],[559,4],[565,8],[577,7],[586,4]]},"745":{"position":[[6,4]]},"748":{"position":[[6,3],[10,3],[14,11],[26,5],[42,12],[42,7],[50,4],[56,5]]},"750":{"position":[[0,4],[5,10],[16,6],[25,3],[29,6],[36,7],[44,7],[54,4],[59,13],[73,3],[77,6],[85,7],[93,7],[103,10],[116,6],[124,10],[135,3],[140,3],[145,7],[154,7],[165,4],[171,1],[174,10],[186,4],[191,4],[196,6],[204,6],[213,6],[220,8],[229,4],[234,1],[236,3],[241,4],[248,5],[258,4],[264,1],[267,10],[279,4],[284,4],[289,6],[297,5],[303,3],[308,5],[316,9],[327,3],[334,1],[336,7],[344,7],[352,5],[359,2],[362,3],[369,3],[375,6],[382,3],[388,2],[391,3],[398,2],[401,8],[410,1],[412,3],[417,4],[424,3],[431,3],[437,6],[444,3],[450,6],[457,2],[460,9],[470,1],[472,4],[477,4],[484,9],[495,4],[503,4],[509,1],[512,10],[524,4],[529,4],[534,6],[543,3],[548,5],[557,4],[563,3],[570,2],[573,8],[582,1],[584,4],[589,4],[596,2],[599,3],[606,3],[612,6],[619,3],[624,3],[630,6],[637,1],[639,7],[647,7],[655,4],[663,4],[669,1],[672,10],[684,6],[691,4],[696,6],[704,4],[711,1],[714,3],[721,2],[724,4],[729,1],[731,4],[736,4],[743,6],[750,3],[757,3]]},"753":{"position":[[0,4],[5,11],[17,6],[30,10],[42,10],[55,4],[60,23],[84,5],[91,10],[104,11],[118,6],[126,11],[139,8],[149,4],[154,3],[158,6],[166,11],[180,10],[192,5],[199,6],[207,9],[218,6],[227,4],[233,2],[236,6]]},"755":{"position":[[3,8],[24,15],[42,8],[51,4],[57,1],[60,11],[73,8],[82,3],[86,7],[95,5],[103,1],[105,2],[108,4],[115,5],[121,1],[123,2],[126,6],[138,4],[156,4],[164,3],[168,4],[207,2],[210,1],[212,10],[226,3],[233,1],[235,10],[246,6],[253,4],[312,2],[315,8],[325,2],[331,3],[336,10],[349,2],[354,3],[359,3],[366,1],[368,10],[379,4],[384,4],[390,2],[393,3],[400,3],[406,6],[413,3],[417,6],[425,5],[431,4],[436,6],[445,1],[447,1],[451,3],[458,3],[464,8],[473,11],[485,3],[490,2],[493,3],[500,3],[506,6],[513,3],[517,6],[525,5],[531,6],[538,6],[547,1],[549,1],[553,3],[560,3],[564,6],[572,5],[578,8],[587,3],[591,7],[600,1],[602,1],[606,4],[616,2],[619,1],[622,2],[628,1],[630,8],[639,4],[646,2],[651,6],[658,6],[665,3],[670,7],[678,7],[686,10],[701,1],[703,8],[712,4],[721,11],[734,3],[739,3],[744,5],[751,7],[760,4],[766,3],[770,12],[788,3],[792,7],[801,10],[815,3],[819,4],[827,6],[834,3]]},"757":{"position":[[0,4],[6,1],[9,11],[22,11],[34,4],[39,6],[47,5],[55,1],[57,2],[60,4],[67,5],[73,1],[75,2],[78,6],[87,4],[93,2],[99,1],[101,8],[110,4],[116,2],[120,2],[125,6],[132,6],[139,3],[144,7],[152,3],[156,10],[171,2],[174,4],[179,5],[188,7],[198,6],[205,6],[212,3],[217,7],[225,7],[233,7],[257,2],[260,8],[270,2],[276,4],[281,3],[286,10],[299,2],[305,1],[307,10],[321,3],[327,2],[330,3],[337,1],[339,10],[350,4],[355,4],[361,8],[370,11],[386,3],[393,3],[399,3],[403,6],[411,5],[417,9],[427,3],[432,1],[434,1],[438,4],[448,2],[451,3],[458,4],[463,3],[467,4],[475,3],[482,3],[488,6],[495,3],[501,4],[506,5],[514,7],[522,3],[526,7],[535,7],[546,4],[551,3],[555,4],[563,6],[570,3]]},"759":{"position":[[0,4],[6,1],[9,11],[22,6],[29,3],[33,7],[41,7],[61,6],[68,6],[87,6],[97,4],[102,9],[112,1],[116,4],[121,6],[129,3],[135,6],[144,4],[151,3],[155,4],[163,6],[170,4],[177,6],[184,1],[187,3],[191,7],[200,5],[206,7],[214,5],[222,2],[225,1],[227,10],[241,3],[247,3],[251,4],[257,4],[265,5],[271,1],[273,8],[284,2],[287,4],[292,5],[301,7],[311,2],[314,8],[324,2],[330,4],[335,3],[340,10],[353,2],[358,2],[361,3],[368,1],[370,10],[381,4],[386,4],[392,8],[401,11],[417,3],[424,3],[430,3],[434,6],[442,5],[448,9],[458,3],[463,1],[465,1],[469,4]]},"761":{"position":[[0,7],[11,11],[23,13],[39,4],[45,16],[65,5],[74,11],[86,13],[103,5],[111,7],[123,1],[132,11],[147,11],[159,14],[174,5]]},"763":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,4],[456,5],[463,3],[469,1],[471,4],[476,7],[484,7],[492,4],[497,11],[510,5],[517,3],[524,4],[530,8],[542,7],[550,3],[554,7],[562,2],[565,4],[570,9],[580,5],[586,8],[595,3],[599,7],[607,4],[613,4],[618,2],[621,2],[624,2],[627,2],[630,2],[633,3],[639,4],[646,4],[653,6],[661,8],[673,7],[681,3],[685,7],[693,2],[696,4],[702,11],[715,4],[720,5],[726,2],[729,4],[735,5],[742,3],[748,4],[754,5],[760,2],[763,2],[767,1],[769,4],[774,2],[777,7],[785,7],[793,4],[798,11],[811,5],[818,3],[825,11],[838,5],[844,4],[849,4],[857,3],[861,2],[864,5],[872,1],[874,7],[882,2],[885,6],[892,2],[896,8],[905,3],[909,8],[922,6],[930,8],[942,7],[951,6],[959,6],[967,8],[979,7],[988,4]]},"766":{"position":[[7,10],[18,9],[28,9],[39,3],[45,5],[61,6],[68,1],[71,6],[133,2],[150,9]]},"768":{"position":[[23,3],[45,2]]},"771":{"position":[[16,4],[21,13],[35,6],[45,4],[51,1],[54,13],[69,4],[74,4],[79,6],[87,5],[95,3],[99,7],[113,5],[122,4],[128,6],[135,3],[141,4],[146,15],[162,6],[171,2],[175,13],[203,4],[209,1],[212,15],[229,8],[240,5],[248,6],[255,1],[257,2],[260,4],[278,15],[297,13]]},"773":{"position":[[10,4],[15,8],[24,9],[36,4],[41,4],[46,6],[54,5],[74,4],[79,13],[93,6],[103,4],[109,1],[112,13],[127,4],[132,4],[137,6],[145,5],[153,3],[157,7],[171,5],[180,4],[186,6],[193,3],[199,4],[204,18],[223,6],[233,4],[239,1],[242,18],[262,4],[267,4],[272,6],[280,5],[288,3],[292,7],[306,10],[320,4],[326,6],[333,3],[351,4],[356,15],[372,6],[381,2],[384,8],[409,4],[414,18],[433,2],[436,8],[447,15],[465,6],[473,15],[489,2],[493,2],[499,4],[505,1],[508,15],[525,8],[536,5],[544,6],[551,1],[553,2],[556,4]]},"776":{"position":[[7,6],[16,4],[21,6],[28,9],[40,3],[44,7],[52,6],[62,4],[67,13],[81,6],[90,4],[96,1],[99,13],[114,3],[118,7],[126,6],[136,3],[140,7],[148,7],[159,4],[164,7],[172,6],[181,6],[188,6],[197,4],[202,10],[213,6],[220,6],[229,7],[239,6],[247,7],[255,6],[263,6],[273,4],[279,1],[282,7],[291,6],[302,1],[304,6],[311,3]]},"778":{"position":[[0,4],[5,10],[16,9],[28,4],[33,2],[37,7],[46,4],[51,6],[59,5],[67,4],[72,11],[84,6],[93,4],[99,1],[102,11],[115,8],[124,5],[130,6],[138,6],[145,10],[157,5],[176,6],[183,6],[190,4],[195,5]]},"780":{"position":[[12,2],[18,7],[26,4],[31,4],[36,8],[45,9],[57,4],[62,4],[67,4],[73,5],[81,4],[86,7],[94,6],[103,2],[106,8],[130,4],[135,7],[143,6],[152,4],[158,1],[161,7],[170,4],[175,4],[180,4],[186,5]]},"783":{"position":[[3,7],[11,2],[14,4],[19,14],[34,9],[46,7],[54,2],[57,3],[64,4],[70,5],[77,4],[82,4],[88,4],[94,5],[105,7],[113,2],[116,4],[121,11],[133,6],[142,4],[147,14],[164,4],[169,14],[184,4],[189,14],[206,11],[220,6],[228,11],[240,4],[246,4],[266,5],[273,10],[285,7]]},"785":{"position":[[0,4],[5,7],[13,9],[25,6],[32,1],[34,4],[39,14],[55,1],[58,4],[63,7],[72,5],[80,4],[85,6],[92,6],[101,8],[110,3],[114,6],[121,7],[131,4],[137,1],[140,6],[148,8],[157,4],[162,6],[170,7],[178,7],[189,1],[191,8],[200,4],[208,7],[229,4],[234,11],[246,6],[255,7],[264,11],[278,4],[284,1],[287,11],[300,6],[307,1],[309,4],[314,14],[330,1],[333,4],[338,7],[347,5]]},"787":{"position":[[2,2],[9,2],[24,6],[31,4],[47,4],[52,2],[55,4],[60,21],[85,11],[99,4],[104,5],[110,14],[126,18],[146,6],[154,11],[170,3],[182,9],[195,3],[199,3],[205,9],[215,7],[223,18],[243,9],[253,7],[261,14],[277,2],[282,3],[289,2],[292,3],[297,2],[300,7],[308,18],[329,2],[332,7],[340,14],[357,2],[360,6],[367,4],[372,1],[375,11]]},"791":{"position":[[0,3],[19,2],[80,2],[95,3]]},"794":{"position":[[2,7],[12,9],[33,7],[41,4],[46,6],[56,3],[62,4],[73,15],[101,4],[106,15],[122,6],[131,8],[142,6],[149,8],[158,4],[163,5],[188,10],[213,4],[218,10],[229,6],[238,5],[246,6],[253,12],[266,4],[272,15],[288,8],[297,4],[302,6],[316,8],[328,10],[348,4],[354,1],[357,10],[369,8],[378,1],[382,6],[390,5],[398,3],[406,15],[423,8],[433,1],[436,8],[446,4],[451,4],[456,5],[466,1],[468,12],[484,3],[488,6],[497,3],[501,8],[525,3],[532,10],[549,4],[555,1],[558,10],[570,3],[578,3],[584,6],[593,4],[598,3],[607,1],[609,12],[623,1],[625,5],[633,3],[637,8],[646,3],[650,7],[659,7],[667,5],[676,1],[678,5],[685,3],[689,8],[701,3],[713,4],[720,1],[722,8],[732,6],[748,4],[756,10],[773,4],[779,1],[782,10],[794,4],[803,5],[809,1],[811,8],[823,4],[828,4],[837,10],[852,10],[864,5],[873,6],[883,12],[897,4],[902,4],[908,15],[926,8],[936,4],[941,4],[946,6],[959,2],[962,10],[973,3],[987,4],[992,5],[998,3],[1004,4],[1009,11],[1022,10],[1033,8],[1044,6],[1052,1],[1057,1],[1062,1],[1067,10],[1078,8],[1089,6],[1097,1],[1102,1],[1107,1],[1122,10],[1133,4],[1162,8],[1173,10],[1186,7],[1206,8],[1215,7],[1239,10],[1258,7],[1304,7],[1322,7]]},"797":{"position":[[4,2],[10,1],[17,7],[33,5],[46,4],[57,7],[69,5],[98,1],[101,2],[109,2],[115,2],[121,5],[130,7],[150,1],[157,2],[172,7],[188,1],[191,2],[199,2],[205,2],[211,5],[220,7],[236,7],[244,4],[249,6],[259,3],[265,4],[273,4],[278,4],[289,2],[295,4],[300,4],[305,3],[310,1],[313,2],[319,4],[324,4],[329,3],[334,2],[337,4],[346,2],[352,2],[355,4],[360,5],[366,1],[370,4],[375,6],[383,5],[389,5],[395,2],[420,5],[431,2],[434,3],[438,7],[447,5],[456,5],[469,2],[472,2],[475,2],[478,5],[485,2],[488,5],[498,2],[501,3],[505,7],[514,5],[523,5],[536,2],[539,2],[542,2],[545,5],[552,1],[554,5],[564,2],[567,3],[571,7],[580,5],[589,5],[602,2],[605,2],[608,2],[611,5],[618,1],[637,5],[644,4],[654,2],[657,3],[661,7],[670,5],[679,5],[687,4],[695,4],[707,2],[710,2],[713,2],[716,5],[723,2],[726,4],[732,4],[737,5],[744,4],[753,2],[756,3],[760,7],[769,5],[778,5],[786,4],[794,4],[806,2],[809,2],[812,2],[815,5],[822,1],[824,4],[830,5],[836,5],[843,4],[852,2],[855,3],[859,7],[868,5],[877,5],[885,4],[893,4],[905,2],[908,2],[911,2],[914,5],[921,1],[923,4],[929,5]]},"799":{"position":[[13,9],[24,12],[39,8],[60,5],[69,2],[83,7],[97,3],[108,3],[121,4],[143,7],[151,4],[156,6],[166,3],[172,4],[197,8],[211,4],[216,15],[232,6],[241,8],[252,6],[259,8],[268,4],[273,5],[290,4],[295,10],[306,6],[315,5],[323,6],[330,12],[343,4],[349,15],[365,8],[374,4],[379,6],[388,8],[397,4],[402,6],[428,3],[435,10],[452,4],[458,1],[461,10],[473,3],[481,5],[487,5],[493,1],[495,8],[522,3],[528,6],[537,4],[542,3],[547,2],[555,1],[557,12],[571,2],[575,2],[580,3],[584,7],[593,12],[606,6],[614,7],[622,3],[630,6],[639,1],[641,5],[649,3],[653,8],[662,3],[666,7],[675,7],[683,5],[692,1],[694,5],[710,3],[714,8],[726,3],[730,4],[737,1],[739,8],[749,3],[753,7],[762,8],[771,4],[776,6],[784,7],[792,3],[800,6],[816,8],[832,4],[838,1],[841,10],[853,8],[862,1],[866,6],[874,5],[882,3],[890,15],[907,8],[917,1],[920,8],[930,4],[935,4],[940,5],[950,6],[959,4],[964,1],[966,12],[982,3],[987,6],[996,3],[1000,8],[1009,4],[1016,1],[1018,8],[1028,6],[1035,3],[1039,6],[1047,10],[1058,2],[1061,8],[1070,4],[1084,4],[1092,10],[1106,9],[1121,4],[1127,1],[1130,10],[1142,4],[1151,5],[1157,1],[1159,8],[1177,5],[1183,1],[1185,12],[1210,12],[1225,1],[1227,8],[1248,3],[1252,7],[1261,10],[1272,7],[1280,10],[1295,4],[1300,4],[1309,10],[1324,10],[1336,5],[1345,6],[1355,12],[1369,4],[1374,4],[1380,15],[1398,8],[1408,4],[1413,4],[1418,6],[1429,8],[1439,4],[1444,4],[1449,6],[1462,2],[1465,10],[1476,3],[1482,4],[1487,5],[1493,3],[1499,4],[1504,11],[1517,10],[1528,8],[1539,6],[1547,1],[1552,1],[1557,1],[1562,10],[1573,8],[1584,6],[1592,1],[1597,1],[1602,1],[1607,10],[1618,4]]},"801":{"position":[[7,7],[15,7],[38,10],[49,9],[70,7],[80,6],[130,8],[160,7],[168,7],[191,8],[200,8],[212,4],[221,7],[229,4],[234,6],[244,7],[254,3],[260,4],[285,8],[299,4],[304,15],[320,6],[329,8],[340,6],[347,8],[356,4],[361,5],[379,4],[384,10],[395,6],[404,5],[412,6],[419,12],[432,4],[438,15],[454,8],[463,4],[468,6],[477,8],[486,4],[491,6],[505,3],[512,10],[529,4],[535,1],[538,10],[550,3],[558,5],[564,5],[570,1],[572,8],[582,3],[588,6],[597,4],[602,3],[607,2],[615,1],[617,12],[631,2],[635,2],[640,3],[644,7],[653,12],[666,6],[674,7],[682,3],[690,6],[699,1],[701,5],[709,3],[713,8],[722,3],[726,7],[735,7],[743,5],[752,1],[754,5],[761,3],[765,8],[777,3],[781,4],[788,1],[790,8],[800,3],[804,7],[813,8],[822,4],[827,6],[835,7],[843,3],[851,6],[867,11],[882,7],[900,4],[906,1],[909,10],[921,11],[933,3],[937,7],[945,7],[954,5],[962,6],[970,5],[978,3],[986,15],[1003,8],[1013,5],[1020,8],[1030,4],[1035,4],[1040,5],[1047,1],[1072,4],[1077,5],[1083,1],[1087,4],[1092,11],[1105,6],[1114,4],[1119,1],[1121,12],[1137,3],[1150,2],[1153,7],[1164,6],[1173,4],[1178,3],[1187,3],[1191,8],[1201,6],[1208,3],[1212,4],[1219,3],[1223,4],[1231,6],[1238,3],[1242,6],[1250,3],[1254,5],[1260,7],[1268,2],[1271,9],[1283,1],[1287,3],[1291,3],[1300,4],[1307,1],[1309,8],[1319,6],[1326,3],[1330,6],[1338,10],[1349,8],[1358,4],[1365,4],[1372,3],[1376,4],[1384,6],[1391,3],[1395,6],[1403,4],[1408,7],[1416,2],[1419,9],[1431,1],[1435,3],[1439,3],[1453,4],[1463,4],[1469,1],[1472,10],[1484,4],[1493,5],[1499,1],[1501,8],[1511,5],[1517,1],[1519,12],[1535,1],[1537,8],[1546,3],[1550,7],[1559,10],[1570,7],[1578,10],[1593,4],[1598,4],[1607,10],[1622,10],[1634,5],[1643,6],[1653,12],[1667,4],[1672,4],[1678,15],[1696,8],[1706,4],[1711,4],[1716,6],[1727,8],[1737,4],[1742,4],[1747,6],[1760,2],[1763,10],[1774,3],[1790,3],[1797,7],[1805,10],[1818,10],[1829,11],[1841,3],[1848,6],[1856,1],[1861,1],[1866,1],[1878,7],[1890,3],[1899,10],[1911,6],[1921,7],[1929,11],[1941,7],[1949,10],[1963,1],[1965,4],[1970,11],[1983,5],[1989,6],[1998,3],[2005,10],[2016,11],[2028,10],[2042,6],[2050,6],[2060,4],[2068,4],[2076,2],[2079,3],[2086,3],[2092,3],[2096,7],[2105,7],[2113,3],[2120,3],[2135,4],[2141,7],[2152,7],[2160,11],[2172,7],[2180,10],[2194,1],[2196,4],[2201,6],[2209,5],[2215,7],[2225,10],[2236,11],[2248,4],[2256,6],[2264,1],[2269,1],[2274,1],[2279,10],[2290,4]]},"803":{"position":[[0,14],[23,7],[31,7],[99,14],[171,7],[206,7],[240,14],[275,7],[316,7],[343,14],[363,8],[465,7],[476,8],[485,8],[527,14],[569,4],[574,7],[596,4],[605,9],[616,8],[660,1],[687,7],[715,7],[723,7],[736,15],[777,15],[795,18],[823,8],[834,8],[845,7],[853,4],[858,6],[868,7],[878,6],[887,3],[897,7],[914,4],[919,7],[927,9],[939,7],[947,3],[951,7],[959,7],[968,1],[971,7],[980,4],[989,4],[994,6],[1003,3],[1009,5],[1020,7],[1040,4],[1045,7],[1053,6],[1062,5],[1070,6],[1077,7],[1085,4],[1090,7],[1098,4],[1103,4],[1108,6],[1117,4],[1122,4],[1127,6],[1148,4],[1153,11],[1165,6],[1174,3],[1178,5],[1184,4],[1189,4],[1194,6],[1205,4],[1211,1],[1214,11],[1227,4],[1236,4],[1241,6],[1252,6],[1259,1],[1261,4],[1268,4],[1274,1],[1277,11],[1290,3],[1296,5],[1304,6],[1311,1],[1313,3],[1322,15],[1343,4],[1348,15],[1364,6],[1373,11],[1385,8],[1396,6],[1405,4],[1411,1],[1414,15],[1431,7],[1439,3],[1443,7],[1451,7],[1460,1],[1463,7],[1474,5],[1480,5],[1486,1],[1488,4],[1494,1],[1496,5],[1504,1],[1506,8],[1515,3],[1519,7],[1528,15],[1544,8],[1556,1],[1558,5],[1570,15],[1591,4],[1596,15],[1612,6],[1621,11],[1633,6],[1640,4],[1647,6],[1656,4],[1662,1],[1665,15],[1682,7],[1690,3],[1694,7],[1702,7],[1711,1],[1714,7],[1725,5],[1731,5],[1737,1],[1739,4],[1745,1],[1747,6],[1757,1],[1759,5],[1765,5],[1771,1],[1773,6],[1783,4],[1788,10],[1802,7],[1812,6],[1820,7],[1829,5],[1838,6],[1848,7],[1857,4],[1862,4],[1867,7],[1877,4],[1883,4],[1888,4],[1893,6],[1904,4],[1910,4],[1915,4],[1920,6],[1938,3],[1949,4],[1955,1],[1958,7],[1967,3],[1975,5],[1981,5],[1987,1],[1989,4],[1995,3],[2001,6],[2010,4],[2015,3],[2024,1],[2026,7],[2035,3],[2042,7],[2050,10],[2070,3],[2077,3],[2081,7],[2089,3],[2094,1],[2097,4],[2104,1],[2106,4],[2112,6],[2128,4],[2145,4],[2151,1],[2154,7],[2163,4],[2168,3],[2172,7],[2180,7],[2189,3],[2193,7],[2202,5],[2210,6],[2219,4],[2224,1],[2226,7],[2237,3],[2242,6],[2251,4],[2258,3],[2262,4],[2270,6],[2277,3],[2281,3],[2287,4],[2294,3],[2298,4],[2306,6],[2313,3],[2317,3],[2325,4],[2332,1],[2334,4],[2340,6],[2347,6],[2354,3],[2359,7],[2367,2],[2370,7],[2380,4],[2387,3],[2391,4],[2399,6],[2406,3],[2410,3],[2423,4],[2433,4],[2439,1],[2442,7],[2451,4],[2460,5],[2466,1],[2468,4],[2476,1],[2478,4],[2485,4],[2490,4],[2499,7],[2510,10],[2523,2],[2526,7],[2534,3],[2540,3],[2547,7],[2555,10],[2568,6],[2579,15],[2596,11],[2609,11],[2621,4],[2627,4],[2632,4],[2637,6],[2649,8],[2661,6],[2669,1],[2674,1],[2679,1],[2686,7],[2694,4],[2699,3],[2704,6],[2720,6],[2731,15],[2748,11],[2761,11],[2773,4],[2779,4],[2784,4],[2789,6],[2801,6],[2809,4],[2814,4],[2821,6],[2829,1],[2835,7],[2843,4],[2848,3],[2853,6],[2861,3],[2865,7],[2874,7],[2882,5],[2893,6],[2900,6],[2908,7],[2916,4],[2934,13],[2948,1],[2978,6],[2985,3],[2989,4],[3001,7],[3045,7],[3053,4],[3058,6],[3068,7],[3078,6],[3087,3],[3093,4],[3107,7],[3118,4],[3123,7],[3131,9],[3143,7],[3151,7],[3159,7],[3169,7],[3178,4],[3187,4],[3192,6],[3201,3],[3207,5],[3218,7],[3232,4],[3237,7],[3245,6],[3254,5],[3262,6],[3269,7],[3277,4],[3282,7],[3290,4],[3295,4],[3300,6],[3309,4],[3314,4],[3319,6],[3330,4],[3335,10],[3349,7],[3359,6],[3367,7],[3376,5],[3385,6],[3395,7],[3404,4],[3409,4],[3414,7],[3424,4],[3430,4],[3435,4],[3440,6],[3451,4],[3457,4],[3462,4],[3467,6],[3482,4],[3488,1],[3491,7],[3500,3],[3508,5],[3514,5],[3520,1],[3522,4],[3528,3],[3534,6],[3543,4],[3548,3],[3557,1],[3559,7],[3568,3],[3572,7],[3580,7],[3588,10],[3602,1],[3605,4],[3612,1],[3614,4],[3620,6],[3633,4],[3639,1],[3642,7],[3651,4],[3660,5],[3666,1],[3668,4],[3676,1],[3678,4],[3688,4],[3702,4],[3708,1],[3711,7],[3720,4],[3725,3],[3729,7],[3737,7],[3746,3],[3750,7],[3759,5],[3767,6],[3776,4],[3781,1],[3783,7],[3794,3],[3799,6],[3808,4],[3815,3],[3819,4],[3827,6],[3834,3],[3838,3],[3844,4],[3851,3],[3855,4],[3863,6],[3870,3],[3874,3],[3882,4],[3889,3],[3893,4],[3901,6],[3908,3],[3912,3],[3918,4],[3925,1],[3927,4],[3933,6],[3940,6],[3947,3],[3952,7],[3960,7],[3982,13],[3996,1],[4035,4],[4040,13],[4054,1],[4056,3],[4061,6],[4070,6],[4077,1],[4079,3],[4083,5],[4089,4],[4094,4],[4099,6],[4108,7],[4116,4],[4121,1],[4125,4],[4130,16],[4147,1],[4149,3],[4157,13],[4171,1],[4176,6],[4184,13],[4198,1],[4202,4],[4208,4],[4213,4],[4218,6],[4229,7],[4238,4],[4243,4],[4248,1],[4251,1],[4268,4],[4274,1],[4277,13],[4291,1],[4295,4],[4304,4],[4309,6],[4320,6],[4327,1],[4329,4],[4336,4],[4342,1],[4345,13],[4359,1],[4363,3],[4369,5],[4377,6],[4384,1],[4386,3],[4395,4],[4405,4],[4411,1],[4414,13],[4428,1],[4432,4],[4437,3],[4441,7],[4449,7],[4459,1],[4462,5],[4471,6],[4480,4],[4487,3],[4491,4],[4499,3],[4503,4],[4508,1],[4510,6],[4517,4],[4523,3],[4527,3],[4533,4],[4538,3],[4547,1],[4549,7],[4558,6],[4565,3],[4570,1],[4572,3],[4624,15],[4645,6],[4688,4],[4693,15],[4709,6],[4719,13],[4735,6],[4745,4],[4750,18],[4772,15],[4790,6],[4798,15],[4815,13],[4830,16],[4849,6],[4864,4],[4870,1],[4873,15],[4890,7],[4898,3],[4902,7],[4910,7],[4919,1],[4922,7],[4933,5],[4939,5],[4945,1],[4947,4],[4953,1],[4955,6],[4964,1],[4966,5],[4972,1],[4974,7],[4985,1],[4987,5],[5039,15],[5091,4],[5096,15],[5112,6],[5121,8],[5132,6],[5139,4],[5144,4],[5149,6],[5158,3],[5162,5],[5170,4],[5175,18],[5194,5],[5202,6],[5211,15],[5229,6],[5237,15],[5254,8],[5264,5],[5271,4],[5277,4],[5282,4],[5287,6],[5302,4],[5308,1],[5311,15],[5328,7],[5336,3],[5340,7],[5348,7],[5357,1],[5360,7],[5371,5],[5377,5],[5383,1],[5385,4],[5391,1],[5393,5],[5401,1],[5403,8],[5412,3],[5416,7],[5425,5],[5431,7],[5442,1],[5444,5],[5453,4],[5459,1],[5462,15],[5479,4],[5488,4],[5493,6],[5504,6],[5511,1],[5513,4],[5520,4],[5526,1],[5529,15],[5546,3],[5552,5],[5560,6],[5567,1],[5569,3],[5581,4],[5589,8],[5600,8],[5614,4],[5619,4],[5628,1],[5633,10],[5646,2],[5649,1],[5651,3],[5657,3],[5664,7],[5672,10],[5688,3],[5692,5],[5698,6],[5708,18],[5729,6],[5737,1],[5742,1],[5747,1],[5752,1],[5756,1],[5758,4],[5763,3],[5768,6],[5779,3],[5783,5],[5789,6],[5799,18],[5820,1],[5824,1],[5826,4],[5831,3],[5836,6],[5844,5],[5851,3],[5858,6],[5865,4],[5870,3],[5875,2],[5878,3],[5885,3],[5891,3],[5895,7],[5904,8],[5913,5],[5922,3],[5929,4],[5936,3],[5940,7],[5949,3],[5953,5],[5962,5],[5979,10],[5991,6],[6001,7],[6009,11],[6021,3],[6026,1],[6028,4],[6033,11],[6046,5],[6052,6],[6061,7],[6072,18],[6093,1],[6097,1],[6099,4],[6104,10],[6116,7],[6125,6],[6133,3],[6140,7],[6148,4],[6153,10],[6165,3],[6169,7],[6178,4],[6183,7],[6194,6],[6202,3],[6207,1],[6209,4],[6224,5],[6230,7],[6240,1],[6242,1],[6244,1],[6247,3],[6251,5],[6259,1],[6261,1],[6263,1],[6266,4],[6271,7],[6283,7],[6291,8],[6300,8],[6320,15],[6336,6],[6344,13],[6358,3],[6362,6],[6369,3],[6376,18],[6395,6],[6403,13],[6417,4],[6425,17],[6443,6],[6451,13],[6465,6],[6475,18],[6494,6],[6502,5],[6510,6]]},"806":{"position":[[7,9],[17,11],[29,9],[40,3],[46,5],[62,6],[69,1],[72,6],[135,2],[152,2]]},"811":{"position":[[17,4],[22,6],[29,9],[41,3],[47,5],[55,3],[74,4],[95,4],[130,4],[135,3],[139,6],[148,4],[154,1],[156,3],[161,3],[169,3],[173,7],[182,3],[186,6],[197,4],[203,1],[205,3],[210,5],[220,3],[224,7],[233,3],[237,8],[250,4],[256,1],[258,3],[263,4],[272,3],[276,7],[285,3],[289,7],[301,4],[307,1],[309,3],[314,3],[337,4],[343,1],[345,3],[350,4],[378,3],[393,3]]},"813":{"position":[[12,4],[17,5],[23,9],[35,3],[43,4],[48,7],[56,9],[68,5],[78,4],[83,5],[89,9],[101,3],[109,4],[114,7],[122,9],[134,4],[143,4],[148,6],[155,9],[167,4],[179,3],[192,4],[197,3],[201,6],[210,4],[216,1],[218,3],[223,3],[231,3],[235,7],[244,3],[248,6],[259,4],[265,1],[267,3],[272,5],[282,3],[286,7],[295,3],[299,8],[312,4],[318,1],[320,3],[325,4],[334,3],[338,7],[347,3],[351,7],[373,4],[378,10],[389,6],[398,3],[404,4],[410,1],[412,10],[424,4],[433,3],[437,7],[446,3],[450,8]]},"816":{"position":[[0,4],[5,6],[12,9],[24,5],[30,7],[40,4],[45,4],[50,9],[62,6],[69,5],[77,4],[82,4],[87,9],[99,6],[106,7]]},"818":{"position":[[14,4],[19,4],[24,1],[26,5],[35,1],[37,3],[45,4],[50,10],[61,1],[63,7],[74,1],[76,5]]},"820":{"position":[[9,4],[14,11],[26,9],[38,4],[45,5],[53,4],[60,5],[68,6],[77,7],[113,4],[118,12],[131,9],[143,4],[150,5],[160,4],[165,10],[176,9],[188,12],[201,4],[210,4],[215,10],[226,9],[238,12],[251,5],[261,4],[266,11],[278,9],[290,10],[301,10],[312,6]]},"823":{"position":[[0,4],[5,6],[12,9],[24,3],[28,2],[31,6],[40,4],[46,5],[53,4],[63,4],[69,5],[78,4],[83,6],[90,9],[102,6],[109,4],[114,4],[120,5],[126,6],[133,4],[138,4],[144,5],[150,6],[157,2],[160,6],[168,5],[185,4],[190,17],[208,1],[210,6],[219,14],[236,6],[244,14],[259,6],[267,1],[281,4],[286,18],[305,2],[308,9],[320,6],[327,6],[338,15],[356,6],[364,15],[380,12],[394,2]]},"825":{"position":[[0,4],[5,13],[19,9],[31,10],[42,1],[45,4],[50,7],[61,4],[66,14],[81,9],[93,11],[105,1],[107,4],[112,14],[145,4],[150,18],[169,1],[171,13],[186,4],[191,4],[196,7],[205,4],[210,7],[220,6],[227,4],[232,4],[237,4],[242,7],[251,4],[256,7],[266,6],[273,4],[278,11],[290,4],[295,1],[297,4],[302,14],[318,1],[321,4],[326,7],[337,1],[339,10],[350,1],[353,4],[358,9],[368,1],[371,1]]},"829":{"position":[[0,3],[34,2],[49,3],[95,4]]},"832":{"position":[[7,6],[14,12],[27,9],[38,3],[44,5],[60,7],[68,6],[87,1],[89,1],[100,1],[112,1],[136,2],[163,9],[177,6],[184,9]]},"837":{"position":[[10,4],[15,4],[20,9],[32,3],[38,6],[45,4],[52,6],[69,4],[74,7],[82,6],[91,4],[97,1],[100,7],[109,3],[115,6],[124,6],[141,4],[147,1],[150,7],[159,4],[166,6],[175,6],[200,4],[205,7],[213,6],[222,4],[228,1],[231,7],[240,3],[246,6],[255,6],[275,3],[284,4],[290,1],[293,7],[302,4],[309,6],[318,6],[340,7],[351,4],[362,3]]},"839":{"position":[[12,4],[17,5],[23,9],[35,3],[41,6],[50,4],[55,6],[62,9],[74,4],[81,6],[98,4],[103,10],[114,6],[123,4],[129,1],[132,10],[144,3],[150,6],[159,6],[182,4],[187,7],[195,6],[204,10],[217,4],[223,1],[226,7],[235,4],[242,6],[251,6],[274,4],[279,7],[287,6],[296,4],[302,1],[305,7],[314,4],[321,6],[330,6]]},"842":{"position":[[0,4],[5,16],[22,9],[34,14],[49,6],[56,7],[65,8],[74,6],[82,5],[98,4],[103,14],[118,6],[127,4],[133,1],[136,14],[152,14],[167,6],[174,7],[183,8],[192,6],[200,5],[208,2],[211,6],[221,1],[225,6],[232,6],[239,3],[250,1],[279,3],[284,4],[289,17],[307,6],[316,4],[322,1],[325,17],[344,14],[359,6],[366,7],[375,8],[384,6],[392,5],[405,6],[412,1],[423,2],[426,6],[435,1],[439,6],[446,6],[453,3]]},"844":{"position":[[0,4],[5,11],[17,9],[29,4],[34,4],[41,4],[48,6],[56,5],[70,2],[83,4],[88,11],[100,6],[109,4],[115,1],[118,11],[131,4],[136,4],[143,4],[150,6],[158,5],[167,2],[173,10],[198,6],[205,2],[209,3],[221,2],[236,3],[241,4],[246,17],[264,6],[273,4],[279,1],[282,17],[301,4],[306,4],[313,4],[320,6],[328,5],[337,2],[340,3],[344,4],[353,1],[357,6],[368,6],[375,3],[402,2],[408,10],[433,6],[441,3],[449,2],[453,3],[463,2]]},"847":{"position":[[0,6],[19,4],[24,6],[31,6],[40,4],[45,6],[54,4],[60,1],[63,6],[71,3],[77,6],[86,6],[93,1],[95,4],[121,6],[128,4],[133,3],[137,6],[146,6],[155,4],[161,1],[164,3],[169,4],[176,6],[185,6],[206,3],[214,3],[218,6],[225,4],[238,3],[242,7],[250,3],[254,3],[271,3],[275,7],[283,3],[287,4]]},"849":{"position":[[7,4],[12,12],[25,9],[37,7],[47,7],[57,7],[78,7],[86,4],[91,6],[98,6],[107,3],[111,9],[123,7]]},"851":{"position":[[10,5],[18,9]]},"853":{"position":[[0,3],[19,2],[76,3],[94,2],[97,1]]},"855":{"position":[[7,3],[52,3]]},"857":{"position":[[7,3],[13,6],[20,14],[35,9],[80,3],[86,4],[91,6],[98,9],[167,3],[173,6],[180,12],[193,9],[246,3],[252,9],[262,11],[274,9],[327,3],[333,10],[344,9],[354,9]]},"859":{"position":[[62,3],[66,2],[69,7],[115,3],[121,3],[125,1],[127,6],[134,8],[167,4],[174,4],[179,2],[182,6],[190,6],[217,5],[225,3],[229,4],[234,1],[236,5],[242,4],[247,2]]},"864":{"position":[[7,6],[14,14],[29,9],[40,3],[46,5],[62,6],[69,1],[72,6],[133,2],[148,6],[155,9]]},"872":{"position":[[5,3],[12,11],[31,4],[36,11],[48,6],[57,2],[61,3],[65,2],[70,4],[76,2],[80,11],[93,10],[104,4],[109,4],[115,5],[133,1],[136,3],[143,2],[146,2],[149,4],[155,6],[162,4],[167,5],[179,6],[194,6],[201,3],[207,4],[213,2],[217,11],[230,16],[247,4],[252,4],[258,5],[278,6],[285,9],[295,4],[300,5],[308,7],[320,7],[328,2],[331,3],[335,8],[349,4],[355,2],[359,11],[372,14],[392,4],[398,5],[419,4],[425,3],[432,2],[435,2],[438,5],[445,6],[454,4],[459,5],[475,4],[484,6],[491,10],[503,3]]},"874":{"position":[[10,4],[15,14],[30,6],[39,2],[43,3],[47,2],[52,4],[58,2],[62,14],[78,6],[85,4],[90,4],[96,5],[104,1],[107,3],[114,2],[117,2],[120,4],[126,6],[133,4],[138,5],[150,6],[165,6],[172,3],[178,4],[184,2],[188,14],[204,6],[216,4],[222,5],[231,4],[237,3],[244,2],[247,2],[250,5],[257,6],[266,4],[271,5],[287,4],[298,6],[305,5],[312,3],[328,4],[333,12],[346,6],[355,10],[366,6],[375,4],[381,2],[385,12],[399,16],[416,4],[421,4],[427,5],[435,6],[442,9],[452,4],[457,5],[465,7],[477,7],[485,2],[488,3],[492,8],[516,4],[521,15],[537,6],[546,8],[556,14],[573,4],[579,2],[583,15],[600,18],[624,4],[630,5],[639,5],[646,3],[653,2],[656,8],[665,6],[691,6],[698,10],[710,3],[725,11]]},"877":{"position":[[11,4],[16,10],[27,9],[39,6],[46,4],[51,4],[57,5],[63,7],[71,2],[74,3],[81,4],[87,5],[96,4],[101,11],[113,9],[125,4],[130,2],[134,7],[143,4],[148,6],[156,5]]},"879":{"position":[[0,4],[5,11],[17,6],[26,4],[31,14],[46,5],[52,12],[65,6],[72,15],[90,4],[96,2],[100,11],[113,15],[129,4],[134,4],[140,5],[148,2],[151,3],[158,2],[161,4],[166,6],[173,4],[180,3],[187,3],[193,6],[200,3],[206,6],[213,2],[216,5],[222,16],[239,4]]},"881":{"position":[[17,4],[22,15],[38,4],[45,4],[52,4],[58,5],[70,1],[81,1],[92,1],[105,1],[136,4],[141,16],[158,4],[165,4],[171,5],[180,4],[185,13],[199,4],[206,4],[213,4],[219,5],[229,4],[234,8],[243,4],[248,4],[254,5],[263,4],[268,17],[286,4],[291,4],[297,5]]},"884":{"position":[[50,29]]},"888":{"position":[[0,3],[20,2],[40,3],[58,3],[70,3]]},"891":{"position":[[5,4],[10,6],[17,9],[28,3],[34,5],[50,8],[59,5],[105,2],[124,9],[138,11]]},"896":{"position":[[16,4],[21,13],[35,9],[47,3],[51,6],[58,7],[67,5],[86,4],[91,17],[109,6],[118,4],[124,1],[127,17],[146,3],[150,6],[157,7],[166,5],[174,3],[178,6],[191,2],[201,1],[205,6],[213,6],[220,3],[237,4],[242,13],[256,6],[265,4],[271,1],[274,13],[289,3],[293,6],[300,7],[309,5],[317,3],[321,6],[334,2],[344,1],[348,6],[356,6],[363,3],[386,4],[391,16],[408,6],[417,6],[424,13],[440,4],[446,1],[449,16],[467,14],[482,6],[489,7],[498,5],[506,6],[513,1],[515,6],[522,3],[526,6]]},"898":{"position":[[19,4],[24,13],[38,6],[47,4],[53,1],[56,13],[71,3],[75,6],[82,7],[91,5],[99,3],[103,6],[116,2],[127,1],[131,6],[139,6],[146,3],[160,4],[165,4],[174,9],[188,16],[205,6],[214,13],[231,9],[241,14],[256,3],[260,2]]},"901":{"position":[[0,4],[5,11],[17,3],[21,5],[29,10],[40,11],[54,4],[59,6],[80,4],[85,14],[100,11],[112,11],[125,6],[132,7],[141,5],[149,6],[156,11],[170,4],[175,10],[187,3],[191,6],[204,2],[214,1],[218,6],[226,4],[231,6],[239,3],[243,6],[256,2],[266,1],[270,6],[278,7],[287,6],[294,3],[298,6],[319,6],[326,3],[348,14]]},"903":{"position":[[10,4],[15,13],[29,9],[41,3],[45,6],[52,7],[61,5],[83,4],[88,14],[103,6],[112,7],[120,3],[124,6],[131,13],[147,4],[153,1],[156,14],[172,8],[181,4],[186,6],[194,6],[201,13],[218,1],[220,7],[228,4],[236,6],[245,4],[251,1],[254,14],[270,7],[278,4],[283,6],[291,6],[298,7],[307,5],[315,2],[318,6],[326,2],[332,1],[334,7],[342,4],[349,2],[354,6],[361,6],[368,3],[372,6],[382,6],[389,3],[393,6]]},"906":{"position":[[0,4],[5,6],[12,6],[21,4],[26,6],[33,4],[38,3],[42,7],[50,4],[55,8],[66,4],[71,6],[78,4],[84,6],[92,4],[97,8],[106,4],[111,6],[119,6],[128,6],[135,4],[140,1],[143,6],[153,1],[155,4],[162,4],[171,4],[176,8],[185,4],[190,3],[195,6],[204,6],[211,4],[216,1],[219,6],[229,1],[231,4],[238,4],[247,4],[252,9],[262,4],[270,6],[279,6],[288,1],[294,6],[302,4],[309,9],[321,4],[327,4],[333,7],[342,2],[347,4],[352,6],[362,3],[366,1],[369,3],[376,5],[382,4],[389,3],[393,1],[398,6],[405,1]]},"908":{"position":[[0,4],[5,7],[13,4],[18,4],[23,14],[40,4],[45,7],[54,4],[59,17],[77,4],[82,7],[91,7],[101,6],[108,4],[113,1],[115,4],[120,14],[136,1],[139,4],[144,7],[155,3],[159,6],[174,1],[177,1],[181,1],[183,6],[191,1],[193,3],[197,4],[203,4],[208,1],[211,1],[214,3],[218,6],[233,1],[236,1],[240,1],[242,6],[250,1],[252,3],[256,4],[266,4],[271,14],[286,4],[291,7],[300,7],[310,6],[317,4],[322,1],[324,4],[329,14],[345,1],[348,4],[353,7],[364,2],[367,1],[369,6],[376,3],[381,13],[405,4],[410,5],[416,1],[426,4],[431,18],[451,6],[460,4],[465,1],[468,1]]},"910":{"position":[[41,5],[47,7],[55,5],[87,3],[94,3]]},"914":{"position":[[0,1],[2,1],[4,1],[22,6],[41,4],[46,6],[53,9],[65,3],[69,5],[75,6],[83,7],[91,6],[99,5],[105,5],[113,5],[121,1],[123,1],[125,1],[148,13],[170,4],[175,13],[189,6],[222,4],[227,16],[247,13],[263,6],[271,13],[289,4],[295,1],[298,13],[313,3],[317,5],[323,6],[331,7],[339,6],[347,5],[355,1],[358,3],[365,3],[369,6],[379,1],[383,1],[385,1],[389,5],[396,7],[405,6],[412,3],[418,4],[424,1],[427,13],[442,5],[450,5],[473,6],[480,3],[496,10],[514,4],[519,10],[530,6],[539,4],[545,2],[548,4],[555,4],[560,13],[574,8],[583,6],[593,10],[605,5],[614,4],[620,3],[627,2],[630,8],[639,8],[649,2],[652,8],[652,1],[654,6],[661,2],[664,8],[664,1],[666,6],[673,2],[676,8],[676,1],[678,6],[686,4],[692,2],[695,3],[702,3],[708,6],[715,3],[720,3],[726,6],[734,10],[745,4],[751,4],[758,3],[764,4],[770,1],[773,10],[785,3],[789,5],[795,6],[803,7],[811,6],[819,5],[827,1],[830,3],[837,3],[841,7],[849,1],[851,4],[860,1],[864,1],[867,1],[869,1],[873,4],[878,3],[884,6],[892,4],[897,2],[900,2],[903,2],[906,2],[909,2],[915,5],[922,7],[931,6],[938,3],[944,4],[950,1],[953,10],[965,5],[973,5],[981,6],[988,1],[990,4],[995,5]]},"916":{"position":[[3,15],[28,4],[33,15],[49,6],[58,7],[68,6],[77,4],[82,18],[101,7],[112,6],[121,15],[139,6],[147,15],[163,7],[172,7],[183,4],[189,1],[192,15],[209,3],[213,5],[219,6],[227,7],[235,6],[243,5],[251,3],[255,1],[258,6],[268,5],[274,1],[276,7],[286,2],[289,3],[296,6],[303,3],[307,5],[314,7],[324,3],[331,3],[337,6],[344,3],[352,6],[359,3],[365,4],[371,1],[374,15],[391,5],[399,5],[407,3],[411,1],[414,6],[424,5],[430,1],[432,7],[442,2],[445,3],[452,6],[459,5],[468,3],[475,3],[481,6],[488,3],[496,6],[503,3]]},"918":{"position":[[3,10],[21,4],[26,10],[37,6],[44,5],[52,13],[66,10],[80,7],[89,10],[100,10],[114,4],[130,13],[149,12],[167,4],[172,12],[185,6],[194,4],[199,10],[210,8],[219,6],[242,19],[272,4],[277,19],[297,6],[304,12],[319,6],[327,5],[336,6],[343,6],[350,4],[357,4],[362,13],[377,6],[384,16],[404,3],[408,4],[413,10],[425,6],[432,13],[446,6],[453,8],[463,7],[472,6],[479,3],[484,3],[488,6],[506,1],[510,6],[517,4]]},"920":{"position":[[32,13],[53,4],[58,13],[72,6],[81,8],[90,6],[97,6],[105,4],[110,6],[119,4],[124,16],[141,8],[150,6],[159,13],[175,6],[183,13],[198,8],[208,8],[218,6],[227,4],[232,6],[239,7],[248,1],[252,4],[257,6],[270,4],[276,1],[279,13],[294,3],[298,5],[304,6],[312,7],[320,6],[328,5],[336,4],[344,3],[348,6],[355,6],[364,5],[372,5],[380,7],[390,7],[400,4],[407,4],[412,3],[418,6],[425,4],[430,7],[442,8],[452,1],[457,4],[462,7],[470,4],[476,4],[482,3],[489,1],[491,6],[498,4],[503,1],[505,8],[516,11],[528,4],[535,5],[541,9],[551,8],[562,2],[565,3],[572,3],[578,6],[585,3],[591,5],[597,4],[602,4],[607,5],[615,2],[618,4],[623,10],[637,3],[643,6],[650,3],[654,6],[677,1],[681,4],[686,10],[700,6],[707,3],[713,4],[719,1],[722,13],[737,5],[745,5],[770,6],[777,3]]},"922":{"position":[[0,4],[5,4],[26,13],[43,16],[73,10],[85,3],[92,13],[107,3],[111,3],[117,2],[120,3],[127,3],[133,5],[139,3],[157,15],[176,18],[195,13],[210,10],[230,15],[246,3],[251,4],[268,15],[284,3],[289,4],[308,15],[324,3],[329,5],[359,2],[362,3],[369,15],[385,5],[394,3],[401,3],[407,3],[411,6],[430,1],[432,1],[436,3],[455,13],[472,16],[490,4],[497,3],[501,6],[508,7],[516,3],[520,3],[526,14],[544,18],[563,13],[578,10],[590,13],[605,14],[620,3],[625,4],[653,14],[668,5]]},"924":{"position":[[0,3],[18,2],[33,3],[52,3]]},"927":{"position":[[52,2]]},"930":{"position":[[0,7],[8,4],[13,6],[21,3],[32,4],[37,5],[43,9],[55,4],[71,4],[76,6],[83,6],[92,4],[98,1],[100,6],[108,4],[117,3],[121,7],[130,7],[138,6],[149,4],[154,6],[161,6],[170,4],[176,1],[178,6],[186,4],[195,3],[199,7],[208,7],[216,6],[235,4],[240,12],[253,9],[263,6],[271,5],[279,6],[286,9],[298,4],[304,6],[313,6],[320,6],[329,4],[335,6],[344,6],[351,6],[360,7],[369,6],[376,3],[384,4],[389,4],[398,2],[404,12],[418,6],[427,2],[433,12],[447,6],[456,2],[459,4],[466,2],[469,4]]},"932":{"position":[[8,4],[13,4],[18,9],[30,4],[37,4],[43,5],[49,7],[62,4],[68,5],[87,4],[92,7],[100,7],[108,6],[116,4],[121,6],[130,4],[136,5],[145,6],[152,7],[162,4],[168,3],[174,6],[182,7],[190,4],[196,4],[203,3],[207,4],[213,4],[220,6],[228,8],[237,4],[243,4],[250,3],[254,4],[260,4],[267,6],[275,8],[284,3],[289,4],[296,3],[300,7],[309,6],[316,3],[321,3],[325,6],[333,11],[345,7],[367,4],[372,4],[381,4],[387,1],[392,7],[401,4],[409,5],[417,3],[421,7],[429,3],[435,4],[440,4],[447,4],[453,3]]},"934":{"position":[[35,3]]},"937":{"position":[[0,7],[8,4],[13,6],[21,3],[32,4],[37,11],[49,9],[61,7],[79,4],[84,14],[99,6],[108,4],[114,1],[116,14],[132,7],[144,3],[148,7],[157,5],[163,9],[177,4],[182,17],[200,6],[209,4],[215,1],[217,17],[236,7],[248,3],[252,7],[261,8],[270,9],[292,4],[297,9],[307,9],[319,15],[337,11],[359,4],[364,12],[377,6],[386,4],[392,1],[394,12],[408,15],[426,11],[440,6],[447,14],[466,4],[471,15],[487,6],[496,4],[502,1],[504,15],[521,15],[539,11],[553,6],[560,17],[582,4],[587,4],[596,3],[600,7],[608,9],[618,7],[628,12],[643,4],[651,7],[659,15],[677,4],[682,7],[692,7],[702,15],[720,4],[727,7],[735,15],[753,4],[758,7]]},"939":{"position":[[8,4],[13,6],[20,9],[32,3],[36,5],[42,6],[50,3],[54,6],[72,4],[77,13],[91,9],[103,6],[112,6],[131,4],[136,10],[147,6],[156,4],[161,6],[170,4],[176,1],[179,10],[191,3],[195,5],[202,3],[206,6],[228,4],[233,17],[251,6],[260,4],[265,6],[274,4],[280,1],[283,17],[302,6],[311,6],[320,6],[328,10],[339,4],[345,1],[347,4],[366,4],[371,13],[385,6],[394,4],[400,1],[403,13],[418,3],[422,5],[429,3],[433,6],[443,3],[447,6],[457,1],[461,1],[463,1],[467,5],[474,3],[481,4],[486,20],[507,6],[516,4],[522,1],[525,20],[547,6],[556,6],[565,6],[573,13],[599,4],[604,16],[621,3],[625,6],[633,13],[649,2],[652,3],[660,10],[674,6],[682,17],[700,4],[708,3],[712,3],[716,3],[720,3],[728,6],[736,20],[761,4],[766,4],[775,7],[786,16],[803,2],[806,6],[814,7],[814,3],[818,3],[825,6],[835,7],[843,6],[852,6],[859,3],[864,4],[872,11],[884,7]]},"944":{"position":[[0,7],[8,4],[13,6],[21,3],[35,4],[40,6],[47,9],[59,5],[69,4],[74,7],[82,9],[94,4],[106,7],[117,4],[122,13],[136,6],[145,4],[151,13],[166,5],[176,3],[180,7],[189,7],[197,6],[208,4],[213,14],[228,6],[237,4],[243,14],[259,4],[268,3],[272,7],[281,7],[289,7],[304,3],[311,4],[316,9],[326,6],[335,4],[341,9],[352,5],[362,3],[366,7],[375,3],[379,6],[390,4],[395,10],[406,6],[415,4],[421,10],[433,4],[442,3],[446,7],[455,3],[459,7],[481,4],[486,10],[497,9],[509,12],[524,6],[531,13],[547,7],[565,4],[570,14],[585,6],[594,4],[600,14],[616,12],[631,6],[640,6],[647,13],[665,4],[671,14],[687,13],[703,7],[713,6],[720,14],[739,4],[744,10],[755,6],[764,4],[770,10],[782,12],[797,6],[806,6],[813,9],[827,4],[833,10],[845,13],[861,7],[871,6],[878,10],[899,4],[904,4],[913,3],[917,7],[925,10],[936,7],[946,14],[963,7],[971,12],[986,5],[994,7],[1002,13],[1018,4],[1025,7],[1035,10],[1048,7],[1056,12],[1071,5],[1079,7],[1087,13],[1103,4]]},"948":{"position":[[0,7],[8,4],[13,6],[21,3],[26,4],[31,6],[38,9],[50,5],[60,4],[65,3],[69,6],[78,4],[84,3],[89,5],[99,3],[103,7],[112,4],[122,4],[127,3],[131,6],[140,4],[146,3],[151,5],[161,3],[165,7],[174,4],[184,3],[188,14],[205,4],[210,3],[214,6],[221,4],[228,6],[236,4],[241,14],[256,4],[261,6],[269,7],[277,4],[284,6],[294,14],[309,4],[317,7],[327,4],[332,9],[342,4],[347,6],[355,6],[364,2],[367,1],[370,2],[376,14],[391,4],[398,2],[403,6],[410,1],[416,6],[423,3],[429,4],[434,4],[443,14],[459,3],[465,4],[472,6],[481,6],[488,3],[497,14],[513,3],[519,4],[526,6],[535,6],[542,3],[551,9],[562,3],[568,5],[576,9],[587,3],[593,5]]},"952":{"position":[[30,2]]},"957":{"position":[[0,3],[30,3],[81,2],[84,3],[98,6],[112,3],[131,4],[139,10],[150,6],[159,7],[173,10],[184,3],[188,7]]},"960":{"position":[[2,2]]},"962":{"position":[[10,5],[20,4],[25,11],[40,6],[48,5]]},"964":{"position":[[20,5],[44,5],[67,4],[72,9],[82,6],[91,3],[95,5],[103,4],[109,1],[112,9],[123,2],[137,1],[139,3],[145,6],[152,3],[157,9],[167,4],[172,5]]},"966":{"position":[[2,2],[7,4],[46,4]]},"968":{"position":[[0,1],[22,9],[45,4],[56,4],[61,8],[70,1],[73,1],[75,3],[82,4],[87,3],[93,6],[103,4],[108,4],[113,3],[118,2],[121,4],[130,6],[140,1],[144,1],[146,5],[152,6],[164,6],[171,6],[180,1],[215,3],[225,4],[240,4],[245,8],[254,1],[256,3],[263,4],[268,3],[274,3],[281,4],[286,4],[291,3],[296,2],[299,4],[308,3],[312,1],[317,1],[320,1],[324,1],[327,1],[333,3],[340,1],[344,5],[350,3],[359,6],[366,3],[372,1],[403,4],[408,6],[418,4],[426,4],[431,4],[436,6],[446,2],[449,4],[466,4],[474,6],[491,4]]},"970":{"position":[[38,4],[66,4],[71,2]]},"972":{"position":[[10,9],[20,6],[28,7],[36,7],[45,9],[55,8],[64,2],[71,2],[74,3],[95,2],[98,3],[102,7],[110,3],[114,6],[121,3],[127,2],[130,3],[134,7],[142,5],[150,7],[158,2],[161,6],[176,2],[179,3],[189,2],[192,3],[196,4],[204,7],[223,7],[231,3]]},"974":{"position":[[2,2],[11,9],[34,4],[41,6]]},"976":{"position":[[0,3],[4,3],[11,1],[13,3],[17,1],[20,1],[23,1],[26,5],[33,2],[39,9],[51,3],[58,1],[60,3],[65,2],[70,4],[84,5],[100,2],[105,5]]},"978":{"position":[[19,2],[25,4],[30,4],[35,6],[45,2],[51,6]]},"980":{"position":[[0,2],[7,2],[19,2],[22,1],[28,3],[34,1],[38,1],[42,7],[50,1],[52,1],[63,1],[69,3],[74,2],[77,1],[81,1],[85,7],[93,1],[95,1],[104,4],[109,2],[114,4]]},"983":{"position":[[0,7],[22,6],[36,4],[50,3]]},"985":{"position":[[0,2],[3,3],[7,6],[14,3],[18,10],[29,7]]},"988":{"position":[[0,7],[15,7],[23,11],[51,7],[59,4],[64,6],[74,3],[80,2],[85,6],[92,3],[96,10],[107,7],[118,3],[124,4],[131,7],[139,4],[145,4],[163,5],[170,1],[174,7],[183,5],[191,6],[200,3],[206,7],[214,4],[220,3],[237,3],[245,4],[250,4],[259,7],[267,5],[275,3],[279,6],[287,5],[294,1],[297,3],[301,3],[306,1],[308,5],[314,3],[319,1],[324,4],[331,3],[346,7],[356,4],[361,5],[369,3],[373,2]]},"990":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[34,6],[41,3],[45,10],[56,7],[67,4],[72,4],[81,3],[88,7],[96,3],[101,7],[122,4],[130,3],[134,4],[140,4],[158,5],[165,1],[169,7],[178,5],[186,6],[195,3],[202,3],[206,4],[212,3],[229,3],[235,7],[243,9],[253,3],[257,5],[263,2],[266,4],[271,1],[277,3],[281,6],[289,5],[296,1],[299,3],[303,3],[308,1],[310,5],[316,3],[321,1],[326,4],[333,3],[348,7],[358,4],[363,5],[371,3],[375,2]]},"992":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[34,6],[41,3],[45,10],[56,7],[67,4],[72,4],[81,3],[88,7],[96,3],[101,3],[132,5],[139,8],[151,3],[155,7],[164,5],[180,4],[188,8],[197,4],[203,4],[219,7],[228,5],[236,6],[255,3],[260,6],[270,3],[274,7],[283,3],[296,7],[307,6],[314,4],[320,7],[339,7],[348,7],[359,6],[368,6],[375,7],[383,9],[393,3],[397,5],[403,2],[406,4],[411,1],[419,4],[424,8],[433,11],[448,3],[452,6],[460,5],[468,1],[471,1],[476,4],[482,4],[487,6],[494,11],[509,3],[513,7],[522,7],[543,3],[547,5],[555,4],[560,3],[566,3],[570,3],[576,7],[585,3],[589,3]]},"994":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[34,6],[41,3],[45,10],[56,7],[67,4],[72,4],[81,3],[88,7],[96,3],[101,3],[105,7],[128,4],[136,3],[140,4],[146,4],[162,5],[169,9],[169,4],[174,4],[181,7],[190,9],[202,6],[211,7],[219,9],[229,3],[233,5],[239,2],[242,4],[247,1],[253,3],[257,7],[266,5],[276,4],[290,6],[297,9],[297,4],[302,4],[307,7],[317,3],[321,7]]},"996":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[34,6],[41,3],[45,10],[56,7],[67,4],[72,4],[81,3],[88,7],[96,3],[101,4],[106,4],[124,7],[135,3],[139,4],[145,7],[166,5],[173,1],[177,4],[184,7],[192,9],[202,3],[206,5],[212,2],[215,4],[220,1],[226,2],[230,7],[240,3],[244,7],[253,7],[261,4],[266,7],[278,4],[285,3],[289,7],[298,7],[306,4],[311,8],[334,4],[339,4],[346,7],[356,4],[361,4],[367,1]]},"998":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[34,6],[41,3],[45,10],[56,7],[67,4],[72,4],[81,3],[88,7],[96,3],[101,4],[106,7],[129,5],[138,3],[142,4],[148,5],[166,7],[176,7],[184,9],[194,3],[198,5],[204,2],[207,4],[212,1],[218,3],[222,7],[231,5],[241,5],[258,4],[263,7],[273,5],[279,5],[287,5],[293,6],[302,5],[308,6]]},"1001":{"position":[[5,7],[13,6],[36,7],[44,4],[49,6],[59,3],[65,2],[70,6],[77,3],[81,10],[92,7],[103,4],[108,4],[117,3],[124,7],[132,3],[137,6],[144,6],[170,4],[178,3],[182,4],[188,4],[206,6],[215,3],[219,6],[226,4],[231,1],[234,7],[242,12],[256,5],[264,3],[268,7],[288,4],[294,6],[301,3],[308,7],[316,9],[326,3],[330,5],[336,2],[339,4],[344,1]]},"1003":{"position":[[0,7],[37,3]]},"1005":{"position":[[23,3],[68,7]]},"1008":{"position":[[0,6],[13,8],[22,4],[38,4],[53,4],[60,3],[64,6],[71,9],[83,7],[91,4],[96,6],[106,8],[115,4],[122,3],[129,4],[134,4],[143,8],[158,4],[166,5],[175,3],[181,2],[186,3],[190,6],[197,3],[201,6],[208,9],[220,3],[227,4],[232,9],[244,4],[249,8],[261,6],[269,2],[272,3],[279,3],[285,3],[289,7],[298,5],[307,3],[312,6],[321,3],[325,7],[334,4],[342,6],[350,4],[358,6],[367,3],[371,7],[380,3],[387,6],[395,3],[402,7],[464,4],[476,4]]},"1011":{"position":[[4,2],[7,3],[11,6],[18,3],[22,7],[30,5],[40,7],[48,4],[53,6],[63,3],[69,6],[76,3],[80,7],[88,5],[97,4],[102,4],[111,8],[126,4],[134,5],[143,3],[149,2],[154,2],[158,5],[164,5],[170,8],[182,3],[186,7],[195,7],[203,4],[208,4],[215,6],[224,2],[227,5],[233,3],[237,8],[248,4],[255,6],[266,3],[270,7],[279,4],[284,5],[290,6],[301,4],[308,3],[312,7],[321,4],[326,5],[332,4],[337,3],[341,5],[351,4],[359,5],[365,3],[369,8],[380,4],[387,3],[394,5],[400,3],[404,8],[415,3],[421,3],[427,3],[431,7],[440,4],[448,4],[453,6],[463,3],[467,7],[476,3],[483,3]]},"1013":{"position":[[17,4],[25,8]]},"1015":{"position":[[4,2],[7,3],[11,6],[18,3],[22,4],[27,8],[36,2],[43,7],[51,4],[56,6],[66,3],[71,8],[81,6],[88,3],[92,4],[97,8],[106,2],[112,4],[117,4],[126,3],[130,4],[137,8],[146,35],[182,8],[197,4],[205,5],[214,3],[220,2],[225,3],[229,6],[236,3],[240,6],[247,9],[259,4],[264,9],[276,4],[281,8],[293,6],[301,3],[305,7],[314,4],[322,6],[330,4],[338,3],[342,7],[351,3],[358,6],[366,3]]},"1017":{"position":[[9,8],[18,4],[32,4],[42,5],[55,8],[64,4]]},"1019":{"position":[[4,2],[7,3],[11,6],[18,3],[22,5],[28,10],[43,7],[51,4],[56,6],[66,3],[72,6],[79,3],[83,5],[89,10],[103,4],[108,4],[117,8],[131,4],[139,4],[147,5],[156,3],[162,2],[168,4],[174,1],[179,10],[190,9],[200,8],[211,4],[218,3],[223,1],[228,10],[239,6],[246,8],[257,3],[263,3],[267,7],[276,4],[284,4],[290,3],[294,7],[303,3],[310,3]]},"1021":{"position":[[11,4],[26,4],[38,4],[51,5]]},"1023":{"position":[[13,8],[22,4],[30,4],[59,5],[68,4],[90,4],[95,4],[100,8],[109,2],[116,4],[136,4],[147,5],[153,10],[168,4],[180,4]]},"1025":{"position":[[4,4],[19,5],[31,4],[41,4],[46,8],[55,2],[62,4],[77,5],[83,10],[107,8],[116,4],[138,4]]},"1028":{"position":[[2,6],[15,13],[35,15],[74,8],[83,4],[102,4],[169,4],[174,9],[186,4],[191,11]]},"1031":{"position":[[0,6],[8,8],[17,4],[23,4],[28,4],[37,1],[42,6],[50,5],[58,2],[69,4],[75,3],[82,4],[87,7],[95,1],[106,3],[110,2],[113,6],[120,3],[126,4],[131,9],[141,4],[148,2]]},"1033":{"position":[[0,4],[5,7],[13,6],[22,2],[25,3],[30,4],[36,2],[41,4],[46,6],[54,4],[60,4],[67,9],[77,4],[82,4],[88,4],[94,10],[94,7],[102,2],[105,9]]},"1035":{"position":[[5,4],[10,9],[34,4],[51,4],[56,9],[79,4],[108,8],[120,4],[125,6],[132,6],[141,4],[146,6],[153,3],[157,3],[181,4],[187,1],[190,6],[198,13],[212,4],[219,4],[225,5],[233,3],[237,4],[242,6],[251,8],[260,6],[268,4],[274,9],[274,4],[279,4],[286,3],[290,3],[295,4],[301,3],[309,2],[312,3],[319,4],[324,9],[334,4],[341,4],[348,3],[355,3],[361,6],[368,3],[374,2],[377,4],[382,3],[388,1],[393,4],[398,3],[404,3],[410,6],[417,6],[424,3],[429,3],[433,4],[438,2],[441,7],[449,1],[451,3],[455,3]]},"1037":{"position":[[0,4],[5,10],[16,4],[21,4],[26,4],[32,2],[35,10],[47,11],[64,4],[70,5],[79,6],[86,4],[91,7],[99,4],[104,4],[109,2],[113,6],[121,4],[126,2],[129,2]]},"1039":{"position":[[0,4],[6,2],[10,10],[22,13],[36,4],[43,4],[49,5],[57,3],[61,1],[63,6],[70,2],[73,3],[80,4],[85,9],[95,4],[102,1],[106,3],[113,3],[119,6],[126,3],[132,1],[135,3],[142,4],[147,5],[154,4],[159,2],[162,2],[167,1],[170,2],[173,3],[180,3],[186,6],[193,3],[200,2],[205,10],[216,1],[219,6],[226,3]]},"1042":{"position":[[0,4],[5,5],[11,6],[20,2],[23,3],[28,4],[34,2],[39,8],[50,7],[59,4],[65,8],[76,4],[81,10],[93,4],[99,4]]},"1044":{"position":[[0,4],[5,5],[11,9],[23,4],[30,7],[40,4],[45,6],[52,6],[61,6],[68,7],[77,4],[83,6],[94,4],[100,1],[102,6],[110,4],[117,7],[127,6],[134,4],[139,2],[144,1],[146,6],[155,1],[157,6],[178,4],[184,1],[187,6],[195,11],[212,4],[218,5],[227,4],[232,5],[238,6],[245,6],[252,4],[257,7],[266,6],[275,4],[280,6],[288,4],[294,4],[302,5],[311,4],[318,6],[327,5],[336,5],[343,1]]},"1047":{"position":[[0,3],[4,10],[17,4],[22,4],[28,3],[33,4],[40,9],[54,6],[61,3],[65,5],[71,6],[84,4],[89,15],[105,1],[107,9],[123,4],[129,5],[138,3],[145,10],[156,3],[164,5],[170,6],[178,5],[184,10],[195,3],[199,3],[204,3],[208,5],[216,7],[227,4],[232,10],[243,3],[248,2],[251,3],[258,7],[266,6],[273,1],[277,3],[284,3],[290,6],[297,3],[302,3],[308,6],[315,3],[319,5],[328,3]]},"1049":{"position":[[0,4],[5,8],[27,8],[44,8]]},"1052":{"position":[[0,4],[5,4],[10,6],[19,5],[25,3],[30,4],[36,5],[44,4],[50,4],[56,4],[62,4],[67,9],[84,9]]},"1054":{"position":[[0,4],[5,9],[15,4],[20,4],[25,4],[31,1],[34,9],[45,13],[59,1],[63,4],[69,5],[77,1],[82,7],[90,4],[95,6],[102,1],[112,2],[116,3],[123,4],[128,5],[134,4],[139,7],[148,1],[151,2],[154,3],[161,3],[167,6],[174,3],[181,1],[185,9],[195,2],[199,6],[206,3]]},"1057":{"position":[[0,4],[5,26],[5,14],[20,11],[32,1],[35,7],[43,1],[48,2],[54,10],[65,4],[70,4],[75,4],[81,1],[84,1],[87,1],[90,1],[93,1],[96,1],[99,4],[104,3],[110,4],[116,3],[123,4],[128,7],[136,2],[140,6],[147,3],[151,1],[154,3],[159,6],[166,5],[172,1],[177,4],[182,2],[185,2],[191,6],[198,4],[207,4],[212,28],[212,14],[227,13],[241,1],[244,7],[252,1],[257,3],[261,2],[264,10],[275,3],[282,4],[287,9],[299,4],[306,4],[311,2],[314,2],[322,2],[326,6],[333,3],[337,1],[340,3],[345,6],[352,5],[358,1],[361,4],[367,4],[372,4],[377,2],[381,4]]},"1059":{"position":[[17,4],[28,9],[55,4],[60,7],[72,7],[80,9]]},"1061":{"position":[[0,7],[8,4],[13,6],[23,8],[32,4],[39,3],[45,4],[53,4],[58,10],[69,4],[74,4],[79,4],[85,2],[88,10],[100,11],[117,4],[123,5],[132,6],[139,4],[144,7],[152,4],[157,4],[162,2],[166,6],[174,4],[179,2],[182,2],[190,4],[196,2],[200,10],[212,13],[226,4],[233,4],[239,5],[247,3],[251,1],[253,6],[260,2],[263,3],[270,4],[275,9],[285,4],[292,1],[296,3],[303,3],[309,6],[316,3],[322,1],[325,3],[332,4],[337,5],[344,4],[349,2],[352,2],[357,1],[360,2],[363,3],[370,3],[376,6],[383,3],[390,2],[395,10],[406,1],[409,6],[416,3],[422,4],[427,5],[433,6],[442,4],[447,6],[455,4],[461,4],[468,9],[478,10],[490,4],[496,10],[496,5],[502,4],[511,4],[516,4],[525,5],[534,5],[541,4],[548,2],[551,10],[564,9],[575,10],[586,4],[591,3],[601,4],[607,1],[612,4],[617,7],[625,5],[632,3],[636,7],[644,6],[651,4],[663,4],[670,2],[673,10],[686,10],[686,5],[692,4],[699,4],[704,2],[707,2],[712,3],[716,8],[725,5],[731,1],[735,4],[740,9],[750,4],[757,8],[767,3],[771,6],[781,1],[783,1],[787,8],[801,4],[806,2],[809,10],[820,9],[830,4],[835,2],[838,2],[841,2],[844,2],[847,2],[851,4],[856,3],[863,6],[876,7],[884,3],[888,6],[898,8],[907,4],[914,6],[929,6],[952,4],[957,9],[967,4],[972,9],[982,4],[987,11],[999,4],[1004,11],[1026,4],[1033,4],[1072,4],[1078,4],[1104,6],[1124,4],[1129,6],[1136,6],[1145,5],[1151,6],[1163,9],[1178,6],[1185,4],[1190,9],[1200,3],[1204,6],[1212,6],[1221,6],[1228,6],[1235,5],[1242,3],[1252,11],[1267,4],[1272,9],[1285,4],[1291,1],[1293,6],[1301,11],[1316,9],[1329,5],[1340,2],[1343,1],[1345,5],[1362,6],[1371,6],[1381,3],[1391,6],[1398,3],[1403,3],[1407,6],[1416,6],[1426,3],[1435,11],[1450,4],[1455,9],[1468,4],[1474,1],[1476,6],[1484,11],[1501,4],[1507,5],[1516,6],[1525,4],[1532,6],[1543,3],[1552,13],[1569,4],[1574,11],[1589,4],[1595,1],[1598,6],[1606,13],[1620,9],[1630,4],[1635,9],[1648,5],[1655,5],[1663,2],[1666,1],[1671,3],[1677,6],[1684,6],[1691,3],[1696,6],[1703,9],[1713,4],[1718,3],[1722,6],[1751,5],[1767,4],[1772,5],[1778,6],[1791,5],[1799,6],[1812,6],[1819,9],[1831,5],[1838,1],[1847,1],[1854,5],[1882,6],[1895,4],[1900,9],[1936,6],[1944,9],[1964,3],[1968,3],[1972,6],[1979,2],[1982,3],[1989,9],[2000,3],[2006,3],[2013,3],[2019,6],[2026,3],[2032,1],[2034,5],[2042,3],[2046,6],[2053,3],[2062,13],[2079,4],[2084,11],[2099,4],[2105,1],[2108,6],[2116,13],[2130,4],[2137,4],[2143,5],[2151,2],[2154,1],[2159,3],[2165,6],[2172,6],[2179,3],[2184,6],[2191,9],[2201,4],[2206,3],[2210,6],[2221,3],[2225,3],[2229,6],[2236,2],[2239,3],[2246,4],[2251,9],[2261,4],[2268,3],[2274,3],[2281,3],[2287,6],[2294,3],[2300,1],[2302,5],[2310,3],[2314,6],[2321,3],[2330,3],[2347,4],[2353,1],[2355,6],[2363,3],[2369,6],[2378,6],[2385,1],[2387,5]]},"1064":{"position":[[0,9],[12,2]]},"1066":{"position":[[0,2],[3,3],[7,6],[14,3],[18,2],[21,10],[32,9],[42,3]]},"1068":{"position":[[0,7],[8,4],[13,6],[23,3],[29,6],[36,3],[40,2],[43,10],[54,9],[64,3],[71,4],[76,4],[81,6],[90,4],[95,6],[103,8],[113,8],[124,3],[128,3],[133,8],[143,3],[147,2],[150,3],[154,2],[159,5],[165,6],[173,8],[183,8],[192,5],[202,4],[207,4],[216,8],[228,9],[238,3],[244,4],[252,4],[258,4],[268,3],[273,2],[277,5],[285,7],[293,5],[303,3],[310,8],[319,6],[326,4],[332,2],[335,3],[342,3],[348,3],[352,1],[355,3],[362,5],[368,3],[373,9],[383,16],[403,3],[407,7],[416,10],[427,5],[436,3],[445,4],[452,3],[456,7],[465,10],[476,6]]},"1070":{"position":[[6,8],[20,5],[37,3],[41,1],[48,1],[50,3],[54,1],[61,1],[63,3],[67,1],[84,3],[88,1],[105,3],[109,1],[118,1],[120,3],[131,3],[135,7],[149,8],[167,5],[179,8],[188,1],[195,1],[200,10],[211,1],[217,1],[222,8],[231,1],[237,1],[242,9],[258,9],[274,4],[286,4],[294,4],[306,4],[314,7],[329,8],[338,6],[358,6],[369,6],[381,8],[402,4],[414,4],[419,4],[431,4],[440,5],[450,5],[459,10],[477,5],[486,9],[504,11],[516,5],[527,5],[542,11],[554,5],[565,5],[578,8],[587,1],[594,1],[599,9],[621,4],[632,3]]},"1072":{"position":[[22,5],[30,4],[35,14],[50,2],[53,9],[63,10],[75,4],[82,6],[89,2],[92,5],[100,6],[113,5],[122,4],[127,4],[136,8],[148,9],[158,3],[164,8],[173,18],[193,5],[201,14],[217,4],[222,4],[227,6],[236,3],[240,6],[248,8],[258,5],[268,1],[273,4],[278,3],[284,5],[292,3],[299,8],[308,6],[315,1],[318,2],[321,3],[328,3],[334,3],[338,7],[347,10],[358,6],[368,3],[375,4],[382,3],[386,7],[395,10],[406,6]]},"1074":{"position":[[0,4],[5,7],[13,6],[22,4],[27,6],[35,8],[45,8],[56,7],[64,6],[72,8],[82,7],[94,4],[99,6],[106,6],[115,4],[120,6],[128,8],[138,8],[149,3],[153,3],[158,8],[168,3],[172,2],[177,7],[185,7],[194,8],[204,8],[217,8]]},"1076":{"position":[[0,2],[3,3],[10,3],[16,3],[20,1],[23,1],[28,5],[34,3],[39,9],[49,16],[69,3],[73,6],[81,5],[88,1],[90,6],[97,2],[102,1],[105,3],[109,1],[113,1],[115,5],[124,1],[126,3]]},"1078":{"position":[[0,9],[25,2],[44,3],[52,3],[61,3]]},"1081":{"position":[[0,6],[7,3],[11,1],[13,3],[17,4],[24,2],[45,4],[50,5],[67,7]]},"1083":{"position":[[0,3],[7,2],[26,2],[29,3],[33,6],[40,3],[44,1],[46,3],[50,4]]},"1086":{"position":[[0,6],[7,3],[11,1],[13,3],[17,4],[24,2],[45,4],[50,5],[67,7]]},"1088":{"position":[[0,3],[7,2],[26,2],[29,3],[33,6],[40,3],[44,1],[46,3],[50,4]]},"1091":{"position":[[0,7],[8,4],[13,6],[23,3],[29,6],[36,3],[40,1],[42,3],[46,4],[54,4],[59,4],[68,3],[75,4],[80,6],[89,3],[93,7],[107,2],[113,3],[118,4],[126,4],[131,7],[141,3],[145,7],[158,2],[164,4]]},"1093":{"position":[[0,1],[2,1],[4,1],[9,4],[14,4],[25,7],[33,4],[38,6],[48,3],[54,6],[61,3],[65,1],[67,3],[71,4],[79,4],[84,4],[93,2],[97,3],[104,4],[109,4],[115,4],[120,3],[126,4],[131,8],[131,1],[133,6],[141,1],[144,2],[147,3],[154,3],[160,3],[164,7],[183,3],[188,6],[197,5],[203,4],[208,5],[214,2],[218,3],[222,3],[227,3],[231,4],[236,1],[239,3],[246,4],[251,4],[256,2],[260,3],[268,2],[271,3],[278,3],[284,3],[288,7],[307,3],[312,6],[321,3],[325,7],[342,6],[349,3],[354,1]]},"1095":{"position":[[0,1],[2,1],[4,1],[13,7],[21,4],[26,6],[36,3],[42,6],[49,3],[53,1],[55,3],[59,4],[67,4],[72,4],[81,6],[93,3],[97,2],[101,4],[111,6],[119,2],[126,1],[130,3],[137,4],[142,4],[147,6],[155,4],[161,3],[166,2],[169,3],[176,3],[182,3],[186,7],[203,3]]},"1097":{"position":[[0,1],[2,1],[4,1],[12,7],[20,4],[25,6],[35,3],[41,6],[48,3],[52,1],[54,3],[58,4],[65,4],[73,4],[78,4],[87,3],[94,4],[99,6],[108,3],[112,7],[126,2],[132,3],[137,2],[140,4],[149,4],[154,5],[160,1],[164,4],[169,6],[177,4],[182,4],[187,3],[192,4],[197,7]]},"1099":{"position":[[0,1],[2,1],[4,1],[6,4],[17,7],[25,4],[30,6],[40,3],[46,2],[51,6],[58,3],[62,1],[64,3],[68,4],[75,6],[85,4],[90,4],[99,4],[105,3],[112,2],[115,8],[125,4],[130,3],[136,2],[139,6],[139,1],[141,4],[147,4],[153,2],[156,3],[163,3],[169,3],[173,7],[192,3],[197,6],[206,5],[212,4],[217,5],[225,2],[229,1],[234,4],[239,4],[246,4],[254,2],[257,4],[264,4],[270,3],[277,4],[282,4],[287,3],[291,4],[296,2],[303,1],[306,3],[310,4],[317,4],[322,9],[322,4],[327,4],[333,4],[338,10],[338,3],[342,6],[350,2],[353,3],[360,3],[366,3],[370,7],[379,4],[390,3],[395,6],[404,3],[408,7],[428,6],[436,6],[443,7],[452,4]]},"1101":{"position":[[3,7],[17,1],[19,3],[23,4],[69,5],[75,5],[81,7],[119,1],[121,3],[125,4],[133,7],[143,6],[151,6],[158,3],[162,1],[164,3],[168,4],[174,4],[179,4],[188,4],[193,6],[208,7],[216,6]]},"1103":{"position":[[0,7],[30,6],[37,3],[41,1],[43,3],[47,4],[55,7],[85,4],[90,4],[95,4],[100,6],[120,2],[130,2],[133,2],[136,3]]},"1105":{"position":[[5,6]]},"1108":{"position":[[0,7],[8,4],[13,6],[23,3],[29,6],[36,3],[40,1],[42,3],[46,4],[54,4],[59,4],[68,3],[75,4],[80,6],[89,3],[93,7],[107,2],[113,3],[118,4],[126,4],[131,7],[141,3],[145,7],[158,2],[164,4]]},"1110":{"position":[[0,1],[2,1],[4,1],[9,4],[14,4],[25,7],[33,4],[38,6],[48,3],[54,6],[61,3],[65,1],[67,3],[71,4],[79,4],[84,4],[93,2],[97,3],[104,4],[109,4],[115,4],[120,3],[126,4],[131,8],[131,1],[133,6],[141,1],[144,2],[147,3],[154,3],[160,3],[164,7],[183,3],[188,6],[197,5],[203,4],[208,5],[214,2],[218,3],[222,3],[227,3],[231,4],[236,1],[239,3],[246,4],[251,4],[256,2],[260,3],[268,2],[271,3],[278,3],[284,3],[288,7],[307,3],[312,6],[321,3],[325,7],[342,6],[349,3],[354,1]]},"1112":{"position":[[0,1],[2,1],[4,1],[13,7],[21,4],[26,6],[36,3],[42,6],[49,3],[53,1],[55,3],[59,4],[67,4],[72,4],[81,6],[93,3],[97,2],[101,4],[111,6],[119,2],[126,1],[130,3],[137,4],[142,4],[147,6],[155,4],[161,3],[166,2],[169,3],[176,3],[182,3],[186,7],[203,3]]},"1114":{"position":[[0,1],[2,1],[4,1],[12,7],[20,4],[25,6],[35,3],[41,6],[48,3],[52,1],[54,3],[58,4],[65,4],[73,4],[78,4],[87,3],[94,4],[99,6],[108,3],[112,7],[126,2],[132,3],[137,2],[140,4],[149,4],[154,5],[160,1],[164,4],[169,6],[177,4],[182,4],[187,3],[192,4],[197,7]]},"1116":{"position":[[0,1],[2,1],[4,1],[6,4],[17,7],[25,4],[30,6],[40,3],[46,2],[51,6],[58,3],[62,1],[64,3],[68,4],[75,6],[85,4],[90,4],[99,4],[105,3],[112,2],[115,8],[125,4],[130,3],[136,2],[139,6],[139,1],[141,4],[147,4],[153,2],[156,3],[163,3],[169,3],[173,7],[192,3],[197,6],[206,5],[212,4],[217,5],[225,2],[229,1],[234,4],[239,4],[246,4],[254,2],[257,4],[264,4],[270,3],[277,4],[282,4],[287,3],[291,4],[296,2],[303,1],[306,3],[310,4],[317,4],[322,9],[322,4],[327,4],[333,4],[338,10],[338,3],[342,6],[350,2],[353,3],[360,3],[366,3],[370,7],[379,4],[390,3],[395,6],[404,3],[408,7],[428,6],[436,6],[443,7],[452,4]]},"1118":{"position":[[3,7],[17,1],[19,3],[23,4],[69,5],[75,5],[81,7],[119,1],[121,3],[125,4],[133,7],[143,6],[151,6],[158,3],[162,1],[164,3],[168,4],[174,4],[179,4],[188,4],[193,6],[208,7],[216,6]]},"1120":{"position":[[0,7],[30,6],[37,3],[41,1],[43,3],[47,4],[55,7],[85,4],[90,4],[95,4],[100,6],[120,2],[130,2],[133,2],[136,3]]},"1122":{"position":[[5,6]]},"1125":{"position":[[4,2],[40,7],[56,3],[123,6],[130,3],[152,3],[160,7]]},"1127":{"position":[[2,7],[24,7],[32,4],[45,6],[56,7],[64,5],[77,7]]},"1129":{"position":[[0,7],[8,4],[13,6],[23,3],[29,7],[40,4],[45,4],[54,3],[58,3],[62,3],[68,2],[71,8],[83,7],[91,6],[98,3],[103,9],[116,7],[124,7],[132,3],[137,3],[141,7],[150,4],[158,8],[171,3],[175,3],[179,7],[188,5],[197,9],[211,2],[214,8],[225,7],[233,6],[241,3],[246,9],[258,7],[266,7],[275,3],[280,3],[284,7],[293,5],[299,4],[307,8],[321,3],[325,3],[329,7],[338,5],[344,5],[353,9],[367,12]]},"1131":{"position":[[16,7],[24,5],[38,6],[52,4],[59,7],[67,4],[72,6],[82,3],[88,7],[99,4],[104,4],[113,3],[117,3],[121,3],[127,2],[150,9],[162,7],[170,5],[180,3],[186,9],[199,7],[207,7],[216,3],[227,9],[239,7],[247,5],[257,3],[263,9],[276,9],[286,4],[326,7],[334,5],[349,4],[375,2],[378,9],[388,6],[399,9],[409,6],[416,3],[423,3],[427,7],[436,8],[445,5],[454,3],[462,3]]},"1134":{"position":[[0,7],[8,4],[13,6],[23,3],[29,7],[40,4],[45,6],[52,6],[61,4],[66,6],[73,3],[77,3],[83,4],[88,4],[97,1],[102,6],[109,4],[116,5],[124,3],[129,2],[133,8],[145,7],[153,6],[160,1],[166,8],[175,7],[183,3],[187,6],[194,2],[197,6],[204,2],[207,3],[211,6],[222,2],[225,6],[232,2],[235,3],[239,4],[244,2],[247,1],[249,2],[252,3],[256,1],[258,6],[266,3],[270,1],[275,1],[278,1],[282,8],[291,8],[303,1],[309,5],[318,8],[327,5],[333,1],[336,3],[340,6],[348,5],[354,4],[361,1],[364,4],[371,1],[373,1],[377,5],[383,4],[389,5],[395,4]]},"1136":{"position":[[22,4],[35,7],[43,4],[48,6],[58,3],[64,7],[75,4],[80,4],[85,6],[94,2],[97,3],[102,4],[108,2],[112,4],[118,2],[123,4],[128,6],[136,4],[142,4],[151,4],[156,4],[165,8],[177,7],[185,6],[192,4],[200,3],[204,1],[209,1],[212,1],[216,8],[225,8],[237,1],[243,5],[252,8],[261,5],[267,1],[280,3],[284,6],[292,5],[298,3],[304,1],[306,1],[310,5],[316,3],[321,3],[328,5],[334,3],[338,3],[343,4],[350,3],[354,6],[362,5],[370,1],[373,4],[378,3],[384,1],[386,1],[390,5],[396,4],[402,3]]},"1138":{"position":[[6,7],[14,4],[19,6],[29,3],[35,7],[46,4],[51,10],[62,6],[71,4],[77,1],[79,10],[91,3],[95,1],[98,1],[100,3],[105,3],[111,6],[118,1],[122,1],[126,4],[131,4],[140,4],[148,10],[161,6],[171,7],[179,7],[187,4],[193,12],[207,3],[213,4],[223,7],[231,5],[237,7],[245,7],[253,2],[258,7],[266,7],[274,2],[279,6],[289,6],[296,4],[301,4],[307,3],[311,7],[320,6],[330,6],[337,1],[340,3],[350,2],[361,7],[369,4],[374,6],[384,3],[390,7],[401,4],[406,4],[411,6],[420,4],[425,6],[434,4],[440,1],[442,4],[448,8],[461,3],[465,7],[474,5],[483,1],[485,4],[493,4],[498,4],[507,1],[512,4],[517,4],[524,5],[532,1],[537,7],[545,7],[553,1],[556,6],[566,1],[568,12],[582,8],[593,6],[600,4],[605,3],[617,5],[624,5]]},"1140":{"position":[[29,2]]},"1142":{"position":[[21,9],[35,6],[57,4],[62,8],[80,7]]},"1145":{"position":[[0,6],[11,5]]},"1147":{"position":[[3,6],[50,6],[75,6],[83,8],[83,3],[87,4],[94,7],[104,8],[104,3],[108,4],[124,7],[178,5]]},"1150":{"position":[[0,4],[5,6],[13,4],[18,2],[21,8],[21,3],[25,4],[42,4],[47,2],[50,8],[50,3],[54,4],[68,5]]},"1152":{"position":[[0,4],[5,6],[13,4],[18,2],[21,8],[21,3],[25,4],[31,3],[35,4],[43,4],[48,2],[51,8],[51,3],[55,4],[67,3],[71,4]]},"1154":{"position":[[8,4],[13,5],[20,1],[23,4],[28,2],[31,8],[31,3],[35,4],[62,4],[71,6],[85,4],[90,5],[97,1],[99,4],[105,4],[111,4],[116,2],[119,8],[119,3],[123,4],[128,4],[133,4],[138,5],[145,1],[147,5],[154,3],[159,4],[164,2],[167,8],[167,3],[171,4],[176,3],[180,4],[185,5],[192,1],[194,4],[200,3],[205,4],[210,2],[213,8],[213,3],[217,4],[222,3],[226,4],[231,5],[238,1],[240,4],[246,3],[250,3],[255,4],[260,2],[263,8],[263,3],[267,4],[272,3],[276,3],[284,4],[290,3],[295,3],[302,3],[306,3],[409,4],[452,6],[471,4],[486,2],[489,3],[493,4],[517,4],[544,3],[604,3],[631,3],[669,3],[700,3],[723,3],[760,6],[795,3],[799,3],[811,3],[815,4],[829,3],[833,3],[850,3],[885,3],[889,3],[906,3],[929,3],[933,3],[937,1],[971,5],[996,3],[1002,4],[1025,3],[1029,3],[1046,3],[1050,3],[1073,6],[1086,4],[1093,2],[1150,6],[1167,4],[1172,2],[1176,3],[1180,4],[1186,4],[1191,2],[1194,8],[1194,3],[1198,4],[1203,3],[1208,4],[1213,2],[1217,3],[1221,6],[1221,3],[1225,2],[1228,5],[1234,3],[1238,8],[1247,2],[1250,1],[1253,4],[1258,2],[1261,8],[1261,3],[1265,4],[1270,3],[1274,6],[1274,3],[1278,2],[1281,5],[1287,3],[1292,4],[1297,2],[1301,3],[1305,6],[1305,3],[1309,2],[1312,5],[1318,3],[1322,4],[1327,2],[1330,1],[1333,4],[1338,2],[1341,8],[1341,3],[1345,4],[1350,3],[1354,6],[1354,3],[1358,2],[1361,5],[1367,3],[1375,6],[1385,4],[1390,6],[1398,4],[1403,2],[1406,8],[1406,3],[1410,4],[1416,3],[1420,4],[1438,6],[1454,4],[1459,2],[1462,8],[1462,3],[1466,4]]},"1157":{"position":[[17,6],[41,6],[77,4],[82,5],[89,3],[93,4],[99,3],[103,4],[108,5],[116,4],[122,3],[127,3],[131,3],[135,4],[140,5],[148,4],[154,4],[160,3],[164,4],[169,4],[174,5],[182,4],[188,3],[193,3],[197,3],[201,4],[206,6],[214,3]]},"1159":{"position":[[0,6],[68,6]]},"1163":{"position":[[21,6]]},"1165":{"position":[[5,6],[27,4],[47,6],[100,10],[113,10],[163,3],[169,4],[176,3],[219,6],[237,6],[279,6]]},"1167":{"position":[[0,6]]},"1170":{"position":[[0,4],[5,6],[12,6],[20,3],[34,3],[70,3],[109,9],[119,3],[124,1]]},"1173":{"position":[[0,7],[8,4],[13,6],[23,3],[29,3],[35,3],[41,3],[45,4],[52,2],[57,2],[60,6],[69,7],[80,4],[85,4],[100,10],[116,3],[120,4],[125,4],[137,6],[144,2],[147,3],[154,2],[157,9],[167,10],[180,3],[187,3],[193,3],[197,6],[207,6],[218,1],[222,3],[238,8],[248,3],[255,3],[259,6],[267,4],[274,10],[286,2],[289,3],[296,3],[302,3],[306,6],[321,1],[325,3],[332,5],[338,4],[347,8],[356,5],[364,2],[367,6],[374,10],[404,2],[407,3],[414,2],[417,5],[423,10],[435,4],[442,3],[449,3],[455,3],[459,6],[476,1],[480,3],[495,3],[502,4],[507,11],[521,3],[525,10],[541,4],[546,1],[548,4],[553,14],[569,1],[572,4],[577,7],[588,3],[592,7],[600,1],[604,5],[610,4],[615,4],[620,6],[627,4],[632,6],[640,1],[647,3],[651,10],[664,6],[673,4],[678,1],[680,4],[685,14],[701,1],[704,4],[709,7],[720,1],[722,11],[734,4],[739,8],[749,1],[751,5],[759,4],[765,2],[783,6],[794,4],[799,6],[807,7],[816,3],[831,21],[853,6],[869,3],[873,6],[881,6],[888,9],[898,2],[901,4],[906,6],[915,1],[919,10],[931,2],[934,3],[941,6],[948,5],[954,8],[965,3],[972,3],[979,3],[986,4],[991,15],[1009,3],[1013,6],[1028,1],[1032,3],[1041,4],[1046,21],[1068,6],[1076,4],[1081,6],[1091,7],[1102,4],[1107,4],[1112,2],[1115,6],[1123,1],[1126,6],[1133,6],[1140,7],[1149,2],[1152,9],[1163,7],[1171,7],[1180,2],[1183,4],[1194,7],[1202,3],[1206,7],[1234,2],[1237,3],[1244,6],[1251,5],[1260,3],[1267,3],[1273,3],[1277,6],[1295,1],[1299,3]]},"1175":{"position":[[4,4],[9,6],[21,6],[32,4],[37,6],[45,7],[54,3],[59,11],[72,2],[77,4],[82,6],[90,12],[104,2],[109,4],[114,6],[122,11],[135,2],[140,4],[145,6]]},"1178":{"position":[[0,7],[8,4],[13,6],[23,3],[29,3],[35,3],[39,4],[46,2],[51,2],[54,6],[63,7],[73,4],[80,6],[87,3],[91,3],[95,5],[101,3],[108,4],[113,4],[128,10],[144,3],[148,3],[152,4],[164,6],[171,2],[174,3],[181,2],[184,9],[194,10],[207,3],[214,3],[220,3],[224,6],[234,6],[245,1],[249,3],[265,8],[275,3],[282,3],[286,6],[294,4],[301,10],[313,2],[316,3],[323,3],[329,3],[333,6],[348,1],[352,3],[359,5],[365,4],[374,8],[383,5],[391,2],[394,6],[401,10],[427,2],[430,3],[437,2],[440,5],[446,10],[458,4],[465,3],[472,3],[478,3],[482,6],[499,1],[503,3],[516,3],[520,6],[530,3],[534,3],[547,6],[554,3],[558,3],[562,6],[572,6],[579,3],[583,3],[587,8],[605,6],[612,3],[621,4],[626,1],[629,3],[633,7],[644,1],[646,6],[653,4],[658,8],[669,5],[675,4],[680,3],[684,4],[689,6],[696,6],[709,6],[716,3],[722,3],[726,4],[733,4],[738,1],[741,3],[745,7],[756,1],[758,4],[763,4],[768,8],[778,3],[782,1],[786,6],[796,7],[807,7],[818,4],[823,9],[836,4],[845,6],[853,5],[862,5],[871,5],[895,6],[906,4],[911,6],[919,7],[928,6],[936,11],[949,2],[954,4],[959,6],[967,12],[981,2],[986,4],[991,6],[1009,21],[1031,6],[1047,3],[1051,6],[1059,3],[1063,6],[1070,9],[1080,2],[1083,4],[1088,6],[1097,1],[1101,10],[1113,2],[1116,3],[1123,6],[1130,5],[1136,8],[1147,3],[1154,3],[1161,3],[1168,4],[1173,15],[1191,3],[1195,6],[1210,1],[1214,3]]},"1180":{"position":[[11,11],[23,3],[27,7],[35,3],[39,11],[64,6],[71,3],[77,6],[86,4],[91,1],[94,3],[98,7],[109,1],[111,4],[116,4],[121,8],[131,3],[135,1],[138,6],[148,7],[173,6],[180,3],[184,20],[208,4],[213,20],[236,3],[240,11],[254,6],[261,4],[266,1],[269,3],[273,7],[284,5],[293,4],[298,3],[304,1],[306,4],[313,8],[325,4],[330,5],[336,5],[343,3],[347,6],[359,1],[365,1],[369,1],[371,7],[379,3],[383,4],[389,8]]},"1183":{"position":[[0,4],[5,4],[14,9],[28,4],[33,9],[44,4],[50,4],[55,1],[58,1],[60,6],[69,3],[73,4],[79,5],[88,6],[95,3],[99,4],[105,4],[114,3],[118,4],[123,4],[135,6],[146,4],[151,6],[159,9],[170,9],[181,7],[190,1],[194,4],[199,6],[209,4],[215,3],[222,6],[229,3],[234,4],[241,4],[246,6],[255,2],[258,3],[265,3],[271,3],[275,5],[281,3],[288,5],[294,4],[299,4],[304,5],[312,4],[318,1],[323,2],[326,7],[334,4],[339,4],[345,3],[349,7],[364,6],[371,4]]},"1185":{"position":[[0,4],[5,4],[14,4],[20,3],[27,3],[31,4],[37,4],[46,3],[50,4],[55,4],[62,2],[65,3],[72,3],[78,3],[82,5],[88,3],[95,5],[101,4],[106,5],[119,4],[126,7],[138,3],[144,4],[149,1],[151,1],[153,1],[155,5],[162,4],[167,1],[169,1],[171,1],[173,1],[176,1],[179,3],[185,4],[190,5],[198,4],[203,7],[213,2],[216,3],[223,3],[229,3],[233,5],[239,3],[254,8],[264,3],[271,2],[274,7],[282,4],[288,2],[291,3],[298,3],[304,3],[308,5],[314,3],[321,3],[325,7],[340,6],[347,8]]},"1187":{"position":[[7,9],[21,4],[26,9],[37,4],[43,4],[48,1],[51,1],[53,6],[62,3],[66,4],[72,5],[81,6],[88,3],[92,4],[98,4],[105,10],[120,12],[134,3],[139,15],[156,2],[161,4],[166,6],[174,19],[195,2],[200,4],[205,6],[215,3],[226,3],[230,7],[238,3],[242,11],[269,1],[271,15],[291,6],[314,11],[326,12],[343,4],[348,14],[377,10],[388,13]]},"1189":{"position":[[0,2],[8,4],[13,6],[25,2],[31,2],[35,1],[38,3],[42,4],[47,4],[60,6],[70,2],[74,1],[77,3],[81,4],[86,4],[93,6],[106,2],[115,7],[123,7],[131,2],[134,3],[142,2],[155,6],[175,6],[184,4],[190,1],[194,4],[199,4],[204,4],[215,2],[230,2],[245,4],[270,2],[274,4],[279,6],[286,3],[297,2],[306,2],[309,2],[319,2],[322,2],[326,3],[335,2],[338,2]]},"1191":{"position":[[7,6],[14,10],[39,6],[47,6],[64,6],[73,6],[80,4],[86,8],[99,10],[99,5],[105,4],[110,4],[117,4],[123,3],[127,4],[132,4],[163,4],[168,3],[207,3]]},"1193":{"position":[[0,4],[5,6],[12,6],[44,3],[73,6],[141,4],[146,6],[162,4],[167,6],[174,4],[197,4],[202,6]]},"1195":{"position":[[14,1]]},"1197":{"position":[[0,3],[26,2],[30,1],[33,5],[39,4],[44,3],[48,3],[54,4],[60,1],[65,2],[81,1],[95,1],[115,4],[125,4],[133,2],[138,3],[144,2],[148,3],[169,1],[172,1],[188,4],[194,4],[201,2]]},"1200":{"position":[[2,5],[22,1],[35,2],[40,1],[42,3],[53,1],[56,7],[65,5],[71,1],[75,7],[84,6],[91,1],[95,7],[104,6],[111,1],[115,7],[124,3],[128,4],[133,1],[136,3],[140,4],[149,5],[149,3],[153,1],[155,3],[161,4],[178,2],[182,3],[188,1],[196,4],[203,6],[211,4],[216,6],[226,4],[231,12],[231,4],[236,7],[248,4],[253,2],[257,3],[264,1],[276,6],[284,1],[286,2],[289,3],[293,5],[299,7],[307,4],[312,3],[317,1],[319,1],[323,6],[334,5],[340,4],[370,6],[378,5],[384,7],[392,7],[403,1],[408,4],[413,12],[413,4],[418,7],[439,4],[457,6],[465,1],[467,2],[470,3],[474,6],[481,7],[489,4],[494,3],[499,1],[501,3],[505,2],[508,5],[514,3],[518,3],[523,1],[525,1],[529,6],[539,3],[547,6],[554,1]]},"1201":{"position":[[2,5],[33,7],[42,5],[48,1],[52,7],[61,6],[68,1],[72,7],[81,6],[88,1],[92,7],[101,3],[105,4],[110,1],[113,3],[117,4],[126,5],[126,3],[130,1],[132,3],[138,4],[155,2],[159,3],[165,1],[173,4],[180,6],[188,4],[193,6],[203,4],[208,12],[208,4],[213,7],[225,4],[230,2],[234,3],[241,1],[253,6],[261,1],[263,2],[266,3],[270,5],[276,7],[284,4],[289,3],[294,1],[296,1],[300,6],[311,5],[317,1],[335,6],[343,5],[349,7],[357,7],[368,1],[373,4],[378,12],[378,4],[383,7],[404,4],[418,6],[426,1],[428,2],[431,3],[435,6],[442,7],[450,4],[455,3],[460,1],[462,3],[466,2],[469,5],[475,3],[479,3],[484,1],[486,1],[490,6],[500,3],[521,4],[528,7],[551,5],[557,5],[567,6],[574,1],[588,2],[592,1],[595,5],[601,4],[606,3],[610,3],[616,4],[622,1],[627,2],[632,1],[635,6],[642,6],[650,1],[652,3],[658,7],[669,2],[673,2],[678,4],[683,1],[685,3],[689,4],[694,6],[701,6],[708,1],[710,2],[713,2],[716,3],[720,1],[722,2],[725,2],[728,2],[733,1],[735,3],[739,4],[744,6],[751,6],[758,1],[760,2],[763,2],[766,3],[770,1],[772,2],[775,2],[778,2],[782,1],[784,3],[790,7],[799,4],[804,6],[811,6],[818,1],[820,2],[823,2],[826,3],[830,1],[832,2],[835,2],[838,2],[841,4],[848,5],[854,4],[859,1],[861,3]]},"1203":{"position":[[1,7],[10,5],[16,1],[20,7],[29,6],[36,1],[40,7],[49,6],[56,1],[60,7],[69,6],[76,1],[80,7],[89,3],[93,4],[98,1],[104,7],[119,4],[124,15],[124,7],[132,7],[140,3],[144,6],[160,7],[183,5],[190,7],[199,1],[202,4],[208,7],[219,1],[225,3],[229,4],[244,7],[259,6],[266,9],[276,2],[280,2],[283,10],[283,2],[286,7],[296,15],[296,7],[304,7],[313,11],[326,2],[329,7],[329,2],[332,4],[339,2],[342,8],[342,2],[345,5],[353,10],[353,2],[356,7],[381,2],[385,9],[395,7],[405,2],[409,4],[419,1],[424,6],[432,9],[445,4],[450,12],[450,4],[455,7],[476,5],[476,3],[480,1],[482,3],[488,4],[496,2],[500,3],[506,1],[511,6],[519,4],[527,4],[532,12],[532,4],[537,7],[549,2],[553,3],[560,1],[572,6],[585,3],[592,1],[594,1],[598,6],[609,5],[615,2],[635,6],[650,3],[657,1],[659,1],[663,6],[674,4],[679,12],[679,4],[684,7],[696,4],[710,6],[723,3],[730,1],[737,3],[744,1],[746,1],[750,6],[760,3],[781,3],[786,3],[790,1],[794,1],[797,1],[801,1],[806,1],[811,6],[830,1],[835,5],[841,5],[865,6],[880,3],[887,1],[889,1],[893,6],[906,6],[913,1]]},"1206":{"position":[[0,3],[4,3],[8,8],[34,1],[36,1],[40,7],[58,3]]},"1208":{"position":[[0,3],[7,4],[12,8],[21,10],[43,7],[51,8],[62,6],[69,1],[72,5],[80,4],[94,3],[101,5]]},"1213":{"position":[[0,3],[4,7],[12,3]]},"1215":{"position":[[1,4]]},"1218":{"position":[[5,3],[18,3],[23,12],[23,4],[28,7],[47,3],[94,3],[99,3]]},"1220":{"position":[[4,1],[12,3],[17,3],[21,4],[26,4],[31,4],[40,1],[48,3],[53,3],[57,4],[62,4],[67,4],[72,4],[78,3],[83,3],[91,1],[99,3],[104,3],[108,4],[113,8],[113,3],[117,4],[122,8],[122,3],[126,4]]},"1222":{"position":[[7,1],[11,3],[17,3],[22,1],[24,3],[35,3],[41,6],[48,3],[54,3],[59,1],[62,3],[68,3]]},"1224":{"position":[[8,1],[10,5],[21,1],[23,3],[34,5],[41,4],[53,1],[55,8],[76,1],[78,4],[95,1],[97,4],[113,1],[115,5],[128,1],[130,4],[141,2],[144,9],[160,5],[166,8],[183,4],[188,6],[204,1],[206,4],[213,3]]},"1226":{"position":[[3,5],[32,3],[37,5],[43,9],[43,4],[48,4],[63,3],[68,5],[74,4],[79,1],[81,4],[97,3],[102,5],[108,4],[113,4],[118,2],[121,9],[139,3],[144,4],[149,11],[171,3],[176,6],[184,3]]},"1228":{"position":[[1,3],[6,5],[12,3],[24,3],[29,4],[34,6],[51,3],[56,4],[61,4],[76,3],[81,3],[85,3],[91,5],[106,3],[111,1],[113,3],[118,4],[133,2]]},"1230":{"position":[[1,3],[6,4],[11,9],[34,3],[39,5],[46,3],[62,3],[71,3],[76,1],[78,1],[81,3],[99,3],[104,3],[109,3],[115,4],[138,3],[143,4],[148,9],[158,5],[173,3],[178,4],[183,9],[193,6],[209,3],[214,4],[219,9],[229,6],[245,3],[250,1],[252,1],[255,2],[272,3],[277,1],[279,1],[282,2],[296,3],[301,5],[336,3],[345,2],[357,2],[367,2],[377,3],[384,2],[420,3],[424,2],[434,3],[438,3],[449,3],[456,2],[459,4],[471,2],[481,3],[486,1],[490,1],[492,3],[496,7],[504,7],[512,4],[519,1],[521,3],[529,3],[534,1],[536,1],[539,7],[548,6],[555,1],[558,1],[561,7],[570,6],[577,1],[580,1],[583,7],[592,5],[598,1],[601,1],[603,1],[605,3],[609,4],[618,1],[620,3],[624,1],[627,1],[629,1],[631,2],[635,1],[637,6],[645,5],[651,5],[657,1],[662,1],[664,6],[673,1],[675,1],[678,1],[682,2],[685,6],[692,1],[696,3],[701,1],[703,1],[705,10],[716,1],[718,2],[721,8],[731,4],[736,4],[741,1],[744,4],[749,1],[753,3],[758,1],[760,8],[769,7],[779,4],[784,1],[786,3],[791,6],[798,9],[808,5],[814,12],[814,9],[824,2],[827,7],[836,10],[847,1],[850,4],[858,2],[861,4],[866,1],[868,1],[870,1],[872,6],[880,5],[886,5],[892,1],[898,3],[903,1],[905,1],[908,1],[912,2],[916,3],[921,4],[926,6],[933,1],[937,2],[941,3],[946,3],[950,3],[954,1],[956,2],[960,3],[965,1],[967,1],[970,1],[974,2],[978,3],[983,1],[986,1],[989,1],[994,3],[1001,14],[1017,3],[1022,1],[1024,14],[1039,14],[1055,10],[1067,3],[1072,1],[1074,3],[1078,14],[1093,14],[1109,10],[1120,10],[1131,10],[1142,10],[1153,14],[1169,10],[1180,10],[1191,10],[1202,10],[1213,14],[1229,10],[1240,10],[1252,3],[1257,1],[1259,5],[1265,5],[1271,1],[1273,6],[1282,1],[1284,1],[1287,1],[1292,3],[1297,2],[1300,2],[1303,6],[1310,1],[1314,3]]},"1233":{"position":[[6,4],[11,8],[38,3],[43,4],[48,8],[63,8],[87,3],[92,8],[102,10],[102,7],[110,2],[117,6],[124,4],[129,4],[141,3],[158,3],[162,6],[169,4],[174,4],[179,6],[188,4],[204,3],[213,3],[218,3],[222,6],[229,4],[234,4],[239,5],[245,6],[254,3],[271,3],[275,6],[282,2],[285,4],[290,2],[294,3],[301,3],[314,3],[319,3],[323,6],[330,2],[333,4],[338,2],[341,3],[345,3],[396,3],[400,6],[407,4],[412,4],[417,5],[427,3],[440,5],[446,4],[454,4]]},"1235":{"position":[[6,4],[11,7],[37,3],[42,4],[47,7],[61,6],[81,3],[86,6],[93,9],[93,6],[100,2],[104,3],[109,5],[115,8],[124,6],[131,9],[131,6],[138,2]]},"1237":{"position":[[16,5],[24,3],[29,5],[35,10],[46,2],[49,8],[74,4],[81,3],[86,6],[93,10],[104,2],[107,8],[137,4],[142,3],[146,5],[154,3],[159,6],[166,10],[177,2],[180,8],[194,3],[199,1],[201,1],[203,3],[207,7],[215,7],[223,4],[228,1],[230,3],[236,4],[243,3],[248,1],[250,1],[253,7],[262,5],[268,1],[271,1],[273,1],[275,3],[279,7],[279,3],[283,3],[287,3],[291,1],[296,1],[298,3],[302,3],[308,1],[311,1],[314,1],[316,3],[321,1],[325,1],[328,1],[332,1],[335,1],[342,1],[344,3],[351,1],[354,1],[358,1],[360,6],[367,3],[372,1],[376,2],[380,3],[385,1],[387,1],[389,10],[400,1],[402,2],[405,8],[415,4],[420,4],[425,1],[428,4],[433,1],[437,3],[442,1],[444,8],[453,7],[463,3],[467,1],[469,3],[473,7],[481,8],[490,10],[502,3],[507,3],[511,9],[521,7],[529,5],[535,1],[537,2],[540,3],[544,3],[548,6],[548,3],[552,2],[555,10],[566,1],[569,7],[569,3],[573,3],[578,1],[580,3],[585,2],[588,4],[593,1],[595,1],[597,1],[599,3],[606,1],[610,3],[615,5],[621,1],[624,2],[627,8],[636,10],[647,1],[650,1],[653,2],[657,3],[662,5],[668,1],[670,7],[678,10],[689,1],[692,3],[697,1],[699,10],[711,8],[720,10],[731,1],[734,1],[737,2],[740,3],[744,5],[752,1],[754,3],[758,5],[766,1],[768,18],[787,2],[790,7],[790,3],[794,3],[799,1],[801,3],[806,2],[809,4],[814,1],[816,1],[818,1],[820,3],[825,1],[829,1],[832,1],[836,1],[839,1],[847,3],[852,1],[854,1],[857,1],[861,2],[865,3],[870,1],[872,3],[877,1],[881,4]]},"1239":{"position":[[45,3],[50,5],[56,5]]},"1241":{"position":[[6,6],[19,3],[36,3],[41,6],[49,11],[49,6],[56,4]]},"1243":{"position":[[2,3],[19,6],[26,6],[45,3],[50,6],[57,6],[65,8],[76,4]]},"1245":{"position":[[0,1],[6,3],[11,2],[15,1],[17,3],[22,3],[26,1],[29,4],[34,2],[38,2],[41,5],[47,1],[49,1],[52,1],[54,18],[73,2],[76,4],[82,4],[87,1],[90,4],[95,14],[111,2],[114,5],[120,1],[122,2],[126,3],[131,5],[137,1],[140,1],[142,18],[161,2],[164,4],[170,4],[175,1],[178,4],[183,14],[199,2],[202,5],[208,1],[210,2],[213,2],[216,6],[223,1],[228,3],[232,1],[234,2],[240,3],[245,1],[247,1],[250,1],[252,18],[271,2],[274,4],[280,4],[285,1],[288,4],[293,14],[309,2],[312,5],[318,1],[320,2],[323,2],[326,6],[333,1],[338,3],[342,1],[344,2],[350,3],[355,1],[357,6],[364,6],[375,9],[386,5],[393,1],[396,1]]},"1248":{"position":[[3,2],[19,3],[24,2],[28,1],[30,7],[38,1],[41,1],[43,7]]},"1250":{"position":[[4,3],[14,5],[22,7],[32,4],[37,4],[42,5],[48,7],[56,7],[64,5],[80,5],[88,5],[94,5],[100,7]]},"1252":{"position":[[7,3],[12,6],[19,4],[24,7],[32,5],[55,7],[65,3],[69,3],[73,9],[83,7],[91,5],[97,7],[107,7],[116,1],[119,1],[122,13],[122,3],[126,9],[136,7],[144,7],[153,4],[158,6],[165,5],[171,3],[175,2],[178,8],[187,2],[190,7],[199,13],[199,3],[203,9],[214,4],[219,8],[228,8],[237,8],[246,8],[255,7],[263,5],[272,4],[277,8]]},"1255":{"position":[[1,3],[6,3],[11,3],[16,2]]},"1257":{"position":[[3,8]]},"1262":{"position":[[0,3],[5,6],[23,4],[28,6],[35,4],[40,16],[42,6],[49,7],[57,7],[66,5],[66,3],[70,1],[72,3],[77,4],[83,4],[89,4],[95,4]]},"1264":{"position":[[9,3],[13,1],[24,7]]},"1266":{"position":[[0,3],[4,3],[13,3],[17,3],[21,2],[24,9],[34,4],[39,3],[44,3],[49,3],[53,7],[62,3],[66,5],[72,5]]}}}],["一个",{"_index":41,"t":{"15":{"position":[[44,2]]},"23":{"position":[[100,2]]},"113":{"position":[[81,2]]},"133":{"position":[[15,2],[63,2],[87,2],[160,2]]},"137":{"position":[[3,2]]},"143":{"position":[[47,2]]},"172":{"position":[[16,2],[69,2]]},"214":{"position":[[24,2]]},"281":{"position":[[122,2]]},"286":{"position":[[3,2]]},"307":{"position":[[1203,2]]},"316":{"position":[[185,2],[451,2]]},"348":{"position":[[46,2],[53,2]]},"350":{"position":[[78,2]]},"379":{"position":[[89,2],[99,2],[115,2]]},"382":{"position":[[9,2]]},"384":{"position":[[12,2]]},"399":{"position":[[1,2],[18,2],[40,2]]},"403":{"position":[[86,2],[96,2]]},"437":{"position":[[299,2],[341,2]]},"464":{"position":[[15,2]]},"495":{"position":[[17,2]]},"522":{"position":[[84,2],[144,2]]},"531":{"position":[[26,2]]},"536":{"position":[[123,2]]},"538":{"position":[[523,2],[530,2],[538,2]]},"540":{"position":[[108,2]]},"554":{"position":[[153,2],[305,2],[337,2]]},"598":{"position":[[15,2],[63,2],[87,2],[160,2]]},"602":{"position":[[3,2]]},"608":{"position":[[47,2]]},"621":{"position":[[81,2]]},"657":{"position":[[16,2],[69,2]]},"675":{"position":[[24,2]]},"794":{"position":[[1203,2]]},"803":{"position":[[185,2],[451,2]]},"806":{"position":[[122,2]]},"811":{"position":[[3,2]]},"857":{"position":[[46,2],[53,2]]},"859":{"position":[[78,2]]},"864":{"position":[[89,2],[99,2],[115,2]]},"867":{"position":[[9,2]]},"869":{"position":[[12,2]]},"884":{"position":[[1,2],[18,2],[40,2]]},"888":{"position":[[86,2],[96,2]]},"922":{"position":[[299,2],[341,2]]},"946":{"position":[[15,2]]},"962":{"position":[[7,2]]},"964":{"position":[[17,2],[41,2]]},"968":{"position":[[386,2]]},"970":{"position":[[4,2]]},"983":{"position":[[9,2]]},"992":{"position":[[108,2]]},"1005":{"position":[[77,2]]},"1061":{"position":[[1742,2],[1880,2]]},"1064":{"position":[[18,2]]},"1070":{"position":[[537,2]]},"1081":{"position":[[32,2]]},"1086":{"position":[[32,2]]},"1125":{"position":[[11,2]]},"1131":{"position":[[160,2],[237,2]]},"1145":{"position":[[8,2]]},"1147":{"position":[[172,2]]},"1150":{"position":[[62,2]]},"1152":{"position":[[79,2]]},"1154":{"position":[[415,2],[550,2],[1433,2]]},"1159":{"position":[[13,2]]},"1161":{"position":[[19,2]]},"1163":{"position":[[6,2]]},"1167":{"position":[[8,2],[63,2]]},"1206":{"position":[[18,2]]},"1224":{"position":[[71,2]]},"1230":{"position":[[391,2]]}}}],["一些",{"_index":1056,"t":{"340":{"position":[[16,2]]},"787":{"position":[[16,2]]},"968":{"position":[[462,2]]},"1154":{"position":[[1142,2]]},"1203":{"position":[[630,2]]}}}],["一件",{"_index":959,"t":{"304":{"position":[[112,2]]},"382":{"position":[[42,2]]},"829":{"position":[[112,2]]},"867":{"position":[[42,2]]}}}],["一再",{"_index":350,"t":{"23":{"position":[[62,2]]}}}],["一定",{"_index":289,"t":{"19":{"position":[[605,2]]},"131":{"position":[[107,2]]},"596":{"position":[[107,2]]},"1125":{"position":[[86,2]]}}}],["一旦",{"_index":1708,"t":{"1239":{"position":[[176,2]]}}}],["一条",{"_index":1688,"t":{"1230":{"position":[[313,2]]}}}],["一样",{"_index":122,"t":{"17":{"position":[[63,2]]},"304":{"position":[[101,2]]},"376":{"position":[[127,2]]},"439":{"position":[[95,2]]},"829":{"position":[[101,2]]},"853":{"position":[[127,2]]},"924":{"position":[[95,2]]},"964":{"position":[[10,2]]},"1218":{"position":[[64,2]]}}}],["一次",{"_index":491,"t":{"99":{"position":[[209,2]]},"560":{"position":[[475,2]]},"566":{"position":[[34,2],[389,2]]},"576":{"position":[[100,2]]},"580":{"position":[[25,2]]}}}],["一段",{"_index":216,"t":{"19":{"position":[[291,2]]}}}],["一段时间",{"_index":1655,"t":{"1200":{"position":[[356,4]]},"1201":{"position":[[330,4]]}}}],["一生",{"_index":302,"t":{"21":{"position":[[30,2]]}}}],["一种",{"_index":205,"t":{"19":{"position":[[245,2]]},"131":{"position":[[18,2]]},"316":{"position":[[40,2]]},"445":{"position":[[5,2]]},"475":{"position":[[8,2]]},"519":{"position":[[22,2]]},"522":{"position":[[5,2]]},"560":{"position":[[44,2]]},"596":{"position":[[18,2]]},"803":{"position":[[40,2]]},"927":{"position":[[5,2]]},"964":{"position":[[0,2],[28,2]]},"1003":{"position":[[11,2]]},"1165":{"position":[[59,2]]},"1170":{"position":[[26,2]]}}}],["一系列",{"_index":1422,"t":{"968":{"position":[[196,3]]},"1125":{"position":[[52,3]]}}}],["一组",{"_index":1232,"t":{"464":{"position":[[4,2]]},"519":{"position":[[55,2]]},"946":{"position":[[4,2]]}}}],["一致性",{"_index":1108,"t":{"357":{"position":[[22,3]]},"376":{"position":[[14,3]]},"464":{"position":[[9,3]]},"834":{"position":[[22,3]]},"853":{"position":[[14,3]]},"946":{"position":[[9,3]]}}}],["一般",{"_index":1372,"t":{"580":{"position":[[69,2]]},"582":{"position":[[193,2]]},"1103":{"position":[[113,2]]},"1120":{"position":[[113,2]]}}}],["一行",{"_index":1702,"t":{"1239":{"position":[[74,2]]}}}],["一部分",{"_index":1523,"t":{"1083":{"position":[[14,3]]},"1088":{"position":[[14,3]]}}}],["一面",{"_index":334,"t":{"23":{"position":[[5,2]]}}}],["一项",{"_index":1073,"t":{"348":{"position":[[70,2]]},"379":{"position":[[126,2]]},"389":{"position":[[754,2]]},"857":{"position":[[70,2]]},"864":{"position":[[126,2]]},"874":{"position":[[754,2]]}}}],["三个",{"_index":1166,"t":{"387":{"position":[[531,2]]},"389":{"position":[[739,2]]},"872":{"position":[[531,2]]},"874":{"position":[[739,2]]}}}],["上下文",{"_index":1065,"t":{"342":{"position":[[68,3]]},"789":{"position":[[68,3]]}}}],["上次",{"_index":1382,"t":{"580":{"position":[[384,2]]}}}],["上面",{"_index":1187,"t":{"425":{"position":[[6,2]]},"910":{"position":[[6,2]]}}}],["下载",{"_index":1217,"t":{"442":{"position":[[406,2],[484,2],[496,2]]}}}],["下降",{"_index":1400,"t":{"593":{"position":[[118,2]]}}}],["下面",{"_index":658,"t":{"137":{"position":[[0,2]]},"578":{"position":[[50,2]]},"602":{"position":[[0,2]]}}}],["不仅",{"_index":273,"t":{"19":{"position":[[535,2]]},"376":{"position":[[101,2]]},"853":{"position":[[101,2]]}}}],["不会",{"_index":492,"t":{"102":{"position":[[129,2]]},"104":{"position":[[257,2]]},"113":{"position":[[90,2]]},"286":{"position":[[327,2],[372,2]]},"310":{"position":[[66,2]]},"355":{"position":[[120,2]]},"360":{"position":[[265,2]]},"382":{"position":[[13,2]]},"621":{"position":[[90,2]]},"797":{"position":[[66,2]]},"811":{"position":[[327,2],[372,2]]},"832":{"position":[[120,2]]},"837":{"position":[[265,2]]},"867":{"position":[[13,2]]}}}],["不免",{"_index":308,"t":{"21":{"position":[[53,2]]}}}],["不再",{"_index":883,"t":{"220":{"position":[[1201,2]]},"681":{"position":[[1201,2]]},"1103":{"position":[[63,2]]},"1120":{"position":[[63,2]]}}}],["不到",{"_index":1409,"t":{"957":{"position":[[7,2]]}}}],["不变",{"_index":1129,"t":{"365":{"position":[[493,2]]},"367":{"position":[[481,2]]},"842":{"position":[[493,2]]},"844":{"position":[[481,2]]}}}],["不同",{"_index":370,"t":{"23":{"position":[[129,2]]},"307":{"position":[[1300,2],[1319,2]]},"316":{"position":[[422,2]]},"342":{"position":[[66,2]]},"593":{"position":[[17,2],[26,2]]},"789":{"position":[[66,2]]},"794":{"position":[[1300,2],[1319,2]]},"803":{"position":[[422,2]]},"1233":{"position":[[77,2]]}}}],["不好",{"_index":947,"t":{"295":{"position":[[3,2]]},"396":{"position":[[3,2]]},"820":{"position":[[3,2]]},"881":{"position":[[3,2]]}}}],["不如",{"_index":1463,"t":{"1017":{"position":[[39,2]]}}}],["不宜",{"_index":1431,"t":{"970":{"position":[[79,2]]}}}],["不必要",{"_index":951,"t":{"302":{"position":[[0,3]]},"350":{"position":[[209,3]]},"401":{"position":[[28,3]]},"827":{"position":[[0,3]]},"859":{"position":[[209,3]]},"886":{"position":[[28,3]]}}}],["不断",{"_index":209,"t":{"19":{"position":[[257,2]]}}}],["不易",{"_index":1241,"t":{"472":{"position":[[25,2]]},"954":{"position":[[25,2]]}}}],["不是",{"_index":841,"t":{"202":{"position":[[13,2]]},"286":{"position":[[64,2],[84,2],[105,2]]},"295":{"position":[[90,2]]},"304":{"position":[[76,2]]},"348":{"position":[[151,2]]},"350":{"position":[[18,2]]},"552":{"position":[[21,2]]},"707":{"position":[[13,2]]},"811":{"position":[[64,2],[84,2],[105,2]]},"820":{"position":[[90,2]]},"829":{"position":[[76,2]]},"857":{"position":[[151,2]]},"859":{"position":[[18,2]]},"966":{"position":[[27,2]]},"1083":{"position":[[4,2]]},"1088":{"position":[[4,2]]},"1167":{"position":[[61,2]]},"1187":{"position":[[289,2]]}}}],["不管不顾",{"_index":1647,"t":{"1195":{"position":[[32,4]]}}}],["不能",{"_index":1119,"t":{"360":{"position":[[347,2]]},"365":{"position":[[460,2]]},"837":{"position":[[347,2]]},"842":{"position":[[460,2]]},"1013":{"position":[[12,2]]},"1021":{"position":[[21,2]]},"1023":{"position":[[85,2]]},"1070":{"position":[[560,2],[589,2]]},"1165":{"position":[[70,2],[229,2]]}}}],["不要",{"_index":934,"t":{"283":{"position":[[31,2]]},"350":{"position":[[251,2]]},"439":{"position":[[66,2]]},"808":{"position":[[31,2]]},"859":{"position":[[251,2]]},"924":{"position":[[66,2]]}}}],["不足",{"_index":22,"t":{"13":{"position":[[30,2]]},"1008":{"position":[[486,2]]}}}],["不过",{"_index":322,"t":{"21":{"position":[[112,2]]}}}],["不适",{"_index":1530,"t":{"1103":{"position":[[109,2]]},"1120":{"position":[[109,2]]}}}],["专业",{"_index":20,"t":{"13":{"position":[[24,2]]}}}],["专属",{"_index":723,"t":{"172":{"position":[[18,2]]},"657":{"position":[[18,2]]}}}],["专注",{"_index":931,"t":{"281":{"position":[[169,2]]},"283":{"position":[[2,2]]},"304":{"position":[[7,2]]},"392":{"position":[[5,2]]},"403":{"position":[[28,2]]},"806":{"position":[[169,2]]},"808":{"position":[[2,2]]},"829":{"position":[[7,2]]},"877":{"position":[[5,2]]},"888":{"position":[[28,2]]}}}],["专门",{"_index":1013,"t":{"316":{"position":[[95,2]]},"803":{"position":[[95,2]]},"1081":{"position":[[38,2]]},"1086":{"position":[[38,2]]}}}],["业务",{"_index":762,"t":{"184":{"position":[[69,2],[590,2],[1112,2],[1387,2]]},"329":{"position":[[326,2]]},"689":{"position":[[69,2],[590,2],[1112,2],[1387,2]]},"776":{"position":[[326,2]]},"1028":{"position":[[116,2]]}}}],["东西",{"_index":1135,"t":{"370":{"position":[[105,2],[268,2]]},"847":{"position":[[105,2],[268,2]]}}}],["丢弃",{"_index":665,"t":{"137":{"position":[[422,2]]},"602":{"position":[[422,2]]},"1154":{"position":[[820,2]]}}}],["两个",{"_index":1536,"t":{"1127":{"position":[[16,2]]}}}],["两次",{"_index":477,"t":{"97":{"position":[[108,2]]},"102":{"position":[[125,2]]}}}],["两百年",{"_index":198,"t":{"19":{"position":[[224,3]]}}}],["两种",{"_index":1420,"t":{"960":{"position":[[14,2]]}}}],["两者",{"_index":249,"t":{"19":{"position":[[442,2]]},"319":{"position":[[102,2]]},"348":{"position":[[378,2]]},"766":{"position":[[102,2]]},"857":{"position":[[378,2]]}}}],["两者之间",{"_index":73,"t":{"15":{"position":[[144,4],[213,4]]}}}],["严格",{"_index":657,"t":{"135":{"position":[[95,2]]},"600":{"position":[[95,2]]},"1189":{"position":[[236,2]]}}}],["严重",{"_index":181,"t":{"19":{"position":[[171,2]]}}}],["个人",{"_index":47,"t":{"15":{"position":[[65,2]]},"19":{"position":[[571,2]]}}}],["个体",{"_index":353,"t":{"23":{"position":[[69,2],[245,2]]}}}],["中",{"_index":94,"t":{"15":{"position":[[206,1]]},"17":{"position":[[38,1]]},"19":{"position":[[316,1]]},"23":{"position":[[48,1],[262,1]]},"34":{"position":[[10,1]]},"64":{"position":[[4,1]]},"71":{"position":[[4,1]]},"85":{"position":[[5,1]]},"92":{"position":[[11,1]]},"128":{"position":[[69,1]]},"131":{"position":[[92,1]]},"133":{"position":[[84,1]]},"180":{"position":[[8,1]]},"192":{"position":[[55,1]]},"194":{"position":[[51,1]]},"196":{"position":[[44,1]]},"202":{"position":[[80,1]]},"240":{"position":[[893,1]]},"260":{"position":[[45,1]]},"274":{"position":[[74,1]]},"281":{"position":[[53,1],[139,1]]},"319":{"position":[[52,1],[137,1]]},"342":{"position":[[71,1]]},"344":{"position":[[21,1]]},"350":{"position":[[165,1]]},"352":{"position":[[9,1]]},"355":{"position":[[51,1],[99,1],[140,1]]},"376":{"position":[[21,1]]},"379":{"position":[[53,1],[137,1]]},"382":{"position":[[91,1]]},"387":{"position":[[551,1]]},"403":{"position":[[22,1]]},"406":{"position":[[41,1],[109,1]]},"439":{"position":[[20,1]]},"445":{"position":[[55,1]]},"516":{"position":[[197,1]]},"519":{"position":[[18,1]]},"546":{"position":[[15,1]]},"548":{"position":[[9,1]]},"566":{"position":[[30,1]]},"570":{"position":[[347,1]]},"578":{"position":[[22,1]]},"593":{"position":[[93,1],[147,1]]},"596":{"position":[[92,1]]},"598":{"position":[[84,1]]},"636":{"position":[[69,1]]},"685":{"position":[[8,1]]},"697":{"position":[[55,1]]},"699":{"position":[[51,1]]},"701":{"position":[[44,1]]},"707":{"position":[[80,1]]},"715":{"position":[[893,1]]},"745":{"position":[[45,1]]},"759":{"position":[[74,1]]},"766":{"position":[[52,1],[137,1]]},"789":{"position":[[71,1]]},"791":{"position":[[21,1]]},"806":{"position":[[53,1],[139,1]]},"832":{"position":[[51,1],[99,1],[140,1]]},"853":{"position":[[21,1]]},"859":{"position":[[165,1]]},"861":{"position":[[9,1]]},"864":{"position":[[53,1],[137,1]]},"867":{"position":[[91,1]]},"872":{"position":[[551,1]]},"888":{"position":[[22,1]]},"891":{"position":[[41,1],[109,1]]},"924":{"position":[[20,1]]},"927":{"position":[[55,1]]},"960":{"position":[[5,1]]},"964":{"position":[[38,1],[56,1]]},"966":{"position":[[5,1]]},"968":{"position":[[18,1]]},"974":{"position":[[5,1]]},"1028":{"position":[[9,1],[120,1]]},"1035":{"position":[[92,1]]},"1059":{"position":[[91,1]]},"1061":{"position":[[1040,1],[1067,1],[1922,1]]},"1064":{"position":[[17,1]]},"1070":{"position":[[533,1],[571,1]]},"1074":{"position":[[239,1]]},"1078":{"position":[[30,1]]},"1125":{"position":[[9,1]]},"1127":{"position":[[11,1]]},"1147":{"position":[[149,1]]},"1152":{"position":[[62,1]]},"1154":{"position":[[80,1],[389,1],[461,1],[522,1],[608,1],[1082,1],[1120,1]]},"1161":{"position":[[31,1]]},"1165":{"position":[[246,1]]},"1167":{"position":[[30,1]]},"1175":{"position":[[17,1]]},"1180":{"position":[[8,1]]},"1187":{"position":[[261,1]]},"1191":{"position":[[26,1]]},"1206":{"position":[[84,1]]},"1233":{"position":[[29,1]]},"1235":{"position":[[28,1]]},"1239":{"position":[[28,1],[71,1],[143,1]]},"1250":{"position":[[7,1]]}}}],["中常",{"_index":1440,"t":{"978":{"position":[[10,2]]}}}],["中断",{"_index":1656,"t":{"1203":{"position":[[373,2]]}}}],["中间",{"_index":1500,"t":{"1061":{"position":[[1744,2]]}}}],["中间件",{"_index":794,"t":{"186":{"position":[[50,3]]},"300":{"position":[[141,3]]},"425":{"position":[[81,3],[90,3]]},"439":{"position":[[44,3]]},"691":{"position":[[50,3]]},"825":{"position":[[141,3]]},"910":{"position":[[81,3],[90,3]]},"924":{"position":[[44,3]]},"1178":{"position":[[543,3]]},"1180":{"position":[[169,3]]}}}],["丰富",{"_index":1455,"t":{"1005":{"position":[[32,2]]},"1078":{"position":[[13,2]]},"1081":{"position":[[85,2]]},"1086":{"position":[[85,2]]}}}],["串行化",{"_index":828,"t":{"198":{"position":[[1927,3]]},"703":{"position":[[1927,3]]}}}],["为了",{"_index":77,"t":{"15":{"position":[[155,2]]},"1154":{"position":[[314,2]]}}}],["为啥",{"_index":997,"t":{"314":{"position":[[3,2]]},"801":{"position":[[3,2]]}}}],["主",{"_index":781,"t":{"184":{"position":[[951,1],[1629,1]]},"589":{"position":[[228,1]]},"689":{"position":[[951,1],[1629,1]]}}}],["主动",{"_index":1005,"t":{"314":{"position":[[115,2]]},"801":{"position":[[115,2]]}}}],["主机",{"_index":1604,"t":{"1170":{"position":[[49,2]]},"1191":{"position":[[151,2]]}}}],["主线",{"_index":995,"t":{"312":{"position":[[416,2],[510,2]]},"554":{"position":[[380,2]]},"560":{"position":[[528,2]]},"574":{"position":[[380,2],[399,2]]},"799":{"position":[[416,2],[510,2]]}}}],["主要",{"_index":1040,"t":{"319":{"position":[[143,2]]},"344":{"position":[[22,2]]},"346":{"position":[[49,2]]},"376":{"position":[[22,2]]},"379":{"position":[[143,2]]},"406":{"position":[[115,2]]},"439":{"position":[[21,2]]},"548":{"position":[[29,2]]},"550":{"position":[[37,2]]},"576":{"position":[[146,2]]},"578":{"position":[[59,2]]},"766":{"position":[[143,2]]},"791":{"position":[[22,2]]},"853":{"position":[[22,2]]},"855":{"position":[[49,2]]},"864":{"position":[[143,2]]},"891":{"position":[[115,2]]},"924":{"position":[[21,2]]},"1127":{"position":[[13,2]]}}}],["主题",{"_index":1237,"t":{"470":{"position":[[37,2]]},"952":{"position":[[37,2]]}}}],["举例",{"_index":983,"t":{"310":{"position":[[233,2]]},"797":{"position":[[233,2]]}}}],["之一",{"_index":260,"t":{"19":{"position":[[484,2]]},"966":{"position":[[22,2]]}}}],["之上",{"_index":196,"t":{"19":{"position":[[219,2]]}}}],["之前",{"_index":443,"t":{"64":{"position":[[18,2]]},"151":{"position":[[5,2]]},"192":{"position":[[47,2]]},"482":{"position":[[190,2]]},"616":{"position":[[5,2]]},"697":{"position":[[47,2]]}}}],["之后",{"_index":1672,"t":{"1218":{"position":[[84,2]]},"1233":{"position":[[192,2]]}}}],["之间",{"_index":695,"t":{"145":{"position":[[35,2]]},"350":{"position":[[109,2]]},"389":{"position":[[764,2]]},"519":{"position":[[46,2]]},"548":{"position":[[24,2]]},"550":{"position":[[32,2]]},"576":{"position":[[160,2]]},"610":{"position":[[35,2]]},"859":{"position":[[109,2]]},"874":{"position":[[764,2]]}}}],["书",{"_index":333,"t":{"23":{"position":[[2,1]]}}}],["了解",{"_index":1092,"t":{"350":{"position":[[93,2]]},"859":{"position":[[93,2]]}}}],["事",{"_index":960,"t":{"304":{"position":[[114,1]]},"382":{"position":[[44,1]]},"829":{"position":[[114,1]]},"867":{"position":[[44,1]]},"968":{"position":[[464,1]]}}}],["事件",{"_index":574,"t":{"118":{"position":[[297,2],[336,2],[1190,2],[1273,2]]},"120":{"position":[[755,2]]},"122":{"position":[[344,2]]},"126":{"position":[[76,2]]},"158":{"position":[[137,2],[179,2],[266,2]]},"162":{"position":[[50,2]]},"174":{"position":[[0,2],[50,2]]},"176":{"position":[[150,2]]},"208":{"position":[[95,2],[205,2],[569,2],[586,2],[605,2]]},"210":{"position":[[188,2]]},"220":{"position":[[1218,2],[1237,2]]},"564":{"position":[[39,2],[439,2]]},"576":{"position":[[82,2]]},"626":{"position":[[297,2],[336,2],[1190,2],[1273,2]]},"628":{"position":[[755,2]]},"630":{"position":[[344,2]]},"634":{"position":[[76,2]]},"643":{"position":[[137,2],[179,2],[266,2]]},"647":{"position":[[50,2]]},"659":{"position":[[0,2],[50,2]]},"661":{"position":[[150,2]]},"669":{"position":[[95,2],[205,2],[569,2],[586,2],[605,2]]},"671":{"position":[[188,2]]},"681":{"position":[[1218,2],[1237,2]]},"1239":{"position":[[16,2],[30,2],[146,2]]}}}],["事务管理",{"_index":1018,"t":{"316":{"position":[[155,4],[305,4]]},"803":{"position":[[155,4],[305,4]]}}}],["事情",{"_index":1172,"t":{"396":{"position":[[14,2]]},"881":{"position":[[14,2]]}}}],["二者",{"_index":1357,"t":{"576":{"position":[[237,2]]}}}],["二进制",{"_index":1491,"t":{"1049":{"position":[[54,3]]},"1163":{"position":[[37,3]]},"1250":{"position":[[74,3]]}}}],["云",{"_index":1145,"t":{"374":{"position":[[51,1]]},"851":{"position":[[51,1]]}}}],["互不",{"_index":593,"t":{"128":{"position":[[71,2]]},"636":{"position":[[71,2]]}}}],["互斥",{"_index":1308,"t":{"524":{"position":[[48,2]]}}}],["互相",{"_index":1143,"t":{"374":{"position":[[30,2],[55,2],[79,2],[105,2]]},"851":{"position":[[30,2],[55,2],[79,2],[105,2]]}}}],["交互",{"_index":533,"t":{"110":{"position":[[70,2]]},"184":{"position":[[13,2],[198,2]]},"190":{"position":[[5,2]]},"316":{"position":[[409,2]]},"493":{"position":[[39,2]]},"548":{"position":[[27,2]]},"618":{"position":[[70,2]]},"689":{"position":[[13,2],[198,2]]},"695":{"position":[[5,2]]},"803":{"position":[[409,2]]},"1154":{"position":[[404,2],[657,2],[750,2],[880,2]]}}}],["交互式",{"_index":1556,"t":{"1147":{"position":[[174,3]]},"1150":{"position":[[64,3]]},"1154":{"position":[[967,3],[1063,3]]}}}],["产品",{"_index":1228,"t":{"462":{"position":[[29,2]]},"464":{"position":[[6,2],[25,2]]},"468":{"position":[[19,2]]},"472":{"position":[[55,2]]},"944":{"position":[[29,2]]},"946":{"position":[[6,2],[25,2]]},"950":{"position":[[19,2]]},"954":{"position":[[55,2]]}}}],["产物",{"_index":113,"t":{"17":{"position":[[29,2]]}}}],["产生",{"_index":204,"t":{"19":{"position":[[242,2],[332,2]]},"131":{"position":[[111,2]]},"133":{"position":[[106,2]]},"137":{"position":[[278,2]]},"596":{"position":[[111,2]]},"598":{"position":[[106,2]]},"602":{"position":[[278,2]]}}}],["享有",{"_index":87,"t":{"15":{"position":[[182,2]]}}}],["亮点",{"_index":989,"t":{"312":{"position":[[4,2]]},"799":{"position":[[4,2]]}}}],["人人",{"_index":85,"t":{"15":{"position":[[179,2]]}}}],["人们",{"_index":192,"t":{"19":{"position":[[207,2],[565,2]]}}}],["人性",{"_index":186,"t":{"19":{"position":[[186,2]]}}}],["人生",{"_index":316,"t":{"21":{"position":[[92,2]]}}}],["人类",{"_index":11,"t":{"13":{"position":[[1,2],[39,2]]},"17":{"position":[[34,2],[58,2],[90,2]]},"19":{"position":[[92,2]]},"23":{"position":[[207,2]]}}}],["仅",{"_index":431,"t":{"52":{"position":[[6,1]]},"99":{"position":[[204,1]]},"433":{"position":[[229,1]]},"516":{"position":[[87,1]]},"593":{"position":[[74,1]]},"918":{"position":[[229,1]]},"1070":{"position":[[158,1],[173,1],[446,1],[470,1]]}}}],["仅限",{"_index":1527,"t":{"1101":{"position":[[66,2]]},"1118":{"position":[[66,2]]},"1170":{"position":[[45,2]]},"1191":{"position":[[180,2]]}}}],["仅限于",{"_index":384,"t":{"23":{"position":[[186,3]]}}}],["介绍",{"_index":1365,"t":{"578":{"position":[[56,2]]},"1028":{"position":[[160,2]]}}}],["仍然",{"_index":986,"t":{"310":{"position":[[632,2]]},"797":{"position":[[632,2]]}}}],["从而",{"_index":66,"t":{"15":{"position":[[117,2]]},"29":{"position":[[23,2]]},"316":{"position":[[65,2]]},"445":{"position":[[34,2]]},"803":{"position":[[65,2]]},"927":{"position":[[34,2]]}}}],["他人",{"_index":373,"t":{"23":{"position":[[141,2]]}}}],["他们",{"_index":141,"t":{"19":{"position":[[21,2]]},"23":{"position":[[96,2],[108,2],[125,2],[135,2]]}}}],["付出",{"_index":399,"t":{"23":{"position":[[257,2]]}}}],["代价",{"_index":557,"t":{"113":{"position":[[132,2]]},"621":{"position":[[132,2]]}}}],["代替",{"_index":566,"t":{"118":{"position":[[89,2]]},"208":{"position":[[452,2]]},"228":{"position":[[70,2]]},"568":{"position":[[34,2]]},"626":{"position":[[89,2]]},"669":{"position":[[452,2]]},"737":{"position":[[70,2]]}}}],["代理",{"_index":1205,"t":{"442":{"position":[[91,2],[458,2],[466,2],[480,2]]},"972":{"position":[[215,2]]},"1191":{"position":[[58,2]]}}}],["代码",{"_index":600,"t":{"128":{"position":[[134,2]]},"151":{"position":[[7,2]]},"164":{"position":[[180,2]]},"166":{"position":[[76,2]]},"178":{"position":[[299,2]]},"180":{"position":[[44,2]]},"182":{"position":[[19,2]]},"184":{"position":[[1776,2]]},"186":{"position":[[14,2]]},"192":{"position":[[53,2]]},"202":{"position":[[45,2]]},"214":{"position":[[496,2]]},"222":{"position":[[486,2]]},"232":{"position":[[595,2]]},"244":{"position":[[1411,2]]},"256":{"position":[[1001,2]]},"278":{"position":[[997,2]]},"302":{"position":[[27,2]]},"342":{"position":[[53,2]]},"344":{"position":[[101,2]]},"348":{"position":[[157,2]]},"350":{"position":[[148,2]]},"384":{"position":[[0,2]]},"403":{"position":[[13,2]]},"408":{"position":[[14,2],[34,2]]},"435":{"position":[[25,2]]},"439":{"position":[[107,2],[115,2]]},"445":{"position":[[38,2]]},"459":{"position":[[17,2],[30,2]]},"516":{"position":[[195,2]]},"552":{"position":[[53,2]]},"556":{"position":[[562,2]]},"616":{"position":[[7,2]]},"636":{"position":[[134,2]]},"649":{"position":[[180,2]]},"651":{"position":[[76,2]]},"663":{"position":[[299,2]]},"675":{"position":[[496,2]]},"683":{"position":[[486,2]]},"685":{"position":[[44,2]]},"687":{"position":[[19,2]]},"689":{"position":[[1776,2]]},"691":{"position":[[14,2]]},"697":{"position":[[53,2]]},"707":{"position":[[45,2]]},"719":{"position":[[1411,2]]},"731":{"position":[[1001,2]]},"741":{"position":[[595,2]]},"763":{"position":[[997,2]]},"789":{"position":[[53,2]]},"791":{"position":[[101,2]]},"827":{"position":[[27,2]]},"857":{"position":[[157,2]]},"859":{"position":[[148,2]]},"869":{"position":[[0,2]]},"888":{"position":[[13,2]]},"893":{"position":[[14,2],[34,2]]},"920":{"position":[[25,2]]},"924":{"position":[[107,2],[115,2]]},"927":{"position":[[38,2]]},"941":{"position":[[17,2],[30,2]]},"1013":{"position":[[45,2]]},"1021":{"position":[[47,2]]},"1023":{"position":[[190,2]]},"1105":{"position":[[12,2]]},"1122":{"position":[[12,2]]},"1140":{"position":[[0,2]]},"1193":{"position":[[189,2]]},"1226":{"position":[[25,2]]},"1248":{"position":[[16,2]]}}}],["代码生成",{"_index":1490,"t":{"1049":{"position":[[37,4]]}}}],["代表",{"_index":686,"t":{"143":{"position":[[45,2]]},"495":{"position":[[19,2]]},"608":{"position":[[45,2]]},"1131":{"position":[[178,2],[255,2]]}}}],["令人",{"_index":309,"t":{"21":{"position":[[55,2]]}}}],["令牌",{"_index":601,"t":{"131":{"position":[[13,2],[114,2],[122,2]]},"133":{"position":[[11,2],[37,2],[41,2],[65,2],[72,2],[89,2],[97,2],[108,2],[132,2],[155,2],[162,2]]},"137":{"position":[[280,2],[425,2]]},"141":{"position":[[69,2]]},"143":{"position":[[23,2]]},"145":{"position":[[41,2]]},"151":{"position":[[196,2],[265,2],[1177,2]]},"596":{"position":[[13,2],[114,2],[122,2]]},"598":{"position":[[11,2],[37,2],[41,2],[65,2],[72,2],[89,2],[97,2],[108,2],[132,2],[155,2],[162,2]]},"602":{"position":[[280,2],[425,2]]},"606":{"position":[[69,2]]},"608":{"position":[[23,2]]},"610":{"position":[[41,2]]},"616":{"position":[[196,2],[265,2],[1177,2]]}}}],["以上",{"_index":1547,"t":{"1140":{"position":[[32,2]]}}}],["以下",{"_index":754,"t":{"182":{"position":[[0,2]]},"346":{"position":[[46,2]]},"548":{"position":[[33,2]]},"687":{"position":[[0,2]]},"855":{"position":[[46,2]]},"966":{"position":[[40,2]]}}}],["以及",{"_index":1564,"t":{"1154":{"position":[[437,2]]}}}],["价值",{"_index":180,"t":{"19":{"position":[[168,2]]}}}],["价值观",{"_index":72,"t":{"15":{"position":[[139,3]]}}}],["价格",{"_index":176,"t":{"19":{"position":[[161,2]]}}}],["任何",{"_index":1052,"t":{"333":{"position":[[125,2]]},"355":{"position":[[127,2]]},"780":{"position":[[125,2]]},"832":{"position":[[127,2]]},"1070":{"position":[[573,2]]}}}],["任务",{"_index":1288,"t":{"516":{"position":[[213,2]]},"554":{"position":[[102,2],[212,2]]},"558":{"position":[[0,2],[29,2],[44,2]]},"560":{"position":[[409,2],[429,2]]},"572":{"position":[[47,2]]},"574":{"position":[[136,2]]},"576":{"position":[[141,2]]},"968":{"position":[[12,2],[36,2]]},"1203":{"position":[[632,2],[778,2]]}}}],["任意",{"_index":1436,"t":{"974":{"position":[[25,2]]}}}],["仿佛",{"_index":229,"t":{"19":{"position":[[335,2]]}}}],["企鹅",{"_index":1115,"t":{"360":{"position":[[263,2],[326,2]]},"362":{"position":[[271,2],[338,2]]},"837":{"position":[[263,2],[326,2]]},"839":{"position":[[271,2],[338,2]]}}}],["优",{"_index":701,"t":{"149":{"position":[[32,1]]},"151":{"position":[[1488,1],[1591,1]]},"614":{"position":[[32,1]]},"616":{"position":[[1488,1],[1591,1]]}}}],["优于",{"_index":1083,"t":{"350":{"position":[[2,2]]},"403":{"position":[[46,2]]},"859":{"position":[[2,2]]},"888":{"position":[[46,2]]}}}],["优先",{"_index":707,"t":{"151":{"position":[[532,2]]},"350":{"position":[[9,2]]},"542":{"position":[[161,2]]},"544":{"position":[[112,2]]},"576":{"position":[[309,2]]},"616":{"position":[[532,2]]},"859":{"position":[[9,2]]}}}],["优先权",{"_index":692,"t":{"143":{"position":[[79,3]]},"608":{"position":[[79,3]]}}}],["优先级",{"_index":684,"t":{"143":{"position":[[5,3],[49,3]]},"145":{"position":[[1,3]]},"149":{"position":[[1,3],[44,3]]},"151":{"position":[[1170,3],[1343,3]]},"608":{"position":[[5,3],[49,3]]},"610":{"position":[[1,3]]},"614":{"position":[[1,3],[44,3]]},"616":{"position":[[1170,3],[1343,3]]}}}],["优势",{"_index":1465,"t":{"1023":{"position":[[7,2]]},"1170":{"position":[[100,2]]}}}],["优化",{"_index":839,"t":{"198":{"position":[[2036,2],[7613,2]]},"217":{"position":[[14,2]]},"270":{"position":[[151,2]]},"576":{"position":[[367,2]]},"678":{"position":[[14,2]]},"703":{"position":[[2036,2],[7613,2]]},"755":{"position":[[151,2]]},"1187":{"position":[[220,2]]},"1210":{"position":[[14,2]]},"1248":{"position":[[7,2]]}}}],["优点",{"_index":669,"t":{"141":{"position":[[2,2]]},"184":{"position":[[65,2]]},"606":{"position":[[2,2]]},"689":{"position":[[65,2]]},"1008":{"position":[[420,2]]},"1013":{"position":[[0,2]]},"1017":{"position":[[0,2]]},"1021":{"position":[[0,2]]}}}],["优缺点",{"_index":1457,"t":{"1008":{"position":[[414,3]]}}}],["优越",{"_index":133,"t":{"17":{"position":[[115,2]]}}}],["优雅",{"_index":836,"t":{"198":{"position":[[2021,2]]},"312":{"position":[[1116,2]]},"314":{"position":[[1458,2]]},"316":{"position":[[2428,2]]},"439":{"position":[[56,2]]},"703":{"position":[[2021,2]]},"799":{"position":[[1116,2]]},"801":{"position":[[1458,2]]},"803":{"position":[[2428,2]]},"924":{"position":[[56,2]]},"1173":{"position":[[826,2]]},"1178":{"position":[[1004,2]]}}}],["会",{"_index":90,"t":{"15":{"position":[[194,1]]},"19":{"position":[[58,1],[256,1],[298,1]]},"21":{"position":[[136,1]]},"94":{"position":[[36,1],[79,1]]},"102":{"position":[[146,1]]},"104":{"position":[[177,1]]},"108":{"position":[[29,1],[63,1]]},"151":{"position":[[1168,1]]},"286":{"position":[[71,1],[91,1],[112,1],[366,1]]},"302":{"position":[[34,1]]},"310":{"position":[[31,1]]},"314":{"position":[[1894,1]]},"362":{"position":[[93,1]]},"376":{"position":[[79,1]]},"399":{"position":[[22,1]]},"401":{"position":[[25,1]]},"437":{"position":[[637,1]]},"480":{"position":[[503,1]]},"540":{"position":[[20,1],[34,1]]},"542":{"position":[[142,1]]},"556":{"position":[[604,1]]},"574":{"position":[[437,1]]},"580":{"position":[[56,1],[171,1]]},"616":{"position":[[1168,1]]},"797":{"position":[[31,1]]},"801":{"position":[[1894,1]]},"811":{"position":[[71,1],[91,1],[112,1],[366,1]]},"827":{"position":[[34,1]]},"839":{"position":[[93,1]]},"853":{"position":[[79,1]]},"884":{"position":[[22,1]]},"886":{"position":[[25,1]]},"922":{"position":[[637,1]]},"1147":{"position":[[169,1]]},"1154":{"position":[[374,1]]},"1165":{"position":[[202,1]]},"1201":{"position":[[543,1]]},"1218":{"position":[[56,1],[77,1]]},"1230":{"position":[[395,1]]},"1233":{"position":[[352,1],[375,1]]}}}],["伟大",{"_index":357,"t":{"23":{"position":[[77,2],[154,2],[182,2],[232,2],[238,2]]}}}],["传",{"_index":1673,"t":{"1220":{"position":[[8,1]]}}}],["传播",{"_index":126,"t":{"17":{"position":[[73,2]]}}}],["传统",{"_index":555,"t":{"113":{"position":[[118,2]]},"621":{"position":[[118,2]]}}}],["传统意义",{"_index":1106,"t":{"355":{"position":[[146,4]]},"832":{"position":[[146,4]]}}}],["传输",{"_index":1474,"t":{"1028":{"position":[[60,2]]},"1191":{"position":[[171,2]]}}}],["传递",{"_index":1285,"t":{"516":{"position":[[139,2]]},"536":{"position":[[17,2],[55,2]]},"576":{"position":[[21,2]]},"968":{"position":[[187,2],[384,2]]},"970":{"position":[[2,2]]},"978":{"position":[[16,2]]},"1131":{"position":[[133,2]]},"1218":{"position":[[66,2]]}}}],["伪",{"_index":1578,"t":{"1154":{"position":[[900,1]]}}}],["似乎",{"_index":264,"t":{"19":{"position":[[499,2]]}}}],["但是",{"_index":1410,"t":{"957":{"position":[[12,2]]},"1201":{"position":[[18,2]]}}}],["位置",{"_index":869,"t":{"210":{"position":[[22,2]]},"671":{"position":[[22,2]]},"1224":{"position":[[180,2]]},"1226":{"position":[[14,2]]},"1239":{"position":[[35,2]]}}}],["低",{"_index":568,"t":{"118":{"position":[[101,1]]},"145":{"position":[[21,1]]},"149":{"position":[[31,1]]},"151":{"position":[[1590,1]]},"208":{"position":[[464,1]]},"228":{"position":[[82,1]]},"302":{"position":[[59,1]]},"486":{"position":[[10,1],[479,1]]},"610":{"position":[[21,1]]},"614":{"position":[[31,1]]},"616":{"position":[[1590,1]]},"626":{"position":[[101,1]]},"669":{"position":[[464,1]]},"737":{"position":[[82,1]]},"827":{"position":[[59,1]]},"1008":{"position":[[456,1]]}}}],["低优先级",{"_index":694,"t":{"145":{"position":[[15,4]]},"610":{"position":[[15,4]]}}}],["低层",{"_index":1038,"t":{"319":{"position":[[97,2]]},"324":{"position":[[11,2]]},"326":{"position":[[65,2]]},"344":{"position":[[47,2],[142,2]]},"348":{"position":[[373,2]]},"766":{"position":[[97,2]]},"771":{"position":[[11,2]]},"773":{"position":[[65,2]]},"791":{"position":[[47,2],[142,2]]},"857":{"position":[[373,2]]}}}],["低级",{"_index":1529,"t":{"1103":{"position":[[11,2]]},"1120":{"position":[[11,2]]}}}],["体",{"_index":789,"t":{"184":{"position":[[1770,1]]},"307":{"position":[[1314,1]]},"312":{"position":[[187,1]]},"314":{"position":[[275,1],[377,1]]},"316":{"position":[[455,1]]},"329":{"position":[[4,1]]},"382":{"position":[[36,1]]},"387":{"position":[[550,1]]},"399":{"position":[[5,1],[38,1]]},"403":{"position":[[33,1],[90,1]]},"689":{"position":[[1770,1]]},"776":{"position":[[4,1]]},"794":{"position":[[1314,1]]},"799":{"position":[[187,1]]},"801":{"position":[[275,1],[377,1]]},"803":{"position":[[455,1]]},"867":{"position":[[36,1]]},"872":{"position":[[550,1]]},"884":{"position":[[5,1],[38,1]]},"888":{"position":[[33,1],[90,1]]},"964":{"position":[[37,1]]},"1061":{"position":[[947,1],[1122,1]]},"1064":{"position":[[34,1]]},"1074":{"position":[[238,1]]},"1125":{"position":[[119,1],[218,1],[238,1]]},"1136":{"position":[[2,1]]}}}],["体系",{"_index":118,"t":{"17":{"position":[[47,2]]}}}],["作为",{"_index":544,"t":{"113":{"position":[[58,2]]},"550":{"position":[[19,2]]},"621":{"position":[[58,2]]},"1142":{"position":[[44,2]]}}}],["作用",{"_index":1701,"t":{"1239":{"position":[[66,2],[95,2],[135,2]]}}}],["使得",{"_index":1015,"t":{"316":{"position":[[123,2]]},"803":{"position":[[123,2]]},"1125":{"position":[[60,2]]},"1145":{"position":[[64,2]]}}}],["使用",{"_index":409,"t":{"29":{"position":[[2,2]]},"48":{"position":[[8,2]]},"106":{"position":[[5,2],[15,2]]},"108":{"position":[[121,2]]},"115":{"position":[[97,2]]},"118":{"position":[[83,2]]},"126":{"position":[[0,2]]},"141":{"position":[[59,2]]},"151":{"position":[[1447,2]]},"184":{"position":[[27,2],[1231,2]]},"190":{"position":[[37,2]]},"198":{"position":[[7607,2]]},"208":{"position":[[49,2],[296,2],[446,2]]},"220":{"position":[[85,2]]},"228":{"position":[[64,2],[329,2],[334,2]]},"240":{"position":[[894,2]]},"250":{"position":[[253,2]]},"270":{"position":[[190,2],[199,2]]},"274":{"position":[[79,2]]},"281":{"position":[[102,2]]},"283":{"position":[[60,2]]},"304":{"position":[[28,2],[53,2]]},"307":{"position":[[0,2],[984,2]]},"321":{"position":[[35,2]]},"340":{"position":[[7,2],[393,2]]},"342":{"position":[[72,2]]},"344":{"position":[[58,2],[78,2]]},"348":{"position":[[297,2]]},"350":{"position":[[11,2]]},"352":{"position":[[11,2],[41,2]]},"370":{"position":[[203,2]]},"411":{"position":[[195,2],[338,2]]},"413":{"position":[[120,2],[155,2]]},"416":{"position":[[208,2],[260,2]]},"418":{"position":[[3,2]]},"437":{"position":[[225,2]]},"439":{"position":[[23,2]]},"442":{"position":[[227,2],[354,2]]},"445":{"position":[[27,2]]},"450":{"position":[[362,2]]},"452":{"position":[[12,2]]},"457":{"position":[[594,2]]},"462":{"position":[[896,2]]},"475":{"position":[[87,2]]},"486":{"position":[[14,2]]},"490":{"position":[[331,2]]},"536":{"position":[[32,2]]},"540":{"position":[[46,2]]},"542":{"position":[[115,2],[151,2]]},"544":{"position":[[114,2],[129,2]]},"546":{"position":[[35,2],[48,2]]},"556":{"position":[[679,2]]},"562":{"position":[[26,2]]},"568":{"position":[[12,2]]},"570":{"position":[[355,2]]},"576":{"position":[[166,2],[213,2],[243,2],[351,2]]},"580":{"position":[[36,2],[108,2],[215,2]]},"593":{"position":[[54,2],[96,2],[207,2]]},"606":{"position":[[59,2]]},"616":{"position":[[1447,2]]},"623":{"position":[[97,2]]},"626":{"position":[[83,2]]},"634":{"position":[[0,2]]},"669":{"position":[[49,2],[296,2],[446,2]]},"681":{"position":[[85,2]]},"689":{"position":[[27,2],[1231,2]]},"695":{"position":[[37,2]]},"703":{"position":[[7607,2]]},"715":{"position":[[894,2]]},"725":{"position":[[253,2]]},"737":{"position":[[64,2],[329,2],[334,2]]},"755":{"position":[[190,2],[199,2]]},"759":{"position":[[79,2]]},"768":{"position":[[35,2]]},"787":{"position":[[7,2],[393,2]]},"789":{"position":[[72,2]]},"791":{"position":[[58,2],[78,2]]},"794":{"position":[[0,2],[984,2]]},"806":{"position":[[102,2]]},"808":{"position":[[60,2]]},"829":{"position":[[28,2],[53,2]]},"847":{"position":[[203,2]]},"857":{"position":[[297,2]]},"859":{"position":[[11,2]]},"861":{"position":[[11,2],[41,2]]},"896":{"position":[[195,2],[338,2]]},"898":{"position":[[120,2],[155,2]]},"901":{"position":[[208,2],[260,2]]},"903":{"position":[[3,2]]},"922":{"position":[[225,2]]},"924":{"position":[[23,2]]},"927":{"position":[[27,2]]},"932":{"position":[[362,2]]},"934":{"position":[[12,2]]},"939":{"position":[[594,2]]},"944":{"position":[[896,2]]},"962":{"position":[[0,2]]},"966":{"position":[[36,2],[43,2]]},"968":{"position":[[222,2],[400,2]]},"988":{"position":[[39,2]]},"1001":{"position":[[2,2],[157,2]]},"1052":{"position":[[82,2]]},"1059":{"position":[[15,2],[26,2],[48,2]]},"1093":{"position":[[6,2]]},"1101":{"position":[[113,2]]},"1103":{"position":[[27,2]]},"1110":{"position":[[6,2]]},"1118":{"position":[[113,2]]},"1120":{"position":[[27,2]]},"1142":{"position":[[8,2],[18,2]]},"1147":{"position":[[0,2]]},"1154":{"position":[[327,2],[993,2],[1061,2]]},"1157":{"position":[[14,2]]},"1159":{"position":[[57,2]]},"1163":{"position":[[18,2]]},"1165":{"position":[[97,2]]},"1167":{"position":[[124,2]]},"1180":{"position":[[9,2]]},"1187":{"position":[[224,2],[262,2],[267,2],[341,2]]},"1189":{"position":[[29,2],[91,2],[182,2],[251,2]]},"1193":{"position":[[37,2],[99,2]]},"1197":{"position":[[186,2]]},"1203":{"position":[[157,2]]},"1208":{"position":[[117,2]]},"1230":{"position":[[320,2]]},"1233":{"position":[[2,2],[59,2]]},"1235":{"position":[[2,2],[57,2]]},"1241":{"position":[[2,2]]},"1243":{"position":[[15,2]]},"1257":{"position":[[11,2]]}}}],["使用率",{"_index":1628,"t":{"1189":{"position":[[329,3]]}}}],["例",{"_index":1355,"t":{"576":{"position":[[104,1]]}}}],["例如",{"_index":999,"t":{"314":{"position":[[35,2]]},"316":{"position":[[2973,2]]},"516":{"position":[[208,2]]},"564":{"position":[[29,2]]},"566":{"position":[[37,2]]},"572":{"position":[[40,2]]},"801":{"position":[[35,2]]},"803":{"position":[[2973,2]]},"1072":{"position":[[10,2]]},"1154":{"position":[[661,2],[790,2],[988,2]]},"1157":{"position":[[35,2]]},"1239":{"position":[[152,2]]}}}],["例子",{"_index":1165,"t":{"387":{"position":[[9,2]]},"396":{"position":[[6,2],[120,2]]},"872":{"position":[[9,2]]},"881":{"position":[[6,2],[120,2]]}}}],["依次",{"_index":494,"t":{"102":{"position":[[147,2]]}}}],["依然",{"_index":1009,"t":{"314":{"position":[[186,2]]},"801":{"position":[[186,2]]}}}],["依赖",{"_index":480,"t":{"99":{"position":[[109,2],[149,2]]},"113":{"position":[[109,2]]},"184":{"position":[[20,2],[54,2],[128,2],[139,2],[157,2],[1391,2]]},"225":{"position":[[4,2]]},"228":{"position":[[4,2],[9,2],[193,2],[322,2]]},"230":{"position":[[4,2]]},"281":{"position":[[97,2]]},"283":{"position":[[54,2]]},"304":{"position":[[23,2]]},"316":{"position":[[395,2]]},"319":{"position":[[0,2],[95,2],[107,2],[117,2],[126,2],[161,2]]},"321":{"position":[[0,2],[29,2],[40,2],[63,2]]},"324":{"position":[[9,2],[194,2],[295,2]]},"326":{"position":[[346,2],[396,2]]},"340":{"position":[[39,2],[177,2]]},"342":{"position":[[9,2],[30,2]]},"344":{"position":[[7,2],[29,2],[73,2],[88,2]]},"348":{"position":[[292,2],[320,2],[371,2],[382,2],[391,2],[399,2]]},"389":{"position":[[768,2]]},"403":{"position":[[51,2]]},"416":{"position":[[73,2]]},"591":{"position":[[196,2]]},"621":{"position":[[109,2]]},"689":{"position":[[20,2],[54,2],[128,2],[139,2],[157,2],[1391,2]]},"734":{"position":[[4,2]]},"737":{"position":[[4,2],[9,2],[193,2],[322,2]]},"739":{"position":[[4,2]]},"766":{"position":[[0,2],[95,2],[107,2],[117,2],[126,2],[161,2]]},"768":{"position":[[0,2],[29,2],[40,2],[63,2]]},"771":{"position":[[9,2],[194,2],[295,2]]},"773":{"position":[[346,2],[396,2]]},"787":{"position":[[39,2],[177,2]]},"789":{"position":[[9,2],[30,2]]},"791":{"position":[[7,2],[29,2],[73,2],[88,2]]},"803":{"position":[[395,2]]},"806":{"position":[[97,2]]},"808":{"position":[[54,2]]},"829":{"position":[[23,2]]},"857":{"position":[[292,2],[320,2],[371,2],[382,2],[391,2],[399,2]]},"874":{"position":[[768,2]]},"888":{"position":[[51,2]]},"901":{"position":[[73,2]]},"1008":{"position":[[448,2]]},"1165":{"position":[[143,2],[276,2]]}}}],["依赖于",{"_index":1561,"t":{"1154":{"position":[[382,3],[512,3],[599,3]]}}}],["便",{"_index":227,"t":{"19":{"position":[[329,1]]}}}],["便于",{"_index":765,"t":{"184":{"position":[[92,2]]},"194":{"position":[[17,2]]},"352":{"position":[[61,2]]},"468":{"position":[[7,2]]},"689":{"position":[[92,2]]},"699":{"position":[[17,2]]},"861":{"position":[[61,2]]},"950":{"position":[[7,2]]}}}],["保存",{"_index":1044,"t":{"324":{"position":[[108,2]]},"326":{"position":[[166,2],[301,2]]},"367":{"position":[[189,2],[424,2]]},"396":{"position":[[95,2]]},"589":{"position":[[136,2]]},"771":{"position":[[108,2]]},"773":{"position":[[166,2],[301,2]]},"844":{"position":[[189,2],[424,2]]},"881":{"position":[[95,2]]},"1264":{"position":[[15,2]]}}}],["保护",{"_index":46,"t":{"15":{"position":[[63,2]]},"118":{"position":[[255,2]]},"131":{"position":[[55,2]]},"562":{"position":[[432,2]]},"576":{"position":[[65,2],[267,2]]},"596":{"position":[[55,2]]},"626":{"position":[[255,2]]}}}],["保持",{"_index":1095,"t":{"350":{"position":[[198,2]]},"352":{"position":[[31,2]]},"365":{"position":[[487,2]]},"367":{"position":[[475,2]]},"376":{"position":[[60,2]]},"408":{"position":[[46,2]]},"842":{"position":[[487,2]]},"844":{"position":[[475,2]]},"853":{"position":[[60,2]]},"859":{"position":[[198,2]]},"861":{"position":[[31,2]]},"893":{"position":[[46,2]]},"1081":{"position":[[92,2]]},"1086":{"position":[[92,2]]}}}],["保留",{"_index":489,"t":{"99":{"position":[[205,2]]},"314":{"position":[[188,2]]},"801":{"position":[[188,2]]}}}],["保证",{"_index":1231,"t":{"464":{"position":[[2,2]]},"946":{"position":[[2,2]]}}}],["保障",{"_index":56,"t":{"15":{"position":[[89,2]]}}}],["信",{"_index":1150,"t":{"374":{"position":[[70,1]]},"413":{"position":[[6,1],[123,1]]},"425":{"position":[[75,1]]},"851":{"position":[[70,1]]},"898":{"position":[[6,1],[123,1]]},"910":{"position":[[75,1]]}}}],["信任",{"_index":1212,"t":{"442":{"position":[[223,2]]}}}],["信号",{"_index":1317,"t":{"544":{"position":[[21,2],[138,2]]},"968":{"position":[[375,2],[394,2]]},"978":{"position":[[14,2]]},"1097":{"position":[[8,2]]},"1114":{"position":[[8,2]]},"1173":{"position":[[1220,2]]},"1264":{"position":[[31,2]]}}}],["信号处理",{"_index":1526,"t":{"1101":{"position":[[51,4]]},"1118":{"position":[[51,4]]},"1203":{"position":[[112,4],[252,4]]}}}],["信念",{"_index":195,"t":{"19":{"position":[[217,2]]},"23":{"position":[[254,2]]}}}],["信息",{"_index":720,"t":{"170":{"position":[[17,2]]},"172":{"position":[[51,2]]},"208":{"position":[[167,2]]},"238":{"position":[[327,2]]},"250":{"position":[[2091,2]]},"437":{"position":[[303,2]]},"442":{"position":[[214,2],[286,2]]},"578":{"position":[[31,2]]},"580":{"position":[[319,2]]},"582":{"position":[[76,2]]},"584":{"position":[[6,2]]},"591":{"position":[[81,2]]},"655":{"position":[[17,2]]},"657":{"position":[[51,2]]},"669":{"position":[[167,2]]},"713":{"position":[[327,2]]},"725":{"position":[[2091,2]]},"922":{"position":[[303,2]]},"1061":{"position":[[942,2],[1045,2],[1117,2]]},"1125":{"position":[[74,2]]},"1142":{"position":[[92,2]]},"1154":{"position":[[348,2],[435,2],[444,2],[524,2],[583,2],[647,2]]},"1165":{"position":[[85,2]]},"1226":{"position":[[167,2]]}}}],["信用卡",{"_index":1184,"t":{"411":{"position":[[78,3],[197,3]]},"416":{"position":[[210,3]]},"896":{"position":[[78,3],[197,3]]},"901":{"position":[[210,3]]}}}],["修复",{"_index":1582,"t":{"1157":{"position":[[30,2],[68,2]]}}}],["修改",{"_index":718,"t":{"166":{"position":[[12,2],[31,2],[50,2],[65,2]]},"184":{"position":[[1110,2],[1752,2]]},"186":{"position":[[10,2],[144,2]]},"200":{"position":[[13,2],[101,2]]},"208":{"position":[[383,2]]},"342":{"position":[[14,2],[49,2]]},"348":{"position":[[132,2],[153,2]]},"382":{"position":[[7,2]]},"384":{"position":[[10,2]]},"399":{"position":[[16,2]]},"406":{"position":[[98,2]]},"408":{"position":[[10,2],[27,2],[42,2]]},"411":{"position":[[381,2]]},"413":{"position":[[16,2]]},"416":{"position":[[346,2]]},"435":{"position":[[21,2]]},"439":{"position":[[111,2]]},"452":{"position":[[23,2]]},"464":{"position":[[33,2]]},"484":{"position":[[1,2]]},"562":{"position":[[16,2],[460,2]]},"651":{"position":[[12,2],[31,2],[50,2],[65,2]]},"669":{"position":[[383,2]]},"689":{"position":[[1110,2],[1752,2]]},"691":{"position":[[10,2],[144,2]]},"705":{"position":[[13,2],[101,2]]},"789":{"position":[[14,2],[49,2]]},"857":{"position":[[132,2],[153,2]]},"867":{"position":[[7,2]]},"869":{"position":[[10,2]]},"884":{"position":[[16,2]]},"891":{"position":[[98,2]]},"893":{"position":[[10,2],[27,2],[42,2]]},"896":{"position":[[381,2]]},"898":{"position":[[16,2]]},"901":{"position":[[346,2]]},"920":{"position":[[21,2]]},"924":{"position":[[111,2]]},"934":{"position":[[23,2]]},"946":{"position":[[33,2]]},"1013":{"position":[[14,2]]},"1021":{"position":[[23,2]]},"1023":{"position":[[87,2]]},"1025":{"position":[[13,2]]},"1059":{"position":[[92,2]]},"1125":{"position":[[77,2],[199,2],[234,2]]},"1131":{"position":[[4,2],[139,2],[306,2]]},"1220":{"position":[[93,2]]},"1228":{"position":[[99,2]]},"1230":{"position":[[122,2]]}}}],["倍",{"_index":1546,"t":{"1140":{"position":[[31,1]]},"1170":{"position":[[125,1]]}}}],["倒置",{"_index":1035,"t":{"319":{"position":[[2,2]]},"348":{"position":[[322,2]]},"766":{"position":[[2,2]]},"857":{"position":[[322,2]]}}}],["值",{"_index":875,"t":{"220":{"position":[[102,1]]},"310":{"position":[[81,1],[165,1]]},"480":{"position":[[525,1]]},"482":{"position":[[449,1]]},"486":{"position":[[225,1]]},"580":{"position":[[202,1]]},"582":{"position":[[551,1]]},"681":{"position":[[102,1]]},"797":{"position":[[81,1],[165,1]]},"964":{"position":[[64,1]]},"1061":{"position":[[2338,1]]},"1125":{"position":[[37,1],[82,1],[192,1],[204,1]]},"1127":{"position":[[75,1]]},"1131":{"position":[[9,1],[261,1],[313,1],[364,1]]},"1224":{"position":[[126,1]]},"1230":{"position":[[31,1],[96,1],[127,1]]},"1239":{"position":[[117,1]]}}}],["值得",{"_index":394,"t":{"23":{"position":[[227,2]]},"174":{"position":[[174,2]]},"659":{"position":[[174,2]]},"1005":{"position":[[79,2]]}}}],["做",{"_index":958,"t":{"304":{"position":[[111,1],[117,1]]},"316":{"position":[[149,1]]},"382":{"position":[[41,1]]},"396":{"position":[[11,1]]},"439":{"position":[[80,1]]},"580":{"position":[[59,1]]},"803":{"position":[[149,1]]},"829":{"position":[[111,1],[117,1]]},"867":{"position":[[41,1]]},"881":{"position":[[11,1]]},"924":{"position":[[80,1]]},"968":{"position":[[461,1]]}}}],["做主",{"_index":299,"t":{"21":{"position":[[20,2]]}}}],["做好",{"_index":1714,"t":{"1252":{"position":[[40,2]]}}}],["做法",{"_index":1358,"t":{"576":{"position":[[305,2]]},"964":{"position":[[30,2]]}}}],["停止",{"_index":579,"t":{"118":{"position":[[994,2]]},"122":{"position":[[526,2]]},"228":{"position":[[789,2]]},"238":{"position":[[239,2],[1085,2]]},"307":{"position":[[1115,2]]},"626":{"position":[[994,2]]},"630":{"position":[[526,2]]},"713":{"position":[[239,2],[1085,2]]},"737":{"position":[[789,2]]},"794":{"position":[[1115,2]]},"1101":{"position":[[104,2]]},"1118":{"position":[[104,2]]},"1224":{"position":[[50,2]]},"1239":{"position":[[86,2],[188,2]]}}}],["健康",{"_index":255,"t":{"19":{"position":[[466,2]]}}}],["健康检查",{"_index":1616,"t":{"1180":{"position":[[57,4]]}}}],["催化剂",{"_index":291,"t":{"19":{"position":[[619,3]]}}}],["像",{"_index":957,"t":{"304":{"position":[[94,1]]},"344":{"position":[[125,1]]},"376":{"position":[[124,1]]},"439":{"position":[[90,1]]},"791":{"position":[[125,1]]},"829":{"position":[[94,1]]},"853":{"position":[[124,1]]},"924":{"position":[[90,1]]},"964":{"position":[[5,1]]},"1218":{"position":[[57,1]]}}}],["僵尸",{"_index":1646,"t":{"1195":{"position":[[20,2]]},"1197":{"position":[[8,2],[19,2],[177,2]]},"1201":{"position":[[546,2],[581,2]]}}}],["儿子",{"_index":1644,"t":{"1195":{"position":[[11,2],[25,2]]},"1200":{"position":[[19,2]]}}}],["允许",{"_index":506,"t":{"108":{"position":[[45,2]]},"133":{"position":[[165,2]]},"135":{"position":[[39,2],[83,2]]},"365":{"position":[[403,2]]},"367":{"position":[[384,2]]},"408":{"position":[[6,2]]},"493":{"position":[[22,2]]},"504":{"position":[[11,2]]},"519":{"position":[[53,2]]},"522":{"position":[[15,2]]},"556":{"position":[[9,2]]},"562":{"position":[[487,2]]},"598":{"position":[[165,2]]},"600":{"position":[[39,2],[83,2]]},"842":{"position":[[403,2]]},"844":{"position":[[384,2]]},"893":{"position":[[6,2]]},"1070":{"position":[[159,2],[174,2],[447,2],[471,2],[496,2]]},"1125":{"position":[[18,2]]}}}],["元",{"_index":871,"t":{"220":{"position":[[9,1],[340,1]]},"228":{"position":[[256,1]]},"238":{"position":[[326,1]]},"250":{"position":[[2090,1]]},"411":{"position":[[194,1],[337,1]]},"413":{"position":[[119,1]]},"416":{"position":[[207,1],[259,1]]},"681":{"position":[[9,1],[340,1]]},"713":{"position":[[326,1]]},"725":{"position":[[2090,1]]},"737":{"position":[[256,1]]},"896":{"position":[[194,1],[337,1]]},"898":{"position":[[119,1]]},"901":{"position":[[207,1],[259,1]]},"1136":{"position":[[14,1]]}}}],["充裕",{"_index":275,"t":{"19":{"position":[[542,2]]}}}],["先",{"_index":479,"t":{"99":{"position":[[98,1]]},"145":{"position":[[10,1]]},"529":{"position":[[24,1]]},"556":{"position":[[598,1]]},"610":{"position":[[10,1]]},"1131":{"position":[[319,1]]},"1195":{"position":[[8,1],[27,1]]},"1200":{"position":[[14,1]]},"1201":{"position":[[15,1]]}}}],["先辈",{"_index":142,"t":{"19":{"position":[[24,2]]}}}],["兑现",{"_index":226,"t":{"19":{"position":[[324,2]]}}}],["全局",{"_index":573,"t":{"118":{"position":[[295,2]]},"200":{"position":[[103,2]]},"626":{"position":[[295,2]]},"705":{"position":[[103,2]]},"988":{"position":[[41,2]]},"1187":{"position":[[364,2]]}}}],["公共",{"_index":1094,"t":{"350":{"position":[[159,2]]},"859":{"position":[[159,2]]}}}],["公平竞争",{"_index":699,"t":{"149":{"position":[[22,4]]},"614":{"position":[[22,4]]}}}],["共享",{"_index":1328,"t":{"552":{"position":[[23,2]]},"558":{"position":[[34,2]]},"562":{"position":[[18,2]]},"1059":{"position":[[94,2]]},"1191":{"position":[[37,2]]}}}],["共享资源",{"_index":1354,"t":{"576":{"position":[[67,4]]}}}],["共同",{"_index":250,"t":{"19":{"position":[[444,2]]},"23":{"position":[[209,2]]}}}],["关于",{"_index":1566,"t":{"1154":{"position":[[529,2],[563,2]]}}}],["关注",{"_index":772,"t":{"184":{"position":[[170,2]]},"689":{"position":[[170,2]]}}}],["关系",{"_index":246,"t":{"19":{"position":[[417,2]]},"21":{"position":[[2,2]]},"225":{"position":[[6,2]]},"228":{"position":[[6,2]]},"344":{"position":[[90,2]]},"376":{"position":[[99,2]]},"734":{"position":[[6,2]]},"737":{"position":[[6,2]]},"791":{"position":[[90,2]]},"853":{"position":[[99,2]]}}}],["关联",{"_index":1307,"t":{"524":{"position":[[45,2]]},"529":{"position":[[27,2]]},"1252":{"position":[[42,2]]}}}],["关键",{"_index":458,"t":{"92":{"position":[[52,2]]},"182":{"position":[[22,2]]},"408":{"position":[[55,2]]},"687":{"position":[[22,2]]},"893":{"position":[[55,2]]},"1193":{"position":[[60,2]]}}}],["关键因素",{"_index":42,"t":{"15":{"position":[[46,4]]}}}],["关键字",{"_index":1521,"t":{"1074":{"position":[[226,3]]}}}],["关键技术",{"_index":1475,"t":{"1028":{"position":[[63,4]]}}}],["关闭",{"_index":835,"t":{"198":{"position":[[1998,2]]},"307":{"position":[[753,2]]},"310":{"position":[[14,2],[54,2],[93,2],[139,2],[182,2],[229,2]]},"312":{"position":[[10,2],[51,2],[79,2],[1089,2]]},"314":{"position":[[1460,2]]},"316":{"position":[[2430,2]]},"348":{"position":[[134,2]]},"406":{"position":[[100,2]]},"408":{"position":[[29,2]]},"411":{"position":[[383,2]]},"429":{"position":[[468,2]]},"435":{"position":[[761,2]]},"437":{"position":[[351,2],[419,2]]},"442":{"position":[[89,2],[393,2],[454,2],[478,2]]},"580":{"position":[[172,2]]},"703":{"position":[[1998,2]]},"794":{"position":[[753,2]]},"797":{"position":[[14,2],[54,2],[93,2],[139,2],[182,2],[229,2]]},"799":{"position":[[10,2],[51,2],[79,2],[1089,2]]},"801":{"position":[[1460,2]]},"803":{"position":[[2430,2]]},"857":{"position":[[134,2]]},"891":{"position":[[100,2]]},"893":{"position":[[29,2]]},"896":{"position":[[383,2]]},"914":{"position":[[468,2]]},"920":{"position":[[761,2]]},"922":{"position":[[351,2],[419,2]]},"972":{"position":[[218,2]]},"1173":{"position":[[828,2],[1223,2],[1288,2]]},"1178":{"position":[[1006,2]]}}}],["其一",{"_index":102,"t":{"15":{"position":[[229,2]]}}}],["其中",{"_index":40,"t":{"15":{"position":[[41,2]]},"220":{"position":[[238,2]]},"522":{"position":[[142,2]]},"681":{"position":[[238,2]]}}}],["其他",{"_index":523,"t":{"110":{"position":[[33,2]]},"194":{"position":[[149,2]]},"324":{"position":[[315,2]]},"350":{"position":[[85,2]]},"382":{"position":[[17,2]]},"384":{"position":[[22,2]]},"562":{"position":[[489,2]]},"618":{"position":[[33,2]]},"699":{"position":[[149,2]]},"771":{"position":[[315,2]]},"859":{"position":[[85,2]]},"867":{"position":[[17,2]]},"869":{"position":[[22,2]]},"1078":{"position":[[49,2]]},"1147":{"position":[[66,2]]},"1154":{"position":[[439,2]]},"1203":{"position":[[776,2]]}}}],["其子",{"_index":1549,"t":{"1145":{"position":[[26,2]]}}}],["具体",{"_index":757,"t":{"184":{"position":[[22,2],[49,2],[74,2],[134,2],[1233,2],[1393,2]]},"316":{"position":[[218,2],[234,2]]},"321":{"position":[[11,2]]},"324":{"position":[[196,2]]},"326":{"position":[[402,2]]},"338":{"position":[[221,2]]},"344":{"position":[[13,2]]},"348":{"position":[[314,2]]},"416":{"position":[[75,2]]},"429":{"position":[[129,2]]},"462":{"position":[[560,2]]},"689":{"position":[[22,2],[49,2],[74,2],[134,2],[1233,2],[1393,2]]},"768":{"position":[[11,2]]},"771":{"position":[[196,2]]},"773":{"position":[[402,2]]},"785":{"position":[[221,2]]},"791":{"position":[[13,2]]},"803":{"position":[[218,2],[234,2]]},"857":{"position":[[314,2]]},"901":{"position":[[75,2]]},"914":{"position":[[129,2]]},"944":{"position":[[560,2]]},"976":{"position":[[91,2]]},"1025":{"position":[[123,2]]}}}],["具备",{"_index":845,"t":{"202":{"position":[[47,2]]},"707":{"position":[[47,2]]}}}],["具有",{"_index":1593,"t":{"1165":{"position":[[14,2]]}}}],["兼容",{"_index":808,"t":{"190":{"position":[[30,2]]},"695":{"position":[[30,2]]},"957":{"position":[[69,2]]},"1017":{"position":[[6,2]]},"1049":{"position":[[15,2]]}}}],["兼容性",{"_index":1469,"t":{"1025":{"position":[[99,3]]},"1101":{"position":[[60,3]]},"1118":{"position":[[60,3]]}}}],["内",{"_index":1341,"t":{"556":{"position":[[623,1]]}}}],["内在",{"_index":75,"t":{"15":{"position":[[150,2]]}}}],["内存",{"_index":1369,"t":{"580":{"position":[[39,2],[60,2],[111,2],[146,2],[213,2],[258,2]]},"593":{"position":[[52,2],[163,2]]},"1228":{"position":[[128,2]]},"1230":{"position":[[268,2]]}}}],["内存空间",{"_index":1439,"t":{"978":{"position":[[2,4]]}}}],["内容",{"_index":406,"t":{"27":{"position":[[17,2],[30,2]]},"263":{"position":[[64,2]]},"497":{"position":[[110,2]]},"748":{"position":[[64,2]]},"1093":{"position":[[336,2]]},"1099":{"position":[[419,2]]},"1110":{"position":[[336,2]]},"1116":{"position":[[419,2]]},"1167":{"position":[[108,2]]},"1228":{"position":[[130,2]]}}}],["内核",{"_index":532,"t":{"110":{"position":[[68,2]]},"113":{"position":[[0,2],[9,2],[120,2],[128,2]]},"115":{"position":[[7,2]]},"118":{"position":[[334,2]]},"120":{"position":[[758,2]]},"153":{"position":[[28,2],[45,2]]},"155":{"position":[[0,2]]},"158":{"position":[[177,2],[262,2]]},"172":{"position":[[35,2],[81,2]]},"174":{"position":[[48,2]]},"176":{"position":[[153,2],[283,2]]},"205":{"position":[[8,2]]},"208":{"position":[[93,2],[203,2]]},"210":{"position":[[191,2],[492,2]]},"235":{"position":[[13,2]]},"618":{"position":[[68,2]]},"621":{"position":[[0,2],[9,2],[120,2],[128,2]]},"623":{"position":[[7,2]]},"626":{"position":[[334,2]]},"628":{"position":[[758,2]]},"638":{"position":[[28,2],[45,2]]},"640":{"position":[[0,2]]},"643":{"position":[[177,2],[262,2]]},"657":{"position":[[35,2],[81,2]]},"659":{"position":[[48,2]]},"661":{"position":[[153,2],[283,2]]},"666":{"position":[[8,2]]},"669":{"position":[[93,2],[203,2]]},"671":{"position":[[191,2],[492,2]]},"710":{"position":[[13,2]]},"1154":{"position":[[433,2],[570,2]]}}}],["内置",{"_index":817,"t":{"194":{"position":[[3,2]]},"699":{"position":[[3,2]]}}}],["内聚性",{"_index":955,"t":{"302":{"position":[[60,3]]},"827":{"position":[[60,3]]}}}],["内部",{"_index":1633,"t":{"1191":{"position":[[199,2]]},"1230":{"position":[[380,2]]}}}],["再次",{"_index":219,"t":{"19":{"position":[[299,2]]}}}],["冒号",{"_index":453,"t":{"92":{"position":[[16,2],[25,2]]},"94":{"position":[[9,2],[49,2]]},"106":{"position":[[11,2],[22,2]]},"108":{"position":[[3,2],[41,2]]}}}],["写",{"_index":732,"t":{"172":{"position":[[94,1]]},"314":{"position":[[1058,1]]},"657":{"position":[[94,1]]},"801":{"position":[[1058,1]]}}}],["写入",{"_index":734,"t":{"174":{"position":[[176,2],[401,2]]},"260":{"position":[[29,2]]},"316":{"position":[[4261,2]]},"457":{"position":[[223,2]]},"659":{"position":[[176,2],[401,2]]},"745":{"position":[[29,2]]},"803":{"position":[[4261,2]]},"939":{"position":[[223,2]]}}}],["农业",{"_index":156,"t":{"19":{"position":[[86,2]]}}}],["农民",{"_index":367,"t":{"23":{"position":[[117,2]]}}}],["冲突",{"_index":1613,"t":{"1170":{"position":[[149,2]]}}}],["决定",{"_index":301,"t":{"21":{"position":[[27,2]]}}}],["准确",{"_index":1176,"t":{"399":{"position":[[42,2]]},"884":{"position":[[42,2]]}}}],["减少",{"_index":1085,"t":{"350":{"position":[[35,2],[106,2]]},"552":{"position":[[28,2]]},"560":{"position":[[167,2],[510,2]]},"859":{"position":[[35,2],[106,2]]},"1061":{"position":[[2340,2]]},"1191":{"position":[[228,2]]}}}],["减弱",{"_index":1155,"t":{"376":{"position":[[53,2]]},"853":{"position":[[53,2]]}}}],["几万",{"_index":674,"t":{"141":{"position":[[48,2]]},"606":{"position":[[48,2]]}}}],["几个",{"_index":1069,"t":{"346":{"position":[[12,2]]},"855":{"position":[[12,2]]}}}],["几乎",{"_index":305,"t":{"21":{"position":[[44,2]]}}}],["几种",{"_index":1326,"t":{"548":{"position":[[35,2]]}}}],["出新",{"_index":1157,"t":{"376":{"position":[[68,2]]},"853":{"position":[[68,2]]}}}],["出现",{"_index":418,"t":{"34":{"position":[[13,2]]},"94":{"position":[[26,2]]},"957":{"position":[[57,2],[63,2]]}}}],["出自",{"_index":361,"t":{"23":{"position":[[88,2]]}}}],["出错",{"_index":1199,"t":{"437":{"position":[[425,2]]},"922":{"position":[[425,2]]}}}],["函数",{"_index":1076,"t":{"348":{"position":[[119,2]]},"396":{"position":[[9,2],[133,2]]},"406":{"position":[[85,2]]},"416":{"position":[[362,2]]},"439":{"position":[[37,2]]},"445":{"position":[[78,2]]},"472":{"position":[[66,2]]},"580":{"position":[[67,2]]},"857":{"position":[[119,2]]},"881":{"position":[[9,2],[133,2]]},"891":{"position":[[85,2]]},"901":{"position":[[362,2]]},"924":{"position":[[37,2]]},"927":{"position":[[78,2]]},"954":{"position":[[66,2]]},"964":{"position":[[8,2]]},"968":{"position":[[16,2],[192,2]]},"970":{"position":[[53,2]]},"1203":{"position":[[116,2],[256,2]]},"1224":{"position":[[45,2],[91,2],[109,2],[201,2]]},"1226":{"position":[[22,2],[57,2]]}}}],["函数参数",{"_index":1679,"t":{"1228":{"position":[[70,4]]}}}],["函数调用",{"_index":782,"t":{"184":{"position":[[952,4],[1630,4]]},"689":{"position":[[952,4],[1630,4]]}}}],["分为",{"_index":945,"t":{"288":{"position":[[4,2]]},"348":{"position":[[308,2]]},"389":{"position":[[737,2]]},"396":{"position":[[124,2]]},"813":{"position":[[4,2]]},"857":{"position":[[308,2]]},"874":{"position":[[737,2]]},"881":{"position":[[124,2]]}}}],["分发",{"_index":868,"t":{"210":{"position":[[9,2]]},"671":{"position":[[9,2]]}}}],["分析",{"_index":1118,"t":{"360":{"position":[[337,2]]},"387":{"position":[[511,2]]},"837":{"position":[[337,2]]},"872":{"position":[[511,2]]}}}],["分离",{"_index":1042,"t":{"321":{"position":[[37,2]]},"445":{"position":[[31,2]]},"768":{"position":[[37,2]]},"927":{"position":[[31,2]]}}}],["分配",{"_index":1376,"t":{"580":{"position":[[148,2]]}}}],["分配不公",{"_index":147,"t":{"19":{"position":[[52,4]]}}}],["分钟",{"_index":10,"t":{"7":{"position":[[19,2]]},"9":{"position":[[19,2]]},"11":{"position":[[19,2]]}}}],["分隔",{"_index":451,"t":{"85":{"position":[[20,2]]}}}],["分页",{"_index":1423,"t":{"968":{"position":[[212,2]]}}}],["切换",{"_index":556,"t":{"113":{"position":[[122,2]]},"184":{"position":[[1100,2]]},"324":{"position":[[313,2]]},"336":{"position":[[261,2]]},"470":{"position":[[42,2]]},"621":{"position":[[122,2]]},"689":{"position":[[1100,2]]},"771":{"position":[[313,2]]},"783":{"position":[[261,2]]},"952":{"position":[[42,2]]},"972":{"position":[[201,2]]},"1150":{"position":[[34,2]]},"1233":{"position":[[75,2]]},"1235":{"position":[[71,2]]},"1245":{"position":[[2,2]]}}}],["切片",{"_index":1508,"t":{"1070":{"position":[[73,2],[94,2],[628,2]]}}}],["列出",{"_index":1281,"t":{"497":{"position":[[104,2]]},"1197":{"position":[[85,2]]}}}],["列表",{"_index":424,"t":{"41":{"position":[[9,2]]},"389":{"position":[[295,2]]},"874":{"position":[[295,2]]},"998":{"position":[[119,2]]}}}],["创建",{"_index":576,"t":{"118":{"position":[[422,2]]},"122":{"position":[[104,2]]},"276":{"position":[[126,2]]},"304":{"position":[[80,2]]},"321":{"position":[[32,2]]},"346":{"position":[[28,2]]},"387":{"position":[[126,2]]},"433":{"position":[[266,2]]},"437":{"position":[[17,2],[65,2],[149,2]]},"445":{"position":[[7,2],[22,2]]},"495":{"position":[[15,2]]},"514":{"position":[[185,2]]},"516":{"position":[[15,2]]},"522":{"position":[[82,2],[107,2]]},"554":{"position":[[151,2],[302,2]]},"626":{"position":[[422,2]]},"630":{"position":[[104,2]]},"761":{"position":[[126,2]]},"768":{"position":[[32,2]]},"829":{"position":[[80,2]]},"855":{"position":[[28,2]]},"872":{"position":[[126,2]]},"918":{"position":[[266,2]]},"922":{"position":[[17,2],[65,2],[149,2]]},"927":{"position":[[7,2],[22,2]]},"1061":{"position":[[1173,2]]},"1095":{"position":[[6,2]]},"1112":{"position":[[6,2]]},"1125":{"position":[[244,2],[253,2]]},"1145":{"position":[[90,2]]},"1154":{"position":[[0,2]]},"1159":{"position":[[11,2]]},"1161":{"position":[[17,2]]},"1173":{"position":[[232,2]]},"1178":{"position":[[259,2]]},"1200":{"position":[[172,2]]},"1201":{"position":[[149,2]]},"1203":{"position":[[470,2]]}}}],["创新",{"_index":288,"t":{"19":{"position":[[598,2]]}}}],["初始化",{"_index":660,"t":{"137":{"position":[[208,3]]},"566":{"position":[[39,3],[139,3]]},"602":{"position":[[208,3]]},"1178":{"position":[[513,3]]}}}],["初年",{"_index":359,"t":{"23":{"position":[[82,2]]}}}],["删除",{"_index":1623,"t":{"1189":{"position":[[153,2]]},"1226":{"position":[[191,2]]}}}],["判断",{"_index":881,"t":{"220":{"position":[[1191,2]]},"272":{"position":[[254,2]]},"310":{"position":[[89,2],[144,2],[169,2]]},"312":{"position":[[72,2]]},"681":{"position":[[1191,2]]},"757":{"position":[[254,2]]},"797":{"position":[[89,2],[144,2],[169,2]]},"799":{"position":[[72,2]]}}}],["利用",{"_index":1548,"t":{"1142":{"position":[[77,2]]}}}],["利益",{"_index":339,"t":{"23":{"position":[[17,2]]}}}],["别名",{"_index":1501,"t":{"1061":{"position":[[1807,2]]}}}],["到来",{"_index":630,"t":{"133":{"position":[[77,2],[145,2]]},"598":{"position":[[77,2],[145,2]]}}}],["到达",{"_index":1300,"t":{"522":{"position":[[96,2]]},"556":{"position":[[628,2]]}}}],["制度",{"_index":95,"t":{"15":{"position":[[208,2]]}}}],["刻意",{"_index":106,"t":{"17":{"position":[[12,2]]}}}],["削弱",{"_index":1125,"t":{"365":{"position":[[414,2]]},"842":{"position":[[414,2]]}}}],["前",{"_index":1316,"t":{"540":{"position":[[33,1]]},"980":{"position":[[12,1]]},"1203":{"position":[[858,1]]},"1224":{"position":[[49,1]]}}}],["前提",{"_index":1537,"t":{"1131":{"position":[[12,2]]}}}],["前缀",{"_index":440,"t":{"64":{"position":[[7,2]]}}}],["前置条件",{"_index":1126,"t":{"365":{"position":[[417,4],[489,4]]},"376":{"position":[[47,4]]},"842":{"position":[[417,4],[489,4]]},"853":{"position":[[47,4]]}}}],["前面",{"_index":472,"t":{"94":{"position":[[39,2]]},"97":{"position":[[130,2]]},"99":{"position":[[50,2],[126,2]]},"108":{"position":[[32,2]]},"270":{"position":[[148,2]]},"755":{"position":[[148,2]]}}}],["剥削",{"_index":108,"t":{"17":{"position":[[17,2]]}}}],["力量",{"_index":345,"t":{"23":{"position":[[36,2]]}}}],["功成名就",{"_index":385,"t":{"23":{"position":[[189,4]]}}}],["功绩",{"_index":341,"t":{"23":{"position":[[22,2]]}}}],["功能",{"_index":521,"t":{"110":{"position":[[27,2],[35,2]]},"113":{"position":[[18,2]]},"184":{"position":[[177,2]]},"186":{"position":[[5,2],[114,2]]},"314":{"position":[[126,2]]},"342":{"position":[[45,2]]},"348":{"position":[[147,2]]},"350":{"position":[[26,2],[261,2]]},"376":{"position":[[148,2]]},"382":{"position":[[11,2],[23,2]]},"384":{"position":[[14,2],[24,2]]},"387":{"position":[[539,2]]},"399":{"position":[[20,2],[28,2]]},"401":{"position":[[19,2]]},"408":{"position":[[23,2]]},"439":{"position":[[120,2]]},"578":{"position":[[61,2]]},"593":{"position":[[14,2],[211,2]]},"618":{"position":[[27,2],[35,2]]},"621":{"position":[[18,2]]},"689":{"position":[[177,2]]},"691":{"position":[[5,2],[114,2]]},"789":{"position":[[45,2]]},"801":{"position":[[126,2]]},"853":{"position":[[148,2]]},"857":{"position":[[147,2]]},"859":{"position":[[26,2],[261,2]]},"867":{"position":[[11,2],[23,2]]},"869":{"position":[[14,2],[24,2]]},"872":{"position":[[539,2]]},"884":{"position":[[20,2],[28,2]]},"886":{"position":[[19,2]]},"893":{"position":[[23,2]]},"924":{"position":[[120,2]]},"1061":{"position":[[1056,2]]},"1064":{"position":[[41,2]]},"1078":{"position":[[18,2]]},"1081":{"position":[[88,2]]},"1086":{"position":[[88,2]]},"1101":{"position":[[0,2]]},"1118":{"position":[[0,2]]},"1125":{"position":[[172,2]]},"1224":{"position":[[3,2]]}}}],["功能强大",{"_index":1453,"t":{"1003":{"position":[[18,4]]}}}],["加",{"_index":916,"t":{"274":{"position":[[59,1]]},"759":{"position":[[59,1]]}}}],["加以",{"_index":82,"t":{"15":{"position":[[171,2]]}}}],["加入",{"_index":1489,"t":{"1035":{"position":[[174,2]]}}}],["加剧",{"_index":169,"t":{"19":{"position":[[130,2]]}}}],["加密",{"_index":899,"t":{"247":{"position":[[16,2]]},"250":{"position":[[146,2],[248,2]]},"260":{"position":[[24,2]]},"263":{"position":[[68,2]]},"276":{"position":[[186,2]]},"442":{"position":[[185,2]]},"488":{"position":[[64,2]]},"490":{"position":[[129,2],[341,2]]},"722":{"position":[[16,2]]},"725":{"position":[[146,2],[248,2]]},"745":{"position":[[24,2]]},"748":{"position":[[68,2]]},"761":{"position":[[186,2]]},"1061":{"position":[[1051,2]]}}}],["加密算法",{"_index":1274,"t":{"490":{"position":[[146,4],[179,4]]}}}],["加强",{"_index":1154,"t":{"376":{"position":[[45,2]]},"853":{"position":[[45,2]]}}}],["加载",{"_index":589,"t":{"126":{"position":[[31,2]]},"634":{"position":[[31,2]]},"1239":{"position":[[170,2]]},"1252":{"position":[[3,2],[50,2]]}}}],["加锁",{"_index":1333,"t":{"552":{"position":[[63,2]]}}}],["务实",{"_index":388,"t":{"23":{"position":[[201,2]]}}}],["劣势",{"_index":1466,"t":{"1023":{"position":[[10,2]]}}}],["动力",{"_index":286,"t":{"19":{"position":[[588,2]]}}}],["动态",{"_index":588,"t":{"126":{"position":[[29,2]]},"149":{"position":[[40,2]]},"614":{"position":[[40,2]]},"634":{"position":[[29,2]]},"1125":{"position":[[67,2],[93,2],[212,2],[229,2]]},"1142":{"position":[[3,2]]},"1154":{"position":[[581,2]]},"1239":{"position":[[166,2]]}}}],["动态控制",{"_index":892,"t":{"235":{"position":[[54,4]]},"710":{"position":[[54,4]]}}}],["动物",{"_index":937,"t":{"286":{"position":[[68,2],[88,2],[109,2]]},"811":{"position":[[68,2],[88,2],[109,2]]}}}],["助力",{"_index":248,"t":{"19":{"position":[[435,2]]}}}],["努力",{"_index":400,"t":{"23":{"position":[[260,2]]}}}],["勇敢",{"_index":391,"t":{"23":{"position":[[215,2]]}}}],["包",{"_index":1248,"t":{"475":{"position":[[74,1]]},"493":{"position":[[8,1]]},"516":{"position":[[184,1]]},"578":{"position":[[38,1]]},"593":{"position":[[135,1]]},"1008":{"position":[[27,1]]},"1081":{"position":[[36,1],[75,1]]},"1086":{"position":[[36,1],[75,1]]},"1125":{"position":[[48,1],[168,1]]},"1127":{"position":[[10,1]]}}}],["包含",{"_index":510,"t":{"108":{"position":[[91,2]]},"208":{"position":[[15,2]]},"283":{"position":[[10,2]]},"286":{"position":[[10,2]]},"302":{"position":[[66,2]]},"329":{"position":[[5,2]]},"480":{"position":[[506,2]]},"669":{"position":[[15,2]]},"776":{"position":[[5,2]]},"808":{"position":[[10,2]]},"811":{"position":[[10,2]]},"827":{"position":[[66,2]]},"1070":{"position":[[192,2],[524,2],[562,2],[591,2]]},"1154":{"position":[[706,2]]}}}],["包容",{"_index":387,"t":{"23":{"position":[[198,2]]}}}],["包括",{"_index":1637,"t":{"1193":{"position":[[65,2]]}}}],["包装",{"_index":1428,"t":{"970":{"position":[[43,2]]}}}],["化",{"_index":590,"t":{"126":{"position":[[39,1]]},"258":{"position":[[6,1]]},"468":{"position":[[11,1]]},"634":{"position":[[39,1]]},"743":{"position":[[6,1]]},"950":{"position":[[11,1]]},"1028":{"position":[[56,1],[148,1]]},"1159":{"position":[[42,1]]},"1167":{"position":[[79,1]]}}}],["匹配",{"_index":433,"t":{"52":{"position":[[11,2]]},"442":{"position":[[189,2]]},"482":{"position":[[445,2],[456,2]]},"488":{"position":[[44,2]]}}}],["区分",{"_index":976,"t":{"307":{"position":[[1333,2]]},"794":{"position":[[1333,2]]}}}],["区别",{"_index":459,"t":{"92":{"position":[[54,2]]},"108":{"position":[[150,2]]},"540":{"position":[[94,2]]}}}],["十六进制",{"_index":1517,"t":{"1070":{"position":[[393,4]]},"1230":{"position":[[87,4]]}}}],["升级",{"_index":1263,"t":{"486":{"position":[[204,2]]},"490":{"position":[[103,2]]}}}],["协",{"_index":833,"t":{"198":{"position":[[1992,1]]},"307":{"position":[[546,1],[770,1],[1119,1]]},"312":{"position":[[449,1],[516,1]]},"314":{"position":[[526,1]]},"536":{"position":[[113,1]]},"544":{"position":[[101,1]]},"548":{"position":[[12,1]]},"554":{"position":[[339,1]]},"703":{"position":[[1992,1]]},"794":{"position":[[546,1],[770,1],[1119,1]]},"799":{"position":[[449,1],[516,1]]},"801":{"position":[[526,1]]}}}],["协作",{"_index":1171,"t":{"389":{"position":[[772,2]]},"874":{"position":[[772,2]]}}}],["协议",{"_index":850,"t":{"205":{"position":[[19,2]]},"442":{"position":[[182,2]]},"666":{"position":[[19,2]]}}}],["协调",{"_index":1291,"t":{"519":{"position":[[31,2]]}}}],["单",{"_index":452,"t":{"92":{"position":[[15,1]]},"94":{"position":[[8,1]]},"106":{"position":[[10,1]]},"108":{"position":[[2,1]]},"576":{"position":[[103,1]]}}}],["单一",{"_index":484,"t":{"99":{"position":[[167,2]]},"113":{"position":[[6,2]]},"184":{"position":[[160,2]]},"348":{"position":[[0,2]]},"352":{"position":[[35,2]]},"379":{"position":[[0,2]]},"382":{"position":[[59,2]]},"396":{"position":[[128,2]]},"621":{"position":[[6,2]]},"689":{"position":[[160,2]]},"857":{"position":[[0,2]]},"861":{"position":[[35,2]]},"864":{"position":[[0,2]]},"867":{"position":[[59,2]]},"881":{"position":[[128,2]]}}}],["单个",{"_index":880,"t":{"220":{"position":[[403,2]]},"681":{"position":[[403,2]]}}}],["单元测试",{"_index":766,"t":{"184":{"position":[[94,4]]},"689":{"position":[[94,4]]}}}],["单步",{"_index":1676,"t":{"1224":{"position":[[83,2],[102,2]]},"1230":{"position":[[309,2]]}}}],["单独",{"_index":870,"t":{"217":{"position":[[7,2]]},"678":{"position":[[7,2]]},"1165":{"position":[[274,2]]}}}],["单词",{"_index":446,"t":{"71":{"position":[[10,2]]},"85":{"position":[[12,2],[15,2]]}}}],["占",{"_index":1438,"t":{"978":{"position":[[1,1]]}}}],["占用",{"_index":1610,"t":{"1170":{"position":[[142,2]]},"1189":{"position":[[210,2]]}}}],["卡死",{"_index":1007,"t":{"314":{"position":[[151,2]]},"801":{"position":[[151,2]]}}}],["即便",{"_index":144,"t":{"19":{"position":[[39,2]]}}}],["即可",{"_index":1425,"t":{"970":{"position":[[14,2]]}}}],["历史",{"_index":111,"t":{"17":{"position":[[24,2]]},"23":{"position":[[0,2]]}}}],["压迫",{"_index":162,"t":{"19":{"position":[[107,2]]}}}],["原值",{"_index":1539,"t":{"1131":{"position":[[141,2]]}}}],["原则",{"_index":775,"t":{"184":{"position":[[184,2]]},"198":{"position":[[2029,2]]},"202":{"position":[[33,2]]},"281":{"position":[[4,2],[51,2],[58,2],[143,2]]},"319":{"position":[[4,2],[50,2],[57,2],[141,2]]},"346":{"position":[[18,2],[23,2],[57,2]]},"348":{"position":[[4,2],[77,2],[164,2],[243,2],[324,2]]},"350":{"position":[[6,2],[57,2],[118,2],[171,2],[222,2]]},"355":{"position":[[4,2],[49,2],[56,2],[204,2]]},"360":{"position":[[278,2]]},"379":{"position":[[4,2],[51,2],[58,2],[141,2]]},"406":{"position":[[2,2],[39,2],[46,2],[113,2]]},"439":{"position":[[63,2]]},"452":{"position":[[32,2]]},"459":{"position":[[6,2]]},"689":{"position":[[184,2]]},"703":{"position":[[2029,2]]},"707":{"position":[[33,2]]},"766":{"position":[[4,2],[50,2],[57,2],[141,2]]},"806":{"position":[[4,2],[51,2],[58,2],[143,2]]},"832":{"position":[[4,2],[49,2],[56,2],[204,2]]},"837":{"position":[[278,2]]},"855":{"position":[[18,2],[23,2],[57,2]]},"857":{"position":[[4,2],[77,2],[164,2],[243,2],[324,2]]},"859":{"position":[[6,2],[57,2],[118,2],[171,2],[222,2]]},"864":{"position":[[4,2],[51,2],[58,2],[141,2]]},"891":{"position":[[2,2],[39,2],[46,2],[113,2]]},"924":{"position":[[63,2]]},"934":{"position":[[32,2]]},"941":{"position":[[6,2]]}}}],["原因",{"_index":1072,"t":{"348":{"position":[[61,2]]},"379":{"position":[[107,2]]},"442":{"position":[[165,2]]},"857":{"position":[[61,2]]},"864":{"position":[[107,2]]},"957":{"position":[[47,2]]}}}],["原始",{"_index":150,"t":{"19":{"position":[[66,2]]},"186":{"position":[[146,2]]},"691":{"position":[[146,2]]},"1131":{"position":[[308,2]]},"1264":{"position":[[17,2]]}}}],["原子",{"_index":1351,"t":{"568":{"position":[[30,2]]},"570":{"position":[[151,2]]}}}],["原有",{"_index":796,"t":{"186":{"position":[[112,2]]},"691":{"position":[[112,2]]}}}],["原来",{"_index":1169,"t":{"389":{"position":[[722,2]]},"874":{"position":[[722,2]]}}}],["原理",{"_index":1323,"t":{"546":{"position":[[43,2]]},"1193":{"position":[[155,2]]}}}],["原语",{"_index":1295,"t":{"522":{"position":[[9,2]]}}}],["去掉",{"_index":444,"t":{"68":{"position":[[73,2],[145,2]]}}}],["去除",{"_index":447,"t":{"78":{"position":[[0,2]]}}}],["参",{"_index":1674,"t":{"1220":{"position":[[9,1]]}}}],["参数",{"_index":770,"t":{"184":{"position":[[153,2]]},"188":{"position":[[7,2]]},"689":{"position":[[153,2]]},"693":{"position":[[7,2]]},"983":{"position":[[18,2]]},"988":{"position":[[47,2]]},"998":{"position":[[121,2]]},"1001":{"position":[[25,2]]},"1005":{"position":[[35,2]]},"1078":{"position":[[65,2]]},"1138":{"position":[[1,2],[356,2]]},"1154":{"position":[[572,2]]},"1197":{"position":[[83,2],[158,2]]},"1218":{"position":[[54,2]]},"1220":{"position":[[44,2],[95,2]]},"1233":{"position":[[135,2]]}}}],["参考",{"_index":721,"t":{"170":{"position":[[24,2]]},"655":{"position":[[24,2]]},"1239":{"position":[[0,2]]}}}],["及其",{"_index":1663,"t":{"1208":{"position":[[106,2]]}}}],["友好",{"_index":831,"t":{"198":{"position":[[1975,2]]},"703":{"position":[[1975,2]]},"1005":{"position":[[19,2]]}}}],["双",{"_index":454,"t":{"92":{"position":[[24,1]]},"94":{"position":[[48,1]]},"106":{"position":[[21,1]]},"108":{"position":[[40,1]]}}}],["反",{"_index":1473,"t":{"1028":{"position":[[30,1]]},"1031":{"position":[[101,1]]},"1035":{"position":[[169,1]]},"1125":{"position":[[147,1]]}}}],["反向",{"_index":1629,"t":{"1191":{"position":[[56,2]]}}}],["反射",{"_index":1532,"t":{"1125":{"position":[[0,2],[251,2]]},"1131":{"position":[[0,2]]},"1142":{"position":[[10,2],[46,2]]},"1187":{"position":[[264,2]]}}}],["反汇编",{"_index":1686,"t":{"1230":{"position":[[287,3]]}}}],["反转",{"_index":1041,"t":{"321":{"position":[[20,2]]},"768":{"position":[[20,2]]}}}],["反过来",{"_index":247,"t":{"19":{"position":[[432,3]]}}}],["反馈",{"_index":726,"t":{"172":{"position":[[49,2],[121,2]]},"657":{"position":[[49,2],[121,2]]}}}],["发出请求",{"_index":855,"t":{"205":{"position":[[49,4]]},"666":{"position":[[49,4]]}}}],["发展",{"_index":137,"t":{"19":{"position":[[10,2],[236,2],[285,2],[456,2]]}}}],["发现",{"_index":591,"t":{"126":{"position":[[49,2]]},"376":{"position":[[84,2]]},"634":{"position":[[49,2]]},"853":{"position":[[84,2]]}}}],["发生",{"_index":1198,"t":{"437":{"position":[[338,2]]},"562":{"position":[[463,2]]},"922":{"position":[[338,2]]},"1239":{"position":[[19,2],[32,2],[118,2],[149,2],[156,2],[182,2]]}}}],["发送",{"_index":580,"t":{"118":{"position":[[1188,2]]},"120":{"position":[[753,2]]},"153":{"position":[[23,2],[47,2]]},"155":{"position":[[2,2]]},"158":{"position":[[141,2],[264,2]]},"162":{"position":[[6,2],[48,2]]},"172":{"position":[[63,2]]},"176":{"position":[[148,2]]},"184":{"position":[[406,2],[553,2],[1352,2]]},"210":{"position":[[20,2],[186,2]]},"307":{"position":[[339,2]]},"310":{"position":[[0,2]]},"312":{"position":[[825,2]]},"316":{"position":[[3017,2],[3699,2]]},"387":{"position":[[269,2],[522,2]]},"396":{"position":[[108,2]]},"554":{"position":[[361,2]]},"626":{"position":[[1188,2]]},"628":{"position":[[753,2]]},"638":{"position":[[23,2],[47,2]]},"640":{"position":[[2,2]]},"643":{"position":[[141,2],[264,2]]},"647":{"position":[[6,2],[48,2]]},"657":{"position":[[63,2]]},"661":{"position":[[148,2]]},"671":{"position":[[20,2],[186,2]]},"689":{"position":[[406,2],[553,2],[1352,2]]},"794":{"position":[[339,2]]},"797":{"position":[[0,2]]},"799":{"position":[[825,2]]},"803":{"position":[[3017,2],[3699,2]]},"872":{"position":[[269,2],[522,2]]},"881":{"position":[[108,2]]},"1097":{"position":[[6,2]]},"1114":{"position":[[6,2]]}}}],["发送器",{"_index":785,"t":{"184":{"position":[[1255,3]]},"689":{"position":[[1255,3]]}}}],["发送数据",{"_index":969,"t":{"307":{"position":[[1194,4]]},"310":{"position":[[25,4]]},"554":{"position":[[398,4]]},"556":{"position":[[168,4],[265,4]]},"794":{"position":[[1194,4]]},"797":{"position":[[25,4]]}}}],["发送给",{"_index":866,"t":{"208":{"position":[[826,3]]},"220":{"position":[[1468,3]]},"669":{"position":[[826,3]]},"681":{"position":[[1468,3]]}}}],["取消",{"_index":1004,"t":{"314":{"position":[[103,2],[110,2],[117,2],[146,2],[895,2]]},"572":{"position":[[45,2]]},"574":{"position":[[440,2]]},"576":{"position":[[139,2]]},"801":{"position":[[103,2],[110,2],[117,2],[146,2],[895,2]]}}}],["受",{"_index":682,"t":{"141":{"position":[[90,1]]},"442":{"position":[[222,1]]},"606":{"position":[[90,1]]}}}],["受限",{"_index":1587,"t":{"1159":{"position":[[15,2]]}}}],["变为",{"_index":1348,"t":{"564":{"position":[[218,2]]}}}],["变化",{"_index":743,"t":{"180":{"position":[[58,2]]},"202":{"position":[[53,2]]},"348":{"position":[[58,2]]},"379":{"position":[[104,2]]},"439":{"position":[[14,2],[78,2]]},"685":{"position":[[58,2]]},"707":{"position":[[53,2]]},"857":{"position":[[58,2]]},"864":{"position":[[104,2]]},"924":{"position":[[14,2],[78,2]]}}}],["变得",{"_index":1174,"t":{"399":{"position":[[9,2]]},"884":{"position":[[9,2]]}}}],["变成",{"_index":1654,"t":{"1200":{"position":[[49,2]]},"1201":{"position":[[544,2]]}}}],["变更",{"_index":954,"t":{"302":{"position":[[32,2]]},"827":{"position":[[32,2]]}}}],["变量",{"_index":486,"t":{"99":{"position":[[188,2]]},"106":{"position":[[50,2]]},"376":{"position":[[63,2]]},"519":{"position":[[26,2]]},"522":{"position":[[2,2]]},"552":{"position":[[25,2]]},"558":{"position":[[36,2]]},"576":{"position":[[210,2]]},"853":{"position":[[63,2]]},"980":{"position":[[15,2]]},"1061":{"position":[[1888,2],[1920,2]]},"1125":{"position":[[31,2],[71,2],[79,2],[112,2],[183,2],[201,2],[257,2]]},"1127":{"position":[[39,2],[72,2]]},"1131":{"position":[[6,2],[310,2]]},"1224":{"position":[[123,2]]},"1228":{"position":[[20,2]]},"1239":{"position":[[100,2],[109,2]]}}}],["变量值",{"_index":1680,"t":{"1228":{"position":[[101,3]]}}}],["古代",{"_index":295,"t":{"21":{"position":[[10,2]]}}}],["只是",{"_index":365,"t":{"23":{"position":[[112,2],[139,2]]},"1165":{"position":[[54,2]]}}}],["只有",{"_index":231,"t":{"19":{"position":[[347,2]]},"131":{"position":[[118,2]]},"348":{"position":[[51,2]]},"379":{"position":[[97,2]]},"596":{"position":[[118,2]]},"857":{"position":[[51,2]]},"864":{"position":[[97,2]]},"1142":{"position":[[0,2]]},"1165":{"position":[[24,2]]}}}],["只能",{"_index":635,"t":{"133":{"position":[[124,2]]},"348":{"position":[[233,2]]},"536":{"position":[[119,2]]},"598":{"position":[[124,2]]},"857":{"position":[[233,2]]},"1159":{"position":[[27,2]]}}}],["只读",{"_index":949,"t":{"298":{"position":[[179,2]]},"823":{"position":[[179,2]]},"1013":{"position":[[40,2]]},"1023":{"position":[[65,2]]}}}],["叫",{"_index":940,"t":{"286":{"position":[[113,1]]},"811":{"position":[[113,1]]}}}],["可以",{"_index":355,"t":{"23":{"position":[[73,2]]},"29":{"position":[[0,2]]},"48":{"position":[[6,2]]},"92":{"position":[[64,2]]},"94":{"position":[[66,2]]},"104":{"position":[[243,2]]},"143":{"position":[[32,2]]},"172":{"position":[[0,2]]},"184":{"position":[[99,2],[974,2]]},"205":{"position":[[54,2]]},"228":{"position":[[326,2]]},"270":{"position":[[143,2]]},"274":{"position":[[57,2],[77,2]]},"288":{"position":[[366,2]]},"307":{"position":[[1281,2]]},"316":{"position":[[289,2]]},"333":{"position":[[122,2]]},"336":{"position":[[257,2]]},"352":{"position":[[48,2]]},"355":{"position":[[106,2]]},"376":{"position":[[134,2]]},"382":{"position":[[84,2]]},"427":{"position":[[13,2]]},"429":{"position":[[201,2]]},"433":{"position":[[125,2]]},"435":{"position":[[756,2]]},"442":{"position":[[404,2],[482,2],[488,2],[502,2]]},"445":{"position":[[67,2]]},"480":{"position":[[446,2]]},"486":{"position":[[12,2]]},"516":{"position":[[42,2],[135,2]]},"522":{"position":[[153,2]]},"550":{"position":[[52,2]]},"562":{"position":[[24,2]]},"568":{"position":[[10,2]]},"576":{"position":[[239,2],[381,2]]},"593":{"position":[[214,2]]},"608":{"position":[[32,2]]},"657":{"position":[[0,2]]},"666":{"position":[[54,2]]},"689":{"position":[[99,2],[974,2]]},"737":{"position":[[326,2]]},"755":{"position":[[143,2]]},"759":{"position":[[57,2],[77,2]]},"780":{"position":[[122,2]]},"783":{"position":[[257,2]]},"794":{"position":[[1281,2]]},"803":{"position":[[289,2]]},"813":{"position":[[366,2]]},"832":{"position":[[106,2]]},"853":{"position":[[134,2]]},"861":{"position":[[48,2]]},"867":{"position":[[84,2]]},"912":{"position":[[13,2]]},"914":{"position":[[201,2]]},"918":{"position":[[125,2]]},"920":{"position":[[756,2]]},"927":{"position":[[67,2]]},"957":{"position":[[15,2],[76,2],[122,2]]},"968":{"position":[[230,2],[398,2]]},"988":{"position":[[35,2]]},"1001":{"position":[[0,2]]},"1028":{"position":[[91,2]]},"1035":{"position":[[23,2],[68,2],[95,2]]},"1061":{"position":[[1088,2],[1736,2],[1874,2]]},"1072":{"position":[[0,2]]},"1078":{"position":[[39,2]]},"1125":{"position":[[65,2]]},"1131":{"position":[[2,2]]},"1136":{"position":[[5,2]]},"1157":{"position":[[12,2]]},"1159":{"position":[[7,2]]},"1161":{"position":[[15,2]]},"1163":{"position":[[16,2]]},"1167":{"position":[[97,2]]},"1200":{"position":[[30,2]]},"1206":{"position":[[61,2]]},"1222":{"position":[[2,2],[31,2]]},"1230":{"position":[[331,2]]},"1233":{"position":[[389,2],[437,2]]},"1248":{"position":[[10,2]]}}}],["可扩展性",{"_index":753,"t":{"180":{"position":[[100,4]]},"316":{"position":[[76,4]]},"344":{"position":[[109,4]]},"685":{"position":[[100,4]]},"791":{"position":[[109,4]]},"803":{"position":[[76,4]]}}}],["可用",{"_index":1397,"t":{"593":{"position":[[86,2]]}}}],["可维护性",{"_index":464,"t":{"92":{"position":[[87,4]]},"344":{"position":[[114,4]]},"382":{"position":[[2,4]]},"791":{"position":[[114,4]]},"867":{"position":[[2,4]]}}}],["可能",{"_index":372,"t":{"23":{"position":[[137,2]]},"104":{"position":[[211,2]]},"108":{"position":[[81,2]]},"141":{"position":[[56,2]]},"151":{"position":[[1595,2]]},"367":{"position":[[216,2]]},"384":{"position":[[16,2]]},"522":{"position":[[47,2]]},"540":{"position":[[66,2],[174,2]]},"593":{"position":[[24,2],[48,2],[112,2]]},"606":{"position":[[56,2]]},"616":{"position":[[1595,2]]},"844":{"position":[[216,2]]},"869":{"position":[[16,2]]},"957":{"position":[[109,2]]},"972":{"position":[[67,2]]},"1028":{"position":[[124,2]]},"1154":{"position":[[372,2],[639,2],[1133,2]]},"1165":{"position":[[200,2]]},"1233":{"position":[[373,2]]}}}],["可能性",{"_index":1329,"t":{"552":{"position":[[35,3]]}}}],["可见",{"_index":1555,"t":{"1147":{"position":[[71,2]]}}}],["可读性",{"_index":1541,"t":{"1140":{"position":[[2,3]]}}}],["可靠",{"_index":1459,"t":{"1008":{"position":[[432,2]]}}}],["可靠性",{"_index":546,"t":{"113":{"position":[[76,3]]},"593":{"position":[[234,3]]},"621":{"position":[[76,3]]},"1078":{"position":[[75,3]]}}}],["台阶式",{"_index":214,"t":{"19":{"position":[[282,3]]}}}],["号",{"_index":442,"t":{"64":{"position":[[14,1]]},"1195":{"position":[[15,1]]},"1200":{"position":[[23,1]]}}}],["司法独立",{"_index":44,"t":{"15":{"position":[[53,4]]}}}],["吃",{"_index":1134,"t":{"370":{"position":[[104,1],[267,1]]},"847":{"position":[[104,1],[267,1]]}}}],["各种",{"_index":1454,"t":{"1003":{"position":[[34,2]]}}}],["合并",{"_index":504,"t":{"106":{"position":[[82,2]]}}}],["合法",{"_index":1506,"t":{"1070":{"position":[[29,2],[127,2],[282,2],[302,2],[410,2],[427,2]]}}}],["合理",{"_index":737,"t":{"180":{"position":[[30,2]]},"403":{"position":[[66,2]]},"593":{"position":[[205,2]]},"685":{"position":[[30,2]]},"888":{"position":[[66,2]]},"1142":{"position":[[75,2]]}}}],["合适",{"_index":1470,"t":{"1025":{"position":[[129,2]]}}}],["同一",{"_index":468,"t":{"94":{"position":[[22,2],[62,2]]},"980":{"position":[[131,2]]},"1170":{"position":[[47,2]]},"1191":{"position":[[149,2]]}}}],["同一个",{"_index":1167,"t":{"387":{"position":[[545,3]]},"576":{"position":[[207,3]]},"872":{"position":[[545,3]]}}}],["同属",{"_index":1233,"t":{"464":{"position":[[13,2]]},"946":{"position":[[13,2]]}}}],["同时",{"_index":190,"t":{"19":{"position":[[201,2]]},"516":{"position":[[114,2]]},"1237":{"position":[[125,2]]}}}],["同样",{"_index":354,"t":{"23":{"position":[[71,2]]},"355":{"position":[[196,2]]},"832":{"position":[[196,2]]}}}],["同步",{"_index":962,"t":{"307":{"position":[[174,2],[1223,2]]},"519":{"position":[[49,2]]},"522":{"position":[[7,2]]},"546":{"position":[[20,2]]},"560":{"position":[[17,2]]},"794":{"position":[[174,2],[1223,2]]},"968":{"position":[[377,2]]},"970":{"position":[[26,2],[45,2]]}}}],["同步操作",{"_index":961,"t":{"307":{"position":[[28,4]]},"794":{"position":[[28,4]]}}}],["名",{"_index":890,"t":{"235":{"position":[[32,1]]},"710":{"position":[[32,1]]},"1230":{"position":[[328,1]]}}}],["名声",{"_index":380,"t":{"23":{"position":[[167,2]]}}}],["名字",{"_index":1446,"t":{"988":{"position":[[157,2]]},"990":{"position":[[152,2]]},"992":{"position":[[213,2]]},"994":{"position":[[156,2]]},"1001":{"position":[[200,2]]}}}],["名将",{"_index":360,"t":{"23":{"position":[[85,2]]}}}],["名称",{"_index":884,"t":{"228":{"position":[[15,2],[197,2]]},"399":{"position":[[45,2]]},"737":{"position":[[15,2],[197,2]]},"884":{"position":[[45,2]]}}}],["后台",{"_index":964,"t":{"307":{"position":[[768,2],[1117,2]]},"312":{"position":[[514,2],[1241,2]]},"794":{"position":[[768,2],[1117,2]]},"799":{"position":[[514,2],[1241,2]]}}}],["后来居上",{"_index":39,"t":{"15":{"position":[[36,4]]}}}],["后缀",{"_index":437,"t":{"57":{"position":[[8,2]]},"68":{"position":[[75,2],[147,2]]}}}],["后置",{"_index":1131,"t":{"367":{"position":[[395,2],[477,2]]},"376":{"position":[[55,2]]},"844":{"position":[[395,2],[477,2]]},"853":{"position":[[55,2]]}}}],["后面",{"_index":470,"t":{"94":{"position":[[31,2]]},"97":{"position":[[112,2]]},"108":{"position":[[24,2]]},"1218":{"position":[[51,2]]}}}],["向量",{"_index":1684,"t":{"1230":{"position":[[202,2]]}}}],["吞吐量",{"_index":1627,"t":{"1189":{"position":[[313,3]]}}}],["否则",{"_index":1260,"t":{"482":{"position":[[466,2]]},"538":{"position":[[547,2]]},"976":{"position":[[97,2]]}}}],["含",{"_index":1027,"t":{"316":{"position":[[821,1]]},"803":{"position":[[821,1]]}}}],["启动",{"_index":578,"t":{"118":{"position":[[807,2]]},"122":{"position":[[274,2],[342,2]]},"228":{"position":[[784,2]]},"238":{"position":[[1080,2]]},"307":{"position":[[529,2]]},"312":{"position":[[432,2]]},"314":{"position":[[509,2]]},"316":{"position":[[1942,2]]},"437":{"position":[[263,2]]},"514":{"position":[[348,2],[446,2]]},"554":{"position":[[184,2],[335,2]]},"556":{"position":[[149,2],[246,2]]},"560":{"position":[[377,2]]},"626":{"position":[[807,2]]},"630":{"position":[[274,2],[342,2]]},"713":{"position":[[1080,2]]},"737":{"position":[[784,2]]},"794":{"position":[[529,2]]},"799":{"position":[[432,2]]},"801":{"position":[[509,2]]},"803":{"position":[[1942,2]]},"922":{"position":[[263,2]]},"1147":{"position":[[170,2]]},"1150":{"position":[[60,2]]},"1154":{"position":[[1058,2]]},"1157":{"position":[[5,2]]},"1173":{"position":[[864,2]]},"1178":{"position":[[1042,2]]},"1218":{"position":[[2,2],[39,2]]},"1222":{"position":[[33,2]]}}}],["启用",{"_index":1213,"t":{"442":{"position":[[298,2]]}}}],["告别",{"_index":1449,"t":{"992":{"position":[[290,2],[331,2]]}}}],["命令",{"_index":410,"t":{"29":{"position":[[16,2]]},"97":{"position":[[159,2]]},"198":{"position":[[7609,2]]},"316":{"position":[[18,2],[54,2],[85,2],[120,2],[135,2],[179,2],[220,2],[255,2],[266,2],[296,2],[331,2],[389,2],[439,2],[1035,2],[1143,2],[2135,2],[2960,2],[3015,2],[3226,2],[3697,2],[3979,2],[4621,2],[5036,2],[6317,2]]},"504":{"position":[[22,2]]},"514":{"position":[[353,2],[451,2],[548,2]]},"516":{"position":[[48,2],[72,2]]},"703":{"position":[[7609,2]]},"803":{"position":[[18,2],[54,2],[85,2],[120,2],[135,2],[179,2],[220,2],[255,2],[266,2],[296,2],[331,2],[389,2],[439,2],[1035,2],[1143,2],[2135,2],[2960,2],[3015,2],[3226,2],[3697,2],[3979,2],[4621,2],[5036,2],[6317,2]]},"983":{"position":[[57,2]]},"992":{"position":[[113,2],[128,2],[251,2]]},"1005":{"position":[[5,2]]},"1145":{"position":[[17,2]]},"1147":{"position":[[10,2],[136,2],[153,2],[162,2]]},"1150":{"position":[[31,2]]},"1154":{"position":[[370,2],[481,2],[1096,2],[1109,2]]},"1197":{"position":[[15,2],[72,2],[152,2]]},"1218":{"position":[[90,2]]},"1224":{"position":[[0,2]]},"1226":{"position":[[9,2]]},"1233":{"position":[[21,2],[73,2]]},"1235":{"position":[[20,2],[69,2]]},"1241":{"position":[[14,2]]},"1243":{"position":[[34,2]]}}}],["命令行",{"_index":1444,"t":{"983":{"position":[[15,3]]},"1003":{"position":[[23,3]]},"1005":{"position":[[62,3]]},"1154":{"position":[[978,3]]}}}],["哈哈镜",{"_index":335,"t":{"23":{"position":[[7,3]]}}}],["哈希",{"_index":1244,"t":{"475":{"position":[[15,2]]},"480":{"position":[[119,2],[408,2],[499,2]]},"482":{"position":[[195,2],[447,2]]},"484":{"position":[[11,2]]},"486":{"position":[[2,2],[199,2],[245,2],[486,2]]},"488":{"position":[[42,2],[54,2]]},"490":{"position":[[32,2],[92,2],[135,2],[434,2]]}}}],["响应",{"_index":724,"t":{"172":{"position":[[21,2],[96,2]]},"174":{"position":[[136,2]]},"208":{"position":[[291,2]]},"307":{"position":[[515,2],[710,2],[1233,2]]},"312":{"position":[[704,2]]},"314":{"position":[[62,2],[155,2],[178,2],[1147,2]]},"316":{"position":[[2930,2],[3031,2]]},"657":{"position":[[21,2],[96,2]]},"659":{"position":[[136,2]]},"669":{"position":[[291,2]]},"794":{"position":[[515,2],[710,2],[1233,2]]},"799":{"position":[[704,2]]},"801":{"position":[[62,2],[155,2],[178,2],[1147,2]]},"803":{"position":[[2930,2],[3031,2]]},"1183":{"position":[[358,2]]},"1185":{"position":[[251,2],[334,2]]}}}],["哪个",{"_index":1338,"t":{"556":{"position":[[587,2]]}}}],["哲学",{"_index":1331,"t":{"552":{"position":[[49,2]]}}}],["唏嘘",{"_index":310,"t":{"21":{"position":[[57,2]]}}}],["唤醒",{"_index":1294,"t":{"519":{"position":[[77,2]]},"529":{"position":[[56,2]]},"531":{"position":[[24,2]]},"533":{"position":[[27,2]]},"536":{"position":[[106,2],[116,2]]},"540":{"position":[[53,2],[71,2],[106,2],[134,2]]},"544":{"position":[[56,2]]},"564":{"position":[[588,2]]}}}],["唯一",{"_index":269,"t":{"19":{"position":[[517,2]]},"94":{"position":[[15,2]]},"106":{"position":[[26,2]]},"108":{"position":[[10,2]]}}}],["善",{"_index":259,"t":{"19":{"position":[[483,1]]}}}],["善良",{"_index":131,"t":{"17":{"position":[[104,2]]}}}],["器",{"_index":688,"t":{"143":{"position":[[60,1]]},"145":{"position":[[27,1]]},"151":{"position":[[528,1],[536,1]]},"186":{"position":[[150,1]]},"192":{"position":[[52,1]]},"312":{"position":[[286,1]]},"314":{"position":[[374,1]]},"433":{"position":[[270,1]]},"437":{"position":[[24,1],[71,1],[155,1],[357,1],[423,1]]},"580":{"position":[[127,1]]},"608":{"position":[[60,1]]},"610":{"position":[[27,1]]},"616":{"position":[[528,1],[536,1]]},"691":{"position":[[150,1]]},"697":{"position":[[52,1]]},"799":{"position":[[286,1]]},"801":{"position":[[374,1]]},"918":{"position":[[270,1]]},"922":{"position":[[24,1],[71,1],[155,1],[357,1],[423,1]]}}}],["四个",{"_index":1650,"t":{"1197":{"position":[[156,2]]}}}],["回",{"_index":733,"t":{"172":{"position":[[95,1]]},"314":{"position":[[1057,1]]},"657":{"position":[[95,1]]},"801":{"position":[[1057,1]]},"1170":{"position":[[76,1]]}}}],["回去",{"_index":728,"t":{"172":{"position":[[57,2]]},"657":{"position":[[57,2]]}}}],["回复",{"_index":859,"t":{"208":{"position":[[97,2],[312,2]]},"307":{"position":[[1266,2]]},"669":{"position":[[97,2],[312,2]]},"794":{"position":[[1266,2]]}}}],["回应",{"_index":735,"t":{"176":{"position":[[285,2]]},"210":{"position":[[494,2]]},"661":{"position":[[285,2]]},"671":{"position":[[494,2]]}}}],["回报",{"_index":244,"t":{"19":{"position":[[406,2]]}}}],["回收",{"_index":1367,"t":{"580":{"position":[[4,2],[29,2],[125,2]]},"1201":{"position":[[25,2]]},"1203":{"position":[[171,2]]}}}],["因为",{"_index":927,"t":{"281":{"position":[[150,2]]},"360":{"position":[[356,2]]},"540":{"position":[[64,2]]},"806":{"position":[[150,2]]},"837":{"position":[[356,2]]},"1103":{"position":[[52,2]]},"1120":{"position":[[52,2]]},"1154":{"position":[[378,2],[508,2]]},"1197":{"position":[[163,2]]}}}],["因子",{"_index":1258,"t":{"480":{"position":[[521,2]]},"486":{"position":[[476,2]]},"490":{"position":[[155,2]]}}}],["因此",{"_index":92,"t":{"15":{"position":[[201,2]]},"97":{"position":[[145,2]]},"1165":{"position":[[250,2]]}}}],["困局",{"_index":236,"t":{"19":{"position":[[365,2]]}}}],["困难",{"_index":941,"t":{"286":{"position":[[127,2]]},"342":{"position":[[39,2]]},"384":{"position":[[29,2]]},"464":{"position":[[28,2]]},"789":{"position":[[39,2]]},"811":{"position":[[127,2]]},"869":{"position":[[29,2]]},"946":{"position":[[28,2]]}}}],["固定",{"_index":567,"t":{"118":{"position":[[91,2]]},"133":{"position":[[102,2]]},"192":{"position":[[31,2]]},"208":{"position":[[454,2]]},"228":{"position":[[72,2]]},"598":{"position":[[102,2]]},"626":{"position":[[91,2]]},"669":{"position":[[454,2]]},"697":{"position":[[31,2]]},"737":{"position":[[72,2]]}}}],["圣人",{"_index":258,"t":{"19":{"position":[[477,2],[505,2]]}}}],["在于",{"_index":43,"t":{"15":{"position":[[50,2]]},"19":{"position":[[563,2]]}}}],["地",{"_index":100,"t":{"15":{"position":[[226,1]]},"92":{"position":[[72,1]]},"316":{"position":[[132,1]]},"803":{"position":[[132,1]]}}}],["地区",{"_index":65,"t":{"15":{"position":[[114,2]]}}}],["地址",{"_index":538,"t":{"113":{"position":[[28,2]]},"158":{"position":[[143,2]]},"621":{"position":[[28,2]]},"643":{"position":[[143,2]]},"1070":{"position":[[291,2],[311,2]]}}}],["地方",{"_index":946,"t":{"293":{"position":[[7,2]]},"333":{"position":[[127,2]]},"780":{"position":[[127,2]]},"818":{"position":[[7,2]]}}}],["场景",{"_index":483,"t":{"99":{"position":[[160,2]]},"104":{"position":[[185,2]]},"106":{"position":[[2,2]]},"128":{"position":[[85,2],[104,2]]},"135":{"position":[[74,2]]},"382":{"position":[[89,2]]},"488":{"position":[[0,2]]},"516":{"position":[[205,2]]},"540":{"position":[[199,2]]},"542":{"position":[[158,2]]},"556":{"position":[[681,2]]},"564":{"position":[[26,2]]},"576":{"position":[[5,2]]},"600":{"position":[[74,2]]},"636":{"position":[[85,2],[104,2]]},"867":{"position":[[89,2]]},"966":{"position":[[31,2]]},"970":{"position":[[30,2]]},"1013":{"position":[[42,2]]},"1023":{"position":[[4,2]]},"1028":{"position":[[118,2],[227,2]]},"1078":{"position":[[36,2]]},"1103":{"position":[[145,2]]},"1120":{"position":[[145,2]]},"1125":{"position":[[101,2]]},"1145":{"position":[[102,2]]},"1165":{"position":[[261,2]]}}}],["均衡",{"_index":170,"t":{"19":{"position":[[137,2]]}}}],["坚信",{"_index":208,"t":{"19":{"position":[[252,2]]}}}],["垃圾",{"_index":1366,"t":{"580":{"position":[[2,2],[27,2],[123,2]]}}}],["型",{"_index":1033,"t":{"316":{"position":[[3696,1],[3978,1],[5610,1]]},"445":{"position":[[9,1]]},"803":{"position":[[3696,1],[3978,1],[5610,1]]},"927":{"position":[[9,1]]}}}],["型式",{"_index":1030,"t":{"316":{"position":[[2928,2]]},"803":{"position":[[2928,2]]}}}],["培训",{"_index":1480,"t":{"1028":{"position":[[154,2]]},"1193":{"position":[[127,2]]}}}],["基",{"_index":1079,"t":{"348":{"position":[[216,1]]},"857":{"position":[[216,1]]}}}],["基于",{"_index":592,"t":{"126":{"position":[[82,2]]},"340":{"position":[[280,2]]},"389":{"position":[[680,2]]},"634":{"position":[[82,2]]},"787":{"position":[[280,2]]},"874":{"position":[[680,2]]},"1193":{"position":[[160,2]]}}}],["基本",{"_index":71,"t":{"15":{"position":[[136,2]]},"113":{"position":[[15,2]]},"621":{"position":[[15,2]]},"1189":{"position":[[53,2]]}}}],["基础",{"_index":704,"t":{"151":{"position":[[0,2]]},"316":{"position":[[1141,2]]},"403":{"position":[[16,2]]},"408":{"position":[[67,2]]},"616":{"position":[[0,2]]},"803":{"position":[[1141,2]]},"888":{"position":[[16,2]]},"893":{"position":[[67,2]]},"1159":{"position":[[46,2]]}}}],["基类",{"_index":1082,"t":{"348":{"position":[[227,2]]},"360":{"position":[[66,2]]},"365":{"position":[[93,2]]},"367":{"position":[[78,2]]},"376":{"position":[[140,2]]},"837":{"position":[[66,2]]},"842":{"position":[[93,2]]},"844":{"position":[[78,2]]},"853":{"position":[[140,2]]},"857":{"position":[[227,2]]}}}],["堆",{"_index":1386,"t":{"580":{"position":[[542,1]]}}}],["堆栈",{"_index":1390,"t":{"582":{"position":[[74,2],[139,2],[165,2],[188,2],[539,2],[640,2]]},"589":{"position":[[138,2]]}}}],["塑造",{"_index":251,"t":{"19":{"position":[[446,2]]}}}],["填满",{"_index":661,"t":{"137":{"position":[[211,2]]},"151":{"position":[[194,2]]},"602":{"position":[[211,2]]},"616":{"position":[[194,2]]}}}],["增加",{"_index":281,"t":{"19":{"position":[[569,2]]},"126":{"position":[[45,2]]},"153":{"position":[[43,2]]},"158":{"position":[[2,2],[100,2],[139,2]]},"160":{"position":[[0,2],[42,2]]},"174":{"position":[[2,2],[134,2],[170,2],[396,2]]},"176":{"position":[[2,2],[405,2]]},"208":{"position":[[289,2]]},"220":{"position":[[1185,2]]},"228":{"position":[[379,2],[793,2]]},"230":{"position":[[2,2]]},"238":{"position":[[675,2],[1089,2]]},"247":{"position":[[5,2]]},"270":{"position":[[178,2]]},"272":{"position":[[248,2]]},"276":{"position":[[184,2]]},"452":{"position":[[17,2]]},"560":{"position":[[351,2],[452,2]]},"634":{"position":[[45,2]]},"638":{"position":[[43,2]]},"643":{"position":[[2,2],[100,2],[139,2]]},"645":{"position":[[0,2],[42,2]]},"659":{"position":[[2,2],[134,2],[170,2],[396,2]]},"661":{"position":[[2,2],[405,2]]},"669":{"position":[[289,2]]},"681":{"position":[[1185,2]]},"713":{"position":[[675,2],[1089,2]]},"722":{"position":[[5,2]]},"737":{"position":[[379,2],[793,2]]},"739":{"position":[[2,2]]},"755":{"position":[[178,2]]},"757":{"position":[[248,2]]},"761":{"position":[[184,2]]},"934":{"position":[[17,2]]},"964":{"position":[[39,2]]},"970":{"position":[[19,2]]},"1035":{"position":[[97,2]]}}}],["增多",{"_index":1226,"t":{"459":{"position":[[27,2]]},"941":{"position":[[27,2]]}}}],["增大",{"_index":1543,"t":{"1140":{"position":[[12,2]]}}}],["增强",{"_index":1006,"t":{"314":{"position":[[124,2]]},"382":{"position":[[52,2]]},"445":{"position":[[43,2]]},"801":{"position":[[124,2]]},"867":{"position":[[52,2]]},"927":{"position":[[43,2]]}}}],["增长",{"_index":224,"t":{"19":{"position":[[320,2],[439,2],[614,2]]},"580":{"position":[[150,2]]}}}],["声明",{"_index":1021,"t":{"316":{"position":[[194,2]]},"803":{"position":[[194,2]]}}}],["处",{"_index":1715,"t":{"1264":{"position":[[3,1]]}}}],["处在",{"_index":1695,"t":{"1233":{"position":[[362,2]]}}}],["处理",{"_index":583,"t":{"118":{"position":[[1278,2]]},"131":{"position":[[131,2]]},"133":{"position":[[167,2]]},"135":{"position":[[49,2]]},"145":{"position":[[30,2]]},"149":{"position":[[12,2]]},"158":{"position":[[6,2],[104,2]]},"184":{"position":[[865,2],[906,2],[1535,2],[1576,2]]},"196":{"position":[[3,2]]},"208":{"position":[[378,2],[591,2],[608,2],[1163,2]]},"214":{"position":[[307,2]]},"220":{"position":[[1203,2],[1223,2],[1240,2],[1838,2]]},"307":{"position":[[1250,2],[1335,2]]},"312":{"position":[[1243,2]]},"316":{"position":[[58,2],[162,2],[431,2],[1944,2]]},"338":{"position":[[358,2]]},"365":{"position":[[259,2],[472,2]]},"387":{"position":[[473,2]]},"389":{"position":[[285,2]]},"512":{"position":[[972,2]]},"546":{"position":[[16,2]]},"558":{"position":[[27,2]]},"596":{"position":[[131,2]]},"598":{"position":[[167,2]]},"600":{"position":[[49,2]]},"610":{"position":[[30,2]]},"614":{"position":[[12,2]]},"626":{"position":[[1278,2]]},"643":{"position":[[6,2],[104,2]]},"669":{"position":[[378,2],[591,2],[608,2],[1163,2]]},"675":{"position":[[307,2]]},"681":{"position":[[1203,2],[1223,2],[1240,2],[1838,2]]},"689":{"position":[[865,2],[906,2],[1535,2],[1576,2]]},"701":{"position":[[3,2]]},"785":{"position":[[358,2]]},"794":{"position":[[1250,2],[1335,2]]},"799":{"position":[[1243,2]]},"803":{"position":[[58,2],[162,2],[431,2],[1944,2]]},"842":{"position":[[259,2],[472,2]]},"872":{"position":[[473,2]]},"874":{"position":[[285,2]]},"966":{"position":[[13,2]]},"1025":{"position":[[143,2]]},"1028":{"position":[[93,2],[149,2]]},"1059":{"position":[[37,2],[52,2]]},"1061":{"position":[[1082,2]]},"1125":{"position":[[105,2]]},"1189":{"position":[[112,2]]}}}],["处理事件",{"_index":717,"t":{"158":{"position":[[307,4]]},"208":{"position":[[386,4]]},"643":{"position":[[307,4]]},"669":{"position":[[386,4]]}}}],["处理器",{"_index":786,"t":{"184":{"position":[[1417,3]]},"295":{"position":[[94,3]]},"316":{"position":[[257,3],[3228,3]]},"338":{"position":[[223,3]]},"411":{"position":[[374,3]]},"418":{"position":[[79,3]]},"689":{"position":[[1417,3]]},"785":{"position":[[223,3]]},"803":{"position":[[257,3],[3228,3]]},"820":{"position":[[94,3]]},"896":{"position":[[374,3]]},"903":{"position":[[79,3]]}}}],["处理结果",{"_index":725,"t":{"172":{"position":[[44,4]]},"657":{"position":[[44,4]]}}}],["处理错误",{"_index":1495,"t":{"1059":{"position":[[2,4]]}}}],["复制",{"_index":125,"t":{"17":{"position":[[70,2]]},"1154":{"position":[[1137,2]]}}}],["复杂",{"_index":294,"t":{"21":{"position":[[6,2]]},"126":{"position":[[73,2]]},"128":{"position":[[102,2]]},"304":{"position":[[62,2]]},"344":{"position":[[86,2]]},"540":{"position":[[192,2]]},"546":{"position":[[18,2]]},"634":{"position":[[73,2]]},"636":{"position":[[102,2]]},"791":{"position":[[86,2]]},"829":{"position":[[62,2]]},"1005":{"position":[[59,2]]},"1021":{"position":[[57,2]]},"1023":{"position":[[193,2]]},"1028":{"position":[[114,2]]}}}],["复杂度",{"_index":1161,"t":{"382":{"position":[[28,3]]},"867":{"position":[[28,3]]},"970":{"position":[[21,3]]}}}],["复杂性",{"_index":1087,"t":{"350":{"position":[[43,3],[213,3]]},"401":{"position":[[32,3]]},"859":{"position":[[43,3],[213,3]]},"886":{"position":[[32,3]]}}}],["复用",{"_index":1062,"t":{"342":{"position":[[56,2]]},"382":{"position":[[74,2],[93,2]]},"384":{"position":[[34,2]]},"789":{"position":[[56,2]]},"867":{"position":[[74,2],[93,2]]},"869":{"position":[[34,2]]}}}],["外置",{"_index":802,"t":{"188":{"position":[[21,2]]},"693":{"position":[[21,2]]}}}],["外部命令",{"_index":1278,"t":{"493":{"position":[[14,4]]},"495":{"position":[[21,4]]},"516":{"position":[[20,4],[200,4]]}}}],["多",{"_index":315,"t":{"21":{"position":[[87,1]]},"23":{"position":[[87,1]]},"106":{"position":[[69,1]]},"133":{"position":[[123,1]]},"192":{"position":[[76,1]]},"260":{"position":[[80,1]]},"283":{"position":[[39,1]]},"286":{"position":[[13,1]]},"302":{"position":[[38,1]]},"307":{"position":[[1285,1]]},"352":{"position":[[10,1]]},"382":{"position":[[88,1]]},"387":{"position":[[27,1]]},"396":{"position":[[13,1]]},"544":{"position":[[52,1]]},"548":{"position":[[11,1]]},"580":{"position":[[218,1]]},"593":{"position":[[57,1]]},"598":{"position":[[123,1]]},"697":{"position":[[76,1]]},"745":{"position":[[80,1]]},"794":{"position":[[1285,1]]},"808":{"position":[[39,1]]},"811":{"position":[[13,1]]},"827":{"position":[[38,1]]},"861":{"position":[[10,1]]},"867":{"position":[[88,1]]},"872":{"position":[[27,1]]},"881":{"position":[[13,1]]},"1070":{"position":[[498,1]]},"1154":{"position":[[950,1]]}}}],["多个",{"_index":473,"t":{"94":{"position":[[55,2],[69,2]]},"104":{"position":[[215,2],[229,2]]},"108":{"position":[[84,2]]},"143":{"position":[[36,2]]},"281":{"position":[[113,2]]},"288":{"position":[[6,2]]},"396":{"position":[[126,2]]},"431":{"position":[[21,2]]},"519":{"position":[[33,2]]},"536":{"position":[[111,2]]},"556":{"position":[[12,2],[354,2],[686,2]]},"558":{"position":[[17,2]]},"560":{"position":[[2,2]]},"562":{"position":[[1,2],[445,2]]},"564":{"position":[[31,2]]},"566":{"position":[[17,2]]},"570":{"position":[[334,2]]},"572":{"position":[[21,2]]},"576":{"position":[[43,2],[192,2],[285,2],[415,2]]},"608":{"position":[[36,2]]},"806":{"position":[[113,2]]},"813":{"position":[[6,2]]},"881":{"position":[[126,2]]},"916":{"position":[[21,2]]},"998":{"position":[[159,2]]}}}],["多元",{"_index":18,"t":{"13":{"position":[[17,2]]}}}],["多处",{"_index":1061,"t":{"342":{"position":[[51,2]]},"789":{"position":[[51,2]]}}}],["多少",{"_index":1349,"t":{"566":{"position":[[394,2]]}}}],["多次",{"_index":469,"t":{"94":{"position":[[28,2]]},"104":{"position":[[167,2]]},"108":{"position":[[47,2]]}}}],["多用户",{"_index":1579,"t":{"1154":{"position":[[946,3]]}}}],["多种",{"_index":1003,"t":{"314":{"position":[[101,2]]},"316":{"position":[[705,2]]},"578":{"position":[[43,2]]},"801":{"position":[[101,2]]},"803":{"position":[[705,2]]}}}],["多级",{"_index":706,"t":{"151":{"position":[[530,2]]},"616":{"position":[[530,2]]}}}],["多线程",{"_index":1668,"t":{"1210":{"position":[[60,3],[67,3]]},"1259":{"position":[[1,3]]}}}],["大",{"_index":27,"t":{"15":{"position":[[0,1]]},"19":{"position":[[49,1]]},"113":{"position":[[104,1],[135,1]]},"281":{"position":[[127,1]]},"304":{"position":[[82,1]]},"348":{"position":[[304,1]]},"372":{"position":[[3,1]]},"522":{"position":[[100,1]]},"580":{"position":[[204,1]]},"621":{"position":[[104,1],[135,1]]},"806":{"position":[[127,1]]},"829":{"position":[[82,1]]},"849":{"position":[[3,1]]},"857":{"position":[[304,1]]},"1008":{"position":[[474,1]]},"1021":{"position":[[9,1]]},"1023":{"position":[[166,1]]},"1025":{"position":[[60,1]]},"1059":{"position":[[45,1]]}}}],["大不相同",{"_index":313,"t":{"21":{"position":[[65,4]]}}}],["大于",{"_index":1124,"t":{"365":{"position":[[248,2]]},"842":{"position":[[248,2]]},"1070":{"position":[[43,2]]}}}],["大写",{"_index":1514,"t":{"1070":{"position":[[271,2]]}}}],["大多",{"_index":297,"t":{"21":{"position":[[15,2]]}}}],["大多数",{"_index":134,"t":{"19":{"position":[[1,3]]},"540":{"position":[[159,3]]},"1103":{"position":[[142,3]]},"1120":{"position":[[142,3]]}}}],["大小",{"_index":1299,"t":{"522":{"position":[[88,2]]},"582":{"position":[[190,2]]}}}],["大括号",{"_index":1443,"t":{"980":{"position":[[121,3]]}}}],["大规模",{"_index":747,"t":{"180":{"position":[[74,3]]},"685":{"position":[[74,3]]}}}],["大部分",{"_index":1476,"t":{"1028":{"position":[[95,3]]}}}],["大顺军",{"_index":349,"t":{"23":{"position":[[58,3]]}}}],["天然",{"_index":832,"t":{"198":{"position":[[1988,2]]},"304":{"position":[[45,2]]},"703":{"position":[[1988,2]]},"829":{"position":[[45,2]]}}}],["太",{"_index":936,"t":{"286":{"position":[[12,1]]},"302":{"position":[[37,1]]},"387":{"position":[[26,1]]},"396":{"position":[[12,1]]},"811":{"position":[[12,1]]},"827":{"position":[[37,1]]},"872":{"position":[[26,1]]},"881":{"position":[[12,1]]}}}],["失效",{"_index":1560,"t":{"1154":{"position":[[375,2]]}}}],["失败",{"_index":393,"t":{"23":{"position":[[223,2]]},"972":{"position":[[80,2]]},"1093":{"position":[[177,2],[301,2]]},"1095":{"position":[[197,2]]},"1099":{"position":[[186,2],[384,2]]},"1110":{"position":[[177,2],[301,2]]},"1112":{"position":[[197,2]]},"1116":{"position":[[186,2],[384,2]]},"1173":{"position":[[213,2],[316,2],[471,2]]},"1178":{"position":[[240,2],[343,2],[494,2]]},"1200":{"position":[[200,2]]},"1201":{"position":[[177,2]]}}}],["奉",{"_index":268,"t":{"19":{"position":[[515,1]]}}}],["契约",{"_index":1109,"t":{"357":{"position":[[42,2],[60,2]]},"834":{"position":[[42,2],[60,2]]}}}],["套",{"_index":1210,"t":{"442":{"position":[[187,1]]}}}],["奴隶",{"_index":368,"t":{"23":{"position":[[120,2]]}}}],["好帮手",{"_index":1179,"t":{"403":{"position":[[62,3]]},"888":{"position":[[62,3]]}}}],["好景不长",{"_index":37,"t":{"15":{"position":[[29,4]]}}}],["如下",{"_index":1203,"t":{"442":{"position":[[2,2],[167,2]]},"490":{"position":[[140,2]]},"584":{"position":[[459,2]]},"972":{"position":[[4,2],[89,2]]}}}],["如今",{"_index":311,"t":{"21":{"position":[[60,2]]},"1208":{"position":[[91,2]]}}}],["如何",{"_index":1482,"t":{"1028":{"position":[[162,2]]},"1189":{"position":[[4,2],[110,2],[219,2],[293,2]]}}}],["如同",{"_index":120,"t":{"17":{"position":[[56,2]]},"23":{"position":[[3,2]]}}}],["如果",{"_index":84,"t":{"15":{"position":[[177,2]]},"94":{"position":[[20,2]]},"108":{"position":[[15,2],[69,2]]},"133":{"position":[[150,2],[171,2]]},"184":{"position":[[1740,2]]},"270":{"position":[[188,2],[299,2]]},"310":{"position":[[112,2],[202,2]]},"355":{"position":[[85,2]]},"482":{"position":[[452,2]]},"486":{"position":[[0,2],[207,2],[472,2]]},"556":{"position":[[617,2]]},"560":{"position":[[0,2]]},"576":{"position":[[144,2],[189,2],[228,2],[334,2],[371,2]]},"598":{"position":[[150,2],[171,2]]},"689":{"position":[[1740,2]]},"755":{"position":[[188,2],[299,2]]},"797":{"position":[[112,2],[202,2]]},"832":{"position":[[85,2]]},"1005":{"position":[[53,2]]},"1147":{"position":[[156,2]]},"1154":{"position":[[356,2],[463,2],[842,2],[1038,2]]},"1163":{"position":[[0,2]]},"1165":{"position":[[183,2]]}}}],["妥善",{"_index":1638,"t":{"1193":{"position":[[69,2]]}}}],["始终",{"_index":1494,"t":{"1059":{"position":[[0,2]]}}}],["婚姻",{"_index":296,"t":{"21":{"position":[[13,2],[39,2]]}}}],["媒妁之言",{"_index":300,"t":{"21":{"position":[[23,4]]}}}],["子",{"_index":1078,"t":{"348":{"position":[[204,1]]},"355":{"position":[[91,1]]},"357":{"position":[[5,1],[26,1],[47,1]]},"376":{"position":[[37,1],[117,1]]},"832":{"position":[[91,1]]},"834":{"position":[[5,1],[26,1],[47,1]]},"853":{"position":[[37,1],[117,1]]},"857":{"position":[[204,1]]},"983":{"position":[[56,1]]},"992":{"position":[[112,1],[127,1],[250,1]]},"1005":{"position":[[4,1]]},"1095":{"position":[[8,1]]},"1112":{"position":[[8,1]]},"1200":{"position":[[174,1],[272,1],[351,1],[431,1]]},"1201":{"position":[[12,1],[27,1],[151,1],[249,1],[325,1],[396,1],[540,1]]},"1203":{"position":[[179,1],[472,1],[568,1],[580,1],[625,1],[643,1],[733,1]]},"1233":{"position":[[151,1],[364,1]]}}}],["子串",{"_index":1512,"t":{"1070":{"position":[[197,2],[596,2]]}}}],["子类",{"_index":1114,"t":{"360":{"position":[[197,2]]},"365":{"position":[[272,2]]},"367":{"position":[[229,2]]},"837":{"position":[[197,2]]},"842":{"position":[[272,2]]},"844":{"position":[[229,2]]}}}],["字",{"_index":809,"t":{"190":{"position":[[58,1]]},"194":{"position":[[151,1]]},"429":{"position":[[208,1]]},"695":{"position":[[58,1]]},"699":{"position":[[151,1]]},"914":{"position":[[208,1]]},"964":{"position":[[50,1],[61,1]]},"1028":{"position":[[134,1]]},"1059":{"position":[[13,1]]},"1064":{"position":[[35,1]]},"1070":{"position":[[17,1],[612,1]]},"1125":{"position":[[224,1],[240,1]]},"1136":{"position":[[3,1],[275,1]]},"1142":{"position":[[90,1]]},"1197":{"position":[[102,1],[111,1]]}}}],["字母",{"_index":1511,"t":{"1070":{"position":[[161,2],[176,2]]}}}],["字符",{"_index":1519,"t":{"1070":{"position":[[456,2],[483,2],[501,2],[539,2],[575,2]]}}}],["字符串",{"_index":428,"t":{"48":{"position":[[2,3]]},"71":{"position":[[1,3]]},"78":{"position":[[2,3]]},"85":{"position":[[2,3]]},"208":{"position":[[380,3]]},"220":{"position":[[231,3]]},"512":{"position":[[975,3]]},"669":{"position":[[380,3]]},"681":{"position":[[231,3]]},"1070":{"position":[[69,3],[90,3],[436,3]]},"1072":{"position":[[14,3]]}}}],["字节",{"_index":902,"t":{"250":{"position":[[307,2]]},"254":{"position":[[72,2]]},"263":{"position":[[71,2]]},"725":{"position":[[307,2]]},"729":{"position":[[72,2]]},"748":{"position":[[71,2]]},"1070":{"position":[[499,2]]}}}],["存储",{"_index":885,"t":{"228":{"position":[[320,2]]},"263":{"position":[[0,2]]},"276":{"position":[[188,2]]},"367":{"position":[[68,2]]},"374":{"position":[[42,2],[48,2],[52,2]]},"389":{"position":[[5,2]]},"425":{"position":[[38,2]]},"482":{"position":[[192,2]]},"484":{"position":[[14,2]]},"488":{"position":[[10,2]]},"490":{"position":[[125,2]]},"737":{"position":[[320,2]]},"748":{"position":[[0,2]]},"761":{"position":[[188,2]]},"844":{"position":[[68,2]]},"851":{"position":[[42,2],[48,2],[52,2]]},"874":{"position":[[5,2]]},"910":{"position":[[38,2]]},"1061":{"position":[[938,2],[1113,2]]},"1136":{"position":[[17,2]]},"1154":{"position":[[912,2]]}}}],["存储用户",{"_index":1245,"t":{"475":{"position":[[23,4]]},"488":{"position":[[15,4]]}}}],["存储系统",{"_index":1144,"t":{"374":{"position":[[35,4]]},"851":{"position":[[35,4]]}}}],["存在",{"_index":74,"t":{"15":{"position":[[148,2]]},"23":{"position":[[240,2]]},"92":{"position":[[50,2]]},"403":{"position":[[104,2]]},"888":{"position":[[104,2]]}}}],["存放",{"_index":626,"t":{"133":{"position":[[34,2]]},"598":{"position":[[34,2]]}}}],["孤儿",{"_index":1641,"t":{"1195":{"position":[[0,2]]}}}],["孤儿院",{"_index":1653,"t":{"1200":{"position":[[24,3]]}}}],["孩子",{"_index":303,"t":{"21":{"position":[[33,2],[76,2],[83,2],[130,2]]}}}],["它们",{"_index":456,"t":{"92":{"position":[[45,2],[59,2]]},"281":{"position":[[99,2]]},"283":{"position":[[56,2]]},"302":{"position":[[15,2]]},"304":{"position":[[25,2]]},"348":{"position":[[213,2],[294,2]]},"806":{"position":[[99,2]]},"808":{"position":[[56,2]]},"827":{"position":[[15,2]]},"829":{"position":[[25,2]]},"857":{"position":[[213,2],[294,2]]},"1154":{"position":[[338,2],[380,2],[510,2]]}}}],["安全",{"_index":63,"t":{"15":{"position":[[108,2]]},"200":{"position":[[111,2]]},"202":{"position":[[39,2]]},"312":{"position":[[8,2],[132,2]]},"316":{"position":[[3025,2]]},"475":{"position":[[10,2]]},"480":{"position":[[488,2]]},"488":{"position":[[13,2]]},"550":{"position":[[46,2]]},"570":{"position":[[348,2]]},"576":{"position":[[16,2],[178,2]]},"705":{"position":[[111,2]]},"707":{"position":[[39,2]]},"799":{"position":[[8,2],[132,2]]},"803":{"position":[[3025,2]]},"1167":{"position":[[68,2]]}}}],["安全性",{"_index":1594,"t":{"1165":{"position":[[43,3],[129,3],[255,3]]},"1167":{"position":[[91,3],[118,3]]},"1170":{"position":[[127,3]]},"1191":{"position":[[193,3]]}}}],["安全措施",{"_index":1596,"t":{"1165":{"position":[[91,4]]}}}],["安装",{"_index":1252,"t":{"477":{"position":[[22,2]]},"1011":{"position":[[0,2]]},"1015":{"position":[[0,2]]},"1019":{"position":[[0,2]]},"1083":{"position":[[22,2]]},"1088":{"position":[[22,2]]},"1154":{"position":[[1102,2],[1121,2]]}}}],["完",{"_index":1314,"t":{"538":{"position":[[529,1]]}}}],["完全",{"_index":432,"t":{"52":{"position":[[9,2]]},"357":{"position":[[12,2]]},"387":{"position":[[533,2]]},"834":{"position":[[12,2]]},"872":{"position":[[533,2]]},"1165":{"position":[[72,2]]}}}],["完成",{"_index":996,"t":{"312":{"position":[[1245,2]]},"514":{"position":[[550,2]]},"554":{"position":[[104,2],[214,2]]},"560":{"position":[[164,2],[260,2],[411,2],[431,2]]},"799":{"position":[[1245,2]]},"968":{"position":[[389,2]]},"1001":{"position":[[279,2]]},"1224":{"position":[[197,2]]}}}],["完整",{"_index":599,"t":{"128":{"position":[[132,2]]},"164":{"position":[[178,2]]},"166":{"position":[[74,2]]},"178":{"position":[[297,2]]},"214":{"position":[[494,2]]},"222":{"position":[[484,2]]},"232":{"position":[[593,2]]},"244":{"position":[[1409,2]]},"256":{"position":[[999,2]]},"278":{"position":[[995,2]]},"636":{"position":[[132,2]]},"649":{"position":[[178,2]]},"651":{"position":[[74,2]]},"663":{"position":[[297,2]]},"675":{"position":[[494,2]]},"683":{"position":[[484,2]]},"719":{"position":[[1409,2]]},"731":{"position":[[999,2]]},"741":{"position":[[593,2]]},"763":{"position":[[995,2]]}}}],["完毕",{"_index":1346,"t":{"560":{"position":[[21,2],[549,2]]}}}],["完美",{"_index":1601,"t":{"1167":{"position":[[65,2]]}}}],["宏",{"_index":1693,"t":{"1230":{"position":[[393,1]]}}}],["宗教",{"_index":15,"t":{"13":{"position":[[11,2]]}}}],["官方",{"_index":1435,"t":{"972":{"position":[[213,2]]},"1008":{"position":[[426,2]]},"1023":{"position":[[38,2]]},"1081":{"position":[[27,2]]},"1086":{"position":[[27,2]]},"1105":{"position":[[0,2]]},"1122":{"position":[[0,2]]},"1266":{"position":[[7,2]]}}}],["定",{"_index":645,"t":{"133":{"position":[[191,1]]},"598":{"position":[[191,1]]}}}],["定义",{"_index":378,"t":{"23":{"position":[[156,2],[173,2]]},"92":{"position":[[31,2]]},"94":{"position":[[13,2],[53,2]]},"97":{"position":[[105,2]]},"99":{"position":[[99,2],[190,2],[212,2]]},"102":{"position":[[122,2]]},"104":{"position":[[169,2],[247,2]]},"108":{"position":[[21,2],[49,2]]},"118":{"position":[[69,2],[332,2]]},"158":{"position":[[175,2]]},"174":{"position":[[46,2]]},"184":{"position":[[208,2]]},"208":{"position":[[0,2],[91,2],[201,2],[432,2]]},"220":{"position":[[0,2],[50,2],[333,2]]},"228":{"position":[[0,2],[50,2],[249,2]]},"293":{"position":[[9,2]]},"304":{"position":[[70,2]]},"316":{"position":[[183,2]]},"326":{"position":[[3,2]]},"333":{"position":[[7,2]]},"344":{"position":[[40,2],[137,2]]},"360":{"position":[[3,2]]},"429":{"position":[[6,2]]},"433":{"position":[[14,2]]},"626":{"position":[[69,2],[332,2]]},"643":{"position":[[175,2]]},"659":{"position":[[46,2]]},"669":{"position":[[0,2],[91,2],[201,2],[432,2]]},"681":{"position":[[0,2],[50,2],[333,2]]},"689":{"position":[[208,2]]},"737":{"position":[[0,2],[50,2],[249,2]]},"773":{"position":[[3,2]]},"780":{"position":[[7,2]]},"791":{"position":[[40,2],[137,2]]},"803":{"position":[[183,2]]},"818":{"position":[[9,2]]},"829":{"position":[[70,2]]},"837":{"position":[[3,2]]},"914":{"position":[[6,2]]},"918":{"position":[[14,2]]},"980":{"position":[[13,2]]},"988":{"position":[[45,2]]},"992":{"position":[[125,2],[248,2]]},"1061":{"position":[[1740,2],[1788,2],[1878,2]]}}}],["定制",{"_index":1479,"t":{"1028":{"position":[[146,2]]}}}],["定时",{"_index":662,"t":{"137":{"position":[[276,2]]},"314":{"position":[[108,2]]},"602":{"position":[[276,2]]},"801":{"position":[[108,2]]}}}],["定期",{"_index":705,"t":{"151":{"position":[[261,2]]},"616":{"position":[[261,2]]}}}],["宝贵",{"_index":25,"t":{"13":{"position":[[47,2]]}}}],["实体",{"_index":183,"t":{"19":{"position":[[175,2]]},"348":{"position":[[111,2]]},"406":{"position":[[77,2]]},"857":{"position":[[111,2]]},"891":{"position":[[77,2]]}}}],["实例",{"_index":577,"t":{"118":{"position":[[427,2]]},"626":{"position":[[427,2]]},"1125":{"position":[[246,2],[259,2]]}}}],["实时性",{"_index":679,"t":{"141":{"position":[[79,3]]},"606":{"position":[[79,3]]}}}],["实现",{"_index":78,"t":{"15":{"position":[[157,2]]},"126":{"position":[[19,2]]},"141":{"position":[[26,2]]},"143":{"position":[[1,2]]},"160":{"position":[[10,2],[52,2]]},"170":{"position":[[20,2]]},"176":{"position":[[415,2]]},"182":{"position":[[3,2]]},"184":{"position":[[24,2],[76,2],[87,2],[136,2],[287,2],[311,2],[462,2],[982,2]]},"198":{"position":[[2019,2]]},"200":{"position":[[6,2]]},"230":{"position":[[8,2]]},"238":{"position":[[321,2]]},"240":{"position":[[150,2]]},"250":{"position":[[15,2],[79,2],[250,2]]},"252":{"position":[[0,2]]},"270":{"position":[[293,2],[303,2]]},"281":{"position":[[160,2]]},"283":{"position":[[45,2]]},"286":{"position":[[120,2],[334,2],[383,2]]},"288":{"position":[[185,2]]},"302":{"position":[[4,2],[13,2]]},"316":{"position":[[42,2],[153,2],[223,2],[709,2],[818,2]]},"319":{"position":[[166,2]]},"321":{"position":[[13,2]]},"324":{"position":[[198,2]]},"326":{"position":[[69,2],[404,2]]},"333":{"position":[[120,2]]},"336":{"position":[[263,2]]},"338":{"position":[[226,2]]},"344":{"position":[[15,2],[33,2],[51,2],[146,2]]},"348":{"position":[[144,2]]},"360":{"position":[[64,2],[195,2]]},"365":{"position":[[95,2],[274,2]]},"367":{"position":[[80,2],[231,2]]},"376":{"position":[[34,2]]},"403":{"position":[[38,2],[56,2]]},"406":{"position":[[153,2]]},"411":{"position":[[83,2],[234,2]]},"416":{"position":[[77,2]]},"429":{"position":[[127,2],[167,2],[511,2]]},"435":{"position":[[16,2],[50,2]]},"439":{"position":[[31,2]]},"445":{"position":[[84,2]]},"448":{"position":[[67,2]]},"450":{"position":[[84,2]]},"455":{"position":[[76,2],[354,2]]},"457":{"position":[[128,2],[219,2],[363,2]]},"544":{"position":[[93,2]]},"548":{"position":[[39,2]]},"606":{"position":[[26,2]]},"608":{"position":[[1,2]]},"634":{"position":[[19,2]]},"645":{"position":[[10,2],[52,2]]},"655":{"position":[[20,2]]},"661":{"position":[[415,2]]},"687":{"position":[[3,2]]},"689":{"position":[[24,2],[76,2],[87,2],[136,2],[287,2],[311,2],[462,2],[982,2]]},"703":{"position":[[2019,2]]},"705":{"position":[[6,2]]},"713":{"position":[[321,2]]},"715":{"position":[[150,2]]},"725":{"position":[[15,2],[79,2],[250,2]]},"727":{"position":[[0,2]]},"739":{"position":[[8,2]]},"755":{"position":[[293,2],[303,2]]},"766":{"position":[[166,2]]},"768":{"position":[[13,2]]},"771":{"position":[[198,2]]},"773":{"position":[[69,2],[404,2]]},"780":{"position":[[120,2]]},"783":{"position":[[263,2]]},"785":{"position":[[226,2]]},"791":{"position":[[15,2],[33,2],[51,2],[146,2]]},"803":{"position":[[42,2],[153,2],[223,2],[709,2],[818,2]]},"806":{"position":[[160,2]]},"808":{"position":[[45,2]]},"811":{"position":[[120,2],[334,2],[383,2]]},"813":{"position":[[185,2]]},"827":{"position":[[4,2],[13,2]]},"837":{"position":[[64,2],[195,2]]},"842":{"position":[[95,2],[274,2]]},"844":{"position":[[80,2],[231,2]]},"853":{"position":[[34,2]]},"857":{"position":[[144,2]]},"888":{"position":[[38,2],[56,2]]},"891":{"position":[[153,2]]},"896":{"position":[[83,2],[234,2]]},"901":{"position":[[77,2]]},"914":{"position":[[127,2],[167,2],[511,2]]},"920":{"position":[[16,2],[50,2]]},"924":{"position":[[31,2]]},"927":{"position":[[84,2]]},"930":{"position":[[67,2]]},"932":{"position":[[84,2]]},"937":{"position":[[76,2],[354,2]]},"939":{"position":[[128,2],[219,2],[363,2]]},"1028":{"position":[[166,2],[206,2]]},"1035":{"position":[[2,2],[49,2],[90,2],[104,2]]},"1049":{"position":[[24,2]]},"1061":{"position":[[949,2],[1049,2],[1264,2],[1447,2],[1566,2],[2076,2]]},"1125":{"position":[[91,2]]},"1159":{"position":[[48,2]]},"1193":{"position":[[50,2],[158,2]]},"1241":{"position":[[26,2]]},"1262":{"position":[[15,2]]}}}],["实现目标",{"_index":1031,"t":{"316":{"position":[[2954,4]]},"803":{"position":[[2954,4]]}}}],["实用功能",{"_index":1364,"t":{"578":{"position":[[45,4]]}}}],["实践",{"_index":844,"t":{"202":{"position":[[41,2]]},"439":{"position":[[50,2]]},"707":{"position":[[41,2]]},"924":{"position":[[50,2]]}}}],["实际",{"_index":179,"t":{"19":{"position":[[166,2]]},"283":{"position":[[58,2]]},"316":{"position":[[381,2]]},"803":{"position":[[381,2]]},"808":{"position":[[58,2]]},"1061":{"position":[[2336,2]]},"1131":{"position":[[361,2]]}}}],["实际上",{"_index":1692,"t":{"1230":{"position":[[387,3]]}}}],["客户端",{"_index":920,"t":{"281":{"position":[[89,3]]},"283":{"position":[[12,3],[48,3]]},"298":{"position":[[181,3],[277,3]]},"302":{"position":[[39,3]]},"304":{"position":[[15,3]]},"348":{"position":[[285,3]]},"372":{"position":[[72,3]]},"806":{"position":[[89,3]]},"808":{"position":[[12,3],[48,3]]},"823":{"position":[[181,3],[277,3]]},"827":{"position":[[39,3]]},"829":{"position":[[15,3]]},"849":{"position":[[72,3]]},"857":{"position":[[285,3]]},"1189":{"position":[[223,3]]},"1193":{"position":[[96,3],[186,3]]}}}],["家庭",{"_index":292,"t":{"21":{"position":[[0,2]]}}}],["容器",{"_index":625,"t":{"133":{"position":[[31,2]]},"598":{"position":[[31,2]]},"1159":{"position":[[40,2],[55,2]]},"1165":{"position":[[268,2]]},"1167":{"position":[[77,2]]},"1191":{"position":[[0,2],[27,2]]}}}],["容易",{"_index":1162,"t":{"382":{"position":[[67,2]]},"867":{"position":[[67,2]]}}}],["容纳",{"_index":636,"t":{"133":{"position":[[126,2]]},"598":{"position":[[126,2]]}}}],["容量",{"_index":624,"t":{"133":{"position":[[17,2],[137,2]]},"598":{"position":[[17,2],[137,2]]}}}],["寄存器",{"_index":1682,"t":{"1230":{"position":[[27,3],[56,3],[93,3],[124,3],[133,3],[168,3],[204,3],[240,3],[325,3],[340,3],[415,3]]}}}],["寄生",{"_index":115,"t":{"17":{"position":[[39,2]]}}}],["密不可分",{"_index":240,"t":{"19":{"position":[[383,4]]}}}],["密码",{"_index":1243,"t":{"475":{"position":[[13,2],[27,2]]},"480":{"position":[[410,2],[501,2]]},"482":{"position":[[203,2],[441,2],[454,2]]},"484":{"position":[[3,2]]},"486":{"position":[[4,2],[247,2]]},"488":{"position":[[8,2],[19,2],[29,2],[47,2]]},"490":{"position":[[34,2],[72,2],[133,2],[438,2]]},"1061":{"position":[[870,2]]}}}],["密钥",{"_index":905,"t":{"254":{"position":[[76,2]]},"729":{"position":[[76,2]]}}}],["富足",{"_index":256,"t":{"19":{"position":[[468,2]]}}}],["对",{"_index":80,"t":{"15":{"position":[[164,1]]},"17":{"position":[[89,1]]},"19":{"position":[[0,1],[209,1]]},"21":{"position":[[35,1]]},"316":{"position":[[341,1]]},"348":{"position":[[125,1],[131,1]]},"350":{"position":[[84,1]]},"406":{"position":[[91,1],[97,1]]},"408":{"position":[[0,1],[26,1]]},"411":{"position":[[380,1]]},"803":{"position":[[341,1]]},"857":{"position":[[125,1],[131,1]]},"859":{"position":[[84,1]]},"891":{"position":[[91,1],[97,1]]},"893":{"position":[[0,1],[26,1]]},"896":{"position":[[380,1]]},"1028":{"position":[[128,1],[208,1]]},"1059":{"position":[[10,1],[44,1]]},"1061":{"position":[[1069,1]]}}}],["对于",{"_index":673,"t":{"141":{"position":[[40,2]]},"401":{"position":[[0,2],[10,2]]},"546":{"position":[[52,2]]},"568":{"position":[[0,2]]},"606":{"position":[[40,2]]},"886":{"position":[[0,2],[10,2]]},"1154":{"position":[[756,2],[942,2],[963,2]]},"1165":{"position":[[252,2]]}}}],["对应",{"_index":1339,"t":{"556":{"position":[[607,2]]},"582":{"position":[[127,2]]},"957":{"position":[[23,2]]},"1193":{"position":[[183,2]]}}}],["对比",{"_index":1458,"t":{"1008":{"position":[[417,2]]},"1189":{"position":[[291,2]]}}}],["对称",{"_index":904,"t":{"254":{"position":[[74,2]]},"729":{"position":[[74,2]]}}}],["对象",{"_index":1012,"t":{"316":{"position":[[90,2],[268,2],[334,2],[386,2],[391,2]]},"329":{"position":[[13,2]]},"350":{"position":[[13,2],[80,2],[87,2]]},"355":{"position":[[104,2],[116,2]]},"370":{"position":[[11,2]]},"445":{"position":[[19,2]]},"776":{"position":[[13,2]]},"803":{"position":[[90,2],[268,2],[334,2],[386,2],[391,2]]},"832":{"position":[[104,2],[116,2]]},"847":{"position":[[11,2]]},"859":{"position":[[13,2],[80,2],[87,2]]},"927":{"position":[[19,2]]},"1035":{"position":[[28,2],[73,2]]},"1059":{"position":[[46,2]]}}}],["寻求",{"_index":96,"t":{"15":{"position":[[217,2]]}}}],["导入",{"_index":901,"t":{"250":{"position":[[82,2],[2979,2]]},"260":{"position":[[62,2]]},"270":{"position":[[182,2],[274,2],[282,2]]},"725":{"position":[[82,2],[2979,2]]},"745":{"position":[[62,2]]},"755":{"position":[[182,2],[274,2],[282,2]]}}}],["导出",{"_index":900,"t":{"250":{"position":[[18,2]]},"260":{"position":[[19,2]]},"272":{"position":[[252,2]]},"725":{"position":[[18,2]]},"745":{"position":[[19,2]]},"757":{"position":[[252,2]]}}}],["导致",{"_index":57,"t":{"15":{"position":[[93,2]]},"312":{"position":[[91,2]]},"376":{"position":[[80,2]]},"401":{"position":[[26,2]]},"442":{"position":[[468,2]]},"593":{"position":[[50,2],[114,2]]},"799":{"position":[[91,2]]},"853":{"position":[[80,2]]},"886":{"position":[[26,2]]}}}],["封装",{"_index":974,"t":{"307":{"position":[[1297,2]]},"312":{"position":[[102,2]]},"316":{"position":[[87,2],[229,2],[448,2]]},"542":{"position":[[0,2]]},"794":{"position":[[1297,2]]},"799":{"position":[[102,2]]},"803":{"position":[[87,2],[229,2],[448,2]]}}}],["将",{"_index":327,"t":{"21":{"position":[[137,1]]},"23":{"position":[[95,1],[124,1],[153,1]]},"34":{"position":[[7,1]]},"172":{"position":[[43,1]]},"188":{"position":[[3,1]]},"307":{"position":[[1283,1]]},"316":{"position":[[50,1],[84,1],[445,1]]},"321":{"position":[[28,1]]},"348":{"position":[[303,1]]},"350":{"position":[[151,1]]},"389":{"position":[[721,1]]},"445":{"position":[[18,1]]},"578":{"position":[[53,1]]},"580":{"position":[[34,1],[106,1]]},"657":{"position":[[43,1]]},"693":{"position":[[3,1]]},"768":{"position":[[28,1]]},"794":{"position":[[1283,1]]},"803":{"position":[[50,1],[84,1],[445,1]]},"857":{"position":[[303,1]]},"859":{"position":[[151,1]]},"874":{"position":[[721,1]]},"927":{"position":[[18,1]]},"1061":{"position":[[1845,1],[1913,1]]},"1145":{"position":[[22,1]]},"1147":{"position":[[19,1],[41,1],[168,1]]},"1150":{"position":[[33,1]]},"1154":{"position":[[1055,1]]},"1167":{"position":[[18,1]]},"1264":{"position":[[0,1]]}}}],["小于",{"_index":1264,"t":{"486":{"position":[[226,2]]},"1070":{"position":[[56,2]]}}}],["小写",{"_index":1513,"t":{"1070":{"position":[[255,2]]}}}],["小国寡民",{"_index":103,"t":{"17":{"position":[[0,4]]}}}],["小型",{"_index":1177,"t":{"401":{"position":[[5,2]]},"886":{"position":[[5,2]]}}}],["小时",{"_index":1302,"t":{"522":{"position":[[101,2]]}}}],["小规模",{"_index":1224,"t":{"452":{"position":[[9,3]]},"934":{"position":[[9,3]]}}}],["小麦",{"_index":121,"t":{"17":{"position":[[61,2]]}}}],["少",{"_index":1611,"t":{"1170":{"position":[[144,1]]}}}],["尝试",{"_index":631,"t":{"133":{"position":[[80,2]]},"151":{"position":[[1175,2]]},"598":{"position":[[80,2]]},"616":{"position":[[1175,2]]},"972":{"position":[[169,2]]}}}],["尤为重要",{"_index":926,"t":{"281":{"position":[[145,4]]},"806":{"position":[[145,4]]}}}],["尤其",{"_index":49,"t":{"15":{"position":[[70,2]]},"1154":{"position":[[960,2]]}}}],["就",{"_index":664,"t":{"137":{"position":[[421,1]]},"270":{"position":[[198,1],[306,1]]},"522":{"position":[[152,1]]},"556":{"position":[[603,1]]},"580":{"position":[[158,1]]},"602":{"position":[[421,1]]},"755":{"position":[[198,1],[306,1]]},"1154":{"position":[[500,1],[856,1]]}}}],["就是",{"_index":1311,"t":{"536":{"position":[[59,2]]}}}],["尽可能",{"_index":696,"t":{"149":{"position":[[6,3]]},"408":{"position":[[37,3]]},"614":{"position":[[6,3]]},"893":{"position":[[37,3]]}}}],["尽管",{"_index":1588,"t":{"1159":{"position":[[51,2]]}}}],["局部变量",{"_index":1678,"t":{"1228":{"position":[[45,4]]}}}],["层",{"_index":1183,"t":{"411":{"position":[[14,1]]},"429":{"position":[[15,1]]},"470":{"position":[[24,1]]},"896":{"position":[[14,1]]},"914":{"position":[[15,1]]},"952":{"position":[[24,1]]}}}],["层次结构",{"_index":1086,"t":{"350":{"position":[[38,4]]},"859":{"position":[[38,4]]}}}],["属于",{"_index":1249,"t":{"477":{"position":[[7,2]]}}}],["属性",{"_index":1043,"t":{"321":{"position":[[59,2]]},"355":{"position":[[131,2]]},"768":{"position":[[59,2]]},"832":{"position":[[131,2]]}}}],["崛起",{"_index":68,"t":{"15":{"position":[[125,2]]}}}],["崩溃",{"_index":547,"t":{"113":{"position":[[88,2]]},"621":{"position":[[88,2]]},"1165":{"position":[[203,2]]}}}],["嵌入",{"_index":795,"t":{"186":{"position":[[110,2]]},"355":{"position":[[174,2]]},"691":{"position":[[110,2]]},"832":{"position":[[174,2]]}}}],["嵌入式",{"_index":1666,"t":{"1210":{"position":[[17,3],[26,3]]}}}],["嵌套",{"_index":1478,"t":{"1028":{"position":[[139,2]]},"1074":{"position":[[234,2]]}}}],["工业",{"_index":202,"t":{"19":{"position":[[234,2],[265,2]]}}}],["工业革命",{"_index":165,"t":{"19":{"position":[[114,4]]}}}],["工作",{"_index":632,"t":{"133":{"position":[[92,2]]},"307":{"position":[[544,2]]},"312":{"position":[[447,2]]},"314":{"position":[[524,2]]},"329":{"position":[[316,2]]},"376":{"position":[[129,2]]},"439":{"position":[[97,2]]},"546":{"position":[[41,2]]},"560":{"position":[[196,2],[262,2]]},"564":{"position":[[252,2]]},"574":{"position":[[184,2]]},"598":{"position":[[92,2]]},"776":{"position":[[316,2]]},"794":{"position":[[544,2]]},"799":{"position":[[447,2]]},"801":{"position":[[524,2]]},"853":{"position":[[129,2]]},"924":{"position":[[97,2]]},"1154":{"position":[[505,2]]},"1165":{"position":[[210,2]]},"1193":{"position":[[153,2]]},"1203":{"position":[[824,2],[862,2]]}}}],["工具",{"_index":109,"t":{"17":{"position":[[19,2]]},"202":{"position":[[124,2]]},"304":{"position":[[99,2],[108,2]]},"546":{"position":[[27,2]]},"707":{"position":[[124,2]]},"829":{"position":[[99,2],[108,2]]},"966":{"position":[[20,2]]},"1005":{"position":[[65,2]]},"1125":{"position":[[139,2]]},"1159":{"position":[[63,2]]},"1167":{"position":[[13,2],[72,2]]},"1206":{"position":[[25,2]]},"1208":{"position":[[122,2]]}}}],["工具包",{"_index":1236,"t":{"470":{"position":[[33,3]]},"952":{"position":[[33,3]]}}}],["工具箱",{"_index":1402,"t":{"593":{"position":[[144,3]]}}}],["工厂",{"_index":1221,"t":{"445":{"position":[[0,2],[76,2]]},"448":{"position":[[232,2]]},"450":{"position":[[82,2]]},"452":{"position":[[25,2]]},"455":{"position":[[287,2],[356,2]]},"457":{"position":[[67,2]]},"462":{"position":[[476,2],[562,2]]},"468":{"position":[[26,2]]},"472":{"position":[[20,2],[36,2],[50,2]]},"927":{"position":[[0,2],[76,2]]},"930":{"position":[[232,2]]},"932":{"position":[[82,2]]},"934":{"position":[[25,2]]},"937":{"position":[[287,2],[356,2]]},"939":{"position":[[67,2]]},"944":{"position":[[476,2],[562,2]]},"950":{"position":[[26,2]]},"954":{"position":[[20,2],[36,2],[50,2]]}}}],["左",{"_index":1442,"t":{"980":{"position":[[120,1]]}}}],["巧合",{"_index":112,"t":{"17":{"position":[[26,2]]}}}],["差",{"_index":1064,"t":{"342":{"position":[[59,1]]},"789":{"position":[[59,1]]}}}],["差异",{"_index":1414,"t":{"957":{"position":[[60,2]]}}}],["已经",{"_index":1581,"t":{"1154":{"position":[[1428,2]]},"1208":{"position":[[97,2]]}}}],["市场机制",{"_index":189,"t":{"19":{"position":[[196,4]]}}}],["市场竞争",{"_index":287,"t":{"19":{"position":[[593,4]]}}}],["布尔",{"_index":1450,"t":{"996":{"position":[[114,2]]}}}],["布尔值",{"_index":1515,"t":{"1070":{"position":[[325,3]]}}}],["希望",{"_index":280,"t":{"19":{"position":[[567,2]]}}}],["带",{"_index":683,"t":{"143":{"position":[[4,1]]},"151":{"position":[[525,1]]},"312":{"position":[[67,1]]},"314":{"position":[[1876,1]]},"316":{"position":[[2138,1]]},"608":{"position":[[4,1]]},"616":{"position":[[525,1]]},"799":{"position":[[67,1]]},"801":{"position":[[1876,1]]},"803":{"position":[[2138,1]]}}}],["带有",{"_index":1540,"t":{"1136":{"position":[[7,2]]}}}],["帧",{"_index":1691,"t":{"1230":{"position":[[371,1]]}}}],["帮助",{"_index":412,"t":{"29":{"position":[[25,2]]},"92":{"position":[[66,2]]},"1005":{"position":[[48,2]]},"1206":{"position":[[74,2]]},"1248":{"position":[[12,2]]}}}],["常常",{"_index":336,"t":{"23":{"position":[[11,2]]}}}],["常用",{"_index":605,"t":{"131":{"position":[[27,2]]},"316":{"position":[[47,2]]},"582":{"position":[[92,2]]},"596":{"position":[[27,2]]},"803":{"position":[[47,2]]},"1145":{"position":[[82,2]]},"1159":{"position":[[37,2]]}}}],["常见",{"_index":1277,"t":{"490":{"position":[[176,2]]},"1028":{"position":[[98,2],[222,2]]}}}],["常见问题",{"_index":1640,"t":{"1193":{"position":[[213,4]]}}}],["干净",{"_index":1589,"t":{"1161":{"position":[[21,2]]}}}],["干扰",{"_index":594,"t":{"128":{"position":[[73,2]]},"636":{"position":[[73,2]]}}}],["平凡",{"_index":352,"t":{"23":{"position":[[67,2]]}}}],["平凡人",{"_index":344,"t":{"23":{"position":[[32,3]]}}}],["平台",{"_index":1395,"t":{"593":{"position":[[19,2]]}}}],["平滑",{"_index":652,"t":{"135":{"position":[[47,2]]},"202":{"position":[[59,2]]},"600":{"position":[[47,2]]},"707":{"position":[[59,2]]}}}],["平等",{"_index":70,"t":{"15":{"position":[[132,2],[159,2],[198,2]]}}}],["平衡",{"_index":97,"t":{"15":{"position":[[219,2]]},"439":{"position":[[61,2]]},"924":{"position":[[61,2]]}}}],["年",{"_index":5,"t":{"7":{"position":[[4,1]]},"9":{"position":[[4,1]]},"11":{"position":[[4,1]]},"1208":{"position":[[85,1]]}}}],["年龄",{"_index":1447,"t":{"988":{"position":[[231,2]]},"990":{"position":[[223,2]]}}}],["并且",{"_index":508,"t":{"108":{"position":[[56,2]]},"550":{"position":[[50,2]]}}}],["并发",{"_index":571,"t":{"118":{"position":[[268,2]]},"141":{"position":[[45,2]]},"192":{"position":[[3,2]]},"198":{"position":[[1973,2]]},"202":{"position":[[37,2]]},"307":{"position":[[208,2]]},"558":{"position":[[42,2]]},"562":{"position":[[458,2]]},"576":{"position":[[125,2],[233,2],[258,2],[374,2]]},"606":{"position":[[45,2]]},"626":{"position":[[268,2]]},"697":{"position":[[3,2]]},"703":{"position":[[1973,2]]},"707":{"position":[[37,2]]},"794":{"position":[[208,2]]},"966":{"position":[[15,2]]},"968":{"position":[[10,2]]},"978":{"position":[[8,2]]},"1210":{"position":[[75,2]]}}}],["并发程序",{"_index":1324,"t":{"546":{"position":[[59,4]]}}}],["并非",{"_index":104,"t":{"17":{"position":[[7,2]]},"19":{"position":[[34,2]]}}}],["幸福",{"_index":143,"t":{"19":{"position":[[27,2]]}}}],["广播",{"_index":1306,"t":{"522":{"position":[[155,2]]}}}],["广泛",{"_index":1658,"t":{"1206":{"position":[[28,2]]},"1208":{"position":[[115,2]]}}}],["序列化",{"_index":1472,"t":{"1028":{"position":[[11,3],[31,3]]},"1031":{"position":[[65,3],[102,3]]},"1035":{"position":[[170,3]]},"1044":{"position":[[172,3]]},"1049":{"position":[[57,3]]},"1125":{"position":[[143,3],[148,3]]}}}],["库",{"_index":1250,"t":{"477":{"position":[[16,1]]},"519":{"position":[[17,1]]},"578":{"position":[[21,1]]},"957":{"position":[[54,1]]},"983":{"position":[[29,1]]},"1008":{"position":[[9,1],[428,1]]},"1023":{"position":[[0,1],[40,1],[131,1]]},"1025":{"position":[[132,1]]},"1028":{"position":[[90,1]]},"1049":{"position":[[19,1]]},"1064":{"position":[[27,1]]},"1083":{"position":[[12,1]]},"1088":{"position":[[12,1]]},"1103":{"position":[[128,1]]},"1105":{"position":[[14,1]]},"1120":{"position":[[128,1]]},"1122":{"position":[[14,1]]},"1142":{"position":[[72,1]]},"1154":{"position":[[1107,1],[1127,1]]},"1163":{"position":[[35,1]]},"1193":{"position":[[41,1]]},"1239":{"position":[[168,1]]}}}],["应",{"_index":383,"t":{"23":{"position":[[185,1],[195,1]]},"348":{"position":[[224,1],[289,1],[370,1],[381,1],[390,1],[398,1]]},"357":{"position":[[30,1]]},"408":{"position":[[36,1]]},"540":{"position":[[45,1],[56,1]]},"834":{"position":[[30,1]]},"857":{"position":[[224,1],[289,1],[370,1],[381,1],[390,1],[398,1]]},"893":{"position":[[36,1]]},"980":{"position":[[124,1]]}}}],["应当",{"_index":257,"t":{"19":{"position":[[474,2]]}}}],["应用",{"_index":654,"t":{"135":{"position":[[72,2]]},"379":{"position":[[145,2]]},"403":{"position":[[68,2]]},"472":{"position":[[13,2]]},"589":{"position":[[226,2]]},"591":{"position":[[107,2]]},"600":{"position":[[72,2]]},"864":{"position":[[145,2]]},"888":{"position":[[68,2]]},"954":{"position":[[13,2]]},"1003":{"position":[[41,2]]},"1103":{"position":[[115,2]]},"1120":{"position":[[115,2]]}}}],["应用层",{"_index":1626,"t":{"1189":{"position":[[262,3]]}}}],["应用程序",{"_index":1196,"t":{"437":{"position":[[259,4]]},"593":{"position":[[224,4]]},"922":{"position":[[259,4]]},"990":{"position":[[114,4]]},"1210":{"position":[[35,4]]}}}],["应该",{"_index":921,"t":{"281":{"position":[[93,2]]},"283":{"position":[[7,2],[51,2]]},"304":{"position":[[19,2],[92,2]]},"319":{"position":[[93,2],[105,2],[115,2],[124,2]]},"344":{"position":[[123,2]]},"348":{"position":[[49,2],[123,2]]},"350":{"position":[[82,2]]},"352":{"position":[[29,2]]},"376":{"position":[[122,2]]},"379":{"position":[[95,2],[121,2]]},"406":{"position":[[89,2]]},"439":{"position":[[88,2]]},"522":{"position":[[124,2]]},"766":{"position":[[93,2],[105,2],[115,2],[124,2]]},"791":{"position":[[123,2]]},"806":{"position":[[93,2]]},"808":{"position":[[7,2],[51,2]]},"829":{"position":[[19,2],[92,2]]},"853":{"position":[[122,2]]},"857":{"position":[[49,2],[123,2]]},"859":{"position":[[82,2]]},"861":{"position":[[29,2]]},"864":{"position":[[95,2],[121,2]]},"891":{"position":[[89,2]]},"924":{"position":[[88,2]]},"1165":{"position":[[124,2]]},"1193":{"position":[[133,2]]}}}],["庞大",{"_index":1175,"t":{"399":{"position":[[11,2]]},"884":{"position":[[11,2]]}}}],["废弃",{"_index":1525,"t":{"1101":{"position":[[13,2]]},"1103":{"position":[[21,2]]},"1118":{"position":[[13,2]]},"1120":{"position":[[21,2]]}}}],["延迟",{"_index":1621,"t":{"1187":{"position":[[408,2]]},"1189":{"position":[[301,2]]}}}],["建立",{"_index":191,"t":{"19":{"position":[[204,2]]},"408":{"position":[[62,2]]},"893":{"position":[[62,2]]}}}],["建议",{"_index":323,"t":{"21":{"position":[[115,2]]},"966":{"position":[[52,2]]},"1103":{"position":[[25,2]]},"1120":{"position":[[25,2]]}}}],["开发",{"_index":1098,"t":{"352":{"position":[[5,2]]},"468":{"position":[[12,2]]},"861":{"position":[[5,2]]},"950":{"position":[[12,2]]},"1061":{"position":[[1065,2]]},"1103":{"position":[[117,2]]},"1120":{"position":[[117,2]]},"1208":{"position":[[32,2]]},"1210":{"position":[[20,2]]}}}],["开发人员",{"_index":1661,"t":{"1206":{"position":[[76,4]]}}}],["开发者",{"_index":1401,"t":{"593":{"position":[[141,3]]},"1125":{"position":[[62,3]]}}}],["开启",{"_index":30,"t":{"15":{"position":[[6,2]]},"968":{"position":[[19,2]]},"996":{"position":[[156,2]]}}}],["开头",{"_index":448,"t":{"78":{"position":[[5,2]]},"1070":{"position":[[219,2]]}}}],["开始",{"_index":158,"t":{"19":{"position":[[94,2]]},"329":{"position":[[318,2]]},"423":{"position":[[169,2]]},"560":{"position":[[194,2],[470,2]]},"564":{"position":[[250,2]]},"776":{"position":[[318,2]]},"908":{"position":[[169,2]]},"1208":{"position":[[86,2]]},"1224":{"position":[[27,2],[47,2]]}}}],["开放",{"_index":987,"t":{"310":{"position":[[634,2]]},"348":{"position":[[128,2]]},"406":{"position":[[94,2]]},"408":{"position":[[3,2]]},"797":{"position":[[634,2]]},"857":{"position":[[128,2]]},"891":{"position":[[94,2]]},"893":{"position":[[3,2]]}}}],["开销",{"_index":551,"t":{"113":{"position":[[102,2]]},"488":{"position":[[83,2]]},"621":{"position":[[102,2]]},"1191":{"position":[[235,2]]}}}],["开闭",{"_index":1074,"t":{"348":{"position":[[75,2]]},"406":{"position":[[0,2]]},"452":{"position":[[30,2]]},"459":{"position":[[4,2]]},"857":{"position":[[75,2]]},"891":{"position":[[0,2]]},"934":{"position":[[30,2]]},"941":{"position":[[4,2]]}}}],["异常",{"_index":1158,"t":{"376":{"position":[[71,2]]},"853":{"position":[[71,2]]},"1173":{"position":[[1023,2]]},"1178":{"position":[[1205,2]]},"1239":{"position":[[160,2]]}}}],["异步",{"_index":854,"t":{"205":{"position":[[39,2]]},"316":{"position":[[160,2],[310,2],[629,2],[3029,2]]},"666":{"position":[[39,2]]},"803":{"position":[[160,2],[310,2],[629,2],[3029,2]]},"968":{"position":[[3,2],[32,2]]}}}],["式",{"_index":929,"t":{"281":{"position":[[159,1]]},"304":{"position":[[40,1]]},"307":{"position":[[1235,1]]},"357":{"position":[[59,1]]},"472":{"position":[[68,1],[78,1]]},"580":{"position":[[22,1]]},"794":{"position":[[1235,1]]},"806":{"position":[[159,1]]},"829":{"position":[[40,1]]},"834":{"position":[[59,1]]},"954":{"position":[[68,1],[78,1]]},"970":{"position":[[55,1]]}}}],["引入",{"_index":1429,"t":{"970":{"position":[[63,2]]}}}],["引导",{"_index":1585,"t":{"1157":{"position":[[63,2]]}}}],["引用",{"_index":1025,"t":{"316":{"position":[[359,2]]},"803":{"position":[[359,2]]}}}],["引起",{"_index":1071,"t":{"348":{"position":[[55,2]]},"379":{"position":[[101,2]]},"857":{"position":[[55,2]]},"864":{"position":[[101,2]]}}}],["强",{"_index":500,"t":{"104":{"position":[[227,1]]},"316":{"position":[[2966,1]]},"365":{"position":[[497,1]]},"803":{"position":[[2966,1]]},"842":{"position":[[497,1]]},"1165":{"position":[[89,1]]},"1167":{"position":[[86,1]]}}}],["强制",{"_index":1054,"t":{"340":{"position":[[5,2]]},"580":{"position":[[0,2],[32,2]]},"787":{"position":[[5,2]]}}}],["强化",{"_index":1130,"t":{"367":{"position":[[392,2]]},"844":{"position":[[392,2]]}}}],["强大",{"_index":1321,"t":{"546":{"position":[[25,2]]},"983":{"position":[[43,2]]},"1064":{"position":[[20,2]]},"1125":{"position":[[13,2]]},"1159":{"position":[[60,2]]},"1167":{"position":[[10,2]]},"1206":{"position":[[20,2]]}}}],["强盛时期",{"_index":35,"t":{"15":{"position":[[21,4]]}}}],["强行",{"_index":1415,"t":{"957":{"position":[[88,2]]},"970":{"position":[[61,2]]}}}],["强调",{"_index":1430,"t":{"970":{"position":[[74,2]]}}}],["归咎于",{"_index":329,"t":{"21":{"position":[[140,3]]}}}],["归档",{"_index":948,"t":{"295":{"position":[[100,2]]},"820":{"position":[[100,2]]}}}],["当前",{"_index":1096,"t":{"350":{"position":[[255,2]]},"486":{"position":[[228,2]]},"529":{"position":[[42,2]]},"582":{"position":[[2,2],[71,2]]},"859":{"position":[[255,2]]},"1091":{"position":[[102,2]]},"1097":{"position":[[121,2]]},"1108":{"position":[[102,2]]},"1114":{"position":[[121,2]]},"1154":{"position":[[531,2]]},"1224":{"position":[[199,2]]},"1230":{"position":[[290,2],[398,2]]},"1233":{"position":[[25,2]]},"1235":{"position":[[24,2]]}}}],["当前目录",{"_index":1282,"t":{"497":{"position":[[106,4]]}}}],["形式",{"_index":526,"t":{"110":{"position":[[44,2]]},"618":{"position":[[44,2]]}}}],["彩色",{"_index":1190,"t":{"429":{"position":[[214,2]]},"914":{"position":[[214,2]]}}}],["影响",{"_index":314,"t":{"21":{"position":[[74,2]]},"113":{"position":[[92,2]]},"141":{"position":[[101,2]]},"198":{"position":[[1965,2]]},"302":{"position":[[35,2]]},"382":{"position":[[15,2]]},"399":{"position":[[23,2]]},"606":{"position":[[101,2]]},"621":{"position":[[92,2]]},"703":{"position":[[1965,2]]},"827":{"position":[[35,2]]},"867":{"position":[[15,2]]},"884":{"position":[[23,2]]},"1161":{"position":[[38,2]]}}}],["往往",{"_index":53,"t":{"15":{"position":[[83,2],[210,2]]},"19":{"position":[[398,2]]},"21":{"position":[[133,2]]}}}],["很多",{"_index":1565,"t":{"1154":{"position":[[476,2]]}}}],["循环",{"_index":582,"t":{"118":{"position":[[1275,2]]},"122":{"position":[[346,2]]},"208":{"position":[[588,2]]},"220":{"position":[[1220,2]]},"316":{"position":[[1946,2]]},"540":{"position":[[48,2]]},"626":{"position":[[1275,2]]},"630":{"position":[[346,2]]},"669":{"position":[[588,2]]},"681":{"position":[[1220,2]]},"803":{"position":[[1946,2]]}}}],["微",{"_index":1149,"t":{"374":{"position":[[69,1]]},"413":{"position":[[5,1],[122,1]]},"425":{"position":[[74,1]]},"851":{"position":[[69,1]]},"898":{"position":[[5,1],[122,1]]},"910":{"position":[[74,1]]},"1191":{"position":[[142,1]]}}}],["微内核",{"_index":517,"t":{"110":{"position":[[12,3]]},"118":{"position":[[71,3],[186,3],[424,3]]},"122":{"position":[[106,3]]},"128":{"position":[[0,3]]},"208":{"position":[[434,3]]},"220":{"position":[[52,3],[335,3]]},"228":{"position":[[52,3],[251,3]]},"276":{"position":[[128,3]]},"618":{"position":[[12,3]]},"626":{"position":[[71,3],[186,3],[424,3]]},"630":{"position":[[106,3]]},"636":{"position":[[0,3]]},"669":{"position":[[434,3]]},"681":{"position":[[52,3],[335,3]]},"737":{"position":[[52,3],[251,3]]},"761":{"position":[[128,3]]}}}],["心理",{"_index":114,"t":{"17":{"position":[[36,2]]}}}],["必填",{"_index":1505,"t":{"1070":{"position":[[15,2]]}}}],["必然",{"_index":89,"t":{"15":{"position":[[192,2]]}}}],["必要",{"_index":1427,"t":{"970":{"position":[[34,2]]},"1154":{"position":[[42,2],[1104,2]]}}}],["必需",{"_index":1576,"t":{"1154":{"position":[[785,2]]}}}],["必须",{"_index":79,"t":{"15":{"position":[[162,2]]},"184":{"position":[[1750,2]]},"270":{"position":[[291,2]]},"348":{"position":[[207,2]]},"357":{"position":[[8,2],[50,2]]},"365":{"position":[[246,2]]},"376":{"position":[[40,2]]},"529":{"position":[[22,2]]},"540":{"position":[[0,2]]},"544":{"position":[[127,2]]},"689":{"position":[[1750,2]]},"755":{"position":[[291,2]]},"834":{"position":[[8,2],[50,2]]},"842":{"position":[[246,2]]},"853":{"position":[[40,2]]},"857":{"position":[[207,2]]},"1070":{"position":[[26,2],[113,2],[124,2],[143,2],[190,2],[213,2],[233,2],[252,2],[268,2],[279,2],[299,2],[322,2],[345,2],[365,2],[390,2],[407,2],[424,2],[522,2],[609,2]]},"1131":{"position":[[30,2]]}}}],["快",{"_index":697,"t":{"149":{"position":[[9,1]]},"480":{"position":[[468,1]]},"614":{"position":[[9,1]]},"1013":{"position":[[10,1]]},"1170":{"position":[[78,1],[122,1]]}}}],["忽略",{"_index":914,"t":{"270":{"position":[[309,2]]},"755":{"position":[[309,2]]}}}],["忽视",{"_index":342,"t":{"23":{"position":[[26,2]]}}}],["态",{"_index":529,"t":{"110":{"position":[[51,1]]},"113":{"position":[[85,1],[126,1],[130,1]]},"115":{"position":[[84,1]]},"198":{"position":[[1934,1]]},"307":{"position":[[1272,1]]},"562":{"position":[[43,1],[466,1]]},"576":{"position":[[27,1],[75,1]]},"618":{"position":[[51,1]]},"621":{"position":[[85,1],[126,1],[130,1]]},"623":{"position":[[84,1]]},"703":{"position":[[1934,1]]},"794":{"position":[[1272,1]]}}}],["思想",{"_index":615,"t":{"131":{"position":[[102,2]]},"182":{"position":[[26,2]]},"445":{"position":[[88,2]]},"596":{"position":[[102,2]]},"687":{"position":[[26,2]]},"927":{"position":[[88,2]]}}}],["性",{"_index":1063,"t":{"342":{"position":[[58,1]]},"344":{"position":[[107,1]]},"357":{"position":[[3,1]]},"376":{"position":[[10,1]]},"382":{"position":[[57,1],[76,1]]},"593":{"position":[[232,1]]},"789":{"position":[[58,1]]},"791":{"position":[[107,1]]},"834":{"position":[[3,1]]},"853":{"position":[[10,1]]},"867":{"position":[[57,1],[76,1]]}}}],["性能",{"_index":911,"t":{"270":{"position":[[153,2]]},"540":{"position":[[152,2]]},"568":{"position":[[50,2]]},"576":{"position":[[336,2]]},"593":{"position":[[116,2],[170,2]]},"755":{"position":[[153,2]]},"1008":{"position":[[451,2],[484,2]]},"1021":{"position":[[43,2]]},"1023":{"position":[[81,2]]},"1140":{"position":[[15,2]]},"1187":{"position":[[218,2]]},"1189":{"position":[[289,2]]},"1210":{"position":[[12,2]]}}}],["性能比",{"_index":1464,"t":{"1017":{"position":[[51,3]]}}}],["总",{"_index":1383,"t":{"580":{"position":[[427,1],[466,1]]}}}],["总线",{"_index":575,"t":{"118":{"position":[[299,2]]},"208":{"position":[[571,2]]},"626":{"position":[[299,2]]},"669":{"position":[[571,2]]}}}],["恢复",{"_index":1554,"t":{"1145":{"position":[[99,2]]},"1167":{"position":[[36,2]]}}}],["情况",{"_index":312,"t":{"21":{"position":[[63,2]]},"408":{"position":[[17,2]]},"512":{"position":[[978,2]]},"540":{"position":[[162,2]]},"580":{"position":[[78,2]]},"893":{"position":[[17,2]]},"1028":{"position":[[70,2]]}}}],["意义",{"_index":395,"t":{"23":{"position":[[235,2]]}}}],["意味",{"_index":332,"t":{"21":{"position":[[150,2]]}}}],["意味着",{"_index":127,"t":{"17":{"position":[[86,3]]},"19":{"position":[[400,3],[537,3]]}}}],["意外",{"_index":1164,"t":{"384":{"position":[[18,2]]},"869":{"position":[[18,2]]}}}],["意见",{"_index":321,"t":{"21":{"position":[[109,2]]}}}],["感谢",{"_index":1049,"t":{"331":{"position":[[209,2]]},"778":{"position":[[209,2]]}}}],["慢",{"_index":1545,"t":{"1140":{"position":[[28,1]]}}}],["成",{"_index":975,"t":{"307":{"position":[[1299,1]]},"794":{"position":[[1299,1]]}}}],["成为",{"_index":276,"t":{"19":{"position":[[547,2],[610,2]]},"1147":{"position":[[20,2]]},"1208":{"position":[[99,2]]}}}],["成功",{"_index":119,"t":{"17":{"position":[[50,2],[82,2],[110,2]]},"23":{"position":[[164,2]]},"208":{"position":[[136,2]]},"307":{"position":[[180,2],[708,2]]},"669":{"position":[[136,2]]},"794":{"position":[[180,2],[708,2]]},"976":{"position":[[81,2]]}}}],["成就",{"_index":356,"t":{"23":{"position":[[75,2]]}}}],["成本",{"_index":752,"t":{"180":{"position":[[95,2]]},"480":{"position":[[519,2]]},"486":{"position":[[7,2],[201,2],[474,2]]},"490":{"position":[[94,2],[153,2]]},"685":{"position":[[95,2]]}}}],["成败",{"_index":402,"t":{"23":{"position":[[266,2]]}}}],["我们",{"_index":376,"t":{"23":{"position":[[149,2]]},"92":{"position":[[68,2]]},"143":{"position":[[30,2]]},"504":{"position":[[13,2]]},"522":{"position":[[80,2]]},"608":{"position":[[30,2]]},"1028":{"position":[[122,2]]},"1061":{"position":[[1062,2]]},"1197":{"position":[[105,2],[184,2]]},"1218":{"position":[[75,2]]}}}],["我会",{"_index":715,"t":{"153":{"position":[[41,2]]},"638":{"position":[[41,2]]}}}],["或者",{"_index":691,"t":{"143":{"position":[[77,2]]},"151":{"position":[[1317,2]]},"536":{"position":[[109,2]]},"556":{"position":[[28,2]]},"608":{"position":[[77,2]]},"616":{"position":[[1317,2]]},"1070":{"position":[[630,2]]},"1197":{"position":[[170,2]]}}}],["或许",{"_index":154,"t":{"19":{"position":[[78,2],[344,2]]},"23":{"position":[[110,2],[175,2]]}}}],["戳",{"_index":677,"t":{"141":{"position":[[73,1]]},"235":{"position":[[28,1]]},"606":{"position":[[73,1]]},"710":{"position":[[28,1]]}}}],["房地产",{"_index":175,"t":{"19":{"position":[[157,3]]}}}],["所以",{"_index":1651,"t":{"1197":{"position":[[182,2]]},"1201":{"position":[[538,2]]}}}],["所有",{"_index":417,"t":{"34":{"position":[[11,2]]},"45":{"position":[[9,2]]},"94":{"position":[[74,2]]},"102":{"position":[[151,2]]},"108":{"position":[[58,2]]},"118":{"position":[[809,2],[996,2]]},"122":{"position":[[276,2],[528,2]]},"149":{"position":[[16,2]]},"184":{"position":[[1772,2]]},"198":{"position":[[1910,2]]},"235":{"position":[[8,2]]},"286":{"position":[[66,2],[86,2],[107,2]]},"295":{"position":[[92,2]]},"316":{"position":[[906,2]]},"437":{"position":[[353,2]]},"442":{"position":[[456,2]]},"514":{"position":[[546,2]]},"522":{"position":[[116,2]]},"533":{"position":[[29,2]]},"540":{"position":[[136,2]]},"560":{"position":[[407,2],[427,2],[534,2]]},"564":{"position":[[507,2],[590,2]]},"582":{"position":[[628,2]]},"614":{"position":[[16,2]]},"626":{"position":[[809,2],[996,2]]},"630":{"position":[[276,2],[528,2]]},"689":{"position":[[1772,2]]},"703":{"position":[[1910,2]]},"710":{"position":[[8,2]]},"803":{"position":[[906,2]]},"811":{"position":[[66,2],[86,2],[107,2]]},"820":{"position":[[92,2]]},"922":{"position":[[353,2]]},"966":{"position":[[29,2]]},"1154":{"position":[[709,2]]},"1197":{"position":[[87,2]]},"1203":{"position":[[173,2]]},"1230":{"position":[[25,2]]},"1233":{"position":[[31,2]]},"1235":{"position":[[30,2]]}}}],["手中",{"_index":319,"t":{"21":{"position":[[103,2]]}}}],["手动",{"_index":1251,"t":{"477":{"position":[[20,2]]},"552":{"position":[[61,2]]},"957":{"position":[[36,2]]},"1008":{"position":[[437,2]]},"1083":{"position":[[20,2]]},"1088":{"position":[[20,2]]}}}],["手段",{"_index":846,"t":{"202":{"position":[[72,2]]},"707":{"position":[[72,2]]}}}],["才",{"_index":218,"t":{"19":{"position":[[297,1]]},"538":{"position":[[532,1]]},"582":{"position":[[218,1]]}}}],["才能",{"_index":234,"t":{"19":{"position":[[359,2]]},"131":{"position":[[127,2]]},"596":{"position":[[127,2]]},"1131":{"position":[[137,2]]},"1165":{"position":[[34,2]]}}}],["打印",{"_index":404,"t":{"27":{"position":[[2,2],[15,2],[28,2]]},"29":{"position":[[14,2]]},"235":{"position":[[21,2]]},"582":{"position":[[69,2],[125,2]]},"584":{"position":[[457,2]]},"710":{"position":[[21,2]]},"1070":{"position":[[474,2]]},"1136":{"position":[[273,2]]},"1224":{"position":[[121,2]]},"1228":{"position":[[18,2]]}}}],["打开",{"_index":1524,"t":{"1093":{"position":[[173,2]]},"1099":{"position":[[182,2]]},"1110":{"position":[[173,2]]},"1116":{"position":[[182,2]]}}}],["打招呼",{"_index":1448,"t":{"992":{"position":[[173,3]]}}}],["执行",{"_index":411,"t":{"29":{"position":[[20,2]]},"34":{"position":[[0,2]]},"94":{"position":[[81,2]]},"97":{"position":[[64,2],[148,2]]},"99":{"position":[[56,2],[197,2]]},"102":{"position":[[66,2],[149,2]]},"104":{"position":[[98,2],[179,2]]},"106":{"position":[[40,2]]},"108":{"position":[[65,2]]},"198":{"position":[[2032,2]]},"307":{"position":[[1227,2]]},"312":{"position":[[114,2]]},"316":{"position":[[116,2],[312,2],[1037,2],[3020,2]]},"516":{"position":[[198,2]]},"519":{"position":[[79,2]]},"536":{"position":[[121,2],[148,2]]},"556":{"position":[[37,2],[605,2]]},"560":{"position":[[19,2],[162,2]]},"564":{"position":[[23,2]]},"566":{"position":[[32,2],[239,2],[387,2]]},"576":{"position":[[98,2]]},"703":{"position":[[2032,2]]},"794":{"position":[[1227,2]]},"799":{"position":[[114,2]]},"803":{"position":[[116,2],[312,2],[1037,2],[3020,2]]},"968":{"position":[[34,2]]},"1001":{"position":[[28,2]]},"1081":{"position":[[42,2]]},"1086":{"position":[[42,2]]},"1095":{"position":[[195,2]]},"1112":{"position":[[195,2]]},"1147":{"position":[[150,2]]},"1152":{"position":[[63,2]]},"1154":{"position":[[1083,2]]},"1165":{"position":[[36,2]]},"1203":{"position":[[628,2]]},"1206":{"position":[[69,2]]},"1218":{"position":[[62,2],[87,2]]},"1224":{"position":[[85,2],[104,2],[175,2],[195,2]]},"1230":{"position":[[311,2]]},"1233":{"position":[[378,2],[424,2]]},"1239":{"position":[[88,2],[190,2]]},"1241":{"position":[[16,2]]}}}],["执行命令",{"_index":1022,"t":{"316":{"position":[[196,4],[377,4]]},"803":{"position":[[196,4],[377,4]]}}}],["扩展",{"_index":541,"t":{"113":{"position":[[45,2]]},"180":{"position":[[68,2]]},"184":{"position":[[83,2]]},"186":{"position":[[29,2]]},"192":{"position":[[73,2]]},"198":{"position":[[1941,2],[1994,2]]},"316":{"position":[[291,2],[458,2],[3036,2],[6313,2]]},"342":{"position":[[37,2]]},"346":{"position":[[38,2]]},"348":{"position":[[126,2],[235,2]]},"352":{"position":[[22,2]]},"376":{"position":[[120,2]]},"403":{"position":[[11,2]]},"406":{"position":[[92,2]]},"408":{"position":[[1,2]]},"413":{"position":[[12,2]]},"439":{"position":[[118,2]]},"464":{"position":[[23,2]]},"472":{"position":[[6,2],[27,2]]},"477":{"position":[[14,2]]},"621":{"position":[[45,2]]},"685":{"position":[[68,2]]},"689":{"position":[[83,2]]},"691":{"position":[[29,2]]},"697":{"position":[[73,2]]},"703":{"position":[[1941,2],[1994,2]]},"789":{"position":[[37,2]]},"803":{"position":[[291,2],[458,2],[3036,2],[6313,2]]},"853":{"position":[[120,2]]},"855":{"position":[[38,2]]},"857":{"position":[[126,2],[235,2]]},"861":{"position":[[22,2]]},"888":{"position":[[11,2]]},"891":{"position":[[92,2]]},"893":{"position":[[1,2]]},"898":{"position":[[12,2]]},"924":{"position":[[118,2]]},"946":{"position":[[23,2]]},"954":{"position":[[6,2],[27,2]]},"1081":{"position":[[34,2]]},"1086":{"position":[[34,2]]},"1167":{"position":[[103,2]]}}}],["扩展性",{"_index":499,"t":{"104":{"position":[[223,3]]},"307":{"position":[[1276,3]]},"445":{"position":[[45,3]]},"794":{"position":[[1276,3]]},"927":{"position":[[45,3]]}}}],["扮演",{"_index":265,"t":{"19":{"position":[[501,2]]}}}],["找",{"_index":1408,"t":{"957":{"position":[[6,1]]}}}],["找到",{"_index":1412,"t":{"957":{"position":[[21,2]]}}}],["承担",{"_index":935,"t":{"283":{"position":[[36,2]]},"387":{"position":[[23,2]]},"808":{"position":[[36,2]]},"872":{"position":[[23,2]]}}}],["技术",{"_index":210,"t":{"19":{"position":[[267,2],[394,2]]},"180":{"position":[[38,2],[61,2]]},"685":{"position":[[38,2],[61,2]]},"1159":{"position":[[43,2]]},"1167":{"position":[[80,2]]}}}],["抓取",{"_index":1652,"t":{"1197":{"position":[[192,2]]}}}],["投资者",{"_index":203,"t":{"19":{"position":[[239,3]]}}}],["抛",{"_index":1156,"t":{"376":{"position":[[67,1]]},"853":{"position":[[67,1]]}}}],["报告",{"_index":1045,"t":{"324":{"position":[[266,2]]},"326":{"position":[[562,2]]},"387":{"position":[[414,2],[481,2],[525,2]]},"389":{"position":[[509,2],[688,2]]},"771":{"position":[[266,2]]},"773":{"position":[[562,2]]},"872":{"position":[[414,2],[481,2],[525,2]]},"874":{"position":[[509,2],[688,2]]}}}],["报错",{"_index":1202,"t":{"442":{"position":[[0,2],[154,2]]},"972":{"position":[[6,2]]}}}],["抽象",{"_index":768,"t":{"184":{"position":[[130,2]]},"304":{"position":[[65,2]]},"319":{"position":[[109,2],[112,2],[128,2]]},"321":{"position":[[2,2]]},"326":{"position":[[5,2],[348,2]]},"344":{"position":[[9,2],[42,2]]},"348":{"position":[[139,2],[384,2],[387,2],[401,2]]},"360":{"position":[[5,2]]},"408":{"position":[[52,2],[60,2]]},"411":{"position":[[12,2]]},"418":{"position":[[7,2]]},"429":{"position":[[13,2],[38,2]]},"439":{"position":[[9,2],[81,2]]},"462":{"position":[[474,2]]},"470":{"position":[[25,2]]},"472":{"position":[[48,2]]},"689":{"position":[[130,2]]},"766":{"position":[[109,2],[112,2],[128,2]]},"768":{"position":[[2,2]]},"773":{"position":[[5,2],[348,2]]},"791":{"position":[[9,2],[42,2]]},"829":{"position":[[65,2]]},"837":{"position":[[5,2]]},"857":{"position":[[139,2],[384,2],[387,2],[401,2]]},"893":{"position":[[52,2],[60,2]]},"896":{"position":[[12,2]]},"903":{"position":[[7,2]]},"914":{"position":[[13,2],[38,2]]},"924":{"position":[[9,2],[81,2]]},"944":{"position":[[474,2]]},"952":{"position":[[25,2]]},"954":{"position":[[48,2]]}}}],["抽象类",{"_index":1020,"t":{"316":{"position":[[190,3]]},"803":{"position":[[190,3]]}}}],["拆",{"_index":944,"t":{"288":{"position":[[3,1]]},"348":{"position":[[307,1]]},"389":{"position":[[736,1]]},"396":{"position":[[123,1]]},"813":{"position":[[3,1]]},"857":{"position":[[307,1]]},"874":{"position":[[736,1]]},"881":{"position":[[123,1]]}}}],["拆分",{"_index":509,"t":{"108":{"position":[[88,2]]},"401":{"position":[[23,2]]},"886":{"position":[[23,2]]}}}],["拒",{"_index":710,"t":{"151":{"position":[[1598,1]]},"616":{"position":[[1598,1]]}}}],["拒绝",{"_index":640,"t":{"133":{"position":[[178,2]]},"598":{"position":[[178,2]]}}}],["拒绝服务",{"_index":607,"t":{"131":{"position":[[51,4]]},"596":{"position":[[51,4]]}}}],["拓扑",{"_index":886,"t":{"228":{"position":[[795,2]]},"238":{"position":[[1091,2]]},"713":{"position":[[1091,2]]},"737":{"position":[[795,2]]}}}],["拦截器",{"_index":1189,"t":{"425":{"position":[[97,3]]},"910":{"position":[[97,3]]}}}],["拷贝",{"_index":1711,"t":{"1250":{"position":[[2,2]]}}}],["拿到",{"_index":618,"t":{"131":{"position":[[120,2]]},"596":{"position":[[120,2]]}}}],["持久",{"_index":906,"t":{"258":{"position":[[4,2]]},"743":{"position":[[4,2]]},"1028":{"position":[[54,2]]}}}],["持有",{"_index":1024,"t":{"316":{"position":[[339,2]]},"540":{"position":[[2,2]]},"803":{"position":[[339,2]]}}}],["持续",{"_index":194,"t":{"19":{"position":[[212,2]]},"1081":{"position":[[94,2]]},"1086":{"position":[[94,2]]}}}],["挂",{"_index":1297,"t":{"522":{"position":[[37,1]]},"529":{"position":[[40,1]]}}}],["挂载",{"_index":1557,"t":{"1154":{"position":[[40,2],[81,2],[280,2],[362,2],[467,2],[627,2],[846,2],[1042,2],[1140,2]]},"1165":{"position":[[187,2]]},"1191":{"position":[[45,2]]}}}],["指",{"_index":172,"t":{"19":{"position":[[145,1]]},"180":{"position":[[25,1]]},"685":{"position":[[25,1]]}}}],["指令",{"_index":1687,"t":{"1230":{"position":[[292,2],[317,2]]},"1264":{"position":[[4,2],[19,2]]}}}],["指向",{"_index":1685,"t":{"1230":{"position":[[265,2]]}}}],["指定",{"_index":709,"t":{"151":{"position":[[1341,2]]},"162":{"position":[[53,2]]},"210":{"position":[[17,2]]},"522":{"position":[[86,2]]},"616":{"position":[[1341,2]]},"647":{"position":[[53,2]]},"671":{"position":[[17,2]]},"957":{"position":[[90,2]]},"1070":{"position":[[348,2]]},"1145":{"position":[[40,2]]},"1147":{"position":[[14,2],[114,2],[160,2]]},"1218":{"position":[[11,2]]},"1222":{"position":[[9,2]]},"1224":{"position":[[178,2]]},"1226":{"position":[[193,2]]}}}],["指标",{"_index":818,"t":{"194":{"position":[[8,2]]},"699":{"position":[[8,2]]},"1187":{"position":[[371,2]]}}}],["指针",{"_index":1538,"t":{"1131":{"position":[[135,2],[183,2],[304,2],[322,2]]},"1230":{"position":[[263,2],[363,2],[372,2]]}}}],["按",{"_index":689,"t":{"143":{"position":[[74,1]]},"151":{"position":[[1169,1]]},"283":{"position":[[43,1]]},"288":{"position":[[368,1]]},"304":{"position":[[68,1]]},"608":{"position":[[74,1]]},"616":{"position":[[1169,1]]},"808":{"position":[[43,1]]},"813":{"position":[[368,1]]},"829":{"position":[[68,1]]}}}],["按照",{"_index":616,"t":{"131":{"position":[[105,2]]},"133":{"position":[[100,2]]},"596":{"position":[[105,2]]},"598":{"position":[[100,2]]}}}],["挫折",{"_index":325,"t":{"21":{"position":[[126,2]]}}}],["捕捉",{"_index":1699,"t":{"1239":{"position":[[8,2],[130,2]]}}}],["捕获",{"_index":1284,"t":{"516":{"position":[[46,2]]}}}],["损坏",{"_index":1417,"t":{"957":{"position":[[118,2]]},"1157":{"position":[[8,2],[70,2]]}}}],["损耗",{"_index":1544,"t":{"1140":{"position":[[17,2]]}}}],["换句话说",{"_index":923,"t":{"281":{"position":[[108,4]]},"379":{"position":[[110,4]]},"806":{"position":[[108,4]]},"864":{"position":[[110,4]]},"1145":{"position":[[46,4]]}}}],["授权",{"_index":1186,"t":{"423":{"position":[[421,2]]},"908":{"position":[[421,2]]}}}],["掌握",{"_index":318,"t":{"21":{"position":[[98,2]]},"108":{"position":[[139,2]]}}}],["排序",{"_index":887,"t":{"228":{"position":[[797,2]]},"238":{"position":[[1093,2]]},"713":{"position":[[1093,2]]},"737":{"position":[[797,2]]}}}],["排查",{"_index":1206,"t":{"442":{"position":[[147,2],[201,2],[295,2]]},"593":{"position":[[190,2]]}}}],["排队",{"_index":641,"t":{"133":{"position":[[181,2]]},"316":{"position":[[302,2]]},"598":{"position":[[181,2]]},"803":{"position":[[302,2]]}}}],["掠夺",{"_index":201,"t":{"19":{"position":[[231,2]]}}}],["接受",{"_index":712,"t":{"153":{"position":[[30,2]]},"638":{"position":[[30,2]]}}}],["接口",{"_index":564,"t":{"118":{"position":[[77,2]]},"160":{"position":[[50,2]]},"176":{"position":[[413,2]]},"184":{"position":[[11,2],[29,2],[123,2],[210,2],[227,2],[285,2],[596,2]]},"208":{"position":[[440,2]]},"228":{"position":[[58,2],[229,2]]},"235":{"position":[[19,2]]},"250":{"position":[[4,2],[148,2]]},"252":{"position":[[4,2]]},"270":{"position":[[193,2],[202,2]]},"281":{"position":[[105,2],[119,2],[128,2],[155,2]]},"283":{"position":[[5,2],[27,2],[34,2],[63,2]]},"286":{"position":[[7,2],[124,2]]},"288":{"position":[[9,2],[189,2]]},"293":{"position":[[11,2]]},"302":{"position":[[30,2],[64,2]]},"304":{"position":[[10,2],[41,2],[55,2],[72,2],[83,2],[88,2]]},"307":{"position":[[345,2]]},"316":{"position":[[187,2],[226,2],[631,2],[696,2],[911,2],[3115,2]]},"319":{"position":[[147,2]]},"321":{"position":[[7,2]]},"326":{"position":[[7,2],[71,2],[398,2]]},"333":{"position":[[9,2]]},"344":{"position":[[26,2],[44,2],[55,2]]},"348":{"position":[[300,2],[305,2],[317,2]]},"352":{"position":[[13,2],[43,2],[65,2]]},"355":{"position":[[160,2]]},"360":{"position":[[7,2]]},"372":{"position":[[4,2]]},"376":{"position":[[26,2]]},"382":{"position":[[38,2]]},"392":{"position":[[8,2]]},"399":{"position":[[7,2]]},"403":{"position":[[35,2],[92,2]]},"406":{"position":[[121,2]]},"411":{"position":[[7,2]]},"418":{"position":[[5,2]]},"429":{"position":[[10,2],[31,2]]},"439":{"position":[[25,2]]},"445":{"position":[[71,2]]},"448":{"position":[[29,2]]},"450":{"position":[[5,2]]},"455":{"position":[[29,2],[289,2]]},"457":{"position":[[5,2],[69,2]]},"462":{"position":[[31,2],[478,2]]},"464":{"position":[[35,2]]},"626":{"position":[[77,2]]},"645":{"position":[[50,2]]},"661":{"position":[[413,2]]},"669":{"position":[[440,2]]},"689":{"position":[[11,2],[29,2],[123,2],[210,2],[227,2],[285,2],[596,2]]},"710":{"position":[[19,2]]},"725":{"position":[[4,2],[148,2]]},"727":{"position":[[4,2]]},"737":{"position":[[58,2],[229,2]]},"755":{"position":[[193,2],[202,2]]},"766":{"position":[[147,2]]},"768":{"position":[[7,2]]},"773":{"position":[[7,2],[71,2],[398,2]]},"780":{"position":[[9,2]]},"791":{"position":[[26,2],[44,2],[55,2]]},"794":{"position":[[345,2]]},"803":{"position":[[187,2],[226,2],[631,2],[696,2],[911,2],[3115,2]]},"806":{"position":[[105,2],[119,2],[128,2],[155,2]]},"808":{"position":[[5,2],[27,2],[34,2],[63,2]]},"811":{"position":[[7,2],[124,2]]},"813":{"position":[[9,2],[189,2]]},"818":{"position":[[11,2]]},"827":{"position":[[30,2],[64,2]]},"829":{"position":[[10,2],[41,2],[55,2],[72,2],[83,2],[88,2]]},"832":{"position":[[160,2]]},"837":{"position":[[7,2]]},"849":{"position":[[4,2]]},"853":{"position":[[26,2]]},"857":{"position":[[300,2],[305,2],[317,2]]},"861":{"position":[[13,2],[43,2],[65,2]]},"867":{"position":[[38,2]]},"877":{"position":[[8,2]]},"884":{"position":[[7,2]]},"888":{"position":[[35,2],[92,2]]},"891":{"position":[[121,2]]},"896":{"position":[[7,2]]},"903":{"position":[[5,2]]},"914":{"position":[[10,2],[31,2]]},"924":{"position":[[25,2]]},"927":{"position":[[71,2]]},"930":{"position":[[29,2]]},"932":{"position":[[5,2]]},"937":{"position":[[29,2],[289,2]]},"939":{"position":[[5,2],[69,2]]},"944":{"position":[[31,2],[478,2]]},"946":{"position":[[35,2]]},"974":{"position":[[8,2]]},"1028":{"position":[[203,2]]},"1035":{"position":[[20,2],[65,2],[88,2]]},"1061":{"position":[[1016,2],[1282,2],[1465,2],[1586,2],[2096,2]]},"1154":{"position":[[353,2],[753,2]]},"1191":{"position":[[189,2]]}}}],["接口定义",{"_index":565,"t":{"118":{"position":[[85,4]]},"208":{"position":[[448,4]]},"228":{"position":[[66,4]]},"352":{"position":[[25,4]]},"362":{"position":[[7,4]]},"626":{"position":[[85,4]]},"669":{"position":[[448,4]]},"737":{"position":[[66,4]]},"839":{"position":[[7,4]]},"861":{"position":[[25,4]]}}}],["接口类型",{"_index":1534,"t":{"1125":{"position":[[107,4]]}}}],["接口隔离",{"_index":917,"t":{"281":{"position":[[0,4]]},"348":{"position":[[239,4]]},"806":{"position":[[0,4]]},"857":{"position":[[239,4]]}}}],["接收",{"_index":991,"t":{"312":{"position":[[76,2]]},"316":{"position":[[264,2]]},"799":{"position":[[76,2]]},"803":{"position":[[264,2]]},"1173":{"position":[[1215,2]]}}}],["接收数据",{"_index":984,"t":{"310":{"position":[[407,4]]},"554":{"position":[[237,4]]},"797":{"position":[[407,4]]}}}],["接收端",{"_index":978,"t":{"310":{"position":[[40,3]]},"797":{"position":[[40,3]]}}}],["接收者",{"_index":1026,"t":{"316":{"position":[[372,3],[406,3]]},"803":{"position":[[372,3],[406,3]]}}}],["控",{"_index":611,"t":{"131":{"position":[[74,1]]},"596":{"position":[[74,1]]}}}],["控制",{"_index":648,"t":{"135":{"position":[[34,2],[99,2]]},"141":{"position":[[5,2]]},"198":{"position":[[2000,2]]},"314":{"position":[[176,2],[897,2]]},"316":{"position":[[2074,2],[3009,2]]},"321":{"position":[[18,2]]},"516":{"position":[[172,2]]},"544":{"position":[[58,2]]},"556":{"position":[[705,2]]},"572":{"position":[[19,2]]},"576":{"position":[[256,2],[299,2],[376,2],[429,2]]},"600":{"position":[[34,2],[99,2]]},"606":{"position":[[5,2]]},"703":{"position":[[2000,2]]},"768":{"position":[[18,2]]},"801":{"position":[[176,2],[897,2]]},"803":{"position":[[2074,2],[3009,2]]},"1170":{"position":[[95,2],[137,2]]},"1189":{"position":[[258,2]]},"1200":{"position":[[10,2]]},"1201":{"position":[[10,2]]},"1206":{"position":[[71,2]]},"1233":{"position":[[259,2],[305,2]]},"1262":{"position":[[19,2]]}}}],["控制台",{"_index":1152,"t":{"374":{"position":[[94,3]]},"425":{"position":[[23,3]]},"427":{"position":[[0,3]]},"429":{"position":[[137,3],[162,3],[461,3]]},"437":{"position":[[19,3],[641,3]]},"457":{"position":[[358,3]]},"851":{"position":[[94,3]]},"910":{"position":[[23,3]]},"912":{"position":[[0,3]]},"914":{"position":[[137,3],[162,3],[461,3]]},"922":{"position":[[19,3],[641,3]]},"939":{"position":[[358,3]]}}}],["控制策略",{"_index":647,"t":{"135":{"position":[[29,4]]},"600":{"position":[[29,4]]}}}],["控制算法",{"_index":604,"t":{"131":{"position":[[22,4]]},"596":{"position":[[22,4]]}}}],["推动",{"_index":67,"t":{"15":{"position":[[119,2]]},"19":{"position":[[423,2],[590,2]]}}}],["推荐",{"_index":511,"t":{"108":{"position":[[119,2]]},"544":{"position":[[110,2]]},"576":{"position":[[303,2]]},"1005":{"position":[[81,2]]},"1101":{"position":[[29,2],[111,2]]},"1118":{"position":[[29,2],[111,2]]},"1165":{"position":[[272,2]]}}}],["推荐值",{"_index":1265,"t":{"486":{"position":[[230,3]]}}}],["推送",{"_index":727,"t":{"172":{"position":[[54,2]]},"657":{"position":[[54,2]]}}}],["描述",{"_index":623,"t":{"133":{"position":[[8,2]]},"208":{"position":[[165,2]]},"598":{"position":[[8,2]]},"669":{"position":[[165,2]]},"1070":{"position":[[3,2]]},"1224":{"position":[[5,2]]}}}],["描述符",{"_index":1388,"t":{"580":{"position":[[707,3]]}}}],["提交",{"_index":1028,"t":{"316":{"position":[[2133,2]]},"803":{"position":[[2133,2]]}}}],["提供",{"_index":24,"t":{"13":{"position":[[44,2]]},"15":{"position":[[106,2]]},"172":{"position":[[14,2]]},"344":{"position":[[71,2]]},"475":{"position":[[44,2]]},"493":{"position":[[9,2]]},"519":{"position":[[19,2]]},"550":{"position":[[7,2]]},"568":{"position":[[27,2]]},"578":{"position":[[40,2]]},"657":{"position":[[14,2]]},"791":{"position":[[71,2]]},"983":{"position":[[31,2]]},"988":{"position":[[8,2]]},"1003":{"position":[[8,2]]},"1008":{"position":[[10,2]]},"1064":{"position":[[30,2]]},"1078":{"position":[[10,2]]},"1081":{"position":[[29,2],[82,2]]},"1086":{"position":[[29,2],[82,2]]},"1103":{"position":[[123,2]]},"1120":{"position":[[123,2]]},"1125":{"position":[[49,2]]},"1154":{"position":[[340,2],[424,2],[560,2]]},"1159":{"position":[[76,2]]},"1165":{"position":[[56,2]]},"1167":{"position":[[82,2]]},"1193":{"position":[[20,2]]}}}],["提出",{"_index":919,"t":{"281":{"position":[[78,2]]},"319":{"position":[[77,2]]},"355":{"position":[[74,2]]},"379":{"position":[[78,2]]},"406":{"position":[[64,2]]},"766":{"position":[[77,2]]},"806":{"position":[[78,2]]},"832":{"position":[[74,2]]},"864":{"position":[[78,2]]},"891":{"position":[[64,2]]}}}],["提前",{"_index":1713,"t":{"1252":{"position":[[38,2]]}}}],["提升",{"_index":166,"t":{"19":{"position":[[118,2]]},"568":{"position":[[48,2]]},"593":{"position":[[218,2]]}}}],["提取",{"_index":439,"t":{"64":{"position":[[5,2]]},"68":{"position":[[67,2],[103,2]]},"71":{"position":[[5,2]]},"85":{"position":[[0,2]]},"350":{"position":[[156,2]]},"859":{"position":[[156,2]]},"1142":{"position":[[88,2]]}}}],["提高",{"_index":463,"t":{"92":{"position":[[85,2]]},"180":{"position":[[98,2]]},"208":{"position":[[310,2]]},"316":{"position":[[67,2]]},"344":{"position":[[99,2]]},"350":{"position":[[29,2]]},"382":{"position":[[0,2],[72,2]]},"669":{"position":[[310,2]]},"685":{"position":[[98,2]]},"791":{"position":[[99,2]]},"803":{"position":[[67,2]]},"859":{"position":[[29,2]]},"867":{"position":[[0,2],[72,2]]},"1025":{"position":[[135,2]]},"1078":{"position":[[70,2]]},"1189":{"position":[[316,2]]}}}],["插件",{"_index":524,"t":{"110":{"position":[[38,2]]},"126":{"position":[[37,2]]},"344":{"position":[[126,2],[148,2]]},"376":{"position":[[125,2]]},"439":{"position":[[91,2]]},"468":{"position":[[9,2]]},"470":{"position":[[17,2]]},"472":{"position":[[76,2]]},"618":{"position":[[38,2]]},"634":{"position":[[37,2]]},"791":{"position":[[126,2],[148,2]]},"853":{"position":[[125,2]]},"924":{"position":[[91,2]]},"950":{"position":[[9,2]]},"952":{"position":[[17,2]]},"954":{"position":[[76,2]]}}}],["插槽",{"_index":1067,"t":{"344":{"position":[[139,2]]},"791":{"position":[[139,2]]}}}],["握手",{"_index":1215,"t":{"442":{"position":[[318,2]]}}}],["携带",{"_index":1032,"t":{"316":{"position":[[2964,2]]},"803":{"position":[[2964,2]]}}}],["撤销",{"_index":1016,"t":{"316":{"position":[[145,2]]},"803":{"position":[[145,2]]}}}],["擅长",{"_index":123,"t":{"17":{"position":[[66,2]]}}}],["操作",{"_index":971,"t":{"307":{"position":[[1286,2]]},"314":{"position":[[1069,2]]},"316":{"position":[[150,2],[446,2]]},"536":{"position":[[150,2]]},"556":{"position":[[41,2]]},"566":{"position":[[14,2],[42,2],[142,2]]},"568":{"position":[[7,2],[32,2]]},"576":{"position":[[205,2]]},"794":{"position":[[1286,2]]},"801":{"position":[[1069,2]]},"803":{"position":[[150,2],[446,2]]},"968":{"position":[[5,2]]},"1021":{"position":[[33,2]]},"1023":{"position":[[175,2]]},"1101":{"position":[[44,2]]},"1118":{"position":[[44,2]]},"1125":{"position":[[29,2],[193,2],[226,2]]},"1131":{"position":[[368,2]]},"1165":{"position":[[39,2]]}}}],["操作系统",{"_index":1370,"t":{"580":{"position":[[44,4],[116,4]]},"1103":{"position":[[76,4]]},"1120":{"position":[[76,4]]},"1208":{"position":[[109,4]]}}}],["支付",{"_index":1146,"t":{"374":{"position":[[60,2],[71,2],[76,2]]},"411":{"position":[[3,2],[81,2],[186,2],[232,2],[329,2],[372,2]]},"413":{"position":[[7,2],[111,2],[124,2]]},"416":{"position":[[199,2],[251,2],[310,2],[339,2]]},"418":{"position":[[74,2],[401,2]]},"425":{"position":[[0,2]]},"851":{"position":[[60,2],[71,2],[76,2]]},"896":{"position":[[3,2],[81,2],[186,2],[232,2],[329,2],[372,2]]},"898":{"position":[[7,2],[111,2],[124,2]]},"901":{"position":[[199,2],[251,2],[310,2],[339,2]]},"903":{"position":[[74,2],[401,2]]},"910":{"position":[[0,2]]}}}],["支付宝",{"_index":1148,"t":{"374":{"position":[[65,3]]},"411":{"position":[[229,3],[340,3]]},"416":{"position":[[262,3]]},"851":{"position":[[65,3]]},"896":{"position":[[229,3],[340,3]]},"901":{"position":[[262,3]]}}}],["支持",{"_index":429,"t":{"48":{"position":[[17,2]]},"52":{"position":[[7,2],[26,2]]},"126":{"position":[[70,2]]},"135":{"position":[[54,2],[63,2],[69,2]]},"141":{"position":[[18,2]]},"149":{"position":[[38,2]]},"153":{"position":[[19,2]]},"190":{"position":[[26,2]]},"198":{"position":[[1990,2]]},"205":{"position":[[24,2]]},"225":{"position":[[0,2]]},"235":{"position":[[0,2]]},"247":{"position":[[12,2]]},"260":{"position":[[78,2]]},"270":{"position":[[270,2]]},"304":{"position":[[47,2]]},"307":{"position":[[206,2]]},"312":{"position":[[49,2]]},"314":{"position":[[139,2],[209,2],[879,2]]},"316":{"position":[[143,2],[294,2],[420,2],[473,2],[2067,2],[2141,2],[2962,2],[2998,2],[3693,2]]},"416":{"position":[[307,2]]},"600":{"position":[[54,2],[63,2],[69,2]]},"606":{"position":[[18,2]]},"614":{"position":[[38,2]]},"634":{"position":[[70,2]]},"638":{"position":[[19,2]]},"666":{"position":[[24,2]]},"695":{"position":[[26,2]]},"703":{"position":[[1990,2]]},"710":{"position":[[0,2]]},"722":{"position":[[12,2]]},"734":{"position":[[0,2]]},"745":{"position":[[78,2]]},"755":{"position":[[270,2]]},"794":{"position":[[206,2]]},"799":{"position":[[49,2]]},"801":{"position":[[139,2],[209,2],[879,2]]},"803":{"position":[[143,2],[294,2],[420,2],[473,2],[2067,2],[2141,2],[2962,2],[2998,2],[3693,2]]},"829":{"position":[[47,2]]},"901":{"position":[[307,2]]},"980":{"position":[[3,2]]},"983":{"position":[[54,2]]},"992":{"position":[[110,2]]},"994":{"position":[[122,2]]},"1005":{"position":[[2,2],[10,2],[39,2]]},"1013":{"position":[[22,2]]},"1064":{"position":[[45,2]]},"1154":{"position":[[944,2]]},"1243":{"position":[[5,2]]}}}],["收养",{"_index":1645,"t":{"1195":{"position":[[16,2]]},"1200":{"position":[[27,2]]}}}],["收到",{"_index":731,"t":{"172":{"position":[[84,2]]},"554":{"position":[[259,2]]},"657":{"position":[[84,2]]}}}],["收尾",{"_index":1657,"t":{"1203":{"position":[[860,2]]}}}],["收集",{"_index":1363,"t":{"578":{"position":[[33,2]]}}}],["改",{"_index":1225,"t":{"459":{"position":[[15,1]]},"941":{"position":[[15,1]]}}}],["改为",{"_index":788,"t":{"184":{"position":[[1743,2]]},"689":{"position":[[1743,2]]},"1145":{"position":[[38,2]]}}}],["改动",{"_index":1234,"t":{"468":{"position":[[23,2]]},"950":{"position":[[23,2]]}}}],["改变",{"_index":1081,"t":{"348":{"position":[[225,2]]},"357":{"position":[[31,2]]},"360":{"position":[[359,2]]},"367":{"position":[[460,2]]},"403":{"position":[[98,2]]},"834":{"position":[[31,2]]},"837":{"position":[[359,2]]},"844":{"position":[[460,2]]},"857":{"position":[[225,2]]},"888":{"position":[[98,2]]},"1145":{"position":[[52,2]]},"1239":{"position":[[120,2]]}}}],["改变程序",{"_index":1104,"t":{"355":{"position":[[122,4]]},"832":{"position":[[122,4]]}}}],["改善",{"_index":139,"t":{"19":{"position":[[14,2]]}}}],["改进",{"_index":1168,"t":{"389":{"position":[[716,2]]},"874":{"position":[[716,2]]}}}],["改造",{"_index":863,"t":{"208":{"position":[[367,2]]},"669":{"position":[[367,2]]}}}],["攻击",{"_index":1273,"t":{"488":{"position":[[94,2]]}}}],["放入",{"_index":629,"t":{"133":{"position":[[61,2]]},"598":{"position":[[61,2]]}}}],["放在",{"_index":369,"t":{"23":{"position":[[127,2]]},"270":{"position":[[145,2]]},"755":{"position":[[145,2]]}}}],["放大",{"_index":337,"t":{"23":{"position":[[13,2]]}}}],["效果",{"_index":1488,"t":{"1035":{"position":[[117,2]]}}}],["效率",{"_index":1471,"t":{"1025":{"position":[[145,2]]}}}],["敏感",{"_index":1496,"t":{"1059":{"position":[[11,2]]},"1061":{"position":[[940,2],[1043,2],[1115,2]]},"1165":{"position":[[83,2]]}}}],["数",{"_index":1356,"t":{"576":{"position":[[235,1]]},"1154":{"position":[[675,1]]}}}],["数值",{"_index":1350,"t":{"568":{"position":[[5,2]]},"576":{"position":[[118,2]]},"1237":{"position":[[11,2],[69,2]]}}}],["数字",{"_index":1510,"t":{"1070":{"position":[[146,2],[164,2]]}}}],["数据",{"_index":806,"t":{"190":{"position":[[3,2]]},"205":{"position":[[33,2]]},"220":{"position":[[10,2],[341,2]]},"228":{"position":[[257,2]]},"312":{"position":[[93,2]]},"324":{"position":[[110,2],[268,2]]},"326":{"position":[[168,2],[303,2],[564,2]]},"367":{"position":[[381,2]]},"389":{"position":[[684,2]]},"396":{"position":[[75,2],[86,2]]},"425":{"position":[[36,2]]},"516":{"position":[[143,2]]},"550":{"position":[[56,2]]},"552":{"position":[[30,2]]},"556":{"position":[[34,2],[600,2]]},"562":{"position":[[20,2]]},"576":{"position":[[19,2],[269,2],[345,2]]},"666":{"position":[[33,2]]},"681":{"position":[[10,2],[341,2]]},"695":{"position":[[3,2]]},"737":{"position":[[257,2]]},"771":{"position":[[110,2],[268,2]]},"773":{"position":[[168,2],[303,2],[564,2]]},"799":{"position":[[93,2]]},"844":{"position":[[381,2]]},"874":{"position":[[684,2]]},"881":{"position":[[75,2],[86,2]]},"910":{"position":[[36,2]]},"968":{"position":[[185,2],[199,2],[209,2]]},"1008":{"position":[[43,2]]},"1023":{"position":[[73,2]]},"1025":{"position":[[9,2]]},"1028":{"position":[[52,2]]},"1035":{"position":[[176,2]]},"1061":{"position":[[1085,2],[1914,2]]},"1064":{"position":[[23,2]]},"1078":{"position":[[72,2]]},"1136":{"position":[[15,2]]},"1154":{"position":[[447,2],[822,2]]},"1237":{"position":[[129,2]]}}}],["数据处理",{"_index":1290,"t":{"516":{"position":[[221,4]]}}}],["数据库",{"_index":1046,"t":{"324":{"position":[[317,3]]},"374":{"position":[[45,3]]},"396":{"position":[[98,3]]},"470":{"position":[[5,3]]},"771":{"position":[[317,3]]},"851":{"position":[[45,3]]},"881":{"position":[[98,3]]},"952":{"position":[[5,3]]},"1136":{"position":[[27,3]]}}}],["数据格式",{"_index":1477,"t":{"1028":{"position":[[107,4],[129,4]]}}}],["数组",{"_index":878,"t":{"220":{"position":[[255,2]]},"681":{"position":[[255,2]]},"1017":{"position":[[37,2]]},"1023":{"position":[[141,2]]}}}],["数量",{"_index":1345,"t":{"558":{"position":[[47,2]]}}}],["整个",{"_index":548,"t":{"113":{"position":[[94,2]]},"621":{"position":[[94,2]]}}}],["整体",{"_index":167,"t":{"19":{"position":[[121,2]]}}}],["整体而言",{"_index":1097,"t":{"352":{"position":[[0,4]]},"861":{"position":[[0,4]]}}}],["整形",{"_index":613,"t":{"131":{"position":[[81,2]]},"135":{"position":[[92,2]]},"596":{"position":[[81,2]]},"600":{"position":[[92,2]]}}}],["文件",{"_index":423,"t":{"41":{"position":[[7,2]]},"45":{"position":[[20,2]]},"108":{"position":[[86,2]]},"235":{"position":[[74,2]]},"260":{"position":[[75,2]]},"263":{"position":[[62,2]]},"367":{"position":[[192,2],[427,2]]},"374":{"position":[[40,2],[89,2]]},"425":{"position":[[18,2]]},"427":{"position":[[6,2]]},"429":{"position":[[486,2],[507,2]]},"433":{"position":[[230,2]]},"437":{"position":[[67,2],[645,2]]},"457":{"position":[[124,2],[221,2]]},"580":{"position":[[705,2]]},"589":{"position":[[141,2]]},"710":{"position":[[74,2]]},"745":{"position":[[75,2]]},"748":{"position":[[62,2]]},"844":{"position":[[192,2],[427,2]]},"851":{"position":[[40,2],[89,2]]},"910":{"position":[[18,2]]},"912":{"position":[[6,2]]},"914":{"position":[[486,2],[507,2]]},"918":{"position":[[230,2]]},"922":{"position":[[67,2],[645,2]]},"939":{"position":[[124,2],[221,2]]},"968":{"position":[[205,2]]},"1021":{"position":[[16,2]]},"1025":{"position":[[67,2]]},"1061":{"position":[[1038,2]]},"1093":{"position":[[21,2],[175,2],[299,2],[334,2]]},"1099":{"position":[[13,2],[184,2],[417,2]]},"1101":{"position":[[42,2]]},"1110":{"position":[[21,2],[175,2],[299,2],[334,2]]},"1116":{"position":[[13,2],[184,2],[417,2]]},"1118":{"position":[[42,2]]},"1154":{"position":[[391,2],[610,2],[713,2],[736,2],[782,2],[807,2],[923,2],[1144,2]]},"1157":{"position":[[73,2]]},"1163":{"position":[[40,2]]},"1170":{"position":[[91,2]]},"1173":{"position":[[395,2]]},"1178":{"position":[[422,2]]},"1189":{"position":[[66,2],[161,2],[239,2]]},"1191":{"position":[[53,2]]},"1193":{"position":[[79,2],[91,2]]},"1226":{"position":[[90,2]]},"1250":{"position":[[19,2]]}}}],["文件名",{"_index":435,"t":{"57":{"position":[[3,3]]},"64":{"position":[[1,3]]},"68":{"position":[[69,3],[105,3]]},"263":{"position":[[37,3]]},"748":{"position":[[37,3]]}}}],["文件系统",{"_index":542,"t":{"113":{"position":[[48,4]]},"621":{"position":[[48,4]]},"1145":{"position":[[77,4]]},"1147":{"position":[[34,4]]},"1154":{"position":[[47,4],[333,4],[419,4],[554,4]]},"1157":{"position":[[54,4]]},"1165":{"position":[[139,4],[193,4]]},"1170":{"position":[[60,4],[131,4]]}}}],["文化",{"_index":14,"t":{"13":{"position":[[8,2]]},"17":{"position":[[5,2],[53,2],[79,2],[99,2],[107,2]]}}}],["文本",{"_index":415,"t":{"34":{"position":[[2,2],[8,2]]}}}],["文档",{"_index":1456,"t":{"1005":{"position":[[50,2]]},"1028":{"position":[[156,2]]},"1105":{"position":[[2,2]]},"1122":{"position":[[2,2]]},"1167":{"position":[[105,2]]},"1193":{"position":[[129,2]]},"1266":{"position":[[9,2]]}}}],["断点",{"_index":1671,"t":{"1218":{"position":[[82,2]]},"1224":{"position":[[18,2],[73,2]]},"1226":{"position":[[18,2],[59,2],[93,2],[135,2],[165,2],[195,2]]},"1233":{"position":[[360,2],[451,2]]},"1237":{"position":[[6,2],[64,2],[122,2]]},"1239":{"position":[[10,2],[40,2],[64,2],[93,2],[132,2]]},"1264":{"position":[[1,2]]}}}],["断言",{"_index":1437,"t":{"976":{"position":[[79,2]]},"1008":{"position":[[441,2]]},"1023":{"position":[[56,2]]}}}],["新",{"_index":666,"t":{"137":{"position":[[424,1]]},"184":{"position":[[85,1]]},"250":{"position":[[74,1]]},"307":{"position":[[341,1]]},"342":{"position":[[44,1]]},"348":{"position":[[146,1]]},"408":{"position":[[22,1]]},"439":{"position":[[106,1]]},"452":{"position":[[19,1]]},"484":{"position":[[10,1]]},"522":{"position":[[109,1]]},"602":{"position":[[424,1]]},"689":{"position":[[85,1]]},"725":{"position":[[74,1]]},"789":{"position":[[44,1]]},"794":{"position":[[341,1]]},"857":{"position":[[146,1]]},"893":{"position":[[22,1]]},"924":{"position":[[106,1]]},"934":{"position":[[19,1]]},"1061":{"position":[[1175,1]]},"1125":{"position":[[255,1]]},"1147":{"position":[[22,1],[45,1],[116,1],[142,1]]},"1152":{"position":[[81,1]]},"1154":{"position":[[2,1],[1115,1],[1435,1]]}}}],["新增",{"_index":790,"t":{"186":{"position":[[3,2],[136,2]]},"198":{"position":[[1945,2]]},"228":{"position":[[227,2]]},"238":{"position":[[0,2]]},"250":{"position":[[0,2]]},"413":{"position":[[3,2]]},"416":{"position":[[337,2]]},"435":{"position":[[14,2]]},"459":{"position":[[9,2]]},"468":{"position":[[17,2]]},"691":{"position":[[3,2],[136,2]]},"703":{"position":[[1945,2]]},"713":{"position":[[0,2]]},"725":{"position":[[0,2]]},"737":{"position":[[227,2]]},"898":{"position":[[3,2]]},"901":{"position":[[337,2]]},"920":{"position":[[14,2]]},"941":{"position":[[9,2]]},"950":{"position":[[17,2]]}}}],["新建",{"_index":1304,"t":{"522":{"position":[[119,2],[173,2]]}}}],["方",{"_index":1050,"t":{"333":{"position":[[6,1]]},"780":{"position":[[6,1]]}}}],["方便",{"_index":1099,"t":{"352":{"position":[[18,2]]},"861":{"position":[[18,2]]}}}],["方式",{"_index":595,"t":{"128":{"position":[[79,2]]},"184":{"position":[[89,2]]},"314":{"position":[[105,2]]},"316":{"position":[[44,2],[403,2]]},"370":{"position":[[116,2]]},"411":{"position":[[5,2]]},"413":{"position":[[157,2]]},"416":{"position":[[312,2],[341,2]]},"418":{"position":[[76,2],[403,2]]},"439":{"position":[[58,2]]},"504":{"position":[[18,2]]},"548":{"position":[[37,2]]},"550":{"position":[[39,2]]},"576":{"position":[[0,2]]},"636":{"position":[[79,2]]},"689":{"position":[[89,2]]},"801":{"position":[[105,2]]},"803":{"position":[[44,2],[403,2]]},"847":{"position":[[116,2]]},"896":{"position":[[5,2]]},"898":{"position":[[157,2]]},"901":{"position":[[312,2],[341,2]]},"903":{"position":[[76,2],[403,2]]},"924":{"position":[[58,2]]},"960":{"position":[[16,2]]},"964":{"position":[[2,2]]},"1003":{"position":[[28,2]]},"1165":{"position":[[66,2]]},"1193":{"position":[[106,2]]}}}],["方案",{"_index":1128,"t":{"365":{"position":[[484,2]]},"367":{"position":[[472,2]]},"842":{"position":[[484,2]]},"844":{"position":[[472,2]]},"1049":{"position":[[41,2],[60,2]]},"1081":{"position":[[79,2]]},"1086":{"position":[[79,2]]},"1142":{"position":[[51,2]]},"1193":{"position":[[31,2]]}}}],["方法",{"_index":716,"t":{"158":{"position":[[8,2],[106,2]]},"160":{"position":[[8,2]]},"170":{"position":[[22,2]]},"184":{"position":[[151,2]]},"198":{"position":[[1961,2]]},"230":{"position":[[6,2]]},"240":{"position":[[148,2]]},"270":{"position":[[204,2]]},"274":{"position":[[81,2]]},"283":{"position":[[20,2]]},"286":{"position":[[14,2],[390,2]]},"302":{"position":[[21,2],[56,2],[72,2]]},"304":{"position":[[31,2]]},"312":{"position":[[128,2]]},"316":{"position":[[201,2],[285,2]]},"321":{"position":[[56,2]]},"344":{"position":[[67,2]]},"350":{"position":[[161,2]]},"442":{"position":[[84,2],[149,2]]},"472":{"position":[[38,2]]},"493":{"position":[[19,2]]},"560":{"position":[[49,2]]},"643":{"position":[[8,2],[106,2]]},"645":{"position":[[8,2]]},"655":{"position":[[22,2]]},"689":{"position":[[151,2]]},"703":{"position":[[1961,2]]},"715":{"position":[[148,2]]},"739":{"position":[[6,2]]},"755":{"position":[[204,2]]},"759":{"position":[[81,2]]},"768":{"position":[[56,2]]},"791":{"position":[[67,2]]},"799":{"position":[[128,2]]},"803":{"position":[[201,2],[285,2]]},"808":{"position":[[20,2]]},"811":{"position":[[14,2],[390,2]]},"827":{"position":[[21,2],[56,2],[72,2]]},"829":{"position":[[31,2]]},"859":{"position":[[161,2]]},"954":{"position":[[38,2]]},"957":{"position":[[9,2],[26,2]]},"964":{"position":[[54,2]]},"988":{"position":[[43,2]]},"1059":{"position":[[89,2]]},"1061":{"position":[[1095,2],[1911,2],[1953,2]]},"1125":{"position":[[207,2],[220,2]]},"1131":{"position":[[47,2],[356,2]]},"1140":{"position":[[24,2]]},"1220":{"position":[[2,2],[38,2],[89,2]]}}}],["方面",{"_index":1599,"t":{"1167":{"position":[[49,2]]}}}],["旁人",{"_index":320,"t":{"21":{"position":[[106,2]]}}}],["族",{"_index":1229,"t":{"462":{"position":[[33,1]]},"464":{"position":[[27,1]]},"944":{"position":[[33,1]]},"946":{"position":[[27,1]]}}}],["无法",{"_index":982,"t":{"310":{"position":[[167,2]]},"342":{"position":[[22,2]]},"522":{"position":[[104,2]]},"591":{"position":[[75,2]]},"789":{"position":[[22,2]]},"797":{"position":[[167,2]]},"1154":{"position":[[501,2],[641,2],[650,2],[867,2],[1056,2]]},"1157":{"position":[[3,2]]},"1165":{"position":[[206,2],[214,2]]}}}],["无法访问",{"_index":1551,"t":{"1145":{"position":[[68,4]]},"1154":{"position":[[857,4]]}}}],["无缝",{"_index":1160,"t":{"376":{"position":[[136,2]]},"853":{"position":[[136,2]]}}}],["无论",{"_index":401,"t":{"23":{"position":[[264,2]]},"566":{"position":[[392,2]]}}}],["无论是",{"_index":1634,"t":{"1193":{"position":[[34,3]]}}}],["无限",{"_index":1492,"t":{"1052":{"position":[[95,2]]}}}],["无需",{"_index":746,"t":{"180":{"position":[[72,2]]},"186":{"position":[[8,2]]},"429":{"position":[[466,2]]},"435":{"position":[[19,2]]},"459":{"position":[[13,2]]},"468":{"position":[[21,2]]},"570":{"position":[[353,2]]},"685":{"position":[[72,2]]},"691":{"position":[[8,2]]},"914":{"position":[[466,2]]},"920":{"position":[[19,2]]},"941":{"position":[[13,2]]},"950":{"position":[[21,2]]},"970":{"position":[[17,2]]},"1008":{"position":[[444,2]]},"1252":{"position":[[45,2]]}}}],["日",{"_index":7,"t":{"7":{"position":[[9,1]]},"9":{"position":[[9,1]]},"11":{"position":[[9,1]]}}}],["日志",{"_index":584,"t":{"120":{"position":[[68,2]]},"186":{"position":[[138,2]]},"194":{"position":[[5,2]]},"235":{"position":[[23,2],[58,2]]},"240":{"position":[[0,2]]},"300":{"position":[[138,2]]},"374":{"position":[[84,2],[91,2],[97,2]]},"425":{"position":[[13,2],[20,2],[26,2]]},"429":{"position":[[8,2],[29,2],[131,2],[140,2],[165,2],[464,2],[488,2],[509,2]]},"431":{"position":[[23,2]]},"433":{"position":[[16,2],[162,2],[232,2],[268,2],[499,2]]},"435":{"position":[[662,2]]},"437":{"position":[[22,2],[69,2],[153,2],[227,2],[355,2],[421,2],[635,2]]},"442":{"position":[[293,2],[310,2]]},"457":{"position":[[3,2],[126,2],[361,2]]},"470":{"position":[[2,2]]},"628":{"position":[[68,2]]},"691":{"position":[[138,2]]},"699":{"position":[[5,2]]},"710":{"position":[[23,2],[58,2]]},"715":{"position":[[0,2]]},"825":{"position":[[138,2]]},"851":{"position":[[84,2],[91,2],[97,2]]},"910":{"position":[[13,2],[20,2],[26,2]]},"914":{"position":[[8,2],[29,2],[131,2],[140,2],[165,2],[464,2],[488,2],[509,2]]},"916":{"position":[[23,2]]},"918":{"position":[[16,2],[162,2],[232,2],[268,2],[499,2]]},"920":{"position":[[662,2]]},"922":{"position":[[22,2],[69,2],[153,2],[227,2],[355,2],[421,2],[635,2]]},"939":{"position":[[3,2],[126,2],[361,2]]},"952":{"position":[[2,2]]},"1025":{"position":[[71,2]]},"1193":{"position":[[121,2]]}}}],["日新月异",{"_index":232,"t":{"19":{"position":[[349,4]]}}}],["日期",{"_index":1516,"t":{"1070":{"position":[[353,2]]}}}],["旧",{"_index":894,"t":{"238":{"position":[[241,1],[432,1]]},"250":{"position":[[10,1]]},"459":{"position":[[16,1]]},"468":{"position":[[25,1]]},"713":{"position":[[241,1],[432,1]]},"725":{"position":[[10,1]]},"941":{"position":[[16,1]]},"950":{"position":[[25,1]]},"1173":{"position":[[136,1]]},"1178":{"position":[[163,1]]},"1189":{"position":[[174,1]]}}}],["旧版",{"_index":813,"t":{"190":{"position":[[69,2]]},"695":{"position":[[69,2]]}}}],["旧版本",{"_index":1591,"t":{"1163":{"position":[[31,3]]}}}],["旨在",{"_index":1481,"t":{"1028":{"position":[[158,2]]}}}],["时",{"_index":326,"t":{"21":{"position":[[128,1]]},"133":{"position":[[79,1],[147,1]]},"141":{"position":[[84,1]]},"186":{"position":[[7,1]]},"205":{"position":[[53,1]]},"260":{"position":[[17,1],[38,1]]},"310":{"position":[[625,1]]},"340":{"position":[[38,1],[176,1]]},"376":{"position":[[89,1]]},"399":{"position":[[13,1],[30,1],[47,1]]},"401":{"position":[[35,1]]},"435":{"position":[[10,1]]},"437":{"position":[[424,1]]},"488":{"position":[[39,1]]},"519":{"position":[[75,1]]},"522":{"position":[[36,1],[51,1],[150,1]]},"540":{"position":[[5,1],[24,1]]},"556":{"position":[[36,1]]},"560":{"position":[[472,1],[509,1]]},"562":{"position":[[22,1],[462,1]]},"578":{"position":[[30,1]]},"598":{"position":[[79,1],[147,1]]},"606":{"position":[[84,1]]},"666":{"position":[[53,1]]},"691":{"position":[[7,1]]},"745":{"position":[[17,1],[38,1]]},"787":{"position":[[38,1],[176,1]]},"797":{"position":[[625,1]]},"853":{"position":[[89,1]]},"884":{"position":[[13,1],[30,1],[47,1]]},"886":{"position":[[35,1]]},"920":{"position":[[10,1]]},"922":{"position":[[424,1]]},"970":{"position":[[9,1]]},"1008":{"position":[[483,1]]},"1125":{"position":[[25,1]]},"1131":{"position":[[314,1]]},"1142":{"position":[[7,1],[73,1]]},"1147":{"position":[[12,1],[32,1]]},"1154":{"position":[[443,1],[1012,1],[1098,1]]},"1157":{"position":[[10,1]]},"1161":{"position":[[13,1]]},"1189":{"position":[[152,1]]},"1206":{"position":[[68,1]]},"1233":{"position":[[369,1],[458,1]]},"1239":{"position":[[122,1],[162,1],[172,1]]},"1252":{"position":[[2,1],[49,1]]}}}],["时代",{"_index":29,"t":{"15":{"position":[[3,2]]},"23":{"position":[[105,2],[159,2]]}}}],["时会",{"_index":1309,"t":{"529":{"position":[[34,2],[58,2]]}}}],["时间",{"_index":628,"t":{"133":{"position":[[59,2]]},"141":{"position":[[71,2]]},"188":{"position":[[13,2]]},"205":{"position":[[60,2]]},"208":{"position":[[346,2]]},"235":{"position":[[26,2]]},"556":{"position":[[735,2]]},"580":{"position":[[388,2],[469,2],[516,2]]},"598":{"position":[[59,2]]},"606":{"position":[[71,2]]},"666":{"position":[[60,2]]},"669":{"position":[[346,2]]},"693":{"position":[[13,2]]},"710":{"position":[[26,2]]},"1070":{"position":[[355,2]]},"1200":{"position":[[7,2]]},"1201":{"position":[[7,2]]},"1239":{"position":[[180,2]]}}}],["明代",{"_index":358,"t":{"23":{"position":[[80,2]]}}}],["明文",{"_index":1246,"t":{"475":{"position":[[32,2]]},"488":{"position":[[24,2]]}}}],["明显",{"_index":1361,"t":{"576":{"position":[[340,2]]}}}],["明确",{"_index":1170,"t":{"389":{"position":[[756,2]]},"874":{"position":[[756,2]]}}}],["易",{"_index":970,"t":{"307":{"position":[[1275,1]]},"316":{"position":[[3035,1]]},"794":{"position":[[1275,1]]},"803":{"position":[[3035,1]]}}}],["易于",{"_index":545,"t":{"113":{"position":[[67,2]]},"184":{"position":[[81,2]]},"198":{"position":[[1939,2]]},"382":{"position":[[47,2]]},"621":{"position":[[67,2]]},"689":{"position":[[81,2]]},"703":{"position":[[1939,2]]},"867":{"position":[[47,2]]}}}],["易变",{"_index":799,"t":{"188":{"position":[[4,2]]},"693":{"position":[[4,2]]}}}],["易用",{"_index":1452,"t":{"1003":{"position":[[15,2]]}}}],["映射",{"_index":1509,"t":{"1070":{"position":[[76,2],[97,2]]},"1099":{"position":[[11,2]]},"1116":{"position":[[11,2]]},"1136":{"position":[[30,2]]},"1230":{"position":[[409,2],[429,2],[444,2],[466,2]]}}}],["是否",{"_index":653,"t":{"135":{"position":[[52,2]]},"270":{"position":[[268,2]]},"307":{"position":[[178,2]]},"310":{"position":[[91,2],[180,2],[630,2]]},"429":{"position":[[212,2]]},"442":{"position":[[220,2],[402,2]]},"472":{"position":[[3,2]]},"482":{"position":[[443,2]]},"486":{"position":[[33,2]]},"488":{"position":[[56,2]]},"490":{"position":[[99,2]]},"600":{"position":[[52,2]]},"755":{"position":[[268,2]]},"794":{"position":[[178,2]]},"797":{"position":[[91,2],[180,2],[630,2]]},"914":{"position":[[212,2]]},"954":{"position":[[3,2]]},"1072":{"position":[[17,2]]},"1197":{"position":[[5,2]]},"1233":{"position":[[257,2]]}}}],["是否是",{"_index":1218,"t":{"442":{"position":[[463,3]]}}}],["显",{"_index":1368,"t":{"580":{"position":[[21,1]]}}}],["显现",{"_index":164,"t":{"19":{"position":[[111,2]]}}}],["显示",{"_index":1219,"t":{"442":{"position":[[476,2]]},"582":{"position":[[626,2]]},"1197":{"position":[[109,2]]},"1224":{"position":[[154,2]]},"1228":{"position":[[43,2],[68,2]]},"1230":{"position":[[91,2]]}}}],["显著",{"_index":1407,"t":{"593":{"position":[[216,2]]}}}],["普通",{"_index":366,"t":{"23":{"position":[[114,2]]},"964":{"position":[[6,2]]},"1023":{"position":[[27,2]]},"1140":{"position":[[22,2]]},"1239":{"position":[[38,2],[62,2]]}}}],["普通人",{"_index":253,"t":{"19":{"position":[[461,3]]},"23":{"position":[[50,3]]}}}],["智",{"_index":151,"t":{"19":{"position":[[68,1]]}}}],["智慧",{"_index":392,"t":{"23":{"position":[[218,2]]}}}],["暂停",{"_index":1384,"t":{"580":{"position":[[467,2],[514,2]]},"1239":{"position":[[126,2]]}}}],["暴力",{"_index":1272,"t":{"488":{"position":[[92,2]]}}}],["暴力破解",{"_index":1269,"t":{"488":{"position":[[69,4]]}}}],["暴露",{"_index":1503,"t":{"1061":{"position":[[2344,2]]}}}],["更",{"_index":62,"t":{"15":{"position":[[104,1]]},"19":{"position":[[26,1],[403,1]]},"21":{"position":[[86,1]]},"23":{"position":[[204,1]]},"104":{"position":[[226,1]]},"108":{"position":[[158,1]]},"113":{"position":[[134,1]]},"126":{"position":[[72,1]]},"141":{"position":[[61,1]]},"304":{"position":[[61,1]]},"307":{"position":[[1284,1]]},"316":{"position":[[129,1]]},"348":{"position":[[310,1],[313,1]]},"362":{"position":[[3,1]]},"365":{"position":[[496,1]]},"376":{"position":[[107,1]]},"382":{"position":[[46,1],[66,1],[87,1]]},"480":{"position":[[487,1]]},"540":{"position":[[177,1]]},"552":{"position":[[40,1],[55,1]]},"576":{"position":[[177,1],[222,1]]},"580":{"position":[[217,1]]},"606":{"position":[[61,1]]},"621":{"position":[[134,1]]},"634":{"position":[[72,1]]},"794":{"position":[[1284,1]]},"803":{"position":[[129,1]]},"829":{"position":[[61,1]]},"839":{"position":[[3,1]]},"842":{"position":[[496,1]]},"853":{"position":[[107,1]]},"857":{"position":[[310,1],[313,1]]},"867":{"position":[[46,1],[66,1],[87,1]]},"983":{"position":[[42,1]]},"1081":{"position":[[84,1]]},"1086":{"position":[[84,1]]},"1145":{"position":[[37,1],[72,1]]},"1159":{"position":[[59,1]]},"1165":{"position":[[88,1]]},"1167":{"position":[[85,1],[114,1]]},"1170":{"position":[[77,1]]}}}],["更加",{"_index":386,"t":{"23":{"position":[[196,2]]},"974":{"position":[[49,2]]}}}],["更好",{"_index":461,"t":{"92":{"position":[[70,2]]},"281":{"position":[[130,2]]},"806":{"position":[[130,2]]},"1101":{"position":[[94,2]]},"1118":{"position":[[94,2]]}}}],["更弱",{"_index":1132,"t":{"367":{"position":[[484,2]]},"844":{"position":[[484,2]]}}}],["更慢",{"_index":1256,"t":{"480":{"position":[[491,2]]}}}],["更改",{"_index":1698,"t":{"1237":{"position":[[13,2],[134,2]]}}}],["更新",{"_index":827,"t":{"198":{"position":[[1914,2]]},"235":{"position":[[5,2]]},"242":{"position":[[22,2]]},"247":{"position":[[3,2]]},"254":{"position":[[22,2]]},"486":{"position":[[37,2]]},"488":{"position":[[49,2]]},"703":{"position":[[1914,2]]},"710":{"position":[[5,2]]},"717":{"position":[[22,2]]},"722":{"position":[[3,2]]},"729":{"position":[[22,2]]},"1081":{"position":[[99,2]]},"1086":{"position":[[99,2]]}}}],["替代",{"_index":586,"t":{"126":{"position":[[8,2]]},"357":{"position":[[14,2]]},"634":{"position":[[8,2]]},"834":{"position":[[14,2]]},"1081":{"position":[[77,2]]},"1086":{"position":[[77,2]]},"1101":{"position":[[130,2],[205,2]]},"1118":{"position":[[130,2],[205,2]]},"1142":{"position":[[49,2]]},"1191":{"position":[[161,2]]}}}],["替换",{"_index":416,"t":{"34":{"position":[[4,2],[22,2]]},"48":{"position":[[0,2],[21,2]]},"52":{"position":[[13,2]]},"113":{"position":[[69,2]]},"184":{"position":[[978,2]]},"238":{"position":[[20,2],[317,2]]},"242":{"position":[[1,2],[13,2]]},"250":{"position":[[1446,2],[2086,2]]},"254":{"position":[[1,2],[13,2]]},"260":{"position":[[15,2]]},"342":{"position":[[26,2]]},"348":{"position":[[162,2],[211,2]]},"352":{"position":[[63,2]]},"355":{"position":[[2,2],[109,2]]},"357":{"position":[[1,2]]},"360":{"position":[[349,2]]},"374":{"position":[[32,2],[57,2],[81,2],[107,2]]},"376":{"position":[[8,2],[138,2]]},"621":{"position":[[69,2]]},"689":{"position":[[978,2]]},"713":{"position":[[20,2],[317,2]]},"717":{"position":[[1,2],[13,2]]},"725":{"position":[[1446,2],[2086,2]]},"729":{"position":[[1,2],[13,2]]},"745":{"position":[[15,2]]},"789":{"position":[[26,2]]},"832":{"position":[[2,2],[109,2]]},"834":{"position":[[1,2]]},"837":{"position":[[349,2]]},"851":{"position":[[32,2],[57,2],[81,2],[107,2]]},"853":{"position":[[8,2],[138,2]]},"857":{"position":[[162,2],[211,2]]},"861":{"position":[[63,2]]},"1017":{"position":[[26,2]]},"1023":{"position":[[127,2]]},"1264":{"position":[[6,2]]}}}],["最后",{"_index":490,"t":{"99":{"position":[[207,2]]},"145":{"position":[[28,2]]},"610":{"position":[[28,2]]}}}],["最大",{"_index":1391,"t":{"582":{"position":[[163,2],[186,2]]},"1070":{"position":[[100,2]]}}}],["最小",{"_index":773,"t":{"184":{"position":[[180,2]]},"689":{"position":[[180,2]]},"1070":{"position":[[79,2]]}}}],["最小化",{"_index":522,"t":{"110":{"position":[[29,3]]},"618":{"position":[[29,3]]}}}],["最少",{"_index":1091,"t":{"350":{"position":[[53,2],[90,2]]},"859":{"position":[[53,2],[90,2]]}}}],["最早",{"_index":1662,"t":{"1208":{"position":[[39,2]]}}}],["最终",{"_index":481,"t":{"99":{"position":[[141,2]]},"562":{"position":[[399,2]]},"570":{"position":[[270,2]]}}}],["最近",{"_index":1385,"t":{"580":{"position":[[510,2]]}}}],["月",{"_index":6,"t":{"7":{"position":[[6,1]]},"9":{"position":[[6,1]]},"11":{"position":[[6,1]]}}}],["有些",{"_index":943,"t":{"286":{"position":[[363,2],[370,2]]},"811":{"position":[[363,2],[370,2]]},"1154":{"position":[[52,2]]}}}],["有人",{"_index":148,"t":{"19":{"position":[[59,2]]}}}],["有关",{"_index":1563,"t":{"1154":{"position":[[426,2]]}}}],["有助于",{"_index":513,"t":{"108":{"position":[[153,3]]},"346":{"position":[[25,3]]},"855":{"position":[[25,3]]}}}],["有效",{"_index":1270,"t":{"488":{"position":[[88,2]]}}}],["有用",{"_index":1600,"t":{"1167":{"position":[[53,2]]}}}],["有益",{"_index":128,"t":{"17":{"position":[[92,2]]}}}],["朋友",{"_index":1093,"t":{"350":{"position":[[101,2]]},"859":{"position":[[101,2]]}}}],["服务",{"_index":525,"t":{"110":{"position":[[41,2]]},"113":{"position":[[64,2],[86,2]]},"115":{"position":[[14,2],[41,2]]},"118":{"position":[[75,2],[219,2],[341,2],[566,2],[811,2],[998,2],[1280,2]]},"120":{"position":[[70,2]]},"122":{"position":[[147,2],[278,2],[455,2],[530,2]]},"126":{"position":[[33,2],[47,2]]},"128":{"position":[[36,2]]},"153":{"position":[[21,2],[52,2]]},"155":{"position":[[7,2]]},"158":{"position":[[0,2],[184,2],[269,2],[314,2]]},"162":{"position":[[55,2]]},"170":{"position":[[0,2]]},"174":{"position":[[55,2]]},"176":{"position":[[0,2]]},"184":{"position":[[624,2]]},"205":{"position":[[0,2],[47,2]]},"208":{"position":[[210,2],[365,2],[438,2],[593,2],[610,2],[975,2],[1161,2]]},"214":{"position":[[26,2]]},"217":{"position":[[0,2],[9,2]]},"220":{"position":[[2,2],[7,2],[55,2],[338,2],[405,2],[1187,2],[1198,2],[1225,2],[1242,2],[1622,2],[1836,2]]},"225":{"position":[[2,2]]},"228":{"position":[[2,2],[13,2],[56,2],[195,2],[254,2],[420,2],[786,2],[791,2]]},"230":{"position":[[0,2]]},"235":{"position":[[2,2],[10,2],[30,2],[79,2]]},"238":{"position":[[22,2],[242,2],[319,2],[428,2],[433,2],[716,2],[1082,2],[1087,2]]},"240":{"position":[[2,2],[891,2]]},"242":{"position":[[3,2],[15,2]]},"247":{"position":[[0,2],[14,2]]},"250":{"position":[[11,2],[75,2],[1448,2],[2088,2],[2213,2]]},"254":{"position":[[3,2],[15,2]]},"258":{"position":[[0,2]]},"260":{"position":[[0,2],[36,2],[67,2],[81,2]]},"270":{"position":[[14,2],[266,2],[289,2]]},"340":{"position":[[395,2]]},"389":{"position":[[323,2]]},"618":{"position":[[41,2]]},"621":{"position":[[64,2],[86,2]]},"623":{"position":[[14,2],[41,2]]},"626":{"position":[[75,2],[219,2],[341,2],[566,2],[811,2],[998,2],[1280,2]]},"628":{"position":[[70,2]]},"630":{"position":[[147,2],[278,2],[455,2],[530,2]]},"634":{"position":[[33,2],[47,2]]},"636":{"position":[[36,2]]},"638":{"position":[[21,2],[52,2]]},"640":{"position":[[7,2]]},"643":{"position":[[0,2],[184,2],[269,2],[314,2]]},"647":{"position":[[55,2]]},"655":{"position":[[0,2]]},"659":{"position":[[55,2]]},"661":{"position":[[0,2]]},"666":{"position":[[0,2],[47,2]]},"669":{"position":[[210,2],[365,2],[438,2],[593,2],[610,2],[975,2],[1161,2]]},"675":{"position":[[26,2]]},"678":{"position":[[0,2],[9,2]]},"681":{"position":[[2,2],[7,2],[55,2],[338,2],[405,2],[1187,2],[1198,2],[1225,2],[1242,2],[1622,2],[1836,2]]},"689":{"position":[[624,2]]},"710":{"position":[[2,2],[10,2],[30,2],[79,2]]},"713":{"position":[[22,2],[242,2],[319,2],[428,2],[433,2],[716,2],[1082,2],[1087,2]]},"715":{"position":[[2,2],[891,2]]},"717":{"position":[[3,2],[15,2]]},"722":{"position":[[0,2],[14,2]]},"725":{"position":[[11,2],[75,2],[1448,2],[2088,2],[2213,2]]},"729":{"position":[[3,2],[15,2]]},"734":{"position":[[2,2]]},"737":{"position":[[2,2],[13,2],[56,2],[195,2],[254,2],[420,2],[786,2],[791,2]]},"739":{"position":[[0,2]]},"743":{"position":[[0,2]]},"745":{"position":[[0,2],[36,2],[67,2],[81,2]]},"755":{"position":[[14,2],[266,2],[289,2]]},"787":{"position":[[395,2]]},"874":{"position":[[323,2]]},"1154":{"position":[[597,2]]},"1173":{"position":[[866,2],[1021,2]]},"1178":{"position":[[1044,2],[1203,2]]},"1191":{"position":[[143,2],[155,2],[176,2],[219,2]]},"1193":{"position":[[18,2],[178,2],[208,2]]}}}],["服务器",{"_index":1615,"t":{"1173":{"position":[[779,3],[1225,3],[1285,3]]},"1178":{"position":[[891,3]]},"1187":{"position":[[303,3]]}}}],["服务器返回",{"_index":1192,"t":{"435":{"position":[[664,5]]},"920":{"position":[[664,5]]}}}],["服务端",{"_index":1002,"t":{"314":{"position":[[89,3]]},"801":{"position":[[89,3]]}}}],["期望",{"_index":1105,"t":{"355":{"position":[[129,2]]},"832":{"position":[[129,2]]}}}],["未",{"_index":882,"t":{"220":{"position":[[1194,1]]},"423":{"position":[[420,1]]},"580":{"position":[[35,1],[107,1]]},"681":{"position":[[1194,1]]},"908":{"position":[[420,1]]},"1233":{"position":[[261,1],[307,1]]}}}],["未必",{"_index":130,"t":{"17":{"position":[[101,2]]}}}],["未来",{"_index":193,"t":{"19":{"position":[[210,2],[341,2]]},"180":{"position":[[53,2]]},"194":{"position":[[19,2]]},"200":{"position":[[9,2]]},"427":{"position":[[11,2]]},"433":{"position":[[123,2]]},"435":{"position":[[0,2]]},"437":{"position":[[446,2]]},"685":{"position":[[53,2]]},"699":{"position":[[19,2]]},"705":{"position":[[9,2]]},"912":{"position":[[11,2]]},"918":{"position":[[123,2]]},"920":{"position":[[0,2]]},"922":{"position":[[446,2]]},"1101":{"position":[[97,2]]},"1118":{"position":[[97,2]]}}}],["未注册",{"_index":1185,"t":{"418":{"position":[[405,3]]},"903":{"position":[[405,3]]}}}],["未知",{"_index":1191,"t":{"433":{"position":[[496,2]]},"918":{"position":[[496,2]]}}}],["未能",{"_index":225,"t":{"19":{"position":[[322,2]]}}}],["本",{"_index":713,"t":{"153":{"position":[[37,1]]},"638":{"position":[[37,1]]},"1028":{"position":[[153,1]]},"1191":{"position":[[182,1]]},"1193":{"position":[[126,1]]}}}],["本地",{"_index":1142,"t":{"374":{"position":[[5,2]]},"851":{"position":[[5,2]]},"1170":{"position":[[73,2]]},"1193":{"position":[[27,2]]}}}],["本能",{"_index":282,"t":{"19":{"position":[[576,2]]}}}],["本质",{"_index":614,"t":{"131":{"position":[[100,2]]},"596":{"position":[[100,2]]}}}],["本身",{"_index":1597,"t":{"1165":{"position":[[226,2]]}}}],["机",{"_index":1632,"t":{"1191":{"position":[[183,1]]}}}],["机会",{"_index":700,"t":{"149":{"position":[[26,2]]},"614":{"position":[[26,2]]}}}],["机制",{"_index":562,"t":{"115":{"position":[[89,2]]},"126":{"position":[[51,2]]},"180":{"position":[[23,2]]},"190":{"position":[[62,2]]},"205":{"position":[[44,2]]},"304":{"position":[[43,2]]},"544":{"position":[[85,2]]},"593":{"position":[[200,2]]},"623":{"position":[[89,2]]},"634":{"position":[[51,2]]},"666":{"position":[[44,2]]},"685":{"position":[[23,2]]},"695":{"position":[[62,2]]},"829":{"position":[[43,2]]},"1170":{"position":[[38,2]]}}}],["机器",{"_index":1667,"t":{"1210":{"position":[[53,2]]}}}],["权利",{"_index":48,"t":{"15":{"position":[[67,2]]}}}],["权限",{"_index":1592,"t":{"1165":{"position":[[0,2],[19,2]]},"1170":{"position":[[93,2],[135,2]]},"1173":{"position":[[397,2],[469,2]]},"1178":{"position":[[424,2],[492,2]]},"1189":{"position":[[68,2],[241,2],[256,2]]},"1193":{"position":[[93,2]]}}}],["李自成",{"_index":348,"t":{"23":{"position":[[54,3]]}}}],["条",{"_index":1200,"t":{"437":{"position":[[634,1]]},"922":{"position":[[634,1]]}}}],["条件",{"_index":830,"t":{"198":{"position":[[1935,2]]},"367":{"position":[[397,2],[479,2]]},"376":{"position":[[57,2]]},"519":{"position":[[24,2]]},"522":{"position":[[0,2],[31,2],[45,2],[71,2]]},"536":{"position":[[73,2],[143,2]]},"540":{"position":[[41,2],[61,2],[195,2]]},"542":{"position":[[2,2]]},"562":{"position":[[44,2],[467,2]]},"564":{"position":[[17,2],[216,2],[553,2]]},"576":{"position":[[28,2]]},"703":{"position":[[1935,2]]},"844":{"position":[[397,2],[479,2]]},"853":{"position":[[57,2]]},"980":{"position":[[10,2],[126,2]]},"1226":{"position":[[133,2]]}}}],["来看",{"_index":263,"t":{"19":{"position":[[492,2]]}}}],["来说",{"_index":1575,"t":{"1154":{"position":[[775,2]]}}}],["松",{"_index":776,"t":{"184":{"position":[[201,1]]},"689":{"position":[[201,1]]}}}],["极端",{"_index":99,"t":{"15":{"position":[[224,2]]},"141":{"position":[[42,2]]},"606":{"position":[[42,2]]}}}],["构建",{"_index":847,"t":{"202":{"position":[[103,2]]},"304":{"position":[[59,2]]},"584":{"position":[[4,2]]},"591":{"position":[[79,2]]},"593":{"position":[[177,2]]},"707":{"position":[[103,2]]},"829":{"position":[[59,2]]},"1005":{"position":[[57,2]]},"1161":{"position":[[1,2]]},"1167":{"position":[[44,2]]}}}],["构造",{"_index":1047,"t":{"329":{"position":[[0,2]]},"776":{"position":[[0,2]]},"1185":{"position":[[117,2]]}}}],["构造函数",{"_index":769,"t":{"184":{"position":[[146,4]]},"321":{"position":[[51,4]]},"344":{"position":[[60,4]]},"689":{"position":[[146,4]]},"768":{"position":[[51,4]]},"791":{"position":[[60,4]]}}}],["枚举",{"_index":872,"t":{"220":{"position":[[91,2],[100,2]]},"681":{"position":[[91,2],[100,2]]}}}],["架构",{"_index":518,"t":{"110":{"position":[[16,2]]},"126":{"position":[[40,2]]},"344":{"position":[[121,2]]},"472":{"position":[[79,2]]},"618":{"position":[[16,2]]},"634":{"position":[[40,2]]},"791":{"position":[[121,2]]},"954":{"position":[[79,2]]},"1191":{"position":[[145,2]]},"1230":{"position":[[66,2],[405,2]]}}}],["架构设计",{"_index":738,"t":{"180":{"position":[[33,4]]},"316":{"position":[[496,4]]},"685":{"position":[[33,4]]},"803":{"position":[[496,4]]}}}],["某个",{"_index":1296,"t":{"522":{"position":[[29,2]]},"564":{"position":[[15,2],[37,2]]},"566":{"position":[[12,2]]},"1159":{"position":[[23,2]]}}}],["某些",{"_index":105,"t":{"17":{"position":[[9,2]]},"1154":{"position":[[365,2],[635,2]]},"1165":{"position":[[146,2]]}}}],["某种",{"_index":1706,"t":{"1239":{"position":[[158,2]]}}}],["查找",{"_index":1624,"t":{"1189":{"position":[[208,2]]}}}],["查看",{"_index":598,"t":{"128":{"position":[[130,2]]},"164":{"position":[[176,2]]},"166":{"position":[[72,2]]},"178":{"position":[[295,2]]},"214":{"position":[[492,2]]},"222":{"position":[[482,2]]},"232":{"position":[[591,2]]},"244":{"position":[[1407,2]]},"256":{"position":[[997,2]]},"270":{"position":[[264,2]]},"278":{"position":[[993,2]]},"442":{"position":[[210,2],[282,2],[313,2]]},"636":{"position":[[130,2]]},"649":{"position":[[176,2]]},"651":{"position":[[72,2]]},"663":{"position":[[295,2]]},"675":{"position":[[492,2]]},"683":{"position":[[482,2]]},"719":{"position":[[1407,2]]},"731":{"position":[[997,2]]},"741":{"position":[[591,2]]},"755":{"position":[[264,2]]},"763":{"position":[[993,2]]},"1197":{"position":[[3,2]]},"1200":{"position":[[37,2]]},"1224":{"position":[[135,2]]},"1226":{"position":[[163,2]]},"1228":{"position":[[126,2]]},"1230":{"position":[[23,2],[52,2],[260,2]]},"1233":{"position":[[23,2]]},"1235":{"position":[[22,2]]}}}],["查询",{"_index":972,"t":{"307":{"position":[[1290,2]]},"794":{"position":[[1290,2]]},"1013":{"position":[[34,2]]},"1197":{"position":[[17,2]]},"1201":{"position":[[579,2]]}}}],["标准",{"_index":858,"t":{"208":{"position":[[2,2],[51,2],[393,2]]},"504":{"position":[[25,2]]},"516":{"position":[[90,2],[118,2],[123,2]]},"519":{"position":[[15,2]]},"578":{"position":[[19,2]]},"669":{"position":[[2,2],[51,2],[393,2]]},"1008":{"position":[[7,2]]},"1023":{"position":[[129,2]]},"1028":{"position":[[88,2]]},"1049":{"position":[[17,2]]},"1083":{"position":[[10,2]]},"1088":{"position":[[10,2]]},"1103":{"position":[[126,2]]},"1120":{"position":[[126,2]]},"1193":{"position":[[39,2]]}}}],["标准化",{"_index":849,"t":{"205":{"position":[[14,3]]},"666":{"position":[[14,3]]}}}],["标志",{"_index":1451,"t":{"996":{"position":[[116,2]]},"1230":{"position":[[238,2]]}}}],["标签",{"_index":1504,"t":{"1064":{"position":[[37,2]]},"1070":{"position":[[0,2]]},"1125":{"position":[[120,2]]},"1136":{"position":[[9,2],[277,2]]}}}],["标记",{"_index":1696,"t":{"1237":{"position":[[2,2],[60,2],[118,2]]}}}],["标识",{"_index":1605,"t":{"1170":{"position":[[66,2]]}}}],["栈",{"_index":1389,"t":{"582":{"position":[[6,1]]},"1170":{"position":[[86,1]]},"1191":{"position":[[234,1]]},"1224":{"position":[[158,1]]},"1230":{"position":[[262,1],[362,1]]}}}],["树",{"_index":1598,"t":{"1167":{"position":[[29,1]]}}}],["校验",{"_index":1433,"t":{"972":{"position":[[78,2],[220,2]]},"1028":{"position":[[136,2]]},"1035":{"position":[[99,2],[178,2]]},"1078":{"position":[[34,2]]}}}],["核心",{"_index":520,"t":{"110":{"position":[[25,2]]},"118":{"position":[[189,2]]},"128":{"position":[[4,2]]},"180":{"position":[[84,2]]},"184":{"position":[[175,2]]},"202":{"position":[[122,2]]},"316":{"position":[[166,2]]},"344":{"position":[[4,2]]},"346":{"position":[[14,2]]},"376":{"position":[[4,2]]},"429":{"position":[[36,2]]},"439":{"position":[[4,2]]},"618":{"position":[[25,2]]},"626":{"position":[[189,2]]},"636":{"position":[[4,2]]},"685":{"position":[[84,2]]},"689":{"position":[[175,2]]},"707":{"position":[[122,2]]},"791":{"position":[[4,2]]},"803":{"position":[[166,2]]},"853":{"position":[[4,2]]},"855":{"position":[[14,2]]},"914":{"position":[[36,2]]},"924":{"position":[[4,2]]},"966":{"position":[[18,2]]},"1125":{"position":[[170,2]]},"1127":{"position":[[18,2]]},"1154":{"position":[[673,2]]}}}],["核心思想",{"_index":519,"t":{"110":{"position":[[19,4]]},"281":{"position":[[82,4]]},"319":{"position":[[81,4]]},"355":{"position":[[78,4]]},"379":{"position":[[82,4]]},"406":{"position":[[68,4]]},"618":{"position":[[19,4]]},"766":{"position":[[81,4]]},"806":{"position":[[82,4]]},"832":{"position":[[78,4]]},"864":{"position":[[82,4]]},"891":{"position":[[68,4]]}}}],["根",{"_index":1583,"t":{"1157":{"position":[[53,1]]}}}],["根基",{"_index":279,"t":{"19":{"position":[[561,2]]}}}],["根据",{"_index":838,"t":{"198":{"position":[[2027,2]]},"210":{"position":[[0,2]]},"433":{"position":[[262,2]]},"671":{"position":[[0,2]]},"703":{"position":[[2027,2]]},"918":{"position":[[262,2]]},"1025":{"position":[[121,2]]},"1167":{"position":[[99,2]]},"1230":{"position":[[396,2]]}}}],["根目录",{"_index":1550,"t":{"1145":{"position":[[31,3],[58,3]]},"1147":{"position":[[24,3],[46,3],[118,3],[144,3]]},"1150":{"position":[[36,3]]},"1154":{"position":[[4,3],[1117,3],[1448,3]]}}}],["格式",{"_index":807,"t":{"190":{"position":[[7,2]]},"208":{"position":[[6,2],[53,2]]},"367":{"position":[[465,2]]},"490":{"position":[[138,2]]},"669":{"position":[[6,2],[53,2]]},"695":{"position":[[7,2]]},"844":{"position":[[465,2]]},"1070":{"position":[[34,2],[350,2],[378,2]]}}}],["框架",{"_index":1055,"t":{"340":{"position":[[11,2],[286,2]]},"344":{"position":[[82,2]]},"787":{"position":[[11,2],[286,2]]},"791":{"position":[[82,2]]},"1078":{"position":[[56,2]]},"1125":{"position":[[156,2]]},"1193":{"position":[[47,2]]}}}],["桶",{"_index":602,"t":{"131":{"position":[[15,1]]},"133":{"position":[[13,1],[83,1],[99,1],[121,1],[136,1],[152,1],[173,1]]},"137":{"position":[[213,1],[418,1]]},"143":{"position":[[25,1],[39,1],[44,1]]},"145":{"position":[[4,1],[19,1],[34,1]]},"151":{"position":[[2,1],[198,1]]},"596":{"position":[[15,1]]},"598":{"position":[[13,1],[83,1],[99,1],[121,1],[136,1],[152,1],[173,1]]},"602":{"position":[[213,1],[418,1]]},"608":{"position":[[25,1],[39,1],[44,1]]},"610":{"position":[[4,1],[19,1],[34,1]]},"616":{"position":[[2,1],[198,1]]}}}],["检查",{"_index":985,"t":{"310":{"position":[[413,2],[626,2]]},"490":{"position":[[90,2]]},"522":{"position":[[69,2]]},"536":{"position":[[71,2]]},"540":{"position":[[43,2],[59,2]]},"542":{"position":[[4,2]]},"797":{"position":[[413,2],[626,2]]},"972":{"position":[[83,2]]},"1125":{"position":[[178,2]]},"1189":{"position":[[58,2]]}}}],["检查和",{"_index":1533,"t":{"1125":{"position":[[26,3]]}}}],["检测",{"_index":908,"t":{"260":{"position":[[40,2]]},"488":{"position":[[52,2]]},"745":{"position":[[40,2]]}}}],["概念",{"_index":1019,"t":{"316":{"position":[[168,2]]},"803":{"position":[[168,2]]}}}],["模块",{"_index":552,"t":{"113":{"position":[[106,2]]},"115":{"position":[[47,2]]},"184":{"position":[[3,2]]},"319":{"position":[[90,2],[99,2]]},"324":{"position":[[5,2],[13,2]]},"326":{"position":[[67,2],[344,2]]},"344":{"position":[[38,2],[49,2],[135,2],[144,2]]},"348":{"position":[[116,2],[367,2],[375,2]]},"379":{"position":[[93,2],[119,2]]},"406":{"position":[[82,2]]},"584":{"position":[[2,2]]},"621":{"position":[[106,2]]},"623":{"position":[[47,2]]},"689":{"position":[[3,2]]},"766":{"position":[[90,2],[99,2]]},"771":{"position":[[5,2],[13,2]]},"773":{"position":[[67,2],[344,2]]},"791":{"position":[[38,2],[49,2],[135,2],[144,2]]},"857":{"position":[[116,2],[367,2],[375,2]]},"864":{"position":[[93,2],[119,2]]},"891":{"position":[[82,2]]}}}],["模块化",{"_index":495,"t":{"104":{"position":[[192,3]]},"113":{"position":[[40,3]]},"621":{"position":[[40,3]]}}}],["模型",{"_index":815,"t":{"192":{"position":[[5,2]]},"198":{"position":[[1986,2]]},"314":{"position":[[94,2]]},"558":{"position":[[12,2]]},"697":{"position":[[5,2]]},"703":{"position":[[1986,2]]},"801":{"position":[[94,2]]}}}],["模式",{"_index":430,"t":{"48":{"position":[[19,2]]},"186":{"position":[[53,2]]},"198":{"position":[[7611,2]]},"316":{"position":[[15,2],[20,2],[441,2]]},"439":{"position":[[41,2],[47,2]]},"445":{"position":[[2,2]]},"546":{"position":[[50,2]]},"576":{"position":[[105,2]]},"691":{"position":[[53,2]]},"703":{"position":[[7611,2]]},"803":{"position":[[15,2],[20,2],[441,2]]},"924":{"position":[[41,2],[47,2]]},"927":{"position":[[2,2]]},"996":{"position":[[160,2]]}}}],["模式匹配",{"_index":434,"t":{"52":{"position":[[28,4]]}}}],["模拟",{"_index":581,"t":{"118":{"position":[[1193,2]]},"120":{"position":[[751,2]]},"158":{"position":[[312,2]]},"176":{"position":[[146,2]]},"210":{"position":[[184,2]]},"302":{"position":[[50,2]]},"307":{"position":[[982,2]]},"314":{"position":[[1065,2],[1783,2],[1874,2]]},"626":{"position":[[1193,2]]},"628":{"position":[[751,2]]},"643":{"position":[[312,2]]},"661":{"position":[[146,2]]},"671":{"position":[[184,2]]},"794":{"position":[[982,2]]},"801":{"position":[[1065,2],[1783,2],[1874,2]]},"827":{"position":[[50,2]]},"1203":{"position":[[623,2]]}}}],["次",{"_index":668,"t":{"139":{"position":[[22,1]]},"604":{"position":[[22,1]]}}}],["次数",{"_index":1276,"t":{"490":{"position":[[160,2]]},"580":{"position":[[428,2]]}}}],["欢迎",{"_index":1048,"t":{"331":{"position":[[203,2]]},"387":{"position":[[271,2]]},"778":{"position":[[203,2]]},"872":{"position":[[271,2]]},"1001":{"position":[[282,2]]}}}],["歌唱",{"_index":1113,"t":{"360":{"position":[[186,2]]},"362":{"position":[[262,2]]},"837":{"position":[[186,2]]},"839":{"position":[[262,2]]}}}],["正在",{"_index":1353,"t":{"574":{"position":[[182,2]]},"1203":{"position":[[822,2]]}}}],["正常",{"_index":1011,"t":{"314":{"position":[[1785,2],[2130,2]]},"801":{"position":[[1785,2],[2130,2]]},"957":{"position":[[41,2]]},"1154":{"position":[[503,2],[1161,2]]},"1165":{"position":[[208,2]]},"1218":{"position":[[60,2]]}}}],["正是",{"_index":284,"t":{"19":{"position":[[581,2]]}}}],["正确",{"_index":1136,"t":{"370":{"position":[[114,2]]},"497":{"position":[[118,2]]},"546":{"position":[[46,2],[56,2]]},"847":{"position":[[114,2]]},"1154":{"position":[[322,2]]},"1193":{"position":[[101,2]]},"1230":{"position":[[412,2]]}}}],["此时",{"_index":1303,"t":{"522":{"position":[[114,2]]},"1131":{"position":[[147,2],[224,2]]},"1154":{"position":[[1425,2]]},"1200":{"position":[[17,2],[362,2]]},"1233":{"position":[[386,2]]}}}],["步入",{"_index":34,"t":{"15":{"position":[[19,2]]}}}],["步骤",{"_index":1670,"t":{"1215":{"position":[[14,2]]}}}],["武装",{"_index":200,"t":{"19":{"position":[[229,2]]}}}],["死",{"_index":1643,"t":{"1195":{"position":[[9,1],[28,1]]},"1200":{"position":[[15,1],[367,1]]},"1201":{"position":[[16,1]]}}}],["死锁",{"_index":990,"t":{"312":{"position":[[56,2]]},"799":{"position":[[56,2]]}}}],["段",{"_index":810,"t":{"190":{"position":[[59,1]]},"194":{"position":[[152,1]]},"429":{"position":[[209,1]]},"695":{"position":[[59,1]]},"699":{"position":[[152,1]]},"914":{"position":[[209,1]]},"964":{"position":[[51,1],[62,1]]},"1028":{"position":[[135,1]]},"1059":{"position":[[14,1],[42,1]]},"1064":{"position":[[36,1]]},"1070":{"position":[[18,1],[613,1]]},"1125":{"position":[[225,1],[241,1]]},"1136":{"position":[[4,1],[276,1]]},"1142":{"position":[[91,1]]},"1197":{"position":[[103,1],[112,1]]}}}],["每个",{"_index":396,"t":{"23":{"position":[[243,2]]},"57":{"position":[[1,2]]},"104":{"position":[[172,2]]},"128":{"position":[[41,2]]},"143":{"position":[[42,2]]},"172":{"position":[[3,2]]},"184":{"position":[[165,2]]},"260":{"position":[[65,2]]},"270":{"position":[[287,2]]},"304":{"position":[[106,2]]},"348":{"position":[[64,2]]},"382":{"position":[[32,2]]},"389":{"position":[[747,2]]},"560":{"position":[[457,2]]},"582":{"position":[[172,2]]},"608":{"position":[[42,2]]},"636":{"position":[[41,2]]},"657":{"position":[[3,2]]},"689":{"position":[[165,2]]},"745":{"position":[[65,2]]},"755":{"position":[[287,2]]},"829":{"position":[[106,2]]},"857":{"position":[[64,2]]},"867":{"position":[[32,2]]},"874":{"position":[[747,2]]}}}],["每次",{"_index":729,"t":{"172":{"position":[[61,2]]},"416":{"position":[[335,2]]},"657":{"position":[[61,2]]},"901":{"position":[[335,2]]}}}],["每秒",{"_index":634,"t":{"133":{"position":[[112,2]]},"139":{"position":[[17,2]]},"598":{"position":[[112,2]]},"604":{"position":[[17,2]]}}}],["比例",{"_index":690,"t":{"143":{"position":[[75,2]]},"608":{"position":[[75,2]]}}}],["比如",{"_index":496,"t":{"104":{"position":[[198,2]]},"113":{"position":[[21,2]]},"621":{"position":[[21,2]]},"1154":{"position":[[1069,2]]}}}],["水平",{"_index":168,"t":{"19":{"position":[[125,2]]}}}],["永久",{"_index":998,"t":{"314":{"position":[[30,2]]},"556":{"position":[[673,2]]},"801":{"position":[[30,2]]}}}],["汇编",{"_index":1689,"t":{"1230":{"position":[[315,2]]}}}],["池",{"_index":816,"t":{"192":{"position":[[26,1]]},"697":{"position":[[26,1]]}}}],["池子",{"_index":1301,"t":{"522":{"position":[[98,2]]}}}],["汪",{"_index":1138,"t":{"370":{"position":[[195,1],[300,1]]},"847":{"position":[[195,1],[300,1]]}}}],["汪汪",{"_index":1137,"t":{"370":{"position":[[193,2],[298,2]]},"847":{"position":[[193,2],[298,2]]}}}],["沙箱",{"_index":1553,"t":{"1145":{"position":[[92,2]]},"1165":{"position":[[265,2]]}}}],["没",{"_index":1426,"t":{"970":{"position":[[33,1]]}}}],["没有",{"_index":306,"t":{"21":{"position":[[46,2]]},"270":{"position":[[301,2]]},"355":{"position":[[144,2]]},"370":{"position":[[7,2]]},"445":{"position":[[59,2]]},"556":{"position":[[624,2]]},"755":{"position":[[301,2]]},"832":{"position":[[144,2]]},"847":{"position":[[7,2]]},"927":{"position":[[59,2]]},"1147":{"position":[[158,2]]},"1154":{"position":[[358,2],[465,2],[625,2],[844,2],[1040,2]]},"1165":{"position":[[185,2]]},"1201":{"position":[[517,2]]}}}],["泄漏",{"_index":1404,"t":{"593":{"position":[[165,2]]}}}],["泄露",{"_index":1247,"t":{"475":{"position":[[34,2]]},"488":{"position":[[26,2]]}}}],["法则",{"_index":1090,"t":{"350":{"position":[[50,2]]},"859":{"position":[[50,2]]}}}],["泛",{"_index":1029,"t":{"316":{"position":[[2927,1],[3695,1],[3977,1],[5609,1]]},"803":{"position":[[2927,1],[3695,1],[3977,1],[5609,1]]}}}],["泡沫",{"_index":171,"t":{"19":{"position":[[143,2],[327,2]]}}}],["注入",{"_index":759,"t":{"184":{"position":[[56,2],[141,2],[155,2]]},"316":{"position":[[397,2]]},"319":{"position":[[163,2]]},"321":{"position":[[42,2],[61,2]]},"340":{"position":[[41,2],[179,2]]},"344":{"position":[[31,2],[64,2],[69,2]]},"389":{"position":[[770,2]]},"403":{"position":[[53,2]]},"689":{"position":[[56,2],[141,2],[155,2]]},"766":{"position":[[163,2]]},"768":{"position":[[42,2],[61,2]]},"787":{"position":[[41,2],[179,2]]},"791":{"position":[[31,2],[64,2],[69,2]]},"803":{"position":[[397,2]]},"874":{"position":[[770,2]]},"888":{"position":[[53,2]]}}}],["注册",{"_index":558,"t":{"115":{"position":[[16,2]]},"118":{"position":[[216,2],[564,2]]},"122":{"position":[[145,2]]},"214":{"position":[[21,2]]},"228":{"position":[[369,2],[418,2]]},"238":{"position":[[665,2],[714,2]]},"260":{"position":[[34,2]]},"270":{"position":[[12,2]]},"331":{"position":[[168,2],[211,2]]},"418":{"position":[[72,2]]},"472":{"position":[[69,2]]},"623":{"position":[[16,2]]},"626":{"position":[[216,2],[564,2]]},"630":{"position":[[145,2]]},"675":{"position":[[21,2]]},"713":{"position":[[665,2],[714,2]]},"737":{"position":[[369,2],[418,2]]},"745":{"position":[[34,2]]},"755":{"position":[[12,2]]},"778":{"position":[[168,2],[211,2]]},"903":{"position":[[72,2]]},"954":{"position":[[69,2]]},"1173":{"position":[[490,2]]}}}],["注意",{"_index":1371,"t":{"580":{"position":[[50,2]]},"980":{"position":[[101,2]]},"1193":{"position":[[62,2]]},"1201":{"position":[[509,2]]}}}],["注意事项",{"_index":1421,"t":{"966":{"position":[[55,4]]}}}],["注解",{"_index":1648,"t":{"1197":{"position":[[74,2]]}}}],["活着",{"_index":347,"t":{"23":{"position":[[45,2]]}}}],["派生类",{"_index":1080,"t":{"348":{"position":[[220,3]]},"857":{"position":[[220,3]]}}}],["流",{"_index":909,"t":{"263":{"position":[[73,1]]},"748":{"position":[[73,1]]},"968":{"position":[[208,1]]}}}],["流向",{"_index":61,"t":{"15":{"position":[[102,2]]}}}],["流式",{"_index":1283,"t":{"504":{"position":[[16,2]]},"516":{"position":[[68,2]]},"968":{"position":[[183,2]]},"1023":{"position":[[185,2]]},"1059":{"position":[[50,2]]}}}],["流程",{"_index":633,"t":{"133":{"position":[[94,2]]},"598":{"position":[[94,2]]}}}],["流行",{"_index":1057,"t":{"340":{"position":[[18,2]]},"787":{"position":[[18,2]]}}}],["流量",{"_index":603,"t":{"131":{"position":[[20,2]]},"135":{"position":[[58,2]]},"141":{"position":[[22,2]]},"596":{"position":[[20,2]]},"600":{"position":[[58,2]]},"606":{"position":[[22,2]]}}}],["测试",{"_index":897,"t":{"242":{"position":[[102,2]]},"302":{"position":[[45,2]]},"316":{"position":[[462,2],[5976,2]]},"342":{"position":[[19,2],[34,2]]},"344":{"position":[[105,2]]},"382":{"position":[[55,2],[69,2]]},"384":{"position":[[27,2]]},"442":{"position":[[400,2],[461,2]]},"717":{"position":[[102,2]]},"789":{"position":[[19,2],[34,2]]},"791":{"position":[[105,2]]},"803":{"position":[[462,2],[5976,2]]},"827":{"position":[[45,2]]},"867":{"position":[[55,2],[69,2]]},"869":{"position":[[27,2]]},"1161":{"position":[[11,2]]},"1167":{"position":[[41,2]]},"1189":{"position":[[51,2]]}}}],["测试日志",{"_index":585,"t":{"122":{"position":[[451,4]]},"630":{"position":[[451,4]]}}}],["测试步骤",{"_index":498,"t":{"104":{"position":[[217,4]]}}}],["浏览器",{"_index":1211,"t":{"442":{"position":[[207,3]]}}}],["浮点",{"_index":1683,"t":{"1230":{"position":[[166,2]]}}}],["消息",{"_index":559,"t":{"115":{"position":[[19,2]]},"153":{"position":[[25,2],[32,2],[49,2]]},"155":{"position":[[4,2]]},"158":{"position":[[4,2],[102,2]]},"162":{"position":[[8,2]]},"172":{"position":[[65,2],[86,2]]},"205":{"position":[[17,2]]},"208":{"position":[[4,2]]},"220":{"position":[[1205,2]]},"554":{"position":[[261,2],[363,2]]},"556":{"position":[[626,2]]},"623":{"position":[[19,2]]},"638":{"position":[[25,2],[32,2],[49,2]]},"640":{"position":[[4,2]]},"643":{"position":[[4,2],[102,2]]},"647":{"position":[[8,2]]},"657":{"position":[[65,2],[86,2]]},"666":{"position":[[17,2]]},"669":{"position":[[4,2]]},"681":{"position":[[1205,2]]},"992":{"position":[[333,2]]}}}],["消息传递",{"_index":553,"t":{"113":{"position":[[111,4]]},"552":{"position":[[15,4]]},"621":{"position":[[111,4]]}}}],["消耗",{"_index":638,"t":{"133":{"position":[[158,2]]},"598":{"position":[[158,2]]}}}],["消费",{"_index":1313,"t":{"538":{"position":[[514,2],[527,2]]},"968":{"position":[[236,2]]}}}],["消费者",{"_index":1344,"t":{"558":{"position":[[9,3]]}}}],["涵盖",{"_index":1484,"t":{"1028":{"position":[[220,2]]}}}],["淡化",{"_index":343,"t":{"23":{"position":[[29,2]]}}}],["淮",{"_index":362,"t":{"23":{"position":[[90,1]]}}}],["深入",{"_index":1522,"t":{"1074":{"position":[[231,2]]}}}],["深度",{"_index":21,"t":{"13":{"position":[[26,2]]},"582":{"position":[[167,2]]}}}],["添加",{"_index":436,"t":{"57":{"position":[[6,2]]},"194":{"position":[[52,2]]},"196":{"position":[[45,2]]},"342":{"position":[[42,2]]},"350":{"position":[[253,2]]},"408":{"position":[[20,2]]},"427":{"position":[[17,2]]},"429":{"position":[[203,2]]},"433":{"position":[[127,2]]},"435":{"position":[[4,2]]},"437":{"position":[[448,2]]},"439":{"position":[[104,2]]},"699":{"position":[[52,2]]},"701":{"position":[[45,2]]},"789":{"position":[[42,2]]},"859":{"position":[[253,2]]},"893":{"position":[[20,2]]},"912":{"position":[[17,2]]},"914":{"position":[[203,2]]},"918":{"position":[[127,2]]},"920":{"position":[[4,2]]},"922":{"position":[[448,2]]},"924":{"position":[[104,2]]},"1167":{"position":[[112,2]]},"1175":{"position":[[18,2]]},"1180":{"position":[[55,2],[165,2]]},"1187":{"position":[[362,2],[375,2]]},"1189":{"position":[[164,2],[265,2]]},"1193":{"position":[[113,2]]},"1215":{"position":[[6,2]]}}}],["清晰",{"_index":755,"t":{"184":{"position":[[8,2]]},"312":{"position":[[104,2],[118,2]]},"316":{"position":[[3041,2]]},"689":{"position":[[8,2]]},"799":{"position":[[104,2],[118,2]]},"803":{"position":[[3041,2]]}}}],["清理",{"_index":994,"t":{"312":{"position":[[139,2]]},"799":{"position":[[139,2]]},"957":{"position":[[96,2]]},"1173":{"position":[[134,2],[205,2]]},"1178":{"position":[[161,2],[232,2]]},"1189":{"position":[[172,2]]}}}],["清空",{"_index":1434,"t":{"972":{"position":[[173,2]]}}}],["游泳",{"_index":939,"t":{"286":{"position":[[92,2],[367,2]]},"811":{"position":[[92,2],[367,2]]}}}],["源于",{"_index":185,"t":{"19":{"position":[[184,2]]}}}],["源代码",{"_index":1677,"t":{"1224":{"position":[[137,3]]}}}],["源码",{"_index":1669,"t":{"1215":{"position":[[8,2]]}}}],["溢出",{"_index":1392,"t":{"582":{"position":[[214,2]]}}}],["满",{"_index":663,"t":{"137":{"position":[[419,1]]},"602":{"position":[[419,1]]}}}],["满足",{"_index":1292,"t":{"519":{"position":[[69,2]]},"522":{"position":[[34,2],[49,2]]},"536":{"position":[[145,2]]},"564":{"position":[[19,2]]}}}],["滥用",{"_index":1432,"t":{"970":{"position":[[81,2]]},"1142":{"position":[[15,2]]}}}],["演示",{"_index":1034,"t":{"316":{"position":[[5586,2]]},"803":{"position":[[5586,2]]}}}],["演进",{"_index":744,"t":{"180":{"position":[[63,2]]},"202":{"position":[[61,2]]},"685":{"position":[[63,2]]},"707":{"position":[[61,2]]}}}],["灵活",{"_index":515,"t":{"108":{"position":[[159,2]]},"346":{"position":[[30,2]]},"408":{"position":[[64,2]]},"855":{"position":[[30,2]]},"893":{"position":[[64,2]]}}}],["灵活处理",{"_index":1483,"t":{"1028":{"position":[[215,4]]}}}],["灵活性",{"_index":465,"t":{"92":{"position":[[92,3]]},"208":{"position":[[315,3]]},"316":{"position":[[72,3]]},"350":{"position":[[31,3]]},"669":{"position":[[315,3]]},"803":{"position":[[72,3]]},"859":{"position":[[31,3]]}}}],["点",{"_index":441,"t":{"64":{"position":[[13,1]]},"184":{"position":[[118,1]]},"389":{"position":[[718,1]]},"689":{"position":[[118,1]]},"874":{"position":[[718,1]]},"1193":{"position":[[64,1]]}}}],["点击",{"_index":1418,"t":{"957":{"position":[[126,2]]}}}],["热",{"_index":888,"t":{"235":{"position":[[4,1]]},"238":{"position":[[19,1]]},"242":{"position":[[0,1],[12,1],[21,1]]},"247":{"position":[[2,1]]},"254":{"position":[[0,1],[12,1],[21,1]]},"260":{"position":[[14,1]]},"710":{"position":[[4,1]]},"713":{"position":[[19,1]]},"717":{"position":[[0,1],[12,1],[21,1]]},"722":{"position":[[2,1]]},"729":{"position":[[0,1],[12,1],[21,1]]},"745":{"position":[[14,1]]},"1187":{"position":[[258,1]]}}}],["然后",{"_index":687,"t":{"143":{"position":[[55,2]]},"307":{"position":[[1199,2]]},"608":{"position":[[55,2]]},"794":{"position":[[1199,2]]},"1061":{"position":[[1891,2]]},"1131":{"position":[[343,2]]}}}],["然而",{"_index":36,"t":{"15":{"position":[[26,2]]},"17":{"position":[[76,2]]},"19":{"position":[[30,2],[262,2]]},"21":{"position":[[118,2]]},"1167":{"position":[[56,2]]}}}],["爆发",{"_index":655,"t":{"135":{"position":[[87,2]]},"600":{"position":[[87,2]]}}}],["父",{"_index":1107,"t":{"357":{"position":[[16,1],[33,1],[54,1]]},"834":{"position":[[16,1],[33,1],[54,1]]},"1091":{"position":[[154,1]]},"1108":{"position":[[154,1]]},"1197":{"position":[[132,1]]},"1200":{"position":[[46,1],[449,1]]},"1201":{"position":[[21,1],[414,1],[514,1]]},"1203":{"position":[[706,1],[718,1],[769,1],[819,1],[853,1],[873,1]]},"1233":{"position":[[146,1],[197,1],[355,1]]}}}],["父亲",{"_index":1642,"t":{"1195":{"position":[[6,2],[30,2]]},"1200":{"position":[[12,2],[364,2]]}}}],["父母",{"_index":298,"t":{"21":{"position":[[18,2],[70,2],[143,2]]}}}],["片段",{"_index":501,"t":{"104":{"position":[[241,2]]}}}],["版本",{"_index":1257,"t":{"480":{"position":[[516,2]]},"591":{"position":[[115,2],[125,2]]},"593":{"position":[[179,2]]},"957":{"position":[[55,2],[66,2],[92,2]]},"1161":{"position":[[5,2]]},"1163":{"position":[[10,2]]}}}],["物质",{"_index":274,"t":{"19":{"position":[[540,2]]}}}],["特别",{"_index":1403,"t":{"593":{"position":[[156,2]]}}}],["特定",{"_index":338,"t":{"23":{"position":[[15,2]]},"281":{"position":[[115,2]]},"806":{"position":[[115,2]]},"1001":{"position":[[30,2]]},"1159":{"position":[[31,2]]},"1161":{"position":[[3,2]]},"1163":{"position":[[8,2]]},"1165":{"position":[[152,2]]},"1167":{"position":[[24,2]]},"1226":{"position":[[12,2]]},"1230":{"position":[[54,2]]},"1235":{"position":[[74,2]]}}}],["特定条件",{"_index":1293,"t":{"519":{"position":[[71,4]]}}}],["特性",{"_index":988,"t":{"312":{"position":[[2,2]]},"544":{"position":[[0,2]]},"799":{"position":[[2,2]]},"1125":{"position":[[15,2]]}}}],["特权",{"_index":1631,"t":{"1191":{"position":[[174,2]]}}}],["特殊",{"_index":1373,"t":{"580":{"position":[[76,2]]},"1230":{"position":[[131,2]]}}}],["特点",{"_index":1603,"t":{"1170":{"position":[[41,2]]}}}],["特色",{"_index":1051,"t":{"333":{"position":[[14,2]]},"780":{"position":[[14,2]]}}}],["状态",{"_index":825,"t":{"198":{"position":[[1905,2]]},"200":{"position":[[105,2]]},"205":{"position":[[26,2]]},"217":{"position":[[2,2]]},"220":{"position":[[4,2],[57,2],[226,2],[1189,2]]},"247":{"position":[[7,2],[18,2]]},"250":{"position":[[2,2],[20,2],[84,2],[1833,2],[2977,2]]},"252":{"position":[[2,2]]},"258":{"position":[[2,2]]},"260":{"position":[[2,2],[47,2],[73,2]]},"270":{"position":[[180,2],[272,2],[280,2]]},"272":{"position":[[250,2]]},"310":{"position":[[417,2]]},"316":{"position":[[1030,2]]},"435":{"position":[[671,2]]},"522":{"position":[[138,2]]},"666":{"position":[[26,2]]},"678":{"position":[[2,2]]},"681":{"position":[[4,2],[57,2],[226,2],[1189,2]]},"703":{"position":[[1905,2]]},"705":{"position":[[105,2]]},"722":{"position":[[7,2],[18,2]]},"725":{"position":[[2,2],[20,2],[84,2],[1833,2],[2977,2]]},"727":{"position":[[2,2]]},"743":{"position":[[2,2]]},"745":{"position":[[2,2],[47,2],[73,2]]},"755":{"position":[[180,2],[272,2],[280,2]]},"757":{"position":[[250,2]]},"797":{"position":[[417,2]]},"803":{"position":[[1030,2]]},"920":{"position":[[671,2]]},"1059":{"position":[[96,2]]},"1154":{"position":[[398,2],[539,2],[577,2],[687,2]]},"1197":{"position":[[120,2],[165,2],[198,2]]}}}],["狗",{"_index":942,"t":{"286":{"position":[[326,1],[365,1]]},"811":{"position":[[326,1],[365,1]]}}}],["独立",{"_index":474,"t":{"94":{"position":[[57,2]]},"104":{"position":[[245,2]]},"115":{"position":[[45,2]]},"128":{"position":[[38,2]]},"145":{"position":[[37,2]]},"389":{"position":[[741,2]]},"610":{"position":[[37,2]]},"623":{"position":[[45,2]]},"636":{"position":[[38,2]]},"874":{"position":[[741,2]]}}}],["独裁政权",{"_index":52,"t":{"15":{"position":[[79,4]]}}}],["狭隘",{"_index":382,"t":{"23":{"position":[[179,2]]}}}],["猜测",{"_index":1207,"t":{"442":{"position":[[163,2]]}}}],["率先",{"_index":33,"t":{"15":{"position":[[17,2]]}}}],["环",{"_index":1606,"t":{"1170":{"position":[[75,1]]}}}],["环境",{"_index":1399,"t":{"593":{"position":[[91,2],[186,2]]},"1145":{"position":[[87,2]]},"1147":{"position":[[147,2]]},"1152":{"position":[[83,2]]},"1154":{"position":[[78,2],[459,2],[984,2],[1080,2],[1157,2],[1382,2],[1445,2]]},"1159":{"position":[[18,2]]},"1161":{"position":[[24,2]]},"1165":{"position":[[135,2],[244,2]]},"1167":{"position":[[46,2]]},"1180":{"position":[[6,2]]},"1191":{"position":[[24,2]]},"1193":{"position":[[111,2]]},"1210":{"position":[[70,2]]}}}],["环境中运行",{"_index":1574,"t":{"1154":{"position":[[767,5]]}}}],["环境变量",{"_index":804,"t":{"188":{"position":[[33,4]]},"693":{"position":[[33,4]]},"972":{"position":[[85,4]]},"983":{"position":[[64,4]]},"994":{"position":[[118,4]]},"1005":{"position":[[12,4]]}}}],["现代",{"_index":252,"t":{"19":{"position":[[449,2],[556,2]]},"1159":{"position":[[53,2]]},"1167":{"position":[[75,2]]}}}],["现实",{"_index":93,"t":{"15":{"position":[[204,2]]}}}],["现有",{"_index":791,"t":{"186":{"position":[[12,2]]},"198":{"position":[[1967,2]]},"348":{"position":[[155,2]]},"376":{"position":[[146,2]]},"408":{"position":[[12,2],[32,2]]},"435":{"position":[[23,2]]},"439":{"position":[[113,2]]},"691":{"position":[[12,2]]},"703":{"position":[[1967,2]]},"853":{"position":[[146,2]]},"857":{"position":[[155,2]]},"893":{"position":[[12,2],[32,2]]},"920":{"position":[[23,2]]},"924":{"position":[[113,2]]},"1161":{"position":[[32,2]]}}}],["现象",{"_index":184,"t":{"19":{"position":[[180,2]]}}}],["理想",{"_index":398,"t":{"23":{"position":[[251,2]]}}}],["理由",{"_index":1181,"t":{"403":{"position":[[101,2]]},"888":{"position":[[101,2]]}}}],["理解",{"_index":23,"t":{"13":{"position":[[36,2]]},"92":{"position":[[57,2]]},"382":{"position":[[49,2]]},"384":{"position":[[4,2]]},"546":{"position":[[38,2]]},"867":{"position":[[49,2]]},"869":{"position":[[4,2]]},"1193":{"position":[[139,2]]}}}],["瓶颈",{"_index":1360,"t":{"576":{"position":[[338,2]]}}}],["甚至",{"_index":267,"t":{"19":{"position":[[512,2],[545,2]]},"23":{"position":[[221,2]]}}}],["生产",{"_index":1398,"t":{"593":{"position":[[89,2],[184,2]]},"1180":{"position":[[4,2]]},"1193":{"position":[[109,2],[194,2]]}}}],["生产者",{"_index":1343,"t":{"558":{"position":[[5,3]]}}}],["生命周期",{"_index":561,"t":{"115":{"position":[[24,4]]},"128":{"position":[[27,4]]},"316":{"position":[[138,4]]},"572":{"position":[[35,4]]},"623":{"position":[[24,4]]},"636":{"position":[[27,4]]},"803":{"position":[[138,4]]},"1193":{"position":[[81,4]]}}}],["生存",{"_index":397,"t":{"23":{"position":[[248,2]]}}}],["生成",{"_index":627,"t":{"133":{"position":[[43,2]]},"145":{"position":[[39,2]]},"151":{"position":[[263,2]]},"387":{"position":[[410,2],[479,2],[527,2]]},"389":{"position":[[511,2],[686,2]]},"480":{"position":[[109,2],[406,2],[496,2]]},"484":{"position":[[8,2]]},"486":{"position":[[484,2]]},"490":{"position":[[30,2]]},"538":{"position":[[521,2],[540,2]]},"580":{"position":[[540,2]]},"598":{"position":[[43,2]]},"610":{"position":[[39,2]]},"616":{"position":[[263,2]]},"872":{"position":[[410,2],[479,2],[527,2]]},"874":{"position":[[511,2],[686,2]]},"957":{"position":[[197,2]]},"968":{"position":[[194,2],[233,2]]},"1005":{"position":[[46,2]]},"1008":{"position":[[35,2]]},"1125":{"position":[[135,2]]}}}],["生活",{"_index":140,"t":{"19":{"position":[[17,2],[76,2],[123,2],[471,2]]},"21":{"position":[[42,2],[79,2],[122,2]]}}}],["用于",{"_index":403,"t":{"27":{"position":[[0,2]]},"92":{"position":[[29,2]]},"118":{"position":[[339,2]]},"158":{"position":[[182,2]]},"174":{"position":[[53,2]]},"194":{"position":[[118,2]]},"208":{"position":[[208,2]]},"238":{"position":[[17,2]]},"307":{"position":[[172,2],[199,2]]},"495":{"position":[[13,2]]},"516":{"position":[[13,2],[44,2],[137,2],[168,2]]},"519":{"position":[[29,2]]},"578":{"position":[[23,2]]},"580":{"position":[[71,2]]},"626":{"position":[[339,2]]},"643":{"position":[[182,2]]},"659":{"position":[[53,2]]},"669":{"position":[[208,2]]},"699":{"position":[[118,2]]},"713":{"position":[[17,2]]},"794":{"position":[[172,2],[199,2]]},"978":{"position":[[12,2]]},"983":{"position":[[11,2]]},"1008":{"position":[[30,2]]},"1061":{"position":[[936,2],[1022,2],[1111,2]]},"1070":{"position":[[626,2]]},"1081":{"position":[[40,2]]},"1086":{"position":[[40,2]]},"1103":{"position":[[111,2]]},"1120":{"position":[[111,2]]},"1136":{"position":[[12,2]]},"1145":{"position":[[20,2]]},"1154":{"position":[[896,2]]},"1165":{"position":[[126,2]]},"1167":{"position":[[16,2]]},"1206":{"position":[[30,2]]},"1210":{"position":[[5,2]]}}}],["用户",{"_index":528,"t":{"110":{"position":[[49,2]]},"113":{"position":[[60,2],[83,2],[124,2]]},"115":{"position":[[82,2]]},"139":{"position":[[2,2]]},"387":{"position":[[128,2],[412,2],[515,2]]},"389":{"position":[[3,2],[293,2],[682,2]]},"488":{"position":[[6,2],[35,2]]},"604":{"position":[[2,2]]},"618":{"position":[[49,2]]},"621":{"position":[[60,2],[83,2],[124,2]]},"623":{"position":[[82,2]]},"872":{"position":[[128,2],[412,2],[515,2]]},"874":{"position":[[3,2],[293,2],[682,2]]},"1154":{"position":[[739,2]]},"1165":{"position":[[32,2]]}}}],["用来",{"_index":1586,"t":{"1159":{"position":[[9,2]]},"1233":{"position":[[137,2]]}}}],["用法",{"_index":460,"t":{"92":{"position":[[62,2]]},"370":{"position":[[16,2]]},"578":{"position":[[64,2]]},"847":{"position":[[16,2]]}}}],["电池",{"_index":1570,"t":{"1154":{"position":[[685,2]]}}}],["瘦身",{"_index":1712,"t":{"1250":{"position":[[72,2]]}}}],["登录",{"_index":1267,"t":{"488":{"position":[[37,2]]},"1154":{"position":[[1007,2]]}}}],["百分比",{"_index":1378,"t":{"580":{"position":[[188,3]]}}}],["皮肤",{"_index":1238,"t":{"470":{"position":[[40,2]]},"952":{"position":[[40,2]]}}}],["盐",{"_index":1259,"t":{"480":{"position":[[524,1]]},"490":{"position":[[392,1]]}}}],["监听",{"_index":864,"t":{"208":{"position":[[603,2]]},"220":{"position":[[1235,2]]},"556":{"position":[[352,2],[574,2],[684,2]]},"576":{"position":[[283,2],[413,2]]},"669":{"position":[[603,2]]},"681":{"position":[[1235,2]]},"1173":{"position":[[314,2]]},"1178":{"position":[[341,2]]}}}],["监听器",{"_index":1614,"t":{"1173":{"position":[[234,3]]},"1178":{"position":[[261,3]]}}}],["监控",{"_index":1618,"t":{"1180":{"position":[[167,2]]},"1187":{"position":[[369,2],[401,2]]},"1193":{"position":[[118,2]]},"1237":{"position":[[9,2],[67,2],[127,2]]},"1239":{"position":[[12,2],[139,2]]}}}],["监测",{"_index":1262,"t":{"486":{"position":[[197,2]]}}}],["目前",{"_index":711,"t":{"153":{"position":[[16,2]]},"638":{"position":[[16,2]]}}}],["目录",{"_index":426,"t":{"45":{"position":[[6,2]]},"263":{"position":[[2,2]]},"748":{"position":[[2,2]]},"1145":{"position":[[43,2]]},"1147":{"position":[[57,2]]},"1152":{"position":[[60,2]]},"1154":{"position":[[311,2],[387,2],[704,2],[893,2]]},"1159":{"position":[[33,2]]},"1167":{"position":[[27,2]]}}}],["目标",{"_index":455,"t":{"92":{"position":[[33,2]]},"94":{"position":[[24,2],[64,2]]},"97":{"position":[[102,2]]},"99":{"position":[[172,2]]},"102":{"position":[[119,2]]},"104":{"position":[[165,2]]},"106":{"position":[[30,2],[43,2]]},"108":{"position":[[17,2],[53,2],[130,2]]},"180":{"position":[[86,2]]},"184":{"position":[[0,2]]},"186":{"position":[[0,2]]},"188":{"position":[[0,2]]},"190":{"position":[[0,2]]},"192":{"position":[[0,2]]},"194":{"position":[[0,2]]},"196":{"position":[[0,2]]},"208":{"position":[[973,2],[1159,2]]},"220":{"position":[[1620,2],[1834,2]]},"316":{"position":[[416,2]]},"580":{"position":[[186,2]]},"669":{"position":[[973,2],[1159,2]]},"681":{"position":[[1620,2],[1834,2]]},"685":{"position":[[86,2]]},"689":{"position":[[0,2]]},"691":{"position":[[0,2]]},"693":{"position":[[0,2]]},"695":{"position":[[0,2]]},"697":{"position":[[0,2]]},"699":{"position":[[0,2]]},"701":{"position":[[0,2]]},"803":{"position":[[416,2]]},"1230":{"position":[[402,2]]},"1239":{"position":[[178,2]]}}}],["目的",{"_index":1223,"t":{"445":{"position":[[15,2]]},"927":{"position":[[15,2]]}}}],["盲目",{"_index":206,"t":{"19":{"position":[[247,2]]}}}],["直到",{"_index":1335,"t":{"554":{"position":[[388,2]]},"560":{"position":[[532,2]]},"1224":{"position":[[68,2]]}}}],["直接",{"_index":756,"t":{"184":{"position":[[18,2],[191,2]]},"200":{"position":[[99,2]]},"228":{"position":[[332,2]]},"270":{"position":[[307,2]]},"324":{"position":[[7,2],[192,2],[293,2]]},"350":{"position":[[98,2],[204,2]]},"352":{"position":[[54,2]]},"416":{"position":[[71,2]]},"452":{"position":[[4,2]]},"484":{"position":[[6,2]]},"689":{"position":[[18,2],[191,2]]},"705":{"position":[[99,2]]},"737":{"position":[[332,2]]},"755":{"position":[[307,2]]},"771":{"position":[[7,2],[192,2],[293,2]]},"859":{"position":[[98,2],[204,2]]},"861":{"position":[[54,2]]},"901":{"position":[[71,2]]},"934":{"position":[[4,2]]},"964":{"position":[[13,2]]},"988":{"position":[[37,2]]},"1017":{"position":[[24,2]]},"1021":{"position":[[31,2]]},"1023":{"position":[[125,2],[173,2]]},"1061":{"position":[[1876,2],[2342,2]]},"1103":{"position":[[74,2]]},"1120":{"position":[[74,2]]},"1200":{"position":[[452,2]]},"1220":{"position":[[6,2]]},"1222":{"position":[[4,2]]},"1233":{"position":[[376,2]]}}}],["直观",{"_index":1445,"t":{"983":{"position":[[46,2]]}}}],["相互",{"_index":493,"t":{"102":{"position":[[131,2]]},"104":{"position":[[259,2]]}}}],["相互促进",{"_index":245,"t":{"19":{"position":[[412,4]]}}}],["相关",{"_index":478,"t":{"97":{"position":[[156,2]]},"184":{"position":[[193,2],[1774,2]]},"288":{"position":[[187,2]]},"302":{"position":[[53,2],[69,2]]},"382":{"position":[[20,2]]},"387":{"position":[[536,2]]},"399":{"position":[[26,2]]},"401":{"position":[[16,2]]},"442":{"position":[[160,2]]},"689":{"position":[[193,2],[1774,2]]},"813":{"position":[[187,2]]},"827":{"position":[[53,2],[69,2]]},"867":{"position":[[20,2]]},"872":{"position":[[536,2]]},"884":{"position":[[26,2]]},"886":{"position":[[16,2]]},"1081":{"position":[[56,2]]},"1086":{"position":[[56,2]]},"1154":{"position":[[918,2]]}}}],["相同",{"_index":507,"t":{"108":{"position":[[51,2]]},"151":{"position":[[9,2]]},"445":{"position":[[86,2]]},"536":{"position":[[49,2]]},"616":{"position":[[9,2]]},"927":{"position":[[86,2]]}}}],["相对",{"_index":1461,"t":{"1008":{"position":[[453,2]]},"1147":{"position":[[42,2]]},"1193":{"position":[[55,2]]}}}],["相当于",{"_index":1502,"t":{"1061":{"position":[[1929,3]]}}}],["相比",{"_index":554,"t":{"113":{"position":[[116,2]]},"621":{"position":[[116,2]]},"1140":{"position":[[20,2]]}}}],["真实",{"_index":1060,"t":{"342":{"position":[[28,2]]},"789":{"position":[[28,2]]}}}],["真正",{"_index":932,"t":{"283":{"position":[[15,2]]},"808":{"position":[[15,2]]}}}],["真理",{"_index":270,"t":{"19":{"position":[[521,2]]}}}],["瞬时",{"_index":650,"t":{"135":{"position":[[41,2],[85,2]]},"600":{"position":[[41,2],[85,2]]}}}],["矛盾",{"_index":76,"t":{"15":{"position":[[152,2]]}}}],["知识",{"_index":774,"t":{"184":{"position":[[182,2]]},"350":{"position":[[55,2]]},"689":{"position":[[182,2]]},"859":{"position":[[55,2]]}}}],["短信",{"_index":779,"t":{"184":{"position":[[458,2],[555,2],[1103,2],[1745,2]]},"425":{"position":[[71,2]]},"689":{"position":[[458,2],[555,2],[1103,2],[1745,2]]},"910":{"position":[[71,2]]}}}],["码",{"_index":851,"t":{"205":{"position":[[28,1]]},"435":{"position":[[673,1]]},"666":{"position":[[28,1]]},"920":{"position":[[673,1]]}}}],["破坏",{"_index":812,"t":{"190":{"position":[[67,2]]},"376":{"position":[[144,2]]},"384":{"position":[[20,2]]},"695":{"position":[[67,2]]},"853":{"position":[[144,2]]},"869":{"position":[[20,2]]}}}],["硬",{"_index":760,"t":{"184":{"position":[[60,1]]},"200":{"position":[[3,1]]},"689":{"position":[[60,1]]},"705":{"position":[[3,1]]}}}],["硬件",{"_index":1562,"t":{"1154":{"position":[[402,2],[567,2],[615,2],[645,2],[746,2],[861,2]]}}}],["硬盘",{"_index":1572,"t":{"1154":{"position":[[717,2],[803,2]]}}}],["确保",{"_index":487,"t":{"99":{"position":[[194,2]]},"312":{"position":[[1103,2]]},"538":{"position":[[519,2]]},"542":{"position":[[129,2]]},"566":{"position":[[10,2],[370,2]]},"570":{"position":[[322,2]]},"799":{"position":[[1103,2]]},"1154":{"position":[[316,2],[1112,2]]},"1189":{"position":[[146,2]]}}}],["确定",{"_index":1261,"t":{"486":{"position":[[31,2]]},"490":{"position":[[97,2]]}}}],["确实",{"_index":138,"t":{"19":{"position":[[12,2]]},"401":{"position":[[12,2]]},"886":{"position":[[12,2]]}}}],["磁盘",{"_index":907,"t":{"260":{"position":[[31,2],[43,2]]},"745":{"position":[[31,2],[43,2]]}}}],["示例",{"_index":597,"t":{"128":{"position":[[97,2]]},"137":{"position":[[22,2]]},"151":{"position":[[1449,2]]},"184":{"position":[[204,2],[1227,2]]},"186":{"position":[[18,2]]},"188":{"position":[[28,2]]},"190":{"position":[[34,2]]},"192":{"position":[[43,2]]},"194":{"position":[[27,2]]},"196":{"position":[[29,2]]},"263":{"position":[[33,2]]},"316":{"position":[[4619,2],[5034,2],[6220,2],[6315,2]]},"425":{"position":[[9,2]]},"450":{"position":[[364,2]]},"457":{"position":[[596,2]]},"490":{"position":[[251,2]]},"522":{"position":[[77,2]]},"527":{"position":[[29,2]]},"560":{"position":[[53,2]]},"562":{"position":[[64,2]]},"564":{"position":[[45,2]]},"566":{"position":[[46,2]]},"582":{"position":[[266,2]]},"602":{"position":[[22,2]]},"616":{"position":[[1449,2]]},"636":{"position":[[97,2]]},"689":{"position":[[204,2],[1227,2]]},"691":{"position":[[18,2]]},"693":{"position":[[28,2]]},"695":{"position":[[34,2]]},"697":{"position":[[43,2]]},"699":{"position":[[27,2]]},"701":{"position":[[29,2]]},"748":{"position":[[33,2]]},"803":{"position":[[4619,2],[5034,2],[6220,2],[6315,2]]},"910":{"position":[[9,2]]},"932":{"position":[[364,2]]},"939":{"position":[[596,2]]},"988":{"position":[[340,2]]},"990":{"position":[[112,2],[342,2]]},"992":{"position":[[116,2],[537,2]]},"994":{"position":[[116,2],[286,2]]},"996":{"position":[[118,2],[328,2]]},"998":{"position":[[123,2],[252,2]]},"1001":{"position":[[154,2]]},"1008":{"position":[[47,2]]},"1011":{"position":[[36,2]]},"1015":{"position":[[39,2]]},"1019":{"position":[[39,2]]},"1061":{"position":[[872,2]]},"1101":{"position":[[116,2]]},"1118":{"position":[[116,2]]},"1167":{"position":[[126,2]]},"1230":{"position":[[474,2]]},"1237":{"position":[[189,2]]},"1259":{"position":[[6,2]]}}}],["社会",{"_index":16,"t":{"13":{"position":[[14,2],[41,2]]},"15":{"position":[[190,2]]},"19":{"position":[[451,2]]}}}],["禁用",{"_index":1710,"t":{"1248":{"position":[[5,2]]}}}],["私人",{"_index":50,"t":{"15":{"position":[[73,2]]}}}],["科技",{"_index":238,"t":{"19":{"position":[[371,2],[430,2]]}}}],["科技进步",{"_index":233,"t":{"19":{"position":[[354,4],[425,4]]}}}],["秒",{"_index":1340,"t":{"556":{"position":[[622,1]]},"574":{"position":[[435,1]]}}}],["程",{"_index":834,"t":{"198":{"position":[[1993,1]]},"307":{"position":[[547,1],[771,1],[1120,1]]},"312":{"position":[[418,1],[450,1],[512,1],[517,1]]},"314":{"position":[[527,1]]},"536":{"position":[[114,1]]},"544":{"position":[[102,1]]},"548":{"position":[[13,1]]},"554":{"position":[[340,1],[382,1]]},"560":{"position":[[530,1]]},"574":{"position":[[382,1],[401,1]]},"703":{"position":[[1993,1]]},"794":{"position":[[547,1],[771,1],[1120,1]]},"799":{"position":[[418,1],[450,1],[512,1],[517,1]]},"801":{"position":[[527,1]]}}}],["程序",{"_index":1100,"t":{"352":{"position":[[20,2],[52,2]]},"355":{"position":[[97,2]]},"832":{"position":[[97,2]]},"861":{"position":[[20,2],[52,2]]},"1125":{"position":[[20,2]]},"1145":{"position":[[55,2],[66,2]]},"1154":{"position":[[367,2],[478,2],[637,2],[743,2],[773,2],[854,2],[981,2],[1129,2]]},"1157":{"position":[[65,2]]},"1161":{"position":[[8,2]]},"1163":{"position":[[13,2]]},"1165":{"position":[[198,2]]},"1189":{"position":[[148,2]]},"1206":{"position":[[55,2],[82,2]]},"1210":{"position":[[57,2]]},"1218":{"position":[[13,2]]},"1230":{"position":[[350,2]]},"1233":{"position":[[27,2],[371,2]]},"1235":{"position":[[26,2]]},"1239":{"position":[[26,2],[69,2],[124,2],[141,2],[154,2],[186,2]]},"1243":{"position":[[40,2]]},"1250":{"position":[[77,2]]}}}],["程序执行",{"_index":1279,"t":{"493":{"position":[[28,4]]},"1218":{"position":[[41,4]]}}}],["程序调试",{"_index":1665,"t":{"1210":{"position":[[7,4]]}}}],["程序运行",{"_index":1660,"t":{"1206":{"position":[[64,4]]},"1224":{"position":[[29,4]]},"1239":{"position":[[78,4]]}}}],["程度",{"_index":290,"t":{"19":{"position":[[607,2]]},"1125":{"position":[[88,2]]}}}],["稳定",{"_index":64,"t":{"15":{"position":[[111,2]]},"23":{"position":[[102,2]]},"1008":{"position":[[430,2]]},"1023":{"position":[[42,2]]}}}],["稳定性",{"_index":1182,"t":{"408":{"position":[[48,3]]},"893":{"position":[[48,3]]}}}],["稳定期",{"_index":217,"t":{"19":{"position":[[293,3],[309,3]]}}}],["空",{"_index":639,"t":{"133":{"position":[[175,1]]},"367":{"position":[[220,1],[380,1]]},"512":{"position":[[974,1]]},"598":{"position":[[175,1]]},"844":{"position":[[220,1],[380,1]]},"974":{"position":[[7,1]]}}}],["空格",{"_index":449,"t":{"78":{"position":[[11,2]]},"85":{"position":[[18,2]]}}}],["空间",{"_index":539,"t":{"113":{"position":[[30,2],[62,2]]},"621":{"position":[[30,2],[62,2]]},"1154":{"position":[[741,2]]}}}],["突发",{"_index":649,"t":{"135":{"position":[[36,2],[56,2]]},"141":{"position":[[20,2]]},"600":{"position":[[36,2],[56,2]]},"606":{"position":[[20,2]]}}}],["立即",{"_index":979,"t":{"310":{"position":[[76,2],[160,2]]},"797":{"position":[[76,2],[160,2]]}}}],["竞",{"_index":829,"t":{"198":{"position":[[1933,1]]},"307":{"position":[[1271,1]]},"562":{"position":[[42,1],[465,1]]},"576":{"position":[[26,1],[74,1]]},"703":{"position":[[1933,1]]},"794":{"position":[[1271,1]]}}}],["竞争",{"_index":1327,"t":{"550":{"position":[[58,2]]},"552":{"position":[[2,2],[32,2]]},"576":{"position":[[184,2]]}}}],["章节",{"_index":714,"t":{"153":{"position":[[38,2]]},"638":{"position":[[38,2]]}}}],["端",{"_index":977,"t":{"310":{"position":[[2,1]]},"352":{"position":[[68,1]]},"797":{"position":[[2,1]]},"861":{"position":[[68,1]]},"1191":{"position":[[218,1]]}}}],["端口",{"_index":1612,"t":{"1170":{"position":[[147,2]]}}}],["端点",{"_index":1617,"t":{"1180":{"position":[[61,2]]}}}],["笔记本电脑",{"_index":1571,"t":{"1154":{"position":[[691,5]]}}}],["符合",{"_index":1330,"t":{"552":{"position":[[41,2]]},"576":{"position":[[322,2]]}}}],["第",{"_index":450,"t":{"85":{"position":[[7,1]]}}}],["第一个",{"_index":445,"t":{"71":{"position":[[7,3]]},"379":{"position":[[55,3]]},"514":{"position":[[350,3]]},"864":{"position":[[55,3]]}}}],["第三个",{"_index":1102,"t":{"355":{"position":[[53,3]]},"832":{"position":[[53,3]]}}}],["第二个",{"_index":981,"t":{"310":{"position":[[83,3]]},"406":{"position":[[43,3]]},"514":{"position":[[448,3]]},"797":{"position":[[83,3]]},"891":{"position":[[43,3]]}}}],["第五个",{"_index":1036,"t":{"319":{"position":[[54,3]]},"766":{"position":[[54,3]]}}}],["第四个",{"_index":918,"t":{"281":{"position":[[55,3]]},"806":{"position":[[55,3]]}}}],["等",{"_index":17,"t":{"13":{"position":[[16,1]]},"113":{"position":[[57,1]]},"128":{"position":[[127,1]]},"194":{"position":[[15,1]]},"235":{"position":[[81,1]]},"307":{"position":[[1295,1]]},"316":{"position":[[2994,1]]},"336":{"position":[[292,1]]},"348":{"position":[[121,1]]},"406":{"position":[[87,1]]},"425":{"position":[[33,1],[60,1],[78,1],[100,1]]},"429":{"position":[[218,1]]},"435":{"position":[[766,1]]},"572":{"position":[[49,1]]},"621":{"position":[[57,1]]},"636":{"position":[[127,1]]},"699":{"position":[[15,1]]},"710":{"position":[[81,1]]},"783":{"position":[[292,1]]},"794":{"position":[[1295,1]]},"803":{"position":[[2994,1]]},"857":{"position":[[121,1]]},"891":{"position":[[87,1]]},"910":{"position":[[33,1],[60,1],[78,1],[100,1]]},"914":{"position":[[218,1]]},"920":{"position":[[766,1]]},"968":{"position":[[219,1]]},"983":{"position":[[68,1]]},"1028":{"position":[[143,1]]},"1125":{"position":[[158,1]]},"1136":{"position":[[32,1]]},"1142":{"position":[[71,1]]},"1145":{"position":[[101,1]]},"1154":{"position":[[310,1],[498,1],[579,1],[729,1],[877,1],[939,1]]},"1165":{"position":[[180,1]]},"1167":{"position":[[48,1],[128,1]]},"1206":{"position":[[47,1]]}}}],["等于",{"_index":132,"t":{"17":{"position":[[113,2]]},"1070":{"position":[[45,2],[58,2],[115,2]]}}}],["等价",{"_index":1441,"t":{"980":{"position":[[58,2]]}}}],["等同于",{"_index":1700,"t":{"1239":{"position":[[22,3]]}}}],["等待",{"_index":642,"t":{"133":{"position":[[184,2]]},"176":{"position":[[281,2]]},"210":{"position":[[490,2]]},"307":{"position":[[513,2],[1225,2]]},"312":{"position":[[1239,2]]},"314":{"position":[[153,2],[180,2],[1145,2]]},"316":{"position":[[4400,2]]},"514":{"position":[[544,2]]},"522":{"position":[[40,2],[55,2],[170,2]]},"531":{"position":[[28,2]]},"533":{"position":[[31,2]]},"538":{"position":[[512,2]]},"540":{"position":[[110,2],[138,2],[197,2]]},"544":{"position":[[53,2]]},"554":{"position":[[210,2],[385,2]]},"560":{"position":[[405,2]]},"564":{"position":[[13,2],[35,2],[214,2],[509,2],[551,2],[592,2]]},"574":{"position":[[383,2]]},"576":{"position":[[41,2],[87,2]]},"598":{"position":[[184,2]]},"661":{"position":[[281,2]]},"671":{"position":[[490,2]]},"794":{"position":[[513,2],[1225,2]]},"799":{"position":[[1239,2]]},"801":{"position":[[153,2],[180,2],[1145,2]]},"803":{"position":[[4400,2]]}}}],["等等",{"_index":1707,"t":{"1239":{"position":[[173,2]]}}}],["策略",{"_index":644,"t":{"133":{"position":[[188,2]]},"598":{"position":[[188,2]]}}}],["简化",{"_index":659,"t":{"137":{"position":[[5,2]]},"475":{"position":[[76,2]]},"602":{"position":[[5,2]]}}}],["简单",{"_index":596,"t":{"128":{"position":[[83,2]]},"141":{"position":[[28,2]]},"350":{"position":[[202,2]]},"401":{"position":[[2,2]]},"448":{"position":[[230,2]]},"450":{"position":[[80,2]]},"452":{"position":[[2,2]]},"472":{"position":[[18,2]]},"540":{"position":[[178,2]]},"542":{"position":[[156,2]]},"544":{"position":[[99,2]]},"560":{"position":[[46,2]]},"568":{"position":[[2,2]]},"606":{"position":[[28,2]]},"636":{"position":[[83,2]]},"859":{"position":[[202,2]]},"886":{"position":[[2,2]]},"930":{"position":[[230,2]]},"932":{"position":[[80,2]]},"934":{"position":[[2,2]]},"954":{"position":[[18,2]]},"1003":{"position":[[13,2]]},"1008":{"position":[[461,2]]},"1165":{"position":[[61,2]]},"1193":{"position":[[57,2]]}}}],["简史",{"_index":12,"t":{"13":{"position":[[3,2]]}}}],["简洁",{"_index":1332,"t":{"552":{"position":[[56,2]]},"970":{"position":[[76,2]]},"974":{"position":[[51,2]]},"1013":{"position":[[47,2]]},"1017":{"position":[[48,2]]},"1023":{"position":[[78,2]]}}}],["简洁性",{"_index":1239,"t":{"472":{"position":[[9,3]]},"954":{"position":[[9,3]]}}}],["算法",{"_index":685,"t":{"143":{"position":[[27,2]]},"475":{"position":[[17,2]]},"608":{"position":[[27,2]]}}}],["管理",{"_index":540,"t":{"113":{"position":[[32,2]]},"115":{"position":[[28,2]]},"128":{"position":[[15,2]]},"217":{"position":[[4,2],[11,2]]},"220":{"position":[[407,2]]},"225":{"position":[[8,2]]},"307":{"position":[[201,2]]},"316":{"position":[[133,2],[1028,2]]},"344":{"position":[[84,2]]},"387":{"position":[[517,2]]},"580":{"position":[[62,2]]},"593":{"position":[[181,2]]},"621":{"position":[[32,2]]},"623":{"position":[[28,2]]},"636":{"position":[[15,2]]},"678":{"position":[[4,2],[11,2]]},"681":{"position":[[407,2]]},"734":{"position":[[8,2]]},"791":{"position":[[84,2]]},"794":{"position":[[201,2]]},"803":{"position":[[133,2],[1028,2]]},"872":{"position":[[517,2]]},"1101":{"position":[[35,2]]},"1118":{"position":[[35,2]]},"1154":{"position":[[617,2],[898,2]]},"1191":{"position":[[187,2]]},"1193":{"position":[[71,2]]}}}],["管道",{"_index":1188,"t":{"425":{"position":[[84,2]]},"514":{"position":[[187,2]]},"910":{"position":[[84,2]]}}}],["米特",{"_index":1089,"t":{"350":{"position":[[48,2]]},"859":{"position":[[48,2]]}}}],["类",{"_index":485,"t":{"99":{"position":[[187,1]]},"184":{"position":[[1395,1]]},"316":{"position":[[222,1]]},"348":{"position":[[48,1],[66,1],[114,1]]},"350":{"position":[[20,1],[37,1],[108,1],[164,1]]},"379":{"position":[[91,1],[117,1]]},"406":{"position":[[80,1]]},"445":{"position":[[61,1]]},"448":{"position":[[69,1]]},"459":{"position":[[22,1]]},"689":{"position":[[1395,1]]},"803":{"position":[[222,1]]},"857":{"position":[[48,1],[66,1],[114,1]]},"859":{"position":[[20,1],[37,1],[108,1],[164,1]]},"864":{"position":[[91,1],[117,1]]},"891":{"position":[[80,1]]},"927":{"position":[[61,1]]},"930":{"position":[[69,1]]},"941":{"position":[[22,1]]}}}],["类似",{"_index":213,"t":{"19":{"position":[[279,2]]},"41":{"position":[[12,2]]},"316":{"position":[[436,2]]},"803":{"position":[[436,2]]},"974":{"position":[[30,2]]},"983":{"position":[[33,2]]},"1035":{"position":[[43,2],[106,2]]},"1061":{"position":[[1092,2]]}}}],["类型",{"_index":758,"t":{"184":{"position":[[51,2],[1235,2],[1389,2]]},"220":{"position":[[93,2]]},"302":{"position":[[9,2]]},"307":{"position":[[1331,2]]},"316":{"position":[[424,2],[2967,2],[3023,2]]},"348":{"position":[[205,2],[217,2]]},"355":{"position":[[92,2],[101,2],[113,2]]},"357":{"position":[[6,2],[17,2],[27,2],[34,2],[48,2],[55,2]]},"376":{"position":[[38,2],[118,2]]},"433":{"position":[[18,2],[501,2]]},"452":{"position":[[20,2]]},"459":{"position":[[11,2]]},"472":{"position":[[0,2]]},"681":{"position":[[93,2]]},"689":{"position":[[51,2],[1235,2],[1389,2]]},"794":{"position":[[1331,2]]},"803":{"position":[[424,2],[2967,2],[3023,2]]},"827":{"position":[[9,2]]},"832":{"position":[[92,2],[101,2],[113,2]]},"834":{"position":[[6,2],[17,2],[27,2],[34,2],[48,2],[55,2]]},"853":{"position":[[38,2],[118,2]]},"857":{"position":[[205,2],[217,2]]},"918":{"position":[[18,2],[501,2]]},"934":{"position":[[20,2]]},"941":{"position":[[11,2]]},"954":{"position":[[0,2]]},"962":{"position":[[16,2]]},"974":{"position":[[27,2]]},"976":{"position":[[77,2],[93,2]]},"1005":{"position":[[37,2]]},"1008":{"position":[[439,2]]},"1023":{"position":[[54,2]]},"1028":{"position":[[141,2],[212,2]]},"1061":{"position":[[1746,2],[1860,2]]},"1070":{"position":[[614,2]]},"1125":{"position":[[34,2],[176,2]]},"1127":{"position":[[20,2],[42,2]]},"1131":{"position":[[175,2],[252,2]]}}}],["类型信息",{"_index":1535,"t":{"1125":{"position":[[186,4]]}}}],["精度",{"_index":681,"t":{"141":{"position":[[88,2],[99,2]]},"606":{"position":[[88,2],[99,2]]}}}],["精确",{"_index":1120,"t":{"362":{"position":[[4,2]]},"839":{"position":[[4,2]]}}}],["系列",{"_index":1230,"t":{"462":{"position":[[114,2],[308,2]]},"944":{"position":[[114,2],[308,2]]}}}],["系列产品",{"_index":1242,"t":{"472":{"position":[[61,4]]},"954":{"position":[[61,4]]}}}],["系统",{"_index":549,"t":{"113":{"position":[[96,2]]},"141":{"position":[[12,2]]},"180":{"position":[[4,2],[47,2]]},"202":{"position":[[119,2]]},"316":{"position":[[69,2],[125,2]]},"344":{"position":[[128,2]]},"374":{"position":[[2,2],[86,2]]},"425":{"position":[[2,2],[15,2],[65,2]]},"439":{"position":[[93,2]]},"464":{"position":[[17,2]]},"470":{"position":[[19,2]]},"606":{"position":[[12,2]]},"621":{"position":[[96,2]]},"685":{"position":[[4,2],[47,2]]},"707":{"position":[[119,2]]},"791":{"position":[[128,2]]},"803":{"position":[[69,2],[125,2]]},"851":{"position":[[2,2],[86,2]]},"910":{"position":[[2,2],[15,2],[65,2]]},"924":{"position":[[93,2]]},"946":{"position":[[17,2]]},"952":{"position":[[19,2]]},"1081":{"position":[[59,2]]},"1086":{"position":[[59,2]]},"1103":{"position":[[13,2]]},"1120":{"position":[[13,2]]},"1145":{"position":[[97,2]]},"1147":{"position":[[63,2]]},"1154":{"position":[[346,2],[396,2],[428,2],[533,2],[565,2],[595,2],[665,2],[953,2],[1010,2]]},"1157":{"position":[[1,2],[27,2],[50,2]]},"1161":{"position":[[29,2]]},"1167":{"position":[[34,2]]},"1189":{"position":[[101,2],[253,2]]},"1203":{"position":[[376,2]]},"1210":{"position":[[29,2]]},"1243":{"position":[[10,2]]},"1262":{"position":[[11,2]]}}}],["系统命令",{"_index":1280,"t":{"493":{"position":[[32,4]]}}}],["系统文件",{"_index":1558,"t":{"1154":{"position":[[54,4]]},"1165":{"position":[[155,4]]}}}],["系统管理",{"_index":1289,"t":{"516":{"position":[[216,4]]}}}],["系统配置",{"_index":1568,"t":{"1154":{"position":[[620,4]]}}}],["索引",{"_index":1416,"t":{"957":{"position":[[116,2],[199,2]]}}}],["紧",{"_index":784,"t":{"184":{"position":[[1224,1]]},"342":{"position":[[0,1]]},"689":{"position":[[1224,1]]},"789":{"position":[[0,1]]}}}],["紧密",{"_index":1178,"t":{"401":{"position":[[14,2]]},"886":{"position":[[14,2]]}}}],["累积",{"_index":502,"t":{"106":{"position":[[38,2]]}}}],["繁琐",{"_index":1468,"t":{"1023":{"position":[[144,2]]}}}],["繁荣",{"_index":129,"t":{"17":{"position":[[96,2]]},"19":{"position":[[259,2]]}}}],["繁衍",{"_index":116,"t":{"17":{"position":[[42,2]]}}}],["约",{"_index":1609,"t":{"1170":{"position":[[123,1]]},"1189":{"position":[[305,1],[318,1],[334,1]]}}}],["级",{"_index":1552,"t":{"1145":{"position":[[75,1]]},"1193":{"position":[[196,1]]}}}],["级别",{"_index":891,"t":{"235":{"position":[[34,2],[60,2]]},"582":{"position":[[543,2]]},"710":{"position":[[34,2],[60,2]]}}}],["纵览",{"_index":13,"t":{"13":{"position":[[6,2]]}}}],["线程",{"_index":536,"t":{"113":{"position":[[23,2]]},"200":{"position":[[108,2]]},"550":{"position":[[44,2]]},"564":{"position":[[33,2]]},"621":{"position":[[23,2]]},"705":{"position":[[108,2]]},"1235":{"position":[[32,2],[76,2]]}}}],["组",{"_index":1625,"t":{"1189":{"position":[[255,1]]}}}],["组件",{"_index":771,"t":{"184":{"position":[[167,2],[187,2],[196,2]]},"342":{"position":[[4,2],[61,2]]},"382":{"position":[[64,2],[82,2]]},"389":{"position":[[744,2],[749,2],[762,2]]},"689":{"position":[[167,2],[187,2],[196,2]]},"789":{"position":[[4,2],[61,2]]},"867":{"position":[[64,2],[82,2]]},"874":{"position":[[744,2],[749,2],[762,2]]}}}],["组合",{"_index":792,"t":{"186":{"position":[[23,2]]},"288":{"position":[[370,2]]},"304":{"position":[[57,2]]},"314":{"position":[[99,2]]},"316":{"position":[[400,2]]},"350":{"position":[[0,2],[15,2]]},"370":{"position":[[119,2]]},"376":{"position":[[31,2]]},"403":{"position":[[44,2]]},"406":{"position":[[135,2]]},"431":{"position":[[19,2]]},"437":{"position":[[151,2]]},"439":{"position":[[28,2]]},"691":{"position":[[23,2]]},"801":{"position":[[99,2]]},"803":{"position":[[400,2]]},"813":{"position":[[370,2]]},"829":{"position":[[57,2]]},"847":{"position":[[119,2]]},"853":{"position":[[31,2]]},"859":{"position":[[0,2],[15,2]]},"888":{"position":[[44,2]]},"891":{"position":[[135,2]]},"916":{"position":[[19,2]]},"922":{"position":[[151,2]]},"924":{"position":[[28,2]]}}}],["组成",{"_index":622,"t":{"133":{"position":[[5,2]]},"598":{"position":[[5,2]]}}}],["组成部分",{"_index":621,"t":{"133":{"position":[[0,4]]},"593":{"position":[[151,4]]},"598":{"position":[[0,4]]}}}],["组织",{"_index":462,"t":{"92":{"position":[[73,2]]}}}],["细粒度",{"_index":1163,"t":{"382":{"position":[[78,3]]},"867":{"position":[[78,3]]}}}],["细节",{"_index":1039,"t":{"319":{"position":[[119,2],[122,2]]},"348":{"position":[[393,2],[396,2]]},"766":{"position":[[119,2],[122,2]]},"857":{"position":[[393,2],[396,2]]}}}],["终止",{"_index":837,"t":{"198":{"position":[[2023,2]]},"703":{"position":[[2023,2]]},"1173":{"position":[[1218,2]]},"1187":{"position":[[298,2]]},"1203":{"position":[[176,2]]}}}],["终端",{"_index":1573,"t":{"1154":{"position":[[720,2],[870,2],[916,2],[951,2],[1066,2]]}}}],["终端设备",{"_index":1577,"t":{"1154":{"position":[[837,4],[901,4],[1014,4]]}}}],["经历",{"_index":215,"t":{"19":{"position":[[289,2]]}}}],["经济",{"_index":136,"t":{"19":{"position":[[8,2],[141,2],[177,2],[254,2],[305,2],[612,2]]}}}],["经验",{"_index":390,"t":{"23":{"position":[[212,2]]}}}],["结合",{"_index":1342,"t":{"556":{"position":[[721,2]]},"576":{"position":[[241,2],[383,2]]},"1078":{"position":[[41,2]]},"1142":{"position":[[54,2]]},"1257":{"position":[[1,2]]}}}],["结尾",{"_index":427,"t":{"45":{"position":[[17,2]]},"78":{"position":[[8,2]]},"1070":{"position":[[239,2]]}}}],["结束",{"_index":963,"t":{"307":{"position":[[517,2]]},"423":{"position":[[228,2]]},"560":{"position":[[507,2]]},"576":{"position":[[56,2]]},"794":{"position":[[517,2]]},"908":{"position":[[228,2]]},"1203":{"position":[[646,2],[856,2],[876,2]]},"1233":{"position":[[380,2]]}}}],["结构",{"_index":676,"t":{"141":{"position":[[65,2]]},"184":{"position":[[1768,2]]},"205":{"position":[[21,2]]},"217":{"position":[[18,2]]},"307":{"position":[[98,2],[1312,2]]},"312":{"position":[[185,2],[287,2]]},"314":{"position":[[273,2],[375,2]]},"316":{"position":[[453,2],[1145,2],[3039,2]]},"329":{"position":[[2,2]]},"382":{"position":[[34,2]]},"387":{"position":[[548,2]]},"399":{"position":[[3,2],[36,2]]},"403":{"position":[[31,2],[88,2]]},"408":{"position":[[69,2]]},"445":{"position":[[81,2]]},"459":{"position":[[24,2]]},"495":{"position":[[31,2]]},"606":{"position":[[65,2]]},"666":{"position":[[21,2]]},"678":{"position":[[18,2]]},"689":{"position":[[1768,2]]},"776":{"position":[[2,2]]},"794":{"position":[[98,2],[1312,2]]},"799":{"position":[[185,2],[287,2]]},"801":{"position":[[273,2],[375,2]]},"803":{"position":[[453,2],[1145,2],[3039,2]]},"867":{"position":[[34,2]]},"872":{"position":[[548,2]]},"884":{"position":[[3,2],[36,2]]},"888":{"position":[[31,2],[88,2]]},"893":{"position":[[69,2]]},"927":{"position":[[81,2]]},"941":{"position":[[24,2]]},"964":{"position":[[35,2]]},"1008":{"position":[[481,2]]},"1061":{"position":[[945,2],[1120,2]]},"1064":{"position":[[32,2]]},"1074":{"position":[[236,2]]},"1125":{"position":[[117,2],[216,2],[236,2]]},"1136":{"position":[[0,2]]}}}],["结构复杂",{"_index":1227,"t":{"459":{"position":[[32,4]]},"941":{"position":[[32,4]]}}}],["结果",{"_index":475,"t":{"97":{"position":[[76,2]]},"99":{"position":[[68,2]]},"102":{"position":[[78,2]]},"104":{"position":[[111,2]]},"307":{"position":[[1229,2]]},"312":{"position":[[208,2]]},"314":{"position":[[296,2]]},"316":{"position":[[4402,2]]},"794":{"position":[[1229,2]]},"799":{"position":[[208,2]]},"801":{"position":[[296,2]]},"803":{"position":[[4402,2]]},"968":{"position":[[52,2]]}}}],["绕过",{"_index":1607,"t":{"1170":{"position":[[80,2]]}}}],["绝对",{"_index":88,"t":{"15":{"position":[[184,2]]},"19":{"position":[[36,2]]}}}],["统一",{"_index":889,"t":{"235":{"position":[[17,2]]},"316":{"position":[[429,2]]},"710":{"position":[[17,2]]},"803":{"position":[[429,2]]}}}],["统治",{"_index":161,"t":{"19":{"position":[[104,2]]}}}],["统计",{"_index":1381,"t":{"580":{"position":[[317,2]]}}}],["继承",{"_index":793,"t":{"186":{"position":[[27,2]]},"348":{"position":[[142,2]]},"350":{"position":[[4,2],[21,2]]},"355":{"position":[[152,2]]},"370":{"position":[[14,2]]},"403":{"position":[[48,2]]},"445":{"position":[[63,2]]},"691":{"position":[[27,2]]},"832":{"position":[[152,2]]},"847":{"position":[[14,2]]},"857":{"position":[[142,2]]},"859":{"position":[[4,2],[21,2]]},"888":{"position":[[48,2]]},"927":{"position":[[63,2]]}}}],["继续",{"_index":620,"t":{"131":{"position":[[129,2]]},"560":{"position":[[25,2]]},"596":{"position":[[129,2]]}}}],["继续执行",{"_index":1315,"t":{"538":{"position":[[533,4]]},"562":{"position":[[502,4]]},"1203":{"position":[[772,4]]},"1224":{"position":[[64,4]]}}}],["维护",{"_index":516,"t":{"108":{"position":[[163,2]]},"180":{"position":[[93,2]]},"346":{"position":[[34,2]]},"384":{"position":[[7,2]]},"403":{"position":[[7,2]]},"685":{"position":[[93,2]]},"855":{"position":[[34,2]]},"869":{"position":[[7,2]]},"888":{"position":[[7,2]]},"1081":{"position":[[96,2]]},"1086":{"position":[[96,2]]},"1101":{"position":[[99,2],[106,2]]},"1103":{"position":[[65,2]]},"1118":{"position":[[99,2],[106,2]]},"1120":{"position":[[65,2]]},"1208":{"position":[[35,2]]}}}],["缓冲",{"_index":1318,"t":{"544":{"position":[[30,2]]},"554":{"position":[[156,2],[308,2]]}}}],["缓存",{"_index":1141,"t":{"374":{"position":[[0,2],[7,2],[15,2],[27,2]]},"851":{"position":[[0,2],[7,2],[15,2],[27,2]]},"957":{"position":[[104,2]]}}}],["缓解",{"_index":235,"t":{"19":{"position":[[361,2]]}}}],["编写",{"_index":514,"t":{"108":{"position":[[156,2]]},"403":{"position":[[4,2]]},"546":{"position":[[54,2]]},"888":{"position":[[4,2]]},"1193":{"position":[[181,2]]},"1206":{"position":[[52,2]]}}}],["编号",{"_index":811,"t":{"190":{"position":[[60,2]]},"695":{"position":[[60,2]]}}}],["编码",{"_index":761,"t":{"184":{"position":[[61,2]]},"200":{"position":[[4,2]]},"689":{"position":[[61,2]]},"705":{"position":[[4,2]]},"1070":{"position":[[376,2]]}}}],["编程",{"_index":736,"t":{"180":{"position":[[1,2]]},"184":{"position":[[125,2]]},"314":{"position":[[92,2]]},"321":{"position":[[15,2]]},"352":{"position":[[15,2],[45,2]]},"685":{"position":[[1,2]]},"689":{"position":[[125,2]]},"768":{"position":[[15,2]]},"801":{"position":[[92,2]]},"861":{"position":[[15,2],[45,2]]},"970":{"position":[[56,2]]}}}],["编程语言",{"_index":1659,"t":{"1206":{"position":[[48,4]]}}}],["编译",{"_index":1058,"t":{"340":{"position":[[36,2]]},"787":{"position":[[36,2]]},"1215":{"position":[[10,2]]}}}],["编译器",{"_index":877,"t":{"220":{"position":[[248,3]]},"681":{"position":[[248,3]]}}}],["缺乏",{"_index":54,"t":{"15":{"position":[[85,2]]}}}],["缺点",{"_index":672,"t":{"141":{"position":[[37,2]]},"606":{"position":[[37,2]]},"1008":{"position":[[423,2]]},"1013":{"position":[[3,2]]},"1017":{"position":[[3,2]]},"1021":{"position":[[3,2]]}}}],["网关",{"_index":1147,"t":{"374":{"position":[[62,2]]},"851":{"position":[[62,2]]},"1191":{"position":[[210,2],[214,2]]}}}],["网络",{"_index":656,"t":{"135":{"position":[[90,2]]},"437":{"position":[[648,2]]},"442":{"position":[[192,2],[471,2]]},"600":{"position":[[90,2]]},"922":{"position":[[648,2]]},"1028":{"position":[[58,2]]},"1210":{"position":[[47,2]]}}}],["网络协议",{"_index":1608,"t":{"1170":{"position":[[82,4]]},"1191":{"position":[[230,4]]}}}],["网络带宽",{"_index":612,"t":{"131":{"position":[[77,4]]},"596":{"position":[[77,4]]}}}],["网络接口",{"_index":1569,"t":{"1154":{"position":[[677,4],[873,4]]}}}],["网络日志",{"_index":1153,"t":{"374":{"position":[[100,4]]},"425":{"position":[[29,4]]},"427":{"position":[[19,4]]},"435":{"position":[[6,4],[46,4]]},"437":{"position":[[450,4]]},"851":{"position":[[100,4]]},"910":{"position":[[29,4]]},"912":{"position":[[19,4]]},"920":{"position":[[6,4],[46,4]]},"922":{"position":[[450,4]]}}}],["置于",{"_index":364,"t":{"23":{"position":[[98,2]]}}}],["考虑",{"_index":1066,"t":{"344":{"position":[[76,2]]},"540":{"position":[[154,2]]},"542":{"position":[[163,2]]},"576":{"position":[[311,2]]},"791":{"position":[[76,2]]},"1187":{"position":[[339,2]]}}}],["者",{"_index":1319,"t":{"544":{"position":[[55,1]]}}}],["而是",{"_index":110,"t":{"17":{"position":[[22,2]]},"19":{"position":[[277,2]]},"202":{"position":[[20,2]]},"707":{"position":[[20,2]]}}}],["而言",{"_index":135,"t":{"19":{"position":[[5,2]]}}}],["耗时",{"_index":1010,"t":{"314":{"position":[[1067,2]]},"801":{"position":[[1067,2]]},"1180":{"position":[[361,2]]}}}],["耦",{"_index":764,"t":{"184":{"position":[[79,1]]},"316":{"position":[[63,1],[3014,1]]},"468":{"position":[[5,1]]},"689":{"position":[[79,1]]},"803":{"position":[[63,1],[3014,1]]},"950":{"position":[[5,1]]}}}],["耦合",{"_index":569,"t":{"118":{"position":[[102,2]]},"184":{"position":[[202,2],[1225,2]]},"208":{"position":[[465,2]]},"228":{"position":[[83,2]]},"342":{"position":[[1,2]]},"350":{"position":[[112,2]]},"387":{"position":[[542,2]]},"445":{"position":[[40,2]]},"626":{"position":[[102,2]]},"669":{"position":[[465,2]]},"689":{"position":[[202,2],[1225,2]]},"737":{"position":[[83,2]]},"789":{"position":[[1,2]]},"859":{"position":[[112,2]]},"872":{"position":[[542,2]]},"927":{"position":[[40,2]]}}}],["耦合度",{"_index":1101,"t":{"352":{"position":[[57,3]]},"861":{"position":[[57,3]]}}}],["职责",{"_index":534,"t":{"113":{"position":[[4,2]]},"184":{"position":[[162,2]]},"283":{"position":[[40,2]]},"348":{"position":[[2,2],[72,2]]},"352":{"position":[[33,2]]},"379":{"position":[[2,2],[128,2]]},"382":{"position":[[61,2]]},"387":{"position":[[28,2]]},"389":{"position":[[7,2],[325,2],[513,2],[759,2]]},"396":{"position":[[130,2]]},"621":{"position":[[4,2]]},"689":{"position":[[162,2]]},"808":{"position":[[40,2]]},"857":{"position":[[2,2],[72,2]]},"861":{"position":[[33,2]]},"864":{"position":[[2,2],[128,2]]},"867":{"position":[[61,2]]},"872":{"position":[[28,2]]},"874":{"position":[[7,2],[325,2],[513,2],[759,2]]},"881":{"position":[[130,2]]}}}],["聚合",{"_index":798,"t":{"186":{"position":[[148,2]]},"192":{"position":[[50,2]]},"312":{"position":[[284,2]]},"314":{"position":[[372,2]]},"691":{"position":[[148,2]]},"697":{"position":[[50,2]]},"799":{"position":[[284,2]]},"801":{"position":[[372,2]]}}}],["聚居",{"_index":159,"t":{"19":{"position":[[96,2]]}}}],["股票",{"_index":174,"t":{"19":{"position":[[154,2]]}}}],["背景",{"_index":375,"t":{"23":{"position":[[146,2]]}}}],["胖",{"_index":933,"t":{"283":{"position":[[26,1]]},"286":{"position":[[6,1]]},"808":{"position":[[26,1]]},"811":{"position":[[6,1]]}}}],["能",{"_index":0,"t":{"4":{"position":[[0,1],[10,1]]},"15":{"position":[[105,1]]},"21":{"position":[[73,1]]},"170":{"position":[[3,1]]},"192":{"position":[[7,1]]},"344":{"position":[[98,1]]},"488":{"position":[[87,1]]},"655":{"position":[[3,1]]},"697":{"position":[[7,1]]},"791":{"position":[[98,1]]}}}],["能力",{"_index":797,"t":{"186":{"position":[[140,2]]},"202":{"position":[[56,2]]},"691":{"position":[[140,2]]},"707":{"position":[[56,2]]}}}],["能够",{"_index":740,"t":{"180":{"position":[[49,2]]},"316":{"position":[[127,2]]},"348":{"position":[[209,2]]},"357":{"position":[[10,2]]},"685":{"position":[[49,2]]},"803":{"position":[[127,2]]},"834":{"position":[[10,2]]},"857":{"position":[[209,2]]},"1154":{"position":[[320,2],[1159,2]]},"1193":{"position":[[135,2]]}}}],["脆弱",{"_index":953,"t":{"302":{"position":[[24,2]]},"827":{"position":[[24,2]]}}}],["脚本",{"_index":1709,"t":{"1241":{"position":[[23,2]]}}}],["脱离",{"_index":182,"t":{"19":{"position":[[173,2]]}}}],["自主权",{"_index":307,"t":{"21":{"position":[[48,3],[88,3]]}}}],["自信",{"_index":207,"t":{"19":{"position":[[249,2]]}}}],["自动",{"_index":873,"t":{"220":{"position":[[96,2],[251,2]]},"480":{"position":[[504,2]]},"574":{"position":[[438,2]]},"580":{"position":[[57,2]]},"681":{"position":[[96,2],[251,2]]},"1005":{"position":[[44,2]]},"1189":{"position":[[170,2]]},"1203":{"position":[[368,2]]},"1230":{"position":[[407,2]]}}}],["自动化",{"_index":1287,"t":{"516":{"position":[[210,3]]},"1241":{"position":[[28,3]]}}}],["自定义",{"_index":1405,"t":{"593":{"position":[[193,3]]},"1001":{"position":[[159,3]]},"1028":{"position":[[209,3]]},"1035":{"position":[[25,3],[70,3],[166,3]]},"1044":{"position":[[169,3]]},"1064":{"position":[[47,3]]},"1072":{"position":[[2,3]]},"1197":{"position":[[97,3]]}}}],["自己",{"_index":304,"t":{"21":{"position":[[36,2],[101,2]]},"128":{"position":[[55,2]]},"184":{"position":[[172,2]]},"208":{"position":[[837,2]]},"220":{"position":[[1484,2]]},"260":{"position":[[70,2]]},"544":{"position":[[91,2]]},"636":{"position":[[55,2]]},"669":{"position":[[837,2]]},"681":{"position":[[1484,2]]},"689":{"position":[[172,2]]},"745":{"position":[[70,2]]}}}],["自我",{"_index":124,"t":{"17":{"position":[[68,2]]}}}],["自然",{"_index":60,"t":{"15":{"position":[[100,2]]}}}],["自由",{"_index":69,"t":{"15":{"position":[[129,2],[169,2],[187,2]]}}}],["自私",{"_index":285,"t":{"19":{"position":[[585,2]]}}}],["至关重要",{"_index":1325,"t":{"546":{"position":[[63,4]]}}}],["至少",{"_index":1520,"t":{"1070":{"position":[[535,2]]}}}],["至此",{"_index":1703,"t":{"1239":{"position":[[82,2]]}}}],["航海",{"_index":28,"t":{"15":{"position":[[1,2]]}}}],["艰难",{"_index":155,"t":{"19":{"position":[[82,2]]}}}],["范围",{"_index":1240,"t":{"472":{"position":[[15,2]]},"954":{"position":[[15,2]]}}}],["荷兰",{"_index":38,"t":{"15":{"position":[[34,2],[58,2],[122,2]]}}}],["获取",{"_index":425,"t":{"45":{"position":[[0,2]]},"133":{"position":[[70,2],[85,2]]},"145":{"position":[[11,2]]},"172":{"position":[[119,2]]},"274":{"position":[[84,2]]},"316":{"position":[[1586,2],[2715,2]]},"497":{"position":[[116,2]]},"516":{"position":[[88,2],[116,2]]},"529":{"position":[[25,2],[62,2]]},"540":{"position":[[37,2]]},"582":{"position":[[0,2]]},"591":{"position":[[77,2]]},"598":{"position":[[70,2],[85,2]]},"610":{"position":[[11,2]]},"657":{"position":[[119,2]]},"759":{"position":[[84,2]]},"803":{"position":[[1586,2],[2715,2]]},"1125":{"position":[[69,2],[181,2],[196,2]]},"1127":{"position":[[52,2],[85,2]]},"1131":{"position":[[320,2],[358,2]]},"1154":{"position":[[394,2],[527,2],[643,2]]}}}],["获得",{"_index":698,"t":{"149":{"position":[[10,2]]},"614":{"position":[[10,2]]}}}],["菜单栏",{"_index":1419,"t":{"957":{"position":[[128,3]]}}}],["葡萄牙",{"_index":32,"t":{"15":{"position":[[14,3]]}}}],["虚假",{"_index":1312,"t":{"536":{"position":[[104,2]]},"540":{"position":[[69,2]]}}}],["虚拟",{"_index":173,"t":{"19":{"position":[[148,2]]},"1154":{"position":[[45,2],[331,2],[417,2],[552,2]]},"1165":{"position":[[191,2]]}}}],["虽然",{"_index":1053,"t":{"340":{"position":[[0,2]]},"355":{"position":[[142,2]]},"445":{"position":[[57,2]]},"787":{"position":[[0,2]]},"832":{"position":[[142,2]]},"927":{"position":[[57,2]]}}}],["蛋糕",{"_index":146,"t":{"19":{"position":[[46,2]]}}}],["行",{"_index":414,"t":{"31":{"position":[[28,1],[55,1],[76,1]]},"980":{"position":[[133,1]]},"1226":{"position":[[27,1],[92,1]]}}}],["行为",{"_index":457,"t":{"92":{"position":[[48,2]]},"94":{"position":[[3,2]]},"186":{"position":[[31,2]]},"188":{"position":[[44,2]]},"242":{"position":[[108,2]]},"348":{"position":[[230,2]]},"357":{"position":[[20,2],[39,2]]},"360":{"position":[[370,2]]},"376":{"position":[[12,2],[110,2]]},"691":{"position":[[31,2]]},"693":{"position":[[44,2]]},"717":{"position":[[108,2]]},"834":{"position":[[20,2],[39,2]]},"837":{"position":[[370,2]]},"853":{"position":[[12,2],[110,2]]},"857":{"position":[[230,2]]}}}],["行号",{"_index":408,"t":{"27":{"position":[[35,2]]}}}],["行时",{"_index":1704,"t":{"1239":{"position":[[84,2]]}}}],["表现",{"_index":1396,"t":{"593":{"position":[[22,2]]}}}],["表示",{"_index":860,"t":{"208":{"position":[[134,2],[141,2]]},"220":{"position":[[245,2]]},"307":{"position":[[89,2]]},"580":{"position":[[144,2]]},"669":{"position":[[134,2],[141,2]]},"681":{"position":[[245,2]]},"794":{"position":[[89,2]]},"974":{"position":[[23,2]]},"976":{"position":[[75,2]]},"1074":{"position":[[229,2]]},"1127":{"position":[[37,2],[70,2]]},"1147":{"position":[[139,2]]},"1154":{"position":[[1034,2]]},"1230":{"position":[[348,2],[360,2]]}}}],["表达式",{"_index":1705,"t":{"1239":{"position":[[103,3],[112,3]]}}}],["被迫",{"_index":922,"t":{"281":{"position":[[95,2]]},"286":{"position":[[332,2],[381,2]]},"302":{"position":[[11,2]]},"304":{"position":[[21,2]]},"348":{"position":[[290,2]]},"806":{"position":[[95,2]]},"811":{"position":[[332,2],[381,2]]},"827":{"position":[[11,2]]},"829":{"position":[[21,2]]},"857":{"position":[[290,2]]}}}],["西",{"_index":363,"t":{"23":{"position":[[91,1]]}}}],["西班牙",{"_index":31,"t":{"15":{"position":[[10,3]]}}}],["要",{"_index":787,"t":{"184":{"position":[[1742,1]]},"376":{"position":[[108,1]]},"452":{"position":[[22,1]]},"484":{"position":[[0,1]]},"576":{"position":[[230,1]]},"689":{"position":[[1742,1]]},"853":{"position":[[108,1]]},"934":{"position":[[22,1]]}}}],["要求",{"_index":913,"t":{"270":{"position":[[285,2]]},"755":{"position":[[285,2]]},"1165":{"position":[[258,2]]},"1191":{"position":[[196,2]]}}}],["覆盖",{"_index":471,"t":{"94":{"position":[[37,2]]},"97":{"position":[[126,2]]},"99":{"position":[[48,2],[123,2]]},"102":{"position":[[133,2]]},"104":{"position":[[261,2]]},"106":{"position":[[93,2]]},"108":{"position":[[30,2],[132,2]]}}}],["观察",{"_index":1697,"t":{"1237":{"position":[[4,2],[62,2],[120,2]]},"1239":{"position":[[91,2]]}}}],["观念",{"_index":117,"t":{"17":{"position":[[45,2]]}}}],["规则",{"_index":467,"t":{"94":{"position":[[17,2],[34,2],[42,2],[59,2],[71,2],[76,2]]},"99":{"position":[[53,2],[169,2],[201,2]]},"102":{"position":[[160,2]]},"104":{"position":[[174,2],[195,2]]},"106":{"position":[[28,2],[80,2],[91,2]]},"108":{"position":[[12,2],[27,2],[60,2]]},"188":{"position":[[16,2]]},"198":{"position":[[1912,2]]},"307":{"position":[[93,2],[203,2],[342,2]]},"312":{"position":[[191,2],[827,2]]},"314":{"position":[[279,2]]},"316":{"position":[[1340,2],[1588,2],[2717,2]]},"693":{"position":[[16,2]]},"703":{"position":[[1912,2]]},"794":{"position":[[93,2],[203,2],[342,2]]},"799":{"position":[[191,2],[827,2]]},"801":{"position":[[279,2]]},"803":{"position":[[1340,2],[1588,2],[2717,2]]},"1035":{"position":[[101,2]]},"1064":{"position":[[52,2]]},"1072":{"position":[[7,2]]}}}],["规模",{"_index":745,"t":{"180":{"position":[[66,2]]},"192":{"position":[[9,2]]},"685":{"position":[[66,2]]},"697":{"position":[[9,2]]}}}],["规避",{"_index":1220,"t":{"442":{"position":[[504,2]]}}}],["视",{"_index":643,"t":{"133":{"position":[[187,1]]},"598":{"position":[[187,1]]}}}],["视角",{"_index":26,"t":{"13":{"position":[[49,2]]}}}],["角度",{"_index":262,"t":{"19":{"position":[[490,2]]}}}],["角色",{"_index":266,"t":{"19":{"position":[[509,2]]}}}],["解",{"_index":763,"t":{"184":{"position":[[78,1]]},"316":{"position":[[62,1],[3013,1]]},"468":{"position":[[4,1]]},"689":{"position":[[78,1]]},"803":{"position":[[62,1],[3013,1]]},"950":{"position":[[4,1]]}}}],["解决",{"_index":1204,"t":{"442":{"position":[[82,2]]}}}],["解密",{"_index":903,"t":{"250":{"position":[[2982,2]]},"260":{"position":[[57,2]]},"725":{"position":[[2982,2]]},"745":{"position":[[57,2]]},"1061":{"position":[[1054,2]]}}}],["解析",{"_index":814,"t":{"190":{"position":[[71,2]]},"396":{"position":[[84,2]]},"556":{"position":[[564,2]]},"695":{"position":[[71,2]]},"881":{"position":[[84,2]]},"983":{"position":[[13,2]]},"998":{"position":[[117,2]]},"1001":{"position":[[23,2],[162,2],[277,2]]},"1003":{"position":[[26,2]]},"1008":{"position":[[32,2],[50,2],[469,2],[472,2]]},"1013":{"position":[[6,2]]},"1017":{"position":[[29,2]]},"1021":{"position":[[18,2]]},"1023":{"position":[[35,2],[45,2],[121,2],[133,2],[164,2],[187,2]]},"1025":{"position":[[36,2],[58,2],[96,2]]},"1061":{"position":[[1916,2]]},"1125":{"position":[[115,2]]}}}],["解释",{"_index":476,"t":{"97":{"position":[[93,2]]},"99":{"position":[[83,2]]},"102":{"position":[[109,2]]},"104":{"position":[[154,2]]},"554":{"position":[[274,2]]},"560":{"position":[[438,2]]},"562":{"position":[[418,2]]},"564":{"position":[[535,2]]},"566":{"position":[[346,2]]},"570":{"position":[[289,2]]},"574":{"position":[[409,2]]}}}],["解锁",{"_index":1334,"t":{"552":{"position":[[66,2]]}}}],["触发",{"_index":1023,"t":{"316":{"position":[[329,2]]},"556":{"position":[[668,2]]},"564":{"position":[[41,2],[437,2]]},"576":{"position":[[84,2]]},"580":{"position":[[23,2],[129,2],[159,2]]},"803":{"position":[[329,2]]},"1264":{"position":[[22,2]]}}}],["警告",{"_index":1197,"t":{"437":{"position":[[301,2]]},"922":{"position":[[301,2]]},"957":{"position":[[4,2]]}}}],["计数",{"_index":1347,"t":{"560":{"position":[[169,2],[353,2],[454,2],[512,2]]},"562":{"position":[[246,2],[401,2]]},"570":{"position":[[272,2]]}}}],["计数器",{"_index":1690,"t":{"1230":{"position":[[352,3]]}}}],["计时",{"_index":823,"t":{"194":{"position":[[61,2]]},"699":{"position":[[61,2]]}}}],["计算",{"_index":874,"t":{"220":{"position":[[98,2],[253,2]]},"488":{"position":[[81,2]]},"576":{"position":[[120,2]]},"681":{"position":[[98,2],[253,2]]},"970":{"position":[[28,2]]}}}],["计算成本",{"_index":1254,"t":{"480":{"position":[[437,4]]},"490":{"position":[[349,4]]}}}],["订单",{"_index":780,"t":{"184":{"position":[[867,2],[899,2],[1415,2],[1537,2],[1569,2]]},"689":{"position":[[867,2],[899,2],[1415,2],[1537,2],[1569,2]]}}}],["认证",{"_index":1216,"t":{"442":{"position":[[398,2]]},"1189":{"position":[[267,2]]}}}],["讨论",{"_index":1602,"t":{"1167":{"position":[[121,2]]}}}],["记住",{"_index":1180,"t":{"403":{"position":[[82,2]]},"888":{"position":[[82,2]]}}}],["记录",{"_index":1620,"t":{"1187":{"position":[[404,2]]}}}],["许多",{"_index":1567,"t":{"1154":{"position":[[586,2]]}}}],["讽刺",{"_index":331,"t":{"21":{"position":[[148,2]]}}}],["设备",{"_index":1559,"t":{"1154":{"position":[[351,2],[575,2],[588,2],[653,2],[711,2],[727,2],[734,2],[748,2],[780,2],[805,2],[825,2],[863,2],[921,2]]}}}],["设定",{"_index":1649,"t":{"1197":{"position":[[107,2]]}}}],["设置",{"_index":856,"t":{"205":{"position":[[56,2]]},"307":{"position":[[91,2],[210,2]]},"312":{"position":[[189,2]]},"314":{"position":[[67,2],[277,2]]},"316":{"position":[[1338,2]]},"442":{"position":[[93,2],[289,2]]},"580":{"position":[[121,2],[166,2],[182,2],[256,2]]},"582":{"position":[[161,2],[170,2],[532,2]]},"593":{"position":[[29,2]]},"666":{"position":[[56,2]]},"794":{"position":[[91,2],[210,2]]},"799":{"position":[[189,2]]},"801":{"position":[[67,2],[277,2]]},"803":{"position":[[1338,2]]},"964":{"position":[[57,2]]},"1131":{"position":[[34,2]]},"1173":{"position":[[393,2],[467,2]]},"1178":{"position":[[420,2],[490,2]]},"1189":{"position":[[234,2]]},"1193":{"position":[[86,2]]},"1203":{"position":[[241,2]]},"1218":{"position":[[79,2]]},"1224":{"position":[[16,2]]},"1226":{"position":[[16,2],[55,2],[88,2]]},"1233":{"position":[[139,2],[393,2]]}}}],["设计",{"_index":107,"t":{"17":{"position":[[14,2]]},"118":{"position":[[104,2]]},"143":{"position":[[34,2]]},"153":{"position":[[12,2]]},"180":{"position":[[6,2]]},"182":{"position":[[24,2]]},"184":{"position":[[116,2]]},"202":{"position":[[17,2]]},"208":{"position":[[467,2],[573,2]]},"228":{"position":[[85,2]]},"240":{"position":[[4,2]]},"281":{"position":[[172,2]]},"295":{"position":[[6,2],[110,2]]},"304":{"position":[[12,2],[90,2]]},"307":{"position":[[1236,2]]},"316":{"position":[[2951,2]]},"346":{"position":[[16,2],[55,2]]},"350":{"position":[[200,2],[268,2]]},"376":{"position":[[28,2]]},"379":{"position":[[165,2]]},"403":{"position":[[79,2]]},"439":{"position":[[70,2],[86,2]]},"608":{"position":[[34,2]]},"626":{"position":[[104,2]]},"638":{"position":[[12,2]]},"669":{"position":[[467,2],[573,2]]},"685":{"position":[[6,2]]},"687":{"position":[[24,2]]},"689":{"position":[[116,2]]},"707":{"position":[[17,2]]},"715":{"position":[[4,2]]},"737":{"position":[[85,2]]},"794":{"position":[[1236,2]]},"803":{"position":[[2951,2]]},"806":{"position":[[172,2]]},"820":{"position":[[6,2],[110,2]]},"829":{"position":[[12,2],[90,2]]},"853":{"position":[[28,2]]},"855":{"position":[[16,2],[55,2]]},"859":{"position":[[200,2],[268,2]]},"864":{"position":[[165,2]]},"888":{"position":[[79,2]]},"924":{"position":[[70,2],[86,2]]},"1005":{"position":[[27,2]]},"1208":{"position":[[88,2]]}}}],["设计模式",{"_index":1222,"t":{"445":{"position":[[10,4]]},"927":{"position":[[10,4]]}}}],["访问",{"_index":572,"t":{"118":{"position":[[270,2]]},"139":{"position":[[6,2]]},"566":{"position":[[408,2]]},"576":{"position":[[347,2]]},"604":{"position":[[6,2]]},"626":{"position":[[270,2]]},"1125":{"position":[[231,2]]},"1147":{"position":[[39,2]]},"1154":{"position":[[324,2],[778,2]]},"1159":{"position":[[29,2]]},"1165":{"position":[[81,2]]},"1170":{"position":[[97,2]]},"1189":{"position":[[226,2]]},"1191":{"position":[[184,2]]},"1230":{"position":[[333,2]]}}}],["证书",{"_index":1208,"t":{"442":{"position":[[171,2],[197,2],[212,2],[218,2],[284,2]]}}}],["证明",{"_index":351,"t":{"23":{"position":[[64,2]]}}}],["识别",{"_index":1413,"t":{"957":{"position":[[50,2]]}}}],["诊断",{"_index":821,"t":{"194":{"position":[[21,2]]},"202":{"position":[[67,2]]},"593":{"position":[[174,2]]},"699":{"position":[[21,2]]},"707":{"position":[[67,2]]},"1193":{"position":[[211,2]]},"1206":{"position":[[80,2]]}}}],["话",{"_index":2,"t":{"4":{"position":[[4,1],[14,1]]}}}],["详细",{"_index":1214,"t":{"442":{"position":[[315,2]]},"578":{"position":[[54,2]]},"996":{"position":[[158,2]]},"1167":{"position":[[115,2]]},"1215":{"position":[[12,2]]}}}],["语义",{"_index":1159,"t":{"376":{"position":[[112,2]]},"544":{"position":[[140,2]]},"853":{"position":[[112,2]]}}}],["语句",{"_index":1336,"t":{"556":{"position":[[7,2]]},"980":{"position":[[128,2]]},"1142":{"position":[[42,2]]}}}],["语法",{"_index":466,"t":{"94":{"position":[[0,2]]},"376":{"position":[[104,2]]},"853":{"position":[[104,2]]},"1023":{"position":[[76,2]]}}}],["语言",{"_index":925,"t":{"281":{"position":[[137,2]]},"304":{"position":[[36,2]]},"319":{"position":[[135,2]]},"355":{"position":[[138,2]]},"379":{"position":[[135,2]]},"406":{"position":[[107,2]]},"552":{"position":[[47,2]]},"576":{"position":[[328,2]]},"766":{"position":[[135,2]]},"806":{"position":[[137,2]]},"829":{"position":[[36,2]]},"832":{"position":[[138,2]]},"864":{"position":[[135,2]]},"891":{"position":[[107,2]]},"1064":{"position":[[15,2]]},"1125":{"position":[[7,2]]}}}],["说",{"_index":1,"t":{"4":{"position":[[1,1],[11,1]]}}}],["说明",{"_index":965,"t":{"307":{"position":[[1145,2]]},"310":{"position":[[127,2],[217,2]]},"480":{"position":[[337,2]]},"482":{"position":[[380,2]]},"488":{"position":[[3,2]]},"794":{"position":[[1145,2]]},"797":{"position":[[127,2],[217,2]]}}}],["请求",{"_index":619,"t":{"131":{"position":[[125,2]]},"133":{"position":[[68,2],[75,2],[143,2]]},"147":{"position":[[35,2]]},"149":{"position":[[4,2],[18,2]]},"151":{"position":[[1489,2],[1592,2]]},"194":{"position":[[54,2]]},"300":{"position":[[136,2]]},"307":{"position":[[96,2],[1252,2]]},"312":{"position":[[183,2],[829,2]]},"314":{"position":[[271,2]]},"316":{"position":[[51,2],[231,2],[426,2],[707,2],[908,2]]},"338":{"position":[[360,2]]},"423":{"position":[[167,2],[226,2]]},"556":{"position":[[733,2]]},"596":{"position":[[125,2]]},"598":{"position":[[68,2],[75,2],[143,2]]},"612":{"position":[[35,2]]},"614":{"position":[[4,2],[18,2]]},"616":{"position":[[1489,2],[1592,2]]},"699":{"position":[[54,2]]},"785":{"position":[[360,2]]},"794":{"position":[[96,2],[1252,2]]},"799":{"position":[[183,2],[829,2]]},"801":{"position":[[271,2]]},"803":{"position":[[51,2],[231,2],[426,2],[707,2],[908,2]]},"825":{"position":[[136,2]]},"908":{"position":[[167,2],[226,2]]},"1180":{"position":[[355,2]]},"1185":{"position":[[123,2]]},"1187":{"position":[[300,2],[406,2]]}}}],["读写",{"_index":950,"t":{"298":{"position":[[275,2]]},"823":{"position":[[275,2]]}}}],["读取",{"_index":719,"t":{"170":{"position":[[4,2]]},"172":{"position":[[108,2]]},"174":{"position":[[4,2]]},"176":{"position":[[7,2]]},"260":{"position":[[52,2]]},"310":{"position":[[51,2],[623,2]]},"504":{"position":[[20,2]]},"516":{"position":[[70,2]]},"580":{"position":[[313,2]]},"584":{"position":[[0,2]]},"655":{"position":[[4,2]]},"657":{"position":[[108,2]]},"659":{"position":[[4,2]]},"661":{"position":[[7,2]]},"745":{"position":[[52,2]]},"797":{"position":[[51,2],[623,2]]},"968":{"position":[[203,2]]},"1025":{"position":[[1,2]]},"1093":{"position":[[19,2],[297,2]]},"1110":{"position":[[19,2],[297,2]]},"1185":{"position":[[249,2]]},"1237":{"position":[[71,2],[131,2]]}}}],["读取数据",{"_index":1337,"t":{"556":{"position":[[23,4]]}}}],["调度",{"_index":537,"t":{"113":{"position":[[25,2]]},"143":{"position":[[58,2],[82,2]]},"145":{"position":[[25,2]]},"151":{"position":[[526,2],[836,2]]},"316":{"position":[[299,2],[1033,2]]},"582":{"position":[[116,2]]},"608":{"position":[[58,2],[82,2]]},"610":{"position":[[25,2]]},"616":{"position":[[526,2],[836,2]]},"621":{"position":[[25,2]]},"803":{"position":[[299,2],[1033,2]]}}}],["调整",{"_index":703,"t":{"149":{"position":[[42,2]]},"192":{"position":[[11,2]]},"480":{"position":[[448,2]]},"614":{"position":[[42,2]]},"697":{"position":[[11,2]]},"1187":{"position":[[312,2]]}}}],["调用",{"_index":609,"t":{"131":{"position":[[71,2]]},"184":{"position":[[594,2]]},"208":{"position":[[1157,2]]},"220":{"position":[[1832,2]]},"314":{"position":[[1787,2],[1887,2],[2132,2]]},"316":{"position":[[271,2]]},"333":{"position":[[4,2]]},"529":{"position":[[32,2]]},"540":{"position":[[6,2],[22,2]]},"560":{"position":[[473,2],[547,2]]},"582":{"position":[[4,2]]},"596":{"position":[[71,2]]},"669":{"position":[[1157,2]]},"681":{"position":[[1832,2]]},"689":{"position":[[594,2]]},"780":{"position":[[4,2]]},"801":{"position":[[1787,2],[1887,2],[2132,2]]},"803":{"position":[[271,2]]},"970":{"position":[[47,2]]},"1061":{"position":[[1762,2],[1867,2],[1932,2],[1961,2]]},"1081":{"position":[[61,2]]},"1086":{"position":[[61,2]]},"1103":{"position":[[15,2]]},"1120":{"position":[[15,2]]},"1125":{"position":[[95,2],[209,2],[214,2]]},"1138":{"position":[[3,2],[358,2]]},"1140":{"position":[[26,2]]},"1189":{"position":[[103,2]]},"1201":{"position":[[519,2]]},"1203":{"position":[[378,2]]},"1224":{"position":[[156,2]]},"1262":{"position":[[13,2]]}}}],["调用者",{"_index":968,"t":{"307":{"position":[[1156,3]]},"312":{"position":[[706,3]]},"314":{"position":[[26,3]]},"316":{"position":[[324,3]]},"794":{"position":[[1156,3]]},"799":{"position":[[706,3]]},"801":{"position":[[26,3]]},"803":{"position":[[324,3]]}}}],["调试",{"_index":413,"t":{"29":{"position":[[27,2]]},"113":{"position":[[72,2]]},"442":{"position":[[291,2],[308,2]]},"578":{"position":[[25,2]]},"580":{"position":[[73,2]]},"582":{"position":[[95,2],[195,2]]},"593":{"position":[[167,2],[230,2]]},"621":{"position":[[72,2]]},"1140":{"position":[[8,2]]},"1189":{"position":[[6,2]]},"1206":{"position":[[23,2],[32,2]]},"1208":{"position":[[120,2]]},"1210":{"position":[[23,2],[42,2],[49,2],[63,2],[73,2]]},"1218":{"position":[[9,2]]},"1230":{"position":[[400,2]]},"1233":{"position":[[83,2],[195,2],[262,2],[308,2],[432,2]]},"1241":{"position":[[31,2]]},"1243":{"position":[[12,2]]},"1248":{"position":[[14,2]]},"1259":{"position":[[4,2]]}}}],["调试信息",{"_index":405,"t":{"27":{"position":[[4,4]]},"1250":{"position":[[9,4]]}}}],["谨慎",{"_index":1322,"t":{"546":{"position":[[33,2]]},"593":{"position":[[94,2]]}}}],["象征",{"_index":278,"t":{"19":{"position":[[552,2]]}}}],["负",{"_index":1127,"t":{"365":{"position":[[463,1]]},"842":{"position":[[463,1]]}}}],["负担",{"_index":952,"t":{"302":{"position":[[6,2]]},"827":{"position":[[6,2]]}}}],["负数",{"_index":1377,"t":{"580":{"position":[[169,2]]}}}],["负责",{"_index":535,"t":{"113":{"position":[[12,2]]},"115":{"position":[[11,2]]},"312":{"position":[[130,2]]},"316":{"position":[[114,2],[262,2]]},"348":{"position":[[68,2]]},"379":{"position":[[124,2]]},"389":{"position":[[752,2]]},"621":{"position":[[12,2]]},"623":{"position":[[11,2]]},"799":{"position":[[130,2]]},"803":{"position":[[114,2],[262,2]]},"857":{"position":[[68,2]]},"864":{"position":[[124,2]]},"874":{"position":[[752,2]]}}}],["负载",{"_index":853,"t":{"205":{"position":[[35,2]]},"208":{"position":[[187,2]]},"666":{"position":[[35,2]]},"669":{"position":[[187,2]]}}}],["贡献",{"_index":346,"t":{"23":{"position":[[39,2]]}}}],["财产",{"_index":51,"t":{"15":{"position":[[75,2]]}}}],["财富",{"_index":59,"t":{"15":{"position":[[98,2]]},"19":{"position":[[133,2],[533,2],[558,2],[573,2]]}}}],["责任",{"_index":328,"t":{"21":{"position":[[138,2]]}}}],["贪婪",{"_index":187,"t":{"19":{"position":[[189,2],[602,2]]}}}],["贴近",{"_index":389,"t":{"23":{"position":[[205,2]]}}}],["资本",{"_index":58,"t":{"15":{"position":[[95,2]]},"19":{"position":[[150,2],[388,2],[421,2],[437,2]]}}}],["资本主义",{"_index":188,"t":{"19":{"position":[[192,4],[379,4],[495,4]]}}}],["资源",{"_index":993,"t":{"312":{"position":[[137,2]]},"429":{"position":[[470,2]]},"435":{"position":[[767,2]]},"799":{"position":[[137,2]]},"914":{"position":[[470,2]]},"920":{"position":[[767,2]]},"1103":{"position":[[80,2]]},"1120":{"position":[[80,2]]},"1170":{"position":[[140,2]]}}}],["赋予",{"_index":379,"t":{"23":{"position":[[161,2],[230,2]]}}}],["赋值",{"_index":503,"t":{"106":{"position":[[52,2]]}}}],["走向",{"_index":91,"t":{"15":{"position":[[195,2]]}}}],["起来",{"_index":1636,"t":{"1193":{"position":[[52,2]]}}}],["超",{"_index":178,"t":{"19":{"position":[[164,1]]}}}],["超时",{"_index":800,"t":{"188":{"position":[[11,2]]},"196":{"position":[[24,2],[47,2]]},"205":{"position":[[42,2],[58,2]]},"208":{"position":[[344,2]]},"314":{"position":[[141,2],[890,2],[1161,2],[1895,2]]},"316":{"position":[[2139,2],[5974,2]]},"516":{"position":[[170,2]]},"556":{"position":[[703,2]]},"572":{"position":[[42,2]]},"574":{"position":[[138,2]]},"576":{"position":[[136,2],[297,2],[427,2]]},"666":{"position":[[42,2],[58,2]]},"669":{"position":[[344,2]]},"693":{"position":[[11,2]]},"701":{"position":[[24,2],[47,2]]},"801":{"position":[[141,2],[890,2],[1161,2],[1895,2]]},"803":{"position":[[2139,2],[5974,2]]},"1187":{"position":[[366,2]]}}}],["越",{"_index":1379,"t":{"580":{"position":[[203,1],[207,1]]}}}],["足够",{"_index":1531,"t":{"1103":{"position":[[140,2]]},"1120":{"position":[[140,2]]},"1165":{"position":[[16,2]]}}}],["跃升",{"_index":220,"t":{"19":{"position":[[301,2]]}}}],["跟踪",{"_index":1393,"t":{"582":{"position":[[541,2]]},"1189":{"position":[[99,2]]},"1233":{"position":[[144,2],[353,2]]}}}],["跨",{"_index":587,"t":{"126":{"position":[[21,1]]},"634":{"position":[[21,1]]}}}],["跨平台",{"_index":1528,"t":{"1101":{"position":[[91,3]]},"1118":{"position":[[91,3]]}}}],["路径",{"_index":801,"t":{"188":{"position":[[18,2]]},"202":{"position":[[64,2]]},"693":{"position":[[18,2]]},"707":{"position":[[64,2]]},"1145":{"position":[[61,2]]},"1147":{"position":[[17,2]]},"1170":{"position":[[64,2]]},"1187":{"position":[[259,2]]},"1233":{"position":[[367,2]]}}}],["路由",{"_index":560,"t":{"115":{"position":[[21,2]]},"126":{"position":[[78,2]]},"208":{"position":[[566,2],[970,2]]},"220":{"position":[[1617,2]]},"623":{"position":[[21,2]]},"634":{"position":[[78,2]]},"669":{"position":[[566,2],[970,2]]},"681":{"position":[[1617,2]]},"1173":{"position":[[492,2]]},"1178":{"position":[[602,2]]}}}],["跳转",{"_index":1411,"t":{"957":{"position":[[19,2]]}}}],["转储",{"_index":1387,"t":{"580":{"position":[[543,2]]}}}],["转化",{"_index":1487,"t":{"1035":{"position":[[75,2]]}}}],["转发",{"_index":848,"t":{"205":{"position":[[10,2]]},"214":{"position":[[292,2]]},"666":{"position":[[10,2]]},"675":{"position":[[292,2]]}}}],["转换",{"_index":1486,"t":{"1035":{"position":[[30,2]]},"1061":{"position":[[1849,2]]}}}],["转换成",{"_index":876,"t":{"220":{"position":[[228,3]]},"681":{"position":[[228,3]]}}}],["软",{"_index":1380,"t":{"580":{"position":[[260,1]]}}}],["软件",{"_index":1075,"t":{"348":{"position":[[109,2]]},"406":{"position":[[75,2]]},"857":{"position":[[109,2]]},"891":{"position":[[75,2]]}}}],["软件包",{"_index":1590,"t":{"1161":{"position":[[34,3]]}}}],["软件开发",{"_index":1664,"t":{"1210":{"position":[[0,4]]}}}],["软件系统",{"_index":1070,"t":{"346":{"position":[[41,4]]},"855":{"position":[[41,4]]}}}],["轻松",{"_index":783,"t":{"184":{"position":[[976,2]]},"192":{"position":[[71,2]]},"316":{"position":[[130,2]]},"336":{"position":[[259,2]]},"342":{"position":[[24,2]]},"427":{"position":[[15,2]]},"689":{"position":[[976,2]]},"697":{"position":[[71,2]]},"783":{"position":[[259,2]]},"789":{"position":[[24,2]]},"803":{"position":[[130,2]]},"912":{"position":[[15,2]]}}}],["较",{"_index":1255,"t":{"480":{"position":[[467,1]]},"1008":{"position":[[455,1]]},"1021":{"position":[[49,1]]},"1023":{"position":[[143,1],[192,1]]}}}],["较慢",{"_index":1467,"t":{"1023":{"position":[[49,2]]}}}],["辉煌",{"_index":374,"t":{"23":{"position":[[143,2]]}}}],["输入",{"_index":1286,"t":{"516":{"position":[[141,2]]},"988":{"position":[[153,2],[227,2]]},"990":{"position":[[148,2],[219,2]]},"998":{"position":[[157,2]]},"1001":{"position":[[196,2]]},"1078":{"position":[[32,2]]}}}],["输出",{"_index":419,"t":{"38":{"position":[[34,2]]},"54":{"position":[[87,2],[221,2]]},"68":{"position":[[231,2],[295,2]]},"75":{"position":[[74,2]]},"82":{"position":[[76,2]]},"89":{"position":[[83,2]]},"235":{"position":[[63,2]]},"310":{"position":[[466,2],[533,2],[599,2],[704,2],[803,2],[902,2]]},"316":{"position":[[6218,2]]},"427":{"position":[[3,2],[8,2]]},"429":{"position":[[133,2],[142,2],[216,2],[490,2]]},"431":{"position":[[25,2]]},"437":{"position":[[638,2]]},"497":{"position":[[123,2]]},"504":{"position":[[27,2]]},"516":{"position":[[50,2],[74,2],[92,2],[120,2]]},"710":{"position":[[63,2]]},"797":{"position":[[466,2],[533,2],[599,2],[704,2],[803,2],[902,2]]},"803":{"position":[[6218,2]]},"912":{"position":[[3,2],[8,2]]},"914":{"position":[[133,2],[142,2],[216,2],[490,2]]},"916":{"position":[[25,2]]},"922":{"position":[[638,2]]},"1138":{"position":[[613,2]]},"1197":{"position":[[100,2]]}}}],["边",{"_index":1424,"t":{"968":{"position":[[232,1],[235,1]]}}}],["边界条件",{"_index":824,"t":{"196":{"position":[[5,4]]},"701":{"position":[[5,4]]}}}],["迁徙",{"_index":152,"t":{"19":{"position":[[71,2]]}}}],["迁移",{"_index":898,"t":{"247":{"position":[[9,2],[20,2]]},"250":{"position":[[1835,2]]},"722":{"position":[[9,2],[20,2]]},"725":{"position":[[1835,2]]}}}],["过",{"_index":254,"t":{"19":{"position":[[464,1]]},"283":{"position":[[38,1]]},"486":{"position":[[9,1],[478,1]]},"593":{"position":[[31,1],[56,1]]},"808":{"position":[[38,1]]}}}],["过于",{"_index":381,"t":{"23":{"position":[[177,2]]}}}],["过去",{"_index":197,"t":{"19":{"position":[[222,2]]}}}],["过度",{"_index":842,"t":{"202":{"position":[[15,2]]},"350":{"position":[[266,2]]},"403":{"position":[[77,2]]},"439":{"position":[[68,2]]},"542":{"position":[[149,2]]},"707":{"position":[[15,2]]},"859":{"position":[[266,2]]},"888":{"position":[[77,2]]},"924":{"position":[[68,2]]}}}],["过时",{"_index":1268,"t":{"488":{"position":[[58,2]]}}}],["过期",{"_index":1209,"t":{"442":{"position":[[176,2]]}}}],["过程",{"_index":1008,"t":{"314":{"position":[[182,2]]},"352":{"position":[[7,2]]},"442":{"position":[[320,2]]},"445":{"position":[[24,2],[29,2]]},"801":{"position":[[182,2]]},"861":{"position":[[7,2]]},"927":{"position":[[24,2],[29,2]]}}}],["过载",{"_index":670,"t":{"141":{"position":[[14,2]]},"606":{"position":[[14,2]]}}}],["运行",{"_index":527,"t":{"110":{"position":[[46,2]]},"115":{"position":[[79,2]]},"128":{"position":[[52,2]]},"220":{"position":[[1195,2]]},"238":{"position":[[436,2]]},"340":{"position":[[174,2]]},"376":{"position":[[87,2]]},"493":{"position":[[12,2]]},"516":{"position":[[18,2]]},"578":{"position":[[28,2]]},"618":{"position":[[46,2]]},"623":{"position":[[79,2]]},"636":{"position":[[52,2]]},"681":{"position":[[1195,2]]},"713":{"position":[[436,2]]},"787":{"position":[[174,2]]},"853":{"position":[[87,2]]},"957":{"position":[[33,2],[38,2]]},"972":{"position":[[186,2]]},"988":{"position":[[338,2]]},"990":{"position":[[340,2]]},"992":{"position":[[535,2]]},"994":{"position":[[284,2]]},"996":{"position":[[326,2]]},"998":{"position":[[250,2]]},"1125":{"position":[[23,2]]},"1147":{"position":[[30,2]]},"1154":{"position":[[441,2],[965,2],[1163,2]]},"1163":{"position":[[4,2]]},"1200":{"position":[[354,2]]},"1201":{"position":[[328,2]]},"1210":{"position":[[32,2]]},"1233":{"position":[[430,2]]},"1252":{"position":[[0,2],[47,2]]}}}],["近代",{"_index":237,"t":{"19":{"position":[[369,2]]}}}],["返回",{"_index":422,"t":{"41":{"position":[[5,2]]},"170":{"position":[[15,2]]},"174":{"position":[[6,2],[172,2],[398,2]]},"176":{"position":[[4,2]]},"208":{"position":[[391,2],[1167,2]]},"220":{"position":[[1842,2]]},"228":{"position":[[191,2]]},"307":{"position":[[176,2]]},"310":{"position":[[78,2],[162,2]]},"312":{"position":[[206,2]]},"314":{"position":[[294,2]]},"316":{"position":[[4640,2],[5611,2]]},"367":{"position":[[66,2],[218,2]]},"389":{"position":[[291,2]]},"482":{"position":[[459,2],[468,2]]},"486":{"position":[[222,2]]},"540":{"position":[[31,2]]},"542":{"position":[[138,2]]},"580":{"position":[[41,2],[113,2]]},"582":{"position":[[34,2]]},"655":{"position":[[15,2]]},"659":{"position":[[6,2],[172,2],[398,2]]},"661":{"position":[[4,2]]},"669":{"position":[[391,2],[1167,2]]},"681":{"position":[[1842,2]]},"737":{"position":[[191,2]]},"794":{"position":[[176,2]]},"797":{"position":[[78,2],[162,2]]},"799":{"position":[[206,2]]},"801":{"position":[[294,2]]},"803":{"position":[[4640,2],[5611,2]]},"844":{"position":[[66,2],[218,2]]},"874":{"position":[[291,2]]},"962":{"position":[[5,2]]},"964":{"position":[[15,2]]},"968":{"position":[[41,2],[50,2]]},"1061":{"position":[[2334,2]]},"1131":{"position":[[49,2]]}}}],["返回值",{"_index":438,"t":{"61":{"position":[[24,3]]},"310":{"position":[[86,3]]},"316":{"position":[[2969,3]]},"797":{"position":[[86,3]]},"803":{"position":[[2969,3]]},"962":{"position":[[2,3]]},"970":{"position":[[6,3],[11,3]]},"1059":{"position":[[6,3]]}}}],["还是",{"_index":1635,"t":{"1193":{"position":[[42,2]]},"1233":{"position":[[149,2]]}}}],["这个",{"_index":261,"t":{"19":{"position":[[488,2]]},"172":{"position":[[39,2]]},"286":{"position":[[122,2]]},"580":{"position":[[65,2]]},"657":{"position":[[39,2]]},"811":{"position":[[122,2]]},"964":{"position":[[59,2]]}}}],["这些",{"_index":1014,"t":{"316":{"position":[[118,2]]},"344":{"position":[[53,2]]},"346":{"position":[[21,2]]},"593":{"position":[[209,2]]},"791":{"position":[[53,2]]},"803":{"position":[[118,2]]},"855":{"position":[[21,2]]},"1154":{"position":[[329,2],[360,2],[385,2],[732,2]]},"1165":{"position":[[189,2]]}}}],["这样",{"_index":271,"t":{"19":{"position":[[526,2]]},"538":{"position":[[517,2]]},"1061":{"position":[[1927,2]]}}}],["这种",{"_index":55,"t":{"15":{"position":[[87,2]]},"19":{"position":[[410,2],[583,2]]},"23":{"position":[[171,2]]}}}],["这边",{"_index":912,"t":{"270":{"position":[[196,2]]},"755":{"position":[[196,2]]}}}],["这里",{"_index":1193,"t":{"435":{"position":[[759,2]]},"920":{"position":[[759,2]]},"1201":{"position":[[512,2]]}}}],["进",{"_index":1694,"t":{"1233":{"position":[[311,1]]}}}],["进入",{"_index":221,"t":{"19":{"position":[[307,2]]},"1152":{"position":[[77,2]]},"1154":{"position":[[1372,2],[1430,2]]},"1157":{"position":[[25,2],[48,2]]},"1224":{"position":[[89,2],[107,2]]}}}],["进制",{"_index":1681,"t":{"1228":{"position":[[135,2]]}}}],["进来",{"_index":1310,"t":{"536":{"position":[[57,2]]}}}],["进步",{"_index":211,"t":{"19":{"position":[[270,2]]}}}],["进程",{"_index":530,"t":{"110":{"position":[[56,2]]},"126":{"position":[[22,2]]},"618":{"position":[[56,2]]},"634":{"position":[[22,2]]},"1091":{"position":[[104,2],[155,2]]},"1095":{"position":[[9,2]]},"1097":{"position":[[123,2]]},"1101":{"position":[[33,2]]},"1108":{"position":[[104,2],[155,2]]},"1112":{"position":[[9,2]]},"1114":{"position":[[123,2]]},"1118":{"position":[[33,2]]},"1145":{"position":[[23,2],[28,2]]},"1147":{"position":[[28,2]]},"1154":{"position":[[318,2],[430,2],[536,2]]},"1159":{"position":[[25,2]]},"1165":{"position":[[76,2],[148,2],[233,2]]},"1167":{"position":[[19,2]]},"1170":{"position":[[28,2],[53,2]]},"1189":{"position":[[212,2]]},"1195":{"position":[[2,2],[22,2]]},"1197":{"position":[[10,2],[21,2],[89,2],[130,2],[142,2],[174,2],[179,2],[203,2]]},"1200":{"position":[[47,2],[175,2],[273,2],[352,2],[432,2],[450,2]]},"1201":{"position":[[13,2],[22,2],[28,2],[152,2],[250,2],[326,2],[397,2],[415,2],[515,2],[541,2],[548,2],[583,2]]},"1203":{"position":[[180,2],[473,2],[569,2],[581,2],[626,2],[644,2],[707,2],[719,2],[734,2],[770,2],[820,2],[854,2],[874,2]]},"1218":{"position":[[58,2],[69,2]]},"1233":{"position":[[33,2],[79,2],[147,2],[152,2],[198,2],[265,2],[356,2],[365,2]]},"1262":{"position":[[17,2]]}}}],["进行",{"_index":563,"t":{"115":{"position":[[120,2]]},"143":{"position":[[72,2]]},"307":{"position":[[23,2]]},"342":{"position":[[32,2]]},"488":{"position":[[40,2]]},"576":{"position":[[365,2]]},"608":{"position":[[72,2]]},"623":{"position":[[120,2]]},"789":{"position":[[32,2]]},"794":{"position":[[23,2]]},"1028":{"position":[[144,2]]},"1074":{"position":[[240,2]]},"1078":{"position":[[58,2]]},"1131":{"position":[[366,2]]},"1145":{"position":[[95,2]]},"1147":{"position":[[60,2]]},"1154":{"position":[[613,2],[655,2],[878,2]]},"1233":{"position":[[81,2]]}}}],["进阶",{"_index":1485,"t":{"1028":{"position":[[225,2]]}}}],["远",{"_index":177,"t":{"19":{"position":[[163,1]]}}}],["远程",{"_index":893,"t":{"235":{"position":[[77,2]]},"710":{"position":[[77,2]]},"1210":{"position":[[40,2],[51,2]]},"1243":{"position":[[8,2],[38,2]]}}}],["违反",{"_index":1116,"t":{"360":{"position":[[273,2]]},"365":{"position":[[277,2]]},"367":{"position":[[234,2]]},"376":{"position":[[74,2]]},"387":{"position":[[3,2]]},"452":{"position":[[28,2]]},"837":{"position":[[273,2]]},"842":{"position":[[277,2]]},"844":{"position":[[234,2]]},"853":{"position":[[74,2]]},"872":{"position":[[3,2]]},"934":{"position":[[28,2]]}}}],["连接",{"_index":1195,"t":{"435":{"position":[[764,2]]},"450":{"position":[[3,2]]},"522":{"position":[[111,2],[121,2],[146,2],[175,2]]},"920":{"position":[[764,2]]},"932":{"position":[[3,2]]},"1189":{"position":[[55,2]]},"1193":{"position":[[104,2]]},"1243":{"position":[[36,2]]}}}],["连接池",{"_index":1298,"t":{"522":{"position":[[74,3],[91,3]]},"1187":{"position":[[0,3]]}}}],["迟迟",{"_index":1000,"t":{"314":{"position":[[59,2]]},"801":{"position":[[59,2]]}}}],["迪",{"_index":1088,"t":{"350":{"position":[[47,1]]},"859":{"position":[[47,1]]}}}],["迭代",{"_index":1275,"t":{"490":{"position":[[158,2]]}}}],["追加",{"_index":973,"t":{"307":{"position":[[1293,2]]},"794":{"position":[[1293,2]]}}}],["追求",{"_index":101,"t":{"15":{"position":[[227,2]]},"19":{"position":[[479,2]]}}}],["追踪",{"_index":820,"t":{"194":{"position":[[13,2],[120,2]]},"699":{"position":[[13,2],[120,2]]}}}],["退出",{"_index":992,"t":{"312":{"position":[[134,2],[420,2],[519,2],[1118,2],[1174,2]]},"574":{"position":[[141,2],[402,2],[457,2]]},"799":{"position":[[134,2],[420,2],[519,2],[1118,2],[1174,2]]},"1189":{"position":[[150,2]]},"1200":{"position":[[434,2],[454,2]]},"1201":{"position":[[399,2]]},"1224":{"position":[[211,2]]},"1233":{"position":[[382,2]]}}}],["适合",{"_index":1001,"t":{"314":{"position":[[87,2]]},"452":{"position":[[7,2]]},"801":{"position":[[87,2]]},"934":{"position":[[7,2]]},"966":{"position":[[34,2]]}}}],["适应",{"_index":741,"t":{"180":{"position":[[51,2]]},"202":{"position":[[51,2]]},"685":{"position":[[51,2]]},"707":{"position":[[51,2]]}}}],["适当",{"_index":1619,"t":{"1187":{"position":[[310,2]]},"1193":{"position":[[88,2],[115,2]]}}}],["适用",{"_index":482,"t":{"99":{"position":[[158,2],[164,2]]},"104":{"position":[[183,2],[189,2]]},"106":{"position":[[0,2]]},"108":{"position":[[7,2]]},"475":{"position":[[20,2]]},"516":{"position":[[65,2],[185,2]]},"540":{"position":[[189,2]]},"564":{"position":[[10,2]]},"572":{"position":[[16,2]]},"576":{"position":[[3,2],[280,2],[410,2]]},"593":{"position":[[158,2]]},"1003":{"position":[[31,2]]},"1008":{"position":[[458,2]]},"1013":{"position":[[37,2]]},"1021":{"position":[[6,2]]},"1023":{"position":[[2,2]]},"1078":{"position":[[21,2]]},"1103":{"position":[[8,2],[69,2]]},"1120":{"position":[[8,2],[69,2]]},"1125":{"position":[[99,2]]}}}],["适配器",{"_index":1235,"t":{"470":{"position":[[11,3]]},"952":{"position":[[11,3]]}}}],["逃逸",{"_index":1595,"t":{"1165":{"position":[[78,2],[216,2],[247,2]]}}}],["选",{"_index":862,"t":{"208":{"position":[[186,1],[342,1]]},"250":{"position":[[14,1],[78,1]]},"582":{"position":[[550,1]]},"669":{"position":[[186,1],[342,1]]},"725":{"position":[[14,1],[78,1]]},"1147":{"position":[[134,1]]},"1173":{"position":[[401,1]]}}}],["选字",{"_index":1497,"t":{"1059":{"position":[[40,2]]}}}],["选择",{"_index":739,"t":{"180":{"position":[[40,2]]},"340":{"position":[[20,2]]},"540":{"position":[[181,2]]},"685":{"position":[[40,2]]},"787":{"position":[[20,2]]},"957":{"position":[[170,2]]},"1005":{"position":[[84,2]]},"1025":{"position":[[127,2]]}}}],["选择权",{"_index":317,"t":{"21":{"position":[[95,3]]}}}],["选项",{"_index":1201,"t":{"439":{"position":[[39,2]]},"924":{"position":[[39,2]]}}}],["透支",{"_index":230,"t":{"19":{"position":[[339,2]]}}}],["逐利",{"_index":241,"t":{"19":{"position":[[390,2]]}}}],["逐渐",{"_index":163,"t":{"19":{"position":[[109,2]]}}}],["递增",{"_index":1352,"t":{"570":{"position":[[153,2],[350,2]]}}}],["递归",{"_index":1493,"t":{"1052":{"position":[[97,2]]},"1061":{"position":[[1760,2],[1865,2],[1959,2]]}}}],["通信",{"_index":550,"t":{"113":{"position":[[100,2]]},"115":{"position":[[87,2],[122,2]]},"126":{"position":[[24,2]]},"128":{"position":[[32,2],[77,2]]},"192":{"position":[[68,2]]},"196":{"position":[[42,2]]},"307":{"position":[[25,2]]},"350":{"position":[[103,2]]},"544":{"position":[[103,2]]},"550":{"position":[[34,2]]},"576":{"position":[[163,2]]},"621":{"position":[[100,2]]},"623":{"position":[[87,2],[122,2]]},"634":{"position":[[24,2]]},"636":{"position":[[32,2],[77,2]]},"697":{"position":[[68,2]]},"701":{"position":[[42,2]]},"794":{"position":[[25,2]]},"859":{"position":[[103,2]]},"1170":{"position":[[55,2]]},"1189":{"position":[[19,2]]},"1191":{"position":[[32,2],[201,2]]},"1193":{"position":[[29,2]]}}}],["通信模型",{"_index":967,"t":{"307":{"position":[[1151,4]]},"794":{"position":[[1151,4]]}}}],["通常",{"_index":377,"t":{"23":{"position":[[151,2]]},"316":{"position":[[337,2]]},"803":{"position":[[337,2]]},"960":{"position":[[11,2]]},"1154":{"position":[[1018,2]]},"1165":{"position":[[22,2]]},"1218":{"position":[[72,2]]}}}],["通用",{"_index":924,"t":{"281":{"position":[[124,2]]},"316":{"position":[[627,2],[816,2],[3104,2]]},"472":{"position":[[45,2]]},"803":{"position":[[627,2],[816,2],[3104,2]]},"806":{"position":[[124,2]]},"954":{"position":[[45,2]]},"1025":{"position":[[94,2]]},"1125":{"position":[[137,2]]}}}],["通知",{"_index":777,"t":{"184":{"position":[[225,2],[309,2],[410,2],[460,2],[557,2],[622,2],[980,2],[1105,2],[1747,2]]},"312":{"position":[[414,2],[508,2],[1172,2]]},"396":{"position":[[110,2]]},"425":{"position":[[63,2],[76,2]]},"522":{"position":[[53,2],[168,2]]},"544":{"position":[[23,2]]},"564":{"position":[[505,2]]},"574":{"position":[[447,2]]},"576":{"position":[[89,2]]},"689":{"position":[[225,2],[309,2],[410,2],[460,2],[557,2],[622,2],[980,2],[1105,2],[1747,2]]},"799":{"position":[[414,2],[508,2],[1172,2]]},"881":{"position":[[110,2]]},"910":{"position":[[63,2],[76,2]]}}}],["通过",{"_index":420,"t":{"41":{"position":[[0,2]]},"110":{"position":[[53,2]]},"172":{"position":[[37,2],[89,2]]},"180":{"position":[[28,2]]},"184":{"position":[[6,2],[144,2]]},"186":{"position":[[21,2]]},"188":{"position":[[31,2]]},"192":{"position":[[57,2]]},"198":{"position":[[1916,2],[2003,2]]},"202":{"position":[[22,2]]},"205":{"position":[[6,2]]},"235":{"position":[[15,2]]},"307":{"position":[[1159,2],[1201,2],[1255,2],[1317,2]]},"312":{"position":[[194,2]]},"314":{"position":[[282,2]]},"316":{"position":[[82,2],[393,2]]},"319":{"position":[[145,2]]},"321":{"position":[[5,2],[49,2]]},"344":{"position":[[24,2]]},"348":{"position":[[137,2]]},"355":{"position":[[156,2]]},"376":{"position":[[24,2]]},"389":{"position":[[766,2]]},"403":{"position":[[24,2]]},"406":{"position":[[117,2]]},"408":{"position":[[58,2]]},"439":{"position":[[7,2],[102,2]]},"442":{"position":[[205,2],[391,2],[452,2],[490,2]]},"445":{"position":[[69,2]]},"548":{"position":[[31,2]]},"552":{"position":[[13,2]]},"554":{"position":[[350,2]]},"593":{"position":[[203,2]]},"618":{"position":[[53,2]]},"657":{"position":[[37,2],[89,2]]},"666":{"position":[[6,2]]},"685":{"position":[[28,2]]},"689":{"position":[[6,2],[144,2]]},"691":{"position":[[21,2]]},"693":{"position":[[31,2]]},"697":{"position":[[57,2]]},"703":{"position":[[1916,2],[2003,2]]},"707":{"position":[[22,2]]},"710":{"position":[[15,2]]},"766":{"position":[[145,2]]},"768":{"position":[[5,2],[49,2]]},"791":{"position":[[24,2]]},"794":{"position":[[1159,2],[1201,2],[1255,2],[1317,2]]},"799":{"position":[[194,2]]},"801":{"position":[[282,2]]},"803":{"position":[[82,2],[393,2]]},"832":{"position":[[156,2]]},"853":{"position":[[24,2]]},"857":{"position":[[137,2]]},"874":{"position":[[766,2]]},"888":{"position":[[24,2]]},"891":{"position":[[117,2]]},"893":{"position":[[58,2]]},"924":{"position":[[7,2],[102,2]]},"927":{"position":[[69,2]]},"957":{"position":[[17,2],[78,2],[124,2]]},"968":{"position":[[39,2]]},"1028":{"position":[[164,2]]},"1035":{"position":[[0,2],[47,2]]},"1061":{"position":[[1738,2],[1893,2]]},"1125":{"position":[[249,2]]},"1131":{"position":[[302,2],[345,2]]},"1154":{"position":[[1021,2]]},"1157":{"position":[[38,2]]},"1170":{"position":[[58,2],[89,2]]},"1191":{"position":[[35,2]]},"1193":{"position":[[124,2]]},"1197":{"position":[[13,2]]},"1200":{"position":[[0,2],[32,2]]},"1201":{"position":[[0,2]]},"1210":{"position":[[45,2]]},"1226":{"position":[[0,2]]},"1233":{"position":[[391,2]]},"1262":{"position":[[3,2]]}}}],["通道",{"_index":570,"t":{"118":{"position":[[221,2]]},"172":{"position":[[23,2],[41,2],[92,2]]},"174":{"position":[[138,2]]},"208":{"position":[[293,2]]},"310":{"position":[[415,2],[628,2]]},"316":{"position":[[433,2]]},"544":{"position":[[32,2]]},"556":{"position":[[31,2]]},"626":{"position":[[221,2]]},"657":{"position":[[23,2],[41,2],[92,2]]},"659":{"position":[[138,2]]},"669":{"position":[[293,2]]},"797":{"position":[[415,2],[628,2]]},"803":{"position":[[433,2]]},"1191":{"position":[[225,2]]}}}],["通配符",{"_index":421,"t":{"41":{"position":[[2,3]]},"48":{"position":[[13,3]]}}}],["速度",{"_index":1462,"t":{"1013":{"position":[[8,2]]},"1023":{"position":[[47,2]]}}}],["速率",{"_index":617,"t":{"131":{"position":[[109,2]]},"133":{"position":[[45,2],[104,2]]},"135":{"position":[[79,2],[97,2]]},"141":{"position":[[7,2]]},"145":{"position":[[22,2]]},"596":{"position":[[109,2]]},"598":{"position":[[45,2],[104,2]]},"600":{"position":[[79,2],[97,2]]},"606":{"position":[[7,2]]},"610":{"position":[[22,2]]}}}],["逻辑",{"_index":272,"t":{"19":{"position":[[529,2]]},"184":{"position":[[71,2],[592,2],[869,2],[1114,2],[1539,2]]},"198":{"position":[[1969,2]]},"312":{"position":[[116,2]]},"316":{"position":[[60,2],[236,2],[383,2]]},"329":{"position":[[328,2]]},"331":{"position":[[170,2]]},"350":{"position":[[154,2]]},"365":{"position":[[261,2],[474,2]]},"387":{"position":[[130,2],[275,2],[416,2]]},"468":{"position":[[28,2]]},"589":{"position":[[229,2]]},"689":{"position":[[71,2],[592,2],[869,2],[1114,2],[1539,2]]},"703":{"position":[[1969,2]]},"776":{"position":[[328,2]]},"778":{"position":[[170,2]]},"799":{"position":[[116,2]]},"803":{"position":[[60,2],[236,2],[383,2]]},"842":{"position":[[261,2],[474,2]]},"859":{"position":[[154,2]]},"872":{"position":[[130,2],[275,2],[416,2]]},"950":{"position":[[28,2]]},"1001":{"position":[[32,2],[164,2]]},"1035":{"position":[[40,2],[84,2]]},"1044":{"position":[[175,2]]}}}],["遇到",{"_index":324,"t":{"21":{"position":[[124,2]]},"972":{"position":[[2,2]]}}}],["道德",{"_index":277,"t":{"19":{"position":[[549,2]]}}}],["遵守",{"_index":1110,"t":{"357":{"position":[[44,2],[52,2]]},"834":{"position":[[44,2],[52,2]]}}}],["遵循",{"_index":843,"t":{"202":{"position":[[24,2]]},"344":{"position":[[93,2]]},"355":{"position":[[200,2]]},"459":{"position":[[2,2]]},"707":{"position":[[24,2]]},"791":{"position":[[93,2]]},"832":{"position":[[200,2]]},"941":{"position":[[2,2]]}}}],["避免",{"_index":512,"t":{"108":{"position":[[128,2]]},"141":{"position":[[10,2]]},"190":{"position":[[65,2]]},"198":{"position":[[1931,2]]},"205":{"position":[[63,2]]},"283":{"position":[[23,2]]},"307":{"position":[[1269,2]]},"314":{"position":[[149,2]]},"350":{"position":[[144,2],[207,2],[264,2]]},"403":{"position":[[75,2]]},"512":{"position":[[981,2]]},"542":{"position":[[147,2]]},"550":{"position":[[54,2]]},"552":{"position":[[0,2],[59,2]]},"556":{"position":[[697,2]]},"558":{"position":[[32,2]]},"576":{"position":[[24,2],[181,2]]},"606":{"position":[[10,2]]},"666":{"position":[[63,2]]},"695":{"position":[[65,2]]},"703":{"position":[[1931,2]]},"794":{"position":[[1269,2]]},"801":{"position":[[149,2]]},"808":{"position":[[23,2]]},"859":{"position":[[144,2],[207,2],[264,2]]},"888":{"position":[[75,2]]},"1052":{"position":[[93,2]]},"1059":{"position":[[69,2]]},"1061":{"position":[[1758,2],[1863,2],[1956,2]]},"1142":{"position":[[13,2]]},"1161":{"position":[[27,2]]},"1187":{"position":[[255,2]]}}}],["那么",{"_index":1103,"t":{"355":{"position":[[95,2]]},"832":{"position":[[95,2]]}}}],["邮件",{"_index":778,"t":{"184":{"position":[[307,2],[408,2],[1253,2],[1354,2]]},"387":{"position":[[273,2],[520,2]]},"389":{"position":[[321,2]]},"425":{"position":[[68,2]]},"689":{"position":[[307,2],[408,2],[1253,2],[1354,2]]},"872":{"position":[[273,2],[520,2]]},"874":{"position":[[321,2]]},"910":{"position":[[68,2]]}}}],["邮箱",{"_index":1507,"t":{"1070":{"position":[[32,2]]}}}],["部分",{"_index":81,"t":{"15":{"position":[[165,2]]},"64":{"position":[[9,2],[21,2]]},"198":{"position":[[2034,2]]},"703":{"position":[[2034,2]]},"1147":{"position":[[68,2]]}}}],["部署",{"_index":1639,"t":{"1193":{"position":[[192,2]]}}}],["都",{"_index":86,"t":{"15":{"position":[[181,1]]},"23":{"position":[[226,1]]},"92":{"position":[[28,1]]},"94":{"position":[[78,1]]},"104":{"position":[[176,1]]},"108":{"position":[[62,1]]},"149":{"position":[[20,1]]},"286":{"position":[[70,1],[90,1],[111,1]]},"295":{"position":[[97,1]]},"312":{"position":[[48,1]]},"319":{"position":[[104,1]]},"348":{"position":[[380,1]]},"416":{"position":[[343,1]]},"522":{"position":[[123,1]]},"614":{"position":[[20,1]]},"766":{"position":[[104,1]]},"799":{"position":[[48,1]]},"811":{"position":[[70,1],[90,1],[111,1]]},"820":{"position":[[97,1]]},"857":{"position":[[380,1]]},"901":{"position":[[343,1]]},"966":{"position":[[33,1]]},"1193":{"position":[[54,1]]}}}],["配置",{"_index":803,"t":{"188":{"position":[[24,2]]},"433":{"position":[[164,2],[264,2]]},"470":{"position":[[9,2]]},"693":{"position":[[24,2]]},"918":{"position":[[164,2],[264,2]]},"952":{"position":[[9,2]]},"1154":{"position":[[682,2]]},"1173":{"position":[[97,2],[777,2]]},"1175":{"position":[[15,2]]},"1178":{"position":[[125,2],[889,2]]},"1187":{"position":[[3,2],[306,2]]}}}],["配置文件",{"_index":805,"t":{"188":{"position":[[38,4]]},"693":{"position":[[38,4]]}}}],["采用",{"_index":1499,"t":{"1061":{"position":[[1090,2]]}}}],["采集",{"_index":153,"t":{"19":{"position":[[74,2]]}}}],["释放",{"_index":1305,"t":{"522":{"position":[[148,2]]},"529":{"position":[[36,2]]},"540":{"position":[[25,2]]},"542":{"position":[[124,2],[144,2]]},"562":{"position":[[483,2]]}}}],["里",{"_index":637,"t":{"133":{"position":[[153,1]]},"598":{"position":[[153,1]]}}}],["里氏",{"_index":1077,"t":{"348":{"position":[[160,2]]},"355":{"position":[[0,2]]},"832":{"position":[[0,2]]},"857":{"position":[[160,2]]}}}],["重",{"_index":1017,"t":{"316":{"position":[[148,1]]},"803":{"position":[[148,1]]}}}],["重写",{"_index":749,"t":{"180":{"position":[[80,2]]},"685":{"position":[[80,2]]}}}],["重启",{"_index":896,"t":{"238":{"position":[[426,2]]},"250":{"position":[[2211,2]]},"713":{"position":[[426,2]]},"725":{"position":[[2211,2]]},"1203":{"position":[[370,2]]}}}],["重命名",{"_index":865,"t":{"208":{"position":[[619,3]]},"220":{"position":[[1251,3]]},"228":{"position":[[426,3]]},"238":{"position":[[722,3]]},"270":{"position":[[20,3]]},"669":{"position":[[619,3]]},"681":{"position":[[1251,3]]},"713":{"position":[[722,3]]},"737":{"position":[[426,3]]},"755":{"position":[[20,3]]}}}],["重复",{"_index":488,"t":{"99":{"position":[[199,2]]},"108":{"position":[[19,2]]},"350":{"position":[[146,2],[152,2]]},"859":{"position":[[146,2],[152,2]]}}}],["重建",{"_index":895,"t":{"238":{"position":[[324,2]]},"713":{"position":[[324,2]]}}}],["重新",{"_index":1266,"t":{"486":{"position":[[243,2],[482,2]]},"488":{"position":[[62,2]]},"529":{"position":[[60,2]]},"540":{"position":[[35,2],[57,2]]},"957":{"position":[[195,2]]},"972":{"position":[[184,2]]}}}],["重新安装",{"_index":1584,"t":{"1157":{"position":[[59,4]]}}}],["重构",{"_index":748,"t":{"180":{"position":[[77,2]]},"365":{"position":[[482,2]]},"367":{"position":[[470,2]]},"685":{"position":[[77,2]]},"842":{"position":[[482,2]]},"844":{"position":[[470,2]]}}}],["重点",{"_index":966,"t":{"307":{"position":[[1147,2]]},"794":{"position":[[1147,2]]}}}],["重用",{"_index":1084,"t":{"350":{"position":[[24,2]]},"859":{"position":[[24,2]]}}}],["重要",{"_index":3,"t":{"4":{"position":[[6,2],[16,2]]},"19":{"position":[[617,2]]},"578":{"position":[[36,2]]},"593":{"position":[[149,2]]},"1154":{"position":[[343,2],[957,2]]}}}],["重视",{"_index":45,"t":{"15":{"position":[[60,2]]}}}],["金额",{"_index":1123,"t":{"365":{"position":[[244,2],[458,2]]},"842":{"position":[[244,2],[458,2]]}}}],["银联",{"_index":1151,"t":{"374":{"position":[[74,2]]},"851":{"position":[[74,2]]}}}],["链接",{"_index":722,"t":{"170":{"position":[[26,2]]},"655":{"position":[[26,2]]},"1239":{"position":[[2,2]]}}}],["链路",{"_index":819,"t":{"194":{"position":[[11,2]]},"699":{"position":[[11,2]]}}}],["锁",{"_index":910,"t":{"270":{"position":[[147,1]]},"524":{"position":[[50,1]]},"529":{"position":[[30,1],[38,1],[64,1]]},"540":{"position":[[4,1],[27,1],[39,1]]},"542":{"position":[[126,1],[141,1]]},"562":{"position":[[485,1]]},"576":{"position":[[124,1],[183,1]]},"755":{"position":[[147,1]]}}}],["错误",{"_index":852,"t":{"205":{"position":[[30,2]]},"376":{"position":[[90,2]]},"435":{"position":[[669,2]]},"437":{"position":[[343,2]]},"497":{"position":[[121,2]]},"516":{"position":[[125,2]]},"666":{"position":[[30,2]]},"853":{"position":[[90,2]]},"920":{"position":[[669,2]]},"922":{"position":[[343,2]]},"1173":{"position":[[1290,2]]},"1189":{"position":[[138,2]]},"1206":{"position":[[86,2]]}}}],["错误处理",{"_index":1406,"t":{"593":{"position":[[196,4]]},"960":{"position":[[7,4]]},"1189":{"position":[[166,4]]}}}],["错误率",{"_index":1622,"t":{"1187":{"position":[[411,3]]}}}],["错误码",{"_index":861,"t":{"208":{"position":[[143,3]]},"669":{"position":[[143,3]]}}}],["长",{"_index":1194,"t":{"435":{"position":[[763,1]]},"920":{"position":[[763,1]]}}}],["长度",{"_index":879,"t":{"220":{"position":[[258,2]]},"681":{"position":[[258,2]]},"1070":{"position":[[81,2],[102,2],[111,2]]}}}],["长期",{"_index":751,"t":{"180":{"position":[[91,2]]},"205":{"position":[[65,2]]},"666":{"position":[[65,2]]},"685":{"position":[[91,2]]}}}],["问题",{"_index":822,"t":{"194":{"position":[[23,2]]},"202":{"position":[[69,2]]},"286":{"position":[[375,2]]},"324":{"position":[[275,2]]},"360":{"position":[[335,2]]},"387":{"position":[[509,2]]},"416":{"position":[[332,2]]},"442":{"position":[[173,2],[194,2],[199,2],[473,2],[507,2]]},"546":{"position":[[22,2]]},"582":{"position":[[118,2],[216,2]]},"593":{"position":[[172,2],[188,2]]},"699":{"position":[[23,2]]},"707":{"position":[[69,2]]},"771":{"position":[[275,2]]},"811":{"position":[[375,2]]},"837":{"position":[[335,2]]},"872":{"position":[[509,2]]},"901":{"position":[[332,2]]},"957":{"position":[[45,2],[72,2]]},"1157":{"position":[[32,2]]},"1165":{"position":[[2,2]]},"1170":{"position":[[151,2]]},"1189":{"position":[[21,2]]},"1210":{"position":[[77,2]]}}}],["间",{"_index":199,"t":{"19":{"position":[[227,1]]},"113":{"position":[[108,1]]},"184":{"position":[[5,1]]},"307":{"position":[[22,1]]},"342":{"position":[[6,1]]},"621":{"position":[[108,1]]},"689":{"position":[[5,1]]},"789":{"position":[[6,1]]},"794":{"position":[[22,1]]},"1191":{"position":[[29,1],[221,1]]}}}],["间通信",{"_index":531,"t":{"110":{"position":[[58,3]]},"118":{"position":[[343,3],[1282,3]]},"158":{"position":[[186,3],[316,3]]},"174":{"position":[[57,3]]},"205":{"position":[[2,3]]},"208":{"position":[[212,3],[595,3],[612,3]]},"220":{"position":[[1227,3],[1244,3]]},"618":{"position":[[58,3]]},"626":{"position":[[343,3],[1282,3]]},"643":{"position":[[186,3],[316,3]]},"659":{"position":[[57,3]]},"666":{"position":[[2,3]]},"669":{"position":[[212,3],[595,3],[612,3]]},"681":{"position":[[1227,3],[1244,3]]},"1170":{"position":[[30,3]]},"1191":{"position":[[2,3],[157,3]]}}}],["间隔",{"_index":915,"t":{"274":{"position":[[55,2]]},"759":{"position":[[55,2]]}}}],["阅读",{"_index":8,"t":{"7":{"position":[[13,2]]},"9":{"position":[[13,2]]},"11":{"position":[[13,2]]}}}],["队列",{"_index":678,"t":{"141":{"position":[[74,2]]},"143":{"position":[[52,2]]},"544":{"position":[[83,2]]},"558":{"position":[[2,2]]},"606":{"position":[[74,2]]},"608":{"position":[[52,2]]}}}],["防御",{"_index":608,"t":{"131":{"position":[[62,2]]},"596":{"position":[[62,2]]}}}],["防止",{"_index":505,"t":{"106":{"position":[[89,2]]},"139":{"position":[[0,2]]},"149":{"position":[[29,2]]},"312":{"position":[[54,2],[74,2],[1202,2]]},"314":{"position":[[24,2]]},"475":{"position":[[30,2]]},"488":{"position":[[22,2],[67,2]]},"536":{"position":[[102,2]]},"556":{"position":[[671,2]]},"562":{"position":[[40,2],[443,2]]},"576":{"position":[[72,2]]},"604":{"position":[[0,2]]},"614":{"position":[[29,2]]},"799":{"position":[[54,2],[74,2],[1202,2]]},"801":{"position":[[24,2]]},"1165":{"position":[[74,2],[231,2]]}}}],["阵营",{"_index":371,"t":{"23":{"position":[[132,2]]}}}],["阶层",{"_index":340,"t":{"23":{"position":[[19,2]]}}}],["阻塞",{"_index":857,"t":{"205":{"position":[[67,2]]},"312":{"position":[[1204,2]]},"314":{"position":[[32,2],[1055,2]]},"316":{"position":[[4259,2]]},"554":{"position":[[242,2],[383,2]]},"556":{"position":[[675,2],[699,2]]},"560":{"position":[[526,2]]},"666":{"position":[[67,2]]},"799":{"position":[[1204,2]]},"801":{"position":[[32,2],[1055,2]]},"803":{"position":[[4259,2]]},"1203":{"position":[[169,2]]}}}],["阻止",{"_index":1271,"t":{"488":{"position":[[90,2]]}}}],["阿",{"_index":1139,"t":{"370":{"position":[[232,1],[264,1]]},"847":{"position":[[232,1],[264,1]]}}}],["附加",{"_index":407,"t":{"27":{"position":[[33,2]]}}}],["附带",{"_index":730,"t":{"172":{"position":[[67,2]]},"657":{"position":[[67,2]]}}}],["降低",{"_index":750,"t":{"180":{"position":[[89,2]]},"352":{"position":[[50,2]]},"382":{"position":[[26,2]]},"445":{"position":[[36,2]]},"685":{"position":[[89,2]]},"861":{"position":[[50,2]]},"867":{"position":[[26,2]]},"927":{"position":[[36,2]]},"1140":{"position":[[5,2]]},"1189":{"position":[[303,2],[332,2]]}}}],["限制",{"_index":83,"t":{"15":{"position":[[173,2]]},"135":{"position":[[77,2]]},"139":{"position":[[13,2]]},"556":{"position":[[731,2]]},"558":{"position":[[40,2]]},"576":{"position":[[231,2]]},"580":{"position":[[261,2]]},"600":{"position":[[77,2]]},"604":{"position":[[13,2]]},"1159":{"position":[[21,2]]},"1189":{"position":[[221,2]]}}}],["限流",{"_index":680,"t":{"141":{"position":[[86,2]]},"151":{"position":[[534,2]]},"606":{"position":[[86,2]]},"616":{"position":[[534,2]]}}}],["限速",{"_index":606,"t":{"131":{"position":[[32,2]]},"596":{"position":[[32,2]]}}}],["除非",{"_index":1320,"t":{"544":{"position":[[125,2]]}}}],["陷入困境",{"_index":149,"t":{"19":{"position":[[61,4]]}}}],["随之",{"_index":228,"t":{"19":{"position":[[330,2]]}}}],["随之而来",{"_index":160,"t":{"19":{"position":[[99,4]]}}}],["随机",{"_index":867,"t":{"210":{"position":[[7,2]]},"671":{"position":[[7,2]]}}}],["隐",{"_index":928,"t":{"281":{"position":[[158,1]]},"304":{"position":[[39,1]]},"357":{"position":[[58,1]]},"806":{"position":[[158,1]]},"829":{"position":[[39,1]]},"834":{"position":[[58,1]]}}}],["隐藏",{"_index":1498,"t":{"1061":{"position":[[1041,2]]}}}],["隔离",{"_index":826,"t":{"198":{"position":[[1907,2]]},"439":{"position":[[12,2]]},"703":{"position":[[1907,2]]},"924":{"position":[[12,2]]},"1145":{"position":[[85,2]]},"1159":{"position":[[78,2]]},"1163":{"position":[[29,2]]},"1165":{"position":[[64,2]]},"1167":{"position":[[21,2],[39,2],[70,2],[88,2]]}}}],["难以",{"_index":840,"t":{"200":{"position":[[11,2]]},"302":{"position":[[43,2]]},"324":{"position":[[311,2]]},"342":{"position":[[12,2],[17,2],[63,2]]},"376":{"position":[[82,2]]},"384":{"position":[[2,2],[32,2]]},"399":{"position":[[33,2]]},"705":{"position":[[11,2]]},"771":{"position":[[311,2]]},"789":{"position":[[12,2],[17,2],[63,2]]},"827":{"position":[[43,2]]},"853":{"position":[[82,2]]},"869":{"position":[[2,2],[32,2]]},"884":{"position":[[33,2]]}}}],["难度",{"_index":1542,"t":{"1140":{"position":[[10,2]]}}}],["集体经济",{"_index":145,"t":{"19":{"position":[[41,4]]}}}],["集成",{"_index":1630,"t":{"1191":{"position":[[60,2]]}}}],["零",{"_index":980,"t":{"310":{"position":[[80,1],[164,1]]},"797":{"position":[[80,1],[164,1]]}}}],["需",{"_index":9,"t":{"7":{"position":[[15,1]]},"9":{"position":[[15,1]]},"11":{"position":[[15,1]]},"141":{"position":[[58,1]]},"283":{"position":[[44,1]]},"288":{"position":[[369,1]]},"304":{"position":[[69,1]]},"435":{"position":[[13,1]]},"544":{"position":[[90,1]]},"606":{"position":[[58,1]]},"808":{"position":[[44,1]]},"813":{"position":[[369,1]]},"829":{"position":[[69,1]]},"920":{"position":[[13,1]]},"968":{"position":[[383,1]]},"1154":{"position":[[1125,1]]}}}],["需求",{"_index":742,"t":{"180":{"position":[[56,2]]},"576":{"position":[[378,2]]},"685":{"position":[[56,2]]},"1025":{"position":[[125,2]]},"1142":{"position":[[5,2]]},"1165":{"position":[[132,2]]},"1167":{"position":[[101,2]]}}}],["需要",{"_index":497,"t":{"104":{"position":[[213,2]]},"184":{"position":[[1108,2]]},"283":{"position":[[17,2]]},"286":{"position":[[387,2]]},"288":{"position":[[183,2]]},"293":{"position":[[4,2]]},"295":{"position":[[98,2]]},"300":{"position":[[134,2]]},"302":{"position":[[18,2],[48,2]]},"342":{"position":[[47,2]]},"350":{"position":[[258,2]]},"355":{"position":[[198,2]]},"372":{"position":[[76,2]]},"416":{"position":[[344,2]]},"429":{"position":[[205,2]]},"433":{"position":[[234,2]]},"435":{"position":[[2,2]]},"464":{"position":[[31,2]]},"477":{"position":[[18,2]]},"486":{"position":[[35,2],[241,2]]},"490":{"position":[[101,2]]},"516":{"position":[[188,2]]},"546":{"position":[[31,2]]},"560":{"position":[[15,2]]},"562":{"position":[[14,2]]},"580":{"position":[[703,2]]},"689":{"position":[[1108,2]]},"789":{"position":[[47,2]]},"808":{"position":[[17,2]]},"811":{"position":[[387,2]]},"813":{"position":[[183,2]]},"818":{"position":[[4,2]]},"820":{"position":[[98,2]]},"825":{"position":[[134,2]]},"827":{"position":[[18,2],[48,2]]},"832":{"position":[[198,2]]},"849":{"position":[[76,2]]},"859":{"position":[[258,2]]},"901":{"position":[[344,2]]},"914":{"position":[[205,2]]},"918":{"position":[[234,2]]},"920":{"position":[[2,2]]},"946":{"position":[[31,2]]},"1005":{"position":[[55,2]]},"1008":{"position":[[435,2]]},"1023":{"position":[[52,2]]},"1025":{"position":[[25,2]]},"1028":{"position":[[126,2]]},"1061":{"position":[[1070,2]]},"1083":{"position":[[18,2]]},"1088":{"position":[[18,2]]},"1103":{"position":[[72,2]]},"1120":{"position":[[72,2]]},"1131":{"position":[[300,2],[317,2]]},"1154":{"position":[[67,2],[1135,2]]},"1163":{"position":[[2,2]]},"1165":{"position":[[12,2],[150,2]]}}}],["非",{"_index":98,"t":{"15":{"position":[[223,1]]},"184":{"position":[[17,1],[48,1],[59,1],[133,1]]},"186":{"position":[[26,1]]},"208":{"position":[[139,1]]},"314":{"position":[[1054,1]]},"316":{"position":[[4258,1]]},"321":{"position":[[10,1]]},"326":{"position":[[401,1]]},"344":{"position":[[12,1]]},"413":{"position":[[15,1]]},"439":{"position":[[110,1]]},"669":{"position":[[139,1]]},"689":{"position":[[17,1],[48,1],[59,1],[133,1]]},"691":{"position":[[26,1]]},"768":{"position":[[10,1]]},"773":{"position":[[401,1]]},"791":{"position":[[12,1]]},"801":{"position":[[1054,1]]},"803":{"position":[[4258,1]]},"898":{"position":[[15,1]]},"924":{"position":[[110,1]]},"1203":{"position":[[168,1]]}}}],["非常",{"_index":1580,"t":{"1154":{"position":[[955,2]]},"1167":{"position":[[51,2]]}}}],["非线性",{"_index":212,"t":{"19":{"position":[[273,3]]}}}],["面向",{"_index":767,"t":{"184":{"position":[[121,2]]},"689":{"position":[[121,2]]}}}],["面向对象编程",{"_index":1068,"t":{"346":{"position":[[0,6]]},"855":{"position":[[0,6]]}}}],["面相",{"_index":1133,"t":{"370":{"position":[[9,2]]},"847":{"position":[[9,2]]}}}],["革命",{"_index":157,"t":{"19":{"position":[[88,2]]}}}],["项",{"_index":1394,"t":{"591":{"position":[[198,1]]},"998":{"position":[[161,1]]}}}],["项目",{"_index":646,"t":{"135":{"position":[[0,2]]},"217":{"position":[[16,2]]},"401":{"position":[[7,2]]},"472":{"position":[[33,2]]},"600":{"position":[[0,2]]},"678":{"position":[[16,2]]},"886":{"position":[[7,2]]},"954":{"position":[[33,2]]},"1078":{"position":[[28,2]]}}}],["顺序",{"_index":708,"t":{"151":{"position":[[838,2],[1173,2]]},"616":{"position":[[838,2],[1173,2]]}}}],["预先",{"_index":956,"t":{"304":{"position":[[78,2]]},"829":{"position":[[78,2]]}}}],["预期",{"_index":222,"t":{"19":{"position":[[314,2]]},"357":{"position":[[37,2]]},"360":{"position":[[368,2]]},"439":{"position":[[75,2]]},"834":{"position":[[37,2]]},"837":{"position":[[368,2]]},"924":{"position":[[75,2]]}}}],["预设",{"_index":1675,"t":{"1220":{"position":[[42,2]]}}}],["领先",{"_index":242,"t":{"19":{"position":[[396,2]]}}}],["领域",{"_index":19,"t":{"13":{"position":[[19,2]]}}}],["颇为",{"_index":293,"t":{"21":{"position":[[4,2]]}}}],["颇具",{"_index":330,"t":{"21":{"position":[[146,2]]}}}],["频",{"_index":610,"t":{"131":{"position":[[73,1]]},"596":{"position":[[73,1]]}}}],["频率",{"_index":1374,"t":{"580":{"position":[[131,2]]}}}],["频繁",{"_index":667,"t":{"139":{"position":[[4,2]]},"580":{"position":[[209,2]]},"604":{"position":[[4,2]]}}}],["颜色代码",{"_index":1518,"t":{"1070":{"position":[[397,4]]}}}],["额外",{"_index":1460,"t":{"1008":{"position":[[446,2]]}}}],["风格",{"_index":1359,"t":{"576":{"position":[[330,2]]},"970":{"position":[[59,2]]}}}],["飞",{"_index":938,"t":{"286":{"position":[[72,1],[329,1]]},"360":{"position":[[267,1]]},"362":{"position":[[94,1]]},"811":{"position":[[72,1],[329,1]]},"837":{"position":[[267,1]]},"839":{"position":[[94,1]]}}}],["飞翔",{"_index":1112,"t":{"360":{"position":[[135,2]]},"362":{"position":[[170,2]]},"837":{"position":[[135,2]]},"839":{"position":[[170,2]]}}}],["飞速发展",{"_index":239,"t":{"19":{"position":[[374,4]]}}}],["饥饿",{"_index":702,"t":{"149":{"position":[[33,2]]},"614":{"position":[[33,2]]}}}],["驱动",{"_index":283,"t":{"19":{"position":[[578,2]]},"188":{"position":[[42,2]]},"470":{"position":[[22,2]]},"693":{"position":[[42,2]]},"952":{"position":[[22,2]]}}}],["驱动程序",{"_index":543,"t":{"113":{"position":[[53,4]]},"621":{"position":[[53,4]]},"1154":{"position":[[590,4]]}}}],["验证",{"_index":1173,"t":{"396":{"position":[[73,2]]},"482":{"position":[[201,2],[439,2]]},"488":{"position":[[31,2]]},"490":{"position":[[70,2]]},"881":{"position":[[73,2]]},"1064":{"position":[[25,2],[39,2],[50,2]]},"1070":{"position":[[636,2]]},"1072":{"position":[[5,2],[12,2]]},"1074":{"position":[[242,2]]},"1078":{"position":[[16,2],[67,2]]}}}],["高",{"_index":243,"t":{"19":{"position":[[404,1]]},"113":{"position":[[79,1]]},"141":{"position":[[44,1],[83,1]]},"145":{"position":[[0,1]]},"149":{"position":[[0,1]]},"151":{"position":[[1487,1]]},"488":{"position":[[85,1]]},"593":{"position":[[32,1]]},"606":{"position":[[44,1],[83,1]]},"610":{"position":[[0,1]]},"614":{"position":[[0,1]]},"616":{"position":[[1487,1]]},"621":{"position":[[79,1]]},"1017":{"position":[[69,1]]},"1021":{"position":[[45,1]]},"1023":{"position":[[83,1]]},"1165":{"position":[[128,1],[254,1]]},"1191":{"position":[[192,1]]}}}],["高层",{"_index":1037,"t":{"319":{"position":[[88,2]]},"324":{"position":[[3,2]]},"326":{"position":[[342,2]]},"344":{"position":[[36,2],[133,2]]},"348":{"position":[[365,2]]},"766":{"position":[[88,2]]},"771":{"position":[[3,2]]},"773":{"position":[[342,2]]},"791":{"position":[[36,2],[133,2]]},"857":{"position":[[365,2]]},"1145":{"position":[[73,2]]}}}],["高峰",{"_index":651,"t":{"135":{"position":[[43,2]]},"600":{"position":[[43,2]]}}}],["高度",{"_index":1059,"t":{"342":{"position":[[7,2]]},"468":{"position":[[2,2]]},"789":{"position":[[7,2]]},"950":{"position":[[2,2]]}}}],["高性能",{"_index":675,"t":{"141":{"position":[[62,3]]},"606":{"position":[[62,3]]},"1023":{"position":[[112,3]]},"1025":{"position":[[27,3]]},"1049":{"position":[[21,3]]},"1170":{"position":[[104,3]]},"1191":{"position":[[204,3]]},"1193":{"position":[[23,3]]}}}],["高效",{"_index":671,"t":{"141":{"position":[[31,2]]},"576":{"position":[[116,2],[223,2]]},"606":{"position":[[31,2]]},"974":{"position":[[53,2]]},"1191":{"position":[[30,2]]}}}],["高速",{"_index":223,"t":{"19":{"position":[[318,2],[454,2]]},"1191":{"position":[[223,2]]}}}],["高速率",{"_index":693,"t":{"145":{"position":[[6,3]]},"610":{"position":[[6,3]]}}}],["高频",{"_index":1362,"t":{"576":{"position":[[343,2]]}}}],["鸟",{"_index":1121,"t":{"362":{"position":[[96,1]]},"839":{"position":[[96,1]]}}}],["鸟儿",{"_index":1122,"t":{"362":{"position":[[167,2]]},"839":{"position":[[167,2]]}}}],["鸣叫",{"_index":1117,"t":{"360":{"position":[[329,2]]},"362":{"position":[[341,2]]},"837":{"position":[[329,2]]},"839":{"position":[[341,2]]}}}],["麻雀",{"_index":1111,"t":{"360":{"position":[[132,2],[183,2]]},"362":{"position":[[179,2],[259,2]]},"837":{"position":[[132,2],[183,2]]},"839":{"position":[[179,2],[259,2]]}}}],["黄",{"_index":1140,"t":{"370":{"position":[[233,1],[265,1]]},"847":{"position":[[233,1],[265,1]]}}}],["默认",{"_index":1253,"t":{"480":{"position":[[434,2]]},"556":{"position":[[39,2]]},"580":{"position":[[192,2]]},"988":{"position":[[11,2]]},"1028":{"position":[[68,2]]},"1147":{"position":[[166,2]]},"1233":{"position":[[349,2]]}}}],["默认值",{"_index":1375,"t":{"580":{"position":[[135,3]]},"983":{"position":[[60,3]]},"1070":{"position":[[617,3]]},"1233":{"position":[[208,3],[297,3]]}}}],["鼓励",{"_index":930,"t":{"281":{"position":[[165,2]]},"304":{"position":[[3,2]]},"806":{"position":[[165,2]]},"829":{"position":[[3,2]]}}}]],"pipeline":["stemmer"]}}]