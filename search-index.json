[{"documents":[{"i":1,"t":"","u":"/blog/archive","b":["博客"]},{"i":2,"t":"","u":"/blog/authors","b":["博客"]},{"i":3,"t":"","u":"/blog/authors/weidongkl","b":["博客"]},{"i":10,"t":"一句顶一万句","u":"/blog/一句顶一万句","b":["博客"]},{"i":12,"t":"南明史","u":"/blog/南明史","b":["博客"]},{"i":14,"t":"人类简史","u":"/blog/人类简史","b":["博客"]},{"i":24,"t":"Makefile 中 : 和 :: 的使用指南","u":"/docs/note/build/makefile:","b":["笔记","Build"]},{"i":43,"t":"Makefile 常用方法","u":"/docs/note/build/makefile_function","b":["笔记","Build"]},{"i":109,"t":"microkernel 设计2","u":"/docs/note/design/microkernel/microkernel2","b":["笔记","Design","微内核设计模式"]},{"i":125,"t":"microkernel 设计1","u":"/docs/note/design/microkernel/microkernel1","b":["笔记","Design","微内核设计模式"]},{"i":145,"t":"microkernel 设计5","u":"/docs/note/design/microkernel/microkernel5","b":["笔记","Design","微内核设计模式"]},{"i":153,"t":"microkernel 设计4","u":"/docs/note/design/microkernel/microkernel4","b":["笔记","Design","微内核设计模式"]},{"i":165,"t":"Future-Proof 机制","u":"/docs/note/design/future_proof","b":["笔记","Design"]},{"i":189,"t":"microkernel 设计6","u":"/docs/note/design/microkernel/microkernel6","b":["笔记","Design","微内核设计模式"]},{"i":199,"t":"microkernel 设计3","u":"/docs/note/design/microkernel/microkernel3","b":["笔记","Design","微内核设计模式"]},{"i":210,"t":"microkernel 设计8","u":"/docs/note/design/microkernel/microkernel8","b":["笔记","Design","微内核设计模式"]},{"i":222,"t":"microkernel 设计7","u":"/docs/note/design/microkernel/microkernel7","b":["笔记","Design","微内核设计模式"]},{"i":234,"t":"microkernel 设计9","u":"/docs/note/design/microkernel/microkernel9","b":["笔记","Design","微内核设计模式"]},{"i":256,"t":"接口隔离原则(ISP)","u":"/docs/note/design/oop_pinciple/isp","b":["笔记","Design","面相对象设计原则"]},{"i":282,"t":"里氏替换原则(LSP)","u":"/docs/note/design/oop_pinciple/lsp","b":["笔记","Design","面相对象设计原则"]},{"i":306,"t":"依赖倒置原则(DIP)","u":"/docs/note/design/oop_pinciple/dip","b":["笔记","Design","面相对象设计原则"]},{"i":334,"t":"Golang 多goroutine交互模型","u":"/docs/note/design/multi_goroutine","b":["笔记","Design"]},{"i":346,"t":"单一职责原则(SRP)","u":"/docs/note/design/oop_pinciple/srp","b":["笔记","Design","面相对象设计原则"]},{"i":373,"t":"git 错误","u":"/docs/note/git/git_err","b":["笔记","Git"]},{"i":376,"t":"开闭原则(OCP)","u":"/docs/note/design/oop_pinciple/ocp","b":["笔记","Design","面相对象设计原则"]},{"i":412,"t":"面向对象编程中的设计原则","u":"/docs/note/design/oop_pinciple/principle","b":["笔记","Golang","Design","面相对象设计原则","Design","面相对象设计原则"]},{"i":420,"t":"Golang bcrypt","u":"/docs/note/golang/bcrypt","b":["笔记","Golang"]},{"i":438,"t":"工厂模式（Factory Pattern）","u":"/docs/note/design/standard_design_patterns/create/factory","b":["笔记","Design","标准设计模式","创建者设计模式"]},{"i":468,"t":"Golang sync.Cond","u":"/docs/note/golang/concurrency/cond","b":["笔记","Golang","并发"]},{"i":498,"t":"Golang os/exec 用法","u":"/docs/note/golang/cmd","b":["笔记","Golang"]},{"i":524,"t":"Golang 并发编程","u":"/docs/note/golang/concurrency/","b":["笔记","Golang","并发"]},{"i":554,"t":"Golang runtime/debug 用法","u":"/docs/note/golang/debug","b":["笔记","Golang"]},{"i":571,"t":"microkernel 设计1","u":"/docs/note/golang/design/microkernel/microkernel1","b":["笔记","Golang","Design","微内核设计模式"]},{"i":591,"t":"microkernel 设计2","u":"/docs/note/golang/design/microkernel/microkernel2","b":["笔记","Golang","Design","微内核设计模式"]},{"i":607,"t":"microkernel 设计3","u":"/docs/note/golang/design/microkernel/microkernel3","b":["笔记","Golang","Design","微内核设计模式"]},{"i":618,"t":"Future-Proof 机制","u":"/docs/note/golang/design/future_proof","b":["笔记","Golang","Design"]},{"i":642,"t":"microkernel 设计4","u":"/docs/note/golang/design/microkernel/microkernel4","b":["笔记","Golang","Design","微内核设计模式"]},{"i":654,"t":"microkernel 设计5","u":"/docs/note/golang/design/microkernel/microkernel5","b":["笔记","Golang","Design","微内核设计模式"]},{"i":662,"t":"microkernel 设计6","u":"/docs/note/golang/design/microkernel/microkernel6","b":["笔记","Golang","Design","微内核设计模式"]},{"i":672,"t":"microkernel 设计8","u":"/docs/note/golang/design/microkernel/microkernel8","b":["笔记","Golang","Design","微内核设计模式"]},{"i":684,"t":"microkernel 设计7","u":"/docs/note/golang/design/microkernel/microkernel7","b":["笔记","Golang","Design","微内核设计模式"]},{"i":696,"t":"microkernel 设计9","u":"/docs/note/golang/design/microkernel/microkernel9","b":["笔记","Golang","Design","微内核设计模式"]},{"i":718,"t":"依赖倒置原则(DIP)","u":"/docs/note/golang/design/oop_pinciple/dip","b":["笔记","Golang","Design","面相对象设计原则"]},{"i":746,"t":"Golang 多goroutine交互模型","u":"/docs/note/golang/design/multi_goroutine","b":["笔记","Golang","Design"]},{"i":758,"t":"里氏替换原则(LSP)","u":"/docs/note/golang/design/oop_pinciple/lsp","b":["笔记","Golang","Design","面相对象设计原则"]},{"i":782,"t":"接口隔离原则(ISP)","u":"/docs/note/golang/design/oop_pinciple/isp","b":["笔记","Golang","Design","面相对象设计原则"]},{"i":808,"t":"开闭原则(OCP)","u":"/docs/note/golang/design/oop_pinciple/ocp","b":["笔记","Golang","Design","面相对象设计原则"]},{"i":844,"t":"面向对象编程中的设计原则","u":"/docs/note/golang/design/oop_pinciple/principle","b":["笔记","Golang","Design","面相对象设计原则"]},{"i":852,"t":"goland 问题处理记录","u":"/docs/note/golang/goland","b":["笔记","Golang"]},{"i":855,"t":"单一职责原则(SRP)","u":"/docs/note/golang/design/oop_pinciple/srp","b":["笔记","Golang","Design","面相对象设计原则"]},{"i":882,"t":"工厂模式（Factory Pattern）","u":"/docs/note/golang/design/standard_design_patterns/create/factory","b":["笔记","Golang","Design","标准设计模式","创建者设计模式"]},{"i":912,"t":"Golang 随笔","u":"/docs/note/golang/jotting","b":["笔记","Golang"]},{"i":935,"t":"Golang JSON 解析","u":"/docs/note/golang/json","b":["笔记","Golang"]},{"i":955,"t":"Golang Reflect","u":"/docs/note/golang/reflect","b":["笔记","Golang"]},{"i":975,"t":"Golang 序列化/反序列化","u":"/docs/note/golang/serialization","b":["笔记","Golang"]},{"i":1011,"t":"kingpin 用法","u":"/docs/note/golang/kingpin","b":["笔记","Golang"]},{"i":1036,"t":"Golang Validator","u":"/docs/note/golang/validator","b":["笔记","Golang"]},{"i":1053,"t":"chroot 用法","u":"/docs/note/os/chroot","b":["笔记","OS"]},{"i":1078,"t":"Golang sys/unix syscall","u":"/docs/note/golang/syscall","b":["笔记","Golang"]},{"i":1122,"t":"GDB 调试工具","u":"/docs/note/os/debug/gdb","b":["笔记","OS","调试工具"]},{"i":1185,"t":"僵尸进程","u":"/docs/note/os/zombie","b":["笔记","OS"]},{"i":1195,"t":"Golang Unix Socket 服务","u":"/docs/note/golang/web_server_unix","b":["笔记","Golang"]}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/1",[]],["t/2",[]],["t/3",[]],["t/10",[0,3.746,1,3.746,2,3.746]],["t/12",[3,4.335,4,4.335]],["t/14",[5,4.335,6,4.335]],["t/24",[7,0.164,8,2.897,9,3.746]],["t/43",[7,0.164,10,3.746,11,3.746]],["t/109",[7,0.225,12,1.125]],["t/125",[7,0.225,12,1.125]],["t/145",[7,0.225,12,1.125]],["t/153",[7,0.225,12,1.125]],["t/165",[7,0.225,13,3.234]],["t/189",[7,0.225,12,1.125]],["t/199",[7,0.225,12,1.125]],["t/210",[7,0.225,12,1.125]],["t/222",[7,0.225,12,1.125]],["t/234",[7,0.225,12,1.125]],["t/256",[7,0.164,14,3.234,15,1.621]],["t/282",[7,0.144,15,1.427,16,2.847,17,2.847]],["t/306",[7,0.144,15,1.427,18,2.847,19,2.847]],["t/334",[7,0.19,20,2.543,21,2.543,22,2.543]],["t/346",[7,0.144,15,1.427,23,2.847,24,2.847]],["t/373",[7,0.19,25,4.335]],["t/376",[7,0.164,15,1.621,26,3.234]],["t/412",[8,2.55,12,0.991,15,1.427,27,2.847]],["t/420",[7,0.248]],["t/438",[7,0.206,28,2.847,29,2.847]],["t/468",[7,0.257]],["t/498",[7,0.24,30,2.328]],["t/524",[7,0.164,31,3.746,32,3.746]],["t/554",[7,0.24,30,2.328]],["t/571",[7,0.225,12,1.125]],["t/591",[7,0.225,12,1.125]],["t/607",[7,0.225,12,1.125]],["t/618",[7,0.225,13,3.234]],["t/642",[7,0.225,12,1.125]],["t/654",[7,0.225,12,1.125]],["t/662",[7,0.225,12,1.125]],["t/672",[7,0.225,12,1.125]],["t/684",[7,0.225,12,1.125]],["t/696",[7,0.225,12,1.125]],["t/718",[7,0.144,15,1.427,18,2.847,19,2.847]],["t/746",[7,0.19,20,2.543,21,2.543,22,2.543]],["t/758",[7,0.144,15,1.427,16,2.847,17,2.847]],["t/782",[7,0.164,14,3.234,15,1.621]],["t/808",[7,0.164,15,1.621,26,3.234]],["t/844",[8,2.55,12,0.991,15,1.427,27,2.847]],["t/852",[7,0.144,33,3.298,34,3.298,35,3.298]],["t/855",[7,0.144,15,1.427,23,2.847,24,2.847]],["t/882",[7,0.206,28,2.847,29,2.847]],["t/912",[7,0.19,36,4.335]],["t/935",[7,0.225,37,3.746]],["t/955",[7,0.248]],["t/975",[7,0.144,38,4.707,39,3.298]],["t/1011",[7,0.19,30,3.061]],["t/1036",[7,0.248]],["t/1053",[7,0.19,30,3.061]],["t/1078",[7,0.262]],["t/1122",[7,0.164,40,3.746,41,3.746]],["t/1185",[42,4.335,43,4.335]],["t/1195",[7,0.24,44,3.298]]],"invertedIndex":[["",{"_index":7,"t":{"24":{"position":[[0,8]]},"43":{"position":[[0,8]]},"109":{"position":[[0,11],[14,1]]},"125":{"position":[[0,11],[14,1]]},"145":{"position":[[0,11],[14,1]]},"153":{"position":[[0,11],[14,1]]},"165":{"position":[[0,6],[7,5]]},"189":{"position":[[0,11],[14,1]]},"199":{"position":[[0,11],[14,1]]},"210":{"position":[[0,11],[14,1]]},"222":{"position":[[0,11],[14,1]]},"234":{"position":[[0,11],[14,1]]},"256":{"position":[[7,3]]},"282":{"position":[[7,3]]},"306":{"position":[[7,3]]},"334":{"position":[[0,6],[8,9]]},"346":{"position":[[7,3]]},"373":{"position":[[0,3]]},"376":{"position":[[5,3]]},"420":{"position":[[0,6],[7,6]]},"438":{"position":[[5,7],[13,7]]},"468":{"position":[[0,6],[7,4],[12,4]]},"498":{"position":[[0,6],[7,2],[10,4]]},"524":{"position":[[0,6]]},"554":{"position":[[0,6],[7,7],[15,5]]},"571":{"position":[[0,11],[14,1]]},"591":{"position":[[0,11],[14,1]]},"607":{"position":[[0,11],[14,1]]},"618":{"position":[[0,6],[7,5]]},"642":{"position":[[0,11],[14,1]]},"654":{"position":[[0,11],[14,1]]},"662":{"position":[[0,11],[14,1]]},"672":{"position":[[0,11],[14,1]]},"684":{"position":[[0,11],[14,1]]},"696":{"position":[[0,11],[14,1]]},"718":{"position":[[7,3]]},"746":{"position":[[0,6],[8,9]]},"758":{"position":[[7,3]]},"782":{"position":[[7,3]]},"808":{"position":[[5,3]]},"852":{"position":[[0,6]]},"855":{"position":[[7,3]]},"882":{"position":[[5,7],[13,7]]},"912":{"position":[[0,6]]},"935":{"position":[[0,6],[7,4]]},"955":{"position":[[0,6],[7,7]]},"975":{"position":[[0,6]]},"1011":{"position":[[0,7]]},"1036":{"position":[[0,6],[7,9]]},"1053":{"position":[[0,6]]},"1078":{"position":[[0,6],[7,3],[11,4],[16,7]]},"1122":{"position":[[0,3]]},"1195":{"position":[[0,6],[7,4],[12,6]]}}}],["一万句",{"_index":2,"t":{"10":{"position":[[3,3]]}}}],["一句",{"_index":0,"t":{"10":{"position":[[0,2]]}}}],["中",{"_index":8,"t":{"24":{"position":[[9,1]]},"412":{"position":[[6,1]]},"844":{"position":[[6,1]]}}}],["交互",{"_index":21,"t":{"334":{"position":[[17,2]]},"746":{"position":[[17,2]]}}}],["人类",{"_index":5,"t":{"14":{"position":[[0,2]]}}}],["使用指南",{"_index":9,"t":{"24":{"position":[[19,4]]}}}],["依赖",{"_index":18,"t":{"306":{"position":[[0,2]]},"718":{"position":[[0,2]]}}}],["倒置",{"_index":19,"t":{"306":{"position":[[2,2]]},"718":{"position":[[2,2]]}}}],["僵尸",{"_index":42,"t":{"1185":{"position":[[0,2]]}}}],["单一",{"_index":23,"t":{"346":{"position":[[0,2]]},"855":{"position":[[0,2]]}}}],["南",{"_index":3,"t":{"12":{"position":[[0,1]]}}}],["原则",{"_index":15,"t":{"256":{"position":[[4,2]]},"282":{"position":[[4,2]]},"306":{"position":[[4,2]]},"346":{"position":[[4,2]]},"376":{"position":[[2,2]]},"412":{"position":[[10,2]]},"718":{"position":[[4,2]]},"758":{"position":[[4,2]]},"782":{"position":[[4,2]]},"808":{"position":[[2,2]]},"844":{"position":[[10,2]]},"855":{"position":[[4,2]]}}}],["反",{"_index":39,"t":{"975":{"position":[[11,1]]}}}],["处理",{"_index":34,"t":{"852":{"position":[[9,2]]}}}],["多",{"_index":20,"t":{"334":{"position":[[7,1]]},"746":{"position":[[7,1]]}}}],["工具",{"_index":41,"t":{"1122":{"position":[[6,2]]}}}],["工厂",{"_index":28,"t":{"438":{"position":[[0,2]]},"882":{"position":[[0,2]]}}}],["常用",{"_index":10,"t":{"43":{"position":[[9,2]]}}}],["并发",{"_index":31,"t":{"524":{"position":[[7,2]]}}}],["序列化",{"_index":38,"t":{"975":{"position":[[7,3],[12,3]]}}}],["开闭",{"_index":26,"t":{"376":{"position":[[0,2]]},"808":{"position":[[0,2]]}}}],["接口隔离",{"_index":14,"t":{"256":{"position":[[0,4]]},"782":{"position":[[0,4]]}}}],["方法",{"_index":11,"t":{"43":{"position":[[11,2]]}}}],["明史",{"_index":4,"t":{"12":{"position":[[1,2]]}}}],["替换",{"_index":17,"t":{"282":{"position":[[2,2]]},"758":{"position":[[2,2]]}}}],["服务",{"_index":44,"t":{"1195":{"position":[[19,2]]}}}],["机制",{"_index":13,"t":{"165":{"position":[[13,2]]},"618":{"position":[[13,2]]}}}],["模型",{"_index":22,"t":{"334":{"position":[[19,2]]},"746":{"position":[[19,2]]}}}],["模式",{"_index":29,"t":{"438":{"position":[[2,2]]},"882":{"position":[[2,2]]}}}],["用法",{"_index":30,"t":{"498":{"position":[[15,2]]},"554":{"position":[[21,2]]},"1011":{"position":[[8,2]]},"1053":{"position":[[7,2]]}}}],["简史",{"_index":6,"t":{"14":{"position":[[2,2]]}}}],["编程",{"_index":32,"t":{"524":{"position":[[9,2]]}}}],["职责",{"_index":24,"t":{"346":{"position":[[2,2]]},"855":{"position":[[2,2]]}}}],["解析",{"_index":37,"t":{"935":{"position":[[12,2]]}}}],["记录",{"_index":35,"t":{"852":{"position":[[11,2]]}}}],["设计",{"_index":12,"t":{"109":{"position":[[12,2]]},"125":{"position":[[12,2]]},"145":{"position":[[12,2]]},"153":{"position":[[12,2]]},"189":{"position":[[12,2]]},"199":{"position":[[12,2]]},"210":{"position":[[12,2]]},"222":{"position":[[12,2]]},"234":{"position":[[12,2]]},"412":{"position":[[8,2]]},"571":{"position":[[12,2]]},"591":{"position":[[12,2]]},"607":{"position":[[12,2]]},"642":{"position":[[12,2]]},"654":{"position":[[12,2]]},"662":{"position":[[12,2]]},"672":{"position":[[12,2]]},"684":{"position":[[12,2]]},"696":{"position":[[12,2]]},"844":{"position":[[8,2]]}}}],["调试",{"_index":40,"t":{"1122":{"position":[[4,2]]}}}],["进程",{"_index":43,"t":{"1185":{"position":[[2,2]]}}}],["里氏",{"_index":16,"t":{"282":{"position":[[0,2]]},"758":{"position":[[0,2]]}}}],["错误",{"_index":25,"t":{"373":{"position":[[4,2]]}}}],["问题",{"_index":33,"t":{"852":{"position":[[7,2]]}}}],["随笔",{"_index":36,"t":{"912":{"position":[[7,2]]}}}],["面向对象编程",{"_index":27,"t":{"412":{"position":[[0,6]]},"844":{"position":[[0,6]]}}}],["顶",{"_index":1,"t":{"10":{"position":[[2,1]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":4,"t":"人类简史","u":"/blog/authors/weidongkl","h":"","p":3},{"i":6,"t":"南明史","u":"/blog/authors/weidongkl","h":"","p":3},{"i":8,"t":"一句顶一万句","u":"/blog/authors/weidongkl","h":"","p":3},{"i":16,"t":"司法","u":"/blog/人类简史","h":"#司法","p":14},{"i":18,"t":"文化","u":"/blog/人类简史","h":"#文化","p":14},{"i":20,"t":"经济","u":"/blog/人类简史","h":"#经济","p":14},{"i":22,"t":"家庭","u":"/blog/人类简史","h":"#家庭","p":14},{"i":25,"t":"1. 概述","u":"/docs/note/build/makefile:","h":"#1-概述","p":24},{"i":27,"t":"2. :（单冒号）与 ::（双冒号）的区别","u":"/docs/note/build/makefile:","h":"#2-单冒号与-双冒号的区别","p":24},{"i":29,"t":"3. :（单冒号）的用法","u":"/docs/note/build/makefile:","h":"#3-单冒号的用法","p":24},{"i":30,"t":"3.1 基本示例","u":"/docs/note/build/makefile:","h":"#31-基本示例","p":24},{"i":32,"t":"3.2 依赖的覆盖","u":"/docs/note/build/makefile:","h":"#32-依赖的覆盖","p":24},{"i":34,"t":"4. ::（双冒号）的用法","u":"/docs/note/build/makefile:","h":"#4-双冒号的用法","p":24},{"i":35,"t":"4.1 基本示例","u":"/docs/note/build/makefile:","h":"#41-基本示例","p":24},{"i":37,"t":"4.2 组合依赖","u":"/docs/note/build/makefile:","h":"#42-组合依赖","p":24},{"i":39,"t":"5. : vs :: 适用场景总结","u":"/docs/note/build/makefile:","h":"#5--vs--适用场景总结","p":24},{"i":41,"t":"6. 结论","u":"/docs/note/build/makefile:","h":"#6-结论","p":24},{"i":44,"t":"info/warning","u":"/docs/note/build/makefile_function","h":"#infowarning","p":43},{"i":45,"t":"功能：","u":"/docs/note/build/makefile_function","h":"#功能","p":43},{"i":47,"t":"调试：","u":"/docs/note/build/makefile_function","h":"#调试","p":43},{"i":49,"t":"示例：","u":"/docs/note/build/makefile_function","h":"#示例","p":43},{"i":51,"t":"subst","u":"/docs/note/build/makefile_function","h":"#subst","p":43},{"i":52,"t":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-1","p":43},{"i":54,"t":"用法：","u":"/docs/note/build/makefile_function","h":"#用法","p":43},{"i":56,"t":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-1","p":43},{"i":58,"t":"wildcard","u":"/docs/note/build/makefile_function","h":"#wildcard","p":43},{"i":59,"t":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-2","p":43},{"i":61,"t":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-1","p":43},{"i":63,"t":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-2","p":43},{"i":65,"t":"patsubst","u":"/docs/note/build/makefile_function","h":"#patsubst","p":43},{"i":66,"t":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-3","p":43},{"i":68,"t":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-2","p":43},{"i":70,"t":"区别：","u":"/docs/note/build/makefile_function","h":"#区别","p":43},{"i":72,"t":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-3","p":43},{"i":74,"t":"addsuffix","u":"/docs/note/build/makefile_function","h":"#addsuffix","p":43},{"i":75,"t":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-4","p":43},{"i":77,"t":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-3","p":43},{"i":79,"t":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-4","p":43},{"i":81,"t":"basename","u":"/docs/note/build/makefile_function","h":"#basename","p":43},{"i":82,"t":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-5","p":43},{"i":84,"t":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-4","p":43},{"i":86,"t":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-5","p":43},{"i":88,"t":"firstword","u":"/docs/note/build/makefile_function","h":"#firstword","p":43},{"i":89,"t":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-6","p":43},{"i":91,"t":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-5","p":43},{"i":93,"t":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-6","p":43},{"i":95,"t":"strip","u":"/docs/note/build/makefile_function","h":"#strip","p":43},{"i":96,"t":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-7","p":43},{"i":98,"t":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-6","p":43},{"i":100,"t":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-7","p":43},{"i":102,"t":"word","u":"/docs/note/build/makefile_function","h":"#word","p":43},{"i":103,"t":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-8","p":43},{"i":105,"t":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-7","p":43},{"i":107,"t":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-8","p":43},{"i":111,"t":"1. 目标","u":"/docs/note/design/microkernel/microkernel2","h":"#1-目标","p":109},{"i":113,"t":"2. 代码改动","u":"/docs/note/design/microkernel/microkernel2","h":"#2-代码改动","p":109},{"i":114,"t":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel2","h":"#21-kernel核心","p":109},{"i":116,"t":"2.2 LogService","u":"/docs/note/design/microkernel/microkernel2","h":"#22-logservice","p":109},{"i":118,"t":"2.3 主程序（运行微内核 + 服务）","u":"/docs/note/design/microkernel/microkernel2","h":"#23-主程序运行微内核--服务","p":109},{"i":120,"t":"2.4 运行结果","u":"/docs/note/design/microkernel/microkernel2","h":"#24-运行结果","p":109},{"i":122,"t":"2.5 优化函数和变量命名","u":"/docs/note/design/microkernel/microkernel2","h":"#25-优化函数和变量命名","p":109},{"i":124,"t":"","u":"/docs/note/design/microkernel/microkernel2","h":"","p":109},{"i":127,"t":"1. 微内核核心设计","u":"/docs/note/design/microkernel/microkernel1","h":"#1-微内核核心设计","p":125},{"i":128,"t":"1.1 特点","u":"/docs/note/design/microkernel/microkernel1","h":"#11-特点","p":125},{"i":130,"t":"1.2 核心组件","u":"/docs/note/design/microkernel/microkernel1","h":"#12-核心组件","p":125},{"i":132,"t":"2. Go 实现 microkernel","u":"/docs/note/design/microkernel/microkernel1","h":"#2-go-实现-microkernel","p":125},{"i":133,"t":"2.1 定义 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel1","h":"#21-定义-kernel核心","p":125},{"i":135,"t":"2.2 实现示例服务（LogService）","u":"/docs/note/design/microkernel/microkernel1","h":"#22-实现示例服务logservice","p":125},{"i":137,"t":"2.3 主程序（运行微内核 + 服务）","u":"/docs/note/design/microkernel/microkernel1","h":"#23-主程序运行微内核--服务","p":125},{"i":139,"t":"2.4 运行结果","u":"/docs/note/design/microkernel/microkernel1","h":"#24-运行结果","p":125},{"i":141,"t":"3. 扩展方向","u":"/docs/note/design/microkernel/microkernel1","h":"#3-扩展方向","p":125},{"i":143,"t":"4. 总结","u":"/docs/note/design/microkernel/microkernel1","h":"#4-总结","p":125},{"i":146,"t":"1. 目标","u":"/docs/note/design/microkernel/microkernel5","h":"#1-目标","p":145},{"i":148,"t":"2. 代码改动","u":"/docs/note/design/microkernel/microkernel5","h":"#2-代码改动","p":145},{"i":149,"t":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel5","h":"#21-kernel核心","p":145},{"i":151,"t":"2.2 运行结果","u":"/docs/note/design/microkernel/microkernel5","h":"#22-运行结果","p":145},{"i":154,"t":"1. 目标","u":"/docs/note/design/microkernel/microkernel4","h":"#1-目标","p":153},{"i":156,"t":"2. 代码改动","u":"/docs/note/design/microkernel/microkernel4","h":"#2-代码改动","p":153},{"i":157,"t":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel4","h":"#21-kernel核心","p":153},{"i":159,"t":"2.2 LogService","u":"/docs/note/design/microkernel/microkernel4","h":"#22-logservice","p":153},{"i":161,"t":"2.3 增加另一个类似的EchoService","u":"/docs/note/design/microkernel/microkernel4","h":"#23-增加另一个类似的echoservice","p":153},{"i":163,"t":"2.4 运行结果","u":"/docs/note/design/microkernel/microkernel4","h":"#24-运行结果","p":153},{"i":167,"t":"1. Future-Proof 机制的关键原则","u":"/docs/note/design/future_proof","h":"","p":165},{"i":169,"t":"1.1.  松耦合（Loose Coupling）","u":"/docs/note/design/future_proof","h":"#11--松耦合loose-coupling","p":165},{"i":171,"t":"1.2. 可扩展性（Extensibility）","u":"/docs/note/design/future_proof","h":"#12-可扩展性extensibility","p":165},{"i":173,"t":"1.3. 配置化而非硬编码","u":"/docs/note/design/future_proof","h":"#13-配置化而非硬编码","p":165},{"i":175,"t":"1.4. 协议与数据格式的兼容性","u":"/docs/note/design/future_proof","h":"#14-协议与数据格式的兼容性","p":165},{"i":177,"t":"1.5. 并发模型的可适应性","u":"/docs/note/design/future_proof","h":"#15-并发模型的可适应性","p":165},{"i":179,"t":"1.6. 可观测性（Observability）","u":"/docs/note/design/future_proof","h":"#16-可观测性observability","p":165},{"i":181,"t":"1.7. 防御性编程","u":"/docs/note/design/future_proof","h":"#17-防御性编程","p":165},{"i":183,"t":"2. 聚合器示例","u":"/docs/note/design/future_proof","h":"#2-聚合器示例","p":165},{"i":185,"t":"3. 反模式：非 Future-Proof 的设计","u":"/docs/note/design/future_proof","h":"#3-反模式非-future-proof-的设计","p":165},{"i":187,"t":"4. 总结","u":"/docs/note/design/future_proof","h":"#4-总结","p":165},{"i":190,"t":"1. 目标","u":"/docs/note/design/microkernel/microkernel6","h":"#1-目标","p":189},{"i":192,"t":"2. 代码改动","u":"/docs/note/design/microkernel/microkernel6","h":"#2-代码改动","p":189},{"i":193,"t":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel6","h":"#21-kernel核心","p":189},{"i":195,"t":"2.2 服务","u":"/docs/note/design/microkernel/microkernel6","h":"#22-服务","p":189},{"i":197,"t":"2.3 运行结果","u":"/docs/note/design/microkernel/microkernel6","h":"#23-运行结果","p":189},{"i":200,"t":"1. 目标","u":"/docs/note/design/microkernel/microkernel3","h":"#1-目标","p":199},{"i":202,"t":"2. 代码改动","u":"/docs/note/design/microkernel/microkernel3","h":"#2-代码改动","p":199},{"i":204,"t":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel3","h":"#21-kernel核心","p":199},{"i":206,"t":"2.2 LogService","u":"/docs/note/design/microkernel/microkernel3","h":"#22-logservice","p":199},{"i":208,"t":"2.3 运行结果","u":"/docs/note/design/microkernel/microkernel3","h":"#23-运行结果","p":199},{"i":211,"t":"1. 目标","u":"/docs/note/design/microkernel/microkernel8","h":"#1-目标","p":210},{"i":213,"t":"2. 代码改动","u":"/docs/note/design/microkernel/microkernel8","h":"#2-代码改动","p":210},{"i":214,"t":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel8","h":"#21-kernel核心","p":210},{"i":216,"t":"2.2 echo服务","u":"/docs/note/design/microkernel/microkernel8","h":"#22-echo服务","p":210},{"i":218,"t":"2.3 main","u":"/docs/note/design/microkernel/microkernel8","h":"#23-main","p":210},{"i":220,"t":"2.4 运行结果","u":"/docs/note/design/microkernel/microkernel8","h":"#24-运行结果","p":210},{"i":223,"t":"1. 目标","u":"/docs/note/design/microkernel/microkernel7","h":"#1-目标","p":222},{"i":225,"t":"2. 代码改动","u":"/docs/note/design/microkernel/microkernel7","h":"#2-代码改动","p":222},{"i":226,"t":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel7","h":"#21-kernel核心","p":222},{"i":228,"t":"2.2 日志服务","u":"/docs/note/design/microkernel/microkernel7","h":"#22-日志服务","p":222},{"i":230,"t":"2.3 main","u":"/docs/note/design/microkernel/microkernel7","h":"#23-main","p":222},{"i":232,"t":"2.4 运行结果","u":"/docs/note/design/microkernel/microkernel7","h":"#24-运行结果","p":222},{"i":236,"t":"1. 目标","u":"/docs/note/design/microkernel/microkernel9","h":"#1-目标","p":234},{"i":238,"t":"2. 状态存储设计","u":"/docs/note/design/microkernel/microkernel9","h":"#2-状态存储设计","p":234},{"i":239,"t":"2.1 存储文件设计","u":"/docs/note/design/microkernel/microkernel9","h":"#21-存储文件设计","p":234},{"i":241,"t":"2.2 状态管理模块：StateStore","u":"/docs/note/design/microkernel/microkernel9","h":"#22-状态管理模块statestore","p":234},{"i":243,"t":"3. 内核集成","u":"/docs/note/design/microkernel/microkernel9","h":"#3-内核集成","p":234},{"i":244,"t":"3.1 kernel 初始化集成StateStore","u":"/docs/note/design/microkernel/microkernel9","h":"#31-kernel-初始化集成statestore","p":234},{"i":246,"t":"3.2 注册服务时尝试自动加载状态","u":"/docs/note/design/microkernel/microkernel9","h":"#32-注册服务时尝试自动加载状态","p":234},{"i":248,"t":"3.3 停止服务时，保存状态","u":"/docs/note/design/microkernel/microkernel9","h":"#33-停止服务时保存状态","p":234},{"i":250,"t":"3.4 定时持久化状态","u":"/docs/note/design/microkernel/microkernel9","h":"#34-定时持久化状态","p":234},{"i":252,"t":"4. main","u":"/docs/note/design/microkernel/microkernel9","h":"#4-main","p":234},{"i":254,"t":"4.1 运行结果","u":"/docs/note/design/microkernel/microkernel9","h":"#41-运行结果","p":234},{"i":257,"t":"1. 概述","u":"/docs/note/design/oop_pinciple/isp","h":"#1-概述","p":256},{"i":259,"t":"2. 核心概念","u":"/docs/note/design/oop_pinciple/isp","h":"#2-核心概念","p":256},{"i":261,"t":"3. Go语言中的ISP实现方式","u":"/docs/note/design/oop_pinciple/isp","h":"#3-go语言中的isp实现方式","p":256},{"i":262,"t":"3.1 违反ISP的例子","u":"/docs/note/design/oop_pinciple/isp","h":"#31-违反isp的例子","p":256},{"i":264,"t":"3.2 遵循ISP的改进方案","u":"/docs/note/design/oop_pinciple/isp","h":"#32-遵循isp的改进方案","p":256},{"i":266,"t":"4. Go语言中实践ISP的技巧","u":"/docs/note/design/oop_pinciple/isp","h":"#4-go语言中实践isp的技巧","p":256},{"i":267,"t":"4.1 使用接口组合","u":"/docs/note/design/oop_pinciple/isp","h":"#41-使用接口组合","p":256},{"i":269,"t":"4.2 客户端特定接口","u":"/docs/note/design/oop_pinciple/isp","h":"#42-客户端特定接口","p":256},{"i":271,"t":"4.3 避免接口污染","u":"/docs/note/design/oop_pinciple/isp","h":"#43-避免接口污染","p":256},{"i":273,"t":"5. 实际应用案例","u":"/docs/note/design/oop_pinciple/isp","h":"#5-实际应用案例","p":256},{"i":274,"t":"5.1 数据库访问层","u":"/docs/note/design/oop_pinciple/isp","h":"#51-数据库访问层","p":256},{"i":276,"t":"5.2 HTTP中间件","u":"/docs/note/design/oop_pinciple/isp","h":"#52-http中间件","p":256},{"i":278,"t":"6. 违反ISP的后果","u":"/docs/note/design/oop_pinciple/isp","h":"#6-违反isp的后果","p":256},{"i":280,"t":"7. 总结","u":"/docs/note/design/oop_pinciple/isp","h":"#7-总结","p":256},{"i":283,"t":"1. 概述","u":"/docs/note/design/oop_pinciple/lsp","h":"#1-概述","p":282},{"i":285,"t":"2. 核心概念","u":"/docs/note/design/oop_pinciple/lsp","h":"#2-核心概念","p":282},{"i":287,"t":"3. Go语言中的LSP实现方式","u":"/docs/note/design/oop_pinciple/lsp","h":"#3-go语言中的lsp实现方式","p":282},{"i":288,"t":"3.1 通过接口实现LSP","u":"/docs/note/design/oop_pinciple/lsp","h":"#31-通过接口实现lsp","p":282},{"i":290,"t":"3.2 符合LSP的改进方案","u":"/docs/note/design/oop_pinciple/lsp","h":"#32-符合lsp的改进方案","p":282},{"i":292,"t":"4. 违反LSP的常见情况与重构","u":"/docs/note/design/oop_pinciple/lsp","h":"#4-违反lsp的常见情况与重构","p":282},{"i":293,"t":"4.1 违反情况1：子类削弱前置条件","u":"/docs/note/design/oop_pinciple/lsp","h":"#41-违反情况1子类削弱前置条件","p":282},{"i":295,"t":"4.2 违反情况2：子类强化后置条件","u":"/docs/note/design/oop_pinciple/lsp","h":"#42-违反情况2子类强化后置条件","p":282},{"i":297,"t":"5. Go语言中实践LSP的技巧","u":"/docs/note/design/oop_pinciple/lsp","h":"#5-go语言中实践lsp的技巧","p":282},{"i":298,"t":"5.1 使用组合代替继承","u":"/docs/note/design/oop_pinciple/lsp","h":"#51-使用组合代替继承","p":282},{"i":300,"t":"5.2 接口隔离加强","u":"/docs/note/design/oop_pinciple/lsp","h":"#52-接口隔离加强","p":282},{"i":302,"t":"6. LSP的实际应用场景","u":"/docs/note/design/oop_pinciple/lsp","h":"#6-lsp的实际应用场景","p":282},{"i":304,"t":"7. 总结","u":"/docs/note/design/oop_pinciple/lsp","h":"#7-总结","p":282},{"i":307,"t":"1. 概述","u":"/docs/note/design/oop_pinciple/dip","h":"#1-概述","p":306},{"i":309,"t":"2. 核心概念","u":"/docs/note/design/oop_pinciple/dip","h":"#2-核心概念","p":306},{"i":311,"t":"3. Go语言中的DIP实现方式","u":"/docs/note/design/oop_pinciple/dip","h":"#3-go语言中的dip实现方式","p":306},{"i":312,"t":"3.1 违反DIP的例子","u":"/docs/note/design/oop_pinciple/dip","h":"#31-违反dip的例子","p":306},{"i":314,"t":"3.2 遵循DIP的改进方案","u":"/docs/note/design/oop_pinciple/dip","h":"#32-遵循dip的改进方案","p":306},{"i":316,"t":"4. Go语言中实践DIP的技巧","u":"/docs/note/design/oop_pinciple/dip","h":"#4-go语言中实践dip的技巧","p":306},{"i":317,"t":"4.1 构造函数注入","u":"/docs/note/design/oop_pinciple/dip","h":"#41-构造函数注入","p":306},{"i":319,"t":"4.2 方法注入","u":"/docs/note/design/oop_pinciple/dip","h":"#42-方法注入","p":306},{"i":321,"t":"4.3 接口定义在调用方","u":"/docs/note/design/oop_pinciple/dip","h":"#43-接口定义在调用方","p":306},{"i":323,"t":"5. 实际应用案例","u":"/docs/note/design/oop_pinciple/dip","h":"#5-实际应用案例","p":306},{"i":324,"t":"5.1 数据库访问","u":"/docs/note/design/oop_pinciple/dip","h":"#51-数据库访问","p":306},{"i":326,"t":"5.2 HTTP服务","u":"/docs/note/design/oop_pinciple/dip","h":"#52-http服务","p":306},{"i":328,"t":"6. 依赖注入框架(可选)","u":"/docs/note/design/oop_pinciple/dip","h":"#6-依赖注入框架可选","p":306},{"i":330,"t":"7. 违反DIP的后果","u":"/docs/note/design/oop_pinciple/dip","h":"#7-违反dip的后果","p":306},{"i":332,"t":"8. 总结","u":"/docs/note/design/oop_pinciple/dip","h":"#8-总结","p":306},{"i":335,"t":"1. channel 交互","u":"/docs/note/design/multi_goroutine","h":"#1-channel-交互","p":334},{"i":337,"t":"2.  增加 channel 状态判断","u":"/docs/note/design/multi_goroutine","h":"#2--增加-channel-状态判断","p":334},{"i":338,"t":"2.1. 理解 channel 行为","u":"/docs/note/design/multi_goroutine","h":"#21-理解-channel-行为","p":334},{"i":340,"t":"2.2. 使用判断channel 优化示例","u":"/docs/note/design/multi_goroutine","h":"#22-使用判断channel-优化示例","p":334},{"i":342,"t":"3. 支持 context.Context","u":"/docs/note/design/multi_goroutine","h":"#3-支持-contextcontext","p":334},{"i":344,"t":"4. CommandHandler 模式","u":"/docs/note/design/multi_goroutine","h":"#4-commandhandler-模式","p":334},{"i":347,"t":"1. 概述","u":"/docs/note/design/oop_pinciple/srp","h":"#1-概述","p":346},{"i":349,"t":"2. 为什么需要SRP？","u":"/docs/note/design/oop_pinciple/srp","h":"#2-为什么需要srp","p":346},{"i":350,"t":"优点：","u":"/docs/note/design/oop_pinciple/srp","h":"#优点","p":346},{"i":352,"t":"违反SRP的后果：","u":"/docs/note/design/oop_pinciple/srp","h":"#违反srp的后果","p":346},{"i":354,"t":"3. Go语言中的SRP示例","u":"/docs/note/design/oop_pinciple/srp","h":"#3-go语言中的srp示例","p":346},{"i":355,"t":"3.1 违反SRP的例子","u":"/docs/note/design/oop_pinciple/srp","h":"#31-违反srp的例子","p":346},{"i":357,"t":"3.2 遵循SRP的改进版本","u":"/docs/note/design/oop_pinciple/srp","h":"#32-遵循srp的改进版本","p":346},{"i":359,"t":"4. Go语言中实践SRP的技巧","u":"/docs/note/design/oop_pinciple/srp","h":"#4-go语言中实践srp的技巧","p":346},{"i":360,"t":"4.1 接口设计","u":"/docs/note/design/oop_pinciple/srp","h":"#41-接口设计","p":346},{"i":362,"t":"4.2 组合代替继承","u":"/docs/note/design/oop_pinciple/srp","h":"#42-组合代替继承","p":346},{"i":364,"t":"4.3 函数职责单一","u":"/docs/note/design/oop_pinciple/srp","h":"#43-函数职责单一","p":346},{"i":366,"t":"5. 何时应用SRP？","u":"/docs/note/design/oop_pinciple/srp","h":"#5-何时应用srp","p":346},{"i":367,"t":"应该应用SRP的情况：","u":"/docs/note/design/oop_pinciple/srp","h":"#应该应用srp的情况","p":346},{"i":369,"t":"不必过度应用：","u":"/docs/note/design/oop_pinciple/srp","h":"#不必过度应用","p":346},{"i":371,"t":"6. 总结","u":"/docs/note/design/oop_pinciple/srp","h":"#6-总结","p":346},{"i":374,"t":"1. tls 连接错误","u":"/docs/note/git/git_err","h":"#1-tls-连接错误","p":373},{"i":377,"t":"1. 概述","u":"/docs/note/design/oop_pinciple/ocp","h":"#1-概述","p":376},{"i":379,"t":"2. 核心概念","u":"/docs/note/design/oop_pinciple/ocp","h":"#2-核心概念","p":376},{"i":381,"t":"3. Go语言中的OCP实现方式","u":"/docs/note/design/oop_pinciple/ocp","h":"#3-go语言中的ocp实现方式","p":376},{"i":382,"t":"3.1 使用接口实现OCP","u":"/docs/note/design/oop_pinciple/ocp","h":"#31-使用接口实现ocp","p":376},{"i":384,"t":"3.2 添加新支付方式（扩展）","u":"/docs/note/design/oop_pinciple/ocp","h":"#32-添加新支付方式扩展","p":376},{"i":386,"t":"4. 违反OCP的示例与重构","u":"/docs/note/design/oop_pinciple/ocp","h":"#4-违反ocp的示例与重构","p":376},{"i":387,"t":"4.1 违反OCP的代码","u":"/docs/note/design/oop_pinciple/ocp","h":"#41-违反ocp的代码","p":376},{"i":389,"t":"4.2 重构为符合OCP的代码","u":"/docs/note/design/oop_pinciple/ocp","h":"#42-重构为符合ocp的代码","p":376},{"i":391,"t":"5. Go语言中实践OCP的高级技巧","u":"/docs/note/design/oop_pinciple/ocp","h":"#5-go语言中实践ocp的高级技巧","p":376},{"i":392,"t":"5.1 函数选项模式(Functional Options)","u":"/docs/note/design/oop_pinciple/ocp","h":"#51-函数选项模式functional-options","p":376},{"i":394,"t":"5.2 中间件模式","u":"/docs/note/design/oop_pinciple/ocp","h":"#52-中间件模式","p":376},{"i":396,"t":"6. OCP的实际应用场景","u":"/docs/note/design/oop_pinciple/ocp","h":"#6-ocp的实际应用场景","p":376},{"i":398,"t":"7. OCP的日志系统","u":"/docs/note/design/oop_pinciple/ocp","h":"#7-ocp的日志系统","p":376},{"i":400,"t":"7.1 基础设计","u":"/docs/note/design/oop_pinciple/ocp","h":"#71-基础设计","p":376},{"i":402,"t":"7.2 组合日志器（支持多种输出）","u":"/docs/note/design/oop_pinciple/ocp","h":"#72-组合日志器支持多种输出","p":376},{"i":404,"t":"7.3 使用工厂方法创建日志器","u":"/docs/note/design/oop_pinciple/ocp","h":"#73-使用工厂方法创建日志器","p":376},{"i":406,"t":"7.4 添加网络日志输出（扩展示例）","u":"/docs/note/design/oop_pinciple/ocp","h":"#74-添加网络日志输出扩展示例","p":376},{"i":408,"t":"7.5 完整使用示例","u":"/docs/note/design/oop_pinciple/ocp","h":"#75-完整使用示例","p":376},{"i":410,"t":"8. 总结","u":"/docs/note/design/oop_pinciple/ocp","h":"#8-总结","p":376},{"i":414,"t":"SOLID原则","u":"/docs/note/design/oop_pinciple/principle","h":"#solid原则","p":412},{"i":416,"t":"其他重要原则","u":"/docs/note/design/oop_pinciple/principle","h":"#其他重要原则","p":412},{"i":418,"t":"个人总结","u":"/docs/note/design/oop_pinciple/principle","h":"#个人总结","p":412},{"i":421,"t":"1. 概述","u":"/docs/note/golang/bcrypt","h":"#1-概述","p":420},{"i":423,"t":"2. 安装","u":"/docs/note/golang/bcrypt","h":"#2-安装","p":420},{"i":425,"t":"3. 基本用法","u":"/docs/note/golang/bcrypt","h":"#3-基本用法","p":420},{"i":426,"t":"3.1 生成哈希密码","u":"/docs/note/golang/bcrypt","h":"#31-生成哈希密码","p":420},{"i":428,"t":"3.2 校验密码","u":"/docs/note/golang/bcrypt","h":"#32-校验密码","p":420},{"i":430,"t":"3.3 修改密码","u":"/docs/note/golang/bcrypt","h":"#33-修改密码","p":420},{"i":432,"t":"3.4 确定哈希是否需要更新","u":"/docs/note/golang/bcrypt","h":"#34-确定哈希是否需要更新","p":420},{"i":434,"t":"4. 适用场景","u":"/docs/note/golang/bcrypt","h":"#4-适用场景","p":420},{"i":436,"t":"5. 总结","u":"/docs/note/golang/bcrypt","h":"#5-总结","p":420},{"i":439,"t":"1. 概述","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#1-概述","p":438},{"i":441,"t":"2. 简单工厂（Simple Factory）","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#2-简单工厂simple-factory","p":438},{"i":442,"t":"2.1 示例：图形创建器","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#21-示例图形创建器","p":438},{"i":444,"t":"2.2 示例：网络连接","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#22-示例网络连接","p":438},{"i":446,"t":"2.3 优缺点","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#23-优缺点","p":438},{"i":448,"t":"3. 工厂方法（Factory Method）","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#3-工厂方法factory-method","p":438},{"i":449,"t":"3.1 示例：数据库连接器","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#31-示例数据库连接器","p":438},{"i":451,"t":"3.2 示例：日志系统","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#32-示例日志系统","p":438},{"i":453,"t":"3.3 优缺点","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#33-优缺点","p":438},{"i":455,"t":"4. 抽象工厂（Abstract Factory）","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#4-抽象工厂abstract-factory","p":438},{"i":456,"t":"4.1 示例：UI 工厂（按钮 + 文本框）","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#41-示例ui-工厂按钮--文本框","p":438},{"i":458,"t":"4.2 优缺点","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#42-优缺点","p":438},{"i":460,"t":"5. 函数式工厂（Functional Factory）","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#5-函数式工厂functional-factory","p":438},{"i":462,"t":"5.1 优点","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#51-优点","p":438},{"i":464,"t":"6.  工厂模式应用场景","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#6--工厂模式应用场景","p":438},{"i":466,"t":"7. 小结对比","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#7-小结对比","p":438},{"i":469,"t":"1. 概述","u":"/docs/note/golang/concurrency/cond","h":"#1-概述","p":468},{"i":471,"t":"2. 基本概念","u":"/docs/note/golang/concurrency/cond","h":"#2-基本概念","p":468},{"i":472,"t":"2.1 条件变量","u":"/docs/note/golang/concurrency/cond","h":"#21-条件变量","p":468},{"i":474,"t":"2.2 Cond 结构","u":"/docs/note/golang/concurrency/cond","h":"#22-cond-结构","p":468},{"i":476,"t":"3. 核心方法","u":"/docs/note/golang/concurrency/cond","h":"#3-核心方法","p":468},{"i":477,"t":"3.1 创建 Cond","u":"/docs/note/golang/concurrency/cond","h":"#31-创建-cond","p":468},{"i":479,"t":"3.2 Wait 方法","u":"/docs/note/golang/concurrency/cond","h":"#32-wait-方法","p":468},{"i":481,"t":"3.3 Signal 方法","u":"/docs/note/golang/concurrency/cond","h":"#33-signal-方法","p":468},{"i":483,"t":"3.4 Broadcast 方法","u":"/docs/note/golang/concurrency/cond","h":"#34-broadcast-方法","p":468},{"i":485,"t":"4. 使用模式","u":"/docs/note/golang/concurrency/cond","h":"#4-使用模式","p":468},{"i":486,"t":"4.1 基本使用模式","u":"/docs/note/golang/concurrency/cond","h":"#41-基本使用模式","p":468},{"i":488,"t":"4.2 生产者-消费者示例","u":"/docs/note/golang/concurrency/cond","h":"#42-生产者-消费者示例","p":468},{"i":490,"t":"5. 注意事项","u":"/docs/note/golang/concurrency/cond","h":"#5-注意事项","p":468},{"i":492,"t":"6. 最佳实践","u":"/docs/note/golang/concurrency/cond","h":"#6-最佳实践","p":468},{"i":494,"t":"7. 与 channel 的对比","u":"/docs/note/golang/concurrency/cond","h":"#7-与-channel-的对比","p":468},{"i":496,"t":"8. 总结","u":"/docs/note/golang/concurrency/cond","h":"#8-总结","p":468},{"i":499,"t":"1. os/exec 包简介","u":"/docs/note/golang/cmd","h":"#1-osexec-包简介","p":498},{"i":501,"t":"2. exec.Command 基本用法","u":"/docs/note/golang/cmd","h":"#2-execcommand-基本用法","p":498},{"i":503,"t":"2.1 获取stdout和stderr","u":"/docs/note/golang/cmd","h":"#21-获取stdout和stderr","p":498},{"i":505,"t":"2.2 只获取stdout","u":"/docs/note/golang/cmd","h":"#22-只获取stdout","p":498},{"i":507,"t":"3. 高级用法","u":"/docs/note/golang/cmd","h":"#3-高级用法","p":498},{"i":508,"t":"3.1 使用cmd.Stdout","u":"/docs/note/golang/cmd","h":"#31-使用cmdstdout","p":498},{"i":510,"t":"3.2 使用 StdoutPipe","u":"/docs/note/golang/cmd","h":"#32-使用-stdoutpipe","p":498},{"i":512,"t":"3.3 传递输入 (stdin)","u":"/docs/note/golang/cmd","h":"#33-传递输入-stdin","p":498},{"i":514,"t":"3.4 设置环境变量","u":"/docs/note/golang/cmd","h":"#34-设置环境变量","p":498},{"i":516,"t":"3.5 运行带超时的命令","u":"/docs/note/golang/cmd","h":"#35-运行带超时的命令","p":498},{"i":518,"t":"3.6 增加错误判断","u":"/docs/note/golang/cmd","h":"#36-增加错误判断","p":498},{"i":520,"t":"3.7 使用管道连接多个命令","u":"/docs/note/golang/cmd","h":"#37-使用管道连接多个命令","p":498},{"i":522,"t":"4. 结论","u":"/docs/note/golang/cmd","h":"#4-结论","p":498},{"i":526,"t":"1. Channel（推荐方式）","u":"/docs/note/golang/concurrency/","h":"#1-channel推荐方式","p":524},{"i":528,"t":"1.1 Channel 的特点","u":"/docs/note/golang/concurrency/","h":"#11-channel-的特点","p":524},{"i":530,"t":"1.2 基础示例：","u":"/docs/note/golang/concurrency/","h":"#12-基础示例","p":524},{"i":532,"t":"1.3 select 结合 channel 用法","u":"/docs/note/golang/concurrency/","h":"#13-select-结合-channel-用法","p":524},{"i":534,"t":"1.4 Channel 的适用场景","u":"/docs/note/golang/concurrency/","h":"#14-channel-的适用场景","p":524},{"i":536,"t":"2. sync.WaitGroup`","u":"/docs/note/golang/concurrency/","h":"#2-syncwaitgroup","p":524},{"i":538,"t":"3.  sync.Mutex","u":"/docs/note/golang/concurrency/","h":"#3--syncmutex","p":524},{"i":540,"t":"4.  sync.Cond 进行事件通知","u":"/docs/note/golang/concurrency/","h":"#4--synccond-进行事件通知","p":524},{"i":542,"t":"5.  sync.Once","u":"/docs/note/golang/concurrency/","h":"#5--synconce","p":524},{"i":544,"t":"6.  atomic","u":"/docs/note/golang/concurrency/","h":"#6--atomic","p":524},{"i":546,"t":"示例：","u":"/docs/note/golang/concurrency/","h":"#示例","p":524},{"i":548,"t":"7.  context","u":"/docs/note/golang/concurrency/","h":"#7--context","p":524},{"i":550,"t":"示例：","u":"/docs/note/golang/concurrency/","h":"#示例-1","p":524},{"i":552,"t":"总结","u":"/docs/note/golang/concurrency/","h":"#总结","p":524},{"i":556,"t":"1. 内存和垃圾回收相关操作","u":"/docs/note/golang/debug","h":"#1-内存和垃圾回收相关操作","p":554},{"i":558,"t":"2. 堆栈信息操作","u":"/docs/note/golang/debug","h":"#2-堆栈信息操作","p":554},{"i":560,"t":"3. 构建信息读取","u":"/docs/note/golang/debug","h":"#3-构建信息读取","p":554},{"i":562,"t":"4. 实际应用示例","u":"/docs/note/golang/debug","h":"#4-实际应用示例","p":554},{"i":563,"t":"4.1. 内存监控工具","u":"/docs/note/golang/debug","h":"#41-内存监控工具","p":554},{"i":565,"t":"4.2. 增强的panic处理","u":"/docs/note/golang/debug","h":"#42-增强的panic处理","p":554},{"i":567,"t":"4.3. 构建信息展示","u":"/docs/note/golang/debug","h":"#43-构建信息展示","p":554},{"i":569,"t":"5. 注意事项","u":"/docs/note/golang/debug","h":"#5-注意事项","p":554},{"i":573,"t":"1. 微内核核心设计","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#1-微内核核心设计","p":571},{"i":574,"t":"1.1 特点","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#11-特点","p":571},{"i":576,"t":"1.2 核心组件","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#12-核心组件","p":571},{"i":578,"t":"2. Go 实现 microkernel","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#2-go-实现-microkernel","p":571},{"i":579,"t":"2.1 定义 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#21-定义-kernel核心","p":571},{"i":581,"t":"2.2 实现示例服务（LogService）","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#22-实现示例服务logservice","p":571},{"i":583,"t":"2.3 主程序（运行微内核 + 服务）","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#23-主程序运行微内核--服务","p":571},{"i":585,"t":"2.4 运行结果","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#24-运行结果","p":571},{"i":587,"t":"3. 扩展方向","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#3-扩展方向","p":571},{"i":589,"t":"4. 总结","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#4-总结","p":571},{"i":593,"t":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#1-目标","p":591},{"i":595,"t":"2. 代码改动","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#2-代码改动","p":591},{"i":596,"t":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#21-kernel核心","p":591},{"i":598,"t":"2.2 LogService","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#22-logservice","p":591},{"i":600,"t":"2.3 主程序（运行微内核 + 服务）","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#23-主程序运行微内核--服务","p":591},{"i":602,"t":"2.4 运行结果","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#24-运行结果","p":591},{"i":604,"t":"2.5 优化函数和变量命名","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#25-优化函数和变量命名","p":591},{"i":606,"t":"","u":"/docs/note/golang/design/microkernel/microkernel2","h":"","p":591},{"i":608,"t":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel3","h":"#1-目标","p":607},{"i":610,"t":"2. 代码改动","u":"/docs/note/golang/design/microkernel/microkernel3","h":"#2-代码改动","p":607},{"i":612,"t":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel3","h":"#21-kernel核心","p":607},{"i":614,"t":"2.2 LogService","u":"/docs/note/golang/design/microkernel/microkernel3","h":"#22-logservice","p":607},{"i":616,"t":"2.3 运行结果","u":"/docs/note/golang/design/microkernel/microkernel3","h":"#23-运行结果","p":607},{"i":620,"t":"1. Future-Proof 机制的关键原则","u":"/docs/note/golang/design/future_proof","h":"","p":618},{"i":622,"t":"1.1.  松耦合（Loose Coupling）","u":"/docs/note/golang/design/future_proof","h":"#11--松耦合loose-coupling","p":618},{"i":624,"t":"1.2. 可扩展性（Extensibility）","u":"/docs/note/golang/design/future_proof","h":"#12-可扩展性extensibility","p":618},{"i":626,"t":"1.3. 配置化而非硬编码","u":"/docs/note/golang/design/future_proof","h":"#13-配置化而非硬编码","p":618},{"i":628,"t":"1.4. 协议与数据格式的兼容性","u":"/docs/note/golang/design/future_proof","h":"#14-协议与数据格式的兼容性","p":618},{"i":630,"t":"1.5. 并发模型的可适应性","u":"/docs/note/golang/design/future_proof","h":"#15-并发模型的可适应性","p":618},{"i":632,"t":"1.6. 可观测性（Observability）","u":"/docs/note/golang/design/future_proof","h":"#16-可观测性observability","p":618},{"i":634,"t":"1.7. 防御性编程","u":"/docs/note/golang/design/future_proof","h":"#17-防御性编程","p":618},{"i":636,"t":"2. 聚合器示例","u":"/docs/note/golang/design/future_proof","h":"#2-聚合器示例","p":618},{"i":638,"t":"3. 反模式：非 Future-Proof 的设计","u":"/docs/note/golang/design/future_proof","h":"#3-反模式非-future-proof-的设计","p":618},{"i":640,"t":"4. 总结","u":"/docs/note/golang/design/future_proof","h":"#4-总结","p":618},{"i":643,"t":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel4","h":"#1-目标","p":642},{"i":645,"t":"2. 代码改动","u":"/docs/note/golang/design/microkernel/microkernel4","h":"#2-代码改动","p":642},{"i":646,"t":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel4","h":"#21-kernel核心","p":642},{"i":648,"t":"2.2 LogService","u":"/docs/note/golang/design/microkernel/microkernel4","h":"#22-logservice","p":642},{"i":650,"t":"2.3 增加另一个类似的EchoService","u":"/docs/note/golang/design/microkernel/microkernel4","h":"#23-增加另一个类似的echoservice","p":642},{"i":652,"t":"2.4 运行结果","u":"/docs/note/golang/design/microkernel/microkernel4","h":"#24-运行结果","p":642},{"i":655,"t":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel5","h":"#1-目标","p":654},{"i":657,"t":"2. 代码改动","u":"/docs/note/golang/design/microkernel/microkernel5","h":"#2-代码改动","p":654},{"i":658,"t":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel5","h":"#21-kernel核心","p":654},{"i":660,"t":"2.2 运行结果","u":"/docs/note/golang/design/microkernel/microkernel5","h":"#22-运行结果","p":654},{"i":663,"t":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel6","h":"#1-目标","p":662},{"i":665,"t":"2. 代码改动","u":"/docs/note/golang/design/microkernel/microkernel6","h":"#2-代码改动","p":662},{"i":666,"t":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel6","h":"#21-kernel核心","p":662},{"i":668,"t":"2.2 服务","u":"/docs/note/golang/design/microkernel/microkernel6","h":"#22-服务","p":662},{"i":670,"t":"2.3 运行结果","u":"/docs/note/golang/design/microkernel/microkernel6","h":"#23-运行结果","p":662},{"i":673,"t":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel8","h":"#1-目标","p":672},{"i":675,"t":"2. 代码改动","u":"/docs/note/golang/design/microkernel/microkernel8","h":"#2-代码改动","p":672},{"i":676,"t":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel8","h":"#21-kernel核心","p":672},{"i":678,"t":"2.2 echo服务","u":"/docs/note/golang/design/microkernel/microkernel8","h":"#22-echo服务","p":672},{"i":680,"t":"2.3 main","u":"/docs/note/golang/design/microkernel/microkernel8","h":"#23-main","p":672},{"i":682,"t":"2.4 运行结果","u":"/docs/note/golang/design/microkernel/microkernel8","h":"#24-运行结果","p":672},{"i":685,"t":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel7","h":"#1-目标","p":684},{"i":687,"t":"2. 代码改动","u":"/docs/note/golang/design/microkernel/microkernel7","h":"#2-代码改动","p":684},{"i":688,"t":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel7","h":"#21-kernel核心","p":684},{"i":690,"t":"2.2 日志服务","u":"/docs/note/golang/design/microkernel/microkernel7","h":"#22-日志服务","p":684},{"i":692,"t":"2.3 main","u":"/docs/note/golang/design/microkernel/microkernel7","h":"#23-main","p":684},{"i":694,"t":"2.4 运行结果","u":"/docs/note/golang/design/microkernel/microkernel7","h":"#24-运行结果","p":684},{"i":698,"t":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#1-目标","p":696},{"i":700,"t":"2. 状态存储设计","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#2-状态存储设计","p":696},{"i":701,"t":"2.1 存储文件设计","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#21-存储文件设计","p":696},{"i":703,"t":"2.2 状态管理模块：StateStore","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#22-状态管理模块statestore","p":696},{"i":705,"t":"3. 内核集成","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#3-内核集成","p":696},{"i":706,"t":"3.1 kernel 初始化集成StateStore","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#31-kernel-初始化集成statestore","p":696},{"i":708,"t":"3.2 注册服务时尝试自动加载状态","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#32-注册服务时尝试自动加载状态","p":696},{"i":710,"t":"3.3 停止服务时，保存状态","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#33-停止服务时保存状态","p":696},{"i":712,"t":"3.4 定时持久化状态","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#34-定时持久化状态","p":696},{"i":714,"t":"4. main","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#4-main","p":696},{"i":716,"t":"4.1 运行结果","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#41-运行结果","p":696},{"i":719,"t":"1. 概述","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#1-概述","p":718},{"i":721,"t":"2. 核心概念","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#2-核心概念","p":718},{"i":723,"t":"3. Go语言中的DIP实现方式","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#3-go语言中的dip实现方式","p":718},{"i":724,"t":"3.1 违反DIP的例子","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#31-违反dip的例子","p":718},{"i":726,"t":"3.2 遵循DIP的改进方案","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#32-遵循dip的改进方案","p":718},{"i":728,"t":"4. Go语言中实践DIP的技巧","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#4-go语言中实践dip的技巧","p":718},{"i":729,"t":"4.1 构造函数注入","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#41-构造函数注入","p":718},{"i":731,"t":"4.2 方法注入","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#42-方法注入","p":718},{"i":733,"t":"4.3 接口定义在调用方","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#43-接口定义在调用方","p":718},{"i":735,"t":"5. 实际应用案例","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#5-实际应用案例","p":718},{"i":736,"t":"5.1 数据库访问","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#51-数据库访问","p":718},{"i":738,"t":"5.2 HTTP服务","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#52-http服务","p":718},{"i":740,"t":"6. 依赖注入框架(可选)","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#6-依赖注入框架可选","p":718},{"i":742,"t":"7. 违反DIP的后果","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#7-违反dip的后果","p":718},{"i":744,"t":"8. 总结","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#8-总结","p":718},{"i":747,"t":"1. channel 交互","u":"/docs/note/golang/design/multi_goroutine","h":"#1-channel-交互","p":746},{"i":749,"t":"2.  增加 channel 状态判断","u":"/docs/note/golang/design/multi_goroutine","h":"#2--增加-channel-状态判断","p":746},{"i":750,"t":"2.1. 理解 channel 行为","u":"/docs/note/golang/design/multi_goroutine","h":"#21-理解-channel-行为","p":746},{"i":752,"t":"2.2. 使用判断channel 优化示例","u":"/docs/note/golang/design/multi_goroutine","h":"#22-使用判断channel-优化示例","p":746},{"i":754,"t":"3. 支持 context.Context","u":"/docs/note/golang/design/multi_goroutine","h":"#3-支持-contextcontext","p":746},{"i":756,"t":"4. CommandHandler 模式","u":"/docs/note/golang/design/multi_goroutine","h":"#4-commandhandler-模式","p":746},{"i":759,"t":"1. 概述","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#1-概述","p":758},{"i":761,"t":"2. 核心概念","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#2-核心概念","p":758},{"i":763,"t":"3. Go语言中的LSP实现方式","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#3-go语言中的lsp实现方式","p":758},{"i":764,"t":"3.1 通过接口实现LSP","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#31-通过接口实现lsp","p":758},{"i":766,"t":"3.2 符合LSP的改进方案","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#32-符合lsp的改进方案","p":758},{"i":768,"t":"4. 违反LSP的常见情况与重构","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#4-违反lsp的常见情况与重构","p":758},{"i":769,"t":"4.1 违反情况1：子类削弱前置条件","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#41-违反情况1子类削弱前置条件","p":758},{"i":771,"t":"4.2 违反情况2：子类强化后置条件","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#42-违反情况2子类强化后置条件","p":758},{"i":773,"t":"5. Go语言中实践LSP的技巧","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#5-go语言中实践lsp的技巧","p":758},{"i":774,"t":"5.1 使用组合代替继承","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#51-使用组合代替继承","p":758},{"i":776,"t":"5.2 接口隔离加强","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#52-接口隔离加强","p":758},{"i":778,"t":"6. LSP的实际应用场景","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#6-lsp的实际应用场景","p":758},{"i":780,"t":"7. 总结","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#7-总结","p":758},{"i":783,"t":"1. 概述","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#1-概述","p":782},{"i":785,"t":"2. 核心概念","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#2-核心概念","p":782},{"i":787,"t":"3. Go语言中的ISP实现方式","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#3-go语言中的isp实现方式","p":782},{"i":788,"t":"3.1 违反ISP的例子","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#31-违反isp的例子","p":782},{"i":790,"t":"3.2 遵循ISP的改进方案","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#32-遵循isp的改进方案","p":782},{"i":792,"t":"4. Go语言中实践ISP的技巧","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#4-go语言中实践isp的技巧","p":782},{"i":793,"t":"4.1 使用接口组合","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#41-使用接口组合","p":782},{"i":795,"t":"4.2 客户端特定接口","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#42-客户端特定接口","p":782},{"i":797,"t":"4.3 避免接口污染","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#43-避免接口污染","p":782},{"i":799,"t":"5. 实际应用案例","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#5-实际应用案例","p":782},{"i":800,"t":"5.1 数据库访问层","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#51-数据库访问层","p":782},{"i":802,"t":"5.2 HTTP中间件","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#52-http中间件","p":782},{"i":804,"t":"6. 违反ISP的后果","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#6-违反isp的后果","p":782},{"i":806,"t":"7. 总结","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#7-总结","p":782},{"i":809,"t":"1. 概述","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#1-概述","p":808},{"i":811,"t":"2. 核心概念","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#2-核心概念","p":808},{"i":813,"t":"3. Go语言中的OCP实现方式","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#3-go语言中的ocp实现方式","p":808},{"i":814,"t":"3.1 使用接口实现OCP","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#31-使用接口实现ocp","p":808},{"i":816,"t":"3.2 添加新支付方式（扩展）","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#32-添加新支付方式扩展","p":808},{"i":818,"t":"4. 违反OCP的示例与重构","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#4-违反ocp的示例与重构","p":808},{"i":819,"t":"4.1 违反OCP的代码","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#41-违反ocp的代码","p":808},{"i":821,"t":"4.2 重构为符合OCP的代码","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#42-重构为符合ocp的代码","p":808},{"i":823,"t":"5. Go语言中实践OCP的高级技巧","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#5-go语言中实践ocp的高级技巧","p":808},{"i":824,"t":"5.1 函数选项模式(Functional Options)","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#51-函数选项模式functional-options","p":808},{"i":826,"t":"5.2 中间件模式","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#52-中间件模式","p":808},{"i":828,"t":"6. OCP的实际应用场景","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#6-ocp的实际应用场景","p":808},{"i":830,"t":"7. OCP的日志系统","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#7-ocp的日志系统","p":808},{"i":832,"t":"7.1 基础设计","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#71-基础设计","p":808},{"i":834,"t":"7.2 组合日志器（支持多种输出）","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#72-组合日志器支持多种输出","p":808},{"i":836,"t":"7.3 使用工厂方法创建日志器","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#73-使用工厂方法创建日志器","p":808},{"i":838,"t":"7.4 添加网络日志输出（扩展示例）","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#74-添加网络日志输出扩展示例","p":808},{"i":840,"t":"7.5 完整使用示例","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#75-完整使用示例","p":808},{"i":842,"t":"8. 总结","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#8-总结","p":808},{"i":846,"t":"SOLID原则","u":"/docs/note/golang/design/oop_pinciple/principle","h":"#solid原则","p":844},{"i":848,"t":"其他重要原则","u":"/docs/note/golang/design/oop_pinciple/principle","h":"#其他重要原则","p":844},{"i":850,"t":"个人总结","u":"/docs/note/golang/design/oop_pinciple/principle","h":"#个人总结","p":844},{"i":853,"t":"1. ide 警告找不到方法","u":"/docs/note/golang/goland","h":"#1-ide-警告找不到方法","p":852},{"i":856,"t":"1. 概述","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#1-概述","p":855},{"i":858,"t":"2. 为什么需要SRP？","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#2-为什么需要srp","p":855},{"i":859,"t":"优点：","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#优点","p":855},{"i":861,"t":"违反SRP的后果：","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#违反srp的后果","p":855},{"i":863,"t":"3. Go语言中的SRP示例","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#3-go语言中的srp示例","p":855},{"i":864,"t":"3.1 违反SRP的例子","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#31-违反srp的例子","p":855},{"i":866,"t":"3.2 遵循SRP的改进版本","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#32-遵循srp的改进版本","p":855},{"i":868,"t":"4. Go语言中实践SRP的技巧","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#4-go语言中实践srp的技巧","p":855},{"i":869,"t":"4.1 接口设计","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#41-接口设计","p":855},{"i":871,"t":"4.2 组合代替继承","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#42-组合代替继承","p":855},{"i":873,"t":"4.3 函数职责单一","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#43-函数职责单一","p":855},{"i":875,"t":"5. 何时应用SRP？","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#5-何时应用srp","p":855},{"i":876,"t":"应该应用SRP的情况：","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#应该应用srp的情况","p":855},{"i":878,"t":"不必过度应用：","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#不必过度应用","p":855},{"i":880,"t":"6. 总结","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#6-总结","p":855},{"i":883,"t":"1. 概述","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#1-概述","p":882},{"i":885,"t":"2. 简单工厂（Simple Factory）","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#2-简单工厂simple-factory","p":882},{"i":886,"t":"2.1 示例：图形创建器","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#21-示例图形创建器","p":882},{"i":888,"t":"2.2 示例：网络连接","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#22-示例网络连接","p":882},{"i":890,"t":"2.3 优缺点","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#23-优缺点","p":882},{"i":892,"t":"3. 工厂方法（Factory Method）","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#3-工厂方法factory-method","p":882},{"i":893,"t":"3.1 示例：数据库连接器","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#31-示例数据库连接器","p":882},{"i":895,"t":"3.2 示例：日志系统","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#32-示例日志系统","p":882},{"i":897,"t":"3.3 优缺点","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#33-优缺点","p":882},{"i":899,"t":"4. 抽象工厂（Abstract Factory）","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#4-抽象工厂abstract-factory","p":882},{"i":900,"t":"4.1 示例：UI 工厂（按钮 + 文本框）","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#41-示例ui-工厂按钮--文本框","p":882},{"i":902,"t":"4.2 优缺点","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#42-优缺点","p":882},{"i":904,"t":"5. 函数式工厂（Functional Factory）","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#5-函数式工厂functional-factory","p":882},{"i":906,"t":"5.1 优点","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#51-优点","p":882},{"i":908,"t":"6.  工厂模式应用场景","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#6--工厂模式应用场景","p":882},{"i":910,"t":"7. 小结对比","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#7-小结对比","p":882},{"i":913,"t":"错误处理","u":"/docs/note/golang/jotting","h":"#错误处理","p":912},{"i":915,"t":"普通函数","u":"/docs/note/golang/jotting","h":"#普通函数","p":912},{"i":917,"t":"结构体方法","u":"/docs/note/golang/jotting","h":"#结构体方法","p":912},{"i":919,"t":"Go 中何时使用 chan","u":"/docs/note/golang/jotting","h":"#go-中何时使用-chan","p":912},{"i":921,"t":"✅ 推荐使用的场景","u":"/docs/note/golang/jotting","h":"#-推荐使用的场景","p":912},{"i":923,"t":"❌ 不推荐的场景","u":"/docs/note/golang/jotting","h":"#-不推荐的场景","p":912},{"i":925,"t":"go mod tidy 报错 GOSUMDB","u":"/docs/note/golang/jotting","h":"#go-mod-tidy-报错-gosumdb","p":912},{"i":927,"t":"空接口 interface{} 与任意类型","u":"/docs/note/golang/jotting","h":"#空接口-interface-与任意类型","p":912},{"i":929,"t":"类型断言与转换","u":"/docs/note/golang/jotting","h":"#类型断言与转换","p":912},{"i":931,"t":"空结构体 struct{}","u":"/docs/note/golang/jotting","h":"#空结构体-struct","p":912},{"i":933,"t":"if 判断语法简化","u":"/docs/note/golang/jotting","h":"#if-判断语法简化","p":912},{"i":936,"t":"1. Golang 默认 JSON 解析 (encoding/json)","u":"/docs/note/golang/json","h":"#1-golang-默认-json-解析-encodingjson","p":935},{"i":938,"t":"2. 第三方 JSON 解析库","u":"/docs/note/golang/json","h":"#2-第三方-json-解析库","p":935},{"i":939,"t":"2.1 github.com/tidwall/gjson（高效 JSON 读取）","u":"/docs/note/golang/json","h":"#21-githubcomtidwallgjson高效-json-读取","p":935},{"i":941,"t":"优缺点对比","u":"/docs/note/golang/json","h":"#优缺点对比","p":935},{"i":943,"t":"2.2 github.com/json-iterator/go（高性能 JSON 解析）","u":"/docs/note/golang/json","h":"#22-githubcomjson-iteratorgo高性能-json-解析","p":935},{"i":945,"t":"优缺点对比","u":"/docs/note/golang/json","h":"#优缺点对比-1","p":935},{"i":947,"t":"2.3 github.com/buger/jsonparser（流式 JSON 解析）","u":"/docs/note/golang/json","h":"#23-githubcombugerjsonparser流式-json-解析","p":935},{"i":949,"t":"优缺点对比","u":"/docs/note/golang/json","h":"#优缺点对比-2","p":935},{"i":951,"t":"3. JSON 解析库对比","u":"/docs/note/golang/json","h":"#3-json-解析库对比","p":935},{"i":953,"t":"总结与推荐","u":"/docs/note/golang/json","h":"#总结与推荐","p":935},{"i":956,"t":"1. 反射（Reflect）概述","u":"/docs/note/golang/reflect","h":"#1-反射reflect概述","p":955},{"i":958,"t":"2. 反射的基本类型","u":"/docs/note/golang/reflect","h":"#2-反射的基本类型","p":955},{"i":960,"t":"2.1 获取变量的类型和值","u":"/docs/note/golang/reflect","h":"#21-获取变量的类型和值","p":955},{"i":962,"t":"3. 反射修改变量值","u":"/docs/note/golang/reflect","h":"#3-反射修改变量值","p":955},{"i":964,"t":"4. 反射处理结构体","u":"/docs/note/golang/reflect","h":"#4-反射处理结构体","p":955},{"i":965,"t":"4.1 获取结构体字段信息","u":"/docs/note/golang/reflect","h":"#41-获取结构体字段信息","p":955},{"i":967,"t":"4.2 解析结构体标签（Tag）","u":"/docs/note/golang/reflect","h":"#42-解析结构体标签tag","p":955},{"i":969,"t":"5. 反射调用方法","u":"/docs/note/golang/reflect","h":"#5-反射调用方法","p":955},{"i":971,"t":"6. 反射的局限性","u":"/docs/note/golang/reflect","h":"#6-反射的局限性","p":955},{"i":973,"t":"7. 反射最佳实践","u":"/docs/note/golang/reflect","h":"#7-反射最佳实践","p":955},{"i":976,"t":"1. 引言","u":"/docs/note/golang/serialization","h":"#1-引言","p":975},{"i":978,"t":"2. 标准库的序列化支持","u":"/docs/note/golang/serialization","h":"#2-标准库的序列化支持","p":975},{"i":979,"t":"2.1 JSON序列化","u":"/docs/note/golang/serialization","h":"#21-json序列化","p":975},{"i":981,"t":"2.2 结构体标签","u":"/docs/note/golang/serialization","h":"#22-结构体标签","p":975},{"i":983,"t":"3. 自定义类型序列化","u":"/docs/note/golang/serialization","h":"#3-自定义类型序列化","p":975},{"i":985,"t":"3.1 实现Marshaler接口","u":"/docs/note/golang/serialization","h":"#31-实现marshaler接口","p":975},{"i":987,"t":"3.2 实现Unmarshaler接口","u":"/docs/note/golang/serialization","h":"#32-实现unmarshaler接口","p":975},{"i":989,"t":"4. 复合类型处理","u":"/docs/note/golang/serialization","h":"#4-复合类型处理","p":975},{"i":990,"t":"4.1 嵌套结构体","u":"/docs/note/golang/serialization","h":"#41-嵌套结构体","p":975},{"i":992,"t":"4.2 接口类型处理","u":"/docs/note/golang/serialization","h":"#42-接口类型处理","p":975},{"i":994,"t":"5. 性能优化","u":"/docs/note/golang/serialization","h":"#5-性能优化","p":975},{"i":995,"t":"5.1 使用缓冲池","u":"/docs/note/golang/serialization","h":"#51-使用缓冲池","p":975},{"i":997,"t":"5.2 使用第三方库","u":"/docs/note/golang/serialization","h":"#52-使用第三方库","p":975},{"i":999,"t":"6. 常见问题解决","u":"/docs/note/golang/serialization","h":"#6-常见问题解决","p":975},{"i":1000,"t":"6.1 循环引用问题","u":"/docs/note/golang/serialization","h":"#61-循环引用问题","p":975},{"i":1002,"t":"6.2 时间格式处理","u":"/docs/note/golang/serialization","h":"#62-时间格式处理","p":975},{"i":1004,"t":"7. 测试验证","u":"/docs/note/golang/serialization","h":"#7-测试验证","p":975},{"i":1005,"t":"7.1 单元测试示例","u":"/docs/note/golang/serialization","h":"#71-单元测试示例","p":975},{"i":1007,"t":"8. 最佳实践","u":"/docs/note/golang/serialization","h":"#8-最佳实践","p":975},{"i":1009,"t":"附录：完整示例","u":"/docs/note/golang/serialization","h":"#附录完整示例","p":975},{"i":1012,"t":"1. 简介","u":"/docs/note/golang/kingpin","h":"#1-简介","p":1011},{"i":1014,"t":"2. 安装","u":"/docs/note/golang/kingpin","h":"#2-安装","p":1011},{"i":1016,"t":"3. 基本用法","u":"/docs/note/golang/kingpin","h":"#3-基本用法","p":1011},{"i":1017,"t":"3.1 使用默认 App","u":"/docs/note/golang/kingpin","h":"#31-使用默认-app","p":1011},{"i":1019,"t":"3.2 定义命令行参数（使用 New 方法）","u":"/docs/note/golang/kingpin","h":"#32-定义命令行参数使用-new-方法","p":1011},{"i":1021,"t":"3.3 使用子命令","u":"/docs/note/golang/kingpin","h":"#33-使用子命令","p":1011},{"i":1023,"t":"3.4 绑定环境变量","u":"/docs/note/golang/kingpin","h":"#34-绑定环境变量","p":1011},{"i":1025,"t":"3.5 处理布尔标志","u":"/docs/note/golang/kingpin","h":"#35-处理布尔标志","p":1011},{"i":1027,"t":"3.6 解析列表参数","u":"/docs/note/golang/kingpin","h":"#36-解析列表参数","p":1011},{"i":1029,"t":"4. 其他高级用法","u":"/docs/note/golang/kingpin","h":"#4-其他高级用法","p":1011},{"i":1030,"t":"4.1 自定义解析器","u":"/docs/note/golang/kingpin","h":"#41-自定义解析器","p":1011},{"i":1032,"t":"5. 总结","u":"/docs/note/golang/kingpin","h":"#5-总结","p":1011},{"i":1034,"t":"特点总结","u":"/docs/note/golang/kingpin","h":"#特点总结","p":1011},{"i":1037,"t":"1. 简介","u":"/docs/note/golang/validator","h":"#1-简介","p":1036},{"i":1039,"t":"2. 安装","u":"/docs/note/golang/validator","h":"#2-安装","p":1036},{"i":1041,"t":"3. 基本使用","u":"/docs/note/golang/validator","h":"#3-基本使用","p":1036},{"i":1043,"t":"4. 常见的内置验证标签","u":"/docs/note/golang/validator","h":"#4-常见的内置验证标签","p":1036},{"i":1045,"t":"5. 自定义验证","u":"/docs/note/golang/validator","h":"#5-自定义验证","p":1036},{"i":1047,"t":"6. 结构体嵌套验证","u":"/docs/note/golang/validator","h":"#6-结构体嵌套验证","p":1036},{"i":1049,"t":"7. 处理错误信息","u":"/docs/note/golang/validator","h":"#7-处理错误信息","p":1036},{"i":1051,"t":"8. 结论","u":"/docs/note/golang/validator","h":"#8-结论","p":1036},{"i":1054,"t":"1. 概述","u":"/docs/note/os/chroot","h":"#1-概述","p":1053},{"i":1056,"t":"2. 工作原理","u":"/docs/note/os/chroot","h":"#2-工作原理","p":1053},{"i":1058,"t":"3. 基本用法","u":"/docs/note/os/chroot","h":"#3-基本用法","p":1053},{"i":1059,"t":"3.1. 进入 chroot 环境","u":"/docs/note/os/chroot","h":"#31-进入-chroot-环境","p":1053},{"i":1061,"t":"3.2. 在 chroot 环境中执行命令","u":"/docs/note/os/chroot","h":"#32-在-chroot-环境中执行命令","p":1053},{"i":1063,"t":"4. 创建一个基本的 chroot 环境","u":"/docs/note/os/chroot","h":"#4-创建一个基本的-chroot-环境","p":1053},{"i":1065,"t":"5. 使用场景","u":"/docs/note/os/chroot","h":"#5-使用场景","p":1053},{"i":1066,"t":"5.1. 系统恢复","u":"/docs/note/os/chroot","h":"#51-系统恢复","p":1053},{"i":1068,"t":"5.2. 隔离环境（Sandbox）","u":"/docs/note/os/chroot","h":"#52-隔离环境sandbox","p":1053},{"i":1070,"t":"5.3. 软件包编译","u":"/docs/note/os/chroot","h":"#53-软件包编译","p":1053},{"i":1072,"t":"5.4. 运行特定版本的应用程序","u":"/docs/note/os/chroot","h":"#54-运行特定版本的应用程序","p":1053},{"i":1074,"t":"6. 注意事项","u":"/docs/note/os/chroot","h":"#6-注意事项","p":1053},{"i":1076,"t":"7. 总结","u":"/docs/note/os/chroot","h":"#7-总结","p":1053},{"i":1079,"t":"1. 简介","u":"/docs/note/golang/syscall","h":"#1-简介","p":1078},{"i":1081,"t":"2. 安装","u":"/docs/note/golang/syscall","h":"#2-安装","p":1078},{"i":1083,"t":"3. 常见 Golang golang.org/x/sys/unix","u":"/docs/note/golang/syscall","h":"#3-常见-golang-golangorgxsysunix","p":1078},{"i":1084,"t":"1. 简介","u":"/docs/note/golang/syscall","h":"#1-简介-1","p":1078},{"i":1086,"t":"2. 安装","u":"/docs/note/golang/syscall","h":"#2-安装-1","p":1078},{"i":1088,"t":"3. 常见 unix 用法","u":"/docs/note/golang/syscall","h":"#3-常见-unix-用法","p":1078},{"i":1089,"t":"3.1 获取进程 ID","u":"/docs/note/golang/syscall","h":"#31-获取进程-id","p":1078},{"i":1091,"t":"3.2 文件操作","u":"/docs/note/golang/syscall","h":"#32-文件操作","p":1078},{"i":1093,"t":"3.3 进程控制","u":"/docs/note/golang/syscall","h":"#33-进程控制","p":1078},{"i":1095,"t":"3.4 信号处理","u":"/docs/note/golang/syscall","h":"#34-信号处理","p":1078},{"i":1097,"t":"3.5 内存管理","u":"/docs/note/golang/syscall","h":"#35-内存管理","p":1078},{"i":1099,"t":"4. unix 作为 syscall 的替代方案","u":"/docs/note/golang/syscall","h":"#4-unix-作为-syscall-的替代方案","p":1078},{"i":1101,"t":"5. 结论","u":"/docs/note/golang/syscall","h":"#5-结论","p":1078},{"i":1103,"t":"6. 参考","u":"/docs/note/golang/syscall","h":"#6-参考","p":1078},{"i":1105,"t":"** unix 用法**","u":"/docs/note/golang/syscall","h":"#-unix-用法","p":1078},{"i":1106,"t":"3.1 获取进程 ID","u":"/docs/note/golang/syscall","h":"#31-获取进程-id-1","p":1078},{"i":1108,"t":"3.2 文件操作","u":"/docs/note/golang/syscall","h":"#32-文件操作-1","p":1078},{"i":1110,"t":"3.3 进程控制","u":"/docs/note/golang/syscall","h":"#33-进程控制-1","p":1078},{"i":1112,"t":"3.4 信号处理","u":"/docs/note/golang/syscall","h":"#34-信号处理-1","p":1078},{"i":1114,"t":"3.5 内存管理","u":"/docs/note/golang/syscall","h":"#35-内存管理-1","p":1078},{"i":1116,"t":"4. unix 作为 syscall 的替代方案","u":"/docs/note/golang/syscall","h":"#4-unix-作为-syscall-的替代方案-1","p":1078},{"i":1118,"t":"5. 结论","u":"/docs/note/golang/syscall","h":"#5-结论-1","p":1078},{"i":1120,"t":"6. 参考","u":"/docs/note/golang/syscall","h":"#6-参考-1","p":1078},{"i":1123,"t":"1. GDB 概述","u":"/docs/note/os/debug/gdb","h":"#1-gdb-概述","p":1122},{"i":1125,"t":"1.1 GDB的历史和发展","u":"/docs/note/os/debug/gdb","h":"#11-gdb的历史和发展","p":1122},{"i":1127,"t":"1.2 GDB应用场景","u":"/docs/note/os/debug/gdb","h":"#12-gdb应用场景","p":1122},{"i":1129,"t":"2. GDB安装","u":"/docs/note/os/debug/gdb","h":"#2-gdb安装","p":1122},{"i":1130,"t":"2.1 使用包管理器安装","u":"/docs/note/os/debug/gdb","h":"#21-使用包管理器安装","p":1122},{"i":1132,"t":"2.2 源码编译安装","u":"/docs/note/os/debug/gdb","h":"#22-源码编译安装","p":1122},{"i":1134,"t":"3. GDB 基本功能","u":"/docs/note/os/debug/gdb","h":"#3-gdb-基本功能","p":1122},{"i":1135,"t":"3.1 启动GDB","u":"/docs/note/os/debug/gdb","h":"#31-启动gdb","p":1122},{"i":1137,"t":"3.2 调试带参数的程序","u":"/docs/note/os/debug/gdb","h":"#32-调试带参数的程序","p":1122},{"i":1139,"t":"3.3 调试运行中的进程","u":"/docs/note/os/debug/gdb","h":"#33-调试运行中的进程","p":1122},{"i":1141,"t":"3.4 基本调试命令","u":"/docs/note/os/debug/gdb","h":"#34-基本调试命令","p":1122},{"i":1143,"t":"3.5 断点管理","u":"/docs/note/os/debug/gdb","h":"#35-断点管理","p":1122},{"i":1145,"t":"3.6 变量与内存操作","u":"/docs/note/os/debug/gdb","h":"#36-变量与内存操作","p":1122},{"i":1147,"t":"3.7 寄存器操作","u":"/docs/note/os/debug/gdb","h":"#37-寄存器操作","p":1122},{"i":1149,"t":"4. 高级调试技巧","u":"/docs/note/os/debug/gdb","h":"#4-高级调试技巧","p":1122},{"i":1150,"t":"4.1 多进程调试","u":"/docs/note/os/debug/gdb","h":"#41-多进程调试","p":1122},{"i":1152,"t":"4.2 多线程调试","u":"/docs/note/os/debug/gdb","h":"#42-多线程调试","p":1122},{"i":1154,"t":"4.3 观察点(Watchpoints)","u":"/docs/note/os/debug/gdb","h":"#43-观察点watchpoints","p":1122},{"i":1156,"t":"4.4 捕获点(Catchpoints)","u":"/docs/note/os/debug/gdb","h":"#44-捕获点catchpoints","p":1122},{"i":1158,"t":"4.5 自动化调试","u":"/docs/note/os/debug/gdb","h":"#45-自动化调试","p":1122},{"i":1160,"t":"4.6 远程调试","u":"/docs/note/os/debug/gdb","h":"#46-远程调试","p":1122},{"i":1162,"t":"4.7 切换栈帧","u":"/docs/note/os/debug/gdb","h":"#47-切换栈帧","p":1122},{"i":1164,"t":"5. 调试信息与符号","u":"/docs/note/os/debug/gdb","h":"#5-调试信息与符号","p":1122},{"i":1165,"t":"5.1 编译时添加调试信息","u":"/docs/note/os/debug/gdb","h":"#51-编译时添加调试信息","p":1122},{"i":1167,"t":"5.2 分离调试信息","u":"/docs/note/os/debug/gdb","h":"#52-分离调试信息","p":1122},{"i":1169,"t":"5.3 加载调试信息","u":"/docs/note/os/debug/gdb","h":"#53-加载调试信息","p":1122},{"i":1171,"t":"6. 调试案例","u":"/docs/note/os/debug/gdb","h":"#6-调试案例","p":1122},{"i":1172,"t":"6.1 段错误调试","u":"/docs/note/os/debug/gdb","h":"#61-段错误调试","p":1122},{"i":1174,"t":"6.2 内存泄漏检查","u":"/docs/note/os/debug/gdb","h":"#62-内存泄漏检查","p":1122},{"i":1176,"t":"6.3 死锁检测","u":"/docs/note/os/debug/gdb","h":"#63-死锁检测","p":1122},{"i":1178,"t":"7. GDB 实现原理","u":"/docs/note/os/debug/gdb","h":"#7-gdb-实现原理","p":1122},{"i":1179,"t":"7.1 ptrace系统调用","u":"/docs/note/os/debug/gdb","h":"#71-ptrace系统调用","p":1122},{"i":1181,"t":"7.2 断点实现原理","u":"/docs/note/os/debug/gdb","h":"#72-断点实现原理","p":1122},{"i":1183,"t":"8. 参考资源","u":"/docs/note/os/debug/gdb","h":"#8-参考资源","p":1122},{"i":1187,"t":"查杀僵尸进程","u":"/docs/note/os/zombie","h":"#查杀僵尸进程","p":1185},{"i":1189,"t":"举例","u":"/docs/note/os/zombie","h":"#举例","p":1185},{"i":1190,"t":"孤儿进程","u":"/docs/note/os/zombie","h":"#孤儿进程","p":1185},{"i":1193,"t":"回收儿子","u":"/docs/note/os/zombie","h":"#回收儿子","p":1185},{"i":1196,"t":"1. Unix Socket 简介","u":"/docs/note/golang/web_server_unix","h":"#1-unix-socket-简介","p":1195},{"i":1198,"t":"2. 使用标准库 net/http 实现","u":"/docs/note/golang/web_server_unix","h":"#2-使用标准库-nethttp-实现","p":1195},{"i":1199,"t":"2.1 基础实现","u":"/docs/note/golang/web_server_unix","h":"#21-基础实现","p":1195},{"i":1201,"t":"2.2 高级配置","u":"/docs/note/golang/web_server_unix","h":"#22-高级配置","p":1195},{"i":1203,"t":"3. 使用 Gin 框架实现","u":"/docs/note/golang/web_server_unix","h":"#3-使用-gin-框架实现","p":1195},{"i":1204,"t":"3.1 基础实现","u":"/docs/note/golang/web_server_unix","h":"#31-基础实现","p":1195},{"i":1206,"t":"3.2 生产环境建议","u":"/docs/note/golang/web_server_unix","h":"#32-生产环境建议","p":1195},{"i":1208,"t":"4. 客户端连接方式","u":"/docs/note/golang/web_server_unix","h":"#4-客户端连接方式","p":1195},{"i":1209,"t":"4.1 标准HTTP客户端","u":"/docs/note/golang/web_server_unix","h":"#41-标准http客户端","p":1195},{"i":1211,"t":"4.2 通用Socket客户端","u":"/docs/note/golang/web_server_unix","h":"#42-通用socket客户端","p":1195},{"i":1213,"t":"5. 性能优化建议","u":"/docs/note/golang/web_server_unix","h":"#5-性能优化建议","p":1195},{"i":1215,"t":"6. 常见问题解答","u":"/docs/note/golang/web_server_unix","h":"#6-常见问题解答","p":1195},{"i":1217,"t":"7. 实际应用场景","u":"/docs/note/golang/web_server_unix","h":"#7-实际应用场景","p":1195},{"i":1219,"t":"总结","u":"/docs/note/golang/web_server_unix","h":"#总结","p":1195}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/4",[0,7.572,1,7.572]],["t/6",[2,7.572,3,7.572]],["t/8",[4,6.707,5,6.707,6,6.707]],["t/16",[7,8.693]],["t/18",[8,8.693]],["t/20",[9,8.693]],["t/22",[10,8.693]],["t/25",[11,0.14,12,4.417]],["t/27",[11,0.092,13,4.572,14,6.237,15,4.572,16,4.572]],["t/29",[11,0.111,13,5.509,14,5.173,17,3.458]],["t/30",[11,0.153,18,3.986,19,2.681]],["t/32",[11,0.153,20,4.922,21,6.019]],["t/34",[11,0.111,14,5.173,15,5.509,17,3.458]],["t/35",[11,0.153,18,3.986,19,2.681]],["t/37",[11,0.153,20,4.922,22,4.176]],["t/39",[11,0.143,23,4.692,24,3.405,25,2.894]],["t/41",[11,0.14,26,5.94]],["t/44",[11,0.178]],["t/45",[27,6.031]],["t/47",[28,5.756]],["t/49",[19,3.871]],["t/51",[11,0.16]],["t/52",[27,6.031]],["t/54",[17,4.994]],["t/56",[19,3.871]],["t/58",[11,0.16]],["t/59",[27,6.031]],["t/61",[17,4.994]],["t/63",[19,3.871]],["t/65",[11,0.16]],["t/66",[27,6.031]],["t/68",[17,4.994]],["t/70",[16,7.956]],["t/72",[19,3.871]],["t/74",[11,0.16]],["t/75",[27,6.031]],["t/77",[17,4.994]],["t/79",[19,3.871]],["t/81",[11,0.16]],["t/82",[27,6.031]],["t/84",[17,4.994]],["t/86",[19,3.871]],["t/88",[11,0.16]],["t/89",[27,6.031]],["t/91",[17,4.994]],["t/93",[19,3.871]],["t/95",[11,0.16]],["t/96",[27,6.031]],["t/98",[17,4.994]],["t/100",[19,3.871]],["t/102",[11,0.16]],["t/103",[27,6.031]],["t/105",[17,4.994]],["t/107",[19,3.871]],["t/111",[11,0.14,29,4.56]],["t/113",[11,0.124,30,3.912,31,4.183]],["t/114",[11,0.174,32,3.045]],["t/116",[11,0.184]],["t/118",[11,0.134,33,4.085,34,2.648,35,3.78,36,2.914]],["t/120",[11,0.153,34,3.191,37,3.511]],["t/122",[11,0.134,38,3.78,39,3.466,40,3.919,41,4.572]],["t/124",[]],["t/127",[11,0.111,32,3.045,35,4.555,42,3.902]],["t/128",[11,0.164,43,5.485]],["t/130",[11,0.153,32,3.045,44,5.509]],["t/132",[11,0.174,45,3.231]],["t/133",[11,0.166,32,2.762,46,4.692]],["t/135",[11,0.157,19,2.225,36,2.914,45,2.681]],["t/137",[11,0.134,33,4.085,34,2.648,35,3.78,36,2.914]],["t/139",[11,0.153,34,3.191,37,3.511]],["t/141",[11,0.124,47,5.076,48,6.138]],["t/143",[11,0.14,25,4.013]],["t/146",[11,0.14,29,4.56]],["t/148",[11,0.124,30,3.912,31,4.183]],["t/149",[11,0.174,32,3.045]],["t/151",[11,0.153,34,3.191,37,3.511]],["t/154",[11,0.14,29,4.56]],["t/156",[11,0.124,30,3.912,31,4.183]],["t/157",[11,0.174,32,3.045]],["t/159",[11,0.184]],["t/161",[11,0.157,49,3.919,50,4.293,51,4.572]],["t/163",[11,0.153,34,3.191,37,3.511]],["t/167",[11,0.157,52,4.572,53,4.572,54,3.78]],["t/169",[11,0.173,55,4.572,56,4.572]],["t/171",[11,0.174,57,5.509]],["t/173",[11,0.126,58,3.956,59,3.765,60,3.765,61,4.213,62,4.213]],["t/175",[11,0.143,63,4.997,64,4.997,65,4.997]],["t/177",[11,0.143,66,4.997,67,4.997,68,4.997]],["t/179",[11,0.166,69,4.997,70,4.997]],["t/181",[11,0.153,71,5.509,72,5.509]],["t/183",[11,0.111,19,2.681,73,5.509,74,4.287]],["t/185",[11,0.15,42,2.984,60,3.765,75,4.213,76,2.984]],["t/187",[11,0.14,25,4.013]],["t/190",[11,0.14,29,4.56]],["t/192",[11,0.124,30,3.912,31,4.183]],["t/193",[11,0.174,32,3.045]],["t/195",[11,0.164,36,3.912]],["t/197",[11,0.153,34,3.191,37,3.511]],["t/200",[11,0.14,29,4.56]],["t/202",[11,0.124,30,3.912,31,4.183]],["t/204",[11,0.174,32,3.045]],["t/206",[11,0.184]],["t/208",[11,0.153,34,3.191,37,3.511]],["t/211",[11,0.14,29,4.56]],["t/213",[11,0.124,30,3.912,31,4.183]],["t/214",[11,0.174,32,3.045]],["t/216",[11,0.174,36,3.511]],["t/218",[11,0.184]],["t/220",[11,0.153,34,3.191,37,3.511]],["t/223",[11,0.14,29,4.56]],["t/225",[11,0.124,30,3.912,31,4.183]],["t/226",[11,0.174,32,3.045]],["t/228",[11,0.153,36,3.511,77,4.076]],["t/230",[11,0.184]],["t/232",[11,0.153,34,3.191,37,3.511]],["t/236",[11,0.14,29,4.56]],["t/238",[11,0.111,42,3.902,78,3.902,79,4.922]],["t/239",[11,0.143,42,3.54,79,4.465,80,4.465]],["t/241",[11,0.157,78,3.238,81,3.919,82,4.572]],["t/243",[11,0.124,83,6.138,84,5.485]],["t/244",[11,0.173,84,4.085,85,4.572]],["t/246",[11,0.113,36,2.321,78,2.58,86,3.642,87,3.122,88,3.642,89,3.642,90,3.42]],["t/248",[11,0.126,36,2.685,78,2.984,87,3.611,91,4.213,92,4.213]],["t/250",[11,0.134,59,4.085,78,3.238,93,4.572,94,4.572]],["t/252",[11,0.178]],["t/254",[11,0.153,34,3.191,37,3.511]],["t/257",[11,0.14,12,4.417]],["t/259",[11,0.124,32,3.393,95,4.777]],["t/261",[11,0.15,45,2.471,96,2.607,97,2.503,98,2.984]],["t/262",[11,0.166,99,3.007,100,4.132]],["t/264",[11,0.157,101,3.78,102,3.558,103,3.558]],["t/266",[11,0.15,96,2.607,97,2.503,104,2.926,105,3.048]],["t/267",[11,0.143,22,3.788,106,2.762,107,3.345]],["t/269",[11,0.143,107,3.345,108,4.283,109,4.692]],["t/271",[11,0.143,107,3.345,110,4.997,111,4.997]],["t/273",[11,0.111,112,4.076,113,3.458,114,4.722]],["t/274",[11,0.143,115,4.132,116,4.465,117,4.997]],["t/276",[11,0.174,118,4.922]],["t/278",[11,0.153,99,3.316,119,4.555]],["t/280",[11,0.14,25,4.013]],["t/283",[11,0.14,12,4.417]],["t/285",[11,0.124,32,3.393,95,4.777]],["t/287",[11,0.15,45,2.471,96,2.607,97,2.503,98,2.984]],["t/288",[11,0.157,45,2.681,107,3.06,120,4.572]],["t/290",[11,0.157,102,3.558,103,3.558,121,4.085]],["t/292",[11,0.134,99,2.751,122,3.78,123,3.558,124,3.78]],["t/293",[11,0.144,99,2.351,123,3.041,125,3.491,126,3.907,127,3.907]],["t/295",[11,0.137,99,2.192,123,2.834,125,3.254,128,3.642,129,3.642,130,3.42]],["t/297",[11,0.15,96,2.607,97,2.503,104,2.926,105,3.048]],["t/298",[11,0.134,22,3.466,106,2.527,131,4.085,132,4.085]],["t/300",[11,0.153,133,5.509,134,5.509]],["t/302",[11,0.143,24,3.405,112,3.697,113,3.137]],["t/304",[11,0.14,25,4.013]],["t/307",[11,0.14,12,4.417]],["t/309",[11,0.124,32,3.393,95,4.777]],["t/311",[11,0.15,45,2.471,96,2.607,97,2.503,98,2.984]],["t/312",[11,0.166,99,3.007,100,4.132]],["t/314",[11,0.157,101,3.78,102,3.558,103,3.558]],["t/316",[11,0.15,96,2.607,97,2.503,104,2.926,105,3.048]],["t/317",[11,0.153,135,5.509,136,4.555]],["t/319",[11,0.153,136,4.555,137,3.754]],["t/321",[11,0.143,138,4.997,139,4.465,140,4.997]],["t/323",[11,0.111,112,4.076,113,3.458,114,4.722]],["t/324",[11,0.153,115,4.555,116,4.922]],["t/326",[11,0.174,36,3.511]],["t/328",[11,0.101,20,4.465,136,4.132,141,4.692,142,4.997]],["t/330",[11,0.153,99,3.316,119,4.555]],["t/332",[11,0.14,25,4.013]],["t/335",[11,0.164,143,6.138]],["t/337",[11,0.143,49,4.283,78,3.54,144,4.283]],["t/338",[11,0.166,145,4.997,146,4.997]],["t/340",[11,0.15,19,2.05,38,3.484,106,2.329,144,3.611]],["t/342",[11,0.174,147,4.722]],["t/344",[11,0.164,76,4.348]],["t/347",[11,0.14,12,4.417]],["t/349",[11,0.153,148,5.509,149,5.173]],["t/350",[150,7.109]],["t/352",[11,0.124,99,3.694,119,5.076]],["t/354",[11,0.157,19,2.225,96,2.829,97,2.715]],["t/355",[11,0.166,99,3.007,100,4.132]],["t/357",[11,0.157,101,3.78,102,3.558,151,4.293]],["t/359",[11,0.15,96,2.607,97,2.503,104,2.926,105,3.048]],["t/360",[11,0.153,42,3.902,107,3.688]],["t/362",[11,0.143,22,3.788,131,4.465,132,4.465]],["t/364",[11,0.143,39,3.788,152,4.997,153,4.997]],["t/366",[11,0.153,113,3.458,154,5.173]],["t/367",[11,0.111,113,3.458,123,4.287,155,5.509]],["t/369",[113,3.853,156,6.138,157,6.138]],["t/371",[11,0.14,25,4.013]],["t/374",[11,0.153,158,5.173,159,5.509]],["t/377",[11,0.14,12,4.417]],["t/379",[11,0.124,32,3.393,95,4.777]],["t/381",[11,0.15,45,2.471,96,2.607,97,2.503,98,2.984]],["t/382",[11,0.157,45,2.681,106,2.527,107,3.06]],["t/384",[11,0.126,47,3.484,98,2.984,160,3.611,161,4.213,162,4.213]],["t/386",[11,0.143,19,2.431,99,3.007,124,4.132]],["t/387",[11,0.166,30,3.185,99,3.007]],["t/389",[11,0.157,30,2.914,121,4.085,124,3.78]],["t/391",[11,0.144,96,2.417,97,2.321,104,2.713,105,2.827,163,3.231]],["t/392",[11,0.166,39,3.194,76,2.984,164,4.213]],["t/394",[11,0.153,76,3.902,118,4.922]],["t/396",[11,0.143,24,3.405,112,3.697,113,3.137]],["t/398",[11,0.153,77,4.076,165,4.555]],["t/400",[11,0.153,42,3.902,166,4.722]],["t/402",[11,0.119,22,2.962,74,3.041,77,2.891,147,3.349,167,3.907,168,3.491]],["t/404",[11,0.119,74,3.041,77,2.891,106,2.16,137,2.662,169,2.662,170,3.231]],["t/406",[11,0.126,19,2.05,47,3.484,160,3.611,168,3.765,171,4.213]],["t/408",[11,0.143,19,2.431,106,2.762,172,4.692]],["t/410",[11,0.14,25,4.013]],["t/414",[11,0.14,54,5.73]],["t/416",[54,5.076,173,5.764,174,6.138]],["t/418",[25,4.013,175,6.93]],["t/421",[11,0.14,12,4.417]],["t/423",[11,0.14,176,5.393]],["t/425",[11,0.124,17,3.853,18,4.441]],["t/426",[11,0.143,177,5.459,178,4.997,179,4.692]],["t/428",[11,0.153,179,5.173,180,6.019]],["t/430",[11,0.153,179,5.173,181,5.509]],["t/432",[11,0.126,149,3.956,178,4.213,182,4.603,183,4.603,184,4.603]],["t/434",[11,0.124,23,5.764,24,4.183]],["t/436",[11,0.14,25,4.013]],["t/439",[11,0.14,12,4.417]],["t/441",[11,0.166,169,3.405,185,4.997]],["t/442",[11,0.134,19,2.225,74,3.558,170,3.78,186,4.572]],["t/444",[11,0.153,19,2.681,187,5.509]],["t/446",[11,0.164,188,4.653]],["t/448",[11,0.166,137,3.405,169,3.405]],["t/449",[11,0.143,19,2.431,115,4.132,189,4.997]],["t/451",[11,0.143,19,2.431,77,3.697,165,4.132]],["t/453",[11,0.164,188,4.653]],["t/455",[11,0.166,169,3.405,190,4.997]],["t/456",[11,0.15,19,2.05,169,2.871,191,4.213,192,4.213]],["t/458",[11,0.164,188,4.653]],["t/460",[11,0.157,39,3.466,169,3.115,193,4.572]],["t/462",[11,0.164,150,5.485]],["t/464",[11,0.101,24,3.405,76,3.54,113,3.137,169,3.405]],["t/466",[11,0.124,194,6.138,195,4.916]],["t/469",[11,0.14,12,4.417]],["t/471",[11,0.14,196,7.572]],["t/472",[11,0.153,40,4.722,130,5.173]],["t/474",[11,0.174,197,4.176]],["t/476",[11,0.124,32,3.393,137,4.183]],["t/477",[11,0.174,170,4.555]],["t/479",[11,0.174,137,3.754]],["t/481",[11,0.174,137,3.754]],["t/483",[11,0.174,137,3.754]],["t/485",[11,0.124,76,4.348,106,3.393]],["t/486",[11,0.143,18,3.615,76,3.54,106,2.762]],["t/488",[11,0.143,19,2.431,198,5.459,199,5.459]],["t/490",[11,0.14,200,6.507]],["t/492",[11,0.124,104,4.263,201,5.764]],["t/494",[11,0.164,195,4.916]],["t/496",[11,0.14,25,4.013]],["t/499",[11,0.166,202,4.997,203,4.132]],["t/501",[11,0.166,17,3.137,18,3.615]],["t/503",[11,0.18,204,4.132]],["t/505",[11,0.174,204,4.555]],["t/507",[11,0.124,17,3.853,163,5.076]],["t/508",[11,0.18,106,2.762]],["t/510",[11,0.174,106,3.045]],["t/512",[11,0.166,205,5.459,206,5.459]],["t/514",[11,0.153,207,6.019,208,5.509]],["t/516",[11,0.134,34,2.648,209,4.572,210,4.995,211,4.085]],["t/518",[11,0.153,49,4.722,212,6.019]],["t/520",[11,0.126,106,2.329,158,3.956,211,3.765,213,4.603,214,4.603]],["t/522",[11,0.14,26,5.94]],["t/526",[11,0.153,98,3.902,215,4.922]],["t/528",[11,0.174,43,4.922]],["t/530",[11,0.153,19,2.681,166,4.722]],["t/532",[11,0.173,17,2.87,216,4.995]],["t/534",[11,0.166,23,4.692,24,3.405]],["t/536",[11,0.184]],["t/538",[11,0.184]],["t/540",[11,0.157,217,4.995,218,4.995,219,4.995]],["t/542",[11,0.184]],["t/544",[11,0.178]],["t/546",[19,3.871]],["t/548",[11,0.178]],["t/550",[19,3.871]],["t/552",[25,4.608]],["t/556",[11,0.092,220,3.78,221,4.995,222,4.572,223,4.995,224,3.78]],["t/558",[11,0.111,224,4.555,225,6.019,226,4.722]],["t/560",[11,0.111,226,4.722,227,5.509,228,5.509]],["t/562",[11,0.111,19,2.681,112,4.076,113,3.458]],["t/563",[11,0.143,220,4.132,229,5.459,230,5.459]],["t/565",[11,0.166,231,5.459,232,4.132]],["t/567",[11,0.143,226,4.283,227,4.997,233,5.459]],["t/569",[11,0.14,200,6.507]],["t/573",[11,0.111,32,3.045,35,4.555,42,3.902]],["t/574",[11,0.164,43,5.485]],["t/576",[11,0.153,32,3.045,44,5.509]],["t/578",[11,0.174,45,3.231]],["t/579",[11,0.166,32,2.762,46,4.692]],["t/581",[11,0.157,19,2.225,36,2.914,45,2.681]],["t/583",[11,0.134,33,4.085,34,2.648,35,3.78,36,2.914]],["t/585",[11,0.153,34,3.191,37,3.511]],["t/587",[11,0.124,47,5.076,48,6.138]],["t/589",[11,0.14,25,4.013]],["t/593",[11,0.14,29,4.56]],["t/595",[11,0.124,30,3.912,31,4.183]],["t/596",[11,0.174,32,3.045]],["t/598",[11,0.184]],["t/600",[11,0.134,33,4.085,34,2.648,35,3.78,36,2.914]],["t/602",[11,0.153,34,3.191,37,3.511]],["t/604",[11,0.134,38,3.78,39,3.466,40,3.919,41,4.572]],["t/606",[]],["t/608",[11,0.14,29,4.56]],["t/610",[11,0.124,30,3.912,31,4.183]],["t/612",[11,0.174,32,3.045]],["t/614",[11,0.184]],["t/616",[11,0.153,34,3.191,37,3.511]],["t/620",[11,0.157,52,4.572,53,4.572,54,3.78]],["t/622",[11,0.173,55,4.572,56,4.572]],["t/624",[11,0.174,57,5.509]],["t/626",[11,0.126,58,3.956,59,3.765,60,3.765,61,4.213,62,4.213]],["t/628",[11,0.143,63,4.997,64,4.997,65,4.997]],["t/630",[11,0.143,66,4.997,67,4.997,68,4.997]],["t/632",[11,0.166,69,4.997,70,4.997]],["t/634",[11,0.153,71,5.509,72,5.509]],["t/636",[11,0.111,19,2.681,73,5.509,74,4.287]],["t/638",[11,0.15,42,2.984,60,3.765,75,4.213,76,2.984]],["t/640",[11,0.14,25,4.013]],["t/643",[11,0.14,29,4.56]],["t/645",[11,0.124,30,3.912,31,4.183]],["t/646",[11,0.174,32,3.045]],["t/648",[11,0.184]],["t/650",[11,0.157,49,3.919,50,4.293,51,4.572]],["t/652",[11,0.153,34,3.191,37,3.511]],["t/655",[11,0.14,29,4.56]],["t/657",[11,0.124,30,3.912,31,4.183]],["t/658",[11,0.174,32,3.045]],["t/660",[11,0.153,34,3.191,37,3.511]],["t/663",[11,0.14,29,4.56]],["t/665",[11,0.124,30,3.912,31,4.183]],["t/666",[11,0.174,32,3.045]],["t/668",[11,0.164,36,3.912]],["t/670",[11,0.153,34,3.191,37,3.511]],["t/673",[11,0.14,29,4.56]],["t/675",[11,0.124,30,3.912,31,4.183]],["t/676",[11,0.174,32,3.045]],["t/678",[11,0.174,36,3.511]],["t/680",[11,0.184]],["t/682",[11,0.153,34,3.191,37,3.511]],["t/685",[11,0.14,29,4.56]],["t/687",[11,0.124,30,3.912,31,4.183]],["t/688",[11,0.174,32,3.045]],["t/690",[11,0.153,36,3.511,77,4.076]],["t/692",[11,0.184]],["t/694",[11,0.153,34,3.191,37,3.511]],["t/698",[11,0.14,29,4.56]],["t/700",[11,0.111,42,3.902,78,3.902,79,4.922]],["t/701",[11,0.143,42,3.54,79,4.465,80,4.465]],["t/703",[11,0.157,78,3.238,81,3.919,82,4.572]],["t/705",[11,0.124,83,6.138,84,5.485]],["t/706",[11,0.173,84,4.085,85,4.572]],["t/708",[11,0.113,36,2.321,78,2.58,86,3.642,87,3.122,88,3.642,89,3.642,90,3.42]],["t/710",[11,0.126,36,2.685,78,2.984,87,3.611,91,4.213,92,4.213]],["t/712",[11,0.134,59,4.085,78,3.238,93,4.572,94,4.572]],["t/714",[11,0.178]],["t/716",[11,0.153,34,3.191,37,3.511]],["t/719",[11,0.14,12,4.417]],["t/721",[11,0.124,32,3.393,95,4.777]],["t/723",[11,0.15,45,2.471,96,2.607,97,2.503,98,2.984]],["t/724",[11,0.166,99,3.007,100,4.132]],["t/726",[11,0.157,101,3.78,102,3.558,103,3.558]],["t/728",[11,0.15,96,2.607,97,2.503,104,2.926,105,3.048]],["t/729",[11,0.153,135,5.509,136,4.555]],["t/731",[11,0.153,136,4.555,137,3.754]],["t/733",[11,0.143,138,4.997,139,4.465,140,4.997]],["t/735",[11,0.111,112,4.076,113,3.458,114,4.722]],["t/736",[11,0.153,115,4.555,116,4.922]],["t/738",[11,0.174,36,3.511]],["t/740",[11,0.101,20,4.465,136,4.132,141,4.692,142,4.997]],["t/742",[11,0.153,99,3.316,119,4.555]],["t/744",[11,0.14,25,4.013]],["t/747",[11,0.164,143,6.138]],["t/749",[11,0.143,49,4.283,78,3.54,144,4.283]],["t/750",[11,0.166,145,4.997,146,4.997]],["t/752",[11,0.15,19,2.05,38,3.484,106,2.329,144,3.611]],["t/754",[11,0.174,147,4.722]],["t/756",[11,0.164,76,4.348]],["t/759",[11,0.14,12,4.417]],["t/761",[11,0.124,32,3.393,95,4.777]],["t/763",[11,0.15,45,2.471,96,2.607,97,2.503,98,2.984]],["t/764",[11,0.157,45,2.681,107,3.06,120,4.572]],["t/766",[11,0.157,102,3.558,103,3.558,121,4.085]],["t/768",[11,0.134,99,2.751,122,3.78,123,3.558,124,3.78]],["t/769",[11,0.144,99,2.351,123,3.041,125,3.491,126,3.907,127,3.907]],["t/771",[11,0.137,99,2.192,123,2.834,125,3.254,128,3.642,129,3.642,130,3.42]],["t/773",[11,0.15,96,2.607,97,2.503,104,2.926,105,3.048]],["t/774",[11,0.134,22,3.466,106,2.527,131,4.085,132,4.085]],["t/776",[11,0.153,133,5.509,134,5.509]],["t/778",[11,0.143,24,3.405,112,3.697,113,3.137]],["t/780",[11,0.14,25,4.013]],["t/783",[11,0.14,12,4.417]],["t/785",[11,0.124,32,3.393,95,4.777]],["t/787",[11,0.15,45,2.471,96,2.607,97,2.503,98,2.984]],["t/788",[11,0.166,99,3.007,100,4.132]],["t/790",[11,0.157,101,3.78,102,3.558,103,3.558]],["t/792",[11,0.15,96,2.607,97,2.503,104,2.926,105,3.048]],["t/793",[11,0.143,22,3.788,106,2.762,107,3.345]],["t/795",[11,0.143,107,3.345,108,4.283,109,4.692]],["t/797",[11,0.143,107,3.345,110,4.997,111,4.997]],["t/799",[11,0.111,112,4.076,113,3.458,114,4.722]],["t/800",[11,0.143,115,4.132,116,4.465,117,4.997]],["t/802",[11,0.174,118,4.922]],["t/804",[11,0.153,99,3.316,119,4.555]],["t/806",[11,0.14,25,4.013]],["t/809",[11,0.14,12,4.417]],["t/811",[11,0.124,32,3.393,95,4.777]],["t/813",[11,0.15,45,2.471,96,2.607,97,2.503,98,2.984]],["t/814",[11,0.157,45,2.681,106,2.527,107,3.06]],["t/816",[11,0.126,47,3.484,98,2.984,160,3.611,161,4.213,162,4.213]],["t/818",[11,0.143,19,2.431,99,3.007,124,4.132]],["t/819",[11,0.166,30,3.185,99,3.007]],["t/821",[11,0.157,30,2.914,121,4.085,124,3.78]],["t/823",[11,0.144,96,2.417,97,2.321,104,2.713,105,2.827,163,3.231]],["t/824",[11,0.166,39,3.194,76,2.984,164,4.213]],["t/826",[11,0.153,76,3.902,118,4.922]],["t/828",[11,0.143,24,3.405,112,3.697,113,3.137]],["t/830",[11,0.153,77,4.076,165,4.555]],["t/832",[11,0.153,42,3.902,166,4.722]],["t/834",[11,0.119,22,2.962,74,3.041,77,2.891,147,3.349,167,3.907,168,3.491]],["t/836",[11,0.119,74,3.041,77,2.891,106,2.16,137,2.662,169,2.662,170,3.231]],["t/838",[11,0.126,19,2.05,47,3.484,160,3.611,168,3.765,171,4.213]],["t/840",[11,0.143,19,2.431,106,2.762,172,4.692]],["t/842",[11,0.14,25,4.013]],["t/846",[11,0.14,54,5.73]],["t/848",[54,5.076,173,5.764,174,6.138]],["t/850",[25,4.013,175,6.93]],["t/853",[11,0.134,137,3.115,234,4.995,235,4.995,236,4.995]],["t/856",[11,0.14,12,4.417]],["t/858",[11,0.153,148,5.509,149,5.173]],["t/859",[150,7.109]],["t/861",[11,0.124,99,3.694,119,5.076]],["t/863",[11,0.157,19,2.225,96,2.829,97,2.715]],["t/864",[11,0.166,99,3.007,100,4.132]],["t/866",[11,0.157,101,3.78,102,3.558,151,4.293]],["t/868",[11,0.15,96,2.607,97,2.503,104,2.926,105,3.048]],["t/869",[11,0.153,42,3.902,107,3.688]],["t/871",[11,0.143,22,3.788,131,4.465,132,4.465]],["t/873",[11,0.143,39,3.788,152,4.997,153,4.997]],["t/875",[11,0.153,113,3.458,154,5.173]],["t/876",[11,0.111,113,3.458,123,4.287,155,5.509]],["t/878",[113,3.853,156,6.138,157,6.138]],["t/880",[11,0.14,25,4.013]],["t/883",[11,0.14,12,4.417]],["t/885",[11,0.166,169,3.405,185,4.997]],["t/886",[11,0.134,19,2.225,74,3.558,170,3.78,186,4.572]],["t/888",[11,0.153,19,2.681,187,5.509]],["t/890",[11,0.164,188,4.653]],["t/892",[11,0.166,137,3.405,169,3.405]],["t/893",[11,0.143,19,2.431,115,4.132,189,4.997]],["t/895",[11,0.143,19,2.431,77,3.697,165,4.132]],["t/897",[11,0.164,188,4.653]],["t/899",[11,0.166,169,3.405,190,4.997]],["t/900",[11,0.15,19,2.05,169,2.871,191,4.213,192,4.213]],["t/902",[11,0.164,188,4.653]],["t/904",[11,0.157,39,3.466,169,3.115,193,4.572]],["t/906",[11,0.164,150,5.485]],["t/908",[11,0.101,24,3.405,76,3.54,113,3.137,169,3.405]],["t/910",[11,0.124,194,6.138,195,4.916]],["t/913",[237,8.693]],["t/915",[39,5.253,238,7.572]],["t/917",[137,4.183,197,4.653,239,4.777]],["t/919",[11,0.143,97,2.968,106,2.762,154,4.692]],["t/921",[24,4.183,106,3.393,215,5.485]],["t/923",[24,4.722,215,6.192]],["t/925",[11,0.18,240,5.459]],["t/927",[11,0.101,107,3.345,241,4.997,242,5.459,243,4.132]],["t/929",[243,5.076,244,6.707,245,6.707]],["t/931",[11,0.111,197,4.176,239,4.287,241,5.509]],["t/933",[11,0.111,144,4.722,246,6.019,247,6.019]],["t/936",[11,0.178,248,4.213,249,3.375]],["t/938",[11,0.143,249,4.002,250,4.997,251,4.283]],["t/939",[11,0.183,228,3.642,252,3.979]],["t/941",[188,5.253,195,5.55]],["t/943",[11,0.185,249,2.732,253,3.727]],["t/945",[188,5.253,195,5.55]],["t/947",[11,0.183,249,2.917,254,3.979]],["t/949",[188,5.253,195,5.55]],["t/951",[11,0.143,195,4.002,249,4.002,251,4.283]],["t/953",[25,4.013,215,6.192]],["t/956",[11,0.153,12,3.511,255,4.412]],["t/958",[11,0.111,18,3.986,243,4.555,255,4.412]],["t/960",[11,0.134,40,3.919,204,3.78,243,3.78,256,4.995]],["t/962",[11,0.111,181,5.509,255,4.412,257,6.019]],["t/964",[11,0.101,197,3.788,232,4.132,239,3.889,255,4.002]],["t/965",[11,0.119,197,2.962,204,3.231,226,3.349,239,3.041,258,4.269,259,3.907]],["t/967",[11,0.15,197,3.194,239,3.279,249,3.375,260,3.956]],["t/969",[11,0.111,137,3.754,139,4.922,255,4.412]],["t/971",[11,0.124,255,4.916,261,6.707]],["t/973",[11,0.111,104,3.826,201,5.173,255,4.412]],["t/976",[11,0.14,262,7.572]],["t/978",[11,0.101,147,4.283,251,4.283,263,4.692,264,4.692]],["t/979",[11,0.174,264,5.173]],["t/981",[11,0.143,197,3.788,239,3.889,260,4.692]],["t/983",[11,0.111,243,4.555,264,5.173,265,5.173]],["t/985",[11,0.166,45,2.93,107,3.345]],["t/987",[11,0.166,45,2.93,107,3.345]],["t/989",[11,0.111,232,4.555,243,4.555,266,6.019]],["t/990",[11,0.143,197,3.788,239,3.889,267,4.997]],["t/992",[11,0.153,232,4.555,268,6.019]],["t/994",[11,0.124,38,5.076,269,6.138]],["t/995",[11,0.143,106,2.762,270,5.459,271,5.459]],["t/997",[11,0.143,106,2.762,250,4.997,251,4.283]],["t/999",[11,0.124,272,6.707,273,6.707]],["t/1000",[11,0.143,274,5.459,275,5.459,276,5.459]],["t/1002",[11,0.143,232,4.132,277,5.459,278,5.459]],["t/1004",[11,0.124,279,6.707,280,5.485]],["t/1005",[11,0.153,19,2.681,281,6.019]],["t/1007",[11,0.124,104,4.263,201,5.764]],["t/1009",[19,2.987,172,5.764,282,6.707]],["t/1012",[11,0.14,203,5.73]],["t/1014",[11,0.14,176,5.393]],["t/1016",[11,0.124,17,3.853,18,4.441]],["t/1017",[11,0.166,106,2.762,248,4.997]],["t/1019",[11,0.144,46,3.669,106,2.16,137,2.662,283,4.269,284,3.669]],["t/1021",[11,0.143,106,2.762,211,4.465,285,5.459]],["t/1023",[11,0.153,208,5.509,286,6.019]],["t/1025",[11,0.143,232,4.132,287,5.459,288,5.459]],["t/1027",[11,0.143,249,4.002,284,4.692,289,5.459]],["t/1029",[11,0.111,17,3.458,163,4.555,173,5.173]],["t/1030",[11,0.153,265,5.173,290,6.019]],["t/1032",[11,0.14,25,4.013]],["t/1034",[25,4.013,43,6.192]],["t/1037",[11,0.14,203,5.73]],["t/1039",[11,0.14,176,5.393]],["t/1041",[11,0.124,18,4.441,106,3.393]],["t/1043",[11,0.101,122,4.132,260,4.692,280,4.465,291,5.459]],["t/1045",[11,0.124,265,5.764,280,5.485]],["t/1047",[11,0.101,197,3.788,239,3.889,267,4.997,280,4.465]],["t/1049",[11,0.124,226,5.261,292,6.707]],["t/1051",[11,0.14,26,5.94]],["t/1054",[11,0.14,12,4.417]],["t/1056",[11,0.124,293,6.707,294,5.764]],["t/1058",[11,0.124,17,3.853,18,4.441]],["t/1059",[11,0.166,295,5.459,296,4.283]],["t/1061",[11,0.157,97,2.715,296,3.919,297,4.995]],["t/1063",[11,0.134,18,3.307,50,4.293,170,3.78,296,3.919]],["t/1065",[11,0.124,24,4.183,106,3.393]],["t/1066",[11,0.153,165,4.555,298,6.019]],["t/1068",[11,0.166,296,4.283,299,5.459]],["t/1070",[11,0.153,300,6.019,301,5.173]],["t/1072",[11,0.134,34,2.648,109,4.293,151,4.293,302,4.995]],["t/1074",[11,0.14,200,6.507]],["t/1076",[11,0.14,25,4.013]],["t/1079",[11,0.14,203,5.73]],["t/1081",[11,0.14,176,5.393]],["t/1083",[11,0.188,122,3.231]],["t/1084",[11,0.14,203,5.73]],["t/1086",[11,0.14,176,5.393]],["t/1088",[11,0.153,17,3.458,122,4.555]],["t/1089",[11,0.166,204,4.132,303,3.889]],["t/1091",[11,0.153,80,4.922,224,4.555]],["t/1093",[11,0.153,303,4.287,304,5.509]],["t/1095",[11,0.164,305,6.138]],["t/1097",[11,0.153,81,4.722,220,4.555]],["t/1099",[11,0.157,103,3.558,306,4.572,307,4.572]],["t/1101",[11,0.14,26,5.94]],["t/1103",[11,0.14,308,6.507]],["t/1105",[11,0.14,17,4.35]],["t/1106",[11,0.166,204,4.132,303,3.889]],["t/1108",[11,0.153,80,4.922,224,4.555]],["t/1110",[11,0.153,303,4.287,304,5.509]],["t/1112",[11,0.164,305,6.138]],["t/1114",[11,0.153,81,4.722,220,4.555]],["t/1116",[11,0.157,103,3.558,306,4.572,307,4.572]],["t/1118",[11,0.14,26,5.94]],["t/1120",[11,0.14,308,6.507]],["t/1123",[11,0.164,12,3.912]],["t/1125",[11,0.166,309,5.459,310,5.459]],["t/1127",[11,0.166,24,3.405,113,3.137]],["t/1129",[11,0.164,176,4.777]],["t/1130",[11,0.134,106,2.527,176,3.558,202,4.572,311,4.995]],["t/1132",[11,0.143,176,3.889,301,4.692,312,5.459]],["t/1134",[11,0.164,313,6.707]],["t/1135",[11,0.174,314,6.019]],["t/1137",[11,0.134,28,3.307,209,4.572,284,4.293,315,4.995]],["t/1139",[11,0.134,28,3.307,34,2.648,97,2.715,303,3.558]],["t/1141",[11,0.143,18,3.615,28,3.615,211,4.465]],["t/1143",[11,0.153,81,4.722,316,5.509]],["t/1145",[11,0.143,40,4.283,220,4.132,224,4.132]],["t/1147",[11,0.153,224,4.555,317,6.019]],["t/1149",[11,0.111,28,3.986,105,3.986,163,4.555]],["t/1150",[11,0.143,28,3.615,303,3.889,318,5.459]],["t/1152",[11,0.153,28,3.986,319,6.019]],["t/1154",[11,0.174,320,6.019]],["t/1156",[11,0.166,321,5.459,322,5.459]],["t/1158",[11,0.153,28,3.986,323,6.019]],["t/1160",[11,0.153,28,3.986,324,6.019]],["t/1162",[11,0.143,325,5.459,326,5.459,327,5.459]],["t/1164",[11,0.124,328,5.485,329,6.707]],["t/1165",[11,0.134,87,3.919,160,3.919,301,4.293,328,4.085]],["t/1167",[11,0.153,328,4.922,330,6.019]],["t/1169",[11,0.153,90,5.173,328,4.922]],["t/1171",[11,0.124,28,4.441,114,5.261]],["t/1172",[11,0.143,28,3.615,159,4.997,259,4.997]],["t/1174",[11,0.143,220,4.132,331,5.459,332,5.459]],["t/1176",[11,0.153,333,6.019,334,6.019]],["t/1178",[11,0.153,45,3.231,294,5.173]],["t/1179",[11,0.166,139,4.465,165,4.132]],["t/1181",[11,0.143,45,2.93,294,4.692,316,4.997]],["t/1183",[11,0.124,308,5.764,335,6.707]],["t/1187",[303,4.777,336,6.707,337,6.707]],["t/1189",[338,8.693]],["t/1190",[303,5.393,339,7.572]],["t/1193",[222,6.93,340,7.572]],["t/1196",[11,0.174,203,4.555]],["t/1198",[11,0.15,45,2.471,106,2.329,251,3.611,263,3.956]],["t/1199",[11,0.153,45,3.231,166,4.722]],["t/1201",[11,0.153,58,5.173,163,4.555]],["t/1203",[11,0.143,45,2.93,106,2.762,141,4.692]],["t/1204",[11,0.153,45,3.231,166,4.722]],["t/1206",[11,0.143,296,4.283,341,5.459,342,4.997]],["t/1208",[11,0.111,98,3.902,108,4.722,158,5.173]],["t/1209",[11,0.166,108,4.283,263,4.692]],["t/1211",[11,0.166,108,4.283,343,5.459]],["t/1213",[11,0.111,38,4.555,269,5.509,342,5.509]],["t/1215",[11,0.124,122,5.076,344,6.707]],["t/1217",[11,0.111,24,3.754,112,4.076,113,3.458]],["t/1219",[25,4.608]]],"invertedIndex":[["",{"_index":11,"t":{"25":{"position":[[0,1]]},"27":{"position":[[0,1]]},"29":{"position":[[0,1]]},"30":{"position":[[0,1],[2,1]]},"32":{"position":[[0,1],[2,1]]},"34":{"position":[[0,1]]},"35":{"position":[[0,1],[2,1]]},"37":{"position":[[0,1],[2,1]]},"39":{"position":[[0,1],[5,2]]},"41":{"position":[[0,1]]},"44":{"position":[[0,4],[5,7]]},"51":{"position":[[0,5]]},"58":{"position":[[0,8]]},"65":{"position":[[0,8]]},"74":{"position":[[0,9]]},"81":{"position":[[0,8]]},"88":{"position":[[0,9]]},"95":{"position":[[0,5]]},"102":{"position":[[0,4]]},"111":{"position":[[0,1]]},"113":{"position":[[0,1]]},"114":{"position":[[0,1],[2,1],[4,6]]},"116":{"position":[[0,1],[2,1],[4,10]]},"118":{"position":[[0,1],[2,1]]},"120":{"position":[[0,1],[2,1]]},"122":{"position":[[0,1],[2,1]]},"127":{"position":[[0,1]]},"128":{"position":[[0,1],[2,1]]},"130":{"position":[[0,1],[2,1]]},"132":{"position":[[0,1],[3,2],[9,11]]},"133":{"position":[[0,1],[2,1],[7,6]]},"135":{"position":[[0,1],[2,1],[11,10]]},"137":{"position":[[0,1],[2,1]]},"139":{"position":[[0,1],[2,1]]},"141":{"position":[[0,1]]},"143":{"position":[[0,1]]},"146":{"position":[[0,1]]},"148":{"position":[[0,1]]},"149":{"position":[[0,1],[2,1],[4,6]]},"151":{"position":[[0,1],[2,1]]},"154":{"position":[[0,1]]},"156":{"position":[[0,1]]},"157":{"position":[[0,1],[2,1],[4,6]]},"159":{"position":[[0,1],[2,1],[4,10]]},"161":{"position":[[0,1],[2,1],[12,11]]},"163":{"position":[[0,1],[2,1]]},"167":{"position":[[0,1],[3,6],[10,5]]},"169":{"position":[[0,1],[2,1],[10,5],[16,8]]},"171":{"position":[[0,1],[2,1],[10,13]]},"173":{"position":[[0,1],[2,1]]},"175":{"position":[[0,1],[2,1]]},"177":{"position":[[0,1],[2,1]]},"179":{"position":[[0,1],[2,1],[10,13]]},"181":{"position":[[0,1],[2,1]]},"183":{"position":[[0,1]]},"185":{"position":[[0,1],[9,6],[16,5]]},"187":{"position":[[0,1]]},"190":{"position":[[0,1]]},"192":{"position":[[0,1]]},"193":{"position":[[0,1],[2,1],[4,6]]},"195":{"position":[[0,1],[2,1]]},"197":{"position":[[0,1],[2,1]]},"200":{"position":[[0,1]]},"202":{"position":[[0,1]]},"204":{"position":[[0,1],[2,1],[4,6]]},"206":{"position":[[0,1],[2,1],[4,10]]},"208":{"position":[[0,1],[2,1]]},"211":{"position":[[0,1]]},"213":{"position":[[0,1]]},"214":{"position":[[0,1],[2,1],[4,6]]},"216":{"position":[[0,1],[2,1],[4,4]]},"218":{"position":[[0,1],[2,1],[4,4]]},"220":{"position":[[0,1],[2,1]]},"223":{"position":[[0,1]]},"225":{"position":[[0,1]]},"226":{"position":[[0,1],[2,1],[4,6]]},"228":{"position":[[0,1],[2,1]]},"230":{"position":[[0,1],[2,1],[4,4]]},"232":{"position":[[0,1],[2,1]]},"236":{"position":[[0,1]]},"238":{"position":[[0,1]]},"239":{"position":[[0,1],[2,1]]},"241":{"position":[[0,1],[2,1],[11,10]]},"243":{"position":[[0,1]]},"244":{"position":[[0,1],[2,1],[4,6],[16,10]]},"246":{"position":[[0,1],[2,1]]},"248":{"position":[[0,1],[2,1]]},"250":{"position":[[0,1],[2,1]]},"252":{"position":[[0,1],[3,4]]},"254":{"position":[[0,1],[2,1]]},"257":{"position":[[0,1]]},"259":{"position":[[0,1]]},"261":{"position":[[0,1],[3,2],[9,3]]},"262":{"position":[[0,1],[2,1],[6,3]]},"264":{"position":[[0,1],[2,1],[6,3]]},"266":{"position":[[0,1],[3,2],[10,3]]},"267":{"position":[[0,1],[2,1]]},"269":{"position":[[0,1],[2,1]]},"271":{"position":[[0,1],[2,1]]},"273":{"position":[[0,1]]},"274":{"position":[[0,1],[2,1]]},"276":{"position":[[0,1],[2,1],[4,4]]},"278":{"position":[[0,1],[5,3]]},"280":{"position":[[0,1]]},"283":{"position":[[0,1]]},"285":{"position":[[0,1]]},"287":{"position":[[0,1],[3,2],[9,3]]},"288":{"position":[[0,1],[2,1],[10,3]]},"290":{"position":[[0,1],[2,1],[6,3]]},"292":{"position":[[0,1],[5,3]]},"293":{"position":[[0,1],[2,1],[8,1]]},"295":{"position":[[0,1],[2,1],[8,1]]},"297":{"position":[[0,1],[3,2],[10,3]]},"298":{"position":[[0,1],[2,1]]},"300":{"position":[[0,1],[2,1]]},"302":{"position":[[0,1],[3,3]]},"304":{"position":[[0,1]]},"307":{"position":[[0,1]]},"309":{"position":[[0,1]]},"311":{"position":[[0,1],[3,2],[9,3]]},"312":{"position":[[0,1],[2,1],[6,3]]},"314":{"position":[[0,1],[2,1],[6,3]]},"316":{"position":[[0,1],[3,2],[10,3]]},"317":{"position":[[0,1],[2,1]]},"319":{"position":[[0,1],[2,1]]},"321":{"position":[[0,1],[2,1]]},"323":{"position":[[0,1]]},"324":{"position":[[0,1],[2,1]]},"326":{"position":[[0,1],[2,1],[4,4]]},"328":{"position":[[0,1]]},"330":{"position":[[0,1],[5,3]]},"332":{"position":[[0,1]]},"335":{"position":[[0,1],[3,7]]},"337":{"position":[[0,1],[7,7]]},"338":{"position":[[0,1],[2,1],[8,7]]},"340":{"position":[[0,1],[2,1],[9,7]]},"342":{"position":[[0,1],[6,7],[14,7]]},"344":{"position":[[0,1],[3,14]]},"347":{"position":[[0,1]]},"349":{"position":[[0,1],[8,3]]},"352":{"position":[[2,3]]},"354":{"position":[[0,1],[3,2],[9,3]]},"355":{"position":[[0,1],[2,1],[6,3]]},"357":{"position":[[0,1],[2,1],[6,3]]},"359":{"position":[[0,1],[3,2],[10,3]]},"360":{"position":[[0,1],[2,1]]},"362":{"position":[[0,1],[2,1]]},"364":{"position":[[0,1],[2,1]]},"366":{"position":[[0,1],[7,3]]},"367":{"position":[[4,3]]},"371":{"position":[[0,1]]},"374":{"position":[[0,1],[3,3]]},"377":{"position":[[0,1]]},"379":{"position":[[0,1]]},"381":{"position":[[0,1],[3,2],[9,3]]},"382":{"position":[[0,1],[2,1],[10,3]]},"384":{"position":[[0,1],[2,1]]},"386":{"position":[[0,1],[5,3]]},"387":{"position":[[0,1],[2,1],[6,3]]},"389":{"position":[[0,1],[2,1],[9,3]]},"391":{"position":[[0,1],[3,2],[10,3]]},"392":{"position":[[0,1],[2,1],[11,10],[22,7]]},"394":{"position":[[0,1],[2,1]]},"396":{"position":[[0,1],[3,3]]},"398":{"position":[[0,1],[3,3]]},"400":{"position":[[0,1],[2,1]]},"402":{"position":[[0,1],[2,1]]},"404":{"position":[[0,1],[2,1]]},"406":{"position":[[0,1],[2,1]]},"408":{"position":[[0,1],[2,1]]},"410":{"position":[[0,1]]},"414":{"position":[[0,5]]},"421":{"position":[[0,1]]},"423":{"position":[[0,1]]},"425":{"position":[[0,1]]},"426":{"position":[[0,1],[2,1]]},"428":{"position":[[0,1],[2,1]]},"430":{"position":[[0,1],[2,1]]},"432":{"position":[[0,1],[2,1]]},"434":{"position":[[0,1]]},"436":{"position":[[0,1]]},"439":{"position":[[0,1]]},"441":{"position":[[0,1],[8,6],[15,7]]},"442":{"position":[[0,1],[2,1]]},"444":{"position":[[0,1],[2,1]]},"446":{"position":[[0,1],[2,1]]},"448":{"position":[[0,1],[8,7],[16,6]]},"449":{"position":[[0,1],[2,1]]},"451":{"position":[[0,1],[2,1]]},"453":{"position":[[0,1],[2,1]]},"455":{"position":[[0,1],[8,8],[17,7]]},"456":{"position":[[0,1],[2,1],[7,2]]},"458":{"position":[[0,1],[2,1]]},"460":{"position":[[0,1],[9,10],[20,7]]},"462":{"position":[[0,1],[2,1]]},"464":{"position":[[0,1]]},"466":{"position":[[0,1]]},"469":{"position":[[0,1]]},"471":{"position":[[0,1]]},"472":{"position":[[0,1],[2,1]]},"474":{"position":[[0,1],[2,1],[4,4]]},"476":{"position":[[0,1]]},"477":{"position":[[0,1],[2,1],[7,4]]},"479":{"position":[[0,1],[2,1],[4,4]]},"481":{"position":[[0,1],[2,1],[4,6]]},"483":{"position":[[0,1],[2,1],[4,9]]},"485":{"position":[[0,1]]},"486":{"position":[[0,1],[2,1]]},"488":{"position":[[0,1],[2,1]]},"490":{"position":[[0,1]]},"492":{"position":[[0,1]]},"494":{"position":[[0,1],[5,7]]},"496":{"position":[[0,1]]},"499":{"position":[[0,1],[3,2],[6,4]]},"501":{"position":[[0,1],[3,4],[8,7]]},"503":{"position":[[0,1],[2,1],[6,6],[13,6]]},"505":{"position":[[0,1],[2,1],[7,6]]},"507":{"position":[[0,1]]},"508":{"position":[[0,1],[2,1],[6,3],[10,6]]},"510":{"position":[[0,1],[2,1],[7,10]]},"512":{"position":[[0,1],[2,1],[10,5]]},"514":{"position":[[0,1],[2,1]]},"516":{"position":[[0,1],[2,1]]},"518":{"position":[[0,1],[2,1]]},"520":{"position":[[0,1],[2,1]]},"522":{"position":[[0,1]]},"526":{"position":[[0,1],[3,7]]},"528":{"position":[[0,1],[2,1],[4,7]]},"530":{"position":[[0,1],[2,1]]},"532":{"position":[[0,1],[2,1],[4,6],[14,7]]},"534":{"position":[[0,1],[2,1],[4,7]]},"536":{"position":[[0,1],[3,4],[8,9]]},"538":{"position":[[0,1],[4,4],[9,5]]},"540":{"position":[[0,1],[4,4],[9,4]]},"542":{"position":[[0,1],[4,4],[9,4]]},"544":{"position":[[0,1],[4,6]]},"548":{"position":[[0,1],[4,7]]},"556":{"position":[[0,1]]},"558":{"position":[[0,1]]},"560":{"position":[[0,1]]},"562":{"position":[[0,1]]},"563":{"position":[[0,1],[2,1]]},"565":{"position":[[0,1],[2,1],[8,5]]},"567":{"position":[[0,1],[2,1]]},"569":{"position":[[0,1]]},"573":{"position":[[0,1]]},"574":{"position":[[0,1],[2,1]]},"576":{"position":[[0,1],[2,1]]},"578":{"position":[[0,1],[3,2],[9,11]]},"579":{"position":[[0,1],[2,1],[7,6]]},"581":{"position":[[0,1],[2,1],[11,10]]},"583":{"position":[[0,1],[2,1]]},"585":{"position":[[0,1],[2,1]]},"587":{"position":[[0,1]]},"589":{"position":[[0,1]]},"593":{"position":[[0,1]]},"595":{"position":[[0,1]]},"596":{"position":[[0,1],[2,1],[4,6]]},"598":{"position":[[0,1],[2,1],[4,10]]},"600":{"position":[[0,1],[2,1]]},"602":{"position":[[0,1],[2,1]]},"604":{"position":[[0,1],[2,1]]},"608":{"position":[[0,1]]},"610":{"position":[[0,1]]},"612":{"position":[[0,1],[2,1],[4,6]]},"614":{"position":[[0,1],[2,1],[4,10]]},"616":{"position":[[0,1],[2,1]]},"620":{"position":[[0,1],[3,6],[10,5]]},"622":{"position":[[0,1],[2,1],[10,5],[16,8]]},"624":{"position":[[0,1],[2,1],[10,13]]},"626":{"position":[[0,1],[2,1]]},"628":{"position":[[0,1],[2,1]]},"630":{"position":[[0,1],[2,1]]},"632":{"position":[[0,1],[2,1],[10,13]]},"634":{"position":[[0,1],[2,1]]},"636":{"position":[[0,1]]},"638":{"position":[[0,1],[9,6],[16,5]]},"640":{"position":[[0,1]]},"643":{"position":[[0,1]]},"645":{"position":[[0,1]]},"646":{"position":[[0,1],[2,1],[4,6]]},"648":{"position":[[0,1],[2,1],[4,10]]},"650":{"position":[[0,1],[2,1],[12,11]]},"652":{"position":[[0,1],[2,1]]},"655":{"position":[[0,1]]},"657":{"position":[[0,1]]},"658":{"position":[[0,1],[2,1],[4,6]]},"660":{"position":[[0,1],[2,1]]},"663":{"position":[[0,1]]},"665":{"position":[[0,1]]},"666":{"position":[[0,1],[2,1],[4,6]]},"668":{"position":[[0,1],[2,1]]},"670":{"position":[[0,1],[2,1]]},"673":{"position":[[0,1]]},"675":{"position":[[0,1]]},"676":{"position":[[0,1],[2,1],[4,6]]},"678":{"position":[[0,1],[2,1],[4,4]]},"680":{"position":[[0,1],[2,1],[4,4]]},"682":{"position":[[0,1],[2,1]]},"685":{"position":[[0,1]]},"687":{"position":[[0,1]]},"688":{"position":[[0,1],[2,1],[4,6]]},"690":{"position":[[0,1],[2,1]]},"692":{"position":[[0,1],[2,1],[4,4]]},"694":{"position":[[0,1],[2,1]]},"698":{"position":[[0,1]]},"700":{"position":[[0,1]]},"701":{"position":[[0,1],[2,1]]},"703":{"position":[[0,1],[2,1],[11,10]]},"705":{"position":[[0,1]]},"706":{"position":[[0,1],[2,1],[4,6],[16,10]]},"708":{"position":[[0,1],[2,1]]},"710":{"position":[[0,1],[2,1]]},"712":{"position":[[0,1],[2,1]]},"714":{"position":[[0,1],[3,4]]},"716":{"position":[[0,1],[2,1]]},"719":{"position":[[0,1]]},"721":{"position":[[0,1]]},"723":{"position":[[0,1],[3,2],[9,3]]},"724":{"position":[[0,1],[2,1],[6,3]]},"726":{"position":[[0,1],[2,1],[6,3]]},"728":{"position":[[0,1],[3,2],[10,3]]},"729":{"position":[[0,1],[2,1]]},"731":{"position":[[0,1],[2,1]]},"733":{"position":[[0,1],[2,1]]},"735":{"position":[[0,1]]},"736":{"position":[[0,1],[2,1]]},"738":{"position":[[0,1],[2,1],[4,4]]},"740":{"position":[[0,1]]},"742":{"position":[[0,1],[5,3]]},"744":{"position":[[0,1]]},"747":{"position":[[0,1],[3,7]]},"749":{"position":[[0,1],[7,7]]},"750":{"position":[[0,1],[2,1],[8,7]]},"752":{"position":[[0,1],[2,1],[9,7]]},"754":{"position":[[0,1],[6,7],[14,7]]},"756":{"position":[[0,1],[3,14]]},"759":{"position":[[0,1]]},"761":{"position":[[0,1]]},"763":{"position":[[0,1],[3,2],[9,3]]},"764":{"position":[[0,1],[2,1],[10,3]]},"766":{"position":[[0,1],[2,1],[6,3]]},"768":{"position":[[0,1],[5,3]]},"769":{"position":[[0,1],[2,1],[8,1]]},"771":{"position":[[0,1],[2,1],[8,1]]},"773":{"position":[[0,1],[3,2],[10,3]]},"774":{"position":[[0,1],[2,1]]},"776":{"position":[[0,1],[2,1]]},"778":{"position":[[0,1],[3,3]]},"780":{"position":[[0,1]]},"783":{"position":[[0,1]]},"785":{"position":[[0,1]]},"787":{"position":[[0,1],[3,2],[9,3]]},"788":{"position":[[0,1],[2,1],[6,3]]},"790":{"position":[[0,1],[2,1],[6,3]]},"792":{"position":[[0,1],[3,2],[10,3]]},"793":{"position":[[0,1],[2,1]]},"795":{"position":[[0,1],[2,1]]},"797":{"position":[[0,1],[2,1]]},"799":{"position":[[0,1]]},"800":{"position":[[0,1],[2,1]]},"802":{"position":[[0,1],[2,1],[4,4]]},"804":{"position":[[0,1],[5,3]]},"806":{"position":[[0,1]]},"809":{"position":[[0,1]]},"811":{"position":[[0,1]]},"813":{"position":[[0,1],[3,2],[9,3]]},"814":{"position":[[0,1],[2,1],[10,3]]},"816":{"position":[[0,1],[2,1]]},"818":{"position":[[0,1],[5,3]]},"819":{"position":[[0,1],[2,1],[6,3]]},"821":{"position":[[0,1],[2,1],[9,3]]},"823":{"position":[[0,1],[3,2],[10,3]]},"824":{"position":[[0,1],[2,1],[11,10],[22,7]]},"826":{"position":[[0,1],[2,1]]},"828":{"position":[[0,1],[3,3]]},"830":{"position":[[0,1],[3,3]]},"832":{"position":[[0,1],[2,1]]},"834":{"position":[[0,1],[2,1]]},"836":{"position":[[0,1],[2,1]]},"838":{"position":[[0,1],[2,1]]},"840":{"position":[[0,1],[2,1]]},"842":{"position":[[0,1]]},"846":{"position":[[0,5]]},"853":{"position":[[0,1],[3,3]]},"856":{"position":[[0,1]]},"858":{"position":[[0,1],[8,3]]},"861":{"position":[[2,3]]},"863":{"position":[[0,1],[3,2],[9,3]]},"864":{"position":[[0,1],[2,1],[6,3]]},"866":{"position":[[0,1],[2,1],[6,3]]},"868":{"position":[[0,1],[3,2],[10,3]]},"869":{"position":[[0,1],[2,1]]},"871":{"position":[[0,1],[2,1]]},"873":{"position":[[0,1],[2,1]]},"875":{"position":[[0,1],[7,3]]},"876":{"position":[[4,3]]},"880":{"position":[[0,1]]},"883":{"position":[[0,1]]},"885":{"position":[[0,1],[8,6],[15,7]]},"886":{"position":[[0,1],[2,1]]},"888":{"position":[[0,1],[2,1]]},"890":{"position":[[0,1],[2,1]]},"892":{"position":[[0,1],[8,7],[16,6]]},"893":{"position":[[0,1],[2,1]]},"895":{"position":[[0,1],[2,1]]},"897":{"position":[[0,1],[2,1]]},"899":{"position":[[0,1],[8,8],[17,7]]},"900":{"position":[[0,1],[2,1],[7,2]]},"902":{"position":[[0,1],[2,1]]},"904":{"position":[[0,1],[9,10],[20,7]]},"906":{"position":[[0,1],[2,1]]},"908":{"position":[[0,1]]},"910":{"position":[[0,1]]},"919":{"position":[[0,2],[9,4]]},"925":{"position":[[0,2],[3,3],[7,4],[15,7]]},"927":{"position":[[4,9]]},"931":{"position":[[5,6]]},"933":{"position":[[0,2]]},"936":{"position":[[0,1],[3,6],[13,4],[22,8],[31,4]]},"938":{"position":[[0,1],[7,4]]},"939":{"position":[[0,1],[2,1],[4,6],[11,3],[15,7],[23,5],[32,4]]},"943":{"position":[[0,1],[2,1],[4,6],[11,3],[15,4],[20,8],[29,2],[36,4]]},"947":{"position":[[0,1],[2,1],[4,6],[11,3],[15,5],[21,10],[35,4]]},"951":{"position":[[0,1],[3,4]]},"956":{"position":[[0,1],[6,7]]},"958":{"position":[[0,1]]},"960":{"position":[[0,1],[2,1]]},"962":{"position":[[0,1]]},"964":{"position":[[0,1]]},"965":{"position":[[0,1],[2,1]]},"967":{"position":[[0,1],[2,1],[12,3]]},"969":{"position":[[0,1]]},"971":{"position":[[0,1]]},"973":{"position":[[0,1]]},"976":{"position":[[0,1]]},"978":{"position":[[0,1]]},"979":{"position":[[0,1],[2,1],[4,4]]},"981":{"position":[[0,1],[2,1]]},"983":{"position":[[0,1]]},"985":{"position":[[0,1],[2,1],[6,9]]},"987":{"position":[[0,1],[2,1],[6,11]]},"989":{"position":[[0,1]]},"990":{"position":[[0,1],[2,1]]},"992":{"position":[[0,1],[2,1]]},"994":{"position":[[0,1]]},"995":{"position":[[0,1],[2,1]]},"997":{"position":[[0,1],[2,1]]},"999":{"position":[[0,1]]},"1000":{"position":[[0,1],[2,1]]},"1002":{"position":[[0,1],[2,1]]},"1004":{"position":[[0,1]]},"1005":{"position":[[0,1],[2,1]]},"1007":{"position":[[0,1]]},"1012":{"position":[[0,1]]},"1014":{"position":[[0,1]]},"1016":{"position":[[0,1]]},"1017":{"position":[[0,1],[2,1],[9,3]]},"1019":{"position":[[0,1],[2,1],[15,3]]},"1021":{"position":[[0,1],[2,1]]},"1023":{"position":[[0,1],[2,1]]},"1025":{"position":[[0,1],[2,1]]},"1027":{"position":[[0,1],[2,1]]},"1029":{"position":[[0,1]]},"1030":{"position":[[0,1],[2,1]]},"1032":{"position":[[0,1]]},"1037":{"position":[[0,1]]},"1039":{"position":[[0,1]]},"1041":{"position":[[0,1]]},"1043":{"position":[[0,1]]},"1045":{"position":[[0,1]]},"1047":{"position":[[0,1]]},"1049":{"position":[[0,1]]},"1051":{"position":[[0,1]]},"1054":{"position":[[0,1]]},"1056":{"position":[[0,1]]},"1058":{"position":[[0,1]]},"1059":{"position":[[0,1],[2,1],[8,6]]},"1061":{"position":[[0,1],[2,1],[7,6]]},"1063":{"position":[[0,1],[11,6]]},"1065":{"position":[[0,1]]},"1066":{"position":[[0,1],[2,1]]},"1068":{"position":[[0,1],[2,1],[10,7]]},"1070":{"position":[[0,1],[2,1]]},"1072":{"position":[[0,1],[2,1]]},"1074":{"position":[[0,1]]},"1076":{"position":[[0,1]]},"1079":{"position":[[0,1]]},"1081":{"position":[[0,1]]},"1083":{"position":[[0,1],[6,6],[13,6],[20,3],[24,1],[26,3],[30,4]]},"1084":{"position":[[0,1]]},"1086":{"position":[[0,1]]},"1088":{"position":[[0,1],[6,4]]},"1089":{"position":[[0,1],[2,1],[9,2]]},"1091":{"position":[[0,1],[2,1]]},"1093":{"position":[[0,1],[2,1]]},"1095":{"position":[[0,1],[2,1]]},"1097":{"position":[[0,1],[2,1]]},"1099":{"position":[[0,1],[3,4],[11,7]]},"1101":{"position":[[0,1]]},"1103":{"position":[[0,1]]},"1105":{"position":[[3,4]]},"1106":{"position":[[0,1],[2,1],[9,2]]},"1108":{"position":[[0,1],[2,1]]},"1110":{"position":[[0,1],[2,1]]},"1112":{"position":[[0,1],[2,1]]},"1114":{"position":[[0,1],[2,1]]},"1116":{"position":[[0,1],[3,4],[11,7]]},"1118":{"position":[[0,1]]},"1120":{"position":[[0,1]]},"1123":{"position":[[0,1],[3,3]]},"1125":{"position":[[0,1],[2,1],[4,3]]},"1127":{"position":[[0,1],[2,1],[4,3]]},"1129":{"position":[[0,1],[3,3]]},"1130":{"position":[[0,1],[2,1]]},"1132":{"position":[[0,1],[2,1]]},"1134":{"position":[[0,1],[3,3]]},"1135":{"position":[[0,1],[2,1],[6,3]]},"1137":{"position":[[0,1],[2,1]]},"1139":{"position":[[0,1],[2,1]]},"1141":{"position":[[0,1],[2,1]]},"1143":{"position":[[0,1],[2,1]]},"1145":{"position":[[0,1],[2,1]]},"1147":{"position":[[0,1],[2,1]]},"1149":{"position":[[0,1]]},"1150":{"position":[[0,1],[2,1]]},"1152":{"position":[[0,1],[2,1]]},"1154":{"position":[[0,1],[2,1],[8,11]]},"1156":{"position":[[0,1],[2,1],[8,11]]},"1158":{"position":[[0,1],[2,1]]},"1160":{"position":[[0,1],[2,1]]},"1162":{"position":[[0,1],[2,1]]},"1164":{"position":[[0,1]]},"1165":{"position":[[0,1],[2,1]]},"1167":{"position":[[0,1],[2,1]]},"1169":{"position":[[0,1],[2,1]]},"1171":{"position":[[0,1]]},"1172":{"position":[[0,1],[2,1]]},"1174":{"position":[[0,1],[2,1]]},"1176":{"position":[[0,1],[2,1]]},"1178":{"position":[[0,1],[3,3]]},"1179":{"position":[[0,1],[2,1],[4,6]]},"1181":{"position":[[0,1],[2,1]]},"1183":{"position":[[0,1]]},"1196":{"position":[[0,1],[3,4],[8,6]]},"1198":{"position":[[0,1],[9,3],[13,4]]},"1199":{"position":[[0,1],[2,1]]},"1201":{"position":[[0,1],[2,1]]},"1203":{"position":[[0,1],[6,3]]},"1204":{"position":[[0,1],[2,1]]},"1206":{"position":[[0,1],[2,1]]},"1208":{"position":[[0,1]]},"1209":{"position":[[0,1],[2,1],[6,4]]},"1211":{"position":[[0,1],[2,1],[6,6]]},"1213":{"position":[[0,1]]},"1215":{"position":[[0,1]]},"1217":{"position":[[0,1]]}}}],["一万句",{"_index":6,"t":{"8":{"position":[[3,3]]}}}],["一个",{"_index":50,"t":{"161":{"position":[[7,2]]},"650":{"position":[[7,2]]},"1063":{"position":[[5,2]]}}}],["一句",{"_index":4,"t":{"8":{"position":[[0,2]]}}}],["不到",{"_index":236,"t":{"853":{"position":[[10,2]]}}}],["不必",{"_index":156,"t":{"369":{"position":[[0,2]]},"878":{"position":[[0,2]]}}}],["个人",{"_index":175,"t":{"418":{"position":[[0,2]]},"850":{"position":[[0,2]]}}}],["中",{"_index":97,"t":{"261":{"position":[[7,1]]},"266":{"position":[[7,1]]},"287":{"position":[[7,1]]},"297":{"position":[[7,1]]},"311":{"position":[[7,1]]},"316":{"position":[[7,1]]},"354":{"position":[[7,1]]},"359":{"position":[[7,1]]},"381":{"position":[[7,1]]},"391":{"position":[[7,1]]},"723":{"position":[[7,1]]},"728":{"position":[[7,1]]},"763":{"position":[[7,1]]},"773":{"position":[[7,1]]},"787":{"position":[[7,1]]},"792":{"position":[[7,1]]},"813":{"position":[[7,1]]},"823":{"position":[[7,1]]},"863":{"position":[[7,1]]},"868":{"position":[[7,1]]},"919":{"position":[[3,1]]},"1061":{"position":[[16,1]]},"1139":{"position":[[8,1]]}}}],["中间件",{"_index":118,"t":{"276":{"position":[[8,3]]},"394":{"position":[[4,3]]},"802":{"position":[[8,3]]},"826":{"position":[[4,3]]}}}],["为什么",{"_index":148,"t":{"349":{"position":[[3,3]]},"858":{"position":[[3,3]]}}}],["主程序",{"_index":33,"t":{"118":{"position":[[4,3]]},"137":{"position":[[4,3]]},"583":{"position":[[4,3]]},"600":{"position":[[4,3]]}}}],["举例",{"_index":338,"t":{"1189":{"position":[[0,2]]}}}],["事件",{"_index":218,"t":{"540":{"position":[[16,2]]}}}],["交互",{"_index":143,"t":{"335":{"position":[[11,2]]},"747":{"position":[[11,2]]}}}],["人类",{"_index":0,"t":{"4":{"position":[[0,2]]}}}],["代替",{"_index":131,"t":{"298":{"position":[[8,2]]},"362":{"position":[[6,2]]},"774":{"position":[[8,2]]},"871":{"position":[[6,2]]}}}],["代码",{"_index":30,"t":{"113":{"position":[[3,2]]},"148":{"position":[[3,2]]},"156":{"position":[[3,2]]},"192":{"position":[[3,2]]},"202":{"position":[[3,2]]},"213":{"position":[[3,2]]},"225":{"position":[[3,2]]},"387":{"position":[[10,2]]},"389":{"position":[[13,2]]},"595":{"position":[[3,2]]},"610":{"position":[[3,2]]},"645":{"position":[[3,2]]},"657":{"position":[[3,2]]},"665":{"position":[[3,2]]},"675":{"position":[[3,2]]},"687":{"position":[[3,2]]},"819":{"position":[[10,2]]},"821":{"position":[[13,2]]}}}],["任意",{"_index":242,"t":{"927":{"position":[[17,2]]}}}],["优化",{"_index":38,"t":{"122":{"position":[[4,2]]},"340":{"position":[[17,2]]},"604":{"position":[[4,2]]},"752":{"position":[[17,2]]},"994":{"position":[[5,2]]},"1213":{"position":[[5,2]]}}}],["优点",{"_index":150,"t":{"350":{"position":[[0,2]]},"462":{"position":[[4,2]]},"859":{"position":[[0,2]]},"906":{"position":[[4,2]]}}}],["优缺点",{"_index":188,"t":{"446":{"position":[[4,3]]},"453":{"position":[[4,3]]},"458":{"position":[[4,3]]},"890":{"position":[[4,3]]},"897":{"position":[[4,3]]},"902":{"position":[[4,3]]},"941":{"position":[[0,3]]},"945":{"position":[[0,3]]},"949":{"position":[[0,3]]}}}],["传递",{"_index":205,"t":{"512":{"position":[[4,2]]}}}],["体",{"_index":239,"t":{"917":{"position":[[2,1]]},"931":{"position":[[3,1]]},"964":{"position":[[9,1]]},"965":{"position":[[8,1]]},"967":{"position":[[8,1]]},"981":{"position":[[6,1]]},"990":{"position":[[8,1]]},"1047":{"position":[[5,1]]}}}],["何时",{"_index":154,"t":{"366":{"position":[[3,2]]},"875":{"position":[[3,2]]},"919":{"position":[[4,2]]}}}],["作为",{"_index":306,"t":{"1099":{"position":[[8,2]]},"1116":{"position":[[8,2]]}}}],["使用",{"_index":106,"t":{"267":{"position":[[4,2]]},"298":{"position":[[4,2]]},"340":{"position":[[5,2]]},"382":{"position":[[4,2]]},"404":{"position":[[4,2]]},"408":{"position":[[6,2]]},"485":{"position":[[3,2]]},"486":{"position":[[6,2]]},"508":{"position":[[4,2]]},"510":{"position":[[4,2]]},"520":{"position":[[4,2]]},"752":{"position":[[5,2]]},"774":{"position":[[4,2]]},"793":{"position":[[4,2]]},"814":{"position":[[4,2]]},"836":{"position":[[4,2]]},"840":{"position":[[6,2]]},"919":{"position":[[6,2]]},"921":{"position":[[4,2]]},"995":{"position":[[4,2]]},"997":{"position":[[4,2]]},"1017":{"position":[[4,2]]},"1019":{"position":[[12,2]]},"1021":{"position":[[4,2]]},"1041":{"position":[[5,2]]},"1065":{"position":[[3,2]]},"1130":{"position":[[4,2]]},"1198":{"position":[[3,2]]},"1203":{"position":[[3,2]]}}}],["例子",{"_index":100,"t":{"262":{"position":[[10,2]]},"312":{"position":[[10,2]]},"355":{"position":[[10,2]]},"724":{"position":[[10,2]]},"788":{"position":[[10,2]]},"864":{"position":[[10,2]]}}}],["依赖",{"_index":20,"t":{"32":{"position":[[4,2]]},"37":{"position":[[6,2]]},"328":{"position":[[3,2]]},"740":{"position":[[3,2]]}}}],["保存",{"_index":92,"t":{"248":{"position":[[10,2]]},"710":{"position":[[10,2]]}}}],["信号处理",{"_index":305,"t":{"1095":{"position":[[4,4]]},"1112":{"position":[[4,4]]}}}],["信息",{"_index":226,"t":{"558":{"position":[[5,2]]},"560":{"position":[[5,2]]},"567":{"position":[[7,2]]},"965":{"position":[[11,2]]},"1049":{"position":[[7,2]]}}}],["修改",{"_index":181,"t":{"430":{"position":[[4,2]]},"962":{"position":[[5,2]]}}}],["值",{"_index":256,"t":{"960":{"position":[[12,1]]}}}],["停止",{"_index":91,"t":{"248":{"position":[[4,2]]},"710":{"position":[[4,2]]}}}],["僵尸",{"_index":337,"t":{"1187":{"position":[[2,2]]}}}],["儿子",{"_index":340,"t":{"1193":{"position":[[2,2]]}}}],["关键",{"_index":53,"t":{"167":{"position":[[19,2]]},"620":{"position":[[19,2]]}}}],["其他",{"_index":173,"t":{"416":{"position":[[0,2]]},"848":{"position":[[0,2]]},"1029":{"position":[[3,2]]}}}],["兼容性",{"_index":65,"t":{"175":{"position":[[13,3]]},"628":{"position":[[13,3]]}}}],["内存",{"_index":220,"t":{"556":{"position":[[3,2]]},"563":{"position":[[5,2]]},"1097":{"position":[[4,2]]},"1114":{"position":[[4,2]]},"1145":{"position":[[7,2]]},"1174":{"position":[[4,2]]}}}],["内核",{"_index":83,"t":{"243":{"position":[[3,2]]},"705":{"position":[[3,2]]}}}],["内置",{"_index":291,"t":{"1043":{"position":[[6,2]]}}}],["冒号",{"_index":14,"t":{"27":{"position":[[6,2],[15,2]]},"29":{"position":[[6,2]]},"34":{"position":[[7,2]]}}}],["函数",{"_index":39,"t":{"122":{"position":[[6,2]]},"364":{"position":[[4,2]]},"392":{"position":[[4,2]]},"460":{"position":[[3,2]]},"604":{"position":[[6,2]]},"824":{"position":[[4,2]]},"873":{"position":[[4,2]]},"904":{"position":[[3,2]]},"915":{"position":[[2,2]]}}}],["分离",{"_index":330,"t":{"1167":{"position":[[4,2]]}}}],["切换",{"_index":325,"t":{"1162":{"position":[[4,2]]}}}],["列表",{"_index":289,"t":{"1027":{"position":[[6,2]]}}}],["创建",{"_index":170,"t":{"404":{"position":[[10,2]]},"442":{"position":[[9,2]]},"477":{"position":[[4,2]]},"836":{"position":[[10,2]]},"886":{"position":[[9,2]]},"1063":{"position":[[3,2]]}}}],["初始化",{"_index":85,"t":{"244":{"position":[[11,3]]},"706":{"position":[[11,3]]}}}],["判断",{"_index":144,"t":{"337":{"position":[[17,2]]},"340":{"position":[[7,2]]},"749":{"position":[[17,2]]},"752":{"position":[[7,2]]},"933":{"position":[[3,2]]}}}],["削弱",{"_index":126,"t":{"293":{"position":[[12,2]]},"769":{"position":[[12,2]]}}}],["前置条件",{"_index":127,"t":{"293":{"position":[[14,4]]},"769":{"position":[[14,4]]}}}],["功能",{"_index":27,"t":{"45":{"position":[[0,2]]},"52":{"position":[[0,2]]},"59":{"position":[[0,2]]},"66":{"position":[[0,2]]},"75":{"position":[[0,2]]},"82":{"position":[[0,2]]},"89":{"position":[[0,2]]},"96":{"position":[[0,2]]},"103":{"position":[[0,2]]}}}],["加强",{"_index":134,"t":{"300":{"position":[[8,2]]},"776":{"position":[[8,2]]}}}],["加载",{"_index":90,"t":{"246":{"position":[[13,2]]},"708":{"position":[[13,2]]},"1169":{"position":[[4,2]]}}}],["包",{"_index":202,"t":{"499":{"position":[[11,1]]},"1130":{"position":[[6,1]]}}}],["化",{"_index":59,"t":{"173":{"position":[[7,1]]},"250":{"position":[[8,1]]},"626":{"position":[[7,1]]},"712":{"position":[[8,1]]}}}],["区别",{"_index":16,"t":{"27":{"position":[[19,2]]},"70":{"position":[[0,2]]}}}],["协议",{"_index":63,"t":{"175":{"position":[[5,2]]},"628":{"position":[[5,2]]}}}],["单",{"_index":13,"t":{"27":{"position":[[5,1]]},"29":{"position":[[5,1]]}}}],["单一",{"_index":153,"t":{"364":{"position":[[8,2]]},"873":{"position":[[8,2]]}}}],["单元测试",{"_index":281,"t":{"1005":{"position":[[4,4]]}}}],["南",{"_index":2,"t":{"6":{"position":[[0,1]]}}}],["历史",{"_index":309,"t":{"1125":{"position":[[8,2]]}}}],["原则",{"_index":54,"t":{"167":{"position":[[21,2]]},"414":{"position":[[5,2]]},"416":{"position":[[4,2]]},"620":{"position":[[21,2]]},"846":{"position":[[5,2]]},"848":{"position":[[4,2]]}}}],["原理",{"_index":294,"t":{"1056":{"position":[[5,2]]},"1178":{"position":[[9,2]]},"1181":{"position":[[8,2]]}}}],["参数",{"_index":284,"t":{"1019":{"position":[[9,2]]},"1027":{"position":[[8,2]]},"1137":{"position":[[7,2]]}}}],["参考",{"_index":308,"t":{"1103":{"position":[[3,2]]},"1120":{"position":[[3,2]]},"1183":{"position":[[3,2]]}}}],["双",{"_index":15,"t":{"27":{"position":[[14,1]]},"34":{"position":[[6,1]]}}}],["反",{"_index":75,"t":{"185":{"position":[[3,1]]},"638":{"position":[[3,1]]}}}],["反射",{"_index":255,"t":{"956":{"position":[[3,2]]},"958":{"position":[[3,2]]},"962":{"position":[[3,2]]},"964":{"position":[[3,2]]},"969":{"position":[[3,2]]},"971":{"position":[[3,2]]},"973":{"position":[[3,2]]}}}],["发展",{"_index":310,"t":{"1125":{"position":[[11,2]]}}}],["变量",{"_index":40,"t":{"122":{"position":[[9,2]]},"472":{"position":[[6,2]]},"604":{"position":[[9,2]]},"960":{"position":[[6,2]]},"1145":{"position":[[4,2]]}}}],["变量值",{"_index":257,"t":{"962":{"position":[[7,3]]}}}],["可扩展性",{"_index":57,"t":{"171":{"position":[[5,4]]},"624":{"position":[[5,4]]}}}],["司法",{"_index":7,"t":{"16":{"position":[[0,2]]}}}],["后果",{"_index":119,"t":{"278":{"position":[[9,2]]},"330":{"position":[[9,2]]},"352":{"position":[[6,2]]},"742":{"position":[[9,2]]},"804":{"position":[[9,2]]},"861":{"position":[[6,2]]}}}],["后置",{"_index":129,"t":{"295":{"position":[[14,2]]},"771":{"position":[[14,2]]}}}],["启动",{"_index":314,"t":{"1135":{"position":[[4,2]]}}}],["命令",{"_index":211,"t":{"516":{"position":[[10,2]]},"520":{"position":[[12,2]]},"1021":{"position":[[7,2]]},"1141":{"position":[[8,2]]}}}],["命令行",{"_index":283,"t":{"1019":{"position":[[6,3]]}}}],["命名",{"_index":41,"t":{"122":{"position":[[11,2]]},"604":{"position":[[11,2]]}}}],["哈希",{"_index":178,"t":{"426":{"position":[[6,2]]},"432":{"position":[[6,2]]}}}],["器",{"_index":74,"t":{"183":{"position":[[5,1]]},"402":{"position":[[8,1]]},"404":{"position":[[14,1]]},"442":{"position":[[11,1]]},"636":{"position":[[5,1]]},"834":{"position":[[8,1]]},"836":{"position":[[14,1]]},"886":{"position":[[11,1]]}}}],["回收",{"_index":222,"t":{"556":{"position":[[8,2]]},"1193":{"position":[[0,2]]}}}],["图形",{"_index":186,"t":{"442":{"position":[[7,2]]},"886":{"position":[[7,2]]}}}],["场景",{"_index":24,"t":{"39":{"position":[[13,2]]},"302":{"position":[[11,2]]},"396":{"position":[[11,2]]},"434":{"position":[[5,2]]},"464":{"position":[[10,2]]},"534":{"position":[[15,2]]},"778":{"position":[[11,2]]},"828":{"position":[[11,2]]},"908":{"position":[[10,2]]},"921":{"position":[[7,2]]},"923":{"position":[[6,2]]},"1065":{"position":[[5,2]]},"1127":{"position":[[9,2]]},"1217":{"position":[[7,2]]}}}],["垃圾",{"_index":221,"t":{"556":{"position":[[6,2]]}}}],["基本",{"_index":18,"t":{"30":{"position":[[4,2]]},"35":{"position":[[4,2]]},"425":{"position":[[3,2]]},"486":{"position":[[4,2]]},"501":{"position":[[16,2]]},"958":{"position":[[6,2]]},"1016":{"position":[[3,2]]},"1041":{"position":[[3,2]]},"1058":{"position":[[3,2]]},"1063":{"position":[[7,2]]},"1141":{"position":[[4,2]]}}}],["基本功能",{"_index":313,"t":{"1134":{"position":[[7,4]]}}}],["基本概念",{"_index":196,"t":{"471":{"position":[[3,4]]}}}],["基础",{"_index":166,"t":{"400":{"position":[[4,2]]},"530":{"position":[[4,2]]},"832":{"position":[[4,2]]},"1199":{"position":[[4,2]]},"1204":{"position":[[4,2]]}}}],["堆栈",{"_index":225,"t":{"558":{"position":[[3,2]]}}}],["增加",{"_index":49,"t":{"161":{"position":[[4,2]]},"337":{"position":[[4,2]]},"518":{"position":[[4,2]]},"650":{"position":[[4,2]]},"749":{"position":[[4,2]]}}}],["增强",{"_index":231,"t":{"565":{"position":[[5,2]]}}}],["处理",{"_index":232,"t":{"565":{"position":[[13,2]]},"964":{"position":[[5,2]]},"989":{"position":[[7,2]]},"992":{"position":[[8,2]]},"1002":{"position":[[8,2]]},"1025":{"position":[[4,2]]}}}],["处理错误",{"_index":292,"t":{"1049":{"position":[[3,4]]}}}],["复合",{"_index":266,"t":{"989":{"position":[[3,2]]}}}],["多",{"_index":318,"t":{"1150":{"position":[[4,1]]}}}],["多个",{"_index":214,"t":{"520":{"position":[[10,2]]}}}],["多种",{"_index":167,"t":{"402":{"position":[[12,2]]},"834":{"position":[[12,2]]}}}],["多线程",{"_index":319,"t":{"1152":{"position":[[4,3]]}}}],["子",{"_index":285,"t":{"1021":{"position":[[6,1]]}}}],["子类",{"_index":125,"t":{"293":{"position":[[10,2]]},"295":{"position":[[10,2]]},"769":{"position":[[10,2]]},"771":{"position":[[10,2]]}}}],["字",{"_index":258,"t":{"965":{"position":[[9,1]]}}}],["存储",{"_index":79,"t":{"238":{"position":[[5,2]]},"239":{"position":[[4,2]]},"700":{"position":[[5,2]]},"701":{"position":[[4,2]]}}}],["孤儿",{"_index":339,"t":{"1190":{"position":[[0,2]]}}}],["安装",{"_index":176,"t":{"423":{"position":[[3,2]]},"1014":{"position":[[3,2]]},"1039":{"position":[[3,2]]},"1081":{"position":[[3,2]]},"1086":{"position":[[3,2]]},"1129":{"position":[[6,2]]},"1130":{"position":[[10,2]]},"1132":{"position":[[8,2]]}}}],["完整",{"_index":172,"t":{"408":{"position":[[4,2]]},"840":{"position":[[4,2]]},"1009":{"position":[[3,2]]}}}],["定义",{"_index":46,"t":{"133":{"position":[[4,2]]},"579":{"position":[[4,2]]},"1019":{"position":[[4,2]]}}}],["定时",{"_index":93,"t":{"250":{"position":[[4,2]]},"712":{"position":[[4,2]]}}}],["实现",{"_index":45,"t":{"132":{"position":[[6,2]]},"135":{"position":[[4,2]]},"261":{"position":[[12,2]]},"287":{"position":[[12,2]]},"288":{"position":[[8,2]]},"311":{"position":[[12,2]]},"381":{"position":[[12,2]]},"382":{"position":[[8,2]]},"578":{"position":[[6,2]]},"581":{"position":[[4,2]]},"723":{"position":[[12,2]]},"763":{"position":[[12,2]]},"764":{"position":[[8,2]]},"787":{"position":[[12,2]]},"813":{"position":[[12,2]]},"814":{"position":[[8,2]]},"985":{"position":[[4,2]]},"987":{"position":[[4,2]]},"1178":{"position":[[7,2]]},"1181":{"position":[[6,2]]},"1198":{"position":[[18,2]]},"1199":{"position":[[6,2]]},"1203":{"position":[[12,2]]},"1204":{"position":[[6,2]]}}}],["实践",{"_index":104,"t":{"266":{"position":[[8,2]]},"297":{"position":[[8,2]]},"316":{"position":[[8,2]]},"359":{"position":[[8,2]]},"391":{"position":[[8,2]]},"492":{"position":[[5,2]]},"728":{"position":[[8,2]]},"773":{"position":[[8,2]]},"792":{"position":[[8,2]]},"823":{"position":[[8,2]]},"868":{"position":[[8,2]]},"973":{"position":[[7,2]]},"1007":{"position":[[5,2]]}}}],["实际",{"_index":112,"t":{"273":{"position":[[3,2]]},"302":{"position":[[7,2]]},"323":{"position":[[3,2]]},"396":{"position":[[7,2]]},"562":{"position":[[3,2]]},"735":{"position":[[3,2]]},"778":{"position":[[7,2]]},"799":{"position":[[3,2]]},"828":{"position":[[7,2]]},"1217":{"position":[[3,2]]}}}],["客户端",{"_index":108,"t":{"269":{"position":[[4,3]]},"795":{"position":[[4,3]]},"1208":{"position":[[3,3]]},"1209":{"position":[[10,3]]},"1211":{"position":[[12,3]]}}}],["家庭",{"_index":10,"t":{"22":{"position":[[0,2]]}}}],["寄存器",{"_index":317,"t":{"1147":{"position":[[4,3]]}}}],["密码",{"_index":179,"t":{"426":{"position":[[8,2]]},"428":{"position":[[6,2]]},"430":{"position":[[6,2]]}}}],["对比",{"_index":195,"t":{"466":{"position":[[5,2]]},"494":{"position":[[14,2]]},"910":{"position":[[5,2]]},"941":{"position":[[3,2]]},"945":{"position":[[3,2]]},"949":{"position":[[3,2]]},"951":{"position":[[11,2]]}}}],["小结",{"_index":194,"t":{"466":{"position":[[3,2]]},"910":{"position":[[3,2]]}}}],["尝试",{"_index":88,"t":{"246":{"position":[[9,2]]},"708":{"position":[[9,2]]}}}],["局限性",{"_index":261,"t":{"971":{"position":[[6,3]]}}}],["层",{"_index":117,"t":{"274":{"position":[[9,1]]},"800":{"position":[[9,1]]}}}],["展示",{"_index":233,"t":{"567":{"position":[[9,2]]}}}],["嵌套",{"_index":267,"t":{"990":{"position":[[4,2]]},"1047":{"position":[[6,2]]}}}],["工作",{"_index":293,"t":{"1056":{"position":[[3,2]]}}}],["工具",{"_index":230,"t":{"563":{"position":[[9,2]]}}}],["工厂",{"_index":169,"t":{"404":{"position":[[6,2]]},"441":{"position":[[5,2]]},"448":{"position":[[3,2]]},"455":{"position":[[5,2]]},"456":{"position":[[10,2]]},"460":{"position":[[6,2]]},"464":{"position":[[4,2]]},"836":{"position":[[6,2]]},"885":{"position":[[5,2]]},"892":{"position":[[3,2]]},"899":{"position":[[5,2]]},"900":{"position":[[10,2]]},"904":{"position":[[6,2]]},"908":{"position":[[4,2]]}}}],["布尔",{"_index":287,"t":{"1025":{"position":[[6,2]]}}}],["带",{"_index":209,"t":{"516":{"position":[[6,1]]},"1137":{"position":[[6,1]]}}}],["帧",{"_index":327,"t":{"1162":{"position":[[7,1]]}}}],["常见",{"_index":122,"t":{"292":{"position":[[9,2]]},"768":{"position":[[9,2]]},"1043":{"position":[[3,2]]},"1083":{"position":[[3,2]]},"1088":{"position":[[3,2]]},"1215":{"position":[[3,2]]}}}],["常见问题",{"_index":272,"t":{"999":{"position":[[3,4]]}}}],["并发",{"_index":66,"t":{"177":{"position":[[5,2]]},"630":{"position":[[5,2]]}}}],["序列化",{"_index":264,"t":{"978":{"position":[[7,3]]},"979":{"position":[[8,3]]},"983":{"position":[[8,3]]}}}],["库",{"_index":251,"t":{"938":{"position":[[14,1]]},"951":{"position":[[10,1]]},"978":{"position":[[5,1]]},"997":{"position":[[9,1]]},"1198":{"position":[[7,1]]}}}],["应用",{"_index":113,"t":{"273":{"position":[[5,2]]},"302":{"position":[[9,2]]},"323":{"position":[[5,2]]},"366":{"position":[[5,2]]},"367":{"position":[[2,2]]},"369":{"position":[[4,2]]},"396":{"position":[[9,2]]},"464":{"position":[[8,2]]},"562":{"position":[[5,2]]},"735":{"position":[[5,2]]},"778":{"position":[[9,2]]},"799":{"position":[[5,2]]},"828":{"position":[[9,2]]},"875":{"position":[[5,2]]},"876":{"position":[[2,2]]},"878":{"position":[[4,2]]},"908":{"position":[[8,2]]},"1127":{"position":[[7,2]]},"1217":{"position":[[5,2]]}}}],["应用程序",{"_index":302,"t":{"1072":{"position":[[12,4]]}}}],["应该",{"_index":155,"t":{"367":{"position":[[0,2]]},"876":{"position":[[0,2]]}}}],["建议",{"_index":342,"t":{"1206":{"position":[[8,2]]},"1213":{"position":[[7,2]]}}}],["式",{"_index":193,"t":{"460":{"position":[[5,1]]},"904":{"position":[[5,1]]}}}],["引用",{"_index":275,"t":{"1000":{"position":[[6,2]]}}}],["引言",{"_index":262,"t":{"976":{"position":[[3,2]]}}}],["强化",{"_index":128,"t":{"295":{"position":[[12,2]]},"771":{"position":[[12,2]]}}}],["循环",{"_index":274,"t":{"1000":{"position":[[4,2]]}}}],["微内核",{"_index":35,"t":{"118":{"position":[[10,3]]},"127":{"position":[[3,3]]},"137":{"position":[[10,3]]},"573":{"position":[[3,3]]},"583":{"position":[[10,3]]},"600":{"position":[[10,3]]}}}],["性",{"_index":70,"t":{"179":{"position":[[8,1]]},"632":{"position":[[8,1]]}}}],["性能",{"_index":269,"t":{"994":{"position":[[3,2]]},"1213":{"position":[[3,2]]}}}],["总结",{"_index":25,"t":{"39":{"position":[[15,2]]},"143":{"position":[[3,2]]},"187":{"position":[[3,2]]},"280":{"position":[[3,2]]},"304":{"position":[[3,2]]},"332":{"position":[[3,2]]},"371":{"position":[[3,2]]},"410":{"position":[[3,2]]},"418":{"position":[[2,2]]},"436":{"position":[[3,2]]},"496":{"position":[[3,2]]},"552":{"position":[[0,2]]},"589":{"position":[[3,2]]},"640":{"position":[[3,2]]},"744":{"position":[[3,2]]},"780":{"position":[[3,2]]},"806":{"position":[[3,2]]},"842":{"position":[[3,2]]},"850":{"position":[[2,2]]},"880":{"position":[[3,2]]},"953":{"position":[[0,2]]},"1032":{"position":[[3,2]]},"1034":{"position":[[2,2]]},"1076":{"position":[[3,2]]},"1219":{"position":[[0,2]]}}}],["恢复",{"_index":298,"t":{"1066":{"position":[[7,2]]}}}],["情况",{"_index":123,"t":{"292":{"position":[[11,2]]},"293":{"position":[[6,2]]},"295":{"position":[[6,2]]},"367":{"position":[[8,2]]},"768":{"position":[[11,2]]},"769":{"position":[[6,2]]},"771":{"position":[[6,2]]},"876":{"position":[[8,2]]}}}],["执行命令",{"_index":297,"t":{"1061":{"position":[[17,4]]}}}],["扩展",{"_index":47,"t":{"141":{"position":[[3,2]]},"384":{"position":[[12,2]]},"406":{"position":[[13,2]]},"587":{"position":[[3,2]]},"816":{"position":[[12,2]]},"838":{"position":[[13,2]]}}}],["找",{"_index":235,"t":{"853":{"position":[[9,1]]}}}],["技巧",{"_index":105,"t":{"266":{"position":[[14,2]]},"297":{"position":[[14,2]]},"316":{"position":[[14,2]]},"359":{"position":[[14,2]]},"391":{"position":[[16,2]]},"728":{"position":[[14,2]]},"773":{"position":[[14,2]]},"792":{"position":[[14,2]]},"823":{"position":[[16,2]]},"868":{"position":[[14,2]]},"1149":{"position":[[7,2]]}}}],["报错",{"_index":240,"t":{"925":{"position":[[12,2]]}}}],["抽象",{"_index":190,"t":{"455":{"position":[[3,2]]},"899":{"position":[[3,2]]}}}],["持久",{"_index":94,"t":{"250":{"position":[[6,2]]},"712":{"position":[[6,2]]}}}],["按钮",{"_index":191,"t":{"456":{"position":[[13,2]]},"900":{"position":[[13,2]]}}}],["捕获",{"_index":321,"t":{"1156":{"position":[[4,2]]}}}],["接口",{"_index":107,"t":{"267":{"position":[[6,2]]},"269":{"position":[[9,2]]},"271":{"position":[[6,2]]},"288":{"position":[[6,2]]},"360":{"position":[[4,2]]},"382":{"position":[[6,2]]},"764":{"position":[[6,2]]},"793":{"position":[[6,2]]},"795":{"position":[[9,2]]},"797":{"position":[[6,2]]},"814":{"position":[[6,2]]},"869":{"position":[[4,2]]},"927":{"position":[[1,2]]},"985":{"position":[[15,2]]},"987":{"position":[[17,2]]}}}],["接口定义",{"_index":138,"t":{"321":{"position":[[4,4]]},"733":{"position":[[4,4]]}}}],["接口类型",{"_index":268,"t":{"992":{"position":[[4,4]]}}}],["接口隔离",{"_index":133,"t":{"300":{"position":[[4,4]]},"776":{"position":[[4,4]]}}}],["控制",{"_index":304,"t":{"1093":{"position":[[6,2]]},"1110":{"position":[[6,2]]}}}],["推荐",{"_index":215,"t":{"526":{"position":[[11,2]]},"921":{"position":[[2,2]]},"923":{"position":[[3,2]]},"953":{"position":[[3,2]]}}}],["操作",{"_index":224,"t":{"556":{"position":[[12,2]]},"558":{"position":[[7,2]]},"1091":{"position":[[6,2]]},"1108":{"position":[[6,2]]},"1145":{"position":[[9,2]]},"1147":{"position":[[7,2]]}}}],["支付",{"_index":162,"t":{"384":{"position":[[7,2]]},"816":{"position":[[7,2]]}}}],["支持",{"_index":147,"t":{"342":{"position":[[3,2]]},"402":{"position":[[10,2]]},"754":{"position":[[3,2]]},"834":{"position":[[10,2]]},"978":{"position":[[10,2]]}}}],["改动",{"_index":31,"t":{"113":{"position":[[5,2]]},"148":{"position":[[5,2]]},"156":{"position":[[5,2]]},"192":{"position":[[5,2]]},"202":{"position":[[5,2]]},"213":{"position":[[5,2]]},"225":{"position":[[5,2]]},"595":{"position":[[5,2]]},"610":{"position":[[5,2]]},"645":{"position":[[5,2]]},"657":{"position":[[5,2]]},"665":{"position":[[5,2]]},"675":{"position":[[5,2]]},"687":{"position":[[5,2]]}}}],["改进",{"_index":102,"t":{"264":{"position":[[10,2]]},"290":{"position":[[10,2]]},"314":{"position":[[10,2]]},"357":{"position":[[10,2]]},"726":{"position":[[10,2]]},"766":{"position":[[10,2]]},"790":{"position":[[10,2]]},"866":{"position":[[10,2]]}}}],["数据库",{"_index":115,"t":{"274":{"position":[[4,3]]},"324":{"position":[[4,3]]},"449":{"position":[[7,3]]},"736":{"position":[[4,3]]},"800":{"position":[[4,3]]},"893":{"position":[[7,3]]}}}],["数据格式",{"_index":64,"t":{"175":{"position":[[8,4]]},"628":{"position":[[8,4]]}}}],["文件",{"_index":80,"t":{"239":{"position":[[6,2]]},"701":{"position":[[6,2]]},"1091":{"position":[[4,2]]},"1108":{"position":[[4,2]]}}}],["文化",{"_index":8,"t":{"18":{"position":[[0,2]]}}}],["文本框",{"_index":192,"t":{"456":{"position":[[18,3]]},"900":{"position":[[18,3]]}}}],["断点",{"_index":316,"t":{"1143":{"position":[[4,2]]},"1181":{"position":[[4,2]]}}}],["断言",{"_index":244,"t":{"929":{"position":[[2,2]]}}}],["新",{"_index":161,"t":{"384":{"position":[[6,1]]},"816":{"position":[[6,1]]}}}],["方",{"_index":140,"t":{"321":{"position":[[11,1]]},"733":{"position":[[11,1]]}}}],["方向",{"_index":48,"t":{"141":{"position":[[5,2]]},"587":{"position":[[5,2]]}}}],["方式",{"_index":98,"t":{"261":{"position":[[14,2]]},"287":{"position":[[14,2]]},"311":{"position":[[14,2]]},"381":{"position":[[14,2]]},"384":{"position":[[9,2]]},"526":{"position":[[13,2]]},"723":{"position":[[14,2]]},"763":{"position":[[14,2]]},"787":{"position":[[14,2]]},"813":{"position":[[14,2]]},"816":{"position":[[9,2]]},"1208":{"position":[[8,2]]}}}],["方案",{"_index":103,"t":{"264":{"position":[[12,2]]},"290":{"position":[[12,2]]},"314":{"position":[[12,2]]},"726":{"position":[[12,2]]},"766":{"position":[[12,2]]},"790":{"position":[[12,2]]},"1099":{"position":[[22,2]]},"1116":{"position":[[22,2]]}}}],["方法",{"_index":137,"t":{"319":{"position":[[4,2]]},"404":{"position":[[8,2]]},"448":{"position":[[5,2]]},"476":{"position":[[5,2]]},"479":{"position":[[9,2]]},"481":{"position":[[11,2]]},"483":{"position":[[14,2]]},"731":{"position":[[4,2]]},"836":{"position":[[8,2]]},"853":{"position":[[12,2]]},"892":{"position":[[5,2]]},"917":{"position":[[3,2]]},"969":{"position":[[7,2]]},"1019":{"position":[[19,2]]}}}],["日志",{"_index":77,"t":{"228":{"position":[[4,2]]},"398":{"position":[[7,2]]},"402":{"position":[[6,2]]},"404":{"position":[[12,2]]},"451":{"position":[[7,2]]},"690":{"position":[[4,2]]},"830":{"position":[[7,2]]},"834":{"position":[[6,2]]},"836":{"position":[[12,2]]},"895":{"position":[[7,2]]}}}],["时",{"_index":87,"t":{"246":{"position":[[8,1]]},"248":{"position":[[8,1]]},"708":{"position":[[8,1]]},"710":{"position":[[8,1]]},"1165":{"position":[[6,1]]}}}],["时间",{"_index":277,"t":{"1002":{"position":[[4,2]]}}}],["明史",{"_index":3,"t":{"6":{"position":[[1,2]]}}}],["是否",{"_index":183,"t":{"432":{"position":[[8,2]]}}}],["普通",{"_index":238,"t":{"915":{"position":[[0,2]]}}}],["更新",{"_index":184,"t":{"432":{"position":[[12,2]]}}}],["替代",{"_index":307,"t":{"1099":{"position":[[20,2]]},"1116":{"position":[[20,2]]}}}],["最佳",{"_index":201,"t":{"492":{"position":[[3,2]]},"973":{"position":[[5,2]]},"1007":{"position":[[3,2]]}}}],["服务",{"_index":36,"t":{"118":{"position":[[16,2]]},"135":{"position":[[8,2]]},"137":{"position":[[16,2]]},"195":{"position":[[4,2]]},"216":{"position":[[8,2]]},"228":{"position":[[6,2]]},"246":{"position":[[6,2]]},"248":{"position":[[6,2]]},"326":{"position":[[8,2]]},"581":{"position":[[8,2]]},"583":{"position":[[16,2]]},"600":{"position":[[16,2]]},"668":{"position":[[4,2]]},"678":{"position":[[8,2]]},"690":{"position":[[6,2]]},"708":{"position":[[6,2]]},"710":{"position":[[6,2]]},"738":{"position":[[8,2]]}}}],["机制",{"_index":52,"t":{"167":{"position":[[16,2]]},"620":{"position":[[16,2]]}}}],["条件",{"_index":130,"t":{"295":{"position":[[16,2]]},"472":{"position":[[4,2]]},"771":{"position":[[16,2]]}}}],["松",{"_index":55,"t":{"169":{"position":[[6,1]]},"622":{"position":[[6,1]]}}}],["构建",{"_index":227,"t":{"560":{"position":[[3,2]]},"567":{"position":[[5,2]]}}}],["构造函数",{"_index":135,"t":{"317":{"position":[[4,4]]},"729":{"position":[[4,4]]}}}],["查杀",{"_index":336,"t":{"1187":{"position":[[0,2]]}}}],["标准",{"_index":263,"t":{"978":{"position":[[3,2]]},"1198":{"position":[[5,2]]},"1209":{"position":[[4,2]]}}}],["标志",{"_index":288,"t":{"1025":{"position":[[8,2]]}}}],["标签",{"_index":260,"t":{"967":{"position":[[9,2]]},"981":{"position":[[7,2]]},"1043":{"position":[[10,2]]}}}],["栈",{"_index":326,"t":{"1162":{"position":[[6,1]]}}}],["校验",{"_index":180,"t":{"428":{"position":[[4,2]]}}}],["核心",{"_index":32,"t":{"114":{"position":[[11,2]]},"127":{"position":[[6,2]]},"130":{"position":[[4,2]]},"133":{"position":[[14,2]]},"149":{"position":[[11,2]]},"157":{"position":[[11,2]]},"193":{"position":[[11,2]]},"204":{"position":[[11,2]]},"214":{"position":[[11,2]]},"226":{"position":[[11,2]]},"259":{"position":[[3,2]]},"285":{"position":[[3,2]]},"309":{"position":[[3,2]]},"379":{"position":[[3,2]]},"476":{"position":[[3,2]]},"573":{"position":[[6,2]]},"576":{"position":[[4,2]]},"579":{"position":[[14,2]]},"596":{"position":[[11,2]]},"612":{"position":[[11,2]]},"646":{"position":[[11,2]]},"658":{"position":[[11,2]]},"666":{"position":[[11,2]]},"676":{"position":[[11,2]]},"688":{"position":[[11,2]]},"721":{"position":[[3,2]]},"761":{"position":[[3,2]]},"785":{"position":[[3,2]]},"811":{"position":[[3,2]]}}}],["格式",{"_index":278,"t":{"1002":{"position":[[6,2]]}}}],["框架",{"_index":141,"t":{"328":{"position":[[7,2]]},"740":{"position":[[7,2]]},"1203":{"position":[[10,2]]}}}],["案例",{"_index":114,"t":{"273":{"position":[[7,2]]},"323":{"position":[[7,2]]},"735":{"position":[[7,2]]},"799":{"position":[[7,2]]},"1171":{"position":[[5,2]]}}}],["检查",{"_index":332,"t":{"1174":{"position":[[8,2]]}}}],["检测",{"_index":334,"t":{"1176":{"position":[[6,2]]}}}],["概念",{"_index":95,"t":{"259":{"position":[[5,2]]},"285":{"position":[[5,2]]},"309":{"position":[[5,2]]},"379":{"position":[[5,2]]},"721":{"position":[[5,2]]},"761":{"position":[[5,2]]},"785":{"position":[[5,2]]},"811":{"position":[[5,2]]}}}],["概述",{"_index":12,"t":{"25":{"position":[[3,2]]},"257":{"position":[[3,2]]},"283":{"position":[[3,2]]},"307":{"position":[[3,2]]},"347":{"position":[[3,2]]},"377":{"position":[[3,2]]},"421":{"position":[[3,2]]},"439":{"position":[[3,2]]},"469":{"position":[[3,2]]},"719":{"position":[[3,2]]},"759":{"position":[[3,2]]},"783":{"position":[[3,2]]},"809":{"position":[[3,2]]},"856":{"position":[[3,2]]},"883":{"position":[[3,2]]},"956":{"position":[[14,2]]},"1054":{"position":[[3,2]]},"1123":{"position":[[7,2]]}}}],["模块",{"_index":82,"t":{"241":{"position":[[8,2]]},"703":{"position":[[8,2]]}}}],["模型",{"_index":67,"t":{"177":{"position":[[7,2]]},"630":{"position":[[7,2]]}}}],["模式",{"_index":76,"t":{"185":{"position":[[4,2]]},"344":{"position":[[18,2]]},"392":{"position":[[8,2]]},"394":{"position":[[7,2]]},"464":{"position":[[6,2]]},"485":{"position":[[5,2]]},"486":{"position":[[8,2]]},"638":{"position":[[4,2]]},"756":{"position":[[18,2]]},"824":{"position":[[8,2]]},"826":{"position":[[7,2]]},"908":{"position":[[6,2]]}}}],["死锁",{"_index":333,"t":{"1176":{"position":[[4,2]]}}}],["段",{"_index":259,"t":{"965":{"position":[[10,1]]},"1172":{"position":[[4,1]]}}}],["池",{"_index":271,"t":{"995":{"position":[[8,1]]}}}],["污染",{"_index":111,"t":{"271":{"position":[[8,2]]},"797":{"position":[[8,2]]}}}],["泄漏",{"_index":331,"t":{"1174":{"position":[[6,2]]}}}],["注入",{"_index":136,"t":{"317":{"position":[[8,2]]},"319":{"position":[[6,2]]},"328":{"position":[[5,2]]},"729":{"position":[[8,2]]},"731":{"position":[[6,2]]},"740":{"position":[[5,2]]}}}],["注册",{"_index":86,"t":{"246":{"position":[[4,2]]},"708":{"position":[[4,2]]}}}],["注意事项",{"_index":200,"t":{"490":{"position":[[3,4]]},"569":{"position":[[3,4]]},"1074":{"position":[[3,4]]}}}],["流式",{"_index":254,"t":{"947":{"position":[[32,2]]}}}],["测试",{"_index":279,"t":{"1004":{"position":[[3,2]]}}}],["消费者",{"_index":199,"t":{"488":{"position":[[8,3]]}}}],["添加",{"_index":160,"t":{"384":{"position":[[4,2]]},"406":{"position":[[4,2]]},"816":{"position":[[4,2]]},"838":{"position":[[4,2]]},"1165":{"position":[[7,2]]}}}],["源码",{"_index":312,"t":{"1132":{"position":[[4,2]]}}}],["点",{"_index":322,"t":{"1156":{"position":[[6,1]]}}}],["版本",{"_index":151,"t":{"357":{"position":[[12,2]]},"866":{"position":[[12,2]]},"1072":{"position":[[9,2]]}}}],["特定",{"_index":109,"t":{"269":{"position":[[7,2]]},"795":{"position":[[7,2]]},"1072":{"position":[[7,2]]}}}],["特点",{"_index":43,"t":{"128":{"position":[[4,2]]},"528":{"position":[[13,2]]},"574":{"position":[[4,2]]},"1034":{"position":[[0,2]]}}}],["状态",{"_index":78,"t":{"238":{"position":[[3,2]]},"241":{"position":[[4,2]]},"246":{"position":[[15,2]]},"248":{"position":[[12,2]]},"250":{"position":[[9,2]]},"337":{"position":[[15,2]]},"700":{"position":[[3,2]]},"703":{"position":[[4,2]]},"708":{"position":[[15,2]]},"710":{"position":[[12,2]]},"712":{"position":[[9,2]]},"749":{"position":[[15,2]]}}}],["环境",{"_index":296,"t":{"1059":{"position":[[15,2]]},"1061":{"position":[[14,2]]},"1063":{"position":[[18,2]]},"1068":{"position":[[7,2]]},"1206":{"position":[[6,2]]}}}],["环境变量",{"_index":208,"t":{"514":{"position":[[6,4]]},"1023":{"position":[[6,4]]}}}],["理解",{"_index":145,"t":{"338":{"position":[[5,2]]},"750":{"position":[[5,2]]}}}],["生产",{"_index":341,"t":{"1206":{"position":[[4,2]]}}}],["生产者",{"_index":198,"t":{"488":{"position":[[4,3]]}}}],["生成",{"_index":177,"t":{"426":{"position":[[4,2]]}}}],["用法",{"_index":17,"t":{"29":{"position":[[10,2]]},"34":{"position":[[11,2]]},"54":{"position":[[0,2]]},"61":{"position":[[0,2]]},"68":{"position":[[0,2]]},"77":{"position":[[0,2]]},"84":{"position":[[0,2]]},"91":{"position":[[0,2]]},"98":{"position":[[0,2]]},"105":{"position":[[0,2]]},"425":{"position":[[5,2]]},"501":{"position":[[18,2]]},"507":{"position":[[5,2]]},"532":{"position":[[22,2]]},"1016":{"position":[[5,2]]},"1029":{"position":[[7,2]]},"1058":{"position":[[5,2]]},"1088":{"position":[[11,2]]},"1105":{"position":[[8,2]]}}}],["监控",{"_index":229,"t":{"563":{"position":[[7,2]]}}}],["目标",{"_index":29,"t":{"111":{"position":[[3,2]]},"146":{"position":[[3,2]]},"154":{"position":[[3,2]]},"190":{"position":[[3,2]]},"200":{"position":[[3,2]]},"211":{"position":[[3,2]]},"223":{"position":[[3,2]]},"236":{"position":[[3,2]]},"593":{"position":[[3,2]]},"608":{"position":[[3,2]]},"643":{"position":[[3,2]]},"655":{"position":[[3,2]]},"663":{"position":[[3,2]]},"673":{"position":[[3,2]]},"685":{"position":[[3,2]]},"698":{"position":[[3,2]]}}}],["相关",{"_index":223,"t":{"556":{"position":[[10,2]]}}}],["硬",{"_index":61,"t":{"173":{"position":[[10,1]]},"626":{"position":[[10,1]]}}}],["确定",{"_index":182,"t":{"432":{"position":[[4,2]]}}}],["示例",{"_index":19,"t":{"30":{"position":[[6,2]]},"35":{"position":[[6,2]]},"49":{"position":[[0,2]]},"56":{"position":[[0,2]]},"63":{"position":[[0,2]]},"72":{"position":[[0,2]]},"79":{"position":[[0,2]]},"86":{"position":[[0,2]]},"93":{"position":[[0,2]]},"100":{"position":[[0,2]]},"107":{"position":[[0,2]]},"135":{"position":[[6,2]]},"183":{"position":[[6,2]]},"340":{"position":[[19,2]]},"354":{"position":[[12,2]]},"386":{"position":[[9,2]]},"406":{"position":[[15,2]]},"408":{"position":[[8,2]]},"442":{"position":[[4,2]]},"444":{"position":[[4,2]]},"449":{"position":[[4,2]]},"451":{"position":[[4,2]]},"456":{"position":[[4,2]]},"488":{"position":[[11,2]]},"530":{"position":[[6,2]]},"546":{"position":[[0,2]]},"550":{"position":[[0,2]]},"562":{"position":[[7,2]]},"581":{"position":[[6,2]]},"636":{"position":[[6,2]]},"752":{"position":[[19,2]]},"818":{"position":[[9,2]]},"838":{"position":[[15,2]]},"840":{"position":[[8,2]]},"863":{"position":[[12,2]]},"886":{"position":[[4,2]]},"888":{"position":[[4,2]]},"893":{"position":[[4,2]]},"895":{"position":[[4,2]]},"900":{"position":[[4,2]]},"1005":{"position":[[8,2]]},"1009":{"position":[[5,2]]}}}],["程序",{"_index":315,"t":{"1137":{"position":[[10,2]]}}}],["空",{"_index":241,"t":{"927":{"position":[[0,1]]},"931":{"position":[[0,1]]}}}],["符号",{"_index":329,"t":{"1164":{"position":[[8,2]]}}}],["符合",{"_index":121,"t":{"290":{"position":[[4,2]]},"389":{"position":[[7,2]]},"766":{"position":[[4,2]]},"821":{"position":[[7,2]]}}}],["第三方",{"_index":250,"t":{"938":{"position":[[3,3]]},"997":{"position":[[6,3]]}}}],["简介",{"_index":203,"t":{"499":{"position":[[12,2]]},"1012":{"position":[[3,2]]},"1037":{"position":[[3,2]]},"1079":{"position":[[3,2]]},"1084":{"position":[[3,2]]},"1196":{"position":[[15,2]]}}}],["简化",{"_index":247,"t":{"933":{"position":[[7,2]]}}}],["简单",{"_index":185,"t":{"441":{"position":[[3,2]]},"885":{"position":[[3,2]]}}}],["简史",{"_index":1,"t":{"4":{"position":[[2,2]]}}}],["管理",{"_index":81,"t":{"241":{"position":[[6,2]]},"703":{"position":[[6,2]]},"1097":{"position":[[6,2]]},"1114":{"position":[[6,2]]},"1143":{"position":[[6,2]]}}}],["管理器",{"_index":311,"t":{"1130":{"position":[[7,3]]}}}],["管道",{"_index":213,"t":{"520":{"position":[[6,2]]}}}],["类似",{"_index":51,"t":{"161":{"position":[[9,2]]},"650":{"position":[[9,2]]}}}],["类型",{"_index":243,"t":{"927":{"position":[[19,2]]},"929":{"position":[[0,2]]},"958":{"position":[[8,2]]},"960":{"position":[[9,2]]},"983":{"position":[[6,2]]},"989":{"position":[[5,2]]}}}],["系统",{"_index":165,"t":{"398":{"position":[[9,2]]},"451":{"position":[[9,2]]},"830":{"position":[[9,2]]},"895":{"position":[[9,2]]},"1066":{"position":[[5,2]]},"1179":{"position":[[10,2]]}}}],["组件",{"_index":44,"t":{"130":{"position":[[6,2]]},"576":{"position":[[6,2]]}}}],["组合",{"_index":22,"t":{"37":{"position":[[4,2]]},"267":{"position":[[8,2]]},"298":{"position":[[6,2]]},"362":{"position":[[4,2]]},"402":{"position":[[4,2]]},"774":{"position":[[6,2]]},"793":{"position":[[8,2]]},"834":{"position":[[4,2]]},"871":{"position":[[4,2]]}}}],["经济",{"_index":9,"t":{"20":{"position":[[0,2]]}}}],["绑定",{"_index":286,"t":{"1023":{"position":[[4,2]]}}}],["结合",{"_index":216,"t":{"532":{"position":[[11,2]]}}}],["结构",{"_index":197,"t":{"474":{"position":[[9,2]]},"917":{"position":[[0,2]]},"931":{"position":[[1,2]]},"964":{"position":[[7,2]]},"965":{"position":[[6,2]]},"967":{"position":[[6,2]]},"981":{"position":[[4,2]]},"990":{"position":[[6,2]]},"1047":{"position":[[3,2]]}}}],["结果",{"_index":37,"t":{"120":{"position":[[6,2]]},"139":{"position":[[6,2]]},"151":{"position":[[6,2]]},"163":{"position":[[6,2]]},"197":{"position":[[6,2]]},"208":{"position":[[6,2]]},"220":{"position":[[6,2]]},"232":{"position":[[6,2]]},"254":{"position":[[6,2]]},"585":{"position":[[6,2]]},"602":{"position":[[6,2]]},"616":{"position":[[6,2]]},"652":{"position":[[6,2]]},"660":{"position":[[6,2]]},"670":{"position":[[6,2]]},"682":{"position":[[6,2]]},"694":{"position":[[6,2]]},"716":{"position":[[6,2]]}}}],["结论",{"_index":26,"t":{"41":{"position":[[3,2]]},"522":{"position":[[3,2]]},"1051":{"position":[[3,2]]},"1101":{"position":[[3,2]]},"1118":{"position":[[3,2]]}}}],["继承",{"_index":132,"t":{"298":{"position":[[10,2]]},"362":{"position":[[8,2]]},"774":{"position":[[10,2]]},"871":{"position":[[8,2]]}}}],["缓冲",{"_index":270,"t":{"995":{"position":[[6,2]]}}}],["编码",{"_index":62,"t":{"173":{"position":[[11,2]]},"626":{"position":[[11,2]]}}}],["编程",{"_index":72,"t":{"181":{"position":[[8,2]]},"634":{"position":[[8,2]]}}}],["编译",{"_index":301,"t":{"1070":{"position":[[8,2]]},"1132":{"position":[[6,2]]},"1165":{"position":[[4,2]]}}}],["网络日志",{"_index":171,"t":{"406":{"position":[[6,4]]},"838":{"position":[[6,4]]}}}],["网络连接",{"_index":187,"t":{"444":{"position":[[7,4]]},"888":{"position":[[7,4]]}}}],["耦合",{"_index":56,"t":{"169":{"position":[[7,2]]},"622":{"position":[[7,2]]}}}],["职责",{"_index":152,"t":{"364":{"position":[[6,2]]},"873":{"position":[[6,2]]}}}],["聚合",{"_index":73,"t":{"183":{"position":[[3,2]]},"636":{"position":[[3,2]]}}}],["自动",{"_index":89,"t":{"246":{"position":[[11,2]]},"708":{"position":[[11,2]]}}}],["自动化",{"_index":323,"t":{"1158":{"position":[[4,3]]}}}],["自定义",{"_index":265,"t":{"983":{"position":[[3,3]]},"1030":{"position":[[4,3]]},"1045":{"position":[[3,3]]}}}],["获取",{"_index":204,"t":{"503":{"position":[[4,2]]},"505":{"position":[[5,2]]},"960":{"position":[[4,2]]},"965":{"position":[[4,2]]},"1089":{"position":[[4,2]]},"1106":{"position":[[4,2]]}}}],["行为",{"_index":146,"t":{"338":{"position":[[16,2]]},"750":{"position":[[16,2]]}}}],["覆盖",{"_index":21,"t":{"32":{"position":[[7,2]]}}}],["观察点",{"_index":320,"t":{"1154":{"position":[[4,3]]}}}],["观测",{"_index":69,"t":{"179":{"position":[[6,2]]},"632":{"position":[[6,2]]}}}],["解决",{"_index":273,"t":{"999":{"position":[[7,2]]}}}],["解析",{"_index":249,"t":{"936":{"position":[[18,2]]},"938":{"position":[[12,2]]},"943":{"position":[[41,2]]},"947":{"position":[[40,2]]},"951":{"position":[[8,2]]},"967":{"position":[[4,2]]},"1027":{"position":[[4,2]]}}}],["解析器",{"_index":290,"t":{"1030":{"position":[[7,3]]}}}],["警告",{"_index":234,"t":{"853":{"position":[[7,2]]}}}],["设置",{"_index":207,"t":{"514":{"position":[[4,2]]}}}],["设计",{"_index":42,"t":{"127":{"position":[[8,2]]},"185":{"position":[[23,2]]},"238":{"position":[[7,2]]},"239":{"position":[[8,2]]},"360":{"position":[[6,2]]},"400":{"position":[[6,2]]},"573":{"position":[[8,2]]},"638":{"position":[[23,2]]},"700":{"position":[[7,2]]},"701":{"position":[[8,2]]},"832":{"position":[[6,2]]},"869":{"position":[[6,2]]}}}],["访问",{"_index":116,"t":{"274":{"position":[[7,2]]},"324":{"position":[[7,2]]},"736":{"position":[[7,2]]},"800":{"position":[[7,2]]}}}],["语法",{"_index":246,"t":{"933":{"position":[[5,2]]}}}],["语言",{"_index":96,"t":{"261":{"position":[[5,2]]},"266":{"position":[[5,2]]},"287":{"position":[[5,2]]},"297":{"position":[[5,2]]},"311":{"position":[[5,2]]},"316":{"position":[[5,2]]},"354":{"position":[[5,2]]},"359":{"position":[[5,2]]},"381":{"position":[[5,2]]},"391":{"position":[[5,2]]},"723":{"position":[[5,2]]},"728":{"position":[[5,2]]},"763":{"position":[[5,2]]},"773":{"position":[[5,2]]},"787":{"position":[[5,2]]},"792":{"position":[[5,2]]},"813":{"position":[[5,2]]},"823":{"position":[[5,2]]},"863":{"position":[[5,2]]},"868":{"position":[[5,2]]}}}],["读取",{"_index":228,"t":{"560":{"position":[[7,2]]},"939":{"position":[[37,2]]}}}],["调用",{"_index":139,"t":{"321":{"position":[[9,2]]},"733":{"position":[[9,2]]},"969":{"position":[[5,2]]},"1179":{"position":[[12,2]]}}}],["调试",{"_index":28,"t":{"47":{"position":[[0,2]]},"1137":{"position":[[4,2]]},"1139":{"position":[[4,2]]},"1141":{"position":[[6,2]]},"1149":{"position":[[5,2]]},"1150":{"position":[[7,2]]},"1152":{"position":[[7,2]]},"1158":{"position":[[7,2]]},"1160":{"position":[[6,2]]},"1171":{"position":[[3,2]]},"1172":{"position":[[7,2]]}}}],["调试信息",{"_index":328,"t":{"1164":{"position":[[3,4]]},"1165":{"position":[[9,4]]},"1167":{"position":[[6,4]]},"1169":{"position":[[6,4]]}}}],["资源",{"_index":335,"t":{"1183":{"position":[[5,2]]}}}],["超时",{"_index":210,"t":{"516":{"position":[[7,2]]}}}],["转换",{"_index":245,"t":{"929":{"position":[[5,2]]}}}],["软件包",{"_index":300,"t":{"1070":{"position":[[5,3]]}}}],["输入",{"_index":206,"t":{"512":{"position":[[6,2]]}}}],["输出",{"_index":168,"t":{"402":{"position":[[14,2]]},"406":{"position":[[10,2]]},"834":{"position":[[14,2]]},"838":{"position":[[10,2]]}}}],["过度",{"_index":157,"t":{"369":{"position":[[2,2]]},"878":{"position":[[2,2]]}}}],["运行",{"_index":34,"t":{"118":{"position":[[8,2]]},"120":{"position":[[4,2]]},"137":{"position":[[8,2]]},"139":{"position":[[4,2]]},"151":{"position":[[4,2]]},"163":{"position":[[4,2]]},"197":{"position":[[4,2]]},"208":{"position":[[4,2]]},"220":{"position":[[4,2]]},"232":{"position":[[4,2]]},"254":{"position":[[4,2]]},"516":{"position":[[4,2]]},"583":{"position":[[8,2]]},"585":{"position":[[4,2]]},"600":{"position":[[8,2]]},"602":{"position":[[4,2]]},"616":{"position":[[4,2]]},"652":{"position":[[4,2]]},"660":{"position":[[4,2]]},"670":{"position":[[4,2]]},"682":{"position":[[4,2]]},"694":{"position":[[4,2]]},"716":{"position":[[4,2]]},"1072":{"position":[[5,2]]},"1139":{"position":[[6,2]]}}}],["进入",{"_index":295,"t":{"1059":{"position":[[5,2]]}}}],["进程",{"_index":303,"t":{"1089":{"position":[[6,2]]},"1093":{"position":[[4,2]]},"1106":{"position":[[6,2]]},"1110":{"position":[[4,2]]},"1139":{"position":[[10,2]]},"1150":{"position":[[5,2]]},"1187":{"position":[[4,2]]},"1190":{"position":[[2,2]]}}}],["进行",{"_index":217,"t":{"540":{"position":[[14,2]]}}}],["远程",{"_index":324,"t":{"1160":{"position":[[4,2]]}}}],["违反",{"_index":99,"t":{"262":{"position":[[4,2]]},"278":{"position":[[3,2]]},"292":{"position":[[3,2]]},"293":{"position":[[4,2]]},"295":{"position":[[4,2]]},"312":{"position":[[4,2]]},"330":{"position":[[3,2]]},"352":{"position":[[0,2]]},"355":{"position":[[4,2]]},"386":{"position":[[3,2]]},"387":{"position":[[4,2]]},"724":{"position":[[4,2]]},"742":{"position":[[3,2]]},"768":{"position":[[3,2]]},"769":{"position":[[4,2]]},"771":{"position":[[4,2]]},"788":{"position":[[4,2]]},"804":{"position":[[3,2]]},"818":{"position":[[3,2]]},"819":{"position":[[4,2]]},"861":{"position":[[0,2]]},"864":{"position":[[4,2]]}}}],["连接",{"_index":158,"t":{"374":{"position":[[7,2]]},"520":{"position":[[8,2]]},"1208":{"position":[[6,2]]}}}],["连接器",{"_index":189,"t":{"449":{"position":[[10,3]]},"893":{"position":[[10,3]]}}}],["适应性",{"_index":68,"t":{"177":{"position":[[11,3]]},"630":{"position":[[11,3]]}}}],["适用",{"_index":23,"t":{"39":{"position":[[11,2]]},"434":{"position":[[3,2]]},"534":{"position":[[13,2]]}}}],["选",{"_index":142,"t":{"328":{"position":[[11,1]]},"740":{"position":[[11,1]]}}}],["选项",{"_index":164,"t":{"392":{"position":[[6,2]]},"824":{"position":[[6,2]]}}}],["通用",{"_index":343,"t":{"1211":{"position":[[4,2]]}}}],["通知",{"_index":219,"t":{"540":{"position":[[18,2]]}}}],["通过",{"_index":120,"t":{"288":{"position":[[4,2]]},"764":{"position":[[4,2]]}}}],["遵循",{"_index":101,"t":{"264":{"position":[[4,2]]},"314":{"position":[[4,2]]},"357":{"position":[[4,2]]},"726":{"position":[[4,2]]},"790":{"position":[[4,2]]},"866":{"position":[[4,2]]}}}],["避免",{"_index":110,"t":{"271":{"position":[[4,2]]},"797":{"position":[[4,2]]}}}],["配置",{"_index":58,"t":{"173":{"position":[[5,2]]},"626":{"position":[[5,2]]},"1201":{"position":[[6,2]]}}}],["重构",{"_index":124,"t":{"292":{"position":[[14,2]]},"386":{"position":[[12,2]]},"389":{"position":[[4,2]]},"768":{"position":[[14,2]]},"818":{"position":[[12,2]]},"821":{"position":[[4,2]]}}}],["重要",{"_index":174,"t":{"416":{"position":[[2,2]]},"848":{"position":[[2,2]]}}}],["错误",{"_index":159,"t":{"374":{"position":[[9,2]]},"1172":{"position":[[5,2]]}}}],["错误判断",{"_index":212,"t":{"518":{"position":[[6,4]]}}}],["错误处理",{"_index":237,"t":{"913":{"position":[[0,4]]}}}],["问题",{"_index":276,"t":{"1000":{"position":[[8,2]]}}}],["问题解答",{"_index":344,"t":{"1215":{"position":[[5,4]]}}}],["防御性",{"_index":71,"t":{"181":{"position":[[5,3]]},"634":{"position":[[5,3]]}}}],["附录",{"_index":282,"t":{"1009":{"position":[[0,2]]}}}],["隔离",{"_index":299,"t":{"1068":{"position":[[5,2]]}}}],["集成",{"_index":84,"t":{"243":{"position":[[5,2]]},"244":{"position":[[14,2]]},"705":{"position":[[5,2]]},"706":{"position":[[14,2]]}}}],["需要",{"_index":149,"t":{"349":{"position":[[6,2]]},"432":{"position":[[10,2]]},"858":{"position":[[6,2]]}}}],["非",{"_index":60,"t":{"173":{"position":[[9,1]]},"185":{"position":[[7,1]]},"626":{"position":[[9,1]]},"638":{"position":[[7,1]]}}}],["顶",{"_index":5,"t":{"8":{"position":[[2,1]]}}}],["验证",{"_index":280,"t":{"1004":{"position":[[5,2]]},"1043":{"position":[[8,2]]},"1045":{"position":[[6,2]]},"1047":{"position":[[8,2]]}}}],["高性能",{"_index":253,"t":{"943":{"position":[[32,3]]}}}],["高效",{"_index":252,"t":{"939":{"position":[[29,2]]}}}],["高级",{"_index":163,"t":{"391":{"position":[[14,2]]},"507":{"position":[[3,2]]},"823":{"position":[[14,2]]},"1029":{"position":[[5,2]]},"1149":{"position":[[3,2]]},"1201":{"position":[[4,2]]}}}],["默认",{"_index":248,"t":{"936":{"position":[[10,2]]},"1017":{"position":[[6,2]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":1,"t":"历史博文","s":"","u":"/blog/archive","p":1},{"i":10,"t":"能说的上话很重要。","s":"一句顶一万句","u":"/blog/一句顶一万句","p":10},{"i":12,"t":"历史书如同一面哈哈镜，常常放大特定利益阶层的功绩，却忽视或淡化了平凡人的力量与贡献。","s":"南明史","u":"/blog/南明史","p":12},{"i":14,"t":"『人类简史』纵览文化、宗教、社会等多元领域，虽在专业深度上有不足，却为我理解『人类社会』提供了宝贵视角。","s":"人类简史","u":"/blog/人类简史","p":14},{"i":24,"t":"1. 概述","s":"Makefile 中 : 和 :: 的使用指南","u":"/docs/note/build/makefile:","p":24},{"i":43,"t":"info/warning","s":"Makefile 常用方法","u":"/docs/note/build/makefile_function","p":43},{"i":109,"t":"microkernel 设计1 目前只支持服务发送消息，内核接受消息。","s":"microkernel 设计2","u":"/docs/note/design/microkernel/microkernel2","p":109},{"i":125,"t":"microkernel（微内核）架构的核心思想是 核心功能最小化，其他功能以插件或服务的形式运行在用户态，通过 进程间通信（IPC） 与内核交互。","s":"microkernel 设计1","u":"/docs/note/design/microkernel/microkernel1","p":125},{"i":145,"t":"1. 目标","s":"microkernel 设计5","u":"/docs/note/design/microkernel/microkernel5","p":145},{"i":153,"t":"1. 目标","s":"microkernel 设计4","u":"/docs/note/design/microkernel/microkernel4","p":153},{"i":165,"t":"在编程和系统设计中，Future-Proof 机制指的是通过合理的架构设计和技术选择，使代码或系统能够适应未来的需求变化、技术演进和规模扩展，而无需大规模重构或重写。其核心目标是降低长期维护成本，提高可扩展性。","s":"Future-Proof 机制","u":"/docs/note/design/future_proof","p":165},{"i":189,"t":"1. 目标","s":"microkernel 设计6","u":"/docs/note/design/microkernel/microkernel6","p":189},{"i":199,"t":"1. 目标","s":"microkernel 设计3","u":"/docs/note/design/microkernel/microkernel3","p":199},{"i":210,"t":"1. 目标","s":"microkernel 设计8","u":"/docs/note/design/microkernel/microkernel8","p":210},{"i":222,"t":"1. 目标","s":"microkernel 设计7","u":"/docs/note/design/microkernel/microkernel7","p":222},{"i":234,"t":"服务状态持久化","s":"microkernel 设计9","u":"/docs/note/design/microkernel/microkernel9","p":234},{"i":256,"t":"1. 概述","s":"接口隔离原则(ISP)","u":"/docs/note/design/oop_pinciple/isp","p":256},{"i":282,"t":"1. 概述","s":"里氏替换原则(LSP)","u":"/docs/note/design/oop_pinciple/lsp","p":282},{"i":306,"t":"1. 概述","s":"依赖倒置原则(DIP)","u":"/docs/note/design/oop_pinciple/dip","p":306},{"i":334,"t":"1. channel 交互","s":"Golang 多goroutine交互模型","u":"/docs/note/design/multi_goroutine","p":334},{"i":346,"t":"1. 概述","s":"单一职责原则(SRP)","u":"/docs/note/design/oop_pinciple/srp","p":346},{"i":373,"t":"1. tls 连接错误","s":"git 错误","u":"/docs/note/git/git_err","p":373},{"i":376,"t":"1. 概述","s":"开闭原则(OCP)","u":"/docs/note/design/oop_pinciple/ocp","p":376},{"i":412,"t":"面向对象编程(OOP)有几个核心设计原则，这些原则有助于创建灵活、可维护和可扩展的软件系统。以下是主要的OOP设计原则：","s":"面向对象编程中的设计原则","u":"/docs/note/design/oop_pinciple/principle","p":412},{"i":420,"t":"1. 概述","s":"Golang bcrypt","u":"/docs/note/golang/bcrypt","p":420},{"i":438,"t":"1. 概述","s":"工厂模式（Factory Pattern）","u":"/docs/note/design/standard_design_patterns/create/factory","p":438},{"i":468,"t":"1. 概述","s":"Golang sync.Cond","u":"/docs/note/golang/concurrency/cond","p":468},{"i":498,"t":"1. os/exec 包简介","s":"Golang os/exec 用法","u":"/docs/note/golang/cmd","p":498},{"i":524,"t":"在 Golang 中，多协程 goroutine之间的交互主要通过以下几种方式实现：","s":"Golang 并发编程","u":"/docs/note/golang/concurrency/","p":524},{"i":554,"t":"runtime/debug 是 Go 标准库中用于调试和运行时信息收集的重要包，提供了多种实用功能。下面我将详细介绍其主要功能和用法：","s":"Golang runtime/debug 用法","u":"/docs/note/golang/debug","p":554},{"i":571,"t":"microkernel（微内核）架构的核心思想是 核心功能最小化，其他功能以插件或服务的形式运行在用户态，通过 进程间通信（IPC） 与内核交互。","s":"microkernel 设计1","u":"/docs/note/golang/design/microkernel/microkernel1","p":571},{"i":591,"t":"microkernel 设计1 目前只支持服务发送消息，内核接受消息。","s":"microkernel 设计2","u":"/docs/note/golang/design/microkernel/microkernel2","p":591},{"i":607,"t":"1. 目标","s":"microkernel 设计3","u":"/docs/note/golang/design/microkernel/microkernel3","p":607},{"i":618,"t":"在编程和系统设计中，Future-Proof 机制指的是通过合理的架构设计和技术选择，使代码或系统能够适应未来的需求变化、技术演进和规模扩展，而无需大规模重构或重写。其核心目标是降低长期维护成本，提高可扩展性。","s":"Future-Proof 机制","u":"/docs/note/golang/design/future_proof","p":618},{"i":642,"t":"1. 目标","s":"microkernel 设计4","u":"/docs/note/golang/design/microkernel/microkernel4","p":642},{"i":654,"t":"1. 目标","s":"microkernel 设计5","u":"/docs/note/golang/design/microkernel/microkernel5","p":654},{"i":662,"t":"1. 目标","s":"microkernel 设计6","u":"/docs/note/golang/design/microkernel/microkernel6","p":662},{"i":672,"t":"1. 目标","s":"microkernel 设计8","u":"/docs/note/golang/design/microkernel/microkernel8","p":672},{"i":684,"t":"1. 目标","s":"microkernel 设计7","u":"/docs/note/golang/design/microkernel/microkernel7","p":684},{"i":696,"t":"服务状态持久化","s":"microkernel 设计9","u":"/docs/note/golang/design/microkernel/microkernel9","p":696},{"i":718,"t":"1. 概述","s":"依赖倒置原则(DIP)","u":"/docs/note/golang/design/oop_pinciple/dip","p":718},{"i":746,"t":"1. channel 交互","s":"Golang 多goroutine交互模型","u":"/docs/note/golang/design/multi_goroutine","p":746},{"i":758,"t":"1. 概述","s":"里氏替换原则(LSP)","u":"/docs/note/golang/design/oop_pinciple/lsp","p":758},{"i":782,"t":"1. 概述","s":"接口隔离原则(ISP)","u":"/docs/note/golang/design/oop_pinciple/isp","p":782},{"i":808,"t":"1. 概述","s":"开闭原则(OCP)","u":"/docs/note/golang/design/oop_pinciple/ocp","p":808},{"i":844,"t":"面向对象编程(OOP)有几个核心设计原则，这些原则有助于创建灵活、可维护和可扩展的软件系统。以下是主要的OOP设计原则：","s":"面向对象编程中的设计原则","u":"/docs/note/golang/design/oop_pinciple/principle","p":844},{"i":852,"t":"1. ide 警告找不到方法","s":"goland 问题处理记录","u":"/docs/note/golang/goland","p":852},{"i":855,"t":"1. 概述","s":"单一职责原则(SRP)","u":"/docs/note/golang/design/oop_pinciple/srp","p":855},{"i":882,"t":"1. 概述","s":"工厂模式（Factory Pattern）","u":"/docs/note/golang/design/standard_design_patterns/create/factory","p":882},{"i":912,"t":"------","s":"Golang 随笔","u":"/docs/note/golang/jotting","p":912},{"i":935,"t":"1. Golang 默认 JSON 解析 (encoding/json)","s":"Golang JSON 解析","u":"/docs/note/golang/json","p":935},{"i":955,"t":"1. 反射（Reflect）概述","s":"Golang Reflect","u":"/docs/note/golang/reflect","p":955},{"i":975,"t":"1. 引言","s":"Golang 序列化/反序列化","u":"/docs/note/golang/serialization","p":975},{"i":1011,"t":"1. 简介","s":"kingpin 用法","u":"/docs/note/golang/kingpin","p":1011},{"i":1036,"t":"1. 简介","s":"Golang Validator","u":"/docs/note/golang/validator","p":1036},{"i":1053,"t":"1. 概述","s":"chroot 用法","u":"/docs/note/os/chroot","p":1053},{"i":1078,"t":"1. 简介","s":"Golang sys/unix syscall","u":"/docs/note/golang/syscall","p":1078},{"i":1122,"t":"1. GDB 概述","s":"GDB 调试工具","u":"/docs/note/os/debug/gdb","p":1122},{"i":1185,"t":"孤儿进程： 父亲先死，儿子被1号收养。","s":"僵尸进程","u":"/docs/note/os/zombie","p":1185},{"i":1195,"t":"1. Unix Socket 简介","s":"Golang Unix Socket 服务","u":"/docs/note/golang/web_server_unix","p":1195}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/1",[0,4.424,1,5.131]],["t/10",[2,4.342,3,4.342,4,4.342,5,3.743]],["t/12",[0,1.947,6,2.258,7,2.258,8,2.258,9,2.258,10,2.258,11,2.258,12,2.258,13,2.258,14,2.258,15,2.258,16,2.258,17,2.258,18,2.258,19,2.258,20,2.258]],["t/14",[21,3.328,22,2.091,23,2.091,24,2.091,25,2.091,26,3.328,27,2.091,28,2.091,29,2.091,30,2.091,31,2.091,32,2.091,33,2.091,34,1.803,35,2.091,36,2.091]],["t/24",[37,0.182,38,1.652]],["t/43",[37,0.223]],["t/109",[37,0.148,39,1.706,40,2.433,41,2.433,42,1.706,43,2.433,44,3.615,45,1.986,46,2.433]],["t/125",[37,0.108,42,1.137,45,1.324,47,1.622,48,1.622,49,1.622,50,1.137,51,2.358,52,1.622,53,1.622,54,1.622,55,1.622,56,1.451,57,1.622,58,1.622,59,1.222,60,1.451,61,1.622,62,1.222]],["t/145",[37,0.182,63,1.989]],["t/153",[37,0.182,63,1.989]],["t/165",[37,0.077,39,0.758,50,0.758,59,0.815,63,0.486,64,1.082,65,1.875,66,0.883,67,1.082,68,1.082,69,1.082,70,1.082,71,1.875,72,1.082,73,1.082,74,1.082,75,1.082,76,1.082,77,1.082,78,1.082,79,1.082,80,1.082,81,0.883,82,1.082,83,1.082,84,1.082,85,1.082,86,1.082,87,1.082,88,0.883,89,1.082,90,1.082,91,1.082]],["t/189",[37,0.182,63,1.989]],["t/199",[37,0.182,63,1.989]],["t/210",[37,0.182,63,1.989]],["t/222",[37,0.182,63,1.989]],["t/234",[42,2.624,92,3.743,93,3.743,94,3.743]],["t/256",[37,0.182,38,1.652]],["t/282",[37,0.182,38,1.652]],["t/306",[37,0.182,38,1.652]],["t/334",[37,0.211,62,3.054]],["t/346",[37,0.182,38,1.652]],["t/373",[37,0.201,95,4.342,96,4.342]],["t/376",[37,0.182,38,1.652]],["t/412",[37,0.114,39,1.953,50,1.218,81,1.418,88,1.418,97,1.738,98,1.738,99,3.489,100,1.738,101,1.738,102,1.738,103,1.738,104,1.738,105,1.555,106,1.418]],["t/420",[37,0.182,38,1.652]],["t/438",[37,0.182,38,1.652]],["t/468",[37,0.182,38,1.652]],["t/498",[37,0.215,107,3.476,108,2.618]],["t/524",[37,0.134,59,1.594,62,1.594,66,1.727,105,1.893,106,1.727,109,2.454,110,2.454,111,2.454,112,2.454,113,2.454,114,2.454,115,2.454]],["t/554",[5,1.475,34,1.475,37,0.128,51,1.32,56,1.32,66,1.203,106,1.203,107,1.475,116,1.711,117,1.711,118,1.711,119,1.711,120,1.711,121,1.711,122,1.711,123,1.711,124,1.711,125,1.711,126,1.711,127,1.711,128,1.711,129,1.711]],["t/571",[37,0.108,42,1.137,45,1.324,47,1.622,48,1.622,49,1.622,50,1.137,51,2.358,52,1.622,53,1.622,54,1.622,55,1.622,56,1.451,57,1.622,58,1.622,59,1.222,60,1.451,61,1.622,62,1.222]],["t/591",[37,0.148,39,1.706,40,2.433,41,2.433,42,1.706,43,2.433,44,3.615,45,1.986,46,2.433]],["t/607",[37,0.182,63,1.989]],["t/618",[37,0.077,39,0.758,50,0.758,59,0.815,63,0.486,64,1.082,65,1.875,66,0.883,67,1.082,68,1.082,69,1.082,70,1.082,71,1.875,72,1.082,73,1.082,74,1.082,75,1.082,76,1.082,77,1.082,78,1.082,79,1.082,80,1.082,81,0.883,82,1.082,83,1.082,84,1.082,85,1.082,86,1.082,87,1.082,88,0.883,89,1.082,90,1.082,91,1.082]],["t/642",[37,0.182,63,1.989]],["t/654",[37,0.182,63,1.989]],["t/662",[37,0.182,63,1.989]],["t/672",[37,0.182,63,1.989]],["t/684",[37,0.182,63,1.989]],["t/696",[42,2.624,92,3.743,93,3.743,94,3.743]],["t/718",[37,0.182,38,1.652]],["t/746",[37,0.211,62,3.054]],["t/758",[37,0.182,38,1.652]],["t/782",[37,0.182,38,1.652]],["t/808",[37,0.182,38,1.652]],["t/844",[37,0.114,39,1.953,50,1.218,81,1.418,88,1.418,97,1.738,98,1.738,99,3.489,100,1.738,101,1.738,102,1.738,103,1.738,104,1.738,105,1.555,106,1.418]],["t/852",[37,0.182,130,3.763,131,3.763,132,3.763,133,3.763]],["t/855",[37,0.182,38,1.652]],["t/882",[37,0.182,38,1.652]],["t/912",[]],["t/935",[37,0.229,134,3.528,135,3.528]],["t/955",[37,0.201,38,1.398,136,4.342]],["t/975",[37,0.182,137,5.131]],["t/1011",[37,0.182,108,3.332]],["t/1036",[37,0.182,108,3.332]],["t/1053",[37,0.182,38,1.652]],["t/1078",[37,0.182,108,3.332]],["t/1122",[37,0.211,38,1.514]],["t/1185",[37,0.111,60,2.419,138,3.136,139,3.136,140,3.136,141,3.136,142,3.136,143,3.136,144,3.136]],["t/1195",[37,0.223,108,2.819]]],"invertedIndex":[["",{"_index":37,"t":{"24":{"position":[[0,1]]},"43":{"position":[[0,4],[5,7]]},"109":{"position":[[0,11],[14,1]]},"125":{"position":[[0,11],[62,3]]},"145":{"position":[[0,1]]},"153":{"position":[[0,1]]},"165":{"position":[[10,6],[17,5]]},"189":{"position":[[0,1]]},"199":{"position":[[0,1]]},"210":{"position":[[0,1]]},"222":{"position":[[0,1]]},"256":{"position":[[0,1]]},"282":{"position":[[0,1]]},"306":{"position":[[0,1]]},"334":{"position":[[0,1],[3,7]]},"346":{"position":[[0,1]]},"373":{"position":[[0,1],[3,3]]},"376":{"position":[[0,1]]},"412":{"position":[[7,3],[52,3]]},"420":{"position":[[0,1]]},"438":{"position":[[0,1]]},"468":{"position":[[0,1]]},"498":{"position":[[0,1],[3,2],[6,4]]},"524":{"position":[[2,6],[15,9]]},"554":{"position":[[0,7],[8,5],[16,2]]},"571":{"position":[[0,11],[62,3]]},"591":{"position":[[0,11],[14,1]]},"607":{"position":[[0,1]]},"618":{"position":[[10,6],[17,5]]},"642":{"position":[[0,1]]},"654":{"position":[[0,1]]},"662":{"position":[[0,1]]},"672":{"position":[[0,1]]},"684":{"position":[[0,1]]},"718":{"position":[[0,1]]},"746":{"position":[[0,1],[3,7]]},"758":{"position":[[0,1]]},"782":{"position":[[0,1]]},"808":{"position":[[0,1]]},"844":{"position":[[7,3],[52,3]]},"852":{"position":[[0,1],[3,3]]},"855":{"position":[[0,1]]},"882":{"position":[[0,1]]},"935":{"position":[[0,1],[3,6],[13,4],[22,8],[31,4]]},"955":{"position":[[0,1],[6,7]]},"975":{"position":[[0,1]]},"1011":{"position":[[0,1]]},"1036":{"position":[[0,1]]},"1053":{"position":[[0,1]]},"1078":{"position":[[0,1]]},"1122":{"position":[[0,1],[3,3]]},"1185":{"position":[[14,1]]},"1195":{"position":[[0,1],[3,4],[8,6]]}}}],["一面",{"_index":8,"t":{"12":{"position":[[5,2]]}}}],["下面",{"_index":125,"t":{"554":{"position":[[50,2]]}}}],["不到",{"_index":132,"t":{"852":{"position":[[10,2]]}}}],["不足",{"_index":32,"t":{"14":{"position":[[30,2]]}}}],["专业",{"_index":30,"t":{"14":{"position":[[24,2]]}}}],["中",{"_index":66,"t":{"165":{"position":[[8,1]]},"524":{"position":[[9,1]]},"554":{"position":[[22,1]]},"618":{"position":[[8,1]]}}}],["主要",{"_index":106,"t":{"412":{"position":[[49,2]]},"524":{"position":[[29,2]]},"554":{"position":[[59,2]]},"844":{"position":[[49,2]]}}}],["之间",{"_index":112,"t":{"524":{"position":[[24,2]]}}}],["书",{"_index":6,"t":{"12":{"position":[[2,1]]}}}],["交互",{"_index":62,"t":{"125":{"position":[[70,2]]},"334":{"position":[[11,2]]},"524":{"position":[[27,2]]},"571":{"position":[[70,2]]},"746":{"position":[[11,2]]}}}],["人类",{"_index":21,"t":{"14":{"position":[[1,2],[39,2]]}}}],["介绍",{"_index":128,"t":{"554":{"position":[[56,2]]}}}],["代码",{"_index":73,"t":{"165":{"position":[[44,2]]},"618":{"position":[[44,2]]}}}],["以下",{"_index":105,"t":{"412":{"position":[[46,2]]},"524":{"position":[[33,2]]},"844":{"position":[[46,2]]}}}],["信息",{"_index":121,"t":{"554":{"position":[[31,2]]}}}],["儿子",{"_index":142,"t":{"1185":{"position":[[11,2]]}}}],["先",{"_index":140,"t":{"1185":{"position":[[8,1]]}}}],["其他",{"_index":53,"t":{"125":{"position":[[33,2]]},"571":{"position":[[33,2]]}}}],["内核",{"_index":45,"t":{"109":{"position":[[28,2]]},"125":{"position":[[68,2]]},"571":{"position":[[68,2]]},"591":{"position":[[28,2]]}}}],["几个",{"_index":98,"t":{"412":{"position":[[12,2]]},"844":{"position":[[12,2]]}}}],["几种",{"_index":113,"t":{"524":{"position":[[35,2]]}}}],["创建",{"_index":102,"t":{"412":{"position":[[28,2]]},"844":{"position":[[28,2]]}}}],["利益",{"_index":13,"t":{"12":{"position":[[17,2]]}}}],["力量",{"_index":19,"t":{"12":{"position":[[36,2]]}}}],["功绩",{"_index":15,"t":{"12":{"position":[[22,2]]}}}],["功能",{"_index":51,"t":{"125":{"position":[[27,2],[35,2]]},"554":{"position":[[61,2]]},"571":{"position":[[27,2],[35,2]]}}}],["包",{"_index":107,"t":{"498":{"position":[[11,1]]},"554":{"position":[[38,1]]}}}],["化",{"_index":94,"t":{"234":{"position":[[6,1]]},"696":{"position":[[6,1]]}}}],["协",{"_index":110,"t":{"524":{"position":[[12,1]]}}}],["博文",{"_index":1,"t":{"1":{"position":[[2,2]]}}}],["历史",{"_index":0,"t":{"1":{"position":[[0,2]]},"12":{"position":[[0,2]]}}}],["原则",{"_index":99,"t":{"412":{"position":[[18,2],[23,2],[57,2]]},"844":{"position":[[18,2],[23,2],[57,2]]}}}],["反射",{"_index":136,"t":{"955":{"position":[[3,2]]}}}],["发送",{"_index":43,"t":{"109":{"position":[[23,2]]},"591":{"position":[[23,2]]}}}],["变化",{"_index":78,"t":{"165":{"position":[[58,2]]},"618":{"position":[[58,2]]}}}],["可扩展性",{"_index":91,"t":{"165":{"position":[[100,4]]},"618":{"position":[[100,4]]}}}],["号",{"_index":143,"t":{"1185":{"position":[[15,1]]}}}],["合理",{"_index":69,"t":{"165":{"position":[[30,2]]},"618":{"position":[[30,2]]}}}],["哈哈镜",{"_index":9,"t":{"12":{"position":[[7,3]]}}}],["多",{"_index":109,"t":{"524":{"position":[[11,1]]}}}],["多元",{"_index":28,"t":{"14":{"position":[[17,2]]}}}],["多种",{"_index":123,"t":{"554":{"position":[[43,2]]}}}],["大规模",{"_index":83,"t":{"165":{"position":[[74,3]]},"618":{"position":[[74,3]]}}}],["如同",{"_index":7,"t":{"12":{"position":[[3,2]]}}}],["孤儿",{"_index":138,"t":{"1185":{"position":[[0,2]]}}}],["宗教",{"_index":25,"t":{"14":{"position":[[11,2]]}}}],["宝贵",{"_index":35,"t":{"14":{"position":[[47,2]]}}}],["实现",{"_index":115,"t":{"524":{"position":[[39,2]]}}}],["实用功能",{"_index":124,"t":{"554":{"position":[[45,4]]}}}],["将",{"_index":126,"t":{"554":{"position":[[53,1]]}}}],["常常",{"_index":10,"t":{"12":{"position":[[11,2]]}}}],["平凡人",{"_index":18,"t":{"12":{"position":[[32,3]]}}}],["库",{"_index":117,"t":{"554":{"position":[[21,1]]}}}],["引言",{"_index":137,"t":{"975":{"position":[[3,2]]}}}],["形式",{"_index":55,"t":{"125":{"position":[[44,2]]},"571":{"position":[[44,2]]}}}],["微内核",{"_index":47,"t":{"125":{"position":[[12,3]]},"571":{"position":[[12,3]]}}}],["忽视",{"_index":16,"t":{"12":{"position":[[26,2]]}}}],["态",{"_index":58,"t":{"125":{"position":[[51,1]]},"571":{"position":[[51,1]]}}}],["成本",{"_index":89,"t":{"165":{"position":[[95,2]]},"618":{"position":[[95,2]]}}}],["扩展",{"_index":81,"t":{"165":{"position":[[68,2]]},"412":{"position":[[38,2]]},"618":{"position":[[68,2]]},"844":{"position":[[38,2]]}}}],["找",{"_index":131,"t":{"852":{"position":[[9,1]]}}}],["技术",{"_index":71,"t":{"165":{"position":[[38,2],[61,2]]},"618":{"position":[[38,2],[61,2]]}}}],["持久",{"_index":93,"t":{"234":{"position":[[4,2]]},"696":{"position":[[4,2]]}}}],["指",{"_index":68,"t":{"165":{"position":[[25,1]]},"618":{"position":[[25,1]]}}}],["接受",{"_index":46,"t":{"109":{"position":[[30,2]]},"591":{"position":[[30,2]]}}}],["提供",{"_index":34,"t":{"14":{"position":[[44,2]]},"554":{"position":[[40,2]]}}}],["提高",{"_index":90,"t":{"165":{"position":[[98,2]]},"618":{"position":[[98,2]]}}}],["插件",{"_index":54,"t":{"125":{"position":[[38,2]]},"571":{"position":[[38,2]]}}}],["支持",{"_index":41,"t":{"109":{"position":[[19,2]]},"591":{"position":[[19,2]]}}}],["收养",{"_index":144,"t":{"1185":{"position":[[16,2]]}}}],["收集",{"_index":122,"t":{"554":{"position":[[33,2]]}}}],["放大",{"_index":11,"t":{"12":{"position":[[13,2]]}}}],["文化",{"_index":24,"t":{"14":{"position":[[8,2]]}}}],["方式",{"_index":114,"t":{"524":{"position":[[37,2]]}}}],["方法",{"_index":133,"t":{"852":{"position":[[12,2]]}}}],["无需",{"_index":82,"t":{"165":{"position":[[72,2]]},"618":{"position":[[72,2]]}}}],["时",{"_index":120,"t":{"554":{"position":[[30,1]]}}}],["最小化",{"_index":52,"t":{"125":{"position":[[29,3]]},"571":{"position":[[29,3]]}}}],["有助于",{"_index":101,"t":{"412":{"position":[[25,3]]},"844":{"position":[[25,3]]}}}],["服务",{"_index":42,"t":{"109":{"position":[[21,2]]},"125":{"position":[[41,2]]},"234":{"position":[[0,2]]},"571":{"position":[[41,2]]},"591":{"position":[[21,2]]},"696":{"position":[[0,2]]}}}],["未来",{"_index":76,"t":{"165":{"position":[[53,2]]},"618":{"position":[[53,2]]}}}],["机制",{"_index":67,"t":{"165":{"position":[[23,2]]},"618":{"position":[[23,2]]}}}],["架构",{"_index":48,"t":{"125":{"position":[[16,2]]},"571":{"position":[[16,2]]}}}],["架构设计",{"_index":70,"t":{"165":{"position":[[33,4]]},"618":{"position":[[33,4]]}}}],["标准",{"_index":116,"t":{"554":{"position":[[19,2]]}}}],["核心",{"_index":50,"t":{"125":{"position":[[25,2]]},"165":{"position":[[84,2]]},"412":{"position":[[14,2]]},"571":{"position":[[25,2]]},"618":{"position":[[84,2]]},"844":{"position":[[14,2]]}}}],["核心思想",{"_index":49,"t":{"125":{"position":[[19,4]]},"571":{"position":[[19,4]]}}}],["概述",{"_index":38,"t":{"24":{"position":[[3,2]]},"256":{"position":[[3,2]]},"282":{"position":[[3,2]]},"306":{"position":[[3,2]]},"346":{"position":[[3,2]]},"376":{"position":[[3,2]]},"420":{"position":[[3,2]]},"438":{"position":[[3,2]]},"468":{"position":[[3,2]]},"718":{"position":[[3,2]]},"758":{"position":[[3,2]]},"782":{"position":[[3,2]]},"808":{"position":[[3,2]]},"855":{"position":[[3,2]]},"882":{"position":[[3,2]]},"955":{"position":[[14,2]]},"1053":{"position":[[3,2]]},"1122":{"position":[[7,2]]}}}],["死",{"_index":141,"t":{"1185":{"position":[[9,1]]}}}],["消息",{"_index":44,"t":{"109":{"position":[[25,2],[32,2]]},"591":{"position":[[25,2],[32,2]]}}}],["淡化",{"_index":17,"t":{"12":{"position":[[29,2]]}}}],["深度",{"_index":31,"t":{"14":{"position":[[26,2]]}}}],["演进",{"_index":79,"t":{"165":{"position":[[63,2]]},"618":{"position":[[63,2]]}}}],["灵活",{"_index":103,"t":{"412":{"position":[[30,2]]},"844":{"position":[[30,2]]}}}],["父亲",{"_index":139,"t":{"1185":{"position":[[6,2]]}}}],["特定",{"_index":12,"t":{"12":{"position":[[15,2]]}}}],["状态",{"_index":92,"t":{"234":{"position":[[2,2]]},"696":{"position":[[2,2]]}}}],["理解",{"_index":33,"t":{"14":{"position":[[36,2]]}}}],["用于",{"_index":118,"t":{"554":{"position":[[23,2]]}}}],["用户",{"_index":57,"t":{"125":{"position":[[49,2]]},"571":{"position":[[49,2]]}}}],["用法",{"_index":129,"t":{"554":{"position":[[64,2]]}}}],["目前",{"_index":40,"t":{"109":{"position":[[16,2]]},"591":{"position":[[16,2]]}}}],["目标",{"_index":63,"t":{"145":{"position":[[3,2]]},"153":{"position":[[3,2]]},"165":{"position":[[86,2]]},"189":{"position":[[3,2]]},"199":{"position":[[3,2]]},"210":{"position":[[3,2]]},"222":{"position":[[3,2]]},"607":{"position":[[3,2]]},"618":{"position":[[86,2]]},"642":{"position":[[3,2]]},"654":{"position":[[3,2]]},"662":{"position":[[3,2]]},"672":{"position":[[3,2]]},"684":{"position":[[3,2]]}}}],["社会",{"_index":26,"t":{"14":{"position":[[14,2],[41,2]]}}}],["程",{"_index":111,"t":{"524":{"position":[[13,1]]}}}],["等",{"_index":27,"t":{"14":{"position":[[16,1]]}}}],["简介",{"_index":108,"t":{"498":{"position":[[12,2]]},"1011":{"position":[[3,2]]},"1036":{"position":[[3,2]]},"1078":{"position":[[3,2]]},"1195":{"position":[[15,2]]}}}],["简史",{"_index":22,"t":{"14":{"position":[[3,2]]}}}],["系统",{"_index":65,"t":{"165":{"position":[[4,2],[47,2]]},"618":{"position":[[4,2],[47,2]]}}}],["纵览",{"_index":23,"t":{"14":{"position":[[6,2]]}}}],["维护",{"_index":88,"t":{"165":{"position":[[93,2]]},"412":{"position":[[34,2]]},"618":{"position":[[93,2]]},"844":{"position":[[34,2]]}}}],["编程",{"_index":64,"t":{"165":{"position":[[1,2]]},"618":{"position":[[1,2]]}}}],["能",{"_index":2,"t":{"10":{"position":[[0,1]]}}}],["能够",{"_index":74,"t":{"165":{"position":[[49,2]]},"618":{"position":[[49,2]]}}}],["规模",{"_index":80,"t":{"165":{"position":[[66,2]]},"618":{"position":[[66,2]]}}}],["视角",{"_index":36,"t":{"14":{"position":[[49,2]]}}}],["解析",{"_index":135,"t":{"935":{"position":[[18,2]]}}}],["警告",{"_index":130,"t":{"852":{"position":[[7,2]]}}}],["设计",{"_index":39,"t":{"109":{"position":[[12,2]]},"165":{"position":[[6,2]]},"412":{"position":[[16,2],[55,2]]},"591":{"position":[[12,2]]},"618":{"position":[[6,2]]},"844":{"position":[[16,2],[55,2]]}}}],["话",{"_index":4,"t":{"10":{"position":[[4,1]]}}}],["详细",{"_index":127,"t":{"554":{"position":[[54,2]]}}}],["说",{"_index":3,"t":{"10":{"position":[[1,1]]}}}],["调试",{"_index":119,"t":{"554":{"position":[[25,2]]}}}],["贡献",{"_index":20,"t":{"12":{"position":[[39,2]]}}}],["软件系统",{"_index":104,"t":{"412":{"position":[[41,4]]},"844":{"position":[[41,4]]}}}],["运行",{"_index":56,"t":{"125":{"position":[[46,2]]},"554":{"position":[[28,2]]},"571":{"position":[[46,2]]}}}],["这些",{"_index":100,"t":{"412":{"position":[[21,2]]},"844":{"position":[[21,2]]}}}],["进程",{"_index":60,"t":{"125":{"position":[[56,2]]},"571":{"position":[[56,2]]},"1185":{"position":[[2,2]]}}}],["连接",{"_index":95,"t":{"373":{"position":[[7,2]]}}}],["适应",{"_index":75,"t":{"165":{"position":[[51,2]]},"618":{"position":[[51,2]]}}}],["选择",{"_index":72,"t":{"165":{"position":[[40,2]]},"618":{"position":[[40,2]]}}}],["通过",{"_index":59,"t":{"125":{"position":[[53,2]]},"165":{"position":[[28,2]]},"524":{"position":[[31,2]]},"571":{"position":[[53,2]]},"618":{"position":[[28,2]]}}}],["重写",{"_index":85,"t":{"165":{"position":[[80,2]]},"618":{"position":[[80,2]]}}}],["重构",{"_index":84,"t":{"165":{"position":[[77,2]]},"618":{"position":[[77,2]]}}}],["重要",{"_index":5,"t":{"10":{"position":[[6,2]]},"554":{"position":[[36,2]]}}}],["错误",{"_index":96,"t":{"373":{"position":[[9,2]]}}}],["长期",{"_index":87,"t":{"165":{"position":[[91,2]]},"618":{"position":[[91,2]]}}}],["间通信",{"_index":61,"t":{"125":{"position":[[58,3]]},"571":{"position":[[58,3]]}}}],["阶层",{"_index":14,"t":{"12":{"position":[[19,2]]}}}],["降低",{"_index":86,"t":{"165":{"position":[[89,2]]},"618":{"position":[[89,2]]}}}],["需求",{"_index":77,"t":{"165":{"position":[[56,2]]},"618":{"position":[[56,2]]}}}],["面向对象编程",{"_index":97,"t":{"412":{"position":[[0,6]]},"844":{"position":[[0,6]]}}}],["领域",{"_index":29,"t":{"14":{"position":[[19,2]]}}}],["默认",{"_index":134,"t":{"935":{"position":[[10,2]]}}}]],"pipeline":["stemmer"]}},{"documents":[],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]}},{"documents":[{"i":5,"t":"2025年4月25日 · 阅读需 6 分钟 weidongkl I can see your smile.","s":"人类简史","u":"/blog/authors/weidongkl","h":"","p":3},{"i":7,"t":"2025年2月22日 · 阅读需 2 分钟 weidongkl I can see your smile.","s":"南明史","u":"/blog/authors/weidongkl","h":"","p":3},{"i":9,"t":"2025年2月16日 · 阅读需 1 分钟 weidongkl I can see your smile.","s":"一句顶一万句","u":"/blog/authors/weidongkl","h":"","p":3},{"i":11,"t":"能说的上话很重要。 能说的上话很重要。","s":"一句顶一万句","u":"/blog/一句顶一万句","h":"","p":10},{"i":13,"t":"历史书如同一面哈哈镜，常常放大特定利益阶层的功绩，却忽视或淡化了平凡人的力量与贡献。 从《活着》中的普通人到李自成的大顺军，一再证明，平凡个体同样可以成就伟大。明代初年，名将多出自淮西，但若将他们置于一个稳定的时代，他们或许只是普通的农民或奴隶；若将他们放在不同的阵营，他们可能只是他人辉煌的背景。我们通常将伟大定义为时代赋予的成功与名声，但这种定义或许过于狭隘。伟大不应仅限于功成名就，而应更加包容和务实，更贴近人类共同的经验。勇敢、智慧，甚至失败，都值得被赋予伟大的意义。伟大存在于每个个体为生存、理想和信念所付出的努力中，无论成败。","s":"南明史","u":"/blog/南明史","h":"","p":12},{"i":15,"t":"『人类简史』纵览文化、宗教、社会等多元领域，虽在专业深度上有不足，却为我理解『人类社会』提供了宝贵视角。","s":"人类简史","u":"/blog/人类简史","h":"","p":14},{"i":17,"t":"大航海时代的开启，使西班牙和葡萄牙率先步入强盛时期。然而，好景不长，荷兰后来居上。其中，一个关键因素在于其司法独立。荷兰重视并保护个人权利，尤其是私人财产，而独裁政权往往缺乏这种保障。这导致资本和财富自然流向更能提供安全与稳定的地区，从而推动了荷兰的崛起。 自由与平等是最基本的价值观，但两者之间存在内在矛盾。为了实现平等，必须对部分人的自由加以限制；而如果人人都享有绝对的自由，社会必然会走向不平等。因此，现实中的制度往往在两者之间寻求平衡，而非极端地追求其一。","s":"司法","u":"/blog/人类简史","h":"#司法","p":14},{"i":19,"t":"小国寡民的文化并非某些人刻意设计的剥削工具，而是历史巧合的产物，是在人类心理中寄生并繁衍的观念体系。成功的文化，如同人类与小麦一样，擅长自我复制与传播。然而，文化的成功并不意味着对人类有益——繁荣的文化未必是善良的文化，成功不等于优越。","s":"文化","u":"/blog/人类简史","h":"#文化","p":14},{"i":21,"t":"对大多数人而言，经济发展确实改善了生活，使他们比先辈更幸福。然而，这并非绝对。即便集体经济的蛋糕再大，若分配不公，仍会有人陷入困境。原始智人的迁徙与采集生活或许并不艰难，但农业革命后，人类开始聚居，随之而来的统治与压迫逐渐显现。工业革命提升了整体生活水平，却也加剧了财富的不均衡。 经济泡沫指的是虚拟资本（如股票、房地产）价格远超其实际价值，严重脱离实体经济的现象。它源于人性的贪婪和资本主义市场机制，同时也建立在人们对未来持续向好的信念之上。过去两百年间，武装掠夺与工业发展让投资者产生了一种盲目自信，坚信经济会不断繁荣。然而，工业技术的进步并非线性，而是类似于台阶式发展——经历一段稳定期后才会再次跃升。当经济进入稳定期，而预期中的高速增长未能兑现，泡沫便随之产生，仿佛是在透支未来。或许，只有日新月异的科技进步，才能缓解这一困局。 近代科技的飞速发展与资本主义密不可分。资本逐利，而技术领先往往意味着更高的回报。在这种相互促进的关系下，资本推动科技进步，科技反过来助力资本增长，两者共同塑造了现代社会的高速发展。 让普通人过上健康富足的生活，应当是圣人追求的至善之一。从这个角度来看，资本主义似乎扮演了“圣人”的角色，甚至被奉为唯一的“真理”。在这样的逻辑下，财富不仅意味着物质充裕，甚至成为道德的象征。 现代财富的根基在于人们希望增加个人财富的本能驱动。正是这种自私的动力推动了市场竞争与创新，而贪婪在一定程度上成为经济增长的重要催化剂。","s":"经济","u":"/blog/人类简史","h":"#经济","p":14},{"i":23,"t":"家庭关系颇为复杂。在古代，婚姻大多由父母做主，媒妁之言决定了一生，孩子对自己的婚姻和生活几乎没有自主权，这不免令人唏嘘。如今，情况大不相同。父母仍能影响孩子的生活，但孩子有更多自主权，人生的选择权掌握在自己手中。旁人的意见，不过是建议。然而，当生活遇到挫折时，孩子却往往仍会将责任归咎于父母，颇具讽刺意味。","s":"家庭","u":"/blog/人类简史","h":"#家庭","p":14},{"i":26,"t":"在 Makefile 中，:（单冒号）和 ::（双冒号）都用于定义目标（target），但它们的行为存在关键区别。理解它们的用法可以帮助我们更好地组织 Makefile，提高可维护性和灵活性。","s":"1. 概述","u":"/docs/note/build/makefile:","h":"#1-概述","p":24},{"i":28,"t":"语法 行为 :（单冒号） 定义唯一规则，如果同一目标出现多次，后面的规则会覆盖前面的规则 ::（双冒号） 定义多个独立规则，同一目标可以有多个规则，所有规则都会被执行","s":"2. :（单冒号）与 ::（双冒号）的区别","u":"/docs/note/build/makefile:","h":"#2-单冒号与-双冒号的区别","p":24},{"i":31,"t":"all: build @echo \"Running build\" all: test @echo \"Running test\" 执行 make all 结果： Running test 解释： all: 目标被定义了两次。 后面的 all: test 覆盖 了前面的 all: build，因此只执行 test 相关的命令。","s":"3.1 基本示例","u":"/docs/note/build/makefile:","h":"#31-基本示例","p":24},{"i":33,"t":"all: build test: @echo \"Testing...\" all: test # 覆盖前面的规则 执行 make all 结果： Testing... 解释： all: build 先定义了 build 依赖。 all: test 覆盖了前面的 all: build，最终 all 只依赖 test。 适用场景： 适用于单一规则的目标，如 CC = gcc 这类变量定义。 确保不执行重复规则，仅保留最后一次的定义。","s":"3.2 依赖的覆盖","u":"/docs/note/build/makefile:","h":"#32-依赖的覆盖","p":24},{"i":36,"t":"all:: build @echo \"Running build\" all:: test @echo \"Running test\" 执行 make all 结果： Running build Running test 解释： all:: 目标被定义了两次，但不会相互覆盖。 make all 会依次执行所有 all:: 规则。","s":"4.1 基本示例","u":"/docs/note/build/makefile:","h":"#41-基本示例","p":24},{"i":38,"t":"test:: unit-test t@echo \"Integration testing...\" test:: integration-test t@echo \"Unit testing...\" 执行 make test 结果： Integration testing... Unit testing... 解释： test:: 目标多次定义，每个规则都会被执行。 适用场景： 适用于模块化规则，比如 make test 可能需要多个测试步骤。 扩展性更强，多个 Makefile 片段可以独立定义 test::，不会相互覆盖。","s":"4.2 组合依赖","u":"/docs/note/build/makefile:","h":"#42-组合依赖","p":24},{"i":40,"t":"适用场景 使用 :（单冒号） 使用 ::（双冒号） 唯一规则目标 ✅ ❌ 可累积执行的目标 ❌ ✅ 变量赋值（如 CC=gcc） ✅ ❌ 多 Makefile 规则合并 ❌ ✅ 防止规则覆盖 ❌ ✅","s":"5. : vs :: 适用场景总结","u":"/docs/note/build/makefile:","h":"#5--vs--适用场景总结","p":24},{"i":42,"t":":（单冒号） 适用于唯一规则，如果目标重复定义，后面的规则会覆盖前面的。 ::（双冒号） 允许多次定义相同目标，并且所有规则都会被执行。 如果 Makefile 可能被多个文件拆分并包含（include Makefile.common），推荐使用 :: 以避免目标覆盖。 🚀 掌握 : 和 :: 的区别，有助于编写更灵活和可维护的 Makefile！","s":"6. 结论","u":"/docs/note/build/makefile:","h":"#6-结论","p":24},{"i":46,"t":"用于打印调试信息。 info 打印内容，warning 打印内容并附加行号。","s":"功能：","u":"/docs/note/build/makefile_function","h":"#功能","p":43},{"i":48,"t":"可以使用 make -n 来打印命令但不执行，从而帮助调试。","s":"调试：","u":"/docs/note/build/makefile_function","h":"#调试","p":43},{"i":50,"t":"$(warning $(LANGUAGES)) # 29行 $(info $(LANGUAGES)) # 30行 $(warning xxx) # 31行 $ make -n Makefile:29: zh wd zh wd Makefile:31: xxx","s":"示例：","u":"/docs/note/build/makefile_function","h":"#示例","p":43},{"i":53,"t":"执行文本替换：将文本中所有出现的 from 替换为 to。","s":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-1","p":43},{"i":55,"t":"$(subst from,to,text)","s":"用法：","u":"/docs/note/build/makefile_function","h":"#用法","p":43},{"i":57,"t":"$(subst ee,EE,feet on the street) 输出：fEEt on the strEEt","s":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-1","p":43},{"i":60,"t":"通过通配符返回文件列表，类似于 Python 的 glob。","s":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-2","p":43},{"i":62,"t":"$(wildcard pattern)","s":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-1","p":43},{"i":64,"t":"获取 po 目录下所有以 .po 结尾的文件： $(warning $(wildcard po/*.po)) # Makefile:20: po/zh.po po/wd.po","s":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-2","p":43},{"i":67,"t":"替换字符串，可以使用 % 通配符，支持模式替换。","s":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-3","p":43},{"i":69,"t":"$(patsubst pattern,replacement,text)","s":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-2","p":43},{"i":71,"t":"subst 仅支持完全匹配替换。 patsubst 支持模式匹配。","s":"区别：","u":"/docs/note/build/makefile_function","h":"#区别","p":43},{"i":73,"t":"text := Hello, world! result := $(subst world,Makefile,$(text)) all: @echo $(result) # 输出: Hello, Makefile! files := src/foo.c src/bar.c src/baz.c objects := $(patsubst src/%.c,build/%.o,$(files)) all: @echo $(objects) # 输出: build/foo.o build/bar.o build/baz.o","s":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-3","p":43},{"i":76,"t":"为每个文件名添加后缀。","s":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-4","p":43},{"i":78,"t":"$(addsuffix suffix, names...)","s":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-3","p":43},{"i":80,"t":"$(addsuffix .c,foo bar) 返回值：foo.c bar.c","s":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-4","p":43},{"i":83,"t":"从文件名中提取前缀部分（即点号 . 之前的部分）。","s":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-5","p":43},{"i":85,"t":"$(basename names...)","s":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-4","p":43},{"i":87,"t":"$(basename src/foo.c src-1.0/bar.c /home/jack/.font.cache-1 hacks) 提取文件名和去掉后缀： filepath := src/foo.c # 提取文件名 filename := $(notdir $(filepath)) # 去掉后缀 name_without_ext := $(basename $(filename)) all: @echo \"Filename: $(filename)\" # 输出: foo.c @echo \"Name without extension: $(name_without_ext)\" # 输出: foo","s":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-5","p":43},{"i":90,"t":"从字符串中提取第一个单词。","s":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-6","p":43},{"i":92,"t":"$(firstword text)","s":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-5","p":43},{"i":94,"t":"words := foo bar baz first := $(firstword $(words)) all: @echo $(first) # 输出: foo","s":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-6","p":43},{"i":97,"t":"去除字符串开头和结尾的空格。","s":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-7","p":43},{"i":99,"t":"$(strip text)","s":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-6","p":43},{"i":101,"t":"text := foo bar baz stripped := $(strip $(text)) all: @echo \"$(stripped)\" # 输出: foo bar baz","s":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-7","p":43},{"i":104,"t":"提取字符串中的第 N 个单词（单词以空格分隔）。","s":"功能：","u":"/docs/note/build/makefile_function","h":"#功能-8","p":43},{"i":106,"t":"$(word N,text)","s":"用法：","u":"/docs/note/build/makefile_function","h":"#用法-7","p":43},{"i":108,"t":"words := foo bar baz second_word := $(word 2,$(words)) all: @echo $(second_word) # 输出: bar","s":"示例：","u":"/docs/note/build/makefile_function","h":"#示例-8","p":43},{"i":110,"t":"microkernel 设计1 目前只支持服务发送消息，内核接受消息。 在本章节，我会增加内核发送消息到服务","s":"microkernel 设计2","u":"/docs/note/design/microkernel/microkernel2","h":"","p":109},{"i":112,"t":"内核发送消息到服务","s":"1. 目标","u":"/docs/note/design/microkernel/microkernel2","h":"#1-目标","p":109},{"i":115,"t":"服务增加消息处理方法 // kernel/kernel.go type Service interface { Start() error Stop() error Name() string // 增加消息处理方法 Handle(msg string) string } 事件增加发送地址 // kernel/kernel.go // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string } 内核发送事件到服务 // kernel/kernel.go // HandleEvent 处理事件（模拟服务间通信） func (k *Kernel) HandleEvent(evt Event) (msg string) { k.mutex.RLock() defer k.mutex.RUnlock() if svc, ok := k.services[evt.To]; ok { return svc.Handle(evt.Content) } return \"service not found\" }","s":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel2","h":"#21-kernel核心","p":109},{"i":117,"t":"增加Handle方法实现 // service/log.go // service 增加Handle接口实现 func (l *LogService) Handle(msg string) string { fmt.Printf(\"[%s] LOG handle kernel event: %s\\n\", l.name, msg) return fmt.Sprintf(\"[%s] LOG Handle: %s\\n\", l.name, msg) }","s":"2.2 LogService","u":"/docs/note/design/microkernel/microkernel2","h":"#22-logservice","p":109},{"i":119,"t":"kernel发送消息到service // main.go // 6. microKernel 发送事件到指定服务 microKernel.HandleEvent(kernel.Event{ From: \"microKernel\", To: \"logger\", Type: \"log\", Content: \"Hello, Log!\", }) time.Sleep(1 * time.Millisecond)","s":"2.3 主程序（运行微内核 + 服务）","u":"/docs/note/design/microkernel/microkernel2","h":"#23-主程序运行微内核--服务","p":109},{"i":121,"t":"[logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... 查看完整代码","s":"2.4 运行结果","u":"/docs/note/design/microkernel/microkernel2","h":"#24-运行结果","p":109},{"i":123,"t":"HandleEvent 修改为 Send SendEvent 修改为 Push LoopEvent 修改为Listen mutex修改为 mu 查看完整代码","s":"2.5 优化函数和变量命名","u":"/docs/note/design/microkernel/microkernel2","h":"#25-优化函数和变量命名","p":109},{"i":126,"t":"microkernel（微内核）架构的核心思想是 核心功能最小化，其他功能以插件或服务的形式运行在用户态，通过 进程间通信（IPC） 与内核交互。","s":"microkernel 设计1","u":"/docs/note/design/microkernel/microkernel1","h":"","p":125},{"i":129,"t":"内核小、职责单一 内核只负责最基本的功能，比如线程调度、地址空间管理、IPC。 模块化、可扩展 文件系统、驱动程序等作为用户空间服务，易于替换和调试。 可靠性高 一个用户态服务崩溃不会影响整个系统。 通信开销大 模块间依赖消息传递，相比传统内核切换用户态和内核态的代价更大。","s":"1.1 特点","u":"/docs/note/design/microkernel/microkernel1","h":"#11-特点","p":125},{"i":131,"t":"Kernel（内核） 负责 服务注册、消息路由、生命周期管理。 Services（服务） 独立模块（如 LogService、StorageService），运行在用户态。 通信机制（IPC） 使用 Go 的 Channel 或 gRPC 进行通信。","s":"1.2 核心组件","u":"/docs/note/design/microkernel/microkernel1","h":"#12-核心组件","p":125},{"i":134,"t":"package kernel import ( \"context\" \"errors\" \"fmt\" \"sync\" ) // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string } // Kernel 微内核核心 type Kernel struct { // 注册的服务通道 services map[string]Service // 保护 services 的并发访问 mutex sync.RWMutex // 全局事件总线 eventCh chan Event } // Event 定义内核事件（用于服务间通信） type Event struct { From string Type string Content string } // NewKernel 创建微内核实例 func NewKernel() *Kernel { return &Kernel{ services: make(map[string]Service), eventCh: make(chan Event, 100), } } // RegisterService 注册服务 func (k *Kernel) RegisterService(s Service) error { k.mutex.Lock() defer k.mutex.Unlock() name := s.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = s return nil } // StartAll 启动所有服务 func (k *Kernel) StartAll() error { k.mutex.RLock() defer k.mutex.RUnlock() for _, s := range k.services { if err := s.Start(); err != nil { return err } } return nil } // StopAll 停止所有服务 func (k *Kernel) StopAll() error { k.mutex.RLock() defer k.mutex.RUnlock() var err error for _, s := range k.services { if e := s.Stop(); e != nil { err = e } } return err } // SendEvent 发送事件（模拟 IPC） func (k *Kernel) SendEvent(evt Event) { k.eventCh <- evt } // EventLoop 事件循环（处理服务间通信） func (k *Kernel) EventLoop(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: %s - %s\\n\", evt.From, evt.Type, evt.Content) } } }","s":"2.1 定义 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel1","h":"#21-定义-kernel核心","p":125},{"i":136,"t":"package service import ( \"fmt\" \"microkernel/kernel\" ) // LogService 日志服务 type LogService struct { name string kernel *kernel.Kernel logCh chan string stopCh chan struct{} } func NewLogService(name string, kernel *kernel.Kernel) *LogService { return &LogService{ name: name, kernel: kernel, logCh: make(chan string, 100), stopCh: make(chan struct{}), } } func (l *LogService) Start() error { fmt.Printf(\"[%s] starting...\\n\", l.name) go l.run() return nil } func (l *LogService) Stop() error { fmt.Printf(\"[%s] stopping...\\n\", l.name) close(l.stopCh) return nil } func (l *LogService) Name() string { return l.name } func (l *LogService) run() { for { select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 l.kernel.SendEvent(kernel.Event{ From: l.name, Type: \"log\", Content: log, }) } } } func (l *LogService) Log(msg string) { l.logCh <- msg }","s":"2.2 实现示例服务（LogService）","u":"/docs/note/design/microkernel/microkernel1","h":"#22-实现示例服务logservice","p":125},{"i":138,"t":"package main import ( \"context\" \"microkernel/kernel\" \"microkernel/service\" \"time\" ) func main() { // 1. 创建微内核 kernel := kernel.NewKernel() // 2. 注册服务 logSvc := service.NewLogService(\"logger\", kernel) if err := kernel.RegisterService(logSvc); err != nil { panic(err) } // 3. 启动所有服务 if err := kernel.StartAll(); err != nil { panic(err) } // 4. 启动事件循环 ctx, cancel := context.WithCancel(context.Background()) defer cancel() go kernel.EventLoop(ctx) // 5. 测试日志服务 logSvc.Log(\"Hello, Microkernel!\") time.Sleep(1 * time.Second) // 6. 停止所有服务 if err := kernel.StopAll(); err != nil { panic(err) } }","s":"2.3 主程序（运行微内核 + 服务）","u":"/docs/note/design/microkernel/microkernel1","h":"#23-主程序运行微内核--服务","p":125},{"i":140,"t":"[logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] stopping...","s":"2.4 运行结果","u":"/docs/note/design/microkernel/microkernel1","h":"#24-运行结果","p":125},{"i":142,"t":"使用 gRPC 替代 Channel（实现跨进程通信）。 动态加载服务（如插件化架构）。 增加服务发现机制（如 Consul/Etcd）。 支持更复杂的事件路由（如基于 Topic 的 Pub/Sub）。","s":"3. 扩展方向","u":"/docs/note/design/microkernel/microkernel1","h":"#3-扩展方向","p":125},{"i":144,"t":"微内核的核心：Kernel 只管理 Service 的生命周期和通信。 服务独立：每个 Service 运行在自己的 Goroutine 中，互不干扰。 通信方式： 简单场景：Channel（如示例）。 复杂场景：gRPC、NATS、WebSocket 等。 查看完整代码","s":"4. 总结","u":"/docs/note/design/microkernel/microkernel1","h":"#4-总结","p":125},{"i":147,"t":"服务状态管理 单独服务管理 优化项目结构","s":"1. 目标","u":"/docs/note/design/microkernel/microkernel5","h":"#1-目标","p":145},{"i":150,"t":"定义服务状态和服务元数据 // kernel/service.go // ServiceState 定义微内核服务状态 type ServiceState int // 使用iota枚举类型，自动计算枚举值 const ( Created ServiceState = iota Running Stopped ) // ServiceState.String() func (s ServiceState) String() string { // 状态转换成字符串 // 其中[...]表示让编译器自动计算数组的长度 return [...]string{\"Created\", \"Running\", \"Stopped\"}[s] } // serviceMeta 定义微内核服务元数据 type serviceMeta struct { svc Service state ServiceState } 单个服务管理 // kernel/kernel.go func (k *MicroKernel) StartService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Running { return errors.New(\"service already started\") } if err := meta.svc.Start(); err != nil { return err } meta.state = Running fmt.Println(\"Started:\", meta.svc.Name()) return nil } func (k *MicroKernel) StopService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Stopped { return errors.New(\"service already stopped\") } if err := meta.svc.Stop(); err != nil { return err } meta.state = Stopped fmt.Println(\"Stopped:\", meta.svc.Name()) return nil } Listen 增加服务状态判断，未运行的服务，不再处理消息 // Listen 事件循环（处理服务间通信） // 监听事件，处理服务间通信 // 重命名 EventLoop 为 Listen func (k *MicroKernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[MicroKernel] Event from %s: - %s\\n\", evt.From, evt.Content) // 发送给 MicroKernel 自己 if evt.To == \"\" { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 0, Message: \"Handled by kernel\", Data: \"ok\"} } continue } // 路由到目标服务 k.mu.RLock() meta, ok := k.services[evt.To] k.mu.RUnlock() if !ok || meta.state != Running { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 404, Message: \"service unavailable\", Data: \"\"} } continue } // 调用目标服务处理，并返回 go func(s Service, m Event) { result := s.Handle(m) if m.ReplyCh != nil { select { case m.ReplyCh <- result: case <-time.After(time.Duration(m.TimeoutMs) * time.Millisecond): m.ReplyCh <- Reply{Code: 408, Message: \"timeout\", Data: \"\"} } } }(meta.svc, evt) } } }","s":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel5","h":"#21-kernel核心","p":145},{"i":152,"t":"Registered: logger Registered: echo Starting all services... [logger] starting... [echo] starting... [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } [logger] stopping... [echo] stopping... 查看完整代码","s":"2.2 运行结果","u":"/docs/note/design/microkernel/microkernel5","h":"#22-运行结果","p":145},{"i":155,"t":"服务间通信（通过内核转发） 标准化消息协议结构 支持状态码、错误、数据负载。 异步+超时机制 服务发出请求时可以设置超时时间，避免长期阻塞。","s":"1. 目标","u":"/docs/note/design/microkernel/microkernel4","h":"#1-目标","p":153},{"i":158,"t":"定义标准消息格式 Reply 包含code/message/Data Event ReplyCh 使用标准格式的Reply // kernel/kernel.go // Reply 定义内核事件回复 type Reply struct { Code int // 0 表示成功，非0表示错误码 Message string // 描述信息 Data string // 可选负载 } // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string // 增加响应通道,使用 chan Reply，提高回复的灵活性 ReplyCh chan Reply // 可选：超时时间 TimeoutMs int } 服务改造 handle 从处理字符串修改为处理事件，返回标准Reply // kernel/kernel.go // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string Handle(Event) Reply } Listen 路由和事件总线设计 // Listen 事件循环（处理服务间通信） // 监听事件，处理服务间通信 // 重命名 EventLoop 为 Listen func (k *Kernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: - %s\\n\", evt.From, evt.Content) // 发送给 Kernel 自己 if evt.To == \"\" { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 0, Message: \"Handled by kernel\", Data: \"ok\"} } continue } // 路由到目标服务 k.mu.RLock() svc, ok := k.services[evt.To] k.mu.RUnlock() if !ok { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 404, Message: \"Service not found\", Data: \"\"} } continue } // 调用目标服务处理，并返回 go func(s Service, m Event) { result := s.Handle(m) if m.ReplyCh != nil { select { case m.ReplyCh <- result: case <-time.After(time.Duration(m.TimeoutMs) * time.Millisecond): m.ReplyCh <- Reply{Code: 408, Message: \"timeout\", Data: \"\"} } } }(svc, evt) } } }","s":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel4","h":"#21-kernel核心","p":153},{"i":160,"t":"根据count随机分发（Push 指定了发送位置） func (l *LogService) run() { var count = 1 for { count++ select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 replyCh := make(chan kernel.Reply, 1) if count%2 == 0 { l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", Content: log, ReplyCh: replyCh, TimeoutMs: 1000, }) } else { l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", To: \"echo\", Content: log, ReplyCh: replyCh, TimeoutMs: 1000, }) } // 等待内核回应 reply := <-replyCh fmt.Printf(\"[%s] got reply from kernel: %s\\n\", l.Name(), reply.Message) } } }","s":"2.2 LogService","u":"/docs/note/design/microkernel/microkernel4","h":"#22-logservice","p":153},{"i":162,"t":"func (e *EchoService) Handle(evt kernel.Event) kernel.Reply { return kernel.Reply{Code: 0, Message: \"echo service handled\", Data: fmt.Sprintf(\"from %s: %s\", evt.From, evt.Content)} }","s":"2.3 增加另一个类似的EchoService","u":"/docs/note/design/microkernel/microkernel4","h":"#23-增加另一个类似的echoservice","p":153},{"i":164,"t":"Registered: logger # 注册另一个服务 Registered: echo [logger] starting... [echo] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [Kernel] Event from logger: - Hello, Echo! # 转发到echoService 处理 [logger] got reply from kernel: echo service handled [Kernel] Send Event to logger: Hello, Log! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... [echo] stopping... 查看完整代码","s":"2.4 运行结果","u":"/docs/note/design/microkernel/microkernel4","h":"#24-运行结果","p":153},{"i":166,"t":"在编程和系统设计中，Future-Proof 机制指的是通过合理的架构设计和技术选择，使代码或系统能够适应未来的需求变化、技术演进和规模扩展，而无需大规模重构或重写。其核心目标是降低长期维护成本，提高可扩展性。","s":"Future-Proof 机制","u":"/docs/note/design/future_proof","h":"","p":165},{"i":168,"t":"以下是实现 Future-Proof 代码的关键设计思想：","s":"1. Future-Proof 机制的关键原则","u":"/docs/note/design/future_proof","h":"","p":165},{"i":170,"t":"目标：模块间通过清晰的接口交互，而非直接依赖具体实现。使用接口（Go 的 interface）而非具体类型，依赖注入而非硬编码。 优点： 业务逻辑与具体实现解耦 易于扩展新的实现方式 便于单元测试（可以mock Notifier） 设计点： 面向接口编程：依赖抽象而非具体实现 依赖注入：通过构造函数或方法参数注入依赖 单一职责：每个组件只关注自己的核心功能 最小知识原则：组件只与直接相关的组件交互 松耦合示例： 定义接口 // Notifier 通知接口 type Notifier interface { Send(message string) error } 接口实现 // EmailNotifier 邮件通知实现 type EmailNotifier struct{} func (e EmailNotifier) Send(message string) error { fmt.Printf(\"发送邮件通知: %s\\n\", message) return nil } // SMSNotifier 短信通知实现 type SMSNotifier struct{} func (s SMSNotifier) Send(message string) error { fmt.Printf(\"发送短信通知: %s\\n\", message) return nil } 业务逻辑调用接口 // NotificationService 通知服务 type NotificationService struct { notifier Notifier } func NewNotificationService(notifier Notifier) *NotificationService { return &NotificationService{notifier: notifier} } func (s *NotificationService) ProcessOrder(orderID string) { // 处理订单逻辑... message := fmt.Sprintf(\"订单 %s 已处理\", orderID) _ = s.notifier.Send(message) } 主函数调用 func main() { // 可以轻松替换通知实现 emailNotifier := EmailNotifier{} service := NewNotificationService(emailNotifier) service.ProcessOrder(\"12345\") // 切换为短信通知不需要修改业务逻辑 smsNotifier := SMSNotifier{} service = NewNotificationService(smsNotifier) service.ProcessOrder(\"67890\") } 紧耦合示例： 使用具体类型 // EmailSender 邮件发送器 type EmailSender struct{} func (e EmailSender) SendEmail(message string) error { fmt.Printf(\"发送邮件: %s\\n\", message) return nil } 业务类型依赖具体类 // OrderProcessor 订单处理器 type OrderProcessor struct { emailSender EmailSender } func (p *OrderProcessor) ProcessOrder(orderID string) { // 处理订单逻辑... message := fmt.Sprintf(\"订单 %s 已处理\", orderID) _ = p.emailSender.SendEmail(message) } 主函数调用 func main() { processor := OrderProcessor{emailSender: EmailSender{}} processor.ProcessOrder(\"12345\") // 如果要改为短信通知，必须修改OrderProcessor结构体和所有相关代码 }","s":"1.1.  松耦合（Loose Coupling）","u":"/docs/note/design/future_proof","h":"#11--松耦合loose-coupling","p":165},{"i":172,"t":"目标：新增功能时无需修改现有代码。 示例：通过组合而非继承扩展行为（Go 的 embedding 或中间件模式）。 type LoggingAggregator struct { *EventAggregator // 嵌入原有功能 logger Logger } // 新增日志能力而不修改原始聚合器","s":"1.2. 可扩展性（Extensibility）","u":"/docs/note/design/future_proof","h":"#12-可扩展性extensibility","p":165},{"i":174,"t":"目标：将易变的参数（如超时时间、规则路径）外置为配置。 示例：通过环境变量或配置文件驱动行为： timeout := os.Getenv(\"AGGREGATOR_TIMEOUT\")","s":"1.3. 配置化而非硬编码","u":"/docs/note/design/future_proof","h":"#13-配置化而非硬编码","p":165},{"i":176,"t":"目标：数据交互格式（如 JSON、Protobuf）支持向后兼容。 示例：使用 Protocol Buffers 的字段编号机制，避免破坏旧版解析。","s":"1.4. 协议与数据格式的兼容性","u":"/docs/note/design/future_proof","h":"#14-协议与数据格式的兼容性","p":165},{"i":178,"t":"目标：并发模型能随规模调整（如 Goroutine 池 vs 固定 Worker）。 示例：在之前的聚合器代码中，通过 Channel 通信可轻松扩展为多 Worker： for i := 0; i < runtime.NumCPU(); i++ { go aggregator.processRequests() }","s":"1.5. 并发模型的可适应性","u":"/docs/note/design/future_proof","h":"#15-并发模型的可适应性","p":165},{"i":180,"t":"目标：内置日志、指标、链路追踪等，便于未来诊断问题。 示例：在 rulesUpdateRequest 中添加请求 ID 和计时： type rulesUpdateRequest struct { RequestID string // 用于追踪 StartTime time.Time // ...其他字段 }","s":"1.6. 可观测性（Observability）","u":"/docs/note/design/future_proof","h":"#16-可观测性observability","p":165},{"i":182,"t":"目标：处理边界条件（如 nil Channel、超时）。 示例：在 Channel 通信中添加超时： func (a *EventAggregator) UpdateRules(rules []string) error { req := &rulesUpdateRequest{..., response: make(chan error, 1)} select { case a.updateChannel <- req: return <-req.response case <-time.After(1 * time.Second): return errors.New(\"update timeout\") } }","s":"1.7. 防御性编程","u":"/docs/note/design/future_proof","h":"#17-防御性编程","p":165},{"i":184,"t":"package main import ( \"fmt\" \"time\" ) // EventAggregator manages a set of rules and processes updates through channels type EventAggregator struct { rules []string updateChannel chan *rulesUpdateRequest shutdownChan chan struct{} } // rulesUpdateRequest represents a request to update the rules type rulesUpdateRequest struct { newRules []string response chan error } // NewEventAggregator creates and starts a new EventAggregator func NewEventAggregator() *EventAggregator { agg := &EventAggregator{ rules: []string{}, updateChannel: make(chan *rulesUpdateRequest), shutdownChan: make(chan struct{}), } go agg.processRequests() return agg } // UpdateRules safely updates the rules by sending a request through the channel func (a *EventAggregator) UpdateRules(newRules []string) error { req := &rulesUpdateRequest{ newRules: newRules, response: make(chan error, 1), // Buffered to avoid blocking } a.updateChannel <- req return <-req.response } // Shutdown gracefully stops the aggregator func (a *EventAggregator) Shutdown() { close(a.shutdownChan) } // processRequests handles incoming requests in a thread-safe manner func (a *EventAggregator) processRequests() { for { select { case req := <-a.updateChannel: a.rules = req.newRules fmt.Println(\"Updated rules:\", a.rules) req.response <- nil case <-a.shutdownChan: fmt.Println(\"Shutting down aggregator\") return } } } func main() { // Create and start the aggregator aggregator := NewEventAggregator() defer aggregator.Shutdown() // Simulate some updates go func() { time.Sleep(500 * time.Millisecond) if err := aggregator.UpdateRules([]string{\"a\", \"b\", \"c\"}); err != nil { fmt.Println(\"Error updating rules:\", err) } }() go func() { time.Sleep(1 * time.Second) if err := aggregator.UpdateRules([]string{\"d\", \"e\", \"f\"}); err != nil { fmt.Println(\"Error updating rules:\", err) } }() // Give time for the updates to process time.Sleep(2 * time.Second) } 状态隔离：所有规则更新通过 Channel 串行化，避免竞态条件。 易于扩展：可新增 QueryRules() 方法而不影响现有逻辑。 并发友好：Channel 模型天然支持协程扩展。 关闭控制：通过 shutdownChan 实现优雅终止。 根据原则，执行部分优化 package main import ( \"context\" \"errors\" \"fmt\" \"sync\" \"time\" ) // RuleSet represents a collection of rules with metadata type RuleSet struct { Rules []string Version int // Track changes over time Modified time.Time // Last update timestamp } // SetRulesRequest encapsulates a rules update operation type SetRulesRequest struct { NewRules []string Response chan error RequestID string // For tracing Timestamp time.Time // For auditing } // AggregatorOptions configures aggregator behavior type AggregatorOptions struct { MaxPendingRequests int // Buffer size for requests RequestTimeout time.Duration // Timeout for rule updates EnableValidation bool // Future: validate rules before applying } // Aggregator manages rule sets with thread-safe operations type Aggregator struct { currentRuleSet RuleSet options AggregatorOptions requestChan chan *SetRulesRequest queryChan chan chan RuleSet // New channel for safe rule queries commandChan chan func() // Generic command channel for future extensions stopChan chan struct{} shutdownOnce sync.Once stopWg sync.WaitGroup } // NewAggregator creates a configured aggregator instance func NewAggregator(opts AggregatorOptions) *Aggregator { if opts.MaxPendingRequests <= 0 { opts.MaxPendingRequests = 10 } if opts.RequestTimeout <= 0 { opts.RequestTimeout = 2 * time.Second } return &Aggregator{ currentRuleSet: RuleSet{Version: 1}, options: opts, requestChan: make(chan *SetRulesRequest, opts.MaxPendingRequests), queryChan: make(chan chan RuleSet), commandChan: make(chan func()), stopChan: make(chan struct{}), } } // Run starts the aggregator's processing loop func (a *Aggregator) Run() { a.stopWg.Add(1) defer a.stopWg.Done() for { select { case req := <-a.requestChan: a.handleSetRules(req) case respChan := <-a.queryChan: a.handleGetRules(respChan) case cmd := <-a.commandChan: cmd() // Execute arbitrary commands case <-a.stopChan: return } } } func (a *Aggregator) handleSetRules(req *SetRulesRequest) { defer close(req.Response) // Future: could add validation here if a.options.EnableValidation { // Validate rules before applying } a.currentRuleSet = RuleSet{ Rules: req.NewRules, Version: a.currentRuleSet.Version + 1, Modified: time.Now(), } fmt.Printf(\"Updated rules (v%d): %v\\n\", a.currentRuleSet.Version, a.currentRuleSet.Rules) req.Response <- nil } func (a *Aggregator) handleGetRules(respChan chan RuleSet) { respChan <- a.currentRuleSet close(respChan) } // SetRules updates the rule set with timeout support func (a *Aggregator) SetRules(ctx context.Context, rules []string) error { req := &SetRulesRequest{ NewRules: rules, Response: make(chan error), RequestID: fmt.Sprintf(\"req-%d\", time.Now().UnixNano()), Timestamp: time.Now(), } select { case a.requestChan <- req: select { case err := <-req.Response: return err case <-ctx.Done(): return ctx.Err() } case <-a.stopChan: return errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return ctx.Err() } } // GetRules safely retrieves the current rule set func (a *Aggregator) GetRules(ctx context.Context) (RuleSet, error) { respChan := make(chan RuleSet) select { case a.queryChan <- respChan: select { case rules := <-respChan: return rules, nil case <-ctx.Done(): return RuleSet{}, ctx.Err() } case <-a.stopChan: return RuleSet{}, errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return RuleSet{}, ctx.Err() } } // Stop gracefully shuts down the aggregator func (a *Aggregator) Stop() { a.shutdownOnce.Do(func() { close(a.stopChan) a.stopWg.Wait() close(a.requestChan) close(a.queryChan) close(a.commandChan) fmt.Println(\"Aggregator stopped gracefully\") }) } // ExecuteCommand provides extension point for future operations func (a *Aggregator) ExecuteCommand(ctx context.Context, cmd func()) error { select { case a.commandChan <- cmd: return nil case <-a.stopChan: return errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return ctx.Err() } } func main() { // Configurable options opts := AggregatorOptions{ MaxPendingRequests: 20, RequestTimeout: 3 * time.Second, EnableValidation: false, // Could be enabled in future } aggregator := NewAggregator(opts) go aggregator.Run() // Example usage with context ctx, cancel := context.WithTimeout(context.Background(), 2*time.Second) defer cancel() // Set rules err := aggregator.SetRules(ctx, []string{\"a\", \"b\", \"c\"}) if err != nil { fmt.Println(\"Error setting rules:\", err) } // Get rules rules, err := aggregator.GetRules(ctx) if err != nil { fmt.Println(\"Error getting rules:\", err) } else { fmt.Printf(\"Current rules (v%d): %v\\n\", rules.Version, rules.Rules) } // Execute custom command aggregator.ExecuteCommand(ctx, func() { fmt.Println(\"Executing custom command\") }) aggregator.Stop() } Enhanced Rule Metadata: Added RuleSet struct with versioning and timestamps Supports audit trails and change tracking Configurable Options: AggregatorOptions allows tuning without code changes Supports future features like validation Multiple Communication Channels: Separate channels for commands (commandChan) and queries (queryChan) Prevents mixing of operation types Context Support: All operations respect context for timeouts/cancellation Better integration with modern Go applications Extension Points: ExecuteCommand method for adding future functionality Generic command channel pattern Improved Shutdown: sync.Once ensures safe single shutdown sync.WaitGroup for proper goroutine cleanup Thread-Safe Queries: Added safe GetRules method via channel No direct access to internal state Request Tracing: Added request IDs for debugging Timestamps for all operations 使用命令模式优化 package main import ( \"context\" \"errors\" \"fmt\" \"sync\" \"time\" ) // Command defines the interface all commands must implement type Command interface { Execute(ctx context.Context) error } // CommandHandler processes commands type CommandHandler struct { commands chan Command stopChan chan struct{} wg sync.WaitGroup } // NewCommandHandler creates a new handler with specified queue size func NewCommandHandler(queueSize int) *CommandHandler { return &CommandHandler{ commands: make(chan Command, queueSize), stopChan: make(chan struct{}), } } // Start begins processing commands func (h *CommandHandler) Start() { h.wg.Add(1) go func() { defer h.wg.Done() for { select { case cmd := <-h.commands: ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second) err := cmd.Execute(ctx) cancel() if err != nil { fmt.Printf(\"Command execution failed: %v\\n\", err) } case <-h.stopChan: return } } }() } // Submit sends a command for execution func (h *CommandHandler) Submit(ctx context.Context, cmd Command) error { select { case h.commands <- cmd: return nil case <-h.stopChan: return errors.New(\"handler is shutting down\") case <-ctx.Done(): return ctx.Err() } } // Stop gracefully shuts down the handler func (h *CommandHandler) Stop() { close(h.stopChan) h.wg.Wait() close(h.commands) } // --- Concrete Commands --- // SetRulesCommand implements Command for rule updates type SetRulesCommand struct { Aggregator *Aggregator NewRules []string } func (c *SetRulesCommand) Execute(ctx context.Context) error { return c.Aggregator.SetRules(ctx, c.NewRules) } // GetRulesCommand implements Command for rule queries type GetRulesCommand struct { Aggregator *Aggregator ResultChan chan<- RuleSet } func (c *GetRulesCommand) Execute(ctx context.Context) error { rules, err := c.Aggregator.GetRules(ctx) if err != nil { return err } c.ResultChan <- rules return nil } // --- Aggregator Implementation --- type RuleSet struct { Rules []string Version int Modified time.Time } type Aggregator struct { mu sync.Mutex currentRule RuleSet } func (a *Aggregator) SetRules(ctx context.Context, rules []string) error { a.mu.Lock() defer a.mu.Unlock() select { case <-ctx.Done(): return ctx.Err() default: a.currentRule = RuleSet{ Rules: rules, Version: a.currentRule.Version + 1, Modified: time.Now(), } fmt.Printf(\"Rules updated to version %d\\n\", a.currentRule.Version) return nil } } func (a *Aggregator) GetRules(ctx context.Context) (RuleSet, error) { a.mu.Lock() defer a.mu.Unlock() select { case <-ctx.Done(): return RuleSet{}, ctx.Err() default: return a.currentRule, nil } } // --- Usage Example --- func main() { // Create components handler := NewCommandHandler(10) aggregator := &Aggregator{ currentRule: RuleSet{Version: 0}, } // Start command processor handler.Start() defer handler.Stop() // Submit commands ctx := context.Background() // Set rules command setCmd := &SetRulesCommand{ Aggregator: aggregator, NewRules: []string{\"a\", \"b\", \"c\"}, } handler.Submit(ctx, setCmd) // Get rules command resultChan := make(chan RuleSet, 1) getCmd := &GetRulesCommand{ Aggregator: aggregator, ResultChan: resultChan, } handler.Submit(ctx, getCmd) // Wait for result select { case rules := <-resultChan: fmt.Printf(\"Current rules: %v\\n\", rules.Rules) case <-time.After(1 * time.Second): fmt.Println(\"Timeout waiting for rules\") } } The Command Handler pattern is a behavioral design pattern that encapsulates requests as objects, allowing for parameterization of clients with different requests, queuing of requests, and support for undoable operations. Here's how to implement it in your aggregator: Core Components Command Interface: Defines the execution contract Concrete Commands: Encapsulate specific actions and parameters Invoker: Receives and executes commands Receiver: Knows how to perform the operations Key Features Command Interface: type Command interface { Execute(ctx context.Context) error } Concrete Commands: Each command encapsulates all parameters needed for execution Commands can be serialized/deserialized for distributed systems Command Handler: Manages a queue of commands Processes commands sequentially in a goroutine Supports graceful shutdown Benefits: Decoupling: Separates command creation from execution Extensibility: Easy to add new command types Composability: Commands can be combined into macros Undo/Redo: Can be extended to support command history Advanced Extensions Command Middleware: type CommandMiddleware func(Command) Command func LoggingMiddleware(next Command) Command { return &loggedCommand{next} } Transaction Support: type TransactionCommand struct { Commands []Command } func (t *TransactionCommand) Execute(ctx context.Context) error { // Execute all or nothing } Priority Commands: type PriorityCommand struct { Command Priority int } // Use priority queue instead of channel","s":"2. 聚合器示例","u":"/docs/note/design/future_proof","h":"#2-聚合器示例","p":165},{"i":186,"t":"// 硬编码实现，未来难以修改 var globalRules []string func UpdateRules(rules []string) { globalRules = rules // 直接修改全局状态，线程不安全 }","s":"3. 反模式：非 Future-Proof 的设计","u":"/docs/note/design/future_proof","h":"#3-反模式非-future-proof-的设计","p":165},{"i":188,"t":"Future-Proof 不是过度设计，而是通过遵循 SOLID 原则和 并发安全实践，让代码具备： 适应变化的能力 平滑演进的路径 诊断问题的手段 在 Go 中，Channel 和 Interface 是构建 Future-Proof 系统的核心工具。","s":"4. 总结","u":"/docs/note/design/future_proof","h":"#4-总结","p":165},{"i":191,"t":"支持服务依赖关系管理","s":"1. 目标","u":"/docs/note/design/microkernel/microkernel6","h":"#1-目标","p":189},{"i":194,"t":"定义服务依赖关系。依赖的是服务名称 // kernel/service.go // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string Handle(Event) Reply // Dependencies 返回依赖服务名称 Dependencies() []string // 新增接口 } // serviceMeta 定义微内核服务元数据 type serviceMeta struct { svc Service state ServiceState // 存储依赖，也可以不使用，直接使用svc.Dependencies deps []string } 注册Register增加deps // kernel/kernel.go // Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() name := svc.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil } 启动服务和停止服务增加拓扑排序 // kernel/kernel.go func (k *MicroKernel) topoSort() ([]string, error) { k.mu.RLock() defer k.mu.RUnlock() visited := make(map[string]bool) temp := make(map[string]bool) result := []string{} var visit func(string) error visit = func(name string) error { if temp[name] { return fmt.Errorf(\"circular dependency at %s\", name) } if visited[name] { return nil } temp[name] = true meta, ok := k.services[name] if !ok { return fmt.Errorf(\"service %s not registered\", name) } for _, dep := range meta.deps { if err := visit(dep); err != nil { return err } } visited[name] = true temp[name] = false result = append(result, name) return nil } for name := range k.services { if !visited[name] { if err := visit(name); err != nil { return nil, err } } } return result, nil } func (k *MicroKernel) StartAll() error { sorted, err := k.topoSort() // ... for _, name := range sorted { if err := k.StartService(name); err != nil { // ... } } return nil }","s":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel6","h":"#21-kernel核心","p":189},{"i":196,"t":"服务增加依赖方法实现 func (l *LogService) Dependencies() []string { return []string{\"echo\"} }","s":"2.2 服务","u":"/docs/note/design/microkernel/microkernel6","h":"#22-服务","p":189},{"i":198,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } Stopping all services... [logger] stopping... Stopped: logger [echo] stopping... Stopped: echo 查看完整代码","s":"2.3 运行结果","u":"/docs/note/design/microkernel/microkernel6","h":"#23-运行结果","p":189},{"i":201,"t":"服务 能读取 Kernel 的返回信息 实现方法参考链接： gitee weidongkl.github.io","s":"1. 目标","u":"/docs/note/design/microkernel/microkernel3","h":"#1-目标","p":199},{"i":203,"t":"可以为每个 Service 提供一个专属的响应通道（channel），内核通过这个通道将处理结果或反馈信息“推送”回去。 每次发送消息附带一个 ReplyCh。 内核在收到消息后通过该通道写回响应。 Service 读取 ReplyCh 获取反馈。","s":"2. 代码改动","u":"/docs/note/design/microkernel/microkernel3","h":"#2-代码改动","p":199},{"i":205,"t":"事件增加读取返回的channel // kernel/kernel.go // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string // 增加响应通道 ReplyCh chan string } listen 增加返回值得写入 // kernel/kernel.go func (k *Kernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: %s - %s\\n\", evt.From, evt.Type, evt.Content) // 增加返回的写入 if evt.ReplyCh != nil { evt.ReplyCh <- fmt.Sprintf(\"ack: %s\", evt.Content) } } } }","s":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel3","h":"#21-kernel核心","p":199},{"i":207,"t":"服务增加返回的读取 func (l *LogService) run() { for { select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 replyCh := make(chan string, 1) l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", Content: log, ReplyCh: replyCh, }) // 等待内核回应 reply := <-replyCh fmt.Printf(\"[%s] got reply from kernel: %s\\n\", l.Name(), reply) } } }// service/log.go // service 增加Handle接口实现 func (l *LogService) Handle(msg string) string { fmt.Printf(\"[%s] LOG handle kernel event: %s\\n\", l.name, msg) return fmt.Sprintf(\"[%s] LOG Handle: %s\\n\", l.name, msg) }","s":"2.2 LogService","u":"/docs/note/design/microkernel/microkernel3","h":"#22-logservice","p":199},{"i":209,"t":"Registered: logger [logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] got reply from kernel: ack: Hello, Microkernel! [Kernel] Send Event to logger: Hello, Log! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... 查看完整代码","s":"2.3 运行结果","u":"/docs/note/design/microkernel/microkernel3","h":"#23-运行结果","p":199},{"i":212,"t":"服务热更新增加状态迁移 支持服务加密状态迁移","s":"1. 目标","u":"/docs/note/design/microkernel/microkernel8","h":"#1-目标","p":210},{"i":215,"t":"新增状态接口 // 旧服务可选实现：导出状态 type Exportable interface { ExportState() any } // 新服务可选实现：导入状态 type Importable interface { ImportState(state any) error } 加密接口 type Crypter interface { Encrypt(data any) ([]byte, error) Decrypt(cipher []byte) (any, error) } 加密实现 使用aes type AESCrypter struct { key []byte // 16/24/32 字节 } func NewAESCrypter(key []byte) *AESCrypter { return &AESCrypter{key: key} } func (a *AESCrypter) Encrypt(data any) ([]byte, error) { plaintext, err := json.Marshal(data) if err != nil { return nil, err } block, err := aes.NewCipher(a.key) if err != nil { return nil, err } aesgcm, err := cipher.NewGCM(block) if err != nil { return nil, err } nonce := make([]byte, aesgcm.NonceSize()) if _, err := io.ReadFull(rand.Reader, nonce); err != nil { return nil, err } ciphertext := aesgcm.Seal(nonce, nonce, plaintext, nil) return ciphertext, nil } func (a *AESCrypter) Decrypt(ciphertext []byte) (any, error) { block, err := aes.NewCipher(a.key) if err != nil { return nil, err } aesgcm, err := cipher.NewGCM(block) if err != nil { return nil, err } nonceSize := aesgcm.NonceSize() if len(ciphertext) < nonceSize { return nil, fmt.Errorf(\"ciphertext too short\") } nonce := ciphertext[:nonceSize] cipherData := ciphertext[nonceSize:] plaintext, err := aesgcm.Open(nil, nonce, cipherData, nil) if err != nil { return nil, err } var result any if err := json.Unmarshal(plaintext, &result); err != nil { return nil, err } return result, nil } 替换服务 //func (k *MicroKernel) ReplaceService(newSvc Service) error { // k.mu.Lock() // defer k.mu.Unlock() // // name := newSvc.Name() // oldMeta, exists := k.services[name] // var state any // // if exists { // if exporter, ok := oldMeta.svc.(Exportable); ok { // state = exporter.ExportState() // } // oldMeta.svc.Stop() // fmt.Printf(\"Stopped old version of %s\\n\", name) // } // // // 状态迁移 // if importer, ok := newSvc.(Importable); ok && state != nil { // if err := importer.ImportState(state); err != nil { // return fmt.Errorf(\"state import failed: %w\\n\", err) // } // fmt.Printf(\"State migrated for service %s\\n\", name) // } // // // 替换服务元信息 // k.services[name] = &serviceMeta{ // svc: newSvc, // deps: newSvc.Dependencies(), // state: Created, // } // // // 重启服务 // if exists && oldMeta.state == Running { // newSvc.Start() // k.services[name].state = Running // fmt.Printf(\"Started new version of %s\", name) // } else { // fmt.Printf(\"Registered new version of %s (not started)\", name) // } // // return nil //} func (k *MicroKernel) ReplaceServiceEncrypted(newSvc Service, crypter Crypter) error { k.mu.Lock() defer k.mu.Unlock() name := newSvc.Name() oldMeta, exists := k.services[name] var encryptedState []byte if exists { if exporter, ok := oldMeta.svc.(Exportable); ok { rawState := exporter.ExportState() cipher, err := crypter.Encrypt(rawState) if err != nil { return fmt.Errorf(\"state encryption failed: %w\", err) } encryptedState = cipher } oldMeta.svc.Stop() fmt.Printf(\"Stopped old version of %s\\n\", name) } // 状态导入（解密） if importer, ok := newSvc.(Importable); ok && encryptedState != nil { decrypted, err := crypter.Decrypt(encryptedState) if err != nil { return fmt.Errorf(\"state decryption failed: %w\", err) } if err := importer.ImportState(decrypted); err != nil { return fmt.Errorf(\"state import failed: %w\", err) } fmt.Printf(\"Encrypted state migrated for service %s\\n\", name) } k.services[name] = &serviceMeta{ svc: newSvc, deps: newSvc.Dependencies(), state: Created, } if exists && oldMeta.state == Running { newSvc.Start() k.services[name].state = Running fmt.Printf(\"Started new version of %s\\n\", name) } else { fmt.Printf(\"Registered new version of %s (not started)\\n\", name) } return nil }","s":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel8","h":"#21-kernel核心","p":210},{"i":217,"t":"实现状态接口 func (e *EchoServiceV2) ImportState(state any) error { if val, ok := state.(int); ok { e.echoCount = val return nil } return fmt.Errorf(\"invalid state type\") } func (e *EchoService) ExportState() any { return e.echoCount }","s":"2.2 echo服务","u":"/docs/note/design/microkernel/microkernel8","h":"#22-echo服务","p":210},{"i":219,"t":"热替换服务 // 7. 热替换服务 // 热更新为 V2 aesKey := []byte(\"1234567890123456\") // 16 字节对称密钥 microKernel.ReplaceServiceEncrypted(service.NewEchoServiceV2(microKernel), microkernel.NewAESCrypter(aesKey))","s":"2.3 main","u":"/docs/note/design/microkernel/microkernel8","h":"#23-main","p":210},{"i":221,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to echo: Hello, Log! {0 echo service handled from microKernel: Hello, Log!} [echo] stopping... Stopped old version of echo State migrated for service echo [2025-04-24 21:28:38.032] [INFO] [echo] [echov2] starting... Started new version of echo[MicroKernel] Send Event to echo: Hello, Log! [echo] count is 10 {0 echo v2 service handled from microKernel: Hello, Log!} [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... Stopped: echo [log] stopping 查看完整代码","s":"2.4 运行结果","u":"/docs/note/design/microkernel/microkernel8","h":"#24-运行结果","p":210},{"i":224,"t":"支持服务热更新 所有服务和内核通过统一接口打印日志 时间戳、服务名、级别（INFO/WARN/ERROR） 动态控制日志级别 输出到 stdout、文件、远程服务等 xxx","s":"1. 目标","u":"/docs/note/design/microkernel/microkernel7","h":"#1-目标","p":222},{"i":227,"t":"新增ReplaceService 用于热替换服务 // kernel/kernel.go func (k *MicroKernel) ReplaceService(newSvc Service) error { k.mu.Lock() defer k.mu.Unlock() name := newSvc.Name() oldMeta, exists := k.services[name] if exists && oldMeta.state == Running { // 停止旧服务 oldMeta.svc.Stop() fmt.Printf(\"Stopped old version of %s\\n\", name) } // 替换服务实现，重建元信息 k.services[name] = &serviceMeta{ svc: newSvc, deps: newSvc.Dependencies(), state: Created, } // 重启服务（如旧服务在运行） if exists && oldMeta.state == Running { newSvc.Start() k.services[name].state = Running fmt.Printf(\"Started new version of %s\\n\", name) } else { fmt.Printf(\"Registered new version of %s (not started)\\n\", name) } return nil } 注册Register增加deps // kernel/kernel.go // Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() name := svc.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil } 启动服务和停止服务增加拓扑排序 // kernel/kernel.go func (k *MicroKernel) topoSort() ([]string, error) { k.mu.RLock() defer k.mu.RUnlock() visited := make(map[string]bool) temp := make(map[string]bool) result := []string{} var visit func(string) error visit = func(name string) error { if temp[name] { return fmt.Errorf(\"circular dependency at %s\", name) } if visited[name] { return nil } temp[name] = true meta, ok := k.services[name] if !ok { return fmt.Errorf(\"service %s not registered\", name) } for _, dep := range meta.deps { if err := visit(dep); err != nil { return err } } visited[name] = true temp[name] = false result = append(result, name) return nil } for name := range k.services { if !visited[name] { if err := visit(name); err != nil { return nil, err } } } return result, nil } func (k *MicroKernel) StartAll() error { sorted, err := k.topoSort() // ... for _, name := range sorted { if err := k.StartService(name); err != nil { // ... } } return nil }","s":"2.1 Kernel（核心）","u":"/docs/note/design/microkernel/microkernel7","h":"#21-kernel核心","p":222},{"i":229,"t":"日志服务设计 type LogLevel int const ( INFO LogLevel = iota WARN ERROR ) type Logger struct { mu sync.Mutex level LogLevel service string out io.Writer } 方法实现 func NewLogger(service string, level LogLevel, out io.Writer) *Logger { return &Logger{ service: service, level: level, out: out, } } func (l *Logger) logf(level LogLevel, format string, args ...any) { if level < l.level { return } l.mu.Lock() defer l.mu.Unlock() levelStr := [...]string{\"INFO\", \"WARN\", \"ERROR\"}[level] msg := fmt.Sprintf(format, args...) ts := time.Now().Format(\"2006-01-02 15:04:05.000\") fmt.Fprintf(l.out, \"[%s] [%s] [%s] %s\\n\", ts, levelStr, l.service, msg) } func (l *Logger) Infof(format string, args ...any) { l.logf(INFO, format, args...) } func (l *Logger) Warnf(format string, args ...any) { l.logf(WARN, format, args...) } func (l *Logger) Errorf(format string, args ...any) { l.logf(ERROR, format, args...) } 服务中使用 type EchoServiceV3 struct { log *Logger } func NewEchoServiceV3() *EchoServiceV3 { return &EchoServiceV3{ log: NewLogger(\"echo\", INFO, os.Stdout), } } //... func (e *EchoServiceV3) Start() { e.log.Infof(\"started\") }","s":"2.2 日志服务","u":"/docs/note/design/microkernel/microkernel7","h":"#22-日志服务","p":222},{"i":231,"t":"热替换服务 // 7. 热替换服务 // 热更新为 V2 _ = microKernel.ReplaceService(service.NewEchoServiceV2(microKernel)) // 测试 V2 行为 replyCh2 := make(chan microkernel.Reply, 1) microKernel.Push(microkernel.Event{ From: \"main\", Type: \"log\", Content: \"log\", ReplyCh: replyCh2, TimeoutMs: 1000, }) fmt.Println(\"v2 reply:\", <-replyCh2)","s":"2.3 main","u":"/docs/note/design/microkernel/microkernel7","h":"#23-main","p":222},{"i":233,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } [echo] stopping... Stopped old version of echo [2025-04-23 21:46:11.935] [INFO] [echo] [echov2] starting... Started new version of echo [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... [log] stopping Stopped: echo Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } Stopping all services... [logger] stopping... Stopped: logger [echo] stopping... Stopped: echo 查看完整代码","s":"2.4 运行结果","u":"/docs/note/design/microkernel/microkernel7","h":"#24-运行结果","p":222},{"i":235,"t":"服务状态持久化","s":"microkernel 设计9","u":"/docs/note/design/microkernel/microkernel9","h":"","p":234},{"i":237,"t":"服务状态在 Stop() 或热替换时 导出 + 加密 + 写入磁盘 注册服务时若检测到磁盘中有状态，则 读取 + 解密 + 导入 每个服务有自己的状态文件（支持多服务）","s":"1. 目标","u":"/docs/note/design/microkernel/microkernel9","h":"#1-目标","p":234},{"i":240,"t":"存储目录：/var/lib/microkernel/state/（示例） 文件名：<service_name>.state 文件内容：已加密的字节流","s":"2.1 存储文件设计","u":"/docs/note/design/microkernel/microkernel9","h":"#21-存储文件设计","p":234},{"i":242,"t":"type StateStore struct { dir string crypter Crypter } func NewStateStore(dir string, crypter Crypter) *StateStore { return &StateStore{dir: dir, crypter: crypter} } func (s *StateStore) path(name string) string { return filepath.Join(s.dir, name+\".state\") } func (s *StateStore) Save(name string, state any) error { encrypted, err := s.crypter.Encrypt(state) if err != nil { return err } if err := os.MkdirAll(s.dir, 0755); err != nil { return err } return os.WriteFile(s.path(name), encrypted, 0600) } func (s *StateStore) Load(name string) (any, error) { data, err := os.ReadFile(s.path(name)) if err != nil { return nil, err } return s.crypter.Decrypt(data) } func (s *StateStore) Exists(name string) bool { _, err := os.Stat(s.path(name)) return err == nil }","s":"2.2 状态管理模块：StateStore","u":"/docs/note/design/microkernel/microkernel9","h":"#22-状态管理模块statestore","p":234},{"i":245,"t":"type MicroKernel struct { ... stateStore *StateStore } func NewMicroKernelWithState(store *StateStore) *MicroKernel { return &MicroKernel{ services: make(map[string]*serviceMeta), stateStore: store, logger: NewLogger(\"kernel\", INFO, os.Stdout), } }","s":"3.1 kernel 初始化集成StateStore","u":"/docs/note/design/microkernel/microkernel9","h":"#31-kernel-初始化集成statestore","p":234},{"i":247,"t":"// Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() // name 可以放在锁前面，优化性能 name := svc.Name() // 增加状态导入 // 如果使用的接口，这边就使用的接口方法 if k.stateStore != nil && k.stateStore.Exists(name) { // 查看服务是否支持状态导入 // 状态导入不要求每个服务必须实现 // 如果没有实现，就直接忽略 if importer, ok := svc.(Importable); ok { raw, err := k.stateStore.Load(name) if err != nil { return fmt.Errorf(\"state load failed: %w\\n\", err) } err = importer.ImportState(raw) if err != nil { return fmt.Errorf(\"state import failed: %w\\n\", err) } fmt.Printf(\"State migrated for service %s\\n\", name) } } if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil }","s":"3.2 注册服务时尝试自动加载状态","u":"/docs/note/design/microkernel/microkernel9","h":"#32-注册服务时尝试自动加载状态","p":234},{"i":249,"t":"func (k *MicroKernel) StopService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Stopped { return errors.New(\"service already stopped\") } // 增加状态导出判断 if exporter, ok := meta.svc.(Exportable); ok && k.stateStore != nil { if err := k.stateStore.Save(name, exporter.ExportState()); err == nil { fmt.Printf(\"State persisted for %s\\n\", name) } } if err := meta.svc.Stop(); err != nil { return err } meta.state = Stopped fmt.Println(\"Stopped:\", meta.svc.Name()) return nil }","s":"3.3 停止服务时，保存状态","u":"/docs/note/design/microkernel/microkernel9","h":"#33-停止服务时保存状态","p":234},{"i":251,"t":"func (k *MicroKernel) Listen(ctx context.Context) { // 间隔可以加在kernel的struct中，也可以使用方法来获取 ticker := time.NewTicker(2 * time.Second) for { select { case <-ctx.Done(): return case <-ticker.C: fmt.Println(\"Timed writing state\") if k.stateStore != nil { for name, meta := range k.services { if meta.state == Running { if exporter, ok := meta.svc.(Exportable); ok { if err := k.stateStore.Save(name, exporter.ExportState()); err == nil { fmt.Printf(\"State persisted for %s\\n\", name) } } } } }","s":"3.4 定时持久化状态","u":"/docs/note/design/microkernel/microkernel9","h":"#34-定时持久化状态","p":234},{"i":253,"t":"crypter := microkernel.NewAESCrypter([]byte(\"1234567890123456\")) store := microkernel.NewStateStore(\"./state\", crypter) // 1. 创建微内核 microKernel := microkernel.NewMicroKernel(store) // 增加加密存储","s":"4. main","u":"/docs/note/design/microkernel/microkernel9","h":"#4-main","p":234},{"i":255,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to echo: Hello, Log! {0 echo service handled from microKernel: Hello, Log!} [echo] stopping... Stopped old version of echo Encrypted state migrated for service echo [2025-04-26 19:47:00.801] [INFO] [echo] [echov2] starting... Started new version of echo [MicroKernel] Send Event to echo: Hello, Log! [echo] count is 10 {0 echo v2 service handled from microKernel: Hello, Log!} [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... Stopped: echo 查看完整代码","s":"4.1 运行结果","u":"/docs/note/design/microkernel/microkernel9","h":"#41-运行结果","p":234},{"i":258,"t":"接口隔离原则(Interface Segregation Principle, ISP) 是SOLID原则中的第四个原则，由Robert C. Martin提出。其核心思想是： 客户端不应该被迫依赖它们不使用的接口。换句话说，多个特定的小接口比一个通用的大接口更好。 在Go语言中，这一原则尤为重要，因为Go的接口是隐式实现的，且鼓励小而专注的设计。","s":"1. 概述","u":"/docs/note/design/oop_pinciple/isp","h":"#1-概述","p":256},{"i":260,"t":"小而专注：接口应该只包含客户端真正需要的方法 避免\"胖接口\"：不要让接口承担过多职责 按需实现：客户端应该只依赖它们实际使用的接口","s":"2. 核心概念","u":"/docs/note/design/oop_pinciple/isp","h":"#2-核心概念","p":256},{"i":263,"t":"// 一个\"胖接口\"包含太多方法 type Animal interface { Eat() Sleep() Fly() // 不是所有动物都会飞 Swim() // 不是所有动物都会游泳 Bark() // 不是所有动物都会叫 } // 实现这个接口很困难 type Dog struct{} func (d Dog) Eat() { fmt.Println(\"Dog eating\") } func (d Dog) Sleep() { fmt.Println(\"Dog sleeping\") } func (d Dog) Bark() { fmt.Println(\"Dog barking\") } func (d Dog) Fly() {} // 狗不会飞，但被迫实现 func (d Dog) Swim() {} // 有些狗会游泳，有些不会 问题：Dog被迫实现它不需要的方法(Fly)","s":"3.1 违反ISP的例子","u":"/docs/note/design/oop_pinciple/isp","h":"#31-违反isp的例子","p":256},{"i":265,"t":"// 拆分为多个小接口 type Eater interface { Eat() } type Sleeper interface { Sleep() } type Flyer interface { Fly() } type Swimmer interface { Swim() } type Barker interface { Bark() } // Dog只需要实现相关接口 type Dog struct{} func (d Dog) Eat() { fmt.Println(\"Dog eating\") } func (d Dog) Sleep() { fmt.Println(\"Dog sleeping\") } func (d Dog) Bark() { fmt.Println(\"Dog barking\") } // 可以按需组合 type AquaticDog struct { Dog } func (a AquaticDog) Swim() { fmt.Println(\"Dog swimming\") }","s":"3.2 遵循ISP的改进方案","u":"/docs/note/design/oop_pinciple/isp","h":"#32-遵循isp的改进方案","p":256},{"i":268,"t":"type Animal interface { Eater Sleeper } type Bird interface { Animal Flyer } type Fish interface { Animal Swimmer }","s":"4.1 使用接口组合","u":"/docs/note/design/oop_pinciple/isp","h":"#41-使用接口组合","p":256},{"i":270,"t":"// 在需要的地方定义接口 func Feed(e Eater) { e.Eat() } func PutToSleep(s Sleeper) { s.Sleep() }","s":"4.2 客户端特定接口","u":"/docs/note/design/oop_pinciple/isp","h":"#42-客户端特定接口","p":256},{"i":272,"t":"// 不好的设计 type FileHandler interface { Open() Close() Read() Write() Delete() Archive() // 不是所有处理器都需要归档 } // 好的设计 type FileOperator interface { Open() Close() } type FileReader interface { FileOperator Read() } type FileWriter interface { FileOperator Write() } type FileManager interface { FileReader FileWriter Delete() }","s":"4.3 避免接口污染","u":"/docs/note/design/oop_pinciple/isp","h":"#43-避免接口污染","p":256},{"i":275,"t":"type Reader interface { Get(id string) (Item, error) List() ([]Item, error) } type Writer interface { Create(item Item) error Update(item Item) error Delete(id string) error } // 只读客户端 func NewReadOnlyClient(r Reader) *ReadOnlyClient { return &ReadOnlyClient{reader: r} } // 读写客户端 func NewReadWriteClient(rw interface { Reader Writer }) *ReadWriteClient { return &ReadWriteClient{readerWriter: rw} }","s":"5.1 数据库访问层","u":"/docs/note/design/oop_pinciple/isp","h":"#51-数据库访问层","p":256},{"i":277,"t":"type RequestLogger interface { LogRequest(r *http.Request) } type ResponseLogger interface { LogResponse(w http.ResponseWriter) } // 只需要请求日志的中间件 func WithRequestLogging(l RequestLogger) func(http.Handler) http.Handler { return func(next http.Handler) http.Handler { return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) { l.LogRequest(r) next.ServeHTTP(w, r) }) } }","s":"5.2 HTTP中间件","u":"/docs/note/design/oop_pinciple/isp","h":"#52-http中间件","p":256},{"i":279,"t":"不必要的实现负担：类型被迫实现它们不需要的方法 脆弱的代码：接口变更会影响太多客户端 难以测试：需要模拟不相关的方法 低内聚性：接口包含不相关的方法","s":"6. 违反ISP的后果","u":"/docs/note/design/oop_pinciple/isp","h":"#6-违反isp的后果","p":256},{"i":281,"t":"ISP鼓励小而专注的接口设计 客户端不应该被迫依赖它们不使用的方法 Go语言的隐式接口机制天然支持ISP 使用接口组合构建更复杂的抽象 按需定义接口，而不是预先创建大接口 好的接口设计应该像Unix工具一样 - 每个工具只做一件事，但做得很好。","s":"7. 总结","u":"/docs/note/design/oop_pinciple/isp","h":"#7-总结","p":256},{"i":284,"t":"里氏替换原则(Liskov Substitution Principle, LSP) 是SOLID原则中的第三个原则，由Barbara Liskov提出。其核心思想是： 如果S是T的子类型，那么程序中T类型的对象可以被替换为S类型的对象，而不会改变程序的任何期望属性。 在Go语言中，虽然没有传统意义上的继承，但通过**接口(interface)和嵌入(struct embedding)**同样需要遵循这一原则。","s":"1. 概述","u":"/docs/note/design/oop_pinciple/lsp","h":"#1-概述","p":282},{"i":286,"t":"可替换性：子类型必须能够完全替代父类型 行为一致性：子类型不应改变父类型的预期行为 契约遵守：子类型必须遵守父类型的隐式契约","s":"2. 核心概念","u":"/docs/note/design/oop_pinciple/lsp","h":"#2-核心概念","p":282},{"i":289,"t":"// 定义抽象接口 type Bird interface { Fly() string Sing() string } // 实现基类 type Sparrow struct{} func (s *Sparrow) Fly() string { return \"麻雀在飞翔\" } func (s *Sparrow) Sing() string { return \"麻雀在歌唱\" } // 实现子类 type Penguin struct{} func (p *Penguin) Fly() string { return \"企鹅不会飞\" // 违反LSP原则！ } func (p *Penguin) Sing() string { return \"企鹅在鸣叫\" } 问题分析：Penguin不能替换Bird，因为它改变了Fly()的预期行为","s":"3.1 通过接口实现LSP","u":"/docs/note/design/oop_pinciple/lsp","h":"#31-通过接口实现lsp","p":282},{"i":291,"t":"// 更精确的接口定义 type Flyer interface { Fly() string } type Singer interface { Sing() string } // 会飞的鸟 type FlyingBird struct{} func (f *FlyingBird) Fly() string { return \"鸟儿在飞翔\" } // 麻雀 type Sparrow struct { FlyingBird } func (s *Sparrow) Sing() string { return \"麻雀在歌唱\" } // 企鹅 type Penguin struct{} func (p *Penguin) Sing() string { return \"企鹅在鸣叫\" }","s":"3.2 符合LSP的改进方案","u":"/docs/note/design/oop_pinciple/lsp","h":"#32-符合lsp的改进方案","p":282},{"i":294,"t":"type PaymentProcessor interface { ProcessPayment(amount float64, currency string) error } // 基类实现 type BasicProcessor struct{} func (b *BasicProcessor) ProcessPayment(amount float64, currency string) error { if amount <= 0 { return errors.New(\"金额必须大于0\") } // 处理逻辑... } // 子类实现（违反LSP） type DiscountProcessor struct{} func (d *DiscountProcessor) ProcessPayment(amount float64, currency string) error { // 允许amount为0（削弱了前置条件） if amount < 0 { return errors.New(\"金额不能为负\") } // 处理逻辑... } 重构方案：保持前置条件不变或更强","s":"4.1 违反情况1：子类削弱前置条件","u":"/docs/note/design/oop_pinciple/lsp","h":"#41-违反情况1子类削弱前置条件","p":282},{"i":296,"t":"type DataStorage interface { Save(data []byte) (string, error) // 返回存储ID } // 基类实现 type FileStorage struct{} func (f *FileStorage) Save(data []byte) (string, error) { id := generateID() // 保存到文件... return id, nil // 可能返回空ID } // 子类实现（违反LSP） type GuaranteedStorage struct{} func (g *GuaranteedStorage) Save(data []byte) (string, error) { if len(data) == 0 { return \"\", errors.New(\"空数据不允许\") // 强化了后置条件 } id := generateID() // 保存到文件... return \"GID-\" + id, nil // 改变了ID格式 } 重构方案：保持后置条件不变或更弱","s":"4.2 违反情况2：子类强化后置条件","u":"/docs/note/design/oop_pinciple/lsp","h":"#42-违反情况2子类强化后置条件","p":282},{"i":299,"t":"golang 没有面相对象的继承用法 type Animal struct { name string } func (a *Animal) Eat() string { return a.name + \"在吃东西\" } // 正确方式：组合Animal type Dog struct { Animal } func (d *Dog) Bark() string { return \"汪汪汪\" } // 使用 dog := &Dog{Animal{name: \"阿黄\"}} fmt.Println(dog.Eat()) // 阿黄在吃东西 fmt.Println(dog.Bark()) // 汪汪汪","s":"5.1 使用组合代替继承","u":"/docs/note/design/oop_pinciple/lsp","h":"#51-使用组合代替继承","p":282},{"i":301,"t":"// 大接口 type BigInterface interface { Method1() Method2() Method3() } // 客户端只需要Method1 type Client struct { dep interface { Method1() } }","s":"5.2 接口隔离加强","u":"/docs/note/design/oop_pinciple/lsp","h":"#52-接口隔离加强","p":282},{"i":303,"t":"缓存系统：本地缓存、Redis缓存、Memcached缓存可互相替换 存储系统：文件存储、数据库存储、云存储可互相替换 支付网关：支付宝、微信支付、银联支付可互相替换 日志系统：文件日志、控制台日志、网络日志可互相替换","s":"6. LSP的实际应用场景","u":"/docs/note/design/oop_pinciple/lsp","h":"#6-lsp的实际应用场景","p":282},{"i":305,"t":"LSP的核心是可替换性和行为一致性 在Go中主要通过接口设计和组合来实现 子类型必须： 不加强前置条件 不减弱后置条件 保持不变量 不抛出新的异常 违反LSP会导致难以发现的运行时错误 \"is-a\"关系不仅看语法，更要看行为语义 好的子类型扩展应该像插件一样工作 - 可以无缝替换基类而不破坏现有功能。","s":"7. 总结","u":"/docs/note/design/oop_pinciple/lsp","h":"#7-总结","p":282},{"i":308,"t":"依赖倒置原则(Dependency Inversion Principle, DIP) 是SOLID原则中的第五个原则，由Robert C. Martin提出。其核心思想是： 高层模块不应该依赖低层模块，两者都应该依赖抽象。抽象不应该依赖细节，细节应该依赖抽象。 在Go语言中，这一原则主要通过接口(interface)和依赖注入来实现。","s":"1. 概述","u":"/docs/note/design/oop_pinciple/dip","h":"#1-概述","p":306},{"i":310,"t":"依赖抽象：通过接口而非具体实现编程 控制反转(IoC)：将依赖的创建和使用分离 依赖注入(DI)：通过构造函数、方法或属性注入依赖","s":"2. 核心概念","u":"/docs/note/design/oop_pinciple/dip","h":"#2-核心概念","p":306},{"i":313,"t":"// 高层模块直接依赖低层模块 type MySQLDatabase struct {} func (m *MySQLDatabase) Save(data string) error { fmt.Println(\"保存数据到MySQL:\", data) return nil } type ReportGenerator struct { db *MySQLDatabase // 直接依赖具体实现 } func (r *ReportGenerator) Generate() error { return r.db.Save(\"报告数据\") } 问题：ReportGenerator直接依赖MySQLDatabase，难以切换其他数据库","s":"3.1 违反DIP的例子","u":"/docs/note/design/oop_pinciple/dip","h":"#31-违反dip的例子","p":306},{"i":315,"t":"// 定义抽象接口 type Database interface { Save(data string) error } // 低层模块实现接口 type MySQLDatabase struct {} func (m *MySQLDatabase) Save(data string) error { fmt.Println(\"保存数据到MySQL:\", data) return nil } type PostgreSQLDatabase struct {} func (p *PostgreSQLDatabase) Save(data string) error { fmt.Println(\"保存数据到PostgreSQL:\", data) return nil } // 高层模块依赖抽象 type ReportGenerator struct { db Database // 依赖接口而非具体实现 } func NewReportGenerator(db Database) *ReportGenerator { return &ReportGenerator{db: db} } func (r *ReportGenerator) Generate() error { return r.db.Save(\"报告数据\") }","s":"3.2 遵循DIP的改进方案","u":"/docs/note/design/oop_pinciple/dip","h":"#32-遵循dip的改进方案","p":306},{"i":318,"t":"构造结构体包含Logger对象 type Logger interface { Log(message string) } type ConsoleLogger struct{} func (c *ConsoleLogger) Log(message string) { fmt.Println(message) } type Service struct { logger Logger } func NewService(logger Logger) *Service { return &Service{logger: logger} } func (s *Service) DoWork() { s.logger.Log(\"工作开始\") // 业务逻辑... }","s":"4.1 构造函数注入","u":"/docs/note/design/oop_pinciple/dip","h":"#41-构造函数注入","p":306},{"i":320,"t":"type MailSender interface { Send(to, subject, body string) error } type UserService struct{} func (u *UserService) Register(email string, sender MailSender) error { // 注册逻辑... return sender.Send(email, \"欢迎\", \"感谢注册\") }","s":"4.2 方法注入","u":"/docs/note/design/oop_pinciple/dip","h":"#42-方法注入","p":306},{"i":322,"t":"// 在调用方定义接口（Go特色） package user type Database interface { Save(user User) error } type Service struct { db Database } // 实现可以在任何地方 type MySQLDB struct{} func (m *MySQLDB) Save(user User) error { ... }","s":"4.3 接口定义在调用方","u":"/docs/note/design/oop_pinciple/dip","h":"#43-接口定义在调用方","p":306},{"i":325,"t":"// storage.go type UserRepository interface { GetByID(id int) (*User, error) Save(user *User) error } // service.go type UserService struct { repo UserRepository } func NewUserService(repo UserRepository) *UserService { return &UserService{repo: repo} } // 可以轻松切换实现：MySQL, PostgreSQL, MongoDB等","s":"5.1 数据库访问","u":"/docs/note/design/oop_pinciple/dip","h":"#51-数据库访问","p":306},{"i":327,"t":"type Handler interface { Handle(w http.ResponseWriter, r *http.Request) error } type Router struct { handlers map[string]Handler } func (r *Router) Register(path string, handler Handler) { r.handlers[path] = handler } // 具体处理器实现 type UserHandler struct { service *UserService } func (h *UserHandler) Handle(w http.ResponseWriter, r *http.Request) error { // 处理请求... }","s":"5.2 HTTP服务","u":"/docs/note/design/oop_pinciple/dip","h":"#52-http服务","p":306},{"i":329,"t":"虽然Go不强制使用DI框架，但有一些流行选择： Google Wire：编译时依赖注入 // wire.go func InitializeUserService() *UserService { wire.Build(NewUserService, NewMySQLRepository) return &UserService{} } Dig：运行时依赖注入 container := dig.New() container.Provide(NewMySQLRepository) container.Provide(NewUserService) FX：基于Dig的框架 fx.New( fx.Provide(NewMySQLRepository), fx.Provide(NewUserService), fx.Invoke(func(s *UserService) { // 使用服务... }), )","s":"6. 依赖注入框架(可选)","u":"/docs/note/design/oop_pinciple/dip","h":"#6-依赖注入框架可选","p":306},{"i":331,"t":"紧耦合：组件间高度依赖，难以修改 难以测试：无法轻松替换真实依赖进行测试 扩展困难：添加新功能需要修改多处代码 复用性差：组件难以在不同上下文中使用","s":"7. 违反DIP的后果","u":"/docs/note/design/oop_pinciple/dip","h":"#7-违反dip的后果","p":306},{"i":333,"t":"DIP的核心是依赖抽象而非具体实现 在Go中主要通过接口和依赖注入实现 高层模块定义抽象接口，低层模块实现这些接口 使用构造函数注入或方法注入提供依赖 考虑使用DI框架管理复杂依赖关系 遵循DIP能提高代码的可测试性、可扩展性和可维护性 好的架构应该像插件系统 - 高层模块定义插槽，低层模块实现插件。","s":"8. 总结","u":"/docs/note/design/oop_pinciple/dip","h":"#8-总结","p":306},{"i":336,"t":"使用channel 在 goroutine 间进行通信和同步操作 package main import ( \"fmt\" \"time\" ) // SetRulesRequest 表示设置规则的请求结构 type SetRulesRequest struct { NewRules []string Response chan error // 用于同步返回是否成功 } // Aggregator 用于管理规则并支持并发设置 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} } // SetRules 是向 aggregator 发送新规则的接口 func (a *Aggregator) SetRules(r []string) error { req := &SetRulesRequest{ NewRules: r, Response: make(chan error), } a.setRulesChan <- req return <-req.Response // 等待响应结束 } // Run 启动 aggregator 的工作协程 func (a *Aggregator) Run() { for { select { case req := <-a.setRulesChan: a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) req.Response <- nil // 成功响应 case <-a.stopChan: return } } } // Stop 关闭 aggregator 的后台协程 func (a *Aggregator) Stop() { close(a.stopChan) } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), } go aggregator.Run() // 模拟使用 time.Sleep(500 * time.Millisecond) aggregator.SetRules([]string{\"a\", \"b\", \"c\"}) aggregator.SetRules([]string{\"d\", \"e\", \"f\"}) // 停止后台协程 aggregator.Stop() } 🔍 说明重点： 通信模型：调用者通过 SetRules 向 Aggregator 的 channel 发送数据，然后通过一个 Response channel 同步等待执行结果。 响应式设计：Aggregator 处理请求后通过 channel 回复，避免竞态。 易扩展性：你可以将更多操作（如查询、追加等）封装成不同的 request 结构体，并通过不同 channel 或类型区分处理。","s":"1. channel 交互","u":"/docs/note/design/multi_goroutine","h":"#1-channel-交互","p":334},{"i":339,"t":"发送端（ch <- v）向已关闭 channel 发送数据： 会 panic！ 接收端（<-chan）读取已关闭 channel： 不会 panic， 立即返回零值 第二个返回值判断是否关闭。即：v, ok := <-ch，如果 ok == false，说明 channel 已关闭。 不判断。即: v := <-ch，立即返回零值，无法判断 channel 是否关闭。 即：v, ok := <-ch，如果 ok == false，说明 channel 已关闭。 举例 package main import ( \"log\" \"time\" ) func main() { //ch := make(chan int, 2) ch := make(chan int) go func() { ch <- 20 time.Sleep(1 * time.Second) defer close(ch) }() // 只接收数据，不检查通道状态 rules := <-ch log.Println(\"Rules:\", rules) // 输出：14:47:31 Rules: 20 rules = <-ch log.Println(\"Rules:\", rules) // 输出：14:47:32 Rules: 0 rules = <-ch log.Println(\"Rules:\", rules) // 输出：14:47:32 Rules: 0 // 读取时检查通道是否仍然开放 rules, open := <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:39 Rules: 20 Open: true rules, open = <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:40 Rules: 0 Open: false rules, open = <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:40 Rules: 0 Open: false }","s":"2.1. 理解 channel 行为","u":"/docs/note/design/multi_goroutine","h":"#21-理解-channel-行为","p":334},{"i":341,"t":"✅ 特性亮点： 安全关闭 goroutine： setRulesChan 和 stopChan 都支持关闭，防止死锁或 panic。 带 ok 判断防止接收已关闭的 channel 导致数据为 nil。 封装清晰： Run() 执行逻辑清晰，Stop() 方法负责安全退出和资源清理。 package main import ( \"fmt\" \"time\" ) // 请求结构体，设置规则并通过 Response 返回结果 type SetRulesRequest struct { NewRules []string Response chan error } // 聚合器结构 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} doneChan chan struct{} // 通知主线程已退出 } // Run 启动 Aggregator 的工作协程 func (a *Aggregator) Run() { defer close(a.doneChan) // 通知主线程：后台协程已退出 for { select { case req, ok := <-a.setRulesChan: if !ok { fmt.Println(\"setRulesChan closed, exiting Run()\") return } a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) // 响应调用者 req.Response <- nil case <-a.stopChan: fmt.Println(\"Received stop signal, exiting Run()\") return } } } // SetRules 发送规则请求 func (a *Aggregator) SetRules(r []string) error { req := &SetRulesRequest{ NewRules: r, Response: make(chan error), } select { case a.setRulesChan <- req: return <-req.Response case <-a.stopChan: return fmt.Errorf(\"aggregator is shutting down\") } } // Stop 关闭 aggregator，确保 goroutine 优雅退出 func (a *Aggregator) Stop() { close(a.stopChan) // 通知退出 close(a.setRulesChan) // 防止阻塞在 <-setRulesChan <-a.doneChan // 等待后台处理完成 fmt.Println(\"Aggregator stopped gracefully\") } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), doneChan: make(chan struct{}), } go aggregator.Run() time.Sleep(500 * time.Millisecond) aggregator.SetRules([]string{\"a\", \"b\", \"c\"}) aggregator.SetRules([]string{\"x\", \"y\", \"z\"}) aggregator.Stop() }","s":"2.2. 使用判断channel 优化示例","u":"/docs/note/design/multi_goroutine","h":"#22-使用判断channel-优化示例","p":334},{"i":343,"t":"🧠 为啥用 context.Context？ 防止调用者被永久阻塞：例如 aggregator goroutine 迟迟不响应。 可设置 timeout 或 cancel，适合服务端编程模型。 可组合多种取消方式（定时取消 + 主动取消）。 ✅ 增强功能： SetRules 支持超时 / 取消（避免卡死等待响应）。 context.Context 控制响应等待过程。 依然保留 graceful shutdown 支持（Stop()）。 package main import ( \"context\" \"fmt\" \"time\" ) // 请求结构体，设置规则并通过 Response 返回结果 type SetRulesRequest struct { NewRules []string Response chan error } // 聚合器结构体 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} doneChan chan struct{} } // Run 启动 aggregator 的工作协程 func (a *Aggregator) Run() { defer close(a.doneChan) for { select { case req, ok := <-a.setRulesChan: if !ok { fmt.Println(\"setRulesChan closed, exiting Run()\") return } a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) req.Response <- nil case <-a.stopChan: fmt.Println(\"Received stop signal, exiting Run()\") return } } } // SetRulesCtx 支持 context 超时 / 取消控制 func (a *Aggregator) SetRulesCtx(ctx context.Context, rules []string) error { req := &SetRulesRequest{ NewRules: rules, Response: make(chan error, 1), // 非阻塞回写 } // 模拟耗时操作 time.Sleep(2 * time.Millisecond) select { case a.setRulesChan <- req: // 等待响应 or context 超时 select { case err := <-req.Response: return err case <-ctx.Done(): return fmt.Errorf(\"set rules timeout or cancelled: %w\", ctx.Err()) } case <-a.stopChan: return fmt.Errorf(\"aggregator shutting down\") case <-ctx.Done(): return fmt.Errorf(\"send timeout or cancelled: %w\", ctx.Err()) } } // Stop 优雅关闭 func (a *Aggregator) Stop() { close(a.stopChan) close(a.setRulesChan) <-a.doneChan fmt.Println(\"Aggregator stopped gracefully\") } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), doneChan: make(chan struct{}), } go aggregator.Run() // 模拟正常调用 ctx := context.Background() aggregator.SetRulesCtx(ctx, []string{\"a\", \"b\", \"c\"}) // 模拟带 timeout 的调用（1ms 会超时） ctxTimeout, cancel := context.WithTimeout(context.Background(), 1*time.Millisecond) defer cancel() err := aggregator.SetRulesCtx(ctxTimeout, []string{\"should\", \"fail\", \"fast\"}) if err != nil { fmt.Println(\"Timeout err:\", err) } // 正常调用 ctx2, cancel2 := context.WithTimeout(context.Background(), 2*time.Second) defer cancel2() aggregator.SetRulesCtx(ctx2, []string{\"x\", \"y\", \"z\"}) aggregator.Stop() }","s":"3. 支持 context.Context","u":"/docs/note/design/multi_goroutine","h":"#3-支持-contextcontext","p":334},{"i":345,"t":"CommandHandler 模式是命令模式（Command Pattern）的一种实现方式，常用于将请求（命令）与处理逻辑解耦，从而提高系统的灵活性和可扩展性。它通过将命令封装为对象，并由专门的 CommandHandler 负责执行这些命令，使得系统能够更轻松地管理命令的生命周期、支持撤销/重做操作、实现事务管理或异步处理。 核心概念 Command（命令） 定义一个接口或抽象类，声明执行命令的方法（如 execute()）。 具体命令类实现该接口，封装请求的具体逻辑。 CommandHandler（命令处理器） 负责接收命令对象并调用其 execute() 方法。 可以扩展为支持命令的调度、排队、事务管理或异步执行。 Invoker（调用者） 触发命令的对象，通常持有对 CommandHandler 的引用。 Receiver（接收者） 执行命令实际逻辑的对象，命令对象通过依赖注入或组合的方式与接收者交互。 🎯 目标： 支持不同类型请求的统一处理通道 类似“命令模式”：将操作封装为一个结构体 可扩展、可测试、context 支持、graceful shutdown ✅ 架构设计： +--------------------+ | CommandHandler | |--------------------| | chan Command |<----------- Send() | goroutine: dispatch| (通用异步接口) +--------------------+ | V +--------------------+ | Command (接口) |<-- 多种请求实现： | Execute(context) | - SetRulesCommand +--------------------+ - GetRulesCommand - AppendRulesCommand ✨ 通用实现（含 SetRules 和 GetRules）： package main import ( \"context\" \"errors\" \"fmt\" ) // Command 是所有请求的接口 type Command interface { Execute(ctx context.Context, h *Handler) Done() <-chan struct{} Err() error } // Handler 管理状态和调度命令执行 type Handler struct { rules []string cmdChan chan Command stop chan struct{} done chan struct{} } // 基础命令结构 type baseCommand struct { err error done chan struct{} } func (c *baseCommand) Done() <-chan struct{} { return c.done } func (c *baseCommand) Err() error { return c.err } // SetRulesCommand 设置规则 type SetRulesCommand struct { baseCommand NewRules []string } func (c *SetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) h.rules = c.NewRules fmt.Println(\"SetRulesCommand executed:\", h.rules) } // GetRulesCommand 获取规则 type GetRulesCommand struct { baseCommand Result chan []string } func (c *GetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) c.Result <- h.rules close(c.Result) } func NewHandler() *Handler { return &Handler{ rules: []string{}, cmdChan: make(chan Command), stop: make(chan struct{}), done: make(chan struct{}), } } // Run 启动处理循环 func (h *Handler) Run() { defer close(h.done) for { select { case cmd := <-h.cmdChan: ctx := context.Background() // 可支持 ctx 控制 cmd.Execute(ctx, h) case <-h.stop: return } } } // Send 提交命令（带超时支持） func (h *Handler) Send(ctx context.Context, cmd Command) error { select { case h.cmdChan <- cmd: select { case <-cmd.Done(): return cmd.Err() case <-ctx.Done(): return ctx.Err() } case <-h.stop: return errors.New(\"handler is stopped\") case <-ctx.Done(): return ctx.Err() } } // Stop 优雅关闭 func (h *Handler) Stop() { close(h.stop) <-h.done } func main() { handler := NewHandler() go handler.Run() ctx := context.Background() setCmd := &SetRulesCommand{ baseCommand: baseCommand{done: make(chan struct{})}, NewRules: []string{\"a\", \"b\", \"c\"}, } handler.Send(ctx, setCmd) // 获取规则 getCmd := &GetRulesCommand{ baseCommand: baseCommand{done: make(chan struct{})}, Result: make(chan []string, 1), } handler.Send(ctx, getCmd) fmt.Println(\"Current rules:\", <-getCmd.Result) handler.Stop() } ✅ 泛型式响应的 ResultCommand[T] 设计 实现目标： 命令支持携带强类型返回值（例如：[]string、int、bool 等）； 支持 context 控制； 解耦命令发送与执行，类型安全 的异步响应； 易扩展、结构清晰。 package main import ( \"context\" \"errors\" \"fmt\" \"time\" ) // 通用 Command 接口 type Command interface { Execute(context.Context, *Handler) Done() <-chan struct{} Err() error } // Handler：命令处理器 type Handler struct { rules []string cmdChan chan Command stop chan struct{} done chan struct{} } func NewHandler() *Handler { return &Handler{ rules: []string{}, cmdChan: make(chan Command), stop: make(chan struct{}), done: make(chan struct{}), } } func (h *Handler) Run() { defer close(h.done) for { select { case cmd := <-h.cmdChan: cmd.Execute(context.Background(), h) case <-h.stop: return } } } func (h *Handler) Stop() { close(h.stop) <-h.done } // Send 支持泛型命令发送 func (h *Handler) Send(ctx context.Context, cmd Command) error { select { case h.cmdChan <- cmd: select { case <-cmd.Done(): return cmd.Err() case <-ctx.Done(): return ctx.Err() } case <-ctx.Done(): return ctx.Err() case <-h.stop: return errors.New(\"handler stopped\") } } // 泛型命令 ResultCommand[T] // -------------------------------- type ResultCommand[T any] struct { result T err error done chan struct{} resultC chan T } func NewResultCommand[T any]() *ResultCommand[T] { return &ResultCommand[T]{ done: make(chan struct{}), resultC: make(chan T, 1), // 非阻塞写入 } } func (c *ResultCommand[T]) Done() <-chan struct{} { return c.done } func (c *ResultCommand[T]) Err() error { return c.err } // Wait 等待结果 func (c *ResultCommand[T]) Wait(ctx context.Context) (T, error) { select { case <-ctx.Done(): var zero T return zero, ctx.Err() case res := <-c.resultC: return res, c.err } } // -------------------------------- // 示例命令：GetRulesCommand 返回 []string // -------------------------------- type GetRulesCommand struct { *ResultCommand[[]string] } func NewGetRulesCommand() *GetRulesCommand { return &GetRulesCommand{ ResultCommand: NewResultCommand[[]string](), } } func (c *GetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) c.result = h.rules c.resultC <- h.rules } // -------------------------------- // 示例命令：SetRulesCommand // -------------------------------- type SetRulesCommand struct { newRules []string done chan struct{} err error } func NewSetRulesCommand(rules []string) *SetRulesCommand { return &SetRulesCommand{ newRules: rules, done: make(chan struct{}), } } func (c *SetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) h.rules = c.newRules fmt.Println(\"Rules updated:\", h.rules) } func (c *SetRulesCommand) Done() <-chan struct{} { return c.done } func (c *SetRulesCommand) Err() error { return c.err } // 🧪 Main 演示：SetRules 和 GetRules 泛型返回 func main() { h := NewHandler() go h.Run() ctx := context.Background() // Set rules setCmd := NewSetRulesCommand([]string{\"x\", \"y\", \"z\"}) _ = h.Send(ctx, setCmd) // Get rules getCmd := NewGetRulesCommand() _ = h.Send(ctx, getCmd) rules, err := getCmd.Wait(ctx) if err != nil { fmt.Println(\"GetRules error:\", err) } else { fmt.Println(\"Got rules:\", rules) } // 超时测试 timeoutCtx, cancel := context.WithTimeout(ctx, 1*time.Millisecond) defer cancel() getCmd2 := NewGetRulesCommand() _ = h.Send(timeoutCtx, getCmd2) rules2, err := getCmd2.Wait(timeoutCtx) fmt.Println(\"With timeout:\", rules2, err) h.Stop() } 输出示例： Rules updated: [x y z] Got rules: [x y z] With timeout: [] context deadline exceeded 📦 可扩展示例命令 GetStatsCommand struct{ ResultCommand[map[string]int] } FlushToDiskCommand struct{ ResultCommand[bool] } LoadConfigCommand struct{ ResultCommand[Config] } AppendRulesCommand struct{ Rules []string }","s":"4. CommandHandler 模式","u":"/docs/note/design/multi_goroutine","h":"#4-commandhandler-模式","p":334},{"i":348,"t":"单一职责原则(Single Responsibility Principle, SRP) 是SOLID原则中的第一个原则，由Robert C. Martin提出。其核心思想是： 一个类或模块应该只有一个引起它变化的原因。换句话说，一个类或模块应该只负责一项职责。 在Go语言中，这一原则主要应用于struct和interface的设计。","s":"1. 概述","u":"/docs/note/design/oop_pinciple/srp","h":"#1-概述","p":346},{"i":351,"t":"提高可维护性：修改一个功能不会影响其他不相关的功能 降低复杂度：每个结构体/接口只做一件事，更易于理解 增强可测试性：单一职责的组件更容易测试 提高复用性：细粒度的组件可以在更多场景中被复用","s":"优点：","u":"/docs/note/design/oop_pinciple/srp","h":"#优点","p":346},{"i":353,"t":"代码难以理解和维护 修改一个功能可能意外破坏其他功能 测试困难 难以复用","s":"违反SRP的后果：","u":"/docs/note/design/oop_pinciple/srp","h":"#违反srp的后果","p":346},{"i":356,"t":"// 违反SRP的例子：UserManager承担了太多职责 type UserManager struct { db *sql.DB } func (um *UserManager) CreateUser(user User) error { // 创建用户逻辑 _, err := um.db.Exec(\"INSERT INTO users (...) VALUES (...)\") return err } func (um *UserManager) SendWelcomeEmail(user User) error { // 发送欢迎邮件逻辑 return sendEmail(user.Email, \"Welcome!\", \"Welcome to our platform!\") } func (um *UserManager) GenerateReport() ([]byte, error) { // 生成用户报告逻辑 rows, err := um.db.Query(\"SELECT * FROM users\") // ...处理rows生成报告 return reportData, nil } 问题分析： 用户管理 邮件发送 报告生成 这三个完全不相关的功能被耦合在同一个结构体中","s":"3.1 违反SRP的例子","u":"/docs/note/design/oop_pinciple/srp","h":"#31-违反srp的例子","p":346},{"i":358,"t":"// 用户存储职责 type UserRepository struct { db *sql.DB } func (ur *UserRepository) Create(user User) error { _, err := ur.db.Exec(\"INSERT INTO users (...) VALUES (...)\") return err } func (ur *UserRepository) GetAll() ([]User, error) { rows, err := ur.db.Query(\"SELECT * FROM users\") // ...处理rows返回用户列表 return users, nil } // 邮件服务职责 type EmailService struct { smtpServer string } func (es *EmailService) SendWelcomeEmail(user User) error { return sendEmail(user.Email, \"Welcome!\", \"Welcome to our platform!\") } // 报告生成职责 type ReportGenerator struct { userRepo *UserRepository } func (rg *ReportGenerator) GenerateUserReport() ([]byte, error) { users, err := rg.userRepo.GetAll() // ...基于用户数据生成报告 return reportData, nil } 改进点： 将原来的UserManager拆分为三个独立的组件 每个组件只负责一项明确的职责 组件之间通过依赖注入协作","s":"3.2 遵循SRP的改进版本","u":"/docs/note/design/oop_pinciple/srp","h":"#32-遵循srp的改进版本","p":346},{"i":361,"t":"// 小而专注的接口 type UserStorer interface { Create(user User) error GetByID(id int) (*User, error) } type EmailSender interface { Send(to, subject, body string) error }","s":"4.1 接口设计","u":"/docs/note/design/oop_pinciple/srp","h":"#41-接口设计","p":346},{"i":363,"t":"type UserService struct { repo UserRepository email EmailService report ReportGenerator } func (us *UserService) RegisterNewUser(user User) error { if err := us.repo.Create(user); err != nil { return err } return us.email.SendWelcomeEmail(user) }","s":"4.2 组合代替继承","u":"/docs/note/design/oop_pinciple/srp","h":"#42-组合代替继承","p":346},{"i":365,"t":"// 不好的例子：函数做太多事情 func processUserData(data []byte) (User, error) { // 1. 验证数据 // 2. 解析数据 // 3. 保存到数据库 // 4. 发送通知 } // 好的例子：拆分为多个单一职责的函数 func validateUserData(data []byte) error {} func parseUserData(data []byte) (User, error) {} func saveUser(user User) error {} func notifyUserCreated(user User) error {}","s":"4.3 函数职责单一","u":"/docs/note/design/oop_pinciple/srp","h":"#43-函数职责单一","p":346},{"i":368,"t":"当一个结构体/接口变得庞大时 当修改一个功能会影响不相关功能时 当难以给结构体起一个准确的名称时(如UserManagerAndReportGenerator)","s":"应该应用SRP的情况：","u":"/docs/note/design/oop_pinciple/srp","h":"#应该应用srp的情况","p":346},{"i":370,"t":"对于简单的小型项目 对于确实紧密相关的功能 当拆分会导致不必要的复杂性时","s":"不必过度应用：","u":"/docs/note/design/oop_pinciple/srp","h":"#不必过度应用","p":346},{"i":372,"t":"SRP是编写可维护、可扩展代码的基础 在Go中，通过小而专注的结构体和接口来实现SRP 组合优于继承，依赖注入是实现SRP的好帮手 合理应用SRP，但避免过度设计 记住：让一个结构体/接口只为一个改变的理由而存在。","s":"6. 总结","u":"/docs/note/design/oop_pinciple/srp","h":"#6-总结","p":346},{"i":375,"t":"报错如下：​ gnutls_handshake() failed: The TLS connection was non-properly terminated. 解决方法：​ 关闭代理设置 unset all_proxy unset http_proxy unset https_proxy 排查方法：​ 报错是tls相关，猜测原因如下： 证书问题：过期。。。 协议或加密套不匹配 网络问题 证书问题排查： 通过浏览器查看证书信息，看证书是否受信任。 使用openssl s_client -connect <server>:<port> -showcerts 查看证书信息 设置调试日志排查 启用GnuTLS 的调试日志，查看详细的握手过程： export GNUTLS_DEBUG_LEVEL=3 # 使用`gnutls-cli -p <port> <server> -V` 通过关闭ssl认证测试是否可以下载 GIT_SSL_NO_VERIFY=1 git clone http:gitrepo 通过关闭所有代理，测试是否是代理导致的网络问题 显示关闭代理可以下载。也可以通过ssh来下载。ssh可以规避该问题。","s":"1. tls 连接错误","u":"/docs/note/git/git_err","h":"#1-tls-连接错误","p":373},{"i":378,"t":"开闭原则(Open/Closed Principle, OCP) 是SOLID原则中的第二个原则，由Bertrand Meyer提出。其核心思想是： 软件实体（类、模块、函数等）应该对扩展开放，对修改关闭。 在Go语言中，这一原则主要通过**接口(interface)和组合(composition)**来实现。","s":"1. 概述","u":"/docs/note/design/oop_pinciple/ocp","h":"#1-概述","p":376},{"i":380,"t":"对扩展开放：允许在不修改现有代码的情况下添加新功能 对修改关闭：现有代码应尽可能不被修改，以保持稳定性 抽象是关键：通过抽象建立灵活的基础结构","s":"2. 核心概念","u":"/docs/note/design/oop_pinciple/ocp","h":"#2-核心概念","p":376},{"i":383,"t":"// 支付方式接口 - 抽象层 type PaymentMethod interface { Pay(amount float64) error } // 信用卡支付实现 type CreditCardPayment struct{} func (c *CreditCardPayment) Pay(amount float64) error { fmt.Printf(\"支付 %.2f 元使用信用卡\\n\", amount) return nil } // 支付宝支付实现 type AlipayPayment struct{} func (a *AlipayPayment) Pay(amount float64) error { fmt.Printf(\"支付 %.2f 元使用支付宝\\n\", amount) return nil } // 支付处理器 - 对修改关闭 type PaymentProcessor struct { method PaymentMethod } func (p *PaymentProcessor) ProcessPayment(amount float64) error { return p.method.Pay(amount) }","s":"3.1 使用接口实现OCP","u":"/docs/note/design/oop_pinciple/ocp","h":"#31-使用接口实现ocp","p":376},{"i":385,"t":"// 新增微信支付 - 扩展而非修改 type WeChatPayment struct{} func (w *WeChatPayment) Pay(amount float64) error { fmt.Printf(\"支付 %.2f 元使用微信支付\\n\", amount) return nil } // 使用方式 func main() { processor := &PaymentProcessor{method: &WeChatPayment{}} processor.ProcessPayment(100.50) }","s":"3.2 添加新支付方式（扩展）","u":"/docs/note/design/oop_pinciple/ocp","h":"#32-添加新支付方式扩展","p":376},{"i":388,"t":"type PaymentType int const ( CreditCard PaymentType = iota Alipay ) // 直接依赖具体实现 func ProcessPayment(paymentType PaymentType, amount float64) error { switch paymentType { case CreditCard: fmt.Printf(\"支付 %.2f 元使用信用卡\\n\", amount) case Alipay: fmt.Printf(\"支付 %.2f 元使用支付宝\\n\", amount) default: return fmt.Errorf(\"不支持的支付方式\") } return nil } 问题：每次新增支付方式都需要修改ProcessPayment函数","s":"4.1 违反OCP的代码","u":"/docs/note/design/oop_pinciple/ocp","h":"#41-违反ocp的代码","p":376},{"i":390,"t":"// 使用接口抽象 type PaymentMethod interface { Pay(amount float64) error } // 注册支付方式的处理器 type PaymentHandler struct { methods map[string]PaymentMethod } func (h *PaymentHandler) Register(name string, method PaymentMethod) { h.methods[name] = method } func (h *PaymentHandler) Process(name string, amount float64) error { if method, ok := h.methods[name]; ok { return method.Pay(amount) } return fmt.Errorf(\"支付方式未注册\") }","s":"4.2 重构为符合OCP的代码","u":"/docs/note/design/oop_pinciple/ocp","h":"#42-重构为符合ocp的代码","p":376},{"i":393,"t":"type Server struct { host string port int timeout time.Duration } type Option func(*Server) func WithHost(host string) Option { return func(s *Server) { s.host = host } } func WithPort(port int) Option { return func(s *Server) { s.port = port } } func NewServer(opts ...Option) *Server { s := &Server{ host: \"localhost\", port: 8080, timeout: 30 * time.Second, } for _, opt := range opts { opt(s) } return s }","s":"5.1 函数选项模式(Functional Options)","u":"/docs/note/design/oop_pinciple/ocp","h":"#51-函数选项模式functional-options","p":376},{"i":395,"t":"type Handler func(http.ResponseWriter, *http.Request) func LoggingMiddleware(next Handler) Handler { return func(w http.ResponseWriter, r *http.Request) { log.Printf(\"请求开始: %s %s\", r.Method, r.URL.Path) next(w, r) log.Printf(\"请求结束: %s %s\", r.Method, r.URL.Path) } } func AuthMiddleware(next Handler) Handler { return func(w http.ResponseWriter, r *http.Request) { if r.Header.Get(\"Authorization\") == \"\" { http.Error(w, \"未授权\", http.StatusUnauthorized) return } next(w, r) } }","s":"5.2 中间件模式","u":"/docs/note/design/oop_pinciple/ocp","h":"#52-中间件模式","p":376},{"i":397,"t":"支付系统（如上面的示例） 日志系统（文件日志、控制台日志、网络日志等） 数据存储（MySQL、MongoDB、Redis等） 通知系统（邮件、短信、微信通知等） 中间件管道（Web中间件、RPC拦截器等）","s":"6. OCP的实际应用场景","u":"/docs/note/design/oop_pinciple/ocp","h":"#6-ocp的实际应用场景","p":376},{"i":399,"t":"控制台输出 文件输出 未来可以轻松添加网络日志","s":"7. OCP的日志系统","u":"/docs/note/design/oop_pinciple/ocp","h":"#7-ocp的日志系统","p":376},{"i":401,"t":"7.1.1 定义日志接口（抽象层）​ // Logger 日志接口 - 核心抽象 type Logger interface { Log(level string, message string) error Close() error } 7.1.2 实现具体日志输出​ 控制台日志输出 // ConsoleLogger 控制台日志实现 type ConsoleLogger struct { // 可以添加需要的字段，如是否彩色输出等 } func NewConsoleLogger() *ConsoleLogger { return &ConsoleLogger{} } func (c *ConsoleLogger) Log(level string, message string) error { _, err := fmt.Printf(\"[%s] %s\\n\", level, message) return err } func (c *ConsoleLogger) Close() error { // 控制台日志无需关闭资源 return nil } 文件日志输出 // FileLogger 文件日志实现 type FileLogger struct { file *os.File } func NewFileLogger(filename string) (*FileLogger, error) { file, err := os.OpenFile(filename, os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0644) if err != nil { return nil, err } return &FileLogger{file: file}, nil } func (f *FileLogger) Log(level string, message string) error { _, err := fmt.Fprintf(f.file, \"[%s] %s %s\\n\", time.Now().Format(\"2006-01-02 15:04:05\"), level, message) return err } func (f *FileLogger) Close() error { return f.file.Close() }","s":"7.1 基础设计","u":"/docs/note/design/oop_pinciple/ocp","h":"#71-基础设计","p":376},{"i":403,"t":"// CompositeLogger 组合多个日志输出 type CompositeLogger struct { loggers []Logger } func NewCompositeLogger(loggers ...Logger) *CompositeLogger { return &CompositeLogger{loggers: loggers} } func (c *CompositeLogger) Log(level string, message string) error { for _, logger := range c.loggers { if err := logger.Log(level, message); err != nil { return err } } return nil } func (c *CompositeLogger) Close() error { for _, logger := range c.loggers { if err := logger.Close(); err != nil { return err } } return nil }","s":"7.2 组合日志器（支持多种输出）","u":"/docs/note/design/oop_pinciple/ocp","h":"#72-组合日志器支持多种输出","p":376},{"i":405,"t":"// LoggerType 定义日志类型 type LoggerType string const ( LoggerConsole LoggerType = \"console\" LoggerFile LoggerType = \"file\" // 未来可以添加 LoggerNetwork ) // LoggerConfig 日志配置 type LoggerConfig struct { Type LoggerType FilePath string // 仅文件日志需要 } // NewLoggerFromConfig 根据配置创建日志器 func NewLoggerFromConfig(config LoggerConfig) (Logger, error) { switch config.Type { case LoggerConsole: return NewConsoleLogger(), nil case LoggerFile: return NewFileLogger(config.FilePath) default: return nil, fmt.Errorf(\"未知的日志类型: %s\", config.Type) } }","s":"7.3 使用工厂方法创建日志器","u":"/docs/note/design/oop_pinciple/ocp","h":"#73-使用工厂方法创建日志器","p":376},{"i":407,"t":"未来需要添加网络日志时，只需新增实现，无需修改现有代码： // NetworkLogger 网络日志实现 type NetworkLogger struct { endpoint string client *http.Client } func NewNetworkLogger(endpoint string) *NetworkLogger { return &NetworkLogger{ endpoint: endpoint, client: &http.Client{Timeout: 5 * time.Second}, } } func (n *NetworkLogger) Log(level string, message string) error { data := map[string]string{ \"level\": level, \"message\": message, \"time\": time.Now().Format(time.RFC3339), } jsonData, _ := json.Marshal(data) resp, err := n.client.Post(n.endpoint, \"application/json\", bytes.NewBuffer(jsonData)) if err != nil { return err } defer resp.Body.Close() if resp.StatusCode >= 400 { return fmt.Errorf(\"日志服务器返回错误状态码: %d\", resp.StatusCode) } return nil } func (n *NetworkLogger) Close() error { // 可以在这里关闭长连接等资源 return nil }","s":"7.4 添加网络日志输出（扩展示例）","u":"/docs/note/design/oop_pinciple/ocp","h":"#74-添加网络日志输出扩展示例","p":376},{"i":409,"t":"func main() { // 创建控制台日志器 consoleLogger := NewConsoleLogger() // 创建文件日志器 fileLogger, err := NewFileLogger(\"app.log\") if err != nil { panic(err) } // 创建组合日志器 compositeLogger := NewCompositeLogger(consoleLogger, fileLogger) // 使用日志 compositeLogger.Log(\"INFO\", \"应用程序启动\") compositeLogger.Log(\"WARN\", \"这是一个警告信息\") compositeLogger.Log(\"ERROR\", \"发生了一个错误\") // 关闭所有日志器 if err := compositeLogger.Close(); err != nil { fmt.Printf(\"关闭日志器时出错: %v\\n\", err) } // 未来添加网络日志 networkLogger := NewNetworkLogger(\"http://log-server.example.com/log\") extendedLogger := NewCompositeLogger(consoleLogger, fileLogger, networkLogger) extendedLogger.Log(\"INFO\", \"这条日志会输出到控制台、文件和网络\") extendedLogger.Close() }","s":"7.5 完整使用示例","u":"/docs/note/design/oop_pinciple/ocp","h":"#75-完整使用示例","p":376},{"i":411,"t":"OCP的核心是通过抽象来隔离变化 在Go中主要使用接口和组合来实现OCP 函数选项模式和中间件模式是实践OCP的优雅方式 平衡原则：不要过度设计，只为预期的变化做抽象 好的设计应该像插件系统一样工作 - 通过添加新代码而非修改现有代码来扩展功能。","s":"8. 总结","u":"/docs/note/design/oop_pinciple/ocp","h":"#8-总结","p":376},{"i":413,"t":"面向对象编程(OOP)有几个核心设计原则，这些原则有助于创建灵活、可维护和可扩展的软件系统。以下是主要的OOP设计原则：","s":"面向对象编程中的设计原则","u":"/docs/note/design/oop_pinciple/principle","h":"","p":412},{"i":415,"t":"单一职责原则(SRP - Single Responsibility Principle) 一个类应该只有一个引起它变化的原因 每个类只负责一项职责 开闭原则(OCP - Open/Closed Principle) 软件实体(类、模块、函数等)应该对扩展开放，对修改关闭 通过抽象和继承实现新功能，而不是修改现有代码 里氏替换原则(LSP - Liskov Substitution Principle) 子类型必须能够替换它们的基类型 派生类不应改变基类的行为，只能扩展它 接口隔离原则(ISP - Interface Segregation Principle) 客户端不应被迫依赖它们不使用的接口 将大接口拆分为更小、更具体的接口 依赖倒置原则(DIP - Dependency Inversion Principle) 高层模块不应依赖低层模块，两者都应依赖抽象 抽象不应依赖细节，细节应依赖抽象","s":"SOLID原则","u":"/docs/note/design/oop_pinciple/principle","h":"#solid原则","p":412},{"i":417,"t":"组合优于继承原则 优先使用对象组合而不是类继承来重用功能 提高灵活性，减少类层次结构的复杂性 迪米特法则(最少知识原则 - Law of Demeter) 一个对象应该对其他对象有最少的了解 只与直接的朋友通信，减少类之间的耦合 DRY原则(Don't Repeat Yourself) 避免重复代码 将重复逻辑提取到公共方法或类中 KISS原则(Keep It Simple, Stupid) 保持设计简单直接 避免不必要的复杂性 YAGNI原则(You Aren't Gonna Need It) 不要添加当前不需要的功能 避免过度设计","s":"其他重要原则","u":"/docs/note/design/oop_pinciple/principle","h":"#其他重要原则","p":412},{"i":419,"t":"整体而言，开发过程中多使用接口编程，方便程序扩展。接口定义应该保持职责单一和小。 使用接口编程，可以降低程序直接到耦合度。便于替换接口后端。","s":"个人总结","u":"/docs/note/design/oop_pinciple/principle","h":"#个人总结","p":412},{"i":422,"t":"bcrypt 是一种安全的密码哈希算法，适用于存储用户密码，防止明文泄露。Golang 提供 golang.org/x/crypto/bcrypt 包来简化 bcrypt 的使用。","s":"1. 概述","u":"/docs/note/golang/bcrypt","h":"#1-概述","p":420},{"i":424,"t":"bcrypt 属于 Go 的扩展库，需要手动安装： go get golang.org/x/crypto/bcrypt","s":"2. 安装","u":"/docs/note/golang/bcrypt","h":"#2-安装","p":420},{"i":427,"t":"package main import ( \"fmt\" \"golang.org/x/crypto/bcrypt\" ) func main() { password := \"my_secure_password\" // 生成 bcrypt 哈希 hashedPassword, err := bcrypt.GenerateFromPassword([]byte(password), bcrypt.DefaultCost) if err != nil { fmt.Println(\"Error generating hash:\", err) return } fmt.Println(\"Hashed Password:\", string(hashedPassword)) } 说明 bcrypt.GenerateFromPassword([]byte(password), bcrypt.DefaultCost) 生成哈希密码。 bcrypt.DefaultCost 是默认的计算成本（10），可以调整为 bcrypt.MinCost（较快）或 bcrypt.MaxCost（更安全但更慢）。 生成的哈希密码会自动包含 bcrypt 版本、成本因子和盐值。","s":"3.1 生成哈希密码","u":"/docs/note/golang/bcrypt","h":"#31-生成哈希密码","p":420},{"i":429,"t":"package main import ( \"fmt\" \"golang.org/x/crypto/bcrypt\" ) func main() { password := \"my_secure_password\" hashedPassword := \"$2a$10$P8HU5POQ9mC9dp5BqGkgYOdxz9b7zRbhq2bEn5B2c5rYrXsEoaQve\" // 之前存储的哈希 // 验证密码 err := bcrypt.CompareHashAndPassword([]byte(hashedPassword), []byte(password)) if err != nil { fmt.Println(\"Password incorrect\") } else { fmt.Println(\"Password correct\") } } 说明 bcrypt.CompareHashAndPassword(hashedPassword, password) 验证密码是否匹配哈希值。 如果密码匹配，返回 nil，否则返回 error。","s":"3.2 校验密码","u":"/docs/note/golang/bcrypt","h":"#32-校验密码","p":420},{"i":431,"t":"要修改密码，直接生成新哈希并存储： newPassword := \"new_secure_password\" newHashedPassword, _ := bcrypt.GenerateFromPassword([]byte(newPassword), bcrypt.DefaultCost) fmt.Println(\"Updated Hashed Password:\", string(newHashedPassword))","s":"3.3 修改密码","u":"/docs/note/golang/bcrypt","h":"#33-修改密码","p":420},{"i":433,"t":"如果哈希密码的成本过低，可以使用 bcrypt.Cost() 确定是否需要更新： cost, err := bcrypt.Cost([]byte(hashedPassword)) if err == nil && cost < bcrypt.DefaultCost { fmt.Println(\"Password hash is outdated, consider updating\") } 监测哈希成本并升级 如果 bcrypt.Cost 返回的值小于当前推荐值（如 12），则需要重新哈希密码： const recommendedCost = 12 func upgradePasswordHash(storedHash string, password string) string { cost, err := bcrypt.Cost([]byte(storedHash)) if err != nil { fmt.Println(\"Error getting cost:\", err) return storedHash } // 如果成本因子过低，则重新生成哈希 if cost < recommendedCost { newHash, err := bcrypt.GenerateFromPassword([]byte(password), recommendedCost) if err != nil { fmt.Println(\"Error upgrading hash:\", err) return storedHash } fmt.Println(\"Password hash upgraded.\") return string(newHash) } return storedHash }","s":"3.4 确定哈希是否需要更新","u":"/docs/note/golang/bcrypt","h":"#34-确定哈希是否需要更新","p":420},{"i":435,"t":"场景 说明 用户密码存储 安全存储用户密码，防止明文泄露 密码验证 在用户登录时进行哈希匹配 密码更新 检测哈希是否过时，并重新加密 防止暴力破解 bcrypt 计算开销高，能有效阻止暴力攻击","s":"4. 适用场景","u":"/docs/note/golang/bcrypt","h":"#4-适用场景","p":420},{"i":437,"t":"bcrypt.GenerateFromPassword() 生成哈希密码。 bcrypt.CompareHashAndPassword() 验证密码。 bcrypt.Cost() 检查哈希成本，确定是否需要升级。 Linux /etc/shadow 存储的是加密后的密码哈希，格式如下： $<加密算法>$<成本因子或迭代次数>$<salt+hash> 常见的加密算法： $1$ → MD5 $2a$ / $2b$ / $2y$ → bcrypt $5$ → SHA-256 $6$ → SHA-512 示例（bcrypt）： $2y$10$XGnVZqM9JpWcPKCqGRBBtuNA7E6x2ZK.7JsZh9y1X1Ij0wY2brJve $2y$ → 使用 bcrypt 加密 10 → 计算成本（cost factor） XGnVZqM9JpWcPKCqGRBBtu → 盐（salt） NA7E6x2ZK.7JsZh9y1X1Ij0wY2brJve → 哈希后的密码","s":"5. 总结","u":"/docs/note/golang/bcrypt","h":"#5-总结","p":420},{"i":440,"t":"工厂模式是一种创建型设计模式，目的是将对象的创建过程与使用过程分离，从而降低代码耦合、增强扩展性。 在 Go 中，虽然没有类和继承，但可以通过接口 + 工厂函数/结构来实现相同思想。","s":"1. 概述","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#1-概述","p":438},{"i":443,"t":"package main import \"fmt\" // 接口 type Shape interface { Draw() } // 实现类 type Circle struct{} func (c Circle) Draw() { fmt.Println(\"Drawing Circle\") } type Square struct{} func (s Square) Draw() { fmt.Println(\"Drawing Square\") } // 简单工厂 func ShapeFactory(shapeType string) Shape { switch shapeType { case \"circle\": return Circle{} case \"square\": return Square{} default: return nil } } func main() { s1 := ShapeFactory(\"circle\") s2 := ShapeFactory(\"square\") s1.Draw() s2.Draw() }","s":"2.1 示例：图形创建器","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#21-示例图形创建器","p":438},{"i":445,"t":"// 连接接口 type Conn interface { Send([]byte) error Receive() ([]byte, error) } // 简单工厂实现 func NewConn(network string, addr string) (Conn, error) { switch network { case \"tcp\": return &TCPConn{addr: addr}, nil case \"unix\": return &UnixConn{path: addr}, nil case \"http\": return &HTTPConn{url: addr}, nil default: return nil, fmt.Errorf(\"unsupported network\") } } // 使用示例 func main() { conn, _ := NewConn(\"http\", \"https://api.example.com\") conn.Send([]byte(\"GET /\")) }","s":"2.2 示例：网络连接","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#22-示例网络连接","p":438},{"i":447,"t":"✅ 简单直接，适合小规模使用 ❌ 增加新类型要修改工厂，违反开闭原则（OCP）","s":"2.3 优缺点","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#23-优缺点","p":438},{"i":450,"t":"package main import \"fmt\" // 接口 type DBConnector interface { Connect() } // 实现 type MySQLConnector struct{} func (m MySQLConnector) Connect() { fmt.Println(\"MySQL connected\") } type PostgresConnector struct{} func (p PostgresConnector) Connect() { fmt.Println(\"Postgres connected\") } // 工厂接口 type DBFactory interface { CreateConnector() DBConnector } // 实现工厂 type MySQLFactory struct{} func (f MySQLFactory) CreateConnector() DBConnector { return MySQLConnector{} } type PostgresFactory struct{} func (f PostgresFactory) CreateConnector() DBConnector { return PostgresConnector{} } func main() { var factory DBFactory factory = MySQLFactory{} conn := factory.CreateConnector() conn.Connect() factory = PostgresFactory{} conn = factory.CreateConnector() conn.Connect() }","s":"3.1 示例：数据库连接器","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#31-示例数据库连接器","p":438},{"i":452,"t":"// 日志接口 type Logger interface { Log(level string, msg string) } // 工厂接口 type LoggerFactory interface { Create() Logger } // 文件日志实现 type FileLogger struct { path string } func (f *FileLogger) Log(level, msg string) { // 实现文件写入 } type FileLoggerFactory struct { path string } func (f *FileLoggerFactory) Create() Logger { return &FileLogger{path: f.path} } // 控制台日志实现 type ConsoleLogger struct{} func (c *ConsoleLogger) Log(level, msg string) { fmt.Printf(\"[%s] %s\\n\", level, msg) } type ConsoleLoggerFactory struct{} func (f *ConsoleLoggerFactory) Create() Logger { return &ConsoleLogger{} } // 使用示例 func getLoggerFactory(env string) LoggerFactory { if env == \"production\" { return &FileLoggerFactory{path: \"/var/log/app.log\"} } return &ConsoleLoggerFactory{} } func main() { factory := getLoggerFactory(os.Getenv(\"APP_ENV\")) logger := factory.Create() logger.Log(\"INFO\", \"application started\") }","s":"3.2 示例：日志系统","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#32-示例日志系统","p":438},{"i":454,"t":"✅ 遵循开闭原则，新增类型无需改旧代码 ❌ 类（结构）增多，代码结构复杂","s":"3.3 优缺点","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#33-优缺点","p":438},{"i":457,"t":"package main import \"fmt\" // 产品接口族 type Button interface { Paint() } type Textbox interface { Draw() } // Windows 系列 type WindowsButton struct{} func (WindowsButton) Paint() { fmt.Println(\"Windows Button\") } type WindowsTextbox struct{} func (WindowsTextbox) Draw() { fmt.Println(\"Windows Textbox\") } // Mac 系列 type MacButton struct{} func (MacButton) Paint() { fmt.Println(\"Mac Button\") } type MacTextbox struct{} func (MacTextbox) Draw() { fmt.Println(\"Mac Textbox\") } // 抽象工厂接口 type GUIFactory interface { CreateButton() Button CreateTextbox() Textbox } // 具体工厂 type WindowsFactory struct{} func (WindowsFactory) CreateButton() Button { return WindowsButton{} } func (WindowsFactory) CreateTextbox() Textbox { return WindowsTextbox{} } type MacFactory struct{} func (MacFactory) CreateButton() Button { return MacButton{} } func (MacFactory) CreateTextbox() Textbox { return MacTextbox{} } // 使用 func main() { var factory GUIFactory factory = WindowsFactory{} factory.CreateButton().Paint() factory.CreateTextbox().Draw() factory = MacFactory{} factory.CreateButton().Paint() factory.CreateTextbox().Draw() }","s":"4.1 示例：UI 工厂（按钮 + 文本框）","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#41-示例ui-工厂按钮--文本框","p":438},{"i":459,"t":"✅ 保证一组产品的一致性（同属一个系统） ❌ 扩展产品族困难（需要修改接口）","s":"4.2 优缺点","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#42-优缺点","p":438},{"i":461,"t":"package main import \"fmt\" type Animal interface { Speak() } type Dog struct{} func (Dog) Speak() { fmt.Println(\"Woof!\") } type Cat struct{} func (Cat) Speak() { fmt.Println(\"Meow!\") } var animalRegistry = make(map[string]func() Animal) func RegisterAnimal(name string, factory func() Animal) { animalRegistry[name] = factory } func GetAnimal(name string) Animal { if f, ok := animalRegistry[name]; ok { return f() } return nil } func main() { RegisterAnimal(\"dog\", func() Animal { return Dog{} }) RegisterAnimal(\"cat\", func() Animal { return Cat{} }) GetAnimal(\"dog\").Speak() GetAnimal(\"cat\").Speak() }","s":"5. 函数式工厂（Functional Factory）","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#5-函数式工厂functional-factory","p":438},{"i":463,"t":"✅ 高度解耦，便于插件化开发 ✅ 新增产品无需改动旧工厂逻辑","s":"5.1 优点","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#51-优点","p":438},{"i":465,"t":"✅ 日志、数据库、配置适配器 ✅ 插件系统、驱动层抽象 ✅ UI 工具包的主题/皮肤切换","s":"6.  工厂模式应用场景","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#6--工厂模式应用场景","p":438},{"i":467,"t":"类型 是否可扩展 简洁性 应用范围 简单工厂 ❌ 不易扩展 ✅ 小项目 工厂方法 ✅ ✅ 通用 抽象工厂 ✅（产品） ❌ 系列产品 函数式注册 ✅ ✅ 插件式架构","s":"7. 小结对比","u":"/docs/note/design/standard_design_patterns/create/factory","h":"#7-小结对比","p":438},{"i":470,"t":"sync.Cond 是 Go 标准库中提供的一种条件变量，用于协调多个 goroutine 之间的同步。它允许一组 goroutine 在满足特定条件时被唤醒执行。","s":"1. 概述","u":"/docs/note/golang/concurrency/cond","h":"#1-概述","p":468},{"i":473,"t":"条件变量是一种同步原语，它： 允许 goroutine 在某个条件不满足时挂起（等待） 当条件可能满足时，通知等待的 goroutine 检查条件","s":"2.1 条件变量","u":"/docs/note/golang/concurrency/cond","h":"#21-条件变量","p":468},{"i":475,"t":"type Cond struct { noCopy noCopy L Locker // 关联的互斥锁 notify notifyList }","s":"2.2 Cond 结构","u":"/docs/note/golang/concurrency/cond","h":"#22-cond-结构","p":468},{"i":478,"t":"func NewCond(l Locker) *Cond 示例： var mu sync.Mutex cond := sync.NewCond(&mu)","s":"3.1 创建 Cond","u":"/docs/note/golang/concurrency/cond","h":"#31-创建-cond","p":468},{"i":480,"t":"func (c *Cond) Wait() 必须先获取关联的锁 调用时会释放锁并挂起当前 goroutine 被唤醒时会重新获取锁","s":"3.2 Wait 方法","u":"/docs/note/golang/concurrency/cond","h":"#32-wait-方法","p":468},{"i":482,"t":"func (c *Cond) Signal() 唤醒一个等待的 goroutine","s":"3.3 Signal 方法","u":"/docs/note/golang/concurrency/cond","h":"#33-signal-方法","p":468},{"i":484,"t":"func (c *Cond) Broadcast() 唤醒所有等待的 goroutine","s":"3.4 Broadcast 方法","u":"/docs/note/golang/concurrency/cond","h":"#34-broadcast-方法","p":468},{"i":487,"t":"mu.Lock() // 检查条件 for !condition() { // for 防止虚假唤醒,或者多个协程被唤醒，只能执行一个 cond.Wait() } // 条件满足，执行操作 mu.Unlock()","s":"4.1 基本使用模式","u":"/docs/note/golang/concurrency/cond","h":"#41-基本使用模式","p":468},{"i":489,"t":"package main import ( \"fmt\" \"sync\" \"time\" ) var ( queue []int lock = sync.Mutex{} cond = sync.NewCond(&lock) ) func consumer(id int) { for { cond.L.Lock() for len(queue) == 0 { cond.Wait() } item := queue[0] queue = queue[1:] fmt.Printf(\"Consumer %d got item: %d\\n\", id, item) cond.L.Unlock() time.Sleep(500 * time.Millisecond) } } func producer() { for i := 0; i < 5; i++ { cond.L.Lock() queue = append(queue, i) fmt.Printf(\"Producer added item: %d\\n\", i) cond.Signal() // 或 cond.Broadcast() cond.L.Unlock() // 等待消费。这样确保生成一个后，消费完一个才继续执行下一个生成。 // 否则， time.Sleep(1 * time.Second) } } func main() { for i := 0; i < 2; i++ { go consumer(i) } producer() //time.Sleep(10 * time.Second) }","s":"4.2 生产者-消费者示例","u":"/docs/note/golang/concurrency/cond","h":"#42-生产者-消费者示例","p":468},{"i":491,"t":"必须持有锁时调用 Wait: Wait 会在调用时释放锁，但在返回前会重新获取锁 条件检查应使用循环: 被唤醒后应重新检查条件，因为可能有虚假唤醒 Signal 和 Broadcast 的区别: Signal 只唤醒一个等待的 goroutine Broadcast 唤醒所有等待的 goroutine 性能考虑: 在大多数情况下，channel 可能是更简单的选择 Cond 适用于复杂的条件等待场景","s":"5. 注意事项","u":"/docs/note/golang/concurrency/cond","h":"#5-注意事项","p":468},{"i":493,"t":"封装条件检查: func (s *Shared) waitForCondition() { s.mu.Lock() defer s.mu.Unlock() for !s.condition { s.cond.Wait() } } 使用 defer 释放锁: 确保在 Wait 返回后锁会被释放 避免过度使用: 在简单场景下优先考虑 channel","s":"6. 最佳实践","u":"/docs/note/golang/concurrency/cond","h":"#6-最佳实践","p":468},{"i":495,"t":"特性 sync.Cond channel 信号通知 ✅ ✅（缓冲通道或 select + close） 多等待者唤醒控制 ✅（Signal/Broadcast） ❌ 队列机制 ❌（需自己实现） ✅ 简单协程通信 ❌ ✅ 推荐优先使用 channel，除非必须使用 Cond 的信号语义。","s":"7. 与 channel 的对比","u":"/docs/note/golang/concurrency/cond","h":"#7-与-channel-的对比","p":468},{"i":497,"t":"sync.Cond 是 Go 中处理复杂同步问题的强大工具，但需要谨慎使用。理解其工作原理和正确使用模式对于编写正确的并发程序至关重要。","s":"8. 总结","u":"/docs/note/golang/concurrency/cond","h":"#8-总结","p":468},{"i":500,"t":"os/exec 包提供了运行外部命令的方法，允许 Go 程序执行系统命令并与之交互。","s":"1. os/exec 包简介","u":"/docs/note/golang/cmd","h":"#1-osexec-包简介","p":498},{"i":502,"t":"exec.Command 用于创建一个代表外部命令的 Cmd 结构。","s":"2. exec.Command 基本用法","u":"/docs/note/golang/cmd","h":"#2-execcommand-基本用法","p":498},{"i":504,"t":"package main import ( \"fmt\" \"os/exec\" ) func main() { cmd := exec.Command(\"ls\", \"-l\") // 在 Linux/macOS 上列出当前目录内容 // 获取正确和错误输出 output, err := cmd.CombinedOutput() if err != nil { fmt.Println(\"Error:\", err) return } fmt.Println(string(output)) }","s":"2.1 获取stdout和stderr","u":"/docs/note/golang/cmd","h":"#21-获取stdout和stderr","p":498},{"i":506,"t":"package main import ( \"fmt\" \"os/exec\" ) func main() { cmd := exec.Command(\"ls\", \"-l\") output, err := cmd.Output() if err != nil { fmt.Println(\"Error:\", err) return } fmt.Println(\"Output:\", string(output)) }","s":"2.2 只获取stdout","u":"/docs/note/golang/cmd","h":"#22-只获取stdout","p":498},{"i":509,"t":"package main import ( \"bytes\" \"fmt\" \"os/exec\" ) func main() { cmd := exec.Command(\"echo\", \"Hello, World!\") var out bytes.Buffer cmd.Stdout = &out if err := cmd.Run(); err != nil { fmt.Println(\"Error:\", err) } fmt.Println(\"Output:\", out.String()) }","s":"3.1 使用cmd.Stdout","u":"/docs/note/golang/cmd","h":"#31-使用cmdstdout","p":498},{"i":511,"t":"StdoutPipe 允许我们以流式方式读取命令的标准输出。 package main import ( \"bufio\" \"fmt\" \"os/exec\" ) func main() { cmd := exec.Command(\"ping\", \"baidu.com\", \"-c\", \"30\") stdout, err := cmd.StdoutPipe() if err != nil { fmt.Println(\"Error creating StdoutPipe:\", err) return } if err := cmd.Start(); err != nil { fmt.Println(\"Error starting command:\", err) return } scanner := bufio.NewScanner(stdout) for scanner.Scan() { fmt.Println(\"Output line:\", scanner.Text()) } if err := cmd.Wait(); err != nil { fmt.Println(\"Error waiting for command:\", err) } }","s":"3.2 使用 StdoutPipe","u":"/docs/note/golang/cmd","h":"#32-使用-stdoutpipe","p":498},{"i":513,"t":"package main import ( \"bytes\" \"fmt\" \"os/exec\" ) func main() { cmd := exec.Command(\"cat\") var out bytes.Buffer cmd.Stdout = &out cmd.Stdin = bytes.NewBufferString(\"Hello from stdin!\") if err := cmd.Run(); err != nil { fmt.Println(\"Error:\", err) } fmt.Println(\"Output:\", out.String()) }","s":"3.3 传递输入 (stdin)","u":"/docs/note/golang/cmd","h":"#33-传递输入-stdin","p":498},{"i":515,"t":"cmd := exec.Command(\"printenv\") cmd.Env = append(cmd.Env, \"MY_VAR=HelloWorld\")","s":"3.4 设置环境变量","u":"/docs/note/golang/cmd","h":"#34-设置环境变量","p":498},{"i":517,"t":"package main import ( \"context\" \"fmt\" \"os/exec\" \"time\" ) func main() { ctx, cancel := context.WithTimeout(context.Background(), 2*time.Second) defer cancel() cmd := exec.CommandContext(ctx, \"sleep\", \"5\") if err := cmd.Run(); err != nil { fmt.Println(\"Command timed out or failed:\", err) } }","s":"3.5 运行带超时的命令","u":"/docs/note/golang/cmd","h":"#35-运行带超时的命令","p":498},{"i":519,"t":"package utils import ( \"os\" \"os/exec\" \"strings\" ) // Run executes a shell command without capturing its output. func Run(command string) error { cmd := prepareCommand(command) return cmd.Run() } // RunWithOutput executes a shell command and returns its combined stdout and stderr output. func RunWithOutput(command string) ([]byte, error) { cmd := prepareCommand(command) return cmd.CombinedOutput() } // RunWithExitCode executes a shell command and returns its output along with the exit code. func RunWithExitCode(command string) ([]byte, int, error) { cmd := prepareCommand(command) output, err := cmd.CombinedOutput() if err != nil { if exitErr, ok := err.(*exec.ExitError); ok { return output, exitErr.ExitCode(), err } return output, -1, err } return output, 0, nil } // prepareCommand initializes an *exec.Cmd with environment variables. func prepareCommand(command string) *exec.Cmd { args := strings.Fields(command) if len(args) == 0 { return exec.Command(\"\") // 处理空字符串情况，避免 panic } cmd := exec.Command(args[0], args[1:]...) cmd.Env = append(os.Environ(), \"LC_ALL=C\", \"LANG=C\") return cmd }","s":"3.6 增加错误判断","u":"/docs/note/golang/cmd","h":"#36-增加错误判断","p":498},{"i":521,"t":"package main // echo \"hello world!\" | grep World import ( \"bytes\" \"fmt\" \"os/exec\" ) func main() { cmd1 := exec.Command(\"echo\", \"Hello, World!\") cmd2 := exec.Command(\"grep\", \"World\") // 创建管道 pipe, err := cmd1.StdoutPipe() if err != nil { fmt.Println(\"Error creating pipe:\", err) return } cmd2.Stdin = pipe var out bytes.Buffer cmd2.Stdout = &out // 启动第一个命令 if err := cmd1.Start(); err != nil { fmt.Println(\"Error starting cmd1:\", err) return } // 启动第二个命令 if err := cmd2.Start(); err != nil { fmt.Println(\"Error starting cmd2:\", err) return } // 等待所有命令完成 if err := cmd1.Wait(); err != nil { fmt.Println(\"Error waiting for cmd1:\", err) return } if err := cmd2.Wait(); err != nil { fmt.Println(\"Error waiting for cmd2:\", err) return } fmt.Println(\"Filtered Output:\", out.String()) }","s":"3.7 使用管道连接多个命令","u":"/docs/note/golang/cmd","h":"#37-使用管道连接多个命令","p":498},{"i":523,"t":"exec.Command 用于创建并运行外部命令。 Stdout 和 Stderr 可以用于捕获命令输出。 StdoutPipe 适用于流式读取命令输出。 Output() 仅获取标准输出，而 CombinedOutput() 同时获取标准输出和标准错误。 Stdin 可以用于传递输入数据。 exec.CommandContext 可用于超时控制。 os/exec 包适用于需要在 Go 代码中执行外部命令的场景，例如自动化任务、系统管理和数据处理。","s":"4. 结论","u":"/docs/note/golang/cmd","h":"#4-结论","p":498},{"i":525,"t":"在 Golang 中，多协程 goroutine之间的交互主要通过以下几种方式实现：","s":"Golang 并发编程","u":"/docs/note/golang/concurrency/","h":"","p":524},{"i":527,"t":"Golang 提供了 channel 作为 goroutine 之间通信的主要方式。它是线程安全的，并且可以避免数据竞争。","s":"1. Channel（推荐方式）","u":"/docs/note/golang/concurrency/","h":"#1-channel推荐方式","p":524},{"i":529,"t":"避免竞争：channel 通过消息传递，而不是共享变量，减少数据竞争的可能性。 更符合 Go 语言哲学。 代码更简洁：避免手动加锁和解锁。","s":"1.1 Channel 的特点","u":"/docs/note/golang/concurrency/","h":"#11-channel-的特点","p":524},{"i":531,"t":"package main import ( \"fmt\" \"time\" ) func worker(ch chan string) { time.Sleep(2 * time.Second) ch <- \"任务完成\" } func main() { ch := make(chan string) // 创建一个无缓冲 channel go worker(ch) // 启动 goroutine fmt.Println(\"等待任务完成...\") msg := <-ch // 接收数据（阻塞） fmt.Println(\"收到消息:\", msg) } 解释： ch := make(chan string) 创建了一个无缓冲的 channel。 go worker(ch) 启动一个协程 worker，并通过 channel 发送消息。 msg := <-ch 在主线程阻塞等待，直到 worker 发送数据。","s":"1.2 基础示例：","u":"/docs/note/golang/concurrency/","h":"#12-基础示例","p":524},{"i":533,"t":"select 语句允许从多个 channel 读取数据，或者在通道无数据时执行默认操作。 package main import ( \"fmt\" \"time\" ) func main() { ch1 := make(chan string) ch2 := make(chan string) // 启动 goroutine 向 ch1 发送数据 go func() { time.Sleep(2 * time.Second) ch1 <- \"Message from ch1\" }() // 启动 goroutine 向 ch2 发送数据 go func() { time.Sleep(1 * time.Second) ch2 <- \"Message from ch2\" }() // `select` 监听多个 `channel` select { case msg1 := <-ch1: fmt.Println(\"Received:\", msg1) case msg2 := <-ch2: fmt.Println(\"Received:\", msg2) case <-time.After(3 * time.Second): fmt.Println(\"Timeout: No message received\") } } 代码解析 select 监听 ch1 和 ch2，哪个 channel 先有数据，就会执行对应的 case。 如果 3 秒内没有消息到达，则 case <-time.After(3 * time.Second) 触发，防止永久阻塞。 使用场景 监听多个 channel，避免阻塞。 超时控制：如 time.After 结合 select 限制请求时间。","s":"1.3 select 结合 channel 用法","u":"/docs/note/golang/concurrency/","h":"#13-select-结合-channel-用法","p":524},{"i":535,"t":"任务队列（生产者-消费者模型）。 多个 worker 处理任务，避免共享变量。 限制并发任务的数量。","s":"1.4 Channel 的适用场景","u":"/docs/note/golang/concurrency/","h":"#14-channel-的适用场景","p":524},{"i":537,"t":"如果多个 goroutine 需要同步执行完毕后再继续，sync.WaitGroup 是一种简单的方法。 示例： package main import ( \"fmt\" \"sync\" \"time\" ) func worker(id int, wg *sync.WaitGroup) { defer wg.Done() // 执行完成后减少计数 fmt.Printf(\"Worker %d 开始工作...\\n\", id) time.Sleep(2 * time.Second) fmt.Printf(\"Worker %d 完成工作!\\n\", id) } func main() { var wg sync.WaitGroup for i := 1; i <= 3; i++ { wg.Add(1) // 增加计数 go worker(i, &wg) // 启动 goroutine } wg.Wait() // 等待所有任务完成 fmt.Println(\"所有任务完成\") } 解释： wg.Add(1) 增加计数，每个 goroutine 开始时调用一次。 defer wg.Done() 在 goroutine 结束时减少计数。 wg.Wait() 阻塞主线程，直到所有 wg.Done() 调用完毕。","s":"2. sync.WaitGroup`","u":"/docs/note/golang/concurrency/","h":"#2-syncwaitgroup","p":524},{"i":539,"t":"当多个 goroutine 需要修改共享数据时，可以使用 sync.Mutex 防止竞态条件（race condition）。 示例： package main import ( \"fmt\" \"sync\" \"time\" ) var ( counter int mu sync.Mutex ) func worker(id int, wg *sync.WaitGroup) { defer wg.Done() mu.Lock() counter++ fmt.Printf(\"Worker %d 计数: %d\\n\", id, counter) mu.Unlock() } func main() { var wg sync.WaitGroup for i := 1; i <= 5; i++ { wg.Add(1) go worker(i, &wg) } wg.Wait() fmt.Println(\"最终计数:\", counter) } 解释： mu.Lock() 保护 counter，防止多个 goroutine 并发修改时发生竞态条件。 mu.Unlock() 释放锁，允许其他 goroutine 继续执行。","s":"3.  sync.Mutex","u":"/docs/note/golang/concurrency/","h":"#3--syncmutex","p":524},{"i":541,"t":"sync.Cond 适用于等待某个条件满足后再执行的场景，例如多个线程等待某个事件触发。 示例： package main import ( \"fmt\" \"sync\" \"time\" ) var ( ready = false cond = sync.NewCond(&sync.Mutex{}) ) func worker(id int) { cond.L.Lock() for !ready { cond.Wait() // 等待条件变为 true } fmt.Printf(\"Worker %d 开始工作!\\n\", id) cond.L.Unlock() } func main() { var wg sync.WaitGroup for i := 1; i <= 3; i++ { wg.Add(1) go func(id int) { defer wg.Done() worker(id) }(i) } time.Sleep(2 * time.Second) // 触发事件 cond.L.Lock() ready = true cond.L.Unlock() cond.Broadcast() // 通知所有等待的 goroutine wg.Wait() } 解释： cond.Wait() 等待条件 ready == true。 cond.Broadcast() 唤醒所有等待的 goroutine。","s":"4.  sync.Cond 进行事件通知","u":"/docs/note/golang/concurrency/","h":"#4--synccond-进行事件通知","p":524},{"i":543,"t":"sync.Once 确保某个操作在多个 goroutine 中只执行一次，例如初始化操作。 示例： package main import ( \"fmt\" \"sync\" ) var once sync.Once func initialize() { fmt.Println(\"初始化操作\") } func worker(wg *sync.WaitGroup) { defer wg.Done() once.Do(initialize) fmt.Println(\"Worker 执行\") } func main() { var wg sync.WaitGroup for i := 0; i < 5; i++ { wg.Add(1) go worker(&wg) } wg.Wait() } 解释： once.Do(initialize) 确保 initialize() 只执行一次，无论多少个 goroutine 访问它。","s":"5.  sync.Once","u":"/docs/note/golang/concurrency/","h":"#5--synconce","p":524},{"i":545,"t":"对于简单的数值操作，可以使用 sync/atomic 提供的原子操作代替 sync.Mutex，提升性能。","s":"6.  atomic","u":"/docs/note/golang/concurrency/","h":"#6--atomic","p":524},{"i":547,"t":"package main import ( \"fmt\" \"sync\" \"sync/atomic\" ) var counter int64 func worker(wg *sync.WaitGroup) { defer wg.Done() atomic.AddInt64(&counter, 1) // 原子递增 } func main() { var wg sync.WaitGroup for i := 0; i < 10; i++ { wg.Add(1) go worker(&wg) } wg.Wait() fmt.Println(\"最终计数:\", counter) } 解释： atomic.AddInt64(&counter, 1) 确保 counter 在多个 goroutine 中安全递增，无需使用 sync.Mutex。","s":"示例：","u":"/docs/note/golang/concurrency/","h":"#示例","p":524},{"i":549,"t":"context.Context 适用于控制多个 goroutine 的生命周期，例如超时、取消任务等。","s":"7.  context","u":"/docs/note/golang/concurrency/","h":"#7--context","p":524},{"i":551,"t":"package main import ( \"context\" \"fmt\" \"time\" ) func worker(ctx context.Context) { for { select { case <-ctx.Done(): fmt.Println(\"Worker 任务超时，退出\") return default: fmt.Println(\"Worker 正在工作...\") time.Sleep(500 * time.Millisecond) } } } func main() { ctx, cancel := context.WithTimeout(context.Background(), 2*time.Second) defer cancel() go worker(ctx) time.Sleep(3 * time.Second) // 主线程等待 fmt.Println(\"主线程退出\") } 解释： context.WithTimeout 2 秒后会自动取消 ctx，通知 worker 退出。","s":"示例：","u":"/docs/note/golang/concurrency/","h":"#示例-1","p":524},{"i":553,"t":"方式 适用场景 Channel 安全的数据传递，避免竞态条件 WaitGroup 等待多个 goroutine 结束 Mutex 保护共享资源，防止竞态 Cond 事件触发，等待通知 Once 只执行一次（单例模式） Atomic 高效数值计算，无锁并发 Context 超时、取消任务 如果主要是 goroutine 之间的通信，使用 channel（更安全，避免锁竞争）。 如果是多个 goroutine 操作同一个变量，使用 mutex（更高效）。 如果要限制并发数，二者可以结合使用，如 channel 控制并发，mutex 保护数据。 select 适用于监听多个 channel 和超时控制。 推荐做法： 优先考虑 channel，符合 Go 语言风格。 如果性能瓶颈明显（高频数据访问），使用 sync.Mutex 进行优化。 如果有并发控制需求，可以结合 channel 和 mutex。 select 适用于监听多个 channel 和超时控制。","s":"总结","u":"/docs/note/golang/concurrency/","h":"#总结","p":524},{"i":555,"t":"runtime/debug 是 Go 标准库中用于调试和运行时信息收集的重要包，提供了多种实用功能。下面我将详细介绍其主要功能和用法：","s":"Golang runtime/debug 用法","u":"/docs/note/golang/debug","h":"","p":554},{"i":557,"t":"强制垃圾回收 debug.GC() // 显式触发一次垃圾回收 强制将未使用的内存返回给操作系统。 注意：Go 会自动做内存管理，这个函数一般用于调试或特殊情况。 debug.FreeOSMemory() // 将未使用的内存返回给操作系统 设置垃圾回收器的触发频率。 默认值是 100，表示内存分配增长 100% 就触发 GC。 设置为负数会关闭 GC。 // 设置GC目标百分比（默认100） // 值越大GC越不频繁，但内存使用更多 debug.SetGCPercent(200) // Go 1.19+ 设置内存软限制 debug.SetMemoryLimit(512 * 1024 * 1024) // 512MB 读取GC统计信息 var stats debug.GCStats debug.ReadGCStats(&stats) fmt.Printf(\"上次GC时间: %v\\n\", stats.LastGC) fmt.Printf(\"GC总次数: %d\\n\", stats.NumGC) fmt.Printf(\"GC总暂停时间: %v\\n\", stats.PauseTotal) fmt.Printf(\"最近GC暂停时间: %v\\n\", stats.Pause) 生成堆转储 func writeHeapDump(filename string) error { f, err := os.Create(filename) if err != nil { return err } defer f.Close() return debug.WriteHeapDump(f.Fd()) // 需要文件描述符 }","s":"1. 内存和垃圾回收相关操作","u":"/docs/note/golang/debug","h":"#1-内存和垃圾回收相关操作","p":554},{"i":559,"t":"获取当前调用栈 stack := debug.Stack() // 返回[]byte fmt.Printf(\"%s\\n\", stack) 打印当前的堆栈信息（stack trace），常用于调试 panic 或 goroutine 调度问题。 // 打印对应goroutine 堆栈 debug.PrintStack() 设置最大堆栈深度 设置每个 goroutine 的最大堆栈大小。一般调试 goroutine stack 溢出问题才用。 debug.SetMaxStack(64 * 1024 * 1024) // 64MB 示例： package main import ( \"fmt\" \"runtime/debug\" \"time\" ) func main() { fmt.Println(\"Start\") go func() { defer func() { fmt.Println(\"Recovered\") }() fmt.Println(\"Hello World\") debug.PrintStack() }() time.Sleep(1 * time.Second) debug.PrintStack() fmt.Println(\"End\") } 设置panic堆栈跟踪级别 // 可选值: \"none\", \"single\", \"all\", \"system\", \"crash\" debug.SetTraceback(\"all\") // 显示所有goroutine的堆栈","s":"2. 堆栈信息操作","u":"/docs/note/golang/debug","h":"#2-堆栈信息操作","p":554},{"i":561,"t":"读取模块构建信息 package main import ( \"fmt\" \"github.com/sirupsen/logrus\" \"runtime/debug\" ) func main() { logrus.Info(\"Hello World\") bi, ok := debug.ReadBuildInfo() if ok { fmt.Printf(\"Go Version: %s\\n\", bi.GoVersion) fmt.Printf(\"Main Module: %s@%s\\n\", bi.Main.Path, bi.Main.Version) for _, dep := range bi.Deps { fmt.Printf(\"Dependency: %s@%s\\n\", dep.Path, dep.Version) } for _, set := range bi.Settings { fmt.Printf(\"Settings: %s@%s\\n\", set.Key, set.Value) } } } 打印如下： INFO[0000] Hello World Go Version: go1.20.4 Main Module: demo@(devel) Dependency: github.com/sirupsen/logrus@v1.9.3 Dependency: golang.org/x/sys@v0.29.0 Settings: -buildmode@exe Settings: -compiler@gc Settings: CGO_ENABLED@1 Settings: CGO_CFLAGS@ Settings: CGO_CPPFLAGS@ Settings: CGO_CXXFLAGS@ Settings: CGO_LDFLAGS@ Settings: GOARCH@amd64 Settings: GOOS@linux Settings: GOAMD64@v1 Settings: vcs@git Settings: vcs.revision@47a4d73f30696cd2bf2ec09a16f6d3ba7ae563e6 Settings: vcs.time@2025-04-07T09:35:26Z Settings: vcs.modified@false $ git log commit 47a4d73f30696cd2bf2ec09a16f6d3ba7ae563e6 (HEAD -> master) Author: Your Name <you@example.com> Date: Mon Apr 7 17:35:26 2025 +0800 1","s":"3. 构建信息读取","u":"/docs/note/golang/debug","h":"#3-构建信息读取","p":554},{"i":564,"t":"func monitorMemory(threshold uint64) { for { var m runtime.MemStats runtime.ReadMemStats(&m) if m.Alloc > threshold { debug.FreeOSMemory() debug.GC() f, _ := os.Create(\"heapdump.out\") debug.WriteHeapDump(f.Fd()) f.Close() return } time.Sleep(5 * time.Second) } }","s":"4.1. 内存监控工具","u":"/docs/note/golang/debug","h":"#41-内存监控工具","p":554},{"i":566,"t":"func setupPanicRecovery() { defer func() { if r := recover(); r != nil { fmt.Fprintf(os.Stderr, \"Panic: %v\\n\", r) debug.PrintStack() // 保存堆栈到文件 stack := debug.Stack() os.WriteFile(\"panic.log\", stack, 0644) os.Exit(1) } }() // 应用主逻辑 runApplication() }","s":"4.2. 增强的panic处理","u":"/docs/note/golang/debug","h":"#42-增强的panic处理","p":554},{"i":568,"t":"func showVersion() { bi, ok := debug.ReadBuildInfo() if !ok { fmt.Println(\"无法获取构建信息\") return } fmt.Printf(\"应用: %s\\n版本: %s\\nGo版本: %s\\n\", bi.Main.Path, bi.Main.Version, bi.GoVersion) fmt.Println(\"\\n依赖项:\") for _, dep := range bi.Deps { fmt.Printf(\"- %s@%s\\n\", dep.Path, dep.Version) } }","s":"4.3. 构建信息展示","u":"/docs/note/golang/debug","h":"#43-构建信息展示","p":554},{"i":570,"t":"WriteHeapDump 功能在不同平台上表现可能不同 设置过高的 SetGCPercent 可能导致内存使用过多 SetMemoryLimit 仅在 Go 1.19+ 可用 生产环境中谨慎使用 FreeOSMemory，可能导致性能下降 runtime/debug 包是 Go 开发者工具箱中的重要组成部分，特别适用于： 内存泄漏调试 性能问题诊断 构建版本管理 生产环境问题排查 自定义错误处理机制 通过合理使用这些功能，可以显著提升 Go 应用程序的可调试性和可靠性。","s":"5. 注意事项","u":"/docs/note/golang/debug","h":"#5-注意事项","p":554},{"i":572,"t":"microkernel（微内核）架构的核心思想是 核心功能最小化，其他功能以插件或服务的形式运行在用户态，通过 进程间通信（IPC） 与内核交互。","s":"microkernel 设计1","u":"/docs/note/golang/design/microkernel/microkernel1","h":"","p":571},{"i":575,"t":"内核小、职责单一 内核只负责最基本的功能，比如线程调度、地址空间管理、IPC。 模块化、可扩展 文件系统、驱动程序等作为用户空间服务，易于替换和调试。 可靠性高 一个用户态服务崩溃不会影响整个系统。 通信开销大 模块间依赖消息传递，相比传统内核切换用户态和内核态的代价更大。","s":"1.1 特点","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#11-特点","p":571},{"i":577,"t":"Kernel（内核） 负责 服务注册、消息路由、生命周期管理。 Services（服务） 独立模块（如 LogService、StorageService），运行在用户态。 通信机制（IPC） 使用 Go 的 Channel 或 gRPC 进行通信。","s":"1.2 核心组件","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#12-核心组件","p":571},{"i":580,"t":"package kernel import ( \"context\" \"errors\" \"fmt\" \"sync\" ) // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string } // Kernel 微内核核心 type Kernel struct { // 注册的服务通道 services map[string]Service // 保护 services 的并发访问 mutex sync.RWMutex // 全局事件总线 eventCh chan Event } // Event 定义内核事件（用于服务间通信） type Event struct { From string Type string Content string } // NewKernel 创建微内核实例 func NewKernel() *Kernel { return &Kernel{ services: make(map[string]Service), eventCh: make(chan Event, 100), } } // RegisterService 注册服务 func (k *Kernel) RegisterService(s Service) error { k.mutex.Lock() defer k.mutex.Unlock() name := s.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = s return nil } // StartAll 启动所有服务 func (k *Kernel) StartAll() error { k.mutex.RLock() defer k.mutex.RUnlock() for _, s := range k.services { if err := s.Start(); err != nil { return err } } return nil } // StopAll 停止所有服务 func (k *Kernel) StopAll() error { k.mutex.RLock() defer k.mutex.RUnlock() var err error for _, s := range k.services { if e := s.Stop(); e != nil { err = e } } return err } // SendEvent 发送事件（模拟 IPC） func (k *Kernel) SendEvent(evt Event) { k.eventCh <- evt } // EventLoop 事件循环（处理服务间通信） func (k *Kernel) EventLoop(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: %s - %s\\n\", evt.From, evt.Type, evt.Content) } } }","s":"2.1 定义 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#21-定义-kernel核心","p":571},{"i":582,"t":"package service import ( \"fmt\" \"microkernel/kernel\" ) // LogService 日志服务 type LogService struct { name string kernel *kernel.Kernel logCh chan string stopCh chan struct{} } func NewLogService(name string, kernel *kernel.Kernel) *LogService { return &LogService{ name: name, kernel: kernel, logCh: make(chan string, 100), stopCh: make(chan struct{}), } } func (l *LogService) Start() error { fmt.Printf(\"[%s] starting...\\n\", l.name) go l.run() return nil } func (l *LogService) Stop() error { fmt.Printf(\"[%s] stopping...\\n\", l.name) close(l.stopCh) return nil } func (l *LogService) Name() string { return l.name } func (l *LogService) run() { for { select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 l.kernel.SendEvent(kernel.Event{ From: l.name, Type: \"log\", Content: log, }) } } } func (l *LogService) Log(msg string) { l.logCh <- msg }","s":"2.2 实现示例服务（LogService）","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#22-实现示例服务logservice","p":571},{"i":584,"t":"package main import ( \"context\" \"microkernel/kernel\" \"microkernel/service\" \"time\" ) func main() { // 1. 创建微内核 kernel := kernel.NewKernel() // 2. 注册服务 logSvc := service.NewLogService(\"logger\", kernel) if err := kernel.RegisterService(logSvc); err != nil { panic(err) } // 3. 启动所有服务 if err := kernel.StartAll(); err != nil { panic(err) } // 4. 启动事件循环 ctx, cancel := context.WithCancel(context.Background()) defer cancel() go kernel.EventLoop(ctx) // 5. 测试日志服务 logSvc.Log(\"Hello, Microkernel!\") time.Sleep(1 * time.Second) // 6. 停止所有服务 if err := kernel.StopAll(); err != nil { panic(err) } }","s":"2.3 主程序（运行微内核 + 服务）","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#23-主程序运行微内核--服务","p":571},{"i":586,"t":"[logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] stopping...","s":"2.4 运行结果","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#24-运行结果","p":571},{"i":588,"t":"使用 gRPC 替代 Channel（实现跨进程通信）。 动态加载服务（如插件化架构）。 增加服务发现机制（如 Consul/Etcd）。 支持更复杂的事件路由（如基于 Topic 的 Pub/Sub）。","s":"3. 扩展方向","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#3-扩展方向","p":571},{"i":590,"t":"微内核的核心：Kernel 只管理 Service 的生命周期和通信。 服务独立：每个 Service 运行在自己的 Goroutine 中，互不干扰。 通信方式： 简单场景：Channel（如示例）。 复杂场景：gRPC、NATS、WebSocket 等。 查看完整代码","s":"4. 总结","u":"/docs/note/golang/design/microkernel/microkernel1","h":"#4-总结","p":571},{"i":592,"t":"microkernel 设计1 目前只支持服务发送消息，内核接受消息。 在本章节，我会增加内核发送消息到服务","s":"microkernel 设计2","u":"/docs/note/golang/design/microkernel/microkernel2","h":"","p":591},{"i":594,"t":"内核发送消息到服务","s":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#1-目标","p":591},{"i":597,"t":"服务增加消息处理方法 // kernel/kernel.go type Service interface { Start() error Stop() error Name() string // 增加消息处理方法 Handle(msg string) string } 事件增加发送地址 // kernel/kernel.go // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string } 内核发送事件到服务 // kernel/kernel.go // HandleEvent 处理事件（模拟服务间通信） func (k *Kernel) HandleEvent(evt Event) (msg string) { k.mutex.RLock() defer k.mutex.RUnlock() if svc, ok := k.services[evt.To]; ok { return svc.Handle(evt.Content) } return \"service not found\" }","s":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#21-kernel核心","p":591},{"i":599,"t":"增加Handle方法实现 // service/log.go // service 增加Handle接口实现 func (l *LogService) Handle(msg string) string { fmt.Printf(\"[%s] LOG handle kernel event: %s\\n\", l.name, msg) return fmt.Sprintf(\"[%s] LOG Handle: %s\\n\", l.name, msg) }","s":"2.2 LogService","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#22-logservice","p":591},{"i":601,"t":"kernel发送消息到service // main.go // 6. microKernel 发送事件到指定服务 microKernel.HandleEvent(kernel.Event{ From: \"microKernel\", To: \"logger\", Type: \"log\", Content: \"Hello, Log!\", }) time.Sleep(1 * time.Millisecond)","s":"2.3 主程序（运行微内核 + 服务）","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#23-主程序运行微内核--服务","p":591},{"i":603,"t":"[logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... 查看完整代码","s":"2.4 运行结果","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#24-运行结果","p":591},{"i":605,"t":"HandleEvent 修改为 Send SendEvent 修改为 Push LoopEvent 修改为Listen mutex修改为 mu 查看完整代码","s":"2.5 优化函数和变量命名","u":"/docs/note/golang/design/microkernel/microkernel2","h":"#25-优化函数和变量命名","p":591},{"i":609,"t":"服务 能读取 Kernel 的返回信息 实现方法参考链接： gitee weidongkl.github.io","s":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel3","h":"#1-目标","p":607},{"i":611,"t":"可以为每个 Service 提供一个专属的响应通道（channel），内核通过这个通道将处理结果或反馈信息“推送”回去。 每次发送消息附带一个 ReplyCh。 内核在收到消息后通过该通道写回响应。 Service 读取 ReplyCh 获取反馈。","s":"2. 代码改动","u":"/docs/note/golang/design/microkernel/microkernel3","h":"#2-代码改动","p":607},{"i":613,"t":"事件增加读取返回的channel // kernel/kernel.go // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string // 增加响应通道 ReplyCh chan string } listen 增加返回值得写入 // kernel/kernel.go func (k *Kernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: %s - %s\\n\", evt.From, evt.Type, evt.Content) // 增加返回的写入 if evt.ReplyCh != nil { evt.ReplyCh <- fmt.Sprintf(\"ack: %s\", evt.Content) } } } }","s":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel3","h":"#21-kernel核心","p":607},{"i":615,"t":"服务增加返回的读取 func (l *LogService) run() { for { select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 replyCh := make(chan string, 1) l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", Content: log, ReplyCh: replyCh, }) // 等待内核回应 reply := <-replyCh fmt.Printf(\"[%s] got reply from kernel: %s\\n\", l.Name(), reply) } } }// service/log.go // service 增加Handle接口实现 func (l *LogService) Handle(msg string) string { fmt.Printf(\"[%s] LOG handle kernel event: %s\\n\", l.name, msg) return fmt.Sprintf(\"[%s] LOG Handle: %s\\n\", l.name, msg) }","s":"2.2 LogService","u":"/docs/note/golang/design/microkernel/microkernel3","h":"#22-logservice","p":607},{"i":617,"t":"Registered: logger [logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] got reply from kernel: ack: Hello, Microkernel! [Kernel] Send Event to logger: Hello, Log! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... 查看完整代码","s":"2.3 运行结果","u":"/docs/note/golang/design/microkernel/microkernel3","h":"#23-运行结果","p":607},{"i":619,"t":"在编程和系统设计中，Future-Proof 机制指的是通过合理的架构设计和技术选择，使代码或系统能够适应未来的需求变化、技术演进和规模扩展，而无需大规模重构或重写。其核心目标是降低长期维护成本，提高可扩展性。","s":"Future-Proof 机制","u":"/docs/note/golang/design/future_proof","h":"","p":618},{"i":621,"t":"以下是实现 Future-Proof 代码的关键设计思想：","s":"1. Future-Proof 机制的关键原则","u":"/docs/note/golang/design/future_proof","h":"","p":618},{"i":623,"t":"目标：模块间通过清晰的接口交互，而非直接依赖具体实现。使用接口（Go 的 interface）而非具体类型，依赖注入而非硬编码。 优点： 业务逻辑与具体实现解耦 易于扩展新的实现方式 便于单元测试（可以mock Notifier） 设计点： 面向接口编程：依赖抽象而非具体实现 依赖注入：通过构造函数或方法参数注入依赖 单一职责：每个组件只关注自己的核心功能 最小知识原则：组件只与直接相关的组件交互 松耦合示例： 定义接口 // Notifier 通知接口 type Notifier interface { Send(message string) error } 接口实现 // EmailNotifier 邮件通知实现 type EmailNotifier struct{} func (e EmailNotifier) Send(message string) error { fmt.Printf(\"发送邮件通知: %s\\n\", message) return nil } // SMSNotifier 短信通知实现 type SMSNotifier struct{} func (s SMSNotifier) Send(message string) error { fmt.Printf(\"发送短信通知: %s\\n\", message) return nil } 业务逻辑调用接口 // NotificationService 通知服务 type NotificationService struct { notifier Notifier } func NewNotificationService(notifier Notifier) *NotificationService { return &NotificationService{notifier: notifier} } func (s *NotificationService) ProcessOrder(orderID string) { // 处理订单逻辑... message := fmt.Sprintf(\"订单 %s 已处理\", orderID) _ = s.notifier.Send(message) } 主函数调用 func main() { // 可以轻松替换通知实现 emailNotifier := EmailNotifier{} service := NewNotificationService(emailNotifier) service.ProcessOrder(\"12345\") // 切换为短信通知不需要修改业务逻辑 smsNotifier := SMSNotifier{} service = NewNotificationService(smsNotifier) service.ProcessOrder(\"67890\") } 紧耦合示例： 使用具体类型 // EmailSender 邮件发送器 type EmailSender struct{} func (e EmailSender) SendEmail(message string) error { fmt.Printf(\"发送邮件: %s\\n\", message) return nil } 业务类型依赖具体类 // OrderProcessor 订单处理器 type OrderProcessor struct { emailSender EmailSender } func (p *OrderProcessor) ProcessOrder(orderID string) { // 处理订单逻辑... message := fmt.Sprintf(\"订单 %s 已处理\", orderID) _ = p.emailSender.SendEmail(message) } 主函数调用 func main() { processor := OrderProcessor{emailSender: EmailSender{}} processor.ProcessOrder(\"12345\") // 如果要改为短信通知，必须修改OrderProcessor结构体和所有相关代码 }","s":"1.1.  松耦合（Loose Coupling）","u":"/docs/note/golang/design/future_proof","h":"#11--松耦合loose-coupling","p":618},{"i":625,"t":"目标：新增功能时无需修改现有代码。 示例：通过组合而非继承扩展行为（Go 的 embedding 或中间件模式）。 type LoggingAggregator struct { *EventAggregator // 嵌入原有功能 logger Logger } // 新增日志能力而不修改原始聚合器","s":"1.2. 可扩展性（Extensibility）","u":"/docs/note/golang/design/future_proof","h":"#12-可扩展性extensibility","p":618},{"i":627,"t":"目标：将易变的参数（如超时时间、规则路径）外置为配置。 示例：通过环境变量或配置文件驱动行为： timeout := os.Getenv(\"AGGREGATOR_TIMEOUT\")","s":"1.3. 配置化而非硬编码","u":"/docs/note/golang/design/future_proof","h":"#13-配置化而非硬编码","p":618},{"i":629,"t":"目标：数据交互格式（如 JSON、Protobuf）支持向后兼容。 示例：使用 Protocol Buffers 的字段编号机制，避免破坏旧版解析。","s":"1.4. 协议与数据格式的兼容性","u":"/docs/note/golang/design/future_proof","h":"#14-协议与数据格式的兼容性","p":618},{"i":631,"t":"目标：并发模型能随规模调整（如 Goroutine 池 vs 固定 Worker）。 示例：在之前的聚合器代码中，通过 Channel 通信可轻松扩展为多 Worker： for i := 0; i < runtime.NumCPU(); i++ { go aggregator.processRequests() }","s":"1.5. 并发模型的可适应性","u":"/docs/note/golang/design/future_proof","h":"#15-并发模型的可适应性","p":618},{"i":633,"t":"目标：内置日志、指标、链路追踪等，便于未来诊断问题。 示例：在 rulesUpdateRequest 中添加请求 ID 和计时： type rulesUpdateRequest struct { RequestID string // 用于追踪 StartTime time.Time // ...其他字段 }","s":"1.6. 可观测性（Observability）","u":"/docs/note/golang/design/future_proof","h":"#16-可观测性observability","p":618},{"i":635,"t":"目标：处理边界条件（如 nil Channel、超时）。 示例：在 Channel 通信中添加超时： func (a *EventAggregator) UpdateRules(rules []string) error { req := &rulesUpdateRequest{..., response: make(chan error, 1)} select { case a.updateChannel <- req: return <-req.response case <-time.After(1 * time.Second): return errors.New(\"update timeout\") } }","s":"1.7. 防御性编程","u":"/docs/note/golang/design/future_proof","h":"#17-防御性编程","p":618},{"i":637,"t":"package main import ( \"fmt\" \"time\" ) // EventAggregator manages a set of rules and processes updates through channels type EventAggregator struct { rules []string updateChannel chan *rulesUpdateRequest shutdownChan chan struct{} } // rulesUpdateRequest represents a request to update the rules type rulesUpdateRequest struct { newRules []string response chan error } // NewEventAggregator creates and starts a new EventAggregator func NewEventAggregator() *EventAggregator { agg := &EventAggregator{ rules: []string{}, updateChannel: make(chan *rulesUpdateRequest), shutdownChan: make(chan struct{}), } go agg.processRequests() return agg } // UpdateRules safely updates the rules by sending a request through the channel func (a *EventAggregator) UpdateRules(newRules []string) error { req := &rulesUpdateRequest{ newRules: newRules, response: make(chan error, 1), // Buffered to avoid blocking } a.updateChannel <- req return <-req.response } // Shutdown gracefully stops the aggregator func (a *EventAggregator) Shutdown() { close(a.shutdownChan) } // processRequests handles incoming requests in a thread-safe manner func (a *EventAggregator) processRequests() { for { select { case req := <-a.updateChannel: a.rules = req.newRules fmt.Println(\"Updated rules:\", a.rules) req.response <- nil case <-a.shutdownChan: fmt.Println(\"Shutting down aggregator\") return } } } func main() { // Create and start the aggregator aggregator := NewEventAggregator() defer aggregator.Shutdown() // Simulate some updates go func() { time.Sleep(500 * time.Millisecond) if err := aggregator.UpdateRules([]string{\"a\", \"b\", \"c\"}); err != nil { fmt.Println(\"Error updating rules:\", err) } }() go func() { time.Sleep(1 * time.Second) if err := aggregator.UpdateRules([]string{\"d\", \"e\", \"f\"}); err != nil { fmt.Println(\"Error updating rules:\", err) } }() // Give time for the updates to process time.Sleep(2 * time.Second) } 状态隔离：所有规则更新通过 Channel 串行化，避免竞态条件。 易于扩展：可新增 QueryRules() 方法而不影响现有逻辑。 并发友好：Channel 模型天然支持协程扩展。 关闭控制：通过 shutdownChan 实现优雅终止。 根据原则，执行部分优化 package main import ( \"context\" \"errors\" \"fmt\" \"sync\" \"time\" ) // RuleSet represents a collection of rules with metadata type RuleSet struct { Rules []string Version int // Track changes over time Modified time.Time // Last update timestamp } // SetRulesRequest encapsulates a rules update operation type SetRulesRequest struct { NewRules []string Response chan error RequestID string // For tracing Timestamp time.Time // For auditing } // AggregatorOptions configures aggregator behavior type AggregatorOptions struct { MaxPendingRequests int // Buffer size for requests RequestTimeout time.Duration // Timeout for rule updates EnableValidation bool // Future: validate rules before applying } // Aggregator manages rule sets with thread-safe operations type Aggregator struct { currentRuleSet RuleSet options AggregatorOptions requestChan chan *SetRulesRequest queryChan chan chan RuleSet // New channel for safe rule queries commandChan chan func() // Generic command channel for future extensions stopChan chan struct{} shutdownOnce sync.Once stopWg sync.WaitGroup } // NewAggregator creates a configured aggregator instance func NewAggregator(opts AggregatorOptions) *Aggregator { if opts.MaxPendingRequests <= 0 { opts.MaxPendingRequests = 10 } if opts.RequestTimeout <= 0 { opts.RequestTimeout = 2 * time.Second } return &Aggregator{ currentRuleSet: RuleSet{Version: 1}, options: opts, requestChan: make(chan *SetRulesRequest, opts.MaxPendingRequests), queryChan: make(chan chan RuleSet), commandChan: make(chan func()), stopChan: make(chan struct{}), } } // Run starts the aggregator's processing loop func (a *Aggregator) Run() { a.stopWg.Add(1) defer a.stopWg.Done() for { select { case req := <-a.requestChan: a.handleSetRules(req) case respChan := <-a.queryChan: a.handleGetRules(respChan) case cmd := <-a.commandChan: cmd() // Execute arbitrary commands case <-a.stopChan: return } } } func (a *Aggregator) handleSetRules(req *SetRulesRequest) { defer close(req.Response) // Future: could add validation here if a.options.EnableValidation { // Validate rules before applying } a.currentRuleSet = RuleSet{ Rules: req.NewRules, Version: a.currentRuleSet.Version + 1, Modified: time.Now(), } fmt.Printf(\"Updated rules (v%d): %v\\n\", a.currentRuleSet.Version, a.currentRuleSet.Rules) req.Response <- nil } func (a *Aggregator) handleGetRules(respChan chan RuleSet) { respChan <- a.currentRuleSet close(respChan) } // SetRules updates the rule set with timeout support func (a *Aggregator) SetRules(ctx context.Context, rules []string) error { req := &SetRulesRequest{ NewRules: rules, Response: make(chan error), RequestID: fmt.Sprintf(\"req-%d\", time.Now().UnixNano()), Timestamp: time.Now(), } select { case a.requestChan <- req: select { case err := <-req.Response: return err case <-ctx.Done(): return ctx.Err() } case <-a.stopChan: return errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return ctx.Err() } } // GetRules safely retrieves the current rule set func (a *Aggregator) GetRules(ctx context.Context) (RuleSet, error) { respChan := make(chan RuleSet) select { case a.queryChan <- respChan: select { case rules := <-respChan: return rules, nil case <-ctx.Done(): return RuleSet{}, ctx.Err() } case <-a.stopChan: return RuleSet{}, errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return RuleSet{}, ctx.Err() } } // Stop gracefully shuts down the aggregator func (a *Aggregator) Stop() { a.shutdownOnce.Do(func() { close(a.stopChan) a.stopWg.Wait() close(a.requestChan) close(a.queryChan) close(a.commandChan) fmt.Println(\"Aggregator stopped gracefully\") }) } // ExecuteCommand provides extension point for future operations func (a *Aggregator) ExecuteCommand(ctx context.Context, cmd func()) error { select { case a.commandChan <- cmd: return nil case <-a.stopChan: return errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return ctx.Err() } } func main() { // Configurable options opts := AggregatorOptions{ MaxPendingRequests: 20, RequestTimeout: 3 * time.Second, EnableValidation: false, // Could be enabled in future } aggregator := NewAggregator(opts) go aggregator.Run() // Example usage with context ctx, cancel := context.WithTimeout(context.Background(), 2*time.Second) defer cancel() // Set rules err := aggregator.SetRules(ctx, []string{\"a\", \"b\", \"c\"}) if err != nil { fmt.Println(\"Error setting rules:\", err) } // Get rules rules, err := aggregator.GetRules(ctx) if err != nil { fmt.Println(\"Error getting rules:\", err) } else { fmt.Printf(\"Current rules (v%d): %v\\n\", rules.Version, rules.Rules) } // Execute custom command aggregator.ExecuteCommand(ctx, func() { fmt.Println(\"Executing custom command\") }) aggregator.Stop() } Enhanced Rule Metadata: Added RuleSet struct with versioning and timestamps Supports audit trails and change tracking Configurable Options: AggregatorOptions allows tuning without code changes Supports future features like validation Multiple Communication Channels: Separate channels for commands (commandChan) and queries (queryChan) Prevents mixing of operation types Context Support: All operations respect context for timeouts/cancellation Better integration with modern Go applications Extension Points: ExecuteCommand method for adding future functionality Generic command channel pattern Improved Shutdown: sync.Once ensures safe single shutdown sync.WaitGroup for proper goroutine cleanup Thread-Safe Queries: Added safe GetRules method via channel No direct access to internal state Request Tracing: Added request IDs for debugging Timestamps for all operations 使用命令模式优化 package main import ( \"context\" \"errors\" \"fmt\" \"sync\" \"time\" ) // Command defines the interface all commands must implement type Command interface { Execute(ctx context.Context) error } // CommandHandler processes commands type CommandHandler struct { commands chan Command stopChan chan struct{} wg sync.WaitGroup } // NewCommandHandler creates a new handler with specified queue size func NewCommandHandler(queueSize int) *CommandHandler { return &CommandHandler{ commands: make(chan Command, queueSize), stopChan: make(chan struct{}), } } // Start begins processing commands func (h *CommandHandler) Start() { h.wg.Add(1) go func() { defer h.wg.Done() for { select { case cmd := <-h.commands: ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second) err := cmd.Execute(ctx) cancel() if err != nil { fmt.Printf(\"Command execution failed: %v\\n\", err) } case <-h.stopChan: return } } }() } // Submit sends a command for execution func (h *CommandHandler) Submit(ctx context.Context, cmd Command) error { select { case h.commands <- cmd: return nil case <-h.stopChan: return errors.New(\"handler is shutting down\") case <-ctx.Done(): return ctx.Err() } } // Stop gracefully shuts down the handler func (h *CommandHandler) Stop() { close(h.stopChan) h.wg.Wait() close(h.commands) } // --- Concrete Commands --- // SetRulesCommand implements Command for rule updates type SetRulesCommand struct { Aggregator *Aggregator NewRules []string } func (c *SetRulesCommand) Execute(ctx context.Context) error { return c.Aggregator.SetRules(ctx, c.NewRules) } // GetRulesCommand implements Command for rule queries type GetRulesCommand struct { Aggregator *Aggregator ResultChan chan<- RuleSet } func (c *GetRulesCommand) Execute(ctx context.Context) error { rules, err := c.Aggregator.GetRules(ctx) if err != nil { return err } c.ResultChan <- rules return nil } // --- Aggregator Implementation --- type RuleSet struct { Rules []string Version int Modified time.Time } type Aggregator struct { mu sync.Mutex currentRule RuleSet } func (a *Aggregator) SetRules(ctx context.Context, rules []string) error { a.mu.Lock() defer a.mu.Unlock() select { case <-ctx.Done(): return ctx.Err() default: a.currentRule = RuleSet{ Rules: rules, Version: a.currentRule.Version + 1, Modified: time.Now(), } fmt.Printf(\"Rules updated to version %d\\n\", a.currentRule.Version) return nil } } func (a *Aggregator) GetRules(ctx context.Context) (RuleSet, error) { a.mu.Lock() defer a.mu.Unlock() select { case <-ctx.Done(): return RuleSet{}, ctx.Err() default: return a.currentRule, nil } } // --- Usage Example --- func main() { // Create components handler := NewCommandHandler(10) aggregator := &Aggregator{ currentRule: RuleSet{Version: 0}, } // Start command processor handler.Start() defer handler.Stop() // Submit commands ctx := context.Background() // Set rules command setCmd := &SetRulesCommand{ Aggregator: aggregator, NewRules: []string{\"a\", \"b\", \"c\"}, } handler.Submit(ctx, setCmd) // Get rules command resultChan := make(chan RuleSet, 1) getCmd := &GetRulesCommand{ Aggregator: aggregator, ResultChan: resultChan, } handler.Submit(ctx, getCmd) // Wait for result select { case rules := <-resultChan: fmt.Printf(\"Current rules: %v\\n\", rules.Rules) case <-time.After(1 * time.Second): fmt.Println(\"Timeout waiting for rules\") } } The Command Handler pattern is a behavioral design pattern that encapsulates requests as objects, allowing for parameterization of clients with different requests, queuing of requests, and support for undoable operations. Here's how to implement it in your aggregator: Core Components Command Interface: Defines the execution contract Concrete Commands: Encapsulate specific actions and parameters Invoker: Receives and executes commands Receiver: Knows how to perform the operations Key Features Command Interface: type Command interface { Execute(ctx context.Context) error } Concrete Commands: Each command encapsulates all parameters needed for execution Commands can be serialized/deserialized for distributed systems Command Handler: Manages a queue of commands Processes commands sequentially in a goroutine Supports graceful shutdown Benefits: Decoupling: Separates command creation from execution Extensibility: Easy to add new command types Composability: Commands can be combined into macros Undo/Redo: Can be extended to support command history Advanced Extensions Command Middleware: type CommandMiddleware func(Command) Command func LoggingMiddleware(next Command) Command { return &loggedCommand{next} } Transaction Support: type TransactionCommand struct { Commands []Command } func (t *TransactionCommand) Execute(ctx context.Context) error { // Execute all or nothing } Priority Commands: type PriorityCommand struct { Command Priority int } // Use priority queue instead of channel","s":"2. 聚合器示例","u":"/docs/note/golang/design/future_proof","h":"#2-聚合器示例","p":618},{"i":639,"t":"// 硬编码实现，未来难以修改 var globalRules []string func UpdateRules(rules []string) { globalRules = rules // 直接修改全局状态，线程不安全 }","s":"3. 反模式：非 Future-Proof 的设计","u":"/docs/note/golang/design/future_proof","h":"#3-反模式非-future-proof-的设计","p":618},{"i":641,"t":"Future-Proof 不是过度设计，而是通过遵循 SOLID 原则和 并发安全实践，让代码具备： 适应变化的能力 平滑演进的路径 诊断问题的手段 在 Go 中，Channel 和 Interface 是构建 Future-Proof 系统的核心工具。","s":"4. 总结","u":"/docs/note/golang/design/future_proof","h":"#4-总结","p":618},{"i":644,"t":"服务间通信（通过内核转发） 标准化消息协议结构 支持状态码、错误、数据负载。 异步+超时机制 服务发出请求时可以设置超时时间，避免长期阻塞。","s":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel4","h":"#1-目标","p":642},{"i":647,"t":"定义标准消息格式 Reply 包含code/message/Data Event ReplyCh 使用标准格式的Reply // kernel/kernel.go // Reply 定义内核事件回复 type Reply struct { Code int // 0 表示成功，非0表示错误码 Message string // 描述信息 Data string // 可选负载 } // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string // 增加响应通道,使用 chan Reply，提高回复的灵活性 ReplyCh chan Reply // 可选：超时时间 TimeoutMs int } 服务改造 handle 从处理字符串修改为处理事件，返回标准Reply // kernel/kernel.go // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string Handle(Event) Reply } Listen 路由和事件总线设计 // Listen 事件循环（处理服务间通信） // 监听事件，处理服务间通信 // 重命名 EventLoop 为 Listen func (k *Kernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: - %s\\n\", evt.From, evt.Content) // 发送给 Kernel 自己 if evt.To == \"\" { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 0, Message: \"Handled by kernel\", Data: \"ok\"} } continue } // 路由到目标服务 k.mu.RLock() svc, ok := k.services[evt.To] k.mu.RUnlock() if !ok { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 404, Message: \"Service not found\", Data: \"\"} } continue } // 调用目标服务处理，并返回 go func(s Service, m Event) { result := s.Handle(m) if m.ReplyCh != nil { select { case m.ReplyCh <- result: case <-time.After(time.Duration(m.TimeoutMs) * time.Millisecond): m.ReplyCh <- Reply{Code: 408, Message: \"timeout\", Data: \"\"} } } }(svc, evt) } } }","s":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel4","h":"#21-kernel核心","p":642},{"i":649,"t":"根据count随机分发（Push 指定了发送位置） func (l *LogService) run() { var count = 1 for { count++ select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 replyCh := make(chan kernel.Reply, 1) if count%2 == 0 { l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", Content: log, ReplyCh: replyCh, TimeoutMs: 1000, }) } else { l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", To: \"echo\", Content: log, ReplyCh: replyCh, TimeoutMs: 1000, }) } // 等待内核回应 reply := <-replyCh fmt.Printf(\"[%s] got reply from kernel: %s\\n\", l.Name(), reply.Message) } } }","s":"2.2 LogService","u":"/docs/note/golang/design/microkernel/microkernel4","h":"#22-logservice","p":642},{"i":651,"t":"func (e *EchoService) Handle(evt kernel.Event) kernel.Reply { return kernel.Reply{Code: 0, Message: \"echo service handled\", Data: fmt.Sprintf(\"from %s: %s\", evt.From, evt.Content)} }","s":"2.3 增加另一个类似的EchoService","u":"/docs/note/golang/design/microkernel/microkernel4","h":"#23-增加另一个类似的echoservice","p":642},{"i":653,"t":"Registered: logger # 注册另一个服务 Registered: echo [logger] starting... [echo] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [Kernel] Event from logger: - Hello, Echo! # 转发到echoService 处理 [logger] got reply from kernel: echo service handled [Kernel] Send Event to logger: Hello, Log! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... [echo] stopping... 查看完整代码","s":"2.4 运行结果","u":"/docs/note/golang/design/microkernel/microkernel4","h":"#24-运行结果","p":642},{"i":656,"t":"服务状态管理 单独服务管理 优化项目结构","s":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel5","h":"#1-目标","p":654},{"i":659,"t":"定义服务状态和服务元数据 // kernel/service.go // ServiceState 定义微内核服务状态 type ServiceState int // 使用iota枚举类型，自动计算枚举值 const ( Created ServiceState = iota Running Stopped ) // ServiceState.String() func (s ServiceState) String() string { // 状态转换成字符串 // 其中[...]表示让编译器自动计算数组的长度 return [...]string{\"Created\", \"Running\", \"Stopped\"}[s] } // serviceMeta 定义微内核服务元数据 type serviceMeta struct { svc Service state ServiceState } 单个服务管理 // kernel/kernel.go func (k *MicroKernel) StartService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Running { return errors.New(\"service already started\") } if err := meta.svc.Start(); err != nil { return err } meta.state = Running fmt.Println(\"Started:\", meta.svc.Name()) return nil } func (k *MicroKernel) StopService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Stopped { return errors.New(\"service already stopped\") } if err := meta.svc.Stop(); err != nil { return err } meta.state = Stopped fmt.Println(\"Stopped:\", meta.svc.Name()) return nil } Listen 增加服务状态判断，未运行的服务，不再处理消息 // Listen 事件循环（处理服务间通信） // 监听事件，处理服务间通信 // 重命名 EventLoop 为 Listen func (k *MicroKernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[MicroKernel] Event from %s: - %s\\n\", evt.From, evt.Content) // 发送给 MicroKernel 自己 if evt.To == \"\" { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 0, Message: \"Handled by kernel\", Data: \"ok\"} } continue } // 路由到目标服务 k.mu.RLock() meta, ok := k.services[evt.To] k.mu.RUnlock() if !ok || meta.state != Running { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 404, Message: \"service unavailable\", Data: \"\"} } continue } // 调用目标服务处理，并返回 go func(s Service, m Event) { result := s.Handle(m) if m.ReplyCh != nil { select { case m.ReplyCh <- result: case <-time.After(time.Duration(m.TimeoutMs) * time.Millisecond): m.ReplyCh <- Reply{Code: 408, Message: \"timeout\", Data: \"\"} } } }(meta.svc, evt) } } }","s":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel5","h":"#21-kernel核心","p":654},{"i":661,"t":"Registered: logger Registered: echo Starting all services... [logger] starting... [echo] starting... [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } [logger] stopping... [echo] stopping... 查看完整代码","s":"2.2 运行结果","u":"/docs/note/golang/design/microkernel/microkernel5","h":"#22-运行结果","p":654},{"i":664,"t":"支持服务依赖关系管理","s":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel6","h":"#1-目标","p":662},{"i":667,"t":"定义服务依赖关系。依赖的是服务名称 // kernel/service.go // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string Handle(Event) Reply // Dependencies 返回依赖服务名称 Dependencies() []string // 新增接口 } // serviceMeta 定义微内核服务元数据 type serviceMeta struct { svc Service state ServiceState // 存储依赖，也可以不使用，直接使用svc.Dependencies deps []string } 注册Register增加deps // kernel/kernel.go // Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() name := svc.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil } 启动服务和停止服务增加拓扑排序 // kernel/kernel.go func (k *MicroKernel) topoSort() ([]string, error) { k.mu.RLock() defer k.mu.RUnlock() visited := make(map[string]bool) temp := make(map[string]bool) result := []string{} var visit func(string) error visit = func(name string) error { if temp[name] { return fmt.Errorf(\"circular dependency at %s\", name) } if visited[name] { return nil } temp[name] = true meta, ok := k.services[name] if !ok { return fmt.Errorf(\"service %s not registered\", name) } for _, dep := range meta.deps { if err := visit(dep); err != nil { return err } } visited[name] = true temp[name] = false result = append(result, name) return nil } for name := range k.services { if !visited[name] { if err := visit(name); err != nil { return nil, err } } } return result, nil } func (k *MicroKernel) StartAll() error { sorted, err := k.topoSort() // ... for _, name := range sorted { if err := k.StartService(name); err != nil { // ... } } return nil }","s":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel6","h":"#21-kernel核心","p":662},{"i":669,"t":"服务增加依赖方法实现 func (l *LogService) Dependencies() []string { return []string{\"echo\"} }","s":"2.2 服务","u":"/docs/note/golang/design/microkernel/microkernel6","h":"#22-服务","p":662},{"i":671,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } Stopping all services... [logger] stopping... Stopped: logger [echo] stopping... Stopped: echo 查看完整代码","s":"2.3 运行结果","u":"/docs/note/golang/design/microkernel/microkernel6","h":"#23-运行结果","p":662},{"i":674,"t":"服务热更新增加状态迁移 支持服务加密状态迁移","s":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel8","h":"#1-目标","p":672},{"i":677,"t":"新增状态接口 // 旧服务可选实现：导出状态 type Exportable interface { ExportState() any } // 新服务可选实现：导入状态 type Importable interface { ImportState(state any) error } 加密接口 type Crypter interface { Encrypt(data any) ([]byte, error) Decrypt(cipher []byte) (any, error) } 加密实现 使用aes type AESCrypter struct { key []byte // 16/24/32 字节 } func NewAESCrypter(key []byte) *AESCrypter { return &AESCrypter{key: key} } func (a *AESCrypter) Encrypt(data any) ([]byte, error) { plaintext, err := json.Marshal(data) if err != nil { return nil, err } block, err := aes.NewCipher(a.key) if err != nil { return nil, err } aesgcm, err := cipher.NewGCM(block) if err != nil { return nil, err } nonce := make([]byte, aesgcm.NonceSize()) if _, err := io.ReadFull(rand.Reader, nonce); err != nil { return nil, err } ciphertext := aesgcm.Seal(nonce, nonce, plaintext, nil) return ciphertext, nil } func (a *AESCrypter) Decrypt(ciphertext []byte) (any, error) { block, err := aes.NewCipher(a.key) if err != nil { return nil, err } aesgcm, err := cipher.NewGCM(block) if err != nil { return nil, err } nonceSize := aesgcm.NonceSize() if len(ciphertext) < nonceSize { return nil, fmt.Errorf(\"ciphertext too short\") } nonce := ciphertext[:nonceSize] cipherData := ciphertext[nonceSize:] plaintext, err := aesgcm.Open(nil, nonce, cipherData, nil) if err != nil { return nil, err } var result any if err := json.Unmarshal(plaintext, &result); err != nil { return nil, err } return result, nil } 替换服务 //func (k *MicroKernel) ReplaceService(newSvc Service) error { // k.mu.Lock() // defer k.mu.Unlock() // // name := newSvc.Name() // oldMeta, exists := k.services[name] // var state any // // if exists { // if exporter, ok := oldMeta.svc.(Exportable); ok { // state = exporter.ExportState() // } // oldMeta.svc.Stop() // fmt.Printf(\"Stopped old version of %s\\n\", name) // } // // // 状态迁移 // if importer, ok := newSvc.(Importable); ok && state != nil { // if err := importer.ImportState(state); err != nil { // return fmt.Errorf(\"state import failed: %w\\n\", err) // } // fmt.Printf(\"State migrated for service %s\\n\", name) // } // // // 替换服务元信息 // k.services[name] = &serviceMeta{ // svc: newSvc, // deps: newSvc.Dependencies(), // state: Created, // } // // // 重启服务 // if exists && oldMeta.state == Running { // newSvc.Start() // k.services[name].state = Running // fmt.Printf(\"Started new version of %s\", name) // } else { // fmt.Printf(\"Registered new version of %s (not started)\", name) // } // // return nil //} func (k *MicroKernel) ReplaceServiceEncrypted(newSvc Service, crypter Crypter) error { k.mu.Lock() defer k.mu.Unlock() name := newSvc.Name() oldMeta, exists := k.services[name] var encryptedState []byte if exists { if exporter, ok := oldMeta.svc.(Exportable); ok { rawState := exporter.ExportState() cipher, err := crypter.Encrypt(rawState) if err != nil { return fmt.Errorf(\"state encryption failed: %w\", err) } encryptedState = cipher } oldMeta.svc.Stop() fmt.Printf(\"Stopped old version of %s\\n\", name) } // 状态导入（解密） if importer, ok := newSvc.(Importable); ok && encryptedState != nil { decrypted, err := crypter.Decrypt(encryptedState) if err != nil { return fmt.Errorf(\"state decryption failed: %w\", err) } if err := importer.ImportState(decrypted); err != nil { return fmt.Errorf(\"state import failed: %w\", err) } fmt.Printf(\"Encrypted state migrated for service %s\\n\", name) } k.services[name] = &serviceMeta{ svc: newSvc, deps: newSvc.Dependencies(), state: Created, } if exists && oldMeta.state == Running { newSvc.Start() k.services[name].state = Running fmt.Printf(\"Started new version of %s\\n\", name) } else { fmt.Printf(\"Registered new version of %s (not started)\\n\", name) } return nil }","s":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel8","h":"#21-kernel核心","p":672},{"i":679,"t":"实现状态接口 func (e *EchoServiceV2) ImportState(state any) error { if val, ok := state.(int); ok { e.echoCount = val return nil } return fmt.Errorf(\"invalid state type\") } func (e *EchoService) ExportState() any { return e.echoCount }","s":"2.2 echo服务","u":"/docs/note/golang/design/microkernel/microkernel8","h":"#22-echo服务","p":672},{"i":681,"t":"热替换服务 // 7. 热替换服务 // 热更新为 V2 aesKey := []byte(\"1234567890123456\") // 16 字节对称密钥 microKernel.ReplaceServiceEncrypted(service.NewEchoServiceV2(microKernel), microkernel.NewAESCrypter(aesKey))","s":"2.3 main","u":"/docs/note/golang/design/microkernel/microkernel8","h":"#23-main","p":672},{"i":683,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to echo: Hello, Log! {0 echo service handled from microKernel: Hello, Log!} [echo] stopping... Stopped old version of echo State migrated for service echo [2025-04-24 21:28:38.032] [INFO] [echo] [echov2] starting... Started new version of echo[MicroKernel] Send Event to echo: Hello, Log! [echo] count is 10 {0 echo v2 service handled from microKernel: Hello, Log!} [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... Stopped: echo [log] stopping 查看完整代码","s":"2.4 运行结果","u":"/docs/note/golang/design/microkernel/microkernel8","h":"#24-运行结果","p":672},{"i":686,"t":"支持服务热更新 所有服务和内核通过统一接口打印日志 时间戳、服务名、级别（INFO/WARN/ERROR） 动态控制日志级别 输出到 stdout、文件、远程服务等 xxx","s":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel7","h":"#1-目标","p":684},{"i":689,"t":"新增ReplaceService 用于热替换服务 // kernel/kernel.go func (k *MicroKernel) ReplaceService(newSvc Service) error { k.mu.Lock() defer k.mu.Unlock() name := newSvc.Name() oldMeta, exists := k.services[name] if exists && oldMeta.state == Running { // 停止旧服务 oldMeta.svc.Stop() fmt.Printf(\"Stopped old version of %s\\n\", name) } // 替换服务实现，重建元信息 k.services[name] = &serviceMeta{ svc: newSvc, deps: newSvc.Dependencies(), state: Created, } // 重启服务（如旧服务在运行） if exists && oldMeta.state == Running { newSvc.Start() k.services[name].state = Running fmt.Printf(\"Started new version of %s\\n\", name) } else { fmt.Printf(\"Registered new version of %s (not started)\\n\", name) } return nil } 注册Register增加deps // kernel/kernel.go // Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() name := svc.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil } 启动服务和停止服务增加拓扑排序 // kernel/kernel.go func (k *MicroKernel) topoSort() ([]string, error) { k.mu.RLock() defer k.mu.RUnlock() visited := make(map[string]bool) temp := make(map[string]bool) result := []string{} var visit func(string) error visit = func(name string) error { if temp[name] { return fmt.Errorf(\"circular dependency at %s\", name) } if visited[name] { return nil } temp[name] = true meta, ok := k.services[name] if !ok { return fmt.Errorf(\"service %s not registered\", name) } for _, dep := range meta.deps { if err := visit(dep); err != nil { return err } } visited[name] = true temp[name] = false result = append(result, name) return nil } for name := range k.services { if !visited[name] { if err := visit(name); err != nil { return nil, err } } } return result, nil } func (k *MicroKernel) StartAll() error { sorted, err := k.topoSort() // ... for _, name := range sorted { if err := k.StartService(name); err != nil { // ... } } return nil }","s":"2.1 Kernel（核心）","u":"/docs/note/golang/design/microkernel/microkernel7","h":"#21-kernel核心","p":684},{"i":691,"t":"日志服务设计 type LogLevel int const ( INFO LogLevel = iota WARN ERROR ) type Logger struct { mu sync.Mutex level LogLevel service string out io.Writer } 方法实现 func NewLogger(service string, level LogLevel, out io.Writer) *Logger { return &Logger{ service: service, level: level, out: out, } } func (l *Logger) logf(level LogLevel, format string, args ...any) { if level < l.level { return } l.mu.Lock() defer l.mu.Unlock() levelStr := [...]string{\"INFO\", \"WARN\", \"ERROR\"}[level] msg := fmt.Sprintf(format, args...) ts := time.Now().Format(\"2006-01-02 15:04:05.000\") fmt.Fprintf(l.out, \"[%s] [%s] [%s] %s\\n\", ts, levelStr, l.service, msg) } func (l *Logger) Infof(format string, args ...any) { l.logf(INFO, format, args...) } func (l *Logger) Warnf(format string, args ...any) { l.logf(WARN, format, args...) } func (l *Logger) Errorf(format string, args ...any) { l.logf(ERROR, format, args...) } 服务中使用 type EchoServiceV3 struct { log *Logger } func NewEchoServiceV3() *EchoServiceV3 { return &EchoServiceV3{ log: NewLogger(\"echo\", INFO, os.Stdout), } } //... func (e *EchoServiceV3) Start() { e.log.Infof(\"started\") }","s":"2.2 日志服务","u":"/docs/note/golang/design/microkernel/microkernel7","h":"#22-日志服务","p":684},{"i":693,"t":"热替换服务 // 7. 热替换服务 // 热更新为 V2 _ = microKernel.ReplaceService(service.NewEchoServiceV2(microKernel)) // 测试 V2 行为 replyCh2 := make(chan microkernel.Reply, 1) microKernel.Push(microkernel.Event{ From: \"main\", Type: \"log\", Content: \"log\", ReplyCh: replyCh2, TimeoutMs: 1000, }) fmt.Println(\"v2 reply:\", <-replyCh2)","s":"2.3 main","u":"/docs/note/golang/design/microkernel/microkernel7","h":"#23-main","p":684},{"i":695,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } [echo] stopping... Stopped old version of echo [2025-04-23 21:46:11.935] [INFO] [echo] [echov2] starting... Started new version of echo [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... [log] stopping Stopped: echo Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } Stopping all services... [logger] stopping... Stopped: logger [echo] stopping... Stopped: echo 查看完整代码","s":"2.4 运行结果","u":"/docs/note/golang/design/microkernel/microkernel7","h":"#24-运行结果","p":684},{"i":697,"t":"服务状态持久化","s":"microkernel 设计9","u":"/docs/note/golang/design/microkernel/microkernel9","h":"","p":696},{"i":699,"t":"服务状态在 Stop() 或热替换时 导出 + 加密 + 写入磁盘 注册服务时若检测到磁盘中有状态，则 读取 + 解密 + 导入 每个服务有自己的状态文件（支持多服务）","s":"1. 目标","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#1-目标","p":696},{"i":702,"t":"存储目录：/var/lib/microkernel/state/（示例） 文件名：<service_name>.state 文件内容：已加密的字节流","s":"2.1 存储文件设计","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#21-存储文件设计","p":696},{"i":704,"t":"type StateStore struct { dir string crypter Crypter } func NewStateStore(dir string, crypter Crypter) *StateStore { return &StateStore{dir: dir, crypter: crypter} } func (s *StateStore) path(name string) string { return filepath.Join(s.dir, name+\".state\") } func (s *StateStore) Save(name string, state any) error { encrypted, err := s.crypter.Encrypt(state) if err != nil { return err } if err := os.MkdirAll(s.dir, 0755); err != nil { return err } return os.WriteFile(s.path(name), encrypted, 0600) } func (s *StateStore) Load(name string) (any, error) { data, err := os.ReadFile(s.path(name)) if err != nil { return nil, err } return s.crypter.Decrypt(data) } func (s *StateStore) Exists(name string) bool { _, err := os.Stat(s.path(name)) return err == nil }","s":"2.2 状态管理模块：StateStore","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#22-状态管理模块statestore","p":696},{"i":707,"t":"type MicroKernel struct { ... stateStore *StateStore } func NewMicroKernelWithState(store *StateStore) *MicroKernel { return &MicroKernel{ services: make(map[string]*serviceMeta), stateStore: store, logger: NewLogger(\"kernel\", INFO, os.Stdout), } }","s":"3.1 kernel 初始化集成StateStore","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#31-kernel-初始化集成statestore","p":696},{"i":709,"t":"// Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() // name 可以放在锁前面，优化性能 name := svc.Name() // 增加状态导入 // 如果使用的接口，这边就使用的接口方法 if k.stateStore != nil && k.stateStore.Exists(name) { // 查看服务是否支持状态导入 // 状态导入不要求每个服务必须实现 // 如果没有实现，就直接忽略 if importer, ok := svc.(Importable); ok { raw, err := k.stateStore.Load(name) if err != nil { return fmt.Errorf(\"state load failed: %w\\n\", err) } err = importer.ImportState(raw) if err != nil { return fmt.Errorf(\"state import failed: %w\\n\", err) } fmt.Printf(\"State migrated for service %s\\n\", name) } } if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil }","s":"3.2 注册服务时尝试自动加载状态","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#32-注册服务时尝试自动加载状态","p":696},{"i":711,"t":"func (k *MicroKernel) StopService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Stopped { return errors.New(\"service already stopped\") } // 增加状态导出判断 if exporter, ok := meta.svc.(Exportable); ok && k.stateStore != nil { if err := k.stateStore.Save(name, exporter.ExportState()); err == nil { fmt.Printf(\"State persisted for %s\\n\", name) } } if err := meta.svc.Stop(); err != nil { return err } meta.state = Stopped fmt.Println(\"Stopped:\", meta.svc.Name()) return nil }","s":"3.3 停止服务时，保存状态","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#33-停止服务时保存状态","p":696},{"i":713,"t":"func (k *MicroKernel) Listen(ctx context.Context) { // 间隔可以加在kernel的struct中，也可以使用方法来获取 ticker := time.NewTicker(2 * time.Second) for { select { case <-ctx.Done(): return case <-ticker.C: fmt.Println(\"Timed writing state\") if k.stateStore != nil { for name, meta := range k.services { if meta.state == Running { if exporter, ok := meta.svc.(Exportable); ok { if err := k.stateStore.Save(name, exporter.ExportState()); err == nil { fmt.Printf(\"State persisted for %s\\n\", name) } } } } }","s":"3.4 定时持久化状态","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#34-定时持久化状态","p":696},{"i":715,"t":"crypter := microkernel.NewAESCrypter([]byte(\"1234567890123456\")) store := microkernel.NewStateStore(\"./state\", crypter) // 1. 创建微内核 microKernel := microkernel.NewMicroKernel(store) // 增加加密存储","s":"4. main","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#4-main","p":696},{"i":717,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to echo: Hello, Log! {0 echo service handled from microKernel: Hello, Log!} [echo] stopping... Stopped old version of echo Encrypted state migrated for service echo [2025-04-26 19:47:00.801] [INFO] [echo] [echov2] starting... Started new version of echo [MicroKernel] Send Event to echo: Hello, Log! [echo] count is 10 {0 echo v2 service handled from microKernel: Hello, Log!} [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... Stopped: echo 查看完整代码","s":"4.1 运行结果","u":"/docs/note/golang/design/microkernel/microkernel9","h":"#41-运行结果","p":696},{"i":720,"t":"依赖倒置原则(Dependency Inversion Principle, DIP) 是SOLID原则中的第五个原则，由Robert C. Martin提出。其核心思想是： 高层模块不应该依赖低层模块，两者都应该依赖抽象。抽象不应该依赖细节，细节应该依赖抽象。 在Go语言中，这一原则主要通过接口(interface)和依赖注入来实现。","s":"1. 概述","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#1-概述","p":718},{"i":722,"t":"依赖抽象：通过接口而非具体实现编程 控制反转(IoC)：将依赖的创建和使用分离 依赖注入(DI)：通过构造函数、方法或属性注入依赖","s":"2. 核心概念","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#2-核心概念","p":718},{"i":725,"t":"// 高层模块直接依赖低层模块 type MySQLDatabase struct {} func (m *MySQLDatabase) Save(data string) error { fmt.Println(\"保存数据到MySQL:\", data) return nil } type ReportGenerator struct { db *MySQLDatabase // 直接依赖具体实现 } func (r *ReportGenerator) Generate() error { return r.db.Save(\"报告数据\") } 问题：ReportGenerator直接依赖MySQLDatabase，难以切换其他数据库","s":"3.1 违反DIP的例子","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#31-违反dip的例子","p":718},{"i":727,"t":"// 定义抽象接口 type Database interface { Save(data string) error } // 低层模块实现接口 type MySQLDatabase struct {} func (m *MySQLDatabase) Save(data string) error { fmt.Println(\"保存数据到MySQL:\", data) return nil } type PostgreSQLDatabase struct {} func (p *PostgreSQLDatabase) Save(data string) error { fmt.Println(\"保存数据到PostgreSQL:\", data) return nil } // 高层模块依赖抽象 type ReportGenerator struct { db Database // 依赖接口而非具体实现 } func NewReportGenerator(db Database) *ReportGenerator { return &ReportGenerator{db: db} } func (r *ReportGenerator) Generate() error { return r.db.Save(\"报告数据\") }","s":"3.2 遵循DIP的改进方案","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#32-遵循dip的改进方案","p":718},{"i":730,"t":"构造结构体包含Logger对象 type Logger interface { Log(message string) } type ConsoleLogger struct{} func (c *ConsoleLogger) Log(message string) { fmt.Println(message) } type Service struct { logger Logger } func NewService(logger Logger) *Service { return &Service{logger: logger} } func (s *Service) DoWork() { s.logger.Log(\"工作开始\") // 业务逻辑... }","s":"4.1 构造函数注入","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#41-构造函数注入","p":718},{"i":732,"t":"type MailSender interface { Send(to, subject, body string) error } type UserService struct{} func (u *UserService) Register(email string, sender MailSender) error { // 注册逻辑... return sender.Send(email, \"欢迎\", \"感谢注册\") }","s":"4.2 方法注入","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#42-方法注入","p":718},{"i":734,"t":"// 在调用方定义接口（Go特色） package user type Database interface { Save(user User) error } type Service struct { db Database } // 实现可以在任何地方 type MySQLDB struct{} func (m *MySQLDB) Save(user User) error { ... }","s":"4.3 接口定义在调用方","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#43-接口定义在调用方","p":718},{"i":737,"t":"// storage.go type UserRepository interface { GetByID(id int) (*User, error) Save(user *User) error } // service.go type UserService struct { repo UserRepository } func NewUserService(repo UserRepository) *UserService { return &UserService{repo: repo} } // 可以轻松切换实现：MySQL, PostgreSQL, MongoDB等","s":"5.1 数据库访问","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#51-数据库访问","p":718},{"i":739,"t":"type Handler interface { Handle(w http.ResponseWriter, r *http.Request) error } type Router struct { handlers map[string]Handler } func (r *Router) Register(path string, handler Handler) { r.handlers[path] = handler } // 具体处理器实现 type UserHandler struct { service *UserService } func (h *UserHandler) Handle(w http.ResponseWriter, r *http.Request) error { // 处理请求... }","s":"5.2 HTTP服务","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#52-http服务","p":718},{"i":741,"t":"虽然Go不强制使用DI框架，但有一些流行选择： Google Wire：编译时依赖注入 // wire.go func InitializeUserService() *UserService { wire.Build(NewUserService, NewMySQLRepository) return &UserService{} } Dig：运行时依赖注入 container := dig.New() container.Provide(NewMySQLRepository) container.Provide(NewUserService) FX：基于Dig的框架 fx.New( fx.Provide(NewMySQLRepository), fx.Provide(NewUserService), fx.Invoke(func(s *UserService) { // 使用服务... }), )","s":"6. 依赖注入框架(可选)","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#6-依赖注入框架可选","p":718},{"i":743,"t":"紧耦合：组件间高度依赖，难以修改 难以测试：无法轻松替换真实依赖进行测试 扩展困难：添加新功能需要修改多处代码 复用性差：组件难以在不同上下文中使用","s":"7. 违反DIP的后果","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#7-违反dip的后果","p":718},{"i":745,"t":"DIP的核心是依赖抽象而非具体实现 在Go中主要通过接口和依赖注入实现 高层模块定义抽象接口，低层模块实现这些接口 使用构造函数注入或方法注入提供依赖 考虑使用DI框架管理复杂依赖关系 遵循DIP能提高代码的可测试性、可扩展性和可维护性 好的架构应该像插件系统 - 高层模块定义插槽，低层模块实现插件。","s":"8. 总结","u":"/docs/note/golang/design/oop_pinciple/dip","h":"#8-总结","p":718},{"i":748,"t":"使用channel 在 goroutine 间进行通信和同步操作 package main import ( \"fmt\" \"time\" ) // SetRulesRequest 表示设置规则的请求结构 type SetRulesRequest struct { NewRules []string Response chan error // 用于同步返回是否成功 } // Aggregator 用于管理规则并支持并发设置 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} } // SetRules 是向 aggregator 发送新规则的接口 func (a *Aggregator) SetRules(r []string) error { req := &SetRulesRequest{ NewRules: r, Response: make(chan error), } a.setRulesChan <- req return <-req.Response // 等待响应结束 } // Run 启动 aggregator 的工作协程 func (a *Aggregator) Run() { for { select { case req := <-a.setRulesChan: a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) req.Response <- nil // 成功响应 case <-a.stopChan: return } } } // Stop 关闭 aggregator 的后台协程 func (a *Aggregator) Stop() { close(a.stopChan) } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), } go aggregator.Run() // 模拟使用 time.Sleep(500 * time.Millisecond) aggregator.SetRules([]string{\"a\", \"b\", \"c\"}) aggregator.SetRules([]string{\"d\", \"e\", \"f\"}) // 停止后台协程 aggregator.Stop() } 🔍 说明重点： 通信模型：调用者通过 SetRules 向 Aggregator 的 channel 发送数据，然后通过一个 Response channel 同步等待执行结果。 响应式设计：Aggregator 处理请求后通过 channel 回复，避免竞态。 易扩展性：你可以将更多操作（如查询、追加等）封装成不同的 request 结构体，并通过不同 channel 或类型区分处理。","s":"1. channel 交互","u":"/docs/note/golang/design/multi_goroutine","h":"#1-channel-交互","p":746},{"i":751,"t":"发送端（ch <- v）向已关闭 channel 发送数据： 会 panic！ 接收端（<-chan）读取已关闭 channel： 不会 panic， 立即返回零值 第二个返回值判断是否关闭。即：v, ok := <-ch，如果 ok == false，说明 channel 已关闭。 不判断。即: v := <-ch，立即返回零值，无法判断 channel 是否关闭。 即：v, ok := <-ch，如果 ok == false，说明 channel 已关闭。 举例 package main import ( \"log\" \"time\" ) func main() { //ch := make(chan int, 2) ch := make(chan int) go func() { ch <- 20 time.Sleep(1 * time.Second) defer close(ch) }() // 只接收数据，不检查通道状态 rules := <-ch log.Println(\"Rules:\", rules) // 输出：14:47:31 Rules: 20 rules = <-ch log.Println(\"Rules:\", rules) // 输出：14:47:32 Rules: 0 rules = <-ch log.Println(\"Rules:\", rules) // 输出：14:47:32 Rules: 0 // 读取时检查通道是否仍然开放 rules, open := <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:39 Rules: 20 Open: true rules, open = <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:40 Rules: 0 Open: false rules, open = <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:40 Rules: 0 Open: false }","s":"2.1. 理解 channel 行为","u":"/docs/note/golang/design/multi_goroutine","h":"#21-理解-channel-行为","p":746},{"i":753,"t":"✅ 特性亮点： 安全关闭 goroutine： setRulesChan 和 stopChan 都支持关闭，防止死锁或 panic。 带 ok 判断防止接收已关闭的 channel 导致数据为 nil。 封装清晰： Run() 执行逻辑清晰，Stop() 方法负责安全退出和资源清理。 package main import ( \"fmt\" \"time\" ) // 请求结构体，设置规则并通过 Response 返回结果 type SetRulesRequest struct { NewRules []string Response chan error } // 聚合器结构 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} doneChan chan struct{} // 通知主线程已退出 } // Run 启动 Aggregator 的工作协程 func (a *Aggregator) Run() { defer close(a.doneChan) // 通知主线程：后台协程已退出 for { select { case req, ok := <-a.setRulesChan: if !ok { fmt.Println(\"setRulesChan closed, exiting Run()\") return } a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) // 响应调用者 req.Response <- nil case <-a.stopChan: fmt.Println(\"Received stop signal, exiting Run()\") return } } } // SetRules 发送规则请求 func (a *Aggregator) SetRules(r []string) error { req := &SetRulesRequest{ NewRules: r, Response: make(chan error), } select { case a.setRulesChan <- req: return <-req.Response case <-a.stopChan: return fmt.Errorf(\"aggregator is shutting down\") } } // Stop 关闭 aggregator，确保 goroutine 优雅退出 func (a *Aggregator) Stop() { close(a.stopChan) // 通知退出 close(a.setRulesChan) // 防止阻塞在 <-setRulesChan <-a.doneChan // 等待后台处理完成 fmt.Println(\"Aggregator stopped gracefully\") } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), doneChan: make(chan struct{}), } go aggregator.Run() time.Sleep(500 * time.Millisecond) aggregator.SetRules([]string{\"a\", \"b\", \"c\"}) aggregator.SetRules([]string{\"x\", \"y\", \"z\"}) aggregator.Stop() }","s":"2.2. 使用判断channel 优化示例","u":"/docs/note/golang/design/multi_goroutine","h":"#22-使用判断channel-优化示例","p":746},{"i":755,"t":"🧠 为啥用 context.Context？ 防止调用者被永久阻塞：例如 aggregator goroutine 迟迟不响应。 可设置 timeout 或 cancel，适合服务端编程模型。 可组合多种取消方式（定时取消 + 主动取消）。 ✅ 增强功能： SetRules 支持超时 / 取消（避免卡死等待响应）。 context.Context 控制响应等待过程。 依然保留 graceful shutdown 支持（Stop()）。 package main import ( \"context\" \"fmt\" \"time\" ) // 请求结构体，设置规则并通过 Response 返回结果 type SetRulesRequest struct { NewRules []string Response chan error } // 聚合器结构体 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} doneChan chan struct{} } // Run 启动 aggregator 的工作协程 func (a *Aggregator) Run() { defer close(a.doneChan) for { select { case req, ok := <-a.setRulesChan: if !ok { fmt.Println(\"setRulesChan closed, exiting Run()\") return } a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) req.Response <- nil case <-a.stopChan: fmt.Println(\"Received stop signal, exiting Run()\") return } } } // SetRulesCtx 支持 context 超时 / 取消控制 func (a *Aggregator) SetRulesCtx(ctx context.Context, rules []string) error { req := &SetRulesRequest{ NewRules: rules, Response: make(chan error, 1), // 非阻塞回写 } // 模拟耗时操作 time.Sleep(2 * time.Millisecond) select { case a.setRulesChan <- req: // 等待响应 or context 超时 select { case err := <-req.Response: return err case <-ctx.Done(): return fmt.Errorf(\"set rules timeout or cancelled: %w\", ctx.Err()) } case <-a.stopChan: return fmt.Errorf(\"aggregator shutting down\") case <-ctx.Done(): return fmt.Errorf(\"send timeout or cancelled: %w\", ctx.Err()) } } // Stop 优雅关闭 func (a *Aggregator) Stop() { close(a.stopChan) close(a.setRulesChan) <-a.doneChan fmt.Println(\"Aggregator stopped gracefully\") } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), doneChan: make(chan struct{}), } go aggregator.Run() // 模拟正常调用 ctx := context.Background() aggregator.SetRulesCtx(ctx, []string{\"a\", \"b\", \"c\"}) // 模拟带 timeout 的调用（1ms 会超时） ctxTimeout, cancel := context.WithTimeout(context.Background(), 1*time.Millisecond) defer cancel() err := aggregator.SetRulesCtx(ctxTimeout, []string{\"should\", \"fail\", \"fast\"}) if err != nil { fmt.Println(\"Timeout err:\", err) } // 正常调用 ctx2, cancel2 := context.WithTimeout(context.Background(), 2*time.Second) defer cancel2() aggregator.SetRulesCtx(ctx2, []string{\"x\", \"y\", \"z\"}) aggregator.Stop() }","s":"3. 支持 context.Context","u":"/docs/note/golang/design/multi_goroutine","h":"#3-支持-contextcontext","p":746},{"i":757,"t":"CommandHandler 模式是命令模式（Command Pattern）的一种实现方式，常用于将请求（命令）与处理逻辑解耦，从而提高系统的灵活性和可扩展性。它通过将命令封装为对象，并由专门的 CommandHandler 负责执行这些命令，使得系统能够更轻松地管理命令的生命周期、支持撤销/重做操作、实现事务管理或异步处理。 核心概念 Command（命令） 定义一个接口或抽象类，声明执行命令的方法（如 execute()）。 具体命令类实现该接口，封装请求的具体逻辑。 CommandHandler（命令处理器） 负责接收命令对象并调用其 execute() 方法。 可以扩展为支持命令的调度、排队、事务管理或异步执行。 Invoker（调用者） 触发命令的对象，通常持有对 CommandHandler 的引用。 Receiver（接收者） 执行命令实际逻辑的对象，命令对象通过依赖注入或组合的方式与接收者交互。 🎯 目标： 支持不同类型请求的统一处理通道 类似“命令模式”：将操作封装为一个结构体 可扩展、可测试、context 支持、graceful shutdown ✅ 架构设计： +--------------------+ | CommandHandler | |--------------------| | chan Command |<----------- Send() | goroutine: dispatch| (通用异步接口) +--------------------+ | V +--------------------+ | Command (接口) |<-- 多种请求实现： | Execute(context) | - SetRulesCommand +--------------------+ - GetRulesCommand - AppendRulesCommand ✨ 通用实现（含 SetRules 和 GetRules）： package main import ( \"context\" \"errors\" \"fmt\" ) // Command 是所有请求的接口 type Command interface { Execute(ctx context.Context, h *Handler) Done() <-chan struct{} Err() error } // Handler 管理状态和调度命令执行 type Handler struct { rules []string cmdChan chan Command stop chan struct{} done chan struct{} } // 基础命令结构 type baseCommand struct { err error done chan struct{} } func (c *baseCommand) Done() <-chan struct{} { return c.done } func (c *baseCommand) Err() error { return c.err } // SetRulesCommand 设置规则 type SetRulesCommand struct { baseCommand NewRules []string } func (c *SetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) h.rules = c.NewRules fmt.Println(\"SetRulesCommand executed:\", h.rules) } // GetRulesCommand 获取规则 type GetRulesCommand struct { baseCommand Result chan []string } func (c *GetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) c.Result <- h.rules close(c.Result) } func NewHandler() *Handler { return &Handler{ rules: []string{}, cmdChan: make(chan Command), stop: make(chan struct{}), done: make(chan struct{}), } } // Run 启动处理循环 func (h *Handler) Run() { defer close(h.done) for { select { case cmd := <-h.cmdChan: ctx := context.Background() // 可支持 ctx 控制 cmd.Execute(ctx, h) case <-h.stop: return } } } // Send 提交命令（带超时支持） func (h *Handler) Send(ctx context.Context, cmd Command) error { select { case h.cmdChan <- cmd: select { case <-cmd.Done(): return cmd.Err() case <-ctx.Done(): return ctx.Err() } case <-h.stop: return errors.New(\"handler is stopped\") case <-ctx.Done(): return ctx.Err() } } // Stop 优雅关闭 func (h *Handler) Stop() { close(h.stop) <-h.done } func main() { handler := NewHandler() go handler.Run() ctx := context.Background() setCmd := &SetRulesCommand{ baseCommand: baseCommand{done: make(chan struct{})}, NewRules: []string{\"a\", \"b\", \"c\"}, } handler.Send(ctx, setCmd) // 获取规则 getCmd := &GetRulesCommand{ baseCommand: baseCommand{done: make(chan struct{})}, Result: make(chan []string, 1), } handler.Send(ctx, getCmd) fmt.Println(\"Current rules:\", <-getCmd.Result) handler.Stop() } ✅ 泛型式响应的 ResultCommand[T] 设计 实现目标： 命令支持携带强类型返回值（例如：[]string、int、bool 等）； 支持 context 控制； 解耦命令发送与执行，类型安全 的异步响应； 易扩展、结构清晰。 package main import ( \"context\" \"errors\" \"fmt\" \"time\" ) // 通用 Command 接口 type Command interface { Execute(context.Context, *Handler) Done() <-chan struct{} Err() error } // Handler：命令处理器 type Handler struct { rules []string cmdChan chan Command stop chan struct{} done chan struct{} } func NewHandler() *Handler { return &Handler{ rules: []string{}, cmdChan: make(chan Command), stop: make(chan struct{}), done: make(chan struct{}), } } func (h *Handler) Run() { defer close(h.done) for { select { case cmd := <-h.cmdChan: cmd.Execute(context.Background(), h) case <-h.stop: return } } } func (h *Handler) Stop() { close(h.stop) <-h.done } // Send 支持泛型命令发送 func (h *Handler) Send(ctx context.Context, cmd Command) error { select { case h.cmdChan <- cmd: select { case <-cmd.Done(): return cmd.Err() case <-ctx.Done(): return ctx.Err() } case <-ctx.Done(): return ctx.Err() case <-h.stop: return errors.New(\"handler stopped\") } } // 泛型命令 ResultCommand[T] // -------------------------------- type ResultCommand[T any] struct { result T err error done chan struct{} resultC chan T } func NewResultCommand[T any]() *ResultCommand[T] { return &ResultCommand[T]{ done: make(chan struct{}), resultC: make(chan T, 1), // 非阻塞写入 } } func (c *ResultCommand[T]) Done() <-chan struct{} { return c.done } func (c *ResultCommand[T]) Err() error { return c.err } // Wait 等待结果 func (c *ResultCommand[T]) Wait(ctx context.Context) (T, error) { select { case <-ctx.Done(): var zero T return zero, ctx.Err() case res := <-c.resultC: return res, c.err } } // -------------------------------- // 示例命令：GetRulesCommand 返回 []string // -------------------------------- type GetRulesCommand struct { *ResultCommand[[]string] } func NewGetRulesCommand() *GetRulesCommand { return &GetRulesCommand{ ResultCommand: NewResultCommand[[]string](), } } func (c *GetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) c.result = h.rules c.resultC <- h.rules } // -------------------------------- // 示例命令：SetRulesCommand // -------------------------------- type SetRulesCommand struct { newRules []string done chan struct{} err error } func NewSetRulesCommand(rules []string) *SetRulesCommand { return &SetRulesCommand{ newRules: rules, done: make(chan struct{}), } } func (c *SetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) h.rules = c.newRules fmt.Println(\"Rules updated:\", h.rules) } func (c *SetRulesCommand) Done() <-chan struct{} { return c.done } func (c *SetRulesCommand) Err() error { return c.err } // 🧪 Main 演示：SetRules 和 GetRules 泛型返回 func main() { h := NewHandler() go h.Run() ctx := context.Background() // Set rules setCmd := NewSetRulesCommand([]string{\"x\", \"y\", \"z\"}) _ = h.Send(ctx, setCmd) // Get rules getCmd := NewGetRulesCommand() _ = h.Send(ctx, getCmd) rules, err := getCmd.Wait(ctx) if err != nil { fmt.Println(\"GetRules error:\", err) } else { fmt.Println(\"Got rules:\", rules) } // 超时测试 timeoutCtx, cancel := context.WithTimeout(ctx, 1*time.Millisecond) defer cancel() getCmd2 := NewGetRulesCommand() _ = h.Send(timeoutCtx, getCmd2) rules2, err := getCmd2.Wait(timeoutCtx) fmt.Println(\"With timeout:\", rules2, err) h.Stop() } 输出示例： Rules updated: [x y z] Got rules: [x y z] With timeout: [] context deadline exceeded 📦 可扩展示例命令 GetStatsCommand struct{ ResultCommand[map[string]int] } FlushToDiskCommand struct{ ResultCommand[bool] } LoadConfigCommand struct{ ResultCommand[Config] } AppendRulesCommand struct{ Rules []string }","s":"4. CommandHandler 模式","u":"/docs/note/golang/design/multi_goroutine","h":"#4-commandhandler-模式","p":746},{"i":760,"t":"里氏替换原则(Liskov Substitution Principle, LSP) 是SOLID原则中的第三个原则，由Barbara Liskov提出。其核心思想是： 如果S是T的子类型，那么程序中T类型的对象可以被替换为S类型的对象，而不会改变程序的任何期望属性。 在Go语言中，虽然没有传统意义上的继承，但通过**接口(interface)和嵌入(struct embedding)**同样需要遵循这一原则。","s":"1. 概述","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#1-概述","p":758},{"i":762,"t":"可替换性：子类型必须能够完全替代父类型 行为一致性：子类型不应改变父类型的预期行为 契约遵守：子类型必须遵守父类型的隐式契约","s":"2. 核心概念","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#2-核心概念","p":758},{"i":765,"t":"// 定义抽象接口 type Bird interface { Fly() string Sing() string } // 实现基类 type Sparrow struct{} func (s *Sparrow) Fly() string { return \"麻雀在飞翔\" } func (s *Sparrow) Sing() string { return \"麻雀在歌唱\" } // 实现子类 type Penguin struct{} func (p *Penguin) Fly() string { return \"企鹅不会飞\" // 违反LSP原则！ } func (p *Penguin) Sing() string { return \"企鹅在鸣叫\" } 问题分析：Penguin不能替换Bird，因为它改变了Fly()的预期行为","s":"3.1 通过接口实现LSP","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#31-通过接口实现lsp","p":758},{"i":767,"t":"// 更精确的接口定义 type Flyer interface { Fly() string } type Singer interface { Sing() string } // 会飞的鸟 type FlyingBird struct{} func (f *FlyingBird) Fly() string { return \"鸟儿在飞翔\" } // 麻雀 type Sparrow struct { FlyingBird } func (s *Sparrow) Sing() string { return \"麻雀在歌唱\" } // 企鹅 type Penguin struct{} func (p *Penguin) Sing() string { return \"企鹅在鸣叫\" }","s":"3.2 符合LSP的改进方案","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#32-符合lsp的改进方案","p":758},{"i":770,"t":"type PaymentProcessor interface { ProcessPayment(amount float64, currency string) error } // 基类实现 type BasicProcessor struct{} func (b *BasicProcessor) ProcessPayment(amount float64, currency string) error { if amount <= 0 { return errors.New(\"金额必须大于0\") } // 处理逻辑... } // 子类实现（违反LSP） type DiscountProcessor struct{} func (d *DiscountProcessor) ProcessPayment(amount float64, currency string) error { // 允许amount为0（削弱了前置条件） if amount < 0 { return errors.New(\"金额不能为负\") } // 处理逻辑... } 重构方案：保持前置条件不变或更强","s":"4.1 违反情况1：子类削弱前置条件","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#41-违反情况1子类削弱前置条件","p":758},{"i":772,"t":"type DataStorage interface { Save(data []byte) (string, error) // 返回存储ID } // 基类实现 type FileStorage struct{} func (f *FileStorage) Save(data []byte) (string, error) { id := generateID() // 保存到文件... return id, nil // 可能返回空ID } // 子类实现（违反LSP） type GuaranteedStorage struct{} func (g *GuaranteedStorage) Save(data []byte) (string, error) { if len(data) == 0 { return \"\", errors.New(\"空数据不允许\") // 强化了后置条件 } id := generateID() // 保存到文件... return \"GID-\" + id, nil // 改变了ID格式 } 重构方案：保持后置条件不变或更弱","s":"4.2 违反情况2：子类强化后置条件","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#42-违反情况2子类强化后置条件","p":758},{"i":775,"t":"golang 没有面相对象的继承用法 type Animal struct { name string } func (a *Animal) Eat() string { return a.name + \"在吃东西\" } // 正确方式：组合Animal type Dog struct { Animal } func (d *Dog) Bark() string { return \"汪汪汪\" } // 使用 dog := &Dog{Animal{name: \"阿黄\"}} fmt.Println(dog.Eat()) // 阿黄在吃东西 fmt.Println(dog.Bark()) // 汪汪汪","s":"5.1 使用组合代替继承","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#51-使用组合代替继承","p":758},{"i":777,"t":"// 大接口 type BigInterface interface { Method1() Method2() Method3() } // 客户端只需要Method1 type Client struct { dep interface { Method1() } }","s":"5.2 接口隔离加强","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#52-接口隔离加强","p":758},{"i":779,"t":"缓存系统：本地缓存、Redis缓存、Memcached缓存可互相替换 存储系统：文件存储、数据库存储、云存储可互相替换 支付网关：支付宝、微信支付、银联支付可互相替换 日志系统：文件日志、控制台日志、网络日志可互相替换","s":"6. LSP的实际应用场景","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#6-lsp的实际应用场景","p":758},{"i":781,"t":"LSP的核心是可替换性和行为一致性 在Go中主要通过接口设计和组合来实现 子类型必须： 不加强前置条件 不减弱后置条件 保持不变量 不抛出新的异常 违反LSP会导致难以发现的运行时错误 \"is-a\"关系不仅看语法，更要看行为语义 好的子类型扩展应该像插件一样工作 - 可以无缝替换基类而不破坏现有功能。","s":"7. 总结","u":"/docs/note/golang/design/oop_pinciple/lsp","h":"#7-总结","p":758},{"i":784,"t":"接口隔离原则(Interface Segregation Principle, ISP) 是SOLID原则中的第四个原则，由Robert C. Martin提出。其核心思想是： 客户端不应该被迫依赖它们不使用的接口。换句话说，多个特定的小接口比一个通用的大接口更好。 在Go语言中，这一原则尤为重要，因为Go的接口是隐式实现的，且鼓励小而专注的设计。","s":"1. 概述","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#1-概述","p":782},{"i":786,"t":"小而专注：接口应该只包含客户端真正需要的方法 避免\"胖接口\"：不要让接口承担过多职责 按需实现：客户端应该只依赖它们实际使用的接口","s":"2. 核心概念","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#2-核心概念","p":782},{"i":789,"t":"// 一个\"胖接口\"包含太多方法 type Animal interface { Eat() Sleep() Fly() // 不是所有动物都会飞 Swim() // 不是所有动物都会游泳 Bark() // 不是所有动物都会叫 } // 实现这个接口很困难 type Dog struct{} func (d Dog) Eat() { fmt.Println(\"Dog eating\") } func (d Dog) Sleep() { fmt.Println(\"Dog sleeping\") } func (d Dog) Bark() { fmt.Println(\"Dog barking\") } func (d Dog) Fly() {} // 狗不会飞，但被迫实现 func (d Dog) Swim() {} // 有些狗会游泳，有些不会 问题：Dog被迫实现它不需要的方法(Fly)","s":"3.1 违反ISP的例子","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#31-违反isp的例子","p":782},{"i":791,"t":"// 拆分为多个小接口 type Eater interface { Eat() } type Sleeper interface { Sleep() } type Flyer interface { Fly() } type Swimmer interface { Swim() } type Barker interface { Bark() } // Dog只需要实现相关接口 type Dog struct{} func (d Dog) Eat() { fmt.Println(\"Dog eating\") } func (d Dog) Sleep() { fmt.Println(\"Dog sleeping\") } func (d Dog) Bark() { fmt.Println(\"Dog barking\") } // 可以按需组合 type AquaticDog struct { Dog } func (a AquaticDog) Swim() { fmt.Println(\"Dog swimming\") }","s":"3.2 遵循ISP的改进方案","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#32-遵循isp的改进方案","p":782},{"i":794,"t":"type Animal interface { Eater Sleeper } type Bird interface { Animal Flyer } type Fish interface { Animal Swimmer }","s":"4.1 使用接口组合","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#41-使用接口组合","p":782},{"i":796,"t":"// 在需要的地方定义接口 func Feed(e Eater) { e.Eat() } func PutToSleep(s Sleeper) { s.Sleep() }","s":"4.2 客户端特定接口","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#42-客户端特定接口","p":782},{"i":798,"t":"// 不好的设计 type FileHandler interface { Open() Close() Read() Write() Delete() Archive() // 不是所有处理器都需要归档 } // 好的设计 type FileOperator interface { Open() Close() } type FileReader interface { FileOperator Read() } type FileWriter interface { FileOperator Write() } type FileManager interface { FileReader FileWriter Delete() }","s":"4.3 避免接口污染","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#43-避免接口污染","p":782},{"i":801,"t":"type Reader interface { Get(id string) (Item, error) List() ([]Item, error) } type Writer interface { Create(item Item) error Update(item Item) error Delete(id string) error } // 只读客户端 func NewReadOnlyClient(r Reader) *ReadOnlyClient { return &ReadOnlyClient{reader: r} } // 读写客户端 func NewReadWriteClient(rw interface { Reader Writer }) *ReadWriteClient { return &ReadWriteClient{readerWriter: rw} }","s":"5.1 数据库访问层","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#51-数据库访问层","p":782},{"i":803,"t":"type RequestLogger interface { LogRequest(r *http.Request) } type ResponseLogger interface { LogResponse(w http.ResponseWriter) } // 只需要请求日志的中间件 func WithRequestLogging(l RequestLogger) func(http.Handler) http.Handler { return func(next http.Handler) http.Handler { return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) { l.LogRequest(r) next.ServeHTTP(w, r) }) } }","s":"5.2 HTTP中间件","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#52-http中间件","p":782},{"i":805,"t":"不必要的实现负担：类型被迫实现它们不需要的方法 脆弱的代码：接口变更会影响太多客户端 难以测试：需要模拟不相关的方法 低内聚性：接口包含不相关的方法","s":"6. 违反ISP的后果","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#6-违反isp的后果","p":782},{"i":807,"t":"ISP鼓励小而专注的接口设计 客户端不应该被迫依赖它们不使用的方法 Go语言的隐式接口机制天然支持ISP 使用接口组合构建更复杂的抽象 按需定义接口，而不是预先创建大接口 好的接口设计应该像Unix工具一样 - 每个工具只做一件事，但做得很好。","s":"7. 总结","u":"/docs/note/golang/design/oop_pinciple/isp","h":"#7-总结","p":782},{"i":810,"t":"开闭原则(Open/Closed Principle, OCP) 是SOLID原则中的第二个原则，由Bertrand Meyer提出。其核心思想是： 软件实体（类、模块、函数等）应该对扩展开放，对修改关闭。 在Go语言中，这一原则主要通过**接口(interface)和组合(composition)**来实现。","s":"1. 概述","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#1-概述","p":808},{"i":812,"t":"对扩展开放：允许在不修改现有代码的情况下添加新功能 对修改关闭：现有代码应尽可能不被修改，以保持稳定性 抽象是关键：通过抽象建立灵活的基础结构","s":"2. 核心概念","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#2-核心概念","p":808},{"i":815,"t":"// 支付方式接口 - 抽象层 type PaymentMethod interface { Pay(amount float64) error } // 信用卡支付实现 type CreditCardPayment struct{} func (c *CreditCardPayment) Pay(amount float64) error { fmt.Printf(\"支付 %.2f 元使用信用卡\\n\", amount) return nil } // 支付宝支付实现 type AlipayPayment struct{} func (a *AlipayPayment) Pay(amount float64) error { fmt.Printf(\"支付 %.2f 元使用支付宝\\n\", amount) return nil } // 支付处理器 - 对修改关闭 type PaymentProcessor struct { method PaymentMethod } func (p *PaymentProcessor) ProcessPayment(amount float64) error { return p.method.Pay(amount) }","s":"3.1 使用接口实现OCP","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#31-使用接口实现ocp","p":808},{"i":817,"t":"// 新增微信支付 - 扩展而非修改 type WeChatPayment struct{} func (w *WeChatPayment) Pay(amount float64) error { fmt.Printf(\"支付 %.2f 元使用微信支付\\n\", amount) return nil } // 使用方式 func main() { processor := &PaymentProcessor{method: &WeChatPayment{}} processor.ProcessPayment(100.50) }","s":"3.2 添加新支付方式（扩展）","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#32-添加新支付方式扩展","p":808},{"i":820,"t":"type PaymentType int const ( CreditCard PaymentType = iota Alipay ) // 直接依赖具体实现 func ProcessPayment(paymentType PaymentType, amount float64) error { switch paymentType { case CreditCard: fmt.Printf(\"支付 %.2f 元使用信用卡\\n\", amount) case Alipay: fmt.Printf(\"支付 %.2f 元使用支付宝\\n\", amount) default: return fmt.Errorf(\"不支持的支付方式\") } return nil } 问题：每次新增支付方式都需要修改ProcessPayment函数","s":"4.1 违反OCP的代码","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#41-违反ocp的代码","p":808},{"i":822,"t":"// 使用接口抽象 type PaymentMethod interface { Pay(amount float64) error } // 注册支付方式的处理器 type PaymentHandler struct { methods map[string]PaymentMethod } func (h *PaymentHandler) Register(name string, method PaymentMethod) { h.methods[name] = method } func (h *PaymentHandler) Process(name string, amount float64) error { if method, ok := h.methods[name]; ok { return method.Pay(amount) } return fmt.Errorf(\"支付方式未注册\") }","s":"4.2 重构为符合OCP的代码","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#42-重构为符合ocp的代码","p":808},{"i":825,"t":"type Server struct { host string port int timeout time.Duration } type Option func(*Server) func WithHost(host string) Option { return func(s *Server) { s.host = host } } func WithPort(port int) Option { return func(s *Server) { s.port = port } } func NewServer(opts ...Option) *Server { s := &Server{ host: \"localhost\", port: 8080, timeout: 30 * time.Second, } for _, opt := range opts { opt(s) } return s }","s":"5.1 函数选项模式(Functional Options)","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#51-函数选项模式functional-options","p":808},{"i":827,"t":"type Handler func(http.ResponseWriter, *http.Request) func LoggingMiddleware(next Handler) Handler { return func(w http.ResponseWriter, r *http.Request) { log.Printf(\"请求开始: %s %s\", r.Method, r.URL.Path) next(w, r) log.Printf(\"请求结束: %s %s\", r.Method, r.URL.Path) } } func AuthMiddleware(next Handler) Handler { return func(w http.ResponseWriter, r *http.Request) { if r.Header.Get(\"Authorization\") == \"\" { http.Error(w, \"未授权\", http.StatusUnauthorized) return } next(w, r) } }","s":"5.2 中间件模式","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#52-中间件模式","p":808},{"i":829,"t":"支付系统（如上面的示例） 日志系统（文件日志、控制台日志、网络日志等） 数据存储（MySQL、MongoDB、Redis等） 通知系统（邮件、短信、微信通知等） 中间件管道（Web中间件、RPC拦截器等）","s":"6. OCP的实际应用场景","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#6-ocp的实际应用场景","p":808},{"i":831,"t":"控制台输出 文件输出 未来可以轻松添加网络日志","s":"7. OCP的日志系统","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#7-ocp的日志系统","p":808},{"i":833,"t":"7.1.1 定义日志接口（抽象层）​ // Logger 日志接口 - 核心抽象 type Logger interface { Log(level string, message string) error Close() error } 7.1.2 实现具体日志输出​ 控制台日志输出 // ConsoleLogger 控制台日志实现 type ConsoleLogger struct { // 可以添加需要的字段，如是否彩色输出等 } func NewConsoleLogger() *ConsoleLogger { return &ConsoleLogger{} } func (c *ConsoleLogger) Log(level string, message string) error { _, err := fmt.Printf(\"[%s] %s\\n\", level, message) return err } func (c *ConsoleLogger) Close() error { // 控制台日志无需关闭资源 return nil } 文件日志输出 // FileLogger 文件日志实现 type FileLogger struct { file *os.File } func NewFileLogger(filename string) (*FileLogger, error) { file, err := os.OpenFile(filename, os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0644) if err != nil { return nil, err } return &FileLogger{file: file}, nil } func (f *FileLogger) Log(level string, message string) error { _, err := fmt.Fprintf(f.file, \"[%s] %s %s\\n\", time.Now().Format(\"2006-01-02 15:04:05\"), level, message) return err } func (f *FileLogger) Close() error { return f.file.Close() }","s":"7.1 基础设计","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#71-基础设计","p":808},{"i":835,"t":"// CompositeLogger 组合多个日志输出 type CompositeLogger struct { loggers []Logger } func NewCompositeLogger(loggers ...Logger) *CompositeLogger { return &CompositeLogger{loggers: loggers} } func (c *CompositeLogger) Log(level string, message string) error { for _, logger := range c.loggers { if err := logger.Log(level, message); err != nil { return err } } return nil } func (c *CompositeLogger) Close() error { for _, logger := range c.loggers { if err := logger.Close(); err != nil { return err } } return nil }","s":"7.2 组合日志器（支持多种输出）","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#72-组合日志器支持多种输出","p":808},{"i":837,"t":"// LoggerType 定义日志类型 type LoggerType string const ( LoggerConsole LoggerType = \"console\" LoggerFile LoggerType = \"file\" // 未来可以添加 LoggerNetwork ) // LoggerConfig 日志配置 type LoggerConfig struct { Type LoggerType FilePath string // 仅文件日志需要 } // NewLoggerFromConfig 根据配置创建日志器 func NewLoggerFromConfig(config LoggerConfig) (Logger, error) { switch config.Type { case LoggerConsole: return NewConsoleLogger(), nil case LoggerFile: return NewFileLogger(config.FilePath) default: return nil, fmt.Errorf(\"未知的日志类型: %s\", config.Type) } }","s":"7.3 使用工厂方法创建日志器","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#73-使用工厂方法创建日志器","p":808},{"i":839,"t":"未来需要添加网络日志时，只需新增实现，无需修改现有代码： // NetworkLogger 网络日志实现 type NetworkLogger struct { endpoint string client *http.Client } func NewNetworkLogger(endpoint string) *NetworkLogger { return &NetworkLogger{ endpoint: endpoint, client: &http.Client{Timeout: 5 * time.Second}, } } func (n *NetworkLogger) Log(level string, message string) error { data := map[string]string{ \"level\": level, \"message\": message, \"time\": time.Now().Format(time.RFC3339), } jsonData, _ := json.Marshal(data) resp, err := n.client.Post(n.endpoint, \"application/json\", bytes.NewBuffer(jsonData)) if err != nil { return err } defer resp.Body.Close() if resp.StatusCode >= 400 { return fmt.Errorf(\"日志服务器返回错误状态码: %d\", resp.StatusCode) } return nil } func (n *NetworkLogger) Close() error { // 可以在这里关闭长连接等资源 return nil }","s":"7.4 添加网络日志输出（扩展示例）","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#74-添加网络日志输出扩展示例","p":808},{"i":841,"t":"func main() { // 创建控制台日志器 consoleLogger := NewConsoleLogger() // 创建文件日志器 fileLogger, err := NewFileLogger(\"app.log\") if err != nil { panic(err) } // 创建组合日志器 compositeLogger := NewCompositeLogger(consoleLogger, fileLogger) // 使用日志 compositeLogger.Log(\"INFO\", \"应用程序启动\") compositeLogger.Log(\"WARN\", \"这是一个警告信息\") compositeLogger.Log(\"ERROR\", \"发生了一个错误\") // 关闭所有日志器 if err := compositeLogger.Close(); err != nil { fmt.Printf(\"关闭日志器时出错: %v\\n\", err) } // 未来添加网络日志 networkLogger := NewNetworkLogger(\"http://log-server.example.com/log\") extendedLogger := NewCompositeLogger(consoleLogger, fileLogger, networkLogger) extendedLogger.Log(\"INFO\", \"这条日志会输出到控制台、文件和网络\") extendedLogger.Close() }","s":"7.5 完整使用示例","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#75-完整使用示例","p":808},{"i":843,"t":"OCP的核心是通过抽象来隔离变化 在Go中主要使用接口和组合来实现OCP 函数选项模式和中间件模式是实践OCP的优雅方式 平衡原则：不要过度设计，只为预期的变化做抽象 好的设计应该像插件系统一样工作 - 通过添加新代码而非修改现有代码来扩展功能。","s":"8. 总结","u":"/docs/note/golang/design/oop_pinciple/ocp","h":"#8-总结","p":808},{"i":845,"t":"面向对象编程(OOP)有几个核心设计原则，这些原则有助于创建灵活、可维护和可扩展的软件系统。以下是主要的OOP设计原则：","s":"面向对象编程中的设计原则","u":"/docs/note/golang/design/oop_pinciple/principle","h":"","p":844},{"i":847,"t":"单一职责原则(SRP - Single Responsibility Principle) 一个类应该只有一个引起它变化的原因 每个类只负责一项职责 开闭原则(OCP - Open/Closed Principle) 软件实体(类、模块、函数等)应该对扩展开放，对修改关闭 通过抽象和继承实现新功能，而不是修改现有代码 里氏替换原则(LSP - Liskov Substitution Principle) 子类型必须能够替换它们的基类型 派生类不应改变基类的行为，只能扩展它 接口隔离原则(ISP - Interface Segregation Principle) 客户端不应被迫依赖它们不使用的接口 将大接口拆分为更小、更具体的接口 依赖倒置原则(DIP - Dependency Inversion Principle) 高层模块不应依赖低层模块，两者都应依赖抽象 抽象不应依赖细节，细节应依赖抽象","s":"SOLID原则","u":"/docs/note/golang/design/oop_pinciple/principle","h":"#solid原则","p":844},{"i":849,"t":"组合优于继承原则 优先使用对象组合而不是类继承来重用功能 提高灵活性，减少类层次结构的复杂性 迪米特法则(最少知识原则 - Law of Demeter) 一个对象应该对其他对象有最少的了解 只与直接的朋友通信，减少类之间的耦合 DRY原则(Don't Repeat Yourself) 避免重复代码 将重复逻辑提取到公共方法或类中 KISS原则(Keep It Simple, Stupid) 保持设计简单直接 避免不必要的复杂性 YAGNI原则(You Aren't Gonna Need It) 不要添加当前不需要的功能 避免过度设计","s":"其他重要原则","u":"/docs/note/golang/design/oop_pinciple/principle","h":"#其他重要原则","p":844},{"i":851,"t":"整体而言，开发过程中多使用接口编程，方便程序扩展。接口定义应该保持职责单一和小。 使用接口编程，可以降低程序直接到耦合度。便于替换接口后端。","s":"个人总结","u":"/docs/note/golang/design/oop_pinciple/principle","h":"#个人总结","p":844},{"i":854,"t":"ide 警告找不到方法，但是又可以通过跳转找到对应的方法。在ide运行，手动运行也正常。 问题原因 识别到的库版本出现了差异，出现了版本不兼容的问题。 可以通过 go.mod 强行指定版本。 清理goland缓存。 有可能是ide的索引损坏了。可以通过点击菜单栏File -> Invalidate Caches / Restart...，选择 Invalidate and Restart重新生成索引。","s":"1. ide 警告找不到方法","u":"/docs/note/golang/goland","h":"#1-ide-警告找不到方法","p":852},{"i":857,"t":"单一职责原则(Single Responsibility Principle, SRP) 是SOLID原则中的第一个原则，由Robert C. Martin提出。其核心思想是： 一个类或模块应该只有一个引起它变化的原因。换句话说，一个类或模块应该只负责一项职责。 在Go语言中，这一原则主要应用于struct和interface的设计。","s":"1. 概述","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#1-概述","p":855},{"i":860,"t":"提高可维护性：修改一个功能不会影响其他不相关的功能 降低复杂度：每个结构体/接口只做一件事，更易于理解 增强可测试性：单一职责的组件更容易测试 提高复用性：细粒度的组件可以在更多场景中被复用","s":"优点：","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#优点","p":855},{"i":862,"t":"代码难以理解和维护 修改一个功能可能意外破坏其他功能 测试困难 难以复用","s":"违反SRP的后果：","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#违反srp的后果","p":855},{"i":865,"t":"// 违反SRP的例子：UserManager承担了太多职责 type UserManager struct { db *sql.DB } func (um *UserManager) CreateUser(user User) error { // 创建用户逻辑 _, err := um.db.Exec(\"INSERT INTO users (...) VALUES (...)\") return err } func (um *UserManager) SendWelcomeEmail(user User) error { // 发送欢迎邮件逻辑 return sendEmail(user.Email, \"Welcome!\", \"Welcome to our platform!\") } func (um *UserManager) GenerateReport() ([]byte, error) { // 生成用户报告逻辑 rows, err := um.db.Query(\"SELECT * FROM users\") // ...处理rows生成报告 return reportData, nil } 问题分析： 用户管理 邮件发送 报告生成 这三个完全不相关的功能被耦合在同一个结构体中","s":"3.1 违反SRP的例子","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#31-违反srp的例子","p":855},{"i":867,"t":"// 用户存储职责 type UserRepository struct { db *sql.DB } func (ur *UserRepository) Create(user User) error { _, err := ur.db.Exec(\"INSERT INTO users (...) VALUES (...)\") return err } func (ur *UserRepository) GetAll() ([]User, error) { rows, err := ur.db.Query(\"SELECT * FROM users\") // ...处理rows返回用户列表 return users, nil } // 邮件服务职责 type EmailService struct { smtpServer string } func (es *EmailService) SendWelcomeEmail(user User) error { return sendEmail(user.Email, \"Welcome!\", \"Welcome to our platform!\") } // 报告生成职责 type ReportGenerator struct { userRepo *UserRepository } func (rg *ReportGenerator) GenerateUserReport() ([]byte, error) { users, err := rg.userRepo.GetAll() // ...基于用户数据生成报告 return reportData, nil } 改进点： 将原来的UserManager拆分为三个独立的组件 每个组件只负责一项明确的职责 组件之间通过依赖注入协作","s":"3.2 遵循SRP的改进版本","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#32-遵循srp的改进版本","p":855},{"i":870,"t":"// 小而专注的接口 type UserStorer interface { Create(user User) error GetByID(id int) (*User, error) } type EmailSender interface { Send(to, subject, body string) error }","s":"4.1 接口设计","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#41-接口设计","p":855},{"i":872,"t":"type UserService struct { repo UserRepository email EmailService report ReportGenerator } func (us *UserService) RegisterNewUser(user User) error { if err := us.repo.Create(user); err != nil { return err } return us.email.SendWelcomeEmail(user) }","s":"4.2 组合代替继承","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#42-组合代替继承","p":855},{"i":874,"t":"// 不好的例子：函数做太多事情 func processUserData(data []byte) (User, error) { // 1. 验证数据 // 2. 解析数据 // 3. 保存到数据库 // 4. 发送通知 } // 好的例子：拆分为多个单一职责的函数 func validateUserData(data []byte) error {} func parseUserData(data []byte) (User, error) {} func saveUser(user User) error {} func notifyUserCreated(user User) error {}","s":"4.3 函数职责单一","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#43-函数职责单一","p":855},{"i":877,"t":"当一个结构体/接口变得庞大时 当修改一个功能会影响不相关功能时 当难以给结构体起一个准确的名称时(如UserManagerAndReportGenerator)","s":"应该应用SRP的情况：","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#应该应用srp的情况","p":855},{"i":879,"t":"对于简单的小型项目 对于确实紧密相关的功能 当拆分会导致不必要的复杂性时","s":"不必过度应用：","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#不必过度应用","p":855},{"i":881,"t":"SRP是编写可维护、可扩展代码的基础 在Go中，通过小而专注的结构体和接口来实现SRP 组合优于继承，依赖注入是实现SRP的好帮手 合理应用SRP，但避免过度设计 记住：让一个结构体/接口只为一个改变的理由而存在。","s":"6. 总结","u":"/docs/note/golang/design/oop_pinciple/srp","h":"#6-总结","p":855},{"i":884,"t":"工厂模式是一种创建型设计模式，目的是将对象的创建过程与使用过程分离，从而降低代码耦合、增强扩展性。 在 Go 中，虽然没有类和继承，但可以通过接口 + 工厂函数/结构来实现相同思想。","s":"1. 概述","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#1-概述","p":882},{"i":887,"t":"package main import \"fmt\" // 接口 type Shape interface { Draw() } // 实现类 type Circle struct{} func (c Circle) Draw() { fmt.Println(\"Drawing Circle\") } type Square struct{} func (s Square) Draw() { fmt.Println(\"Drawing Square\") } // 简单工厂 func ShapeFactory(shapeType string) Shape { switch shapeType { case \"circle\": return Circle{} case \"square\": return Square{} default: return nil } } func main() { s1 := ShapeFactory(\"circle\") s2 := ShapeFactory(\"square\") s1.Draw() s2.Draw() }","s":"2.1 示例：图形创建器","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#21-示例图形创建器","p":882},{"i":889,"t":"// 连接接口 type Conn interface { Send([]byte) error Receive() ([]byte, error) } // 简单工厂实现 func NewConn(network string, addr string) (Conn, error) { switch network { case \"tcp\": return &TCPConn{addr: addr}, nil case \"unix\": return &UnixConn{path: addr}, nil case \"http\": return &HTTPConn{url: addr}, nil default: return nil, fmt.Errorf(\"unsupported network\") } } // 使用示例 func main() { conn, _ := NewConn(\"http\", \"https://api.example.com\") conn.Send([]byte(\"GET /\")) }","s":"2.2 示例：网络连接","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#22-示例网络连接","p":882},{"i":891,"t":"✅ 简单直接，适合小规模使用 ❌ 增加新类型要修改工厂，违反开闭原则（OCP）","s":"2.3 优缺点","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#23-优缺点","p":882},{"i":894,"t":"package main import \"fmt\" // 接口 type DBConnector interface { Connect() } // 实现 type MySQLConnector struct{} func (m MySQLConnector) Connect() { fmt.Println(\"MySQL connected\") } type PostgresConnector struct{} func (p PostgresConnector) Connect() { fmt.Println(\"Postgres connected\") } // 工厂接口 type DBFactory interface { CreateConnector() DBConnector } // 实现工厂 type MySQLFactory struct{} func (f MySQLFactory) CreateConnector() DBConnector { return MySQLConnector{} } type PostgresFactory struct{} func (f PostgresFactory) CreateConnector() DBConnector { return PostgresConnector{} } func main() { var factory DBFactory factory = MySQLFactory{} conn := factory.CreateConnector() conn.Connect() factory = PostgresFactory{} conn = factory.CreateConnector() conn.Connect() }","s":"3.1 示例：数据库连接器","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#31-示例数据库连接器","p":882},{"i":896,"t":"// 日志接口 type Logger interface { Log(level string, msg string) } // 工厂接口 type LoggerFactory interface { Create() Logger } // 文件日志实现 type FileLogger struct { path string } func (f *FileLogger) Log(level, msg string) { // 实现文件写入 } type FileLoggerFactory struct { path string } func (f *FileLoggerFactory) Create() Logger { return &FileLogger{path: f.path} } // 控制台日志实现 type ConsoleLogger struct{} func (c *ConsoleLogger) Log(level, msg string) { fmt.Printf(\"[%s] %s\\n\", level, msg) } type ConsoleLoggerFactory struct{} func (f *ConsoleLoggerFactory) Create() Logger { return &ConsoleLogger{} } // 使用示例 func getLoggerFactory(env string) LoggerFactory { if env == \"production\" { return &FileLoggerFactory{path: \"/var/log/app.log\"} } return &ConsoleLoggerFactory{} } func main() { factory := getLoggerFactory(os.Getenv(\"APP_ENV\")) logger := factory.Create() logger.Log(\"INFO\", \"application started\") }","s":"3.2 示例：日志系统","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#32-示例日志系统","p":882},{"i":898,"t":"✅ 遵循开闭原则，新增类型无需改旧代码 ❌ 类（结构）增多，代码结构复杂","s":"3.3 优缺点","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#33-优缺点","p":882},{"i":901,"t":"package main import \"fmt\" // 产品接口族 type Button interface { Paint() } type Textbox interface { Draw() } // Windows 系列 type WindowsButton struct{} func (WindowsButton) Paint() { fmt.Println(\"Windows Button\") } type WindowsTextbox struct{} func (WindowsTextbox) Draw() { fmt.Println(\"Windows Textbox\") } // Mac 系列 type MacButton struct{} func (MacButton) Paint() { fmt.Println(\"Mac Button\") } type MacTextbox struct{} func (MacTextbox) Draw() { fmt.Println(\"Mac Textbox\") } // 抽象工厂接口 type GUIFactory interface { CreateButton() Button CreateTextbox() Textbox } // 具体工厂 type WindowsFactory struct{} func (WindowsFactory) CreateButton() Button { return WindowsButton{} } func (WindowsFactory) CreateTextbox() Textbox { return WindowsTextbox{} } type MacFactory struct{} func (MacFactory) CreateButton() Button { return MacButton{} } func (MacFactory) CreateTextbox() Textbox { return MacTextbox{} } // 使用 func main() { var factory GUIFactory factory = WindowsFactory{} factory.CreateButton().Paint() factory.CreateTextbox().Draw() factory = MacFactory{} factory.CreateButton().Paint() factory.CreateTextbox().Draw() }","s":"4.1 示例：UI 工厂（按钮 + 文本框）","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#41-示例ui-工厂按钮--文本框","p":882},{"i":903,"t":"✅ 保证一组产品的一致性（同属一个系统） ❌ 扩展产品族困难（需要修改接口）","s":"4.2 优缺点","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#42-优缺点","p":882},{"i":905,"t":"package main import \"fmt\" type Animal interface { Speak() } type Dog struct{} func (Dog) Speak() { fmt.Println(\"Woof!\") } type Cat struct{} func (Cat) Speak() { fmt.Println(\"Meow!\") } var animalRegistry = make(map[string]func() Animal) func RegisterAnimal(name string, factory func() Animal) { animalRegistry[name] = factory } func GetAnimal(name string) Animal { if f, ok := animalRegistry[name]; ok { return f() } return nil } func main() { RegisterAnimal(\"dog\", func() Animal { return Dog{} }) RegisterAnimal(\"cat\", func() Animal { return Cat{} }) GetAnimal(\"dog\").Speak() GetAnimal(\"cat\").Speak() }","s":"5. 函数式工厂（Functional Factory）","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#5-函数式工厂functional-factory","p":882},{"i":907,"t":"✅ 高度解耦，便于插件化开发 ✅ 新增产品无需改动旧工厂逻辑","s":"5.1 优点","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#51-优点","p":882},{"i":909,"t":"✅ 日志、数据库、配置适配器 ✅ 插件系统、驱动层抽象 ✅ UI 工具包的主题/皮肤切换","s":"6.  工厂模式应用场景","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#6--工厂模式应用场景","p":882},{"i":911,"t":"类型 是否可扩展 简洁性 应用范围 简单工厂 ❌ 不易扩展 ✅ 小项目 工厂方法 ✅ ✅ 通用 抽象工厂 ✅（产品） ❌ 系列产品 函数式注册 ✅ ✅ 插件式架构","s":"7. 小结对比","u":"/docs/note/golang/design/standard_design_patterns/create/factory","h":"#7-小结对比","p":882},{"i":914,"t":"在 Go 中，错误处理通常有两种方式：","s":"错误处理","u":"/docs/note/golang/jotting","h":"#错误处理","p":912},{"i":916,"t":"使用返回值返回一个 error 类型： func doSomething() (Result, error) { // ... }","s":"普通函数","u":"/docs/note/golang/jotting","h":"#普通函数","p":912},{"i":918,"t":"一种方式是像普通函数一样，直接返回一个 error。 另一种做法是，在结构体中增加一个 error 字段，在方法中设置这个字段的值。 type MyService struct { err error } func (s *MyService) Do() { // ... s.err = errors.New(\"something went wrong\") }","s":"结构体方法","u":"/docs/note/golang/jotting","h":"#结构体方法","p":912},{"i":920,"t":"在 Go 中，chan 是处理并发的核心工具之一，但并不是所有场景都适合使用它。以下是使用 chan 的建议与注意事项：","s":"Go 中何时使用 chan","u":"/docs/note/golang/jotting","h":"#go-中何时使用-chan","p":912},{"i":922,"t":"1. 异步操作 / 并发任务​ 函数中开启 goroutine 异步执行任务，通过返回的 chan 返回结果： func asyncAdd(a, b int) <-chan int { result := make(chan int) go func() { result <- a + b close(result) }() return result } 2. 流式数据传递​ 当函数生成一系列数据（如读取文件、流数据、分页 API 等），使用 chan 可以边生成边消费： func generate(n int) <-chan int { out := make(chan int) go func() { for i := 0; i < n; i++ { out <- i } close(out) }() return out } 3. 信号同步​ 当只需传递一个“完成”或“信号”，可以使用 chan struct{}： done := make(chan struct{}) go func() { // 做一些事 done <- struct{}{} }() <-done","s":"✅ 推荐使用的场景","u":"/docs/note/golang/jotting","h":"#-推荐使用的场景","p":912},{"i":924,"t":"只为传递一个返回值时：返回值即可，无需增加复杂度。 同步计算场景：没必要用 chan 包装同步调用。 为“函数式编程”风格强行引入 chan：Go 强调简洁，不宜滥用。","s":"❌ 不推荐的场景","u":"/docs/note/golang/jotting","h":"#-不推荐的场景","p":912},{"i":926,"t":"当你遇到如下报错： verifying module: invalid GOSUMDB: malformed verifier id 可能是 go.sum 校验失败。检查环境变量如下： $ go env GOSUMDB sum.golang.org $ go env GOPROXY https://goproxy.cn,direct 可尝试： 清空 go.sum 后重新运行 go mod tidy 切换 GOPROXY 为官方代理或关闭校验：GOSUMDB=off","s":"go mod tidy 报错 GOSUMDB","u":"/docs/note/golang/jotting","h":"#go-mod-tidy-报错-gosumdb","p":912},{"i":928,"t":"在 Go 中，空接口 interface{} 表示任意类型，类似于 Java 的 Object，但更加简洁高效。","s":"空接口 interface{} 与任意类型","u":"/docs/note/golang/jotting","h":"#空接口-interface-与任意类型","p":912},{"i":930,"t":"var arr = [3]int{1, 2, 3} value, ok := interface{}(arr).([3]int) ok 为 true 表示类型断言成功，value 即具体类型。 否则 ok 为 false。","s":"类型断言与转换","u":"/docs/note/golang/jotting","h":"#类型断言与转换","p":912},{"i":932,"t":"不占内存空间 在并发中常用于信号传递 ch := make(chan struct{}) ch <- struct{}{}","s":"空结构体 struct{}","u":"/docs/note/golang/jotting","h":"#空结构体-struct","p":912},{"i":934,"t":"Go 支持在 if 条件前定义变量： if n := \"abc\"; x < 0 { println(n[1]) } 等价于： n := \"abc\" if x < 0 { println(n[1]) } 注意：else if 与 else 的左大括号应与条件语句在同一行。","s":"if 判断语法简化","u":"/docs/note/golang/jotting","h":"#if-判断语法简化","p":912},{"i":937,"t":"Golang 标准库提供 encoding/json 包，可用于解析和生成 JSON 数据。 示例：解析 JSON 到 map[string]interface{} package main import ( \"encoding/json\" \"fmt\" ) func main() { jsonData := `{\"name\": \"Alice\", \"age\": 25}` var result map[string]interface{} err := json.Unmarshal([]byte(jsonData), &result) if err != nil { fmt.Println(\"Error:\", err) return } fmt.Println(\"Name:\", result[\"name\"].(string)) fmt.Println(\"Age:\", result[\"age\"].(float64)) } 优缺点对比 优点 缺点 官方库，稳定可靠 需要手动类型断言 无需额外依赖 性能相对较低 适用于简单 JSON 解析 解析大 JSON 结构时性能不足","s":"1. Golang 默认 JSON 解析 (encoding/json)","u":"/docs/note/golang/json","h":"#1-golang-默认-json-解析-encodingjson","p":935},{"i":940,"t":"安装： go get github.com/tidwall/gjson 示例： package main import ( \"fmt\" \"github.com/tidwall/gjson\" ) func main() { jsonData := `{\"name\": \"Alice\", \"age\": 25}` if !gjson.Valid(jsonData) { fmt.Println(\"Invalid JSON data\") return } if gjson.Get(jsonData, \"name\").Exists() { fmt.Println(\"Name field exists\") } else { fmt.Println(\"Name field does not exist\") } name := gjson.Get(jsonData, \"name\") age := gjson.Get(jsonData, \"age\").Int() fmt.Println(\"Name:\", name.String()) fmt.Println(\"Age:\", age) }","s":"2.1 github.com/tidwall/gjson（高效 JSON 读取）","u":"/docs/note/golang/json","h":"#21-githubcomtidwallgjson高效-json-读取","p":935},{"i":942,"t":"优点 缺点 解析速度快 不能修改 JSON 支持 JSONPath 查询 适用于只读场景 代码简洁 -","s":"优缺点对比","u":"/docs/note/golang/json","h":"#优缺点对比","p":935},{"i":944,"t":"安装： go get github.com/json-iterator/go 示例： package main import ( \"fmt\" jsoniter \"github.com/json-iterator/go\" ) func main() { var json = jsoniter.ConfigCompatibleWithStandardLibrary jsonData := `{\"name\": \"Alice\", \"age\": 25}` var result map[string]interface{} json.Unmarshal([]byte(jsonData), &result) fmt.Println(\"Name:\", result[\"name\"]) fmt.Println(\"Age:\", result[\"age\"]) }","s":"2.2 github.com/json-iterator/go（高性能 JSON 解析）","u":"/docs/note/golang/json","h":"#22-githubcomjson-iteratorgo高性能-json-解析","p":935},{"i":946,"t":"优点 缺点 兼容 encoding/json，可直接替换 解析 JSON 数组不如 gjson 简洁 性能比 encoding/json 高 -","s":"优缺点对比","u":"/docs/note/golang/json","h":"#优缺点对比-1","p":935},{"i":948,"t":"安装： go get github.com/buger/jsonparser 示例： package main import ( \"fmt\" \"github.com/buger/jsonparser\" ) func main() { jsonData := []byte(`{\"name\": \"Alice\", \"age\": 25}`) name, _ := jsonparser.GetString(jsonData, \"name\") age, _ := jsonparser.GetInt(jsonData, \"age\") fmt.Println(\"Name:\", name) fmt.Println(\"Age:\", age) }","s":"2.3 github.com/buger/jsonparser（流式 JSON 解析）","u":"/docs/note/golang/json","h":"#23-githubcombugerjsonparser流式-json-解析","p":935},{"i":950,"t":"优点 缺点 适用于大 JSON 文件解析 不能修改 JSON 直接操作 []byte，性能高 代码较 gjson 复杂","s":"优缺点对比","u":"/docs/note/golang/json","h":"#优缺点对比-2","p":935},{"i":952,"t":"库 适用场景 优势 劣势 encoding/json 普通 JSON 解析 官方库，稳定 解析速度较慢，需要类型断言 gjson 只读 JSON 数据 语法简洁，性能高 不能修改 JSON json-iterator/go 高性能 JSON 解析 可直接替换标准库 解析 JSON 数组较繁琐 buger/jsonparser 解析大 JSON 直接操作 []byte，流式解析 代码较复杂","s":"3. JSON 解析库对比","u":"/docs/note/golang/json","h":"#3-json-解析库对比","p":935},{"i":954,"t":"只读取 JSON 数据（不修改）：✅ gjson 需要高性能 JSON 解析：✅ json-iterator/go 解析大 JSON 文件（如日志）：✅ buger/jsonparser 通用解析（兼容性好）：✅ encoding/json 根据具体需求选择合适的库，以提高 JSON 处理效率。","s":"总结与推荐","u":"/docs/note/golang/json","h":"#总结与推荐","p":935},{"i":957,"t":"反射是 Go 语言中的一个强大特性，允许程序在运行时检查和操作变量的类型和值。 reflect 包提供了一系列 API，使得开发者可以动态获取变量的信息、修改变量的值，并在一定程度上实现动态调用。 适用场景： 处理接口类型的变量 解析结构体标签（struct tag） 生成通用工具，如序列化、反序列化、ORM 框架等 reflect 包的核心功能： 类型检查：获取变量的类型信息。 值操作：获取和修改变量的值。 方法调用：动态调用结构体的方法。 字段操作：动态访问和修改结构体的字段。 创建实例：通过反射创建新的变量实例。","s":"1. 反射（Reflect）概述","u":"/docs/note/golang/reflect","h":"#1-反射reflect概述","p":955},{"i":959,"t":"在 reflect 包中，主要有两个核心类型： reflect.Type：表示变量的类型（TypeOf 获取） reflect.Value：表示变量的值（ValueOf 获取）","s":"2. 反射的基本类型","u":"/docs/note/golang/reflect","h":"#2-反射的基本类型","p":955},{"i":961,"t":"package main import ( \"fmt\" \"reflect\" ) func main() { var num int = 42 typeInfo := reflect.TypeOf(num) valueInfo := reflect.ValueOf(num) fmt.Println(\"Type:\", typeInfo) // int fmt.Println(\"Value:\", valueInfo) // 42 typeInfo = reflect.TypeOf(&num) valueInfo = reflect.ValueOf(&num) fmt.Println(\"Point Type:\", typeInfo) // *int fmt.Println(\"Point Value:\", valueInfo) // 0xc00010a000 }","s":"2.1 获取变量的类型和值","u":"/docs/note/golang/reflect","h":"#21-获取变量的类型和值","p":955},{"i":963,"t":"反射可以修改变量的值，但前提是 reflect.Value 必须是可设置的（CanSet() 方法返回 true）。 package main import ( \"fmt\" \"reflect\" ) func main() { var num int = 42 // 传递指针才能修改原值 // 此时的valueInfo是一个reflect.Value类型。代表num指针 valueInfo := reflect.ValueOf(&num) // 此时的valueElem是一个reflect.Value类型。代表num的值 valueElem := valueInfo.Elem() /* * 当你需要通过指针修改原始变量的值时，你需要先获取指针的 reflect.Value， * 然后通过 .Elem() 方法获取到实际的值并进行操作。 */ if valueElem.CanSet() { valueElem.SetInt(100) } fmt.Println(\"Modified value:\", num) // 100 }","s":"3. 反射修改变量值","u":"/docs/note/golang/reflect","h":"#3-反射修改变量值","p":955},{"i":966,"t":"package main import ( \"fmt\" \"reflect\" ) type Person struct { Name string Age int } func main() { p := Person{Name: \"Alice\", Age: 30} typeInfo := reflect.TypeOf(p) // NumField returns the number of fields in the struct. // It panics if the type of v is not a struct. for i := 0; i < typeInfo.NumField(); i++ { field := typeInfo.Field(i) fmt.Printf(\"Field Name: %s, Type: %s\\n\", field.Name, field.Type) } }","s":"4.1 获取结构体字段信息","u":"/docs/note/golang/reflect","h":"#41-获取结构体字段信息","p":955},{"i":968,"t":"结构体字段可以带有标签，用于元数据存储，如 JSON、数据库映射等。 package main import ( \"fmt\" \"reflect\" ) type User struct { ID int `json:\"id\" yaml:\"id\"` Name string `json:\"name\"` } func main() { typeInfo := reflect.TypeOf(User{}) for i := 0; i < typeInfo.NumField(); i++ { field := typeInfo.Field(i) // 打印字段标签 fmt.Printf(\"Field Tag: %s\\n\", field.Tag) tag := field.Tag.Get(\"json\") fmt.Printf(\"Field: %s, JSON Tag: %s\\n\", field.Name, tag) } }","s":"4.2 解析结构体标签（Tag）","u":"/docs/note/golang/reflect","h":"#42-解析结构体标签tag","p":955},{"i":970,"t":"有参数调用 package main import ( \"fmt\" \"reflect\" ) type Calculator struct{} func (c Calculator) Add(a, b int) int { return a + b } func main() { calc := Calculator{} method := reflect.ValueOf(calc).MethodByName(\"Add\") args := []reflect.Value{reflect.ValueOf(10), reflect.ValueOf(20)} result := method.Call(args) fmt.Println(\"Result:\", result[0].Int()) // 30 } 无参数调用 package main import ( \"fmt\" \"reflect\" ) type User struct { Name string } func (u User) SayHello() { fmt.Println(\"Hello,\", u.Name) } func main() { u := User{Name: \"Alice\"} v := reflect.ValueOf(u) method := v.MethodByName(\"SayHello\") method.Call(nil) // 输出: Hello, Alice }","s":"5. 反射调用方法","u":"/docs/note/golang/reflect","h":"#5-反射调用方法","p":955},{"i":972,"t":"代码可读性降低，调试难度增大 性能损耗，相比普通方法调用慢10倍以上","s":"6. 反射的局限性","u":"/docs/note/golang/reflect","h":"#6-反射的局限性","p":955},{"i":974,"t":"只有在动态需求时使用反射，避免滥用 使用 interface{} 和 switch 语句作为反射的替代方案 结合 json、protobuf 等库时，合理利用 reflect 提取字段信息","s":"7. 反射最佳实践","u":"/docs/note/golang/reflect","h":"#7-反射最佳实践","p":955},{"i":977,"t":"在 Golang 中，序列化（Serialization）和反序列化（Deserialization）是数据持久化和网络传输的关键技术。默认情况下，encoding/json 标准库可以处理大部分常见的 JSON 数据格式。但在复杂业务场景中，我们可能需要对数据格式、字段校验、嵌套类型等进行定制化处理。 本培训文档旨在介绍如何通过实现 json.Marshaler 和 json.Unmarshaler 接口，实现对自定义类型的灵活处理，涵盖常见及进阶场景。","s":"1. 引言","u":"/docs/note/golang/serialization","h":"#1-引言","p":975},{"i":980,"t":"import \"encoding/json\" func main() { p := Person{\"Alice\", 30} // 序列化 data, err := json.Marshal(p) // 反序列化 var p2 Person err = json.Unmarshal(data, &p2) }","s":"2.1 JSON序列化","u":"/docs/note/golang/serialization","h":"#21-json序列化","p":975},{"i":982,"t":"type Product struct { ID int `json:\"id\"` Name string `json:\"name\"` CreatedAt time.Time `json:\"created_at,omitempty\"` }","s":"2.2 结构体标签","u":"/docs/note/golang/serialization","h":"#22-结构体标签","p":975},{"i":984,"t":"通过实现 json.Marshaler 接口，可以自定义对象转换为 JSON 的逻辑。类似的，通过实现yaml.Marshaler接口，可以自定义对象转化为 yaml的逻辑。 接口实现中，还可以增加校验规则，实现类似validate的效果 type Person struct { Name string Age int } // 自定义反序列化，加入数据校验 func (p *Person) UnmarshalJSON(data []byte) error { var temp struct { FullName string `json:\"full_name\"` Age int `json:\"age\"` } if err := json.Unmarshal(data, &temp); err != nil { return err } if temp.Age < 0 || temp.Age > 150 { return errors.New(\"age must be between 0 and 150\") }","s":"3. 自定义类型序列化","u":"/docs/note/golang/serialization","h":"#3-自定义类型序列化","p":975},{"i":986,"t":"type CustomDate time.Time func (cd CustomDate) MarshalJSON() ([]byte, error) { return json.Marshal(time.Time(cd).Format(\"2006-01-02\")) }","s":"3.1 实现Marshaler接口","u":"/docs/note/golang/serialization","h":"#31-实现marshaler接口","p":975},{"i":988,"t":"func (cd *CustomDate) UnmarshalJSON(data []byte) error { var s string if err := json.Unmarshal(data, &s); err != nil { return err } t, err := time.Parse(\"2006-01-02\", s) if err != nil { return err } *cd = CustomDate(t) return nil }","s":"3.2 实现Unmarshaler接口","u":"/docs/note/golang/serialization","h":"#32-实现unmarshaler接口","p":975},{"i":991,"t":"type Order struct { ID int `json:\"id\"` Products []Product `json:\"products\"` Date CustomDate `json:\"date\"` }","s":"4.1 嵌套结构体","u":"/docs/note/golang/serialization","h":"#41-嵌套结构体","p":975},{"i":993,"t":"type Shape interface { Area() float64 } type Circle struct { Radius float64 `json:\"radius\"` } func (c Circle) Area() float64 { return math.Pi * c.Radius * c.Radius } // 自定义序列化逻辑 func (c *Circle) MarshalJSON() ([]byte, error) { type Alias Circle return json.Marshal(&struct { Type string `json:\"type\"` *Alias }{ Type: \"circle\", Alias: (*Alias)(c), }) }","s":"4.2 接口类型处理","u":"/docs/note/golang/serialization","h":"#42-接口类型处理","p":975},{"i":996,"t":"var bufferPool = sync.Pool{ New: func() interface{} { return new(bytes.Buffer) }, } func MarshalWithPool(v interface{}) ([]byte, error) { buf := bufferPool.Get().(*bytes.Buffer) defer bufferPool.Put(buf) buf.Reset() encoder := json.NewEncoder(buf) if err := encoder.Encode(v); err != nil { return nil, err } return buf.Bytes(), nil }","s":"5.1 使用缓冲池","u":"/docs/note/golang/serialization","h":"#51-使用缓冲池","p":975},{"i":998,"t":"json-iterator: 兼容标准库的高性能实现 easyjson: 代码生成方案 protobuf: 二进制序列化方案","s":"5.2 使用第三方库","u":"/docs/note/golang/serialization","h":"#52-使用第三方库","p":975},{"i":1001,"t":"type Node struct { Value int `json:\"value\"` Next *Node `json:\"next,omitempty\"` // 使用omitempty避免无限递归 }","s":"6.1 循环引用问题","u":"/docs/note/golang/serialization","h":"#61-循环引用问题","p":975},{"i":1003,"t":"type Timestamp time.Time func (t *Timestamp) UnmarshalJSON(b []byte) error { s := strings.Trim(string(b), \"\\\"\") tm, err := time.Parse(time.RFC3339, s) if err != nil { return err } *t = Timestamp(tm) return nil }","s":"6.2 时间格式处理","u":"/docs/note/golang/serialization","h":"#62-时间格式处理","p":975},{"i":1006,"t":"func TestCustomDate_MarshalJSON(t *testing.T) { cd := CustomDate(time.Date(2023, 1, 1, 0, 0, 0, 0, time.UTC)) data, err := json.Marshal(cd) assert.Nil(t, err) assert.Equal(t, `\"2023-01-01\"`, string(data)) } func TestCustomDate_UnmarshalJSON(t *testing.T) { var cd CustomDate err := json.Unmarshal([]byte(`\"2023-01-01\"`), &cd) assert.Nil(t, err) assert.Equal(t, 2023, time.Time(cd).Year()) }","s":"7.1 单元测试示例","u":"/docs/note/golang/serialization","h":"#71-单元测试示例","p":975},{"i":1008,"t":"始终处理错误返回值 对敏感字段使用json:\"-\" 使用omitempty处理可选字段 对大对象使用流式处理（json.Decoder） 避免在Marshal/Unmarshal方法中修改共享状态","s":"8. 最佳实践","u":"/docs/note/golang/serialization","h":"#8-最佳实践","p":975},{"i":1010,"t":"package main import ( \"encoding/json\" \"fmt\" \"time\" ) type CustomDate time.Time func (cd CustomDate) MarshalJSON() ([]byte, error) { return json.Marshal(time.Time(cd).Format(\"2006-01-02\")) } func (cd *CustomDate) UnmarshalJSON(data []byte) error { var s string if err := json.Unmarshal(data, &s); err != nil { return err } t, err := time.Parse(\"2006-01-02\", s) if err != nil { return err } *cd = CustomDate(t) return nil } type Event struct { Name string `json:\"name\"` EventDate CustomDate `json:\"event_date\"` } func main() { event := Event{ Name: \"Go Conference\", EventDate: CustomDate(time.Now()), } data, _ := json.Marshal(event) fmt.Println(string(data)) // {\"name\":\"Go Conference\",\"event_date\":\"2023-07-20\"} var newEvent Event _ = json.Unmarshal(data, &newEvent) fmt.Printf(\"%+v\\n\", newEvent) // {Name:Go Conference EventDate:2023-07-20 00:00:00 +0000 UTC} } secret 密码示例: package web import ( \"encoding/json\" \"errors\" ) /* * Secret 用于存储敏感信息的结构体，实现 yaml.Marshaler、json.Marshaler、yaml.Unmarshaler、json.Unmarshaler 接口， * 用于在 YAML 和 JSON 文件中隐藏敏感信息，并实现加密和解密功能。 * 我们在开发中，对需要yaml，和json处理的数据，可以采用类似的方法 */ // Secret 用于存储敏感信息的结构体 type Secret struct { value string } // NewSecret 创建新的 Secret func NewSecret(val string) Secret { return Secret{value: val} } // MarshalYAML 实现 yaml.Marshaler 接口 func (s Secret) MarshalYAML() (interface{}, error) { //if s.value != \"\" { // return \"<secret>\", nil //} //return nil, nil return \"<secret>\", nil } // MarshalJSON 实现 json.Marshaler 接口 func (s Secret) MarshalJSON() ([]byte, error) { return []byte(\"<secret>\"), nil } // UnmarshalYAML 实现 yaml.Unmarshaler 接口 func (s *Secret) UnmarshalYAML(unmarshal func(interface{}) error) error { if s == nil { return errors.New(\"cannot unmarshal into nil Secret\") } // 可以通过定义一个中间类型，如 plain，来避免递归调用 //type plain Secret // 定义 plain 为 Secret 的别名 //return unmarshal((*plain)(s)) // 将 s 转换为 *plain 类型，避免递归调用 // 也可以直接定义一个string变量，然后通过json.Unmarshal()方法将数据解析到该变量中 // 这样相当于调用的是string 的unmarshal方法,避免了递归调用 var raw string if err := unmarshal(&raw); err != nil { return err } s.value = raw return nil } // UnmarshalJSON 实现 json.Unmarshaler 接口 func (s *Secret) UnmarshalJSON(data []byte) error { if s == nil { return errors.New(\"cannot unmarshal into nil Secret\") } var raw string if err := json.Unmarshal(data, &raw); err != nil { return err } s.value = raw return nil } // Get 返回实际值，减少直接暴露 func (s Secret) Get() string { return s.value }","s":"附录：完整示例","u":"/docs/note/golang/serialization","h":"#附录完整示例","p":975},{"i":1013,"t":"kingpin 是一个用于解析命令行参数的 Golang 库，提供类似 flag 但更强大和直观的 API，支持子命令、默认值、环境变量等。","s":"1. 简介","u":"/docs/note/golang/kingpin","h":"#1-简介","p":1011},{"i":1015,"t":"go get github.com/alecthomas/kingpin","s":"2. 安装","u":"/docs/note/golang/kingpin","h":"#2-安装","p":1011},{"i":1018,"t":"kingpin 提供了默认的 kingpin.CommandLine，可以直接使用全局方法定义参数。 package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) var ( name = kingpin.Flag(\"name\", \"输入你的名字。\").Short('n').Default(\"World\").String() age = kingpin.Flag(\"age\", \"输入你的年龄。\").Int() ) func main() { kingpin.Parse() fmt.Printf(\"Hello %s! You are %d years old.\\n\", *name, *age) } 运行示例： ./example --name=Alice --age=30","s":"3.1 使用默认 App","u":"/docs/note/golang/kingpin","h":"#31-使用默认-app","p":1011},{"i":1020,"t":"package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"example\", \"示例应用程序。\") name := app.Flag(\"name\", \"输入你的名字。\").Short('n').Default(\"World\").String() age := app.Flag(\"age\", \"输入你的年龄。\").Int() kingpin.MustParse(app.Parse(os.Args[1:])) fmt.Printf(\"Hello %s! You are %d years old.\\n\", *name, *age) } 运行示例： ./example --name=Alice --age=30","s":"3.2 定义命令行参数（使用 New 方法）","u":"/docs/note/golang/kingpin","h":"#32-定义命令行参数使用-new-方法","p":1011},{"i":1022,"t":"package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"app\", \"一个支持子命令的示例。\") // 定义子命令 `greet` greetCmd := app.Command(\"greet\", \"打招呼。\") name := greetCmd.Flag(\"name\", \"你的名字。\").Default(\"World\").String() // 定义子命令 `bye` byeCmd := app.Command(\"bye\", \"告别。\") goodbye := byeCmd.Flag(\"message\", \"告别消息。\").Default(\"Goodbye!\").String() switch kingpin.MustParse(app.Parse(os.Args[1:])) { case greetCmd.FullCommand(): fmt.Printf(\"Hello, %s!\\n\", *name) case byeCmd.FullCommand(): fmt.Println(*goodbye) } } 运行示例： ./app greet --name=Bob ./app bye --message=\"See you!\"","s":"3.3 使用子命令","u":"/docs/note/golang/kingpin","h":"#33-使用子命令","p":1011},{"i":1024,"t":"package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"env-example\", \"示例环境变量支持。\") name := app.Flag(\"name\", \"你的名字。\").Envar(\"USER_NAME\").Default(\"Anonymous\").String() kingpin.MustParse(app.Parse(os.Args[1:])) fmt.Println(\"Hello,\", *name) } 运行示例： export USER_NAME=Charlie ./env-example","s":"3.4 绑定环境变量","u":"/docs/note/golang/kingpin","h":"#34-绑定环境变量","p":1011},{"i":1026,"t":"package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"bool-flag\", \"布尔标志示例。\") verbose := app.Flag(\"verbose\", \"开启详细模式。\").Short('v').Bool() kingpin.MustParse(app.Parse(os.Args[1:])) if *verbose { fmt.Println(\"Verbose mode enabled\") } else { fmt.Println(\"Verbose mode disabled\") } } 运行示例： ./bool-flag --verbose ./bool-flag -v","s":"3.5 处理布尔标志","u":"/docs/note/golang/kingpin","h":"#35-处理布尔标志","p":1011},{"i":1028,"t":"package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"list-example\", \"解析列表参数示例。\") items := app.Flag(\"items\", \"输入多个项。\").Strings() kingpin.MustParse(app.Parse(os.Args[1:])) fmt.Println(\"Items:\", *items) } 运行示例： ./list-example --items=apple --items=banana --items=cherry","s":"3.6 解析列表参数","u":"/docs/note/golang/kingpin","h":"#36-解析列表参数","p":1011},{"i":1031,"t":"可以使用 kingpin.Action() 在解析参数后执行特定逻辑。 package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"custom-action\", \"示例：使用自定义解析逻辑。\") name := app.Flag(\"name\", \"输入你的名字。\").String() app.Action(func(c *kingpin.ParseContext) error { fmt.Println(\"解析完成，欢迎\", *name) return nil }) kingpin.MustParse(app.Parse(os.Args[1:])) }","s":"4.1 自定义解析器","u":"/docs/note/golang/kingpin","h":"#41-自定义解析器","p":1011},{"i":1033,"t":"kingpin 提供了一种简单易用且功能强大的命令行解析方式，适用于各种 CLI 应用。","s":"5. 总结","u":"/docs/note/golang/kingpin","h":"#5-总结","p":1011},{"i":1035,"t":"✅ 支持子命令 ✅ 支持环境变量 ✅ 友好的 API 设计 ✅ 丰富的参数类型支持 ✅ 自动生成帮助文档 如果需要构建复杂的命令行工具，kingpin 是一个值得推荐的选择。","s":"特点总结","u":"/docs/note/golang/kingpin","h":"#特点总结","p":1011},{"i":1038,"t":"validator 是 Go 语言中一个强大的数据验证库，它提供结构体字段标签验证功能，并支持自定义验证规则。","s":"1. 简介","u":"/docs/note/golang/validator","h":"#1-简介","p":1036},{"i":1040,"t":"go get github.com/go-playground/validator/v10","s":"2. 安装","u":"/docs/note/golang/validator","h":"#2-安装","p":1036},{"i":1042,"t":"package main import ( \"fmt\" \"github.com/go-playground/validator/v10\" ) type User struct { Name string `validate:\"required\"` Age int `validate:\"gte=18,lte=65\"` Email string `validate:\"required,email\"` } func main() { validate := validator.New() user := User{ Name: \"\", Age: 17, Email: \"invalid-email\", } err := validate.Struct(user) if err != nil { for _, err := range err.(validator.ValidationErrors) { fmt.Println(\"Validation error:\", err) } } else { fmt.Println(\"Validation passed\") } }","s":"3. 基本使用","u":"/docs/note/golang/validator","h":"#3-基本使用","p":1036},{"i":1044,"t":"标签 描述 required 必填字段 email 必须是合法的邮箱格式 gte=X 大于等于 X lte=X 小于等于 X min=X 字符串、切片、映射的最小长度 max=X 字符串、切片、映射的最大长度 len=X 长度必须等于 X url 必须是合法的 URL numeric 必须是数字 alphanum 仅允许字母和数字 alpha 仅允许字母 contains=X 必须包含 X 子串 startswith=X 必须以 X 开头 endswith=X 必须以 X 结尾 lowercase 必须为小写 uppercase 必须为大写 ipv4 必须是合法的 IPv4 地址 ipv6 必须是合法的 IPv6 地址 boolean 必须是布尔值 datetime=layout 必须是指定格式的日期时间 base64 必须是 Base64 编码格式 hexcolor 必须是十六进制颜色代码 uuid 必须是合法的 UUID json 必须是合法的 JSON 字符串 ascii 仅允许 ASCII 字符 printascii 仅允许可打印 ASCII 字符 multibyte 允许多字节字符 containsany=chars 必须包含 chars 中的至少一个字符 excludesall=chars 不能包含 chars 中的任何字符 excludes=X 不能包含 X 子串 isdefault 必须是字段类型的默认值 dive 用于切片或者map的验证","s":"4. 常见的内置验证标签","u":"/docs/note/golang/validator","h":"#4-常见的内置验证标签","p":1036},{"i":1046,"t":"可以自定义验证规则，例如验证字符串是否为 \"hello\": func helloValidator(fl validator.FieldLevel) bool { return fl.Field().String() == \"hello\" } func main() { validate := validator.New() validate.RegisterValidation(\"hello\", helloValidator) type Test struct { Msg string `validate:\"hello\"` } t := Test{Msg: \"world\"} err := validate.Struct(t) if err != nil { fmt.Println(\"Validation failed:\", err) } else { fmt.Println(\"Validation passed\") } }","s":"5. 自定义验证","u":"/docs/note/golang/validator","h":"#5-自定义验证","p":1036},{"i":1048,"t":"type Address struct { City string `validate:\"required\"` ZipCode string `validate:\"numeric\"` } type Person struct { Name string `validate:\"required\"` Age int `validate:\"gte=18\"` Address Address `validate:\"required\"` } required 关键字表示深入到嵌套结构体中进行验证。","s":"6. 结构体嵌套验证","u":"/docs/note/golang/validator","h":"#6-结构体嵌套验证","p":1036},{"i":1050,"t":"if err != nil { for _, e := range err.(validator.ValidationErrors) { fmt.Printf(\"Field %s failed on '%s' tag\\n\", e.Field(), e.Tag()) } }","s":"7. 处理错误信息","u":"/docs/note/golang/validator","h":"#7-处理错误信息","p":1036},{"i":1052,"t":"validator 提供了丰富的验证功能，适用于 Go 项目中的输入校验场景，可以结合 gin 或其他 Web 框架进行 API 参数验证，提高数据的可靠性。","s":"8. 结论","u":"/docs/note/golang/validator","h":"#8-结论","p":1036},{"i":1055,"t":"chroot 是一个 Linux 命令，用于将进程和其子进程的根目录（/）更改为指定的目录。换句话说，它改变了程序的根目录路径，使得程序无法访问更高层级的文件系统。常用于隔离环境、创建沙箱、进行系统恢复等场景。","s":"1. 概述","u":"/docs/note/os/chroot","h":"#1-概述","p":1053},{"i":1057,"t":"使用 chroot 命令时，指定的路径将成为新的根目录。进程运行时，文件系统的访问将相对于新根目录（chroot 目录）进行，系统的其他部分不可见。 chroot <new_root> [command] <new_root>：指定新的根目录。 [command]：可选的命令，表示在新的根目录环境中执行的命令。如果没有指定命令，则默认将会启动一个交互式 shell。","s":"2. 工作原理","u":"/docs/note/os/chroot","h":"#2-工作原理","p":1053},{"i":1060,"t":"sudo chroot /path/to/new_root 此命令将切换根目录到 /path/to/new_root，并启动一个交互式 shell。","s":"3.1. 进入 chroot 环境","u":"/docs/note/os/chroot","h":"#31-进入-chroot-环境","p":1053},{"i":1062,"t":"sudo chroot /path/to/new_root /bin/bash 在 /path/to/new_root 目录中执行 /bin/bash，并进入一个新的环境。","s":"3.2. 在 chroot 环境中执行命令","u":"/docs/note/os/chroot","h":"#32-在-chroot-环境中执行命令","p":1053},{"i":1064,"t":"创建新的根目录 sudo mkdir -p /path/to/new_root 挂载必要的虚拟文件系统 有些系统文件，如 /proc，需要在 chroot 环境中挂载。 sudo mount -t proc /proc /path/to/new_root/proc sudo mount -t sysfs /sys /path/to/new_root/sys sudo mount -o bind /dev /path/to/new_root/dev sudo mount -o bind /dev/pts /path/to/new_root/dev/pts 挂载 /proc、/sys、/dev 和 /dev/pts 等目录是为了确保进程能够正确访问和使用这些虚拟文件系统，它们提供了重要的系统信息和设备接口。如果没有这些挂载，某些程序或命令可能会失效，因为它们依赖于这些目录中的文件来获取系统状态或与硬件交互。 /proc 是一个虚拟文件系统，提供有关系统进程、内核信息以及其他运行时信息的数据。在 chroot 环境中，如果没有挂载 /proc，很多程序和命令（如 ps、top、free 等）就无法正常工作，因为它们依赖于 /proc 中的信息来获取关于当前系统和进程的状态。 /sys 也是一个虚拟文件系统，它提供了关于系统硬件、内核参数、设备状态等的动态信息。许多设备驱动程序和系统服务依赖于 /sys 中的文件来进行硬件管理和系统配置。没有挂载 /sys，某些程序可能无法获取硬件信息或无法与设备进行交互。 例如： 系统的 CPU 核心数 网络接口的配置 电池状态（在笔记本电脑上） /dev 目录包含了所有设备文件（如硬盘、终端、USB 设备等）。这些设备文件是用户空间程序与硬件设备交互的接口。对于在 chroot 环境中运行的程序来说，访问设备文件是必需的。 例如： /dev/sda：硬盘设备文件 /dev/null：丢弃数据的设备 /dev/tty：终端设备 如果没有挂载 /dev，程序就无法访问硬件设备，也无法与终端、网络接口等进行交互。 /dev/pts 目录是用于管理伪终端设备（pty）。它存储了与终端相关的设备文件，如 /dev/pts/0 等。这对于支持多用户、多终端系统非常重要，尤其是对于运行交互式 shell 和命令行程序的环境。 例如，当你使用 ssh 或 tmux 登录到系统时，终端设备通常是通过 /dev/pts 来表示的。如果没有挂载 /dev/pts，你将无法启动或使用交互式终端（比如在 chroot 环境中执行 bash 或 sh 命令时）。 安装必要的库和命令 确保在新的根目录中安装了所需的库和程序。你可能需要复制或挂载一些文件，来使 chroot 环境能够正常运行。 sudo cp /bin/bash /path/to/new_root/bin/ sudo cp /lib/x86_64-linux-gnu/libtinfo.so.6 /path/to/new_root/lib/x86_64-linux-gnu/ sudo cp /lib/x86_64-linux-gnu/libc.so.6 /path/to/new_root/lib/x86_64-linux-gnu/ 进入 chroot 环境 sudo chroot /path/to/new_root /bin/bash 此时你已经进入了一个新的 chroot 环境，根目录为 /path/to/new_root。","s":"4. 创建一个基本的 chroot 环境","u":"/docs/note/os/chroot","h":"#4-创建一个基本的-chroot-环境","p":1053},{"i":1067,"t":"当系统无法启动或损坏时，可以使用 chroot 来进入系统并修复问题。例如，通过 chroot 进入系统的根文件系统，重新安装引导程序或修复损坏的文件。 sudo mount /dev/sda1 /mnt sudo mount --bind /dev /mnt/dev sudo mount --bind /proc /mnt/proc sudo mount --bind /sys /mnt/sys sudo chroot /mnt","s":"5.1. 系统恢复","u":"/docs/note/os/chroot","h":"#51-系统恢复","p":1053},{"i":1069,"t":"chroot 可以用来创建一个受限的环境，限制某个进程只能访问特定目录。它常用于容器化技术的基础实现，尽管现代容器使用更强大的工具（如 Docker）来提供隔离。","s":"5.2. 隔离环境（Sandbox）","u":"/docs/note/os/chroot","h":"#52-隔离环境sandbox","p":1053},{"i":1071,"t":"在构建特定版本的程序或测试时，可以创建一个干净的环境，避免系统中现有软件包的影响。","s":"5.3. 软件包编译","u":"/docs/note/os/chroot","h":"#53-软件包编译","p":1053},{"i":1073,"t":"如果需要运行一个特定版本的程序，可以使用 chroot 来隔离旧版本的库和二进制文件。","s":"5.4. 运行特定版本的应用程序","u":"/docs/note/os/chroot","h":"#54-运行特定版本的应用程序","p":1053},{"i":1075,"t":"权限问题 chroot 需要具有足够的权限，通常只有 root 用户才能执行此操作。 安全性 chroot 只是提供了一种简单的隔离方式，并不能完全防止进程逃逸或访问敏感信息。更强的安全措施（如使用 namespaces 或 containers）应该用于高安全性需求的环境。 文件系统依赖 某些进程需要特定的系统文件（如 /dev, /proc, /sys 等）。如果没有挂载这些虚拟文件系统，程序可能会崩溃或无法正常工作。 无法逃逸 chroot 本身并不能防止进程从 chroot 环境中逃逸，因此对于高安全性要求的场景（如沙箱、容器）不推荐单独依赖 chroot。","s":"6. 注意事项","u":"/docs/note/os/chroot","h":"#6-注意事项","p":1053},{"i":1077,"t":"chroot 是一个强大的工具，用于将进程隔离在特定的目录树中。它在系统恢复、隔离测试、构建环境等方面非常有用。然而，它并不是一个完美的安全隔离工具，现代容器化技术提供了更强的隔离和安全性。 你可以根据需求扩展文档的内容，如添加更详细的安全性讨论、使用示例等。","s":"7. 总结","u":"/docs/note/os/chroot","h":"#7-总结","p":1053},{"i":1080,"t":"golang.org/x/sys/unix 是 Go 官方提供的一个扩展包，专门用于执行 Unix/Linux 相关的系统调用。它是 syscall 包的替代方案，提供更丰富的功能，并保持持续维护和更新。","s":"1. 简介","u":"/docs/note/golang/syscall","h":"#1-简介","p":1078},{"i":1082,"t":"sys 不是 Go 标准库的一部分，需要手动安装： go get golang.org/x/sys/unix","s":"2. 安装","u":"/docs/note/golang/syscall","h":"#2-安装","p":1078},{"i":1085,"t":"golang.org/x/sys/unix 是 Go 官方提供的一个扩展包，专门用于执行 Unix/Linux 相关的系统调用。它是 syscall 包的替代方案，提供更丰富的功能，并保持持续维护和更新。","s":"1. 简介","u":"/docs/note/golang/syscall","h":"#1-简介-1","p":1078},{"i":1087,"t":"sys 不是 Go 标准库的一部分，需要手动安装： go get golang.org/x/sys/unix","s":"2. 安装","u":"/docs/note/golang/syscall","h":"#2-安装-1","p":1078},{"i":1090,"t":"package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { pid := unix.Getpid() fmt.Println(\"当前进程 ID:\", pid) ppid := unix.Getppid() fmt.Println(\"父进程 ID:\", ppid) }","s":"3.1 获取进程 ID","u":"/docs/note/golang/syscall","h":"#31-获取进程-id","p":1078},{"i":1092,"t":"3.2.1 使用 unix.Open 读取文件​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { fd, err := unix.Open(\"test.txt\", unix.O_RDONLY, 0) if err != nil { fmt.Println(\"打开文件失败:\", err) return } defer unix.Close(fd) var buf [100]byte n, err := unix.Read(fd, buf[:]) if err != nil { fmt.Println(\"读取文件失败:\", err) return } fmt.Println(\"文件内容:\", string(buf[:n])) }","s":"3.2 文件操作","u":"/docs/note/golang/syscall","h":"#32-文件操作","p":1078},{"i":1094,"t":"3.3.1 创建子进程​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { binary := \"/bin/ls\" args := []string{\"ls\", \"-l\"} err := unix.Exec(binary, args, nil) if err != nil { fmt.Println(\"执行失败:\", err) } }","s":"3.3 进程控制","u":"/docs/note/golang/syscall","h":"#33-进程控制","p":1078},{"i":1096,"t":"3.4.1 发送信号​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" \"time\" ) func main() { pid := unix.Getpid() fmt.Println(\"当前进程 ID:\", pid) go func() { time.Sleep(2 * time.Second) unix.Kill(pid, unix.SIGTERM) }() }","s":"3.4 信号处理","u":"/docs/note/golang/syscall","h":"#34-信号处理","p":1078},{"i":1098,"t":"3.5.1 mmap 映射文件​ package main import ( \"fmt\" \"os\" \"golang.org/x/sys/unix\" \"unsafe\" ) func main() { file, err := os.OpenFile(\"test.txt\", os.O_RDWR, 0666) if err != nil { fmt.Println(\"打开文件失败:\", err) return } defer file.Close() fi, _ := file.Stat() size := fi.Size() data, err := unix.Mmap(int(file.Fd()), 0, int(size), unix.PROT_READ, unix.MAP_SHARED) if err != nil { fmt.Println(\"mmap 失败:\", err) return } fmt.Println(\"文件内容:\", *(*string)(unsafe.Pointer(&data))) }","s":"3.5 内存管理","u":"/docs/note/golang/syscall","h":"#35-内存管理","p":1078},{"i":1100,"t":"功能 syscall (已废弃) x/sys/unix (推荐) 进程管理 ✅ ✅ 文件操作 ✅ ✅ 信号处理 ✅ ✅ 兼容性 ❌ 仅限 Linux/macOS/Windows ✅ 跨平台更好 未来维护 ❌ 停止维护 ✅ 推荐使用 示例（x/sys/unix 替代 syscall）： import \"golang.org/x/sys/unix\" func main() { unix.Getpid() // 替代 syscall.Getpid() }","s":"4. unix 作为 syscall 的替代方案","u":"/docs/note/golang/syscall","h":"#4-unix-作为-syscall-的替代方案","p":1078},{"i":1102,"t":"syscall 适用于低级系统调用，但已被废弃。 建议使用 golang.org/x/sys/unix，因为 syscall 不再维护。 适用于需要直接操作系统资源（如 mmap、fork、exec、signal）。 不适用于一般应用开发，Go 提供的标准库 os、io、net 足够大多数场景。","s":"5. 结论","u":"/docs/note/golang/syscall","h":"#5-结论","p":1078},{"i":1104,"t":"官方文档 GitHub 代码库","s":"6. 参考","u":"/docs/note/golang/syscall","h":"#6-参考","p":1078},{"i":1107,"t":"package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { pid := unix.Getpid() fmt.Println(\"当前进程 ID:\", pid) ppid := unix.Getppid() fmt.Println(\"父进程 ID:\", ppid) }","s":"3.1 获取进程 ID","u":"/docs/note/golang/syscall","h":"#31-获取进程-id-1","p":1078},{"i":1109,"t":"3.2.1 使用 unix.Open 读取文件​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { fd, err := unix.Open(\"test.txt\", unix.O_RDONLY, 0) if err != nil { fmt.Println(\"打开文件失败:\", err) return } defer unix.Close(fd) var buf [100]byte n, err := unix.Read(fd, buf[:]) if err != nil { fmt.Println(\"读取文件失败:\", err) return } fmt.Println(\"文件内容:\", string(buf[:n])) }","s":"3.2 文件操作","u":"/docs/note/golang/syscall","h":"#32-文件操作-1","p":1078},{"i":1111,"t":"3.3.1 创建子进程​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { binary := \"/bin/ls\" args := []string{\"ls\", \"-l\"} err := unix.Exec(binary, args, nil) if err != nil { fmt.Println(\"执行失败:\", err) } }","s":"3.3 进程控制","u":"/docs/note/golang/syscall","h":"#33-进程控制-1","p":1078},{"i":1113,"t":"3.4.1 发送信号​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" \"time\" ) func main() { pid := unix.Getpid() fmt.Println(\"当前进程 ID:\", pid) go func() { time.Sleep(2 * time.Second) unix.Kill(pid, unix.SIGTERM) }() }","s":"3.4 信号处理","u":"/docs/note/golang/syscall","h":"#34-信号处理-1","p":1078},{"i":1115,"t":"3.5.1 mmap 映射文件​ package main import ( \"fmt\" \"os\" \"golang.org/x/sys/unix\" \"unsafe\" ) func main() { file, err := os.OpenFile(\"test.txt\", os.O_RDWR, 0666) if err != nil { fmt.Println(\"打开文件失败:\", err) return } defer file.Close() fi, _ := file.Stat() size := fi.Size() data, err := unix.Mmap(int(file.Fd()), 0, int(size), unix.PROT_READ, unix.MAP_SHARED) if err != nil { fmt.Println(\"mmap 失败:\", err) return } fmt.Println(\"文件内容:\", *(*string)(unsafe.Pointer(&data))) }","s":"3.5 内存管理","u":"/docs/note/golang/syscall","h":"#35-内存管理-1","p":1078},{"i":1117,"t":"功能 syscall (已废弃) x/sys/unix (推荐) 进程管理 ✅ ✅ 文件操作 ✅ ✅ 信号处理 ✅ ✅ 兼容性 ❌ 仅限 Linux/macOS/Windows ✅ 跨平台更好 未来维护 ❌ 停止维护 ✅ 推荐使用 示例（x/sys/unix 替代 syscall）： import \"golang.org/x/sys/unix\" func main() { unix.Getpid() // 替代 syscall.Getpid() }","s":"4. unix 作为 syscall 的替代方案","u":"/docs/note/golang/syscall","h":"#4-unix-作为-syscall-的替代方案-1","p":1078},{"i":1119,"t":"syscall 适用于低级系统调用，但已被废弃。 建议使用 golang.org/x/sys/unix，因为 syscall 不再维护。 适用于需要直接操作系统资源（如 mmap、fork、exec、signal）。 不适用于一般应用开发，Go 提供的标准库 os、io、net 足够大多数场景。","s":"5. 结论","u":"/docs/note/golang/syscall","h":"#5-结论-1","p":1078},{"i":1121,"t":"官方文档 GitHub 代码库","s":"6. 参考","u":"/docs/note/golang/syscall","h":"#6-参考-1","p":1078},{"i":1124,"t":"GDB（GNU Debugger）是一个强大的调试工具，广泛用于调试C、C++、Fortran等编程语言编写的程序。GDB可以在程序运行时执行控制，帮助开发人员诊断程序中的错误。","s":"1. GDB 概述","u":"/docs/note/os/debug/gdb","h":"#1-gdb-概述","p":1122},{"i":1126,"t":"GDB 是由 Free Software Foundation 开发和维护的，最早由 Richard Stallman 和 Roland H. Pesch 在 1986 年开始设计。如今，GDB已经成为Linux及其他操作系统上最广泛使用的调试工具。","s":"1.1 GDB的历史和发展","u":"/docs/note/os/debug/gdb","h":"#11-gdb的历史和发展","p":1122},{"i":1128,"t":"软件开发：用于程序调试和性能优化 嵌入式开发：调试在嵌入式系统上运行的应用程序 远程调试：通过网络调试远程机器上的程序 多线程调试：在多线程环境下调试并发问题","s":"1.2 GDB应用场景","u":"/docs/note/os/debug/gdb","h":"#12-gdb应用场景","p":1122},{"i":1131,"t":"yum install gdb","s":"2.1 使用包管理器安装","u":"/docs/note/os/debug/gdb","h":"#21-使用包管理器安装","p":1122},{"i":1133,"t":"（TODO：添加源码编译详细步骤）","s":"2.2 源码编译安装","u":"/docs/note/os/debug/gdb","h":"#22-源码编译安装","p":1122},{"i":1136,"t":"# 启动 GDB 调试指定程序 $ gdb <your_program> # 启动程序执行 `run`后面的参数会像进程正常执行一样传递给进程。通常，我们会在设置好断点之后。执行此命令 (gdb) run","s":"3.1 启动GDB","u":"/docs/note/os/debug/gdb","h":"#31-启动gdb","p":1122},{"i":1138,"t":"# 方法1：直接传参 (gdb) run arg1 arg2 arg3 # 方法2：预设参数 (gdb) set args arg1 arg2 arg3 (gdb) run # 方法3：修改参数 (gdb) set args new_arg1 new_arg2","s":"3.2 调试带参数的程序","u":"/docs/note/os/debug/gdb","h":"#32-调试带参数的程序","p":1122},{"i":1140,"t":"# 可以直接-p 指定pid $ gdb -p pid # 也可以启动gdb 后，attach pid $ gdb -q (gdb) <pid>","s":"3.3 调试运行中的进程","u":"/docs/note/os/debug/gdb","h":"#33-调试运行中的进程","p":1122},{"i":1142,"t":"命令 功能描述 b/break 设置断点 r/run 开始程序运行 start 在main函数开始前停止 c/continue 继续执行直到下一个断点 n/next 单步执行(不进入函数) s/step 单步执行(进入函数) p/print 打印变量的值 l/list 查看源代码 bt/backtrace 显示调用栈 until location 执行到指定位置 fini/finish 执行完成当前函数 q/quit 退出gdb","s":"3.4 基本调试命令","u":"/docs/note/os/debug/gdb","h":"#34-基本调试命令","p":1122},{"i":1144,"t":"通过 break 命令在特定位置设置断点（如函数或代码行）。 (gdb) break func_name # 设置函数断点 (gdb) break file.c:line # 设置文件行断点 (gdb) break file:line if condition # 条件断点 (gdb) info breakpoints # 查看断点信息 (gdb) delete <num> # 删除指定断点","s":"3.5 断点管理","u":"/docs/note/os/debug/gdb","h":"#35-断点管理","p":1122},{"i":1146,"t":"(gdb) print var # 打印变量 (gdb) info locals # 显示局部变量 (gdb) info args # 显示函数参数 (gdb) set var = value # 修改变量值 (gdb) x/10x <addr> # 查看内存内容（16进制）","s":"3.6 变量与内存操作","u":"/docs/note/os/debug/gdb","h":"#36-变量与内存操作","p":1122},{"i":1148,"t":"(gdb) info registers # 查看所有寄存器的值 (gdb) print $eax # 查看特定寄存器（如 x86 架构） (gdb) p/x $eax # 十六进制显示寄存器值 (gdb) set $eax = 0x10 # 修改寄存器值 # 特殊寄存器 (gdb) info registers float # 浮点寄存器 (gdb) info registers vector # 向量寄存器 (gdb) info registers eflags # 标志寄存器 (gdb) x/i $pc # 查看栈指针指向的内存 (gdb) x/i $pc # 反汇编当前指令 (gdb) stepi # 单步执行一条汇编指令 使用 $<寄存器名> 可以访问 CPU 寄存器；$pc 表示程序计数器，$sp 表示栈指针，$fp 为帧指针。 在GDB内部，$pc 实际上是一个宏，会根据当前调试目标的架构自动映射到正确的寄存器： x86-64 → 映射到 $rip ARM → 映射到 $r15 或 $pc MIPS → 映射到 $pc 示例 $ # gdb -q ./a.out Reading symbols from ./a.out... (gdb) l 1 #include <signal.h> 2 #include <stdlib.h> 3 #include <stdio.h> 4 5 int main() { 6 int a; 7 a=10; 8 printf(\"Hello World\\n\"); 9 printf(\"%d\\n\",a); 10 return 0; (gdb) b 8 Breakpoint 1 at 0x401145: file main.c, line 8. (gdb) r Starting program: /home/a.out [Thread debugging using libthread_db enabled] Breakpoint 1, main () at main.c:8 8 printf(\"Hello World\\n\"); (gdb) p a $1 = 10 (gdb) info locals a = 10 (gdb) set var a=11 (gdb) p a $2 = 11 (gdb) p &a $3 = (int *) 0x7fffffffe23c (gdb) x 0x7fffffffe23c 0x7fffffffe23c: 0x0000000b (gdb) x/10x 0x7fffffffe23c 0x7fffffffe23c: 0x0000000b 0x00000001 0x00000000 0xf7c29590 0x7fffffffe24c: 0x00007fff 0x00000000 0x00000000 0x00401136 0x7fffffffe25c: 0x00000000 0x00000000 (gdb) n Hello World 9 printf(\"%d\\n\",a); (gdb) 11 10 return 0; (gdb)","s":"3.7 寄存器操作","u":"/docs/note/os/debug/gdb","h":"#37-寄存器操作","p":1122},{"i":1151,"t":"# 使用 `info inferior` 命令查看当前程序中的所有进程。 (gdb) info inferior # 使用 `inferior` 命令切换不同进程进行调试 (gdb) inferior <process_id> # `follow-fork-mode` 参数用来设置gdb跟踪父进程还是子进程 # `set follow-fork-mode parent` 在fork之后，调试父进程，这也是gdb的默认值 (gdb) set follow-fork-mode child/parent # gdb是否控制未调试的进程 # `set detach-on-fork on` gdb默认值，gdb不控制未调试的进 (gdb) set detach-on-fork on/off gdb 默认只会跟踪父进程。当断点处在子进程路径时，程序可能会直接执行结束退出。 此时，可以通过设置 set follow-fork-mode child 再执行 run运行调试。 也可以 break fork 断点到fork时。","s":"4.1 多进程调试","u":"/docs/note/os/debug/gdb","h":"#41-多进程调试","p":1122},{"i":1153,"t":"# 使用 `info threads` 命令查看当前程序中的所有线程。 (gdb) info threads # 使用 `thread` 命令切换到特定线程。 (gdb) thread thread_id (gdb) break location thread thread_id","s":"4.2 多线程调试","u":"/docs/note/os/debug/gdb","h":"#42-多线程调试","p":1122},{"i":1155,"t":"# 标记观察断点，监控数值更改（wirte） (gdb) watch expression or variable # 标记观察断点，监控数值读取（read） (gdb) rwatch expression or variable # 标记观察断点。同时监控数据读取与更改（read and write） (gdb) awatch expression or variable 示例 $ gdb -q a.out Reading symbols from a.out...done. (gdb) l 1 #include <stdio.h> 2 3 int get_sum(int n) { 4 int sum = 0, i; 5 for (i = 0; i < n; i++) { 6 sum += i; 7 } 8 return sum; 9 } 10 (gdb) b 6 Breakpoint 1 at 0x4005ad: file main.c, line 6. (gdb) r Starting program: /tmp/a.out Missing separate debuginfos, use: yum debuginfo-install glibc-2.28-164.el8.x86_64 Breakpoint 1, get_sum (n=100) at main.c:6 6 sum += i; (gdb) watch i==99 Hardware watchpoint 2: i==99 (gdb) clear 6 Deleted breakpoint 1 (gdb) c Continuing. Hardware watchpoint 2: i==99 Old value = 0 New value = 1 0x00000000004005b7 in get_sum (n=100) at main.c:5 5 for (i = 0; i < n; i++) { (gdb) p i $1 = 99 (gdb) p sum $2 = 4851","s":"4.3 观察点(Watchpoints)","u":"/docs/note/os/debug/gdb","h":"#43-观察点watchpoints","p":1122},{"i":1157,"t":"参考链接 # 用捕捉断点监控某一事件的发生，等同于在程序中该事件发生的位置打普通断点。 (gdb) catch event 普通断点作用于程序中的某一行，当程序运行至此行时停止执行，观察断点作用于某一变量或表达式，当该变量（表达式）的值发生改变时，程序暂停。而捕捉断点的作用是，监控程序中某一事件的发生，例如程序发生某种异常时、某一动态库被加载时等等，一旦目标时间发生，则程序停止执行。","s":"4.4 捕获点(Catchpoints)","u":"/docs/note/os/debug/gdb","h":"#44-捕获点catchpoints","p":1122},{"i":1159,"t":"# 使用 `source` 命令执行 GDB 脚本，实现自动化调试。 (gdb) source <script_file>","s":"4.5 自动化调试","u":"/docs/note/os/debug/gdb","h":"#45-自动化调试","p":1122},{"i":1161,"t":"# GDB支持与远程系统调试，使用 `target remote` 命令连接远程程序。 (gdb) target remote <hostname>:<port>","s":"4.6 远程调试","u":"/docs/note/os/debug/gdb","h":"#46-远程调试","p":1122},{"i":1163,"t":"f 切换 (gdb) bt #0 add (low=1, high=10) at test1.c:5 #1 0x00000000004005e6 in main (argc=1, argv=0x7fffffffe408) at test1.c:12 (gdb) frame 1 #1 0x00000000004005e6 in main (argc=1, argv=0x7fffffffe408) at test1.c:12 12 result[0] = add(1,10); (gdb) f 1 #1 0x00000000004005e6 in main (argc=1, argv=0x7fffffffe408) at test1.c:12 12 result[0] = add(1,10); (gdb) i locals result = {-134224088, 32767, 0, 0}","s":"4.7 切换栈帧","u":"/docs/note/os/debug/gdb","h":"#47-切换栈帧","p":1122},{"i":1166,"t":"# -O0禁用优化，可以帮助调试代码 gcc -O0 -g program.c -o program","s":"5.1 编译时添加调试信息","u":"/docs/note/os/debug/gdb","h":"#51-编译时添加调试信息","p":1122},{"i":1168,"t":"# 拷贝elf中的调试信息到debug文件 objcopy --only-keep-debug program program.debug # 瘦身二进制程序 strip --strip-debug program","s":"5.2 分离调试信息","u":"/docs/note/os/debug/gdb","h":"#52-分离调试信息","p":1122},{"i":1170,"t":"运行时加载 (gdb) symbol-file program.debug 提前做好关联，无需运行时加载 $ objcopy --add-gnu-debuglink=program.debug program $ objdump -s -j .gnu_debuglink program program: file format elf64-x86-64 Contents of section .gnu_debuglink: 0000 70726f67 72616d2e 64656275 67000000 program.debug... 0010 cb07fc34","s":"5.3 加载调试信息","u":"/docs/note/os/debug/gdb","h":"#53-加载调试信息","p":1122},{"i":1173,"t":"(gdb) run (gdb) bt","s":"6.1 段错误调试","u":"/docs/note/os/debug/gdb","h":"#61-段错误调试","p":1122},{"i":1175,"t":"（结合valgrind使用）","s":"6.2 内存泄漏检查","u":"/docs/note/os/debug/gdb","h":"#62-内存泄漏检查","p":1122},{"i":1177,"t":"（多线程调试示例）","s":"6.3 死锁检测","u":"/docs/note/os/debug/gdb","h":"#63-死锁检测","p":1122},{"i":1180,"t":"GDB通过ptrace系统调用实现进程控制： long ptrace(enum __ptrace_request request, pid_t pid, void *addr, void *data);","s":"7.1 ptrace系统调用","u":"/docs/note/os/debug/gdb","h":"#71-ptrace系统调用","p":1122},{"i":1182,"t":"将断点处指令替换为int 3 保存原始指令 触发SIGTRAP信号","s":"7.2 断点实现原理","u":"/docs/note/os/debug/gdb","h":"#72-断点实现原理","p":1122},{"i":1184,"t":"GNU GDB官方文档 《The Art of Debugging with GDB, DDD, and Eclipse》 GDB Cheat Sheet","s":"8. 参考资源","u":"/docs/note/os/debug/gdb","h":"#8-参考资源","p":1122},{"i":1186,"t":"孤儿进程： 父亲先死，儿子被1号收养。 僵尸进程：儿子先死，父亲不管不顾。","s":"僵尸进程","u":"/docs/note/os/zombie","h":"","p":1185},{"i":1188,"t":"top查看是否有僵尸进程 通过命令查询僵尸进程在哪 ps -A -ostat,ppid,pid,cmd | grep -e '^[Zz]' # 命令注解： # -A 参数列出所有进程 # -o 自定义输出字段 我们设定显示字段为 stat（状态）, ppid（进程父id）, pid(进程id)，cmd（命令）这四个参数 # 因为状态为 z或者Z的进程为僵尸进程，所以我们使用grep抓取stat状态为zZ进程","s":"查杀僵尸进程","u":"/docs/note/os/zombie","h":"#查杀僵尸进程","p":1185},{"i":1191,"t":"通过sleep时间，控制父亲先死，此时儿子被1号孤儿院收养。可以通过 ps查看，a.out的父进程变成了 1 #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <sys/wait.h> int main() { pid_t pid = fork(); // 创建子进程 if (pid < 0) { // fork失败 perror(\"fork failed\"); exit(EXIT_FAILURE); } else if (pid == 0) { // 子进程 printf(\"I am the child process with PID %d\\n\", getpid()); sleep(2000); // 让子进程运行一段时间 ，此时父亲已死。 printf(\"Child process exiting...\\n\"); exit(EXIT_SUCCESS); // 子进程退出 } else { // 父进程直接退出 printf(\"I am the parent process with PID %d and my child has PID %d\\n\", getpid(), pid); } return 0; }","s":"孤儿进程","u":"/docs/note/os/zombie","h":"#孤儿进程","p":1185},{"i":1192,"t":"通过sleep时间，控制子进程先死。但是，父进程不回收子进程。 #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <sys/wait.h> int main() { pid_t pid = fork(); // 创建子进程 if (pid < 0) { // fork失败 perror(\"fork failed\"); exit(EXIT_FAILURE); } else if (pid == 0) { // 子进程 printf(\"I am the child process with PID %d\\n\", getpid()); sleep(2); // 让子进程运行一段时间 printf(\"Child process exiting...\\n\"); exit(EXIT_SUCCESS); // 子进程退出 } else { // 父进程 printf(\"I am the parent process with PID %d and my child has PID %d\\n\", getpid(), pid); // 注意：这里父进程没有调用wait()或waitpid()，所以子进程会变成僵尸进程 sleep(10000); } return 0; } 查询僵尸进程 $ ps -A -ostat,ppid,pid,cmd | grep -e '^[Zz]' Z+ 933981 933982 [a.out] <defunct> $ ps -ef | grep a.out root 933981 933844 0 11:11 pts/4 00:00:00 ./a.out root 933982 933981 0 11:11 pts/4 00:00:00 [a.out] <defunct> root 934096 933897 0 11:13 pts/5 00:00:00 grep --color=auto a.out","s":"僵尸进程","u":"/docs/note/os/zombie","h":"#僵尸进程-1","p":1185},{"i":1194,"t":"#include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <signal.h> #include <sys/wait.h> // SIGCHLD 信号处理函数 void sigchld_handler(int signum) { // 使用 waitpid 非阻塞回收所有已终止的子进程 while (waitpid(-1, NULL, WNOHANG) > 0); } int main() { // 设置 SIGCHLD 信号处理函数 struct sigaction sa; sa.sa_handler = sigchld_handler; sigemptyset(&sa.sa_mask); sa.sa_flags = SA_RESTART; // 自动重启被中断的系统调用 if (sigaction(SIGCHLD, &sa, NULL) == -1) { perror(\"sigaction\"); exit(EXIT_FAILURE); } // 创建子进程 pid_t pid = fork(); if (pid < 0) { perror(\"fork\"); exit(EXIT_FAILURE); } if (pid == 0) { // 子进程 printf(\"子进程: PID = %d\\n\", getpid()); sleep(10); // 模拟子进程执行一些任务 printf(\"子进程结束: PID = %d\\n\", getpid()); exit(EXIT_SUCCESS); } else { // 父进程 printf(\"父进程: PID = %d, 子进程 PID = %d\\n\", getpid(), pid); // 父进程继续执行其他任务 for (int i = 0; i < 5; ++i) { printf(\"父进程正在工作...\\n\"); sleep(10000) } // 父进程结束前的收尾工作 printf(\"父进程结束: PID = %d\\n\", getpid()); } return 0; }","s":"回收儿子","u":"/docs/note/os/zombie","h":"#回收儿子","p":1185},{"i":1197,"t":"Unix Domain Socket (UDS) 是一种进程间通信(IPC)机制，特点： 仅限同一主机上的进程通信 通过文件系统路径标识 比TCP本地环回更快(绕过网络协议栈) 通过文件权限控制访问 优势： 高性能：比localhost TCP快约2倍 安全性：文件系统权限控制 资源占用少：无端口冲突问题","s":"1. Unix Socket 简介","u":"/docs/note/golang/web_server_unix","h":"#1-unix-socket-简介","p":1195},{"i":1200,"t":"package main import ( \"fmt\" \"log\" \"net\" \"net/http\" \"os\" \"os/signal\" \"syscall\" ) func main() { // 配置 socketPath := \"/tmp/http.sock\" // 清理旧socket if err := os.RemoveAll(socketPath); err != nil { log.Fatalf(\"清理socket失败: %v\", err) } // 创建监听器 listener, err := net.Listen(\"unix\", socketPath) if err != nil { log.Fatalf(\"监听失败: %v\", err) } defer func() { listener.Close() os.Remove(socketPath) }() // 设置文件权限(可选) if err := os.Chmod(socketPath, 0770); err != nil { log.Printf(\"设置权限失败: %v\", err) } // 注册路由 mux := http.NewServeMux() mux.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) { fmt.Fprintf(w, \"Hello from Unix Socket HTTP Server!\\n\") }) mux.HandleFunc(\"/health\", func(w http.ResponseWriter, r *http.Request) { w.WriteHeader(http.StatusOK) w.Write([]byte(\"OK\")) }) // 配置服务器 server := &http.Server{ Handler: mux, } // 优雅关闭 setupGracefulShutdown(server) // 启动服务 log.Printf(\"Server listening on unix socket: %s\", socketPath) if err := server.Serve(listener); err != nil && err != http.ErrServerClosed { log.Fatalf(\"服务异常: %v\", err) } } func setupGracefulShutdown(server *http.Server) { sigChan := make(chan os.Signal, 1) signal.Notify(sigChan, os.Interrupt, syscall.SIGTERM) go func() { <-sigChan log.Println(\"接收到终止信号，关闭服务器...\") if err := server.Close(); err != nil { log.Printf(\"服务器关闭错误: %v\", err) } }() }","s":"2.1 基础实现","u":"/docs/note/golang/web_server_unix","h":"#21-基础实现","p":1195},{"i":1202,"t":"// 在http.Server配置中添加 server := &http.Server{ Handler: mux, ReadTimeout: 10 * time.Second, WriteTimeout: 10 * time.Second, IdleTimeout: 60 * time.Second, }","s":"2.2 高级配置","u":"/docs/note/golang/web_server_unix","h":"#22-高级配置","p":1195},{"i":1205,"t":"package main import ( \"log\" \"net\" \"net/http\" \"os\" \"os/signal\" \"syscall\" \"time\" \"github.com/gin-gonic/gin\" ) func main() { // 配置 socketPath := \"/tmp/gin.sock\" // 清理旧socket if err := os.RemoveAll(socketPath); err != nil { log.Fatalf(\"清理socket失败: %v\", err) } // 创建监听器 listener, err := net.Listen(\"unix\", socketPath) if err != nil { log.Fatalf(\"监听失败: %v\", err) } defer func() { listener.Close() os.Remove(socketPath) }() // 设置文件权限 if err := os.Chmod(socketPath, 0770); err != nil { log.Printf(\"设置权限失败: %v\", err) } // 初始化Gin router := gin.New() // 中间件 router.Use(gin.Logger()) router.Use(gin.Recovery()) // 路由 router.GET(\"/\", func(c *gin.Context) { c.String(http.StatusOK, \"Hello from Gin Unix Socket Server!\") }) router.GET(\"/api/data\", func(c *gin.Context) { c.JSON(http.StatusOK, gin.H{ \"status\": \"success\", \"message\": \"Data retrieved\", \"data\": []string{\"item1\", \"item2\", \"item3\"}, }) }) // 配置服务器 server := &http.Server{ Handler: router, ReadTimeout: 10 * time.Second, WriteTimeout: 10 * time.Second, } // 优雅关闭 setupGracefulShutdown(server) // 启动服务 log.Printf(\"Gin server listening on unix socket: %s\", socketPath) if err := server.Serve(listener); err != nil && err != http.ErrServerClosed { log.Fatalf(\"服务异常: %v\", err) } }","s":"3.1 基础实现","u":"/docs/note/golang/web_server_unix","h":"#31-基础实现","p":1195},{"i":1207,"t":"// 在生产环境中使用ReleaseMode gin.SetMode(gin.ReleaseMode) // 添加健康检查端点 router.GET(\"/health\", func(c *gin.Context) { c.JSON(http.StatusOK, gin.H{\"status\": \"healthy\"}) }) // 添加监控中间件 router.Use(monitoringMiddleware()) func monitoringMiddleware() gin.HandlerFunc { return func(c *gin.Context) { start := time.Now() c.Next() duration := time.Since(start) log.Printf(\"请求 %s 耗时 %v\", c.Request.URL.Path, duration) } }","s":"3.2 生产环境建议","u":"/docs/note/golang/web_server_unix","h":"#32-生产环境建议","p":1195},{"i":1210,"t":"func main() { transport := &http.Transport{ Dial: func(_, _ string) (net.Conn, error) { return net.Dial(\"unix\", \"/tmp/http.sock\") }, } client := &http.Client{ Transport: transport, Timeout: 5 * time.Second, } resp, err := client.Get(\"http://unix/health\") if err != nil { log.Fatal(err) } defer resp.Body.Close() body, _ := io.ReadAll(resp.Body) fmt.Println(\"响应:\", string(body)) }","s":"4.1 标准HTTP客户端","u":"/docs/note/golang/web_server_unix","h":"#41-标准http客户端","p":1195},{"i":1212,"t":"func main() { conn, err := net.Dial(\"unix\", \"/tmp/http.sock\") if err != nil { log.Fatal(err) } defer conn.Close() // 构造HTTP请求 request := \"GET / HTTP/1.1\\r\\nHost: unix\\r\\n\\r\\n\" _, err = conn.Write([]byte(request)) if err != nil { log.Fatal(err) } // 读取响应 response, err := io.ReadAll(conn) if err != nil { log.Fatal(err) } fmt.Println(\"响应:\", string(response)) }","s":"4.2 通用Socket客户端","u":"/docs/note/golang/web_server_unix","h":"#42-通用socket客户端","p":1195},{"i":1214,"t":"连接池配置： transport := &http.Transport{ Dial: func(_, _ string) (net.Conn, error) { return net.Dial(\"unix\", socketPath) }, MaxIdleConns: 100, IdleConnTimeout: 90 * time.Second, TLSHandshakeTimeout: 10 * time.Second, } Gin性能优化： 使用gin.SetMode(gin.ReleaseMode) 避免在热路径中使用反射 使用c.AbortWithStatus()而不是return来终止请求 服务器配置： 适当调整ReadTimeout和WriteTimeout 考虑使用http.TimeoutHandler添加全局超时 监控指标： 添加Prometheus或OpenTelemetry监控 记录请求延迟和错误率","s":"5. 性能优化建议","u":"/docs/note/golang/web_server_unix","h":"#5-性能优化建议","p":1195},{"i":1216,"t":"Q1: 如何调试Unix Socket通信问题？ A1: 使用nc -U /tmp/your.sock测试基本连接 检查socket文件权限ls -l /tmp/your.sock 使用strace跟踪系统调用 Q2: 如何处理\"address already in use\"错误？ A2: 确保程序退出时删除socket文件 添加错误处理自动清理旧socket 使用lsof -U | grep your.sock查找占用进程 Q3: 如何限制客户端访问？ A3: 设置严格的文件权限(如0700) 使用系统组权限控制 在应用层添加认证 Q4: Unix Socket与TCP性能对比如何？ A4: 延迟降低约30-50% 吞吐量提高约20-30% CPU使用率降低约10-20%","s":"6. 常见问题解答","u":"/docs/note/golang/web_server_unix","h":"#6-常见问题解答","p":1195},{"i":1218,"t":"容器间通信： Docker/Kubernetes环境中容器间高效通信 通过共享volume挂载socket文件 反向代理集成： server { listen 8080; location / { proxy_pass http://unix:/tmp/http.sock; } } 微服务架构： 同一主机上的服务间通信 替代gRPC的TCP传输 特权服务： 仅限本机访问的管理接口 高安全性要求的内部通信 高性能API网关： 网关与后端服务间的高速通道 减少网络协议栈开销","s":"7. 实际应用场景","u":"/docs/note/golang/web_server_unix","h":"#7-实际应用场景","p":1195},{"i":1220,"t":"Unix Socket为Golang服务提供了高性能的本地通信方案。无论是使用标准库还是Gin框架，实现起来都相对简单。关键注意点包括： 妥善管理socket文件生命周期 设置适当的文件权限 客户端使用正确的连接方式 生产环境添加适当的监控和日志 通过本培训文档，您应该能够： 理解Unix Socket的工作原理 实现基于Unix Socket的HTTP服务 编写对应的客户端代码 部署生产级Unix Socket服务 诊断常见问题","s":"总结","u":"/docs/note/golang/web_server_unix","h":"#总结","p":1195}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/5",[0,0.233,1,6.993,2,7.361,3,7.361,4,7.361,5,5.282,6,7.361]],["t/7",[0,0.233,1,6.993,2,7.361,3,7.361,4,7.361,5,5.282,6,7.361]],["t/9",[0,0.233,1,6.993,2,7.361,3,7.361,4,7.361,5,5.282,6,7.361]],["t/11",[7,7.207,8,10.771,9,10.771,10,8.391]],["t/13",[11,4.431,12,4.852,13,4.431,14,4.852,15,4.852,16,4.852,17,4.852,18,3.103,19,4.852,20,4.852,21,4.852,22,4.852,23,4.852,24,4.852,25,4.852,26,4.852,27,4.852,28,2.072,29,4.431,30,4.852,31,4.852,32,4.852,33,4.852,34,4.852,35,7.057,36,4.153,37,1.587,38,4.852,39,9.703,40,4.852,41,4.852,42,4.852,43,2.394,44,4.852,45,4.852,46,4.852,47,4.057,48,8.339,49,4.852,50,1.724,51,3.946,52,6.444,53,6.444,54,6.444,55,3.78,56,4.852,57,4.852,58,4.153,59,3.329,60,4.852,61,2.874,62,4.852,63,4.852,64,4.852,65,3.524,66,3.524,67,2.989,68,7.057,69,3.524,70,4.852,71,4.153,72,4.852,73,4.852,74,4.842,75,4.852,76,4.852,77,4.431,78,4.852,79,4.852,80,2.153,81,4.852,82,3.946,83,4.431,84,4.852,85,4.852,86,4.852,87,4.431,88,3.103,89,2.694,90,3.946,91,4.852,92,3.78,93,2.582,94,4.852,95,4.852,96,4.431,97,4.852,98,4.852,99,4.431,100,4.852]],["t/15",[82,8.317,101,8.457,102,8.457,103,7.722,104,8.457,105,8.754,106,3.828,107,8.457,108,8.457,109,8.457,110,7.722,111,7.722,112,5.962,113,4.222,114,8.457,115,8.457]],["t/17",[7,3.59,28,1.576,50,1.906,51,4.364,52,4.9,71,4.593,80,2.381,89,2.98,92,4.18,105,4.593,113,2.679,116,3.074,117,5.366,118,4.593,119,5.366,120,5.366,121,5.366,122,5.366,123,5.366,124,4.18,125,5.366,126,8.799,127,5.366,128,4.593,129,5.366,130,4.9,131,5.366,132,5.366,133,4.18,134,4.9,135,5.366,136,4.9,137,5.366,138,5.366,139,5.366,140,6.493,141,5.366,142,5.366,143,3.682,144,4.9,145,4.9,146,5.366,147,5.366,148,3.178,149,5.366,150,4.028,151,4.9,152,5.366,153,8.799,154,8.799,155,4.364,156,5.366,157,7.586,158,5.366,159,5.366,160,4.9,161,1.511,162,3.074,163,3.026,164,4.18,165,5.366,166,3.897,167,2.936,168,5.366,169,5.366,170,4.9,171,5.366,172,2.405,173,5.366,174,4.593,175,5.366,176,5.366,177,5.366,178,4.593,179,2.895,180,5.366,181,4.364,182,4.9,183,5.366]],["t/19",[11,6.345,13,6.345,28,2.041,69,7.299,82,8.172,103,10.076,124,5.413,163,3.918,184,6.949,185,6.345,186,5.947,187,6.949,188,2.97,189,6.949,190,4.352,191,5.65,192,6.949,193,6.949,194,6.949,195,6.949,196,6.949,197,6.949,198,6.949,199,6.949,200,4.768,201,6.949,202,6.949,203,6.345,204,6.949,205,6.345,206,6.949,207,6.345,208,6.949,209,6.949,210,6.345,211,6.949]],["t/21",[10,2.415,28,0.91,29,2.831,48,2.831,53,4.567,71,4.281,80,2.22,82,2.521,83,2.831,87,4.567,96,2.831,105,2.653,116,1.776,124,3.897,130,2.831,134,2.831,140,2.653,144,6.588,145,6.588,151,4.567,163,2.82,170,2.831,172,2.818,182,2.831,185,2.831,191,2.521,205,4.567,207,2.831,212,2.521,213,3.1,214,8.462,215,7.214,216,2.653,217,3.1,218,6.588,219,3.1,220,3.1,221,3.1,222,3.1,223,3.1,224,3.1,225,3.1,226,3.1,227,2.415,228,3.1,229,3.1,230,3.1,231,3.1,232,3.1,233,3.1,234,2.127,235,3.1,236,3.1,237,3.1,238,3.1,239,3.1,240,3.1,241,3.1,242,2.653,243,3.1,244,3.1,245,3.1,246,3.1,247,5.002,248,2.653,249,2.653,250,3.1,251,3.1,252,3.1,253,3.1,254,3.1,255,2.252,256,3.1,257,3.1,258,3.1,259,2.415,260,3.1,261,3.1,262,3.1,263,5.002,264,6.287,265,3.1,266,2.653,267,2.653,268,5.002,269,2.912,270,2.653,271,3.1,272,3.1,273,3.1,274,2.074,275,3.1,276,3.1,277,5.002,278,3.1,279,5.002,280,1.942,281,3.1,282,3.1,283,3.1,284,3.1,285,3.897,286,3.1,287,3.1,288,2.186,289,3.1,290,3.1,291,3.1,292,5.002,293,2.653,294,3.1,295,3.1,296,2.415,297,2.252,298,4.567,299,5.741,300,3.1,301,3.1,302,3.1,303,3.1,304,3.1,305,3.1,306,2.252,307,3.1,308,5.002,309,2.653,310,3.1,311,3.1,312,3.1,313,5.002,314,3.1,315,3.1,316,3.1,317,3.1,318,2.074,319,3.1,320,3.1,321,2.074,322,3.1,323,3.1,324,2.415,325,3.1,326,4.281,327,2.415,328,3.1,329,3.1,330,3.1,331,5.002,332,3.1,333,2.831,334,2.252,335,3.1,336,3.1,337,3.1,338,3.1,339,3.1,340,3.1,341,2.521,342,3.1,343,2.653,344,1.607,345,2.653,346,3.1,347,3.1,348,4.281,349,3.1,350,3.1,351,3.1,352,3.1,353,1.403,354,3.1,355,2.415,356,3.1,357,3.1,358,3.1,359,3.1,360,3.1,361,2.831,362,2.831,363,3.1]],["t/23",[7,4.216,43,3.109,47,3.073,80,2.796,124,4.908,140,5.393,163,3.552,172,2.824,218,8.743,321,4.216,364,6.3,365,6.3,366,3.798,367,6.3,368,8.474,369,6.3,370,9.575,371,6.3,372,6.3,373,6.3,374,6.3,375,10.24,376,5.419,377,6.3,378,3.87,379,8.474,380,6.3,381,6.3,382,6.3,383,5.753,384,4.576,385,6.3,386,4.029,387,6.3,388,6.3,389,5.753,390,6.3,391,6.3,392,6.3,393,6.3,394,5.123,395,5.753,396,6.3,397,2.693,398,6.3,399,6.3,400,6.3,401,6.3,402,6.3]],["t/26",[0,0.2,28,2.275,37,2.533,65,5.626,67,3.28,89,4.301,92,6.034,112,5.461,181,6.298,403,6.034,404,7.879,405,6.298,406,3.506,407,3.654,408,6.196,409,4.587,410,5.814,411,6.629,412,6.298,413,6.034,414,6.034,415,7.745,416,4.587,417,6.034,418,5.626]],["t/28",[37,2.439,67,4.008,89,4.143,167,4.082,172,4.241,341,6.067,403,5.812,404,7.695,405,6.067,407,4.465,409,4.418,419,6.067,420,6.308,421,7.695,422,6.385,423,6.385,424,6.067,425,5.418,426,5.6,427,5.035,428,5.26,429,3.377,430,3.188]],["t/31",[0,0.236,67,3.183,174,6.433,407,3.546,424,6.112,425,5.459,426,5.642,430,4.063,431,4.707,432,4.912,433,6.863,434,4.237,435,3.946]],["t/33",[0,0.234,67,4.147,407,3.108,420,5.358,425,6.34,426,6.553,430,3.731,431,4.126,432,4.306,436,4.784,437,3.697,438,5.638,439,4.848,440,3.414,441,3.971,442,3.714,443,3.835,444,4.52,445,5.357,446,4.784,447,5.638,448,6.587,449,5.132]],["t/36",[0,0.236,67,3.16,172,3.343,407,3.52,420,4.082,425,5.418,429,3.377,430,4.044,431,4.673,432,4.876,433,6.812,450,4.582,451,6.812,452,7.46]],["t/38",[0,0.235,37,2.086,61,3.778,67,3.619,80,2.831,89,3.543,93,3.395,172,2.859,407,3.01,420,4.676,423,5.461,425,4.634,427,4.547,428,4.498,430,3.652,431,3.996,432,4.17,439,4.745,440,3.306,450,3.919,451,5.826,453,5.461,454,5.188,455,2.424,456,6.38,457,4.97,458,4.634,459,6.38]],["t/40",[0,0.203,43,3.942,341,6.497,403,6.224,404,8.033,405,6.497,407,4.661,420,5.868,425,5.803,430,3.415,439,4.437,440,4.14,443,4.652,460,2.442,461,7.99,462,7.99,463,7.99,464,5.109]],["t/42",[0,0.206,61,3.953,67,3.729,80,2.962,89,3.706,167,4.819,172,3.946,341,5.427,389,6.094,403,5.199,404,7.16,405,5.427,407,4.649,411,5.712,420,5.393,423,5.712,424,5.427,425,6.395,426,5.01,427,3.551,429,3.021,430,2.852,439,3.706,445,5.427,460,1.65,465,4.023,466,5.712,467,6.094,468,2.729,469,5.712,470,4.099,471,4.847,472,3.255,473,5.712,474,5.01,475,5.199,476,3.953]],["t/46",[0,0.2,406,4.065,477,7.548,478,8.201,479,7.094,480,8.981,481,8.981]],["t/48",[0,0.201,37,2.963,150,6.802,413,7.059,430,3.873,435,4.757,460,2.24,477,6.063,482,5.032]],["t/50",[0,0.238,483,9.244]],["t/53",[0,0.2,28,2.637,47,4.381,422,7.687,429,4.065,430,3.838,484,10.602,485,4.848]],["t/55",[0,0.225]],["t/57",[0,0.235,486,4.613]],["t/60",[0,0.204,288,6.505,468,3.773,487,2.997,488,8.425,489,4.135,490,7.503]],["t/62",[0,0.21]],["t/64",[0,0.235,429,3.796,468,3.429,491,4.883,492,5.754,493,7.178]],["t/67",[37,3.017,460,2.281,485,4.925,488,8.425,494,6.031,495,3.943,496,5.667]],["t/69",[0,0.225]],["t/71",[0,0.203,446,6.641,485,4.181,495,4.579,497,6.863,498,7.435,499,9.143]],["t/73",[0,0.24,486,4.685]],["t/76",[93,5.095,500,7.46,501,4.67,502,8.744]],["t/78",[0,0.22]],["t/80",[0,0.233,503,6.446]],["t/83",[28,2.685,164,8.347,500,7.123,504,6.641,505,9.143,506,6.863,507,7.826,508,7.435]],["t/85",[0,0.21]],["t/87",[0,0.239,486,4.504,500,6.772,502,7.937,504,6.313,509,8.692]],["t/90",[28,2.786,494,6.2,504,6.89,510,7.714,511,8.662]],["t/92",[0,0.21]],["t/94",[0,0.235,486,4.613]],["t/97",[493,8.119,494,6.2,512,9.486,513,8.662,514,8.662]],["t/99",[0,0.21]],["t/101",[0,0.236,486,4.534]],["t/104",[0,0.173,28,2.685,494,5.976,504,6.641,511,9.784,514,8.349,515,9.143,516,9.143]],["t/106",[0,0.22]],["t/108",[0,0.237,486,4.419]],["t/110",[0,0.192,188,3.584,353,3.796,495,3.584,517,7.658,518,3.35,519,4.701,520,5.995,521,4.908,522,7.658,523,6.534,524,7.658,525,7.658]],["t/112",[518,3.152,519,4.423,520,5.24,521,4.618]],["t/115",[0,0.239,67,2.191,353,3.904,406,2.342,518,3.097,519,3.415,520,4.045,521,3.565,526,3.313,527,2.972,528,4.469,529,4.031,530,4.378,531,4.208,532,3.013]],["t/117",[0,0.239,161,2.569,353,4.129,527,2.832,533,2.032]],["t/119",[0,0.238,518,2.53,519,4.455,520,4.206,528,3.983,534,4.915]],["t/121",[0,0.238,535,3.853,536,4.437,537,2.798]],["t/123",[0,0.23,535,4.183,536,4.817,537,3.037,538,4.632]],["t/126",[0,0.19,487,2.68,518,2.716,521,3.979,530,4.886,539,4.886,540,5.52,541,5.275,542,4.119,543,4.306,544,7.533,545,4.803,546,4.886,547,7.533,548,3.851,549,5.167,550,5.275,551,4.119,552,5.392]],["t/129",[0,0.122,50,2.295,80,2.867,106,2.924,116,4.936,155,5.254,274,4.323,318,4.323,386,4.132,437,2.736,441,3.895,450,3.968,453,5.53,454,5.254,482,3.588,485,2.954,518,2.837,521,4.989,529,5.034,543,2.761,549,6.074,550,6.201,553,3.588,554,3.968,555,4.693,556,5.034,557,7.376,558,3.265,559,2.787,560,4.555,561,5.53,562,5.254,563,4.555,564,5.254,565,5.53,566,5.9,567,2.985,568,3.438,569,5.254,570,3.536,571,5.53,572,5.53,573,5.9,574,3.895,575,5.9]],["t/131",[0,0.226,428,5.546,460,1.944,518,3.22,520,4.304,521,3.793,548,3.672,549,4.927,550,5.03,554,4.831,558,3.975,568,5.206,570,4.304,576,4.185,577,5.263,578,5.546,579,4.742,580,4.658]],["t/134",[0,0.24,67,2.005,133,2.256,188,1.238,406,1.311,429,2.142,460,0.716,518,2.848,519,1.338,521,1.397,526,1.298,528,3.591,530,2.803,532,1.686,533,0.835,539,3.554,542,1.446,576,2.518,581,1.938,582,2.104,583,2.042,584,1.938,585,1.715,586,1.746,587,1.686,588,1.814,589,2.174,590,2.355,591,1.311,592,2.479,593,1.413,594,1.779,595,1.893]],["t/136",[0,0.241,518,1.402,519,1.968,521,2.055,528,2.208,532,2.481,596,2.01]],["t/138",[0,0.24,429,3.446,518,3.156,528,2.796,539,3.195,576,2.87,591,2.442,593,3.714,594,3.313,595,3.526,597,4.926]],["t/140",[0,0.237]],["t/142",[0,0.223,80,3.437,161,2.181,353,3.506,366,4.669,460,1.915,495,3.31,518,3.19,528,4.014,540,5.182,546,4.587,551,3.867,568,4.121,577,5.182,579,4.669,598,5.182,599,7.073,600,5.814,601,6.298,602,5.314,603,6.298,604,5.626]],["t/144",[0,0.225,28,2.224,93,4.029,106,3.427,366,4.565,376,4.842,428,5.338,440,4.95,518,2.492,535,3.652,536,4.205,537,2.651,539,4.484,542,3.781,548,3.535,558,3.826,568,5.083,578,5.338,605,6.914,606,6.914,607,3.736,608,4.029,609,3.019]],["t/147",[518,3.527,558,5.415,610,4.314,611,7.826,612,6.118,613,6.641,614,4.098]],["t/150",[0,0.241,67,2.147,128,1.958,353,1.036,376,1.463,407,1.835,460,0.566,489,1.025,494,1.496,518,2.992,520,1.252,526,2.68,528,2.015,530,2.303,539,2.303,548,1.068,558,1.156,577,1.531,595,1.496,610,2.821,615,2.344,616,1.709,617,3.551,618,1.025,619,2.668,620,3.029,621,1.332,622,2.089,623,1.405,624,2.089,625,1.861,626,1.958,627,2.089,628,1.613,629,1.718,630,1.861,631,1.613,632,1.531,633,1.861,634,1.116]],["t/152",[0,0.24,535,2.929,536,3.373,537,2.127]],["t/155",[37,2.552,397,3.336,472,3.807,487,2.535,495,3.336,518,3.205,520,4.271,521,3.764,530,4.622,579,4.705,610,3.682,614,3.498,616,3.431,635,6.347,636,7.127,637,6.68,638,6.347,639,4.889,640,6.347,641,6.081,642,5.577,643,7.127,644,4.045,645,4.794,646,6.347,647,4.991]],["t/158",[0,0.24,67,2.871,69,2.028,179,1.507,188,1.963,353,1.264,376,1.786,406,1.264,407,2.167,416,1.654,418,2.028,460,1.447,470,1.715,489,2.059,494,1.825,518,2.804,520,1.528,521,2.215,526,3.038,528,3.883,530,3.465,531,2.271,533,0.805,538,1.123,539,1.654,577,3.074,581,1.868,582,2.028,583,1.969,584,1.868,585,1.654,586,1.684,590,2.271,595,1.825,623,2.821,631,1.969,632,1.868,633,2.271,634,1.362,640,2.271,642,1.6,645,1.715,648,3.528,649,3.239,650,3.735,651,2.55,652,2.271,653,1.466,654,3.336,655,1.654,656,2.55]],["t/160",[0,0.24,519,3.318,521,3.464,528,2.576,532,2.894,534,3.179,657,3.411,658,4.539,659,4.539,660,3.873,661,2.61,662,4.042]],["t/162",[0,0.239]],["t/164",[0,0.24,50,2.083,518,1.93,526,2.627,535,2.828,536,3.256,537,2.053,576,3.12,635,4.768]],["t/166",[0,0.177,28,2.159,188,3.142,248,6.293,269,4.281,285,7.304,407,3.469,416,4.354,476,4.354,487,2.388,537,2.574,542,3.671,559,3.171,567,4.331,579,4.432,646,5.978,663,4.805,664,5.519,665,5.978,666,5.183,667,4.919,668,5.978,669,5.34,670,4.919,671,5.978,672,5.978,673,4.354,674,6.713,675,5.519,676,6.713,677,4.919,678,5.728,679,5.519]],["t/168",[0,0.204,161,2.599,188,3.943,410,6.926,537,3.231,680,6.926,681,7.503]],["t/170",[0,0.238,37,1.38,67,1.068,93,1.342,161,2.403,162,1.444,167,1.38,179,3.434,188,1.078,274,1.687,344,3.671,376,1.612,407,1.19,429,1.141,434,2.38,437,3.245,441,1.52,442,1.422,455,0.958,460,1.043,485,1.153,487,1.371,506,1.893,518,0.83,519,2.514,526,2.852,527,1.014,533,2.346,537,0.883,538,1.697,542,1.259,543,1.078,552,2.759,553,1.4,559,1.088,563,1.778,570,1.38,574,1.52,585,2.499,607,1.244,609,1.683,614,1.13,618,2.439,634,1.23,663,1.648,682,1.893,683,2.035,684,4.023,685,3.223,686,2.05,687,1.964,688,1.893,689,4.958,690,1.893,691,1.893,692,1.36,693,1.778,694,2.302,695,2.302,696,1.203,697,1.893,698,1.493,699,3.837,700,2.302,701,2.158,702,2.05,703,1.23,704,2.302,705,5.554,706,4.487,707,5.176,708,6.469,709,3.612,710,3.854,711,1.612,712,2.05,713,2.302,714,1.612,715,1.778,716,2.158,717,1.29]],["t/172",[0,0.224,179,3.995,227,5.769,397,3.165,407,3.494,409,4.386,487,2.406,496,4.549,537,2.593,538,3.787,543,4.026,559,3.194,596,3.494,609,2.952,673,4.386,718,5.231,719,4.465,720,3.789,721,4.549,722,4.955,723,6.022,724,6.762,725,6.022,726,5.221,727,4.639]],["t/174",[0,0.223,47,3.991,355,6.375,407,3.861,409,4.846,420,4.478,487,2.658,609,3.262,642,4.687,645,5.026,698,4.846,728,7.472,729,5.615,730,7.472,731,5.349,732,6.143,733,7.472]],["t/176",[0,0.215,407,3.924,460,2.056,472,4.057,495,3.555,552,5.437,579,5.014,609,3.316,616,3.656,649,5.864,734,6.48,735,5.014,736,5.014,737,7.595,738,6.244,739,7.595,740,4.843]],["t/178",[0,0.233,7,4.992,28,2.191,43,3.681,407,3.52,487,2.423,508,6.067,537,2.612,559,3.218,568,3.97,583,5.26,587,4.344,609,2.974,672,6.067,711,4.77,726,5.26,727,4.673,741,5.418,742,6.067,743,6.812]],["t/180",[0,0.229,28,2.24,106,3.453,269,4.442,406,3.453,407,3.599,501,3.721,545,4.442,596,3.599,609,3.041,693,5.378,735,4.599,736,4.599,744,6.966,745,6.53,746,6.966,747,8.764,748,5.541,749,4.005,750,4.236,751,6.966]],["t/182",[0,0.239,28,2.027,407,3.256,501,3.366,526,3.093,568,3.672,609,2.751,642,5.156,752,6.302]],["t/184",[0,0.241,161,0.166,164,0.46,344,0.306,386,0.377,420,0.323,429,0.267,430,0.252,435,0.31,460,0.146,472,0.288,487,0.367,495,0.252,496,0.362,527,0.237,550,0.377,559,0.487,563,0.416,587,0.344,610,0.278,612,0.755,657,0.405,703,0.288,718,0.328,719,0.356,741,0.429,753,0.405,754,0.362,755,0.539,756,0.443,757,0.35,758,0.505,759,0.48,760,0.377,761,0.362,762,0.285,763,0.328,764,0.377,765,0.46]],["t/186",[0,0.23,148,4.886,161,2.323,269,4.803,538,4.05,555,5.992,589,6.193,610,3.892,683,3.979,686,6.709,687,6.427,766,5.067]],["t/188",[0,0.224,28,2.191,148,4.418,188,3.188,190,4.673,191,6.067,487,2.423,537,2.612,542,3.725,567,3.446,587,4.344,668,6.067,670,4.992,671,6.067,703,3.639,725,6.067,729,5.119,748,5.418,749,3.917,767,4.273,768,5.119,769,5.26,770,6.067,771,6.812,772,6.812,773,6.812,774,4.992]],["t/191",[321,6.347,437,4.017,495,4.054,518,3.122,558,4.794]],["t/194",[0,0.241,37,0.877,67,2.409,188,1.146,321,1.794,353,2.011,437,2.801,460,1.406,489,1.202,518,2.881,533,1.281,539,2.631,576,2.364,581,1.794,582,1.948,583,1.891,584,1.794,585,1.588,593,1.308,594,1.647,615,1.617,616,1.179,632,1.794,683,1.293,718,1.489,775,3.613,776,1.467,777,2.181,778,2.181]],["t/196",[0,0.231,161,2.485,353,3.994,437,3.737,518,2.905,527,3.548]],["t/198",[0,0.24,535,2.702,536,3.112,537,1.962]],["t/201",[0,0.223,7,5.854,161,2.464,489,3.921,518,2.88,527,3.517,653,4.593,779,4.72,780,7.488,781,7.488]],["t/203",[0,0.211,37,2.37,47,3.535,50,3.3,93,3.856,113,3.618,334,5.263,487,3.018,491,4.219,519,3.348,520,5.084,521,4.48,586,6.181,653,3.805,655,5.502,779,3.91,782,6.617,783,6.617,784,8.483,785,6.617,786,6.617,787,5.893,788,6.617,789,6.203,790,5.893,791,5.646]],["t/205",[0,0.24,67,2.273,90,4.364,353,4.329,406,2.429,489,3.943,518,1.766,521,2.588,528,3.931,530,3.178,586,3.235,655,3.178,779,2.895,792,5.348]],["t/207",[0,0.24,161,1.38,353,3.217,489,2.195,518,1.613,519,2.263,521,3.427,528,2.539,532,2.852,533,1.413,661,2.572,662,3.984,779,2.643]],["t/209",[0,0.239,535,3.398,536,3.912,537,2.467]],["t/212",[353,4.065,495,3.838,518,3.49,610,5.002,754,5.516,793,5.625,794,8.622,795,5.516]],["t/215",[0,0.241,161,1.101,460,0.403,485,1.325,518,1.785,533,0.836,610,2.559,615,0.984,653,0.857,654,2.105,692,0.88,718,0.906,794,1.327,795,1.78,796,1.067,797,1.225,798,2.176,799,1.185,800,1.271,801,1.271]],["t/217",[0,0.239,161,2.086,533,2.136,610,3.494]],["t/219",[0,0.234,485,4.517,518,3.252,754,4.907,793,6.717,799,5.803,802,7.296,803,7.296]],["t/221",[0,0.241,535,1.98,536,2.28,537,1.437]],["t/224",[0,0.215,106,3.479,429,3.479,468,3.143,477,5.143,486,3.983,487,2.497,495,3.285,518,3.637,521,3.707,533,2.217,596,4.55,645,4.721,754,4.721,793,4.815,804,6.251,805,7.019,806,6.579,807,8.254,808,7.019,809,6.251]],["t/227",[0,0.241,161,0.681,353,1.845,406,1.095,485,1.864,518,2.759,548,1.129,576,2.169,593,1.18,594,2.504,615,1.458,632,1.619,653,1.27,718,1.343,777,1.967,778,1.967,793,1.515,796,2.664,800,1.885,810,2.209]],["t/229",[0,0.241,28,1.099,161,1.054,188,1.599,460,0.925,518,1.911,527,1.504,596,1.765]],["t/231",[0,0.239,409,4.115,485,4.134,518,2.976,754,4.268,793,6.295,811,3.98]],["t/233",[0,0.241,535,1.663,536,1.915,537,1.208]],["t/235",[518,3.152,602,6.57,610,4.518,812,8.196]],["t/237",[0,0.148,28,2.292,43,3.851,93,4.153,376,4.991,397,4.161,468,3.191,485,3.569,495,3.336,518,3.657,576,4.153,610,5.006,779,4.211,792,5.503,793,4.889,795,4.794,797,5.859,798,5.859,801,6.081,813,8.89,814,6.68]],["t/240",[0,0.23,468,3.487,479,5.706,492,5.851,500,6.644,609,3.4,776,4.667,795,5.238,799,6.194,815,7.299]],["t/242",[0,0.241]],["t/245",[0,0.239]],["t/247",[0,0.24,37,1.326,58,3.471,93,2.158,161,1.739,162,2.323,167,3.379,353,1.836,378,2.491,426,3.044,460,1.527,495,1.733,518,2.462,527,1.63,533,1.781,535,1.956,576,2.158,610,3.528,612,2.714,632,2.714,683,1.956,798,5.614,816,2.859,817,2.54,818,3.703,819,4.811,820,2.323,821,3.298,822,3.703]],["t/249",[0,0.241,353,2.403,610,2.505,628,3.744,797,3.986]],["t/251",[0,0.24,28,1.673,37,2.587,460,1.409,491,3.318,527,2.291,823,5.203,824,5.203]],["t/253",[0,0.236,353,3.765,539,4.926,591,3.765,776,4.552,795,5.109]],["t/255",[0,0.241,535,1.988,536,2.289,537,1.443]],["t/258",[0,0.225,18,4.383,28,2.632,50,2.435,116,3.926,161,1.93,188,2.93,408,4.383,414,5.34,427,3.647,437,2.903,460,1.694,533,3.054,541,4.383,703,5.164,825,5.574,826,6.259,827,4.586,828,4.06,829,3.507,830,4.586,831,5.34,832,4.833,833,4.06,834,6.259,835,4.703,836,5.145,837,4.383,838,5.574,839,4.586]],["t/260",[5,4.831,43,3.881,161,2.215,255,5.713,327,6.128,408,5.03,437,3.331,455,2.988,460,1.944,470,4.831,472,3.837,527,3.162,533,3.213,553,4.368,828,5.794,829,5.006,839,5.263,840,7.182,841,6.396,842,5.904,843,6.396,844,5.904]],["t/263",[0,0.237,43,2.606,50,1.876,89,4.844,161,2.457,172,4.256,334,3.837,429,3.948,450,4.607,455,2.007,470,3.244,527,3.016,533,2.163,749,2.773,767,4.996,830,5.019,841,4.295,845,3.724,846,7.965,847,5.631,848,6.85,849,4.823,850,3.724,851,6.85,852,6.421]],["t/265",[0,0.24,5,3.58,37,1.906,161,1.642,427,3.102,434,3.287,455,2.215,533,2.318,720,2.983,844,4.376,853,4.11,854,4.11]],["t/268",[0,0.237]],["t/270",[0,0.235,67,3.642,455,3.267,533,2.48,855,6.993]],["t/272",[0,0.238,89,3.996,188,3.952,429,3.257,455,2.734,714,4.601,767,4.121,856,5.851,857,6.57]],["t/275",[0,0.24,828,5.215,858,5.427,859,6.094]],["t/277",[0,0.24,455,2.519,596,3.128,722,4.436,750,3.682]],["t/279",[43,3.793,161,2.716,172,3.445,386,4.915,408,4.915,434,5.437,455,3.664,470,4.721,527,4.236,532,4.475,533,2.781,537,2.692,584,5.143,618,3.445,766,4.721,811,4.403,828,4.552,830,5.143,845,5.419,860,5.77,861,7.019,862,7.019,863,7.019,864,7.019]],["t/281",[0,0.198,5,4.099,67,2.827,80,2.962,93,3.551,116,3.823,188,3.763,190,5.515,200,4.579,366,4.023,408,4.268,437,2.827,460,2.177,495,2.852,527,2.683,533,3.226,579,4.023,591,3.021,696,3.183,720,3.415,759,5.427,767,3.823,774,4.466,828,3.953,829,4.505,830,4.466,833,3.953,836,5.01,837,4.268,838,5.427,839,4.466,844,5.01,865,6.094,866,4.466,867,5.631,868,5.427,869,5.199]],["t/284",[0,0.229,28,2.857,36,5.566,37,2.126,167,3.558,378,3.994,450,3.994,455,2.471,485,3.957,487,2.112,533,1.875,541,4.158,618,4.36,703,5.059,721,3.994,723,5.288,769,4.585,827,4.351,833,3.851,870,5.288,871,5.938,872,3.786,873,5.938,874,3.558,875,5.316,876,5.938,877,5.066,878,5.938,879,5.288,880,4.881,881,5.938]],["t/286",[74,5.234,162,5.497,297,5.541,409,5.684,485,3.488,497,5.727,598,5.104,618,5.195,667,5.104,836,5.727,837,4.878,872,6.114,882,4.986,883,7.205,884,5.727,885,4.878,886,8.764,887,8.764]],["t/289",[0,0.238,67,2.542,161,2.309,297,4.359,409,3.554,450,3.686,485,2.744,533,1.731,696,2.863,703,2.927,749,3.151,835,4.118,847,4.505,885,3.838,888,4.016,889,6.668,890,4.881,891,4.881,892,4.505,893,6.668,894,3.838,895,4.881,896,4.881,897,4.118]],["t/291",[0,0.239,80,2.923,172,2.952,581,4.407,847,4.945,889,7.099,890,5.357,891,5.357,893,7.099,895,5.357,898,6.015,899,6.015,900,6.015]],["t/294",[0,0.239,80,2.557,161,2.246,162,3.301,344,4.132,458,4.186,465,3.474,526,3.573,675,4.326,888,3.856,892,4.326,894,3.685,897,3.954,901,7.281,902,4.933,903,5.262,904,6.484,905,5.262,906,3.954,907,3.54,908,4.686]],["t/296",[0,0.238,61,3.282,161,2.185,465,3.341,468,3.173,489,3.478,616,2.436,649,3.907,675,4.16,757,4.596,776,3.033,885,3.544,888,3.708,892,4.16,894,3.544,906,3.803,907,3.404,908,4.507,909,5.192,910,6.31,911,5.061,912,6.31,913,5.061]],["t/299",[0,0.238,378,3.894,412,5.155,460,1.567,607,3.128,720,3.244,721,3.894,875,3.894,914,5.789,915,7.77,916,7.77,917,4.605,918,7.77,919,7.77,920,7.77,921,7.77]],["t/301",[0,0.235,116,4.884,455,3.24,533,2.459,828,5.05]],["t/303",[0,0.176,468,3.798,485,4.944,567,4.291,596,4.838,776,5.611,922,9.256,923,5.893,924,9.875,925,6.617,926,4.972,927,6.617,928,6.556,929,6.203,930,5.44,931,5.263,932,5.44,933,6.617,934,4.634,935,4.849]],["t/305",[0,0.202,28,1.839,37,2.047,80,2.779,143,4.296,161,1.763,162,3.586,172,2.806,188,2.676,200,4.296,321,4.19,345,5.359,397,2.676,409,4.998,419,5.092,443,3.646,485,3.858,487,2.034,533,1.806,542,3.126,543,2.676,546,3.708,548,2.923,559,2.701,603,5.092,618,3.782,639,3.922,715,4.415,719,3.775,720,3.204,738,4.7,757,3.708,766,3.846,829,3.204,866,4.19,872,4.913,882,4.093,884,4.7,888,4.19,894,4.004,904,5.092,907,3.846,912,5.092,936,3.53,937,5.718,938,5.718,939,5.718,940,5.718,941,4.878,942,5.359,943,3.477,944,5.718]],["t/308",[0,0.224,28,2.62,89,3.781,161,1.917,324,5.304,437,4.764,487,2.212,533,1.964,541,4.354,570,4.882,685,4.032,696,4.746,703,5.151,827,4.556,829,5.403,833,4.032,936,3.839,945,5.537,946,6.217,947,4.45,948,4.556,949,7.255]],["t/310",[0,0.187,47,3.897,161,2.25,179,4.31,437,4.745,460,1.975,487,3.209,527,3.212,533,2.304,591,3.616,663,5.222,684,4.195,685,5.85,696,3.811,697,5.997,763,4.437,879,6.497,950,7.296,951,6.497]],["t/313",[0,0.237,161,1.843,437,4.133,545,3.81,570,4.757,574,3.946,616,3.82,683,4.707,684,3.436,749,3.436,766,4.02,909,4.379,926,4.49,947,4.278,948,4.379,952,4.614]],["t/315",[0,0.239,67,2.309,161,2.161,179,2.942,437,3.249,533,2.56,570,4.198,616,3.901,684,2.863,696,3.659,909,5.133,947,3.564,948,3.648,952,3.844]],["t/318",[0,0.239,234,4.609,344,3.481,470,4.126,614,3.011,689,5.234,717,3.437,875,4.126,943,3.731,953,5.75]],["t/320",[0,0.238,344,3.983,576,5.131,954,5.988,955,7.019]],["t/322",[0,0.238,37,2.439,67,3.16,161,2.101,533,2.152,634,3.639,855,6.067,877,5.812,956,6.812,957,6.812]],["t/325",[0,0.239,37,2.37,106,3.28,161,2.041,574,4.369,711,4.634]],["t/327",[0,0.24,161,1.867,526,2.971,684,3.481,714,4.24,750,3.682]],["t/329",[0,0.238,397,3.622,437,3.589,460,2.095,518,2.074,548,2.941,604,4.576,666,4.442,685,5.019,880,4.729,958,5.393,959,6.155,960,4.908,961,5.753,962,5.393]],["t/331",[28,2.175,59,5.081,274,4.955,437,3.989,455,2.814,460,1.831,485,3.386,501,3.612,537,2.593,538,3.787,543,3.165,559,3.194,580,4.386,585,4.386,692,3.995,699,6.641,711,4.736,712,6.022,766,6.362,811,5.395,850,5.221,882,4.841,963,6.022,964,5.221,965,6.762,966,6.762,967,5.559,968,6.762,969,6.762]],["t/333",[0,0.192,7,4.138,28,1.816,67,3.544,113,3.088,161,2.862,179,3.337,321,4.138,366,3.729,416,3.663,417,4.818,437,4.304,460,2.069,487,2.009,527,2.486,533,2.736,537,2.166,540,4.138,542,3.088,546,4.956,558,3.126,567,2.857,570,5.562,679,4.643,684,3.247,685,5.618,696,3.992,697,4.643,769,4.361,811,3.543,829,3.165,866,4.138,882,4.043,936,3.487,947,5.47,948,5.6,959,4.492,970,4.244,971,4.643,972,5.648]],["t/336",[0,0.239,37,1.026,43,1.549,47,1.531,50,1.115,59,3.466,69,3.669,80,1.393,106,1.421,188,1.341,274,2.1,406,2.286,420,3.469,430,1.341,431,1.966,457,2.445,460,1.249,472,1.531,487,2.36,489,1.407,495,1.341,519,1.45,526,2.264,532,1.827,533,0.905,550,2.007,558,1.586,568,1.67,580,1.859,587,1.827,593,1.531,594,1.928,614,2.264,618,1.407,623,1.928,644,2.618,650,2.552,655,3.755,661,2.652,692,1.693,717,1.606,750,2.805,756,2.356,760,4.054,761,3.894,762,1.514,820,1.798,837,2.007,943,1.743,973,2.866,974,3.562,975,2.213,976,4.108,977,2.28,978,2.866,979,2.866,980,2.213,981,2.356,982,2.552,983,2.552,984,1.77,985,2.445,986,2.866,987,2.28,988,2.866,989,2.866]],["t/339",[0,0.24,167,3.062,172,1.6,397,1.526,450,2.193,486,4.664,489,2.508,503,2.517,519,1.649,586,3.373,610,1.684,621,3.258,628,4.865,762,4.341,779,3.019,820,3.953,964,2.517,977,4.064,981,2.68,990,2.781,991,3.26,992,5.11,993,5.11,994,2.781,995,3.26,996,3.056,997,3.744,998,3.26,999,2.517]],["t/341",[0,0.24,89,1.59,143,1.965,148,2.777,344,1.484,420,2.566,430,1.224,431,1.794,444,1.965,464,3.808,487,0.93,489,1.283,495,1.224,519,1.323,526,1.283,527,1.151,554,1.759,593,1.397,614,2.101,616,1.259,628,2.019,644,1.484,647,1.831,655,1.696,661,1.503,682,3.52,705,3.73,717,1.465,726,2.019,727,1.794,750,2.604,760,2.999,761,4.228,762,3.32,764,1.831,943,1.59,976,3.813,980,2.019,987,2.08,1000,2.329,1001,2.615,1002,2.615,1003,2.15,1004,2.231,1005,5.354,1006,1.965,1007,2.15,1008,3.653,1009,2.019]],["t/343",[0,0.24,172,1.018,179,1.226,420,1.244,431,1.423,447,1.945,464,1.453,472,1.109,487,0.738,489,1.018,495,2.156,532,2.938,543,0.971,593,1.109,607,1.121,614,1.733,634,2.461,642,3.41,644,2.003,647,2.472,655,3.526,661,2.649,663,1.485,717,1.978,720,1.163,726,1.602,727,1.423,741,1.651,750,1.262,760,1.453,761,1.396,762,1.096,763,2.147,764,1.453,790,1.848,791,1.771,943,1.262,980,1.602,984,1.281,1003,1.706,1010,2.075,1011,1.945,1012,1.453,1013,2.075,1014,1.771,1015,2.075,1016,1.771,1017,5.199,1018,2.075,1019,2.075,1020,1.706,1021,2.075,1022,1.651,1023,2.075,1024,1.945,1025,2.902]],["t/345",[0,0.24,37,0.311,47,1.215,50,0.63,59,0.653,66,0.692,67,0.403,80,0.423,106,0.431,148,0.564,150,0.715,161,1.036,163,0.537,179,0.514,181,0.774,188,0.407,255,0.692,280,0.597,288,0.671,344,1.291,407,0.449,416,0.564,418,0.692,420,1.363,429,0.431,430,1.334,431,0.597,435,4.456,437,0.403,442,0.537,458,0.692,486,0.494,487,0.576,489,0.795,491,1.033,495,2.306,496,1.53,503,0.671,519,0.82,526,1.398,527,0.713,533,1.205,542,0.476,552,0.623,554,1.09,556,1.382,558,0.897,559,1.346,567,0.82,578,0.671,586,0.574,593,0.465,595,0.623,607,0.875,609,1.244,610,0.449,614,1.116,618,1.116,634,0.465,641,2.431,642,1.016,644,0.494,647,0.609,655,1.051,661,0.5,665,0.774,667,0.637,679,0.715,682,0.715,684,0.931,685,0.564,690,1.332,691,1.332,711,0.609,714,1.134,717,0.487,720,0.487,750,2.043,762,0.459,763,0.985,764,0.609,792,0.671,804,0.774,811,1.016,832,1.756,867,0.609,875,2.259,970,0.653,980,0.671,983,0.774,984,1,987,1.809,1003,0.715,1004,0.742,1012,0.609,1016,0.742,1026,0.742,1027,0.774,1028,0.774,1029,0.87,1030,0.87,1031,1.62,1032,0.87,1033,0.87,1034,0.87,1035,1.62,1036,0.87,1037,0.692,1038,0.815,1039,0.87,1040,1.62,1041,0.87,1042,0.692,1043,0.87,1044,2.849,1045,0.87,1046,0.87,1047,0.87,1048,2.025,1049,0.87]],["t/348",[0,0.227,28,2.667,50,3.582,188,2.99,306,5.082,441,4.218,442,5.12,510,5.689,541,4.474,553,5.043,554,4.297,570,4.97,670,4.681,703,5.205,827,4.681,829,4.647,831,5.451,833,4.144,936,3.945,1050,5.689,1051,5.252,1052,5.252,1053,4.573]],["t/351",[28,2.069,37,2.304,43,3.476,50,2.503,80,4.49,93,3.749,112,4.967,386,4.505,416,5.403,417,5.489,434,3.972,440,3.651,441,4.247,450,4.327,533,2.032,538,2.832,543,3.899,545,4.102,553,3.912,563,4.967,614,3.157,677,4.714,699,6.432,717,3.605,811,5.225,867,4.505,868,5.729,869,5.489,882,5.963,967,6.848,1020,5.288,1054,6.03,1055,6.433,1056,6.433]],["t/353",[50,3.055,61,5.093,112,6.063,476,5.093,537,3.011,538,3.457,543,4.416,545,5.007,738,6.456,766,6.346,811,4.926,850,6.063,967,6.456,1057,7.853]],["t/356",[0,0.238,28,1.497,43,2.515,344,4.431,434,2.873,497,3.825,519,3.378,526,2.284,543,2.178,549,5.356,553,2.83,558,2.575,585,3.018,591,2.307,614,2.284,706,5.155,717,2.608,749,2.676,843,4.144,845,3.593,894,3.259,896,4.144,952,6.029,954,3.97,1058,4.144,1059,5.155,1060,4.144,1061,4.362]],["t/358",[0,0.239,47,2.208,93,2.409,428,3.192,437,1.917,487,1.471,489,2.029,490,3.681,506,3.398,518,1.49,526,2.029,549,5.004,553,4.906,554,2.78,604,3.288,616,1.99,685,2.681,699,5.633,706,3.192,776,2.477,853,3.192,854,3.192,952,4.729,1052,3.398,1059,4.043,1060,3.681,1062,4.134,1063,4.134,1064,4.134,1065,3.192,1066,4.134]],["t/361",[0,0.238,533,2.341,839,5.432]],["t/363",[0,0.239]],["t/365",[0,0.237,43,3.229,427,3.482,441,3.946,519,3.023,553,3.634,616,3.82,705,4.099,740,3.81,845,4.614,853,4.614,854,4.614,856,5.322,867,4.185,909,4.379,926,4.49,1058,7.068,1067,4.757,1068,5.976,1069,4.379]],["t/368",[0,0.153,50,3.836,172,3.638,386,5.191,397,4.616,434,4.577,533,2.341,538,3.263,543,4.264,614,4.471,717,5.104,766,4.986,775,6.601,1070,7.413,1071,7.413,1072,7.413]],["t/370",[143,5.951,172,3.887,216,7.424,397,3.707,434,4.89,469,7.424,543,3.707,608,4.615,613,6.3,860,6.511,1073,7.795,1074,7.92,1075,7.92,1076,7.053]],["t/372",[0,0.211,28,2.128,50,3.3,92,5.646,161,2.616,188,3.097,437,3.069,472,3.535,474,5.44,476,4.292,487,2.354,533,2.679,537,2.538,559,3.126,614,4.163,664,5.44,685,4.292,717,4.753,720,3.708,721,4.451,768,4.972,839,4.849,885,4.634,1042,5.263,1053,4.737,1077,5.893,1078,6.617,1079,6.617,1080,6.617]],["t/375",[0,0.236,37,2.797,143,2.911,429,1.92,434,2.392,460,1.58,482,3.548,487,2.779,498,3.45,527,2.569,535,3.707,596,3.015,637,3.631,644,3.311,653,3.355,749,4.818,762,4.126,795,2.606,811,3.66,820,3.66,1022,3.081,1051,3.185,1081,5.835,1082,5.196,1083,4.243,1084,7.322,1085,7.019,1086,4.243,1087,9.176,1088,4.243,1089,4.243,1090,4.978,1091,4.243,1092,4.243,1093,4.243,1094,4.243,1095,3.305,1096,4.243,1097,3.874,1098,7.686,1099,4.243,1100,3.185,1101,4.243]],["t/378",[0,0.227,28,2.716,106,3.257,161,2.026,163,5.214,259,5.606,442,4.057,487,2.337,533,2.075,538,2.893,541,4.601,559,3.104,570,3.937,703,5.261,720,3.682,762,3.47,827,4.814,829,3.682,833,4.261,936,4.057,994,5.606,999,5.073,1067,3.937,1102,5.073,1103,5.851]],["t/380",[74,5.314,163,5.463,267,6.629,384,5.626,410,5.814,465,4.669,475,6.034,487,2.516,501,3.778,537,3.393,538,4.251,543,3.31,559,3.341,614,3.471,692,4.179,696,4.622,719,5.842,762,3.735,907,4.757,999,5.461,1042,5.626,1104,7.073,1105,7.073]],["t/383",[0,0.239,161,2.177,163,3.108,460,1.911,533,1.59,538,2.216,607,2.72,615,4.66,696,2.629,714,3.525,762,2.658,928,6.756,930,5.803,1106,4.138,1107,6.286]],["t/385",[0,0.237,179,3.801,460,2.255,538,2.832,559,3.039,607,3.476,615,4.247,718,3.912,928,6.469,931,6.626,932,6.848]],["t/388",[0,0.238,89,3.435,161,1.742,437,2.619,455,2.35,460,2.069,495,2.643,538,2.486,607,4.129,615,5.045,683,2.983,684,3.247,718,3.435,749,3.247,787,5.03,928,6.499,930,4.643,1067,3.385,1107,5.03]],["t/390",[0,0.239,460,1.557,533,1.817,576,3.352,607,4.181,696,3.005,714,4.029,928,5.419,1108,5.753]],["t/393",[0,0.24]],["t/395",[0,0.24,234,3.954,629,4.326,750,4.428,975,4.063,1109,5.262]],["t/397",[0,0.214,106,4.961,468,3.073,567,4.818,596,4.921,609,2.996,616,3.303,705,5.955,706,5.299,707,6.112,722,6.362,776,4.113,928,4.806,931,5.459,932,5.642,934,4.806,935,5.029,1110,6.863,1111,6.433,1112,6.863]],["t/399",[37,2.99,269,5.324,468,3.739,486,5.552,501,4.46,711,5.847,934,5.847,935,6.118]],["t/401",[0,0.24,37,1.193,67,1.545,106,1.651,161,1.97,455,1.386,468,2.327,486,4.096,501,1.779,533,1.641,542,1.821,596,4.63,673,2.16,684,1.915,696,2.714,735,2.199,736,2.199,762,1.759,820,2.089,934,4.474,1006,2.502,1106,2.738,1113,3.33]],["t/403",[0,0.24,427,3.194,486,3.11,596,2.832,720,3.071]],["t/405",[0,0.239,37,1.94,67,2.512,269,3.454,446,4.308,455,2.254,468,2.425,501,2.893,591,2.685,596,4.937,618,3.645,657,4.07,727,3.715,731,5.316,1114,5.416]],["t/407",[0,0.24,5,2.818,37,1.5,106,2.077,161,1.908,269,2.672,397,1.961,455,1.743,501,2.238,537,1.607,538,1.845,596,2.165,610,2.165,638,3.731,639,2.874,673,2.717,718,2.548,719,2.766,762,2.213,935,4.533,1006,3.148,1115,4.19,1116,3.927,1117,4.19,1118,3.333]],["t/409",[0,0.238,50,2.597,172,2.284,269,2.967,397,2.178,429,2.307,460,1.26,468,2.99,486,2.641,501,2.486,591,3.871,593,2.486,596,5.004,639,3.192,653,2.676,720,2.608,727,6.197,762,3.526,934,4.676,935,3.41,1090,3.97,1119,3.97,1120,4.362,1121,4.144,1122,4.654,1123,4.654]],["t/411",[0,0.199,28,1.973,161,1.892,178,5.75,179,3.624,188,3.78,200,4.609,297,4.88,460,1.661,487,2.873,496,5.432,501,3.277,533,1.938,537,3.097,538,2.701,542,3.354,543,2.871,546,3.979,559,2.898,567,3.103,607,3.315,670,5.917,692,3.624,696,4.218,703,3.277,719,4.05,720,3.437,722,4.495,753,4.609,764,4.296,768,4.609,770,5.463,829,3.437,842,5.043,866,4.495,867,4.296,936,3.788,943,3.731,1067,3.676,1124,6.135]],["t/413",[0,0.192,188,4.349,473,7.178,475,6.534,476,4.967,542,4.187,559,3.617,591,3.796,680,6.295,703,5.344,936,4.729,970,5.754,1125,7.658,1126,7.658,1127,7.658]],["t/415",[0,0.224,47,2.238,50,2.406,74,6.811,80,3.006,89,2.548,93,2.441,106,2.077,116,2.628,161,1.292,162,2.628,163,3.819,259,3.575,306,3.333,324,3.575,408,4.332,409,2.717,437,4.204,441,2.766,442,4.54,460,1.134,485,3.097,487,1.491,533,2.322,537,1.607,538,2.723,543,1.961,553,3.762,554,2.818,559,2.922,570,4.407,618,3.036,667,3.07,670,3.07,684,2.409,692,2.475,696,4.241,703,4.627,719,2.766,721,2.818,762,2.213,767,2.628,825,3.731,828,2.717,829,3.466,830,3.07,853,3.235,854,3.235,870,3.731,872,2.672,885,2.934,888,3.07,945,3.731,947,2.999,948,3.07,949,5.509,999,3.235,1050,3.731,1051,3.444,1052,3.444,1067,2.511,1102,3.235,1103,3.731,1128,4.19,1129,4.19,1130,3.731]],["t/417",[0,0.228,28,1.559,47,2.59,50,1.886,163,2.994,188,3.218,344,2.752,416,3.145,418,3.857,442,5.367,445,6.123,455,2.017,460,1.313,472,4.267,501,2.59,504,3.857,527,2.135,537,1.859,543,3.218,545,3.092,568,2.825,585,3.145,608,2.825,683,3.631,702,4.318,703,4.902,720,3.853,721,4.625,767,3.041,768,3.643,829,2.717,842,3.986,860,3.986,875,5.373,907,3.261,1065,3.744,1076,6.123,1077,4.318,1131,4.137,1132,4.849,1133,5.652,1134,4.849,1135,4.849,1136,4.849,1137,4.849,1138,6.875,1139,4.849,1140,4.849,1141,4.849,1142,3.261]],["t/419",[28,2.292,37,2.552,43,3.851,441,4.705,460,2.407,485,3.569,533,3.06,553,4.334,559,3.367,581,5.222,663,6.364,677,5.222,683,3.764,693,5.503,829,3.994,874,5.328,907,4.794,990,6.081,1022,5.669,1143,7.127,1144,5.355,1145,7.127,1146,7.127]],["t/422",[0,0.228,113,4.053,148,4.808,280,5.085,439,4.508,460,2.007,464,5.191,1147,7.033,1148,5.896,1149,8.118,1150,7.413,1151,7.413,1152,7.413,1153,5.432,1154,8.118]],["t/424",[0,0.232,455,3.295,559,3.741,1155,8.674,1156,4.679,1157,6.511,1158,6.3]],["t/427",[0,0.239,37,1.812,80,2.46,148,3.282,172,2.484,470,3.404,619,3.803,621,3.227,678,4.318,742,4.507,977,4.025,1059,5.398,1147,5.471,1148,6.504,1159,4.025,1160,5.061,1161,4.507,1162,4.744,1163,5.542,1164,4.16,1165,4.744,1166,5.061]],["t/429",[0,0.239,167,3.364,489,3.735,498,6.778,508,4.999,621,3.579,776,3.364,820,3.521,977,4.465,1069,5.577,1147,6.667,1148,6.054,1167,5.262]],["t/431",[0,0.237,538,3.138,683,3.764,692,4.211,715,5.503,776,4.271,1059,4.705,1147,5.503,1148,5.669]],["t/433",[0,0.239,37,1.514,167,4.43,327,5.313,455,2.591,460,1.145,489,2.075,584,4.563,621,2.696,678,6.307,754,2.844,820,2.652,1059,2.791,1142,2.844,1147,4.808,1148,6.487,1165,3.963,1168,4.228,1169,4.63,1170,4.228,1171,4.228,1172,4.63,1173,5.119]],["t/435",[0,0.137,7,4.849,148,4.292,318,4.849,397,3.097,440,3.755,464,5.94,498,5.893,549,5.819,569,5.893,580,4.292,620,5.646,754,4.451,776,3.966,795,4.451,814,6.203,820,4.151,977,5.263,1069,4.849,1147,7.624,1148,6.747,1150,6.617,1151,6.617,1152,6.617,1173,5.44,1174,6.617,1175,7.247,1176,7.247,1177,7.247,1178,7.247,1179,7.247,1180,7.247]],["t/437",[0,0.237,455,2.254,460,1.466,609,2.365,649,4.182,678,6.337,776,3.246,795,4.996,820,3.397,997,3.969,1059,3.576,1069,3.969,1082,4.823,1147,7.042,1148,7.254,1160,5.416,1165,5.077,1166,5.416,1168,5.416,1170,5.416,1181,8.134,1182,5.932,1183,5.416,1184,5.416]],["t/440",[0,0.14,28,2.175,37,2.422,47,3.612,150,5.559,161,2.086,280,4.639,378,4.549,442,4.176,457,5.769,460,1.831,466,6.339,487,2.406,496,4.549,533,2.136,537,2.593,585,4.386,591,4.263,614,3.319,677,4.955,681,6.022,721,4.549,875,4.549,880,5.559,951,6.022,1020,5.559,1022,6.841,1048,6.022,1067,4.053,1185,5.395,1186,6.762,1187,6.762]],["t/443",[0,0.24,161,1.711,442,3.425,533,1.752,608,3.232,1185,3.479]],["t/445",[0,0.24,161,1.68,460,1.475,533,1.721,608,3.175,609,2.379,1118,4.334,1185,3.417]],["t/447",[0,0.164,353,3.926,460,2.144,538,3.487,608,4.615,618,3.887,683,4.183,692,4.679,703,4.231,715,6.115,894,5.546,1014,6.757,1102,6.115,1185,4.968,1188,7.92]],["t/450",[0,0.24,161,2.194,533,2.247,1185,4.462]],["t/452",[0,0.24,161,2.286,460,1.15,468,2.798,533,1.973,596,3.83,609,1.854,792,3.28,934,2.974,1185,2.664]],["t/454",[442,4.933,537,3.655,614,3.921,618,3.921,673,5.181,703,4.267,718,4.858,769,6.168,796,5.718,1102,6.168,1189,7.989,1190,7.989,1191,7.989]],["t/457",[0,0.241,460,1.114,533,1.928,684,2.366,696,2.15,1185,3.829,1192,3.177,1193,3.665,1194,6.104]],["t/459",[50,3.108,455,3.324,533,2.523,538,3.517,559,3.774,567,4.041,850,6.168,884,6.567,1192,7.359,1193,7.114,1195,7.989,1196,7.488,1197,7.989]],["t/461",[0,0.241]],["t/463",[344,4.534,546,5.181,602,6.003,673,5.181,690,6.567,691,6.567,693,6.168,718,4.858,796,5.718,963,7.114,1144,6.003,1185,5.011,1192,6.168,1198,7.989]],["t/465",[0,0.165,355,6.816,546,5.181,567,4.041,574,5.274,596,4.128,696,4.173,731,5.718,926,6.003,1106,6.567,1199,7.989,1200,7.989,1201,7.989,1202,7.989]],["t/467",[527,3.237,540,5.388,546,4.769,559,4.282,576,4.285,608,4.285,613,5.849,618,3.609,696,3.841,820,4.613,832,5.678,837,6.348,1053,5.264,1067,4.407,1185,6.164,1192,5.678,1203,7.354,1204,7.354,1205,7.354,1206,7.354]],["t/470",[0,0.218,28,2.365,113,4.021,280,5.044,397,3.442,406,3.645,427,4.285,430,3.442,443,4.689,465,4.855,648,4.855,757,4.769,974,5.678,1065,5.678,1156,4.345,1196,6.893,1207,8.053,1208,6.549,1209,8.053,1210,5.678]],["t/473",[0,0.19,61,4.846,280,5.126,397,4.285,443,4.765,465,4.933,661,5.263,705,5.126,757,6.69,974,5.769,997,5.475,1208,8.152,1211,8.183,1212,6.655,1213,7.472]],["t/475",[0,0.233,816,6.276,1214,7.62,1215,8.902]],["t/478",[0,0.236,609,3.488]],["t/480",[0,0.22,162,4.725,436,5.992,491,5.866,634,4.024,816,7.669,1142,5.067,1173,6.193,1210,5.816,1213,7.533,1214,7.061,1216,10.075,1217,6.709]],["t/482",[0,0.226,50,3.277,661,4.844,1210,6.505]],["t/484",[0,0.226,429,4.176,661,4.844,1210,6.505]],["t/487",[0,0.229,50,2.816,427,4.218,430,4.201,464,5.069,757,5.822,760,5.069,761,4.869,984,4.47,997,5.304,1130,6.446,1208,6.446,1210,6.931,1218,7.239,1219,6.446]],["t/489",[0,0.24,50,2.853,293,3.91,343,3.91,444,3.134,661,2.398,1059,4.07,1167,3.91,1220,6.165,1221,4.568,1222,3.714]],["t/491",[0,0.221,50,2.224,61,4.998,74,5.79,80,2.779,162,3.586,172,3.782,212,5.092,366,3.775,384,4.548,397,3.607,411,5.359,429,2.834,439,3.477,440,3.245,460,1.548,489,2.806,491,3.646,595,4.093,608,3.332,634,4.116,661,5.011,666,4.415,757,5.653,816,6.73,817,3.922,835,4.296,971,4.7,997,5.646,1038,5.359,1173,6.334,1210,7.202,1217,5.092,1218,5.718,1223,5.092]],["t/493",[0,0.235,172,3.248,440,3.755,444,4.972,460,2.296,472,3.535,489,3.248,608,3.856,757,4.292,768,4.972,816,6.55,971,5.44,987,5.263,997,4.849,1131,5.646,1217,7.554]],["t/495",[0,0.226,5,4.516,43,3.628,161,2.071,162,4.211,376,4.701,460,2.318,471,5.34,568,3.912,579,4.432,586,4.432,608,3.912,661,3.86,705,4.605,760,4.701,761,4.516,763,4.083,942,6.293,1000,5.978,1131,5.728,1210,5.183,1224,6.81,1225,6.713,1226,7.352,1227,6.713,1228,7.352]],["t/497",[0,0.203,28,2.365,112,5.678,190,5.044,366,4.855,455,3.06,460,2.454,474,6.045,496,4.946,526,3.609,749,4.228,917,7.21,943,4.472,974,5.678,1073,6.045,1229,5.849,1230,7.354,1231,7.354,1232,8.053,1233,8.053]],["t/500",[0,0.212,113,4.445,465,5.367,527,3.579,548,4.156,552,5.819,1153,5.957,1234,7.62,1235,8.129,1236,8.902]],["t/502",[0,0.215,50,3.248,406,4.138,591,4.138,614,4.098,1234,7.826,1237,8.349]],["t/504",[0,0.239,479,4.849,486,3.755,491,4.219,639,4.539,917,5.263,1238,6.617,1239,7.247]],["t/506",[0,0.239]],["t/509",[0,0.24]],["t/511",[0,0.24,65,4.07,435,2.942,465,3.378,486,2.904,607,2.765,648,3.378,779,3.023,1240,4.365]],["t/513",[0,0.24]],["t/515",[0,0.236]],["t/517",[0,0.24]],["t/519",[0,0.241,384,2.877,472,1.932,494,2.589,526,1.775,910,3.221]],["t/521",[0,0.241,429,2.058,435,4.206,510,3.698,591,2.058,593,3.282,661,2.387,994,3.543,1009,3.206,1111,3.892]],["t/523",[0,0.226,28,1.862,37,2.783,266,5.426,406,4.647,430,2.71,435,4.468,439,4.726,440,3.285,446,4.605,455,2.409,486,5.32,491,4.955,537,2.22,548,2.959,591,2.87,616,2.787,639,3.971,642,3.631,648,5.791,763,3.521,779,3.42,1012,4.054,1153,4.242,1234,7.284,1240,4.939,1241,6.34,1242,4.605,1243,4.759,1244,5.789,1245,4.35,1246,6.34,1247,6.34]],["t/525",[0,0.197,28,2.569,43,4.317,161,2.464,487,2.842,552,5.718,607,4.317,680,6.567,760,5.594,761,5.373,936,4.933,1065,6.168,1248,8.749]],["t/527",[0,0.209,37,2.812,113,4.294,148,5.093,467,7.853,472,4.195,555,6.246,562,6.993,568,4.576,607,4.244,616,3.78,936,4.849,1065,6.063,1249,7.361]],["t/529",[0,0.188,80,4.405,443,4.689,472,4.842,487,2.616,537,2.82,571,6.893,616,3.54,767,4.613,833,4.769,1133,6.045,1157,6.045,1249,8.497,1250,6.274,1251,8.053,1252,7.354,1253,8.053,1254,6.045,1255,8.053,1256,8.053]],["t/531",[0,0.238,50,3.219,432,3.704,487,1.841,519,2.617,520,4.313,591,3.567,593,3.844,647,5.039,661,4.137,760,3.623,761,4.84,789,4.85,981,4.253,996,4.85,1008,4.414,1009,5.556,1225,7.196,1245,5.407,1257,4.85]],["t/533",[0,0.239,166,3.081,167,2.322,172,1.901,378,2.606,397,1.813,427,4.09,430,2.731,436,3.081,440,2.199,460,1.049,464,2.713,465,2.558,472,2.069,520,2.322,537,1.486,586,2.558,593,3.117,616,2.809,631,5.419,642,2.43,645,2.606,647,4.086,740,2.47,750,2.356,763,2.356,819,3.305,981,4.796,984,2.392,1011,3.631,1037,3.081,1159,3.081,1219,3.45,1258,3.631,1259,4.243,1260,4.243,1261,3.45,1262,3.874,1263,4.243,1264,4.243,1265,3.305]],["t/535",[0,0.163,166,6.246,427,4.576,443,5.007,472,4.195,526,3.854,587,5.007,741,6.246,1227,7.853,1245,7.599,1250,6.7,1266,8.6,1267,8.6,1268,8.6]],["t/537",[0,0.239,93,2.43,167,2.5,234,4.632,280,2.861,353,3.056,397,2.886,427,2.43,429,3.635,430,2.886,432,2.986,449,3.559,455,1.735,527,1.836,593,2.228,608,2.43,609,1.821,634,3.293,647,2.921,661,2.398,761,2.806,943,3.749,974,3.22,975,3.22,1008,3.559,1009,6.256,1133,5.068,1245,4.632,1257,3.91,1269,6.752,1270,4.568,1271,7.594]],["t/539",[0,0.239,37,1.618,133,3.854,397,3.059,427,3.808,432,3.233,438,4.234,455,1.879,460,1.223,464,4.577,465,2.982,538,2.877,545,2.88,550,4.577,587,2.88,609,1.972,616,2.174,756,5.372,757,4.239,816,3.488,1121,4.023,1217,4.023,1222,4.023,1250,3.854,1271,6.126]],["t/541",[0,0.24,234,3.163,427,2.453,429,3.076,430,1.97,432,3.013,439,2.56,440,2.389,528,3.522,555,3.348,609,1.838,661,5.22,705,2.887,757,4.782,943,2.56,1012,2.947,1037,4.937,1208,3.748,1210,3.25,1212,5.527,1272,4.609]],["t/543",[0,0.239,28,1.673,99,5.203,427,3.032,430,3.884,432,3.724,444,5.428,449,6.164,588,3.569,609,2.272,984,5.124,1012,3.644,1212,4.634,1273,7.224,1274,5.698]],["t/545",[0,0.217,37,2.812,113,4.294,242,7.361,460,2.126,582,6.246,608,4.576,817,5.387,984,5.825,1073,6.456,1275,7.361,1276,7.853]],["t/547",[0,0.239,28,1.784,148,3.597,427,3.232,432,3.97,438,5.199,444,4.167,460,1.501,673,3.597,1271,5.199,1276,5.546,1277,8.267]],["t/549",[0,0.212,106,4.029,427,4.737,439,4.944,578,6.276,642,5.099,763,4.944,1012,5.693,1017,6.935,1245,6.108]],["t/551",[0,0.239,172,2.568,432,3.745,619,3.932,642,3.282,661,3.008,705,3.589,761,4.878,943,3.182,1005,6.427,1008,6.188,1017,4.464,1245,3.932,1262,5.233,1278,5.233]],["t/553",[0,0.227,37,2.186,80,2.967,133,5.208,148,3.959,166,3.273,167,5.152,403,3.511,427,4.69,430,1.926,439,4.425,440,2.335,443,2.624,449,3.511,460,2.179,464,2.882,471,3.273,472,3.261,496,2.768,528,2.335,550,4.275,568,2.398,580,2.669,587,5.132,588,2.823,607,2.224,612,3.015,616,3.502,620,3.511,631,4.713,642,4.564,661,3.51,669,3.273,705,2.823,715,3.177,756,5.018,757,2.669,763,4.895,816,4.713,817,2.823,833,2.669,936,2.541,971,3.383,975,3.177,984,2.541,1017,3.511,1037,3.273,1061,3.857,1065,3.177,1131,3.511,1242,3.273,1245,3.092,1249,3.857,1252,4.115,1265,5.208,1275,3.857,1279,4.507,1280,4.507,1281,5.722,1282,4.115,1283,4.507,1284,4.115,1285,4.115,1286,4.507,1287,4.507,1288,4.507]],["t/555",[0,0.203,10,6.274,28,2.365,47,3.928,113,4.021,397,3.442,406,3.645,412,6.549,482,4.472,543,3.442,548,3.759,648,4.855,653,4.228,936,4.541,1016,6.274,1095,6.274,1153,5.388,1156,4.345,1289,8.053,1290,8.053,1291,8.053,1292,7.354]],["t/557",[0,0.237,43,1.833,47,2.815,80,1.648,116,2.127,166,2.697,172,2.586,299,3.391,334,2.697,384,2.697,406,1.681,407,1.752,449,2.893,455,1.411,460,1.75,468,1.519,482,2.062,489,2.586,558,1.877,619,2.548,621,2.162,623,2.281,629,4.332,644,4.136,645,4.347,653,1.95,727,2.326,762,1.791,779,2.004,819,2.893,837,2.375,867,2.375,958,4.939,1037,5.141,1059,2.239,1067,2.032,1159,2.697,1183,3.391,1293,7.078,1294,6.058,1295,3.714,1296,7.44,1297,4.693,1298,3.02,1299,3.02,1300,3.391,1301,3.714,1302,3.02,1303,3.714,1304,3.714,1305,3.714,1306,5.771,1307,3.714,1308,3.714,1309,3.714,1310,3.714,1311,5.771,1312,5.27,1313,3.714,1314,3.714,1315,3.714,1316,3.714]],["t/559",[0,0.239,93,2.545,110,4.368,293,4.094,429,2.165,477,4.673,482,3.879,489,2.144,491,2.785,556,3.727,609,1.907,621,2.785,634,2.333,644,4.275,653,2.511,654,3.474,749,3.667,807,4.094,1026,3.727,1100,3.591,1142,4.29,1261,3.89,1299,3.89,1317,3.727,1318,9.2,1319,6.378,1320,4.783,1321,4.783,1322,4.094]],["t/561",[0,0.241,477,2.347,570,1.92,653,1.842,774,2.347,779,1.893,1082,2.853]],["t/564",[0,0.24]],["t/566",[0,0.239,344,3.755,468,2.963,709,6.203,909,4.849,1053,4.737,1318,6.617]],["t/568",[0,0.239,437,2.754,491,3.786,653,3.414,774,4.351,964,4.585,1053,4.25,1164,6.497,1323,5.938]],["t/570",[0,0.22,10,4.515,28,2.351,37,1.895,43,2.86,59,5.493,61,5.431,143,5.493,242,4.961,318,3.878,327,6.237,439,3.219,446,4.21,460,2.267,482,4.446,487,1.883,543,3.421,558,2.929,564,4.713,579,3.494,644,3.003,664,4.351,748,4.21,749,4.203,774,3.878,817,5.014,882,3.788,970,3.977,1085,5.292,1119,4.515,1153,3.878,1164,4.351,1230,5.292,1296,6.51,1324,5.796,1325,5.796,1326,5.796,1327,6.852,1328,5.014,1329,5.796,1330,5.292,1331,5.796,1332,5.796,1333,5.796,1334,5.796,1335,4.086,1336,4.961,1337,5.796]],["t/572",[0,0.19,487,2.68,518,2.716,521,3.979,530,4.886,539,4.886,540,5.52,541,5.275,542,4.119,543,4.306,544,7.533,545,4.803,546,4.886,547,7.533,548,3.851,549,5.167,550,5.275,551,4.119,552,5.392]],["t/575",[0,0.122,50,2.295,80,2.867,106,2.924,116,4.936,155,5.254,274,4.323,318,4.323,386,4.132,437,2.736,441,3.895,450,3.968,453,5.53,454,5.254,482,3.588,485,2.954,518,2.837,521,4.989,529,5.034,543,2.761,549,6.074,550,6.201,553,3.588,554,3.968,555,4.693,556,5.034,557,7.376,558,3.265,559,2.787,560,4.555,561,5.53,562,5.254,563,4.555,564,5.254,565,5.53,566,5.9,567,2.985,568,3.438,569,5.254,570,3.536,571,5.53,572,5.53,573,5.9,574,3.895,575,5.9]],["t/577",[0,0.226,428,5.546,460,1.944,518,3.22,520,4.304,521,3.793,548,3.672,549,4.927,550,5.03,554,4.831,558,3.975,568,5.206,570,4.304,576,4.185,577,5.263,578,5.546,579,4.742,580,4.658]],["t/580",[0,0.24,67,2.005,133,2.256,188,1.238,406,1.311,429,2.142,460,0.716,518,2.848,519,1.338,521,1.397,526,1.298,528,3.591,530,2.803,532,1.686,533,0.835,539,3.554,542,1.446,576,2.518,581,1.938,582,2.104,583,2.042,584,1.938,585,1.715,586,1.746,587,1.686,588,1.814,589,2.174,590,2.355,591,1.311,592,2.479,593,1.413,594,1.779,595,1.893]],["t/582",[0,0.241,518,1.402,519,1.968,521,2.055,528,2.208,532,2.481,596,2.01]],["t/584",[0,0.24,429,3.446,518,3.156,528,2.796,539,3.195,576,2.87,591,2.442,593,3.714,594,3.313,595,3.526,597,4.926]],["t/586",[0,0.237]],["t/588",[0,0.223,80,3.437,161,2.181,353,3.506,366,4.669,460,1.915,495,3.31,518,3.19,528,4.014,540,5.182,546,4.587,551,3.867,568,4.121,577,5.182,579,4.669,598,5.182,599,7.073,600,5.814,601,6.298,602,5.314,603,6.298,604,5.626]],["t/590",[0,0.225,28,2.224,93,4.029,106,3.427,366,4.565,376,4.842,428,5.338,440,4.95,518,2.492,535,3.652,536,4.205,537,2.651,539,4.484,542,3.781,548,3.535,558,3.826,568,5.083,578,5.338,605,6.914,606,6.914,607,3.736,608,4.029,609,3.019]],["t/592",[0,0.192,188,3.584,353,3.796,495,3.584,517,7.658,518,3.35,519,4.701,520,5.995,521,4.908,522,7.658,523,6.534,524,7.658,525,7.658]],["t/594",[518,3.152,519,4.423,520,5.24,521,4.618]],["t/597",[0,0.239,67,2.191,353,3.904,406,2.342,518,3.097,519,3.415,520,4.045,521,3.565,526,3.313,527,2.972,528,4.469,529,4.031,530,4.378,531,4.208,532,3.013]],["t/599",[0,0.239,161,2.569,353,4.129,527,2.832,533,2.032]],["t/601",[0,0.238,518,2.53,519,4.455,520,4.206,528,3.983,534,4.915]],["t/603",[0,0.238,535,3.853,536,4.437,537,2.798]],["t/605",[0,0.23,535,4.183,536,4.817,537,3.037,538,4.632]],["t/609",[0,0.223,7,5.854,161,2.464,489,3.921,518,2.88,527,3.517,653,4.593,779,4.72,780,7.488,781,7.488]],["t/611",[0,0.211,37,2.37,47,3.535,50,3.3,93,3.856,113,3.618,334,5.263,487,3.018,491,4.219,519,3.348,520,5.084,521,4.48,586,6.181,653,3.805,655,5.502,779,3.91,782,6.617,783,6.617,784,8.483,785,6.617,786,6.617,787,5.893,788,6.617,789,6.203,790,5.893,791,5.646]],["t/613",[0,0.24,67,2.273,90,4.364,353,4.329,406,2.429,489,3.943,518,1.766,521,2.588,528,3.931,530,3.178,586,3.235,655,3.178,779,2.895,792,5.348]],["t/615",[0,0.24,161,1.38,353,3.217,489,2.195,518,1.613,519,2.263,521,3.427,528,2.539,532,2.852,533,1.413,661,2.572,662,3.984,779,2.643]],["t/617",[0,0.239,535,3.398,536,3.912,537,2.467]],["t/619",[0,0.177,28,2.159,188,3.142,248,6.293,269,4.281,285,7.304,407,3.469,416,4.354,476,4.354,487,2.388,537,2.574,542,3.671,559,3.171,567,4.331,579,4.432,646,5.978,663,4.805,664,5.519,665,5.978,666,5.183,667,4.919,668,5.978,669,5.34,670,4.919,671,5.978,672,5.978,673,4.354,674,6.713,675,5.519,676,6.713,677,4.919,678,5.728,679,5.519]],["t/621",[0,0.204,161,2.599,188,3.943,410,6.926,537,3.231,680,6.926,681,7.503]],["t/623",[0,0.238,37,1.38,67,1.068,93,1.342,161,2.403,162,1.444,167,1.38,179,3.434,188,1.078,274,1.687,344,3.671,376,1.612,407,1.19,429,1.141,434,2.38,437,3.245,441,1.52,442,1.422,455,0.958,460,1.043,485,1.153,487,1.371,506,1.893,518,0.83,519,2.514,526,2.852,527,1.014,533,2.346,537,0.883,538,1.697,542,1.259,543,1.078,552,2.759,553,1.4,559,1.088,563,1.778,570,1.38,574,1.52,585,2.499,607,1.244,609,1.683,614,1.13,618,2.439,634,1.23,663,1.648,682,1.893,683,2.035,684,4.023,685,3.223,686,2.05,687,1.964,688,1.893,689,4.958,690,1.893,691,1.893,692,1.36,693,1.778,694,2.302,695,2.302,696,1.203,697,1.893,698,1.493,699,3.837,700,2.302,701,2.158,702,2.05,703,1.23,704,2.302,705,5.554,706,4.487,707,5.176,708,6.469,709,3.612,710,3.854,711,1.612,712,2.05,713,2.302,714,1.612,715,1.778,716,2.158,717,1.29]],["t/625",[0,0.224,179,3.995,227,5.769,397,3.165,407,3.494,409,4.386,487,2.406,496,4.549,537,2.593,538,3.787,543,4.026,559,3.194,596,3.494,609,2.952,673,4.386,718,5.231,719,4.465,720,3.789,721,4.549,722,4.955,723,6.022,724,6.762,725,6.022,726,5.221,727,4.639]],["t/627",[0,0.223,47,3.991,355,6.375,407,3.861,409,4.846,420,4.478,487,2.658,609,3.262,642,4.687,645,5.026,698,4.846,728,7.472,729,5.615,730,7.472,731,5.349,732,6.143,733,7.472]],["t/629",[0,0.215,407,3.924,460,2.056,472,4.057,495,3.555,552,5.437,579,5.014,609,3.316,616,3.656,649,5.864,734,6.48,735,5.014,736,5.014,737,7.595,738,6.244,739,7.595,740,4.843]],["t/631",[0,0.233,7,4.992,28,2.191,43,3.681,407,3.52,487,2.423,508,6.067,537,2.612,559,3.218,568,3.97,583,5.26,587,4.344,609,2.974,672,6.067,711,4.77,726,5.26,727,4.673,741,5.418,742,6.067,743,6.812]],["t/633",[0,0.229,28,2.24,106,3.453,269,4.442,406,3.453,407,3.599,501,3.721,545,4.442,596,3.599,609,3.041,693,5.378,735,4.599,736,4.599,744,6.966,745,6.53,746,6.966,747,8.764,748,5.541,749,4.005,750,4.236,751,6.966]],["t/635",[0,0.239,28,2.027,407,3.256,501,3.366,526,3.093,568,3.672,609,2.751,642,5.156,752,6.302]],["t/637",[0,0.241,161,0.166,164,0.46,344,0.306,386,0.377,420,0.323,429,0.267,430,0.252,435,0.31,460,0.146,472,0.288,487,0.367,495,0.252,496,0.362,527,0.237,550,0.377,559,0.487,563,0.416,587,0.344,610,0.278,612,0.755,657,0.405,703,0.288,718,0.328,719,0.356,741,0.429,753,0.405,754,0.362,755,0.539,756,0.443,757,0.35,758,0.505,759,0.48,760,0.377,761,0.362,762,0.285,763,0.328,764,0.377,765,0.46]],["t/639",[0,0.23,148,4.886,161,2.323,269,4.803,538,4.05,555,5.992,589,6.193,610,3.892,683,3.979,686,6.709,687,6.427,766,5.067]],["t/641",[0,0.224,28,2.191,148,4.418,188,3.188,190,4.673,191,6.067,487,2.423,537,2.612,542,3.725,567,3.446,587,4.344,668,6.067,670,4.992,671,6.067,703,3.639,725,6.067,729,5.119,748,5.418,749,3.917,767,4.273,768,5.119,769,5.26,770,6.067,771,6.812,772,6.812,773,6.812,774,4.992]],["t/644",[37,2.552,397,3.336,472,3.807,487,2.535,495,3.336,518,3.205,520,4.271,521,3.764,530,4.622,579,4.705,610,3.682,614,3.498,616,3.431,635,6.347,636,7.127,637,6.68,638,6.347,639,4.889,640,6.347,641,6.081,642,5.577,643,7.127,644,4.045,645,4.794,646,6.347,647,4.991]],["t/647",[0,0.24,67,2.871,69,2.028,179,1.507,188,1.963,353,1.264,376,1.786,406,1.264,407,2.167,416,1.654,418,2.028,460,1.447,470,1.715,489,2.059,494,1.825,518,2.804,520,1.528,521,2.215,526,3.038,528,3.883,530,3.465,531,2.271,533,0.805,538,1.123,539,1.654,577,3.074,581,1.868,582,2.028,583,1.969,584,1.868,585,1.654,586,1.684,590,2.271,595,1.825,623,2.821,631,1.969,632,1.868,633,2.271,634,1.362,640,2.271,642,1.6,645,1.715,648,3.528,649,3.239,650,3.735,651,2.55,652,2.271,653,1.466,654,3.336,655,1.654,656,2.55]],["t/649",[0,0.24,519,3.318,521,3.464,528,2.576,532,2.894,534,3.179,657,3.411,658,4.539,659,4.539,660,3.873,661,2.61,662,4.042]],["t/651",[0,0.239]],["t/653",[0,0.24,50,2.083,518,1.93,526,2.627,535,2.828,536,3.256,537,2.053,576,3.12,635,4.768]],["t/656",[518,3.527,558,5.415,610,4.314,611,7.826,612,6.118,613,6.641,614,4.098]],["t/659",[0,0.241,67,2.147,128,1.958,353,1.036,376,1.463,407,1.835,460,0.566,489,1.025,494,1.496,518,2.992,520,1.252,526,2.68,528,2.015,530,2.303,539,2.303,548,1.068,558,1.156,577,1.531,595,1.496,610,2.821,615,2.344,616,1.709,617,3.551,618,1.025,619,2.668,620,3.029,621,1.332,622,2.089,623,1.405,624,2.089,625,1.861,626,1.958,627,2.089,628,1.613,629,1.718,630,1.861,631,1.613,632,1.531,633,1.861,634,1.116]],["t/661",[0,0.24,535,2.929,536,3.373,537,2.127]],["t/664",[321,6.347,437,4.017,495,4.054,518,3.122,558,4.794]],["t/667",[0,0.241,37,0.877,67,2.409,188,1.146,321,1.794,353,2.011,437,2.801,460,1.406,489,1.202,518,2.881,533,1.281,539,2.631,576,2.364,581,1.794,582,1.948,583,1.891,584,1.794,585,1.588,593,1.308,594,1.647,615,1.617,616,1.179,632,1.794,683,1.293,718,1.489,775,3.613,776,1.467,777,2.181,778,2.181]],["t/669",[0,0.231,161,2.485,353,3.994,437,3.737,518,2.905,527,3.548]],["t/671",[0,0.24,535,2.702,536,3.112,537,1.962]],["t/674",[353,4.065,495,3.838,518,3.49,610,5.002,754,5.516,793,5.625,794,8.622,795,5.516]],["t/677",[0,0.241,161,1.101,460,0.403,485,1.325,518,1.785,533,0.836,610,2.559,615,0.984,653,0.857,654,2.105,692,0.88,718,0.906,794,1.327,795,1.78,796,1.067,797,1.225,798,2.176,799,1.185,800,1.271,801,1.271]],["t/679",[0,0.239,161,2.086,533,2.136,610,3.494]],["t/681",[0,0.234,485,4.517,518,3.252,754,4.907,793,6.717,799,5.803,802,7.296,803,7.296]],["t/683",[0,0.241,535,1.98,536,2.28,537,1.437]],["t/686",[0,0.215,106,3.479,429,3.479,468,3.143,477,5.143,486,3.983,487,2.497,495,3.285,518,3.637,521,3.707,533,2.217,596,4.55,645,4.721,754,4.721,793,4.815,804,6.251,805,7.019,806,6.579,807,8.254,808,7.019,809,6.251]],["t/689",[0,0.241,161,0.681,353,1.845,406,1.095,485,1.864,518,2.759,548,1.129,576,2.169,593,1.18,594,2.504,615,1.458,632,1.619,653,1.27,718,1.343,777,1.967,778,1.967,793,1.515,796,2.664,800,1.885,810,2.209]],["t/691",[0,0.241,28,1.099,161,1.054,188,1.599,460,0.925,518,1.911,527,1.504,596,1.765]],["t/693",[0,0.239,409,4.115,485,4.134,518,2.976,754,4.268,793,6.295,811,3.98]],["t/695",[0,0.241,535,1.663,536,1.915,537,1.208]],["t/697",[518,3.152,602,6.57,610,4.518,812,8.196]],["t/699",[0,0.148,28,2.292,43,3.851,93,4.153,376,4.991,397,4.161,468,3.191,485,3.569,495,3.336,518,3.657,576,4.153,610,5.006,779,4.211,792,5.503,793,4.889,795,4.794,797,5.859,798,5.859,801,6.081,813,8.89,814,6.68]],["t/702",[0,0.23,468,3.487,479,5.706,492,5.851,500,6.644,609,3.4,776,4.667,795,5.238,799,6.194,815,7.299]],["t/704",[0,0.241]],["t/707",[0,0.239]],["t/709",[0,0.24,37,1.326,58,3.471,93,2.158,161,1.739,162,2.323,167,3.379,353,1.836,378,2.491,426,3.044,460,1.527,495,1.733,518,2.462,527,1.63,533,1.781,535,1.956,576,2.158,610,3.528,612,2.714,632,2.714,683,1.956,798,5.614,816,2.859,817,2.54,818,3.703,819,4.811,820,2.323,821,3.298,822,3.703]],["t/711",[0,0.241,353,2.403,610,2.505,628,3.744,797,3.986]],["t/713",[0,0.24,28,1.673,37,2.587,460,1.409,491,3.318,527,2.291,823,5.203,824,5.203]],["t/715",[0,0.236,353,3.765,539,4.926,591,3.765,776,4.552,795,5.109]],["t/717",[0,0.241,535,1.988,536,2.289,537,1.443]],["t/720",[0,0.224,28,2.62,89,3.781,161,1.917,324,5.304,437,4.764,487,2.212,533,1.964,541,4.354,570,4.882,685,4.032,696,4.746,703,5.151,827,4.556,829,5.403,833,4.032,936,3.839,945,5.537,946,6.217,947,4.45,948,4.556,949,7.255]],["t/722",[0,0.187,47,3.897,161,2.25,179,4.31,437,4.745,460,1.975,487,3.209,527,3.212,533,2.304,591,3.616,663,5.222,684,4.195,685,5.85,696,3.811,697,5.997,763,4.437,879,6.497,950,7.296,951,6.497]],["t/725",[0,0.237,161,1.843,437,4.133,545,3.81,570,4.757,574,3.946,616,3.82,683,4.707,684,3.436,749,3.436,766,4.02,909,4.379,926,4.49,947,4.278,948,4.379,952,4.614]],["t/727",[0,0.239,67,2.309,161,2.161,179,2.942,437,3.249,533,2.56,570,4.198,616,3.901,684,2.863,696,3.659,909,5.133,947,3.564,948,3.648,952,3.844]],["t/730",[0,0.239,234,4.609,344,3.481,470,4.126,614,3.011,689,5.234,717,3.437,875,4.126,943,3.731,953,5.75]],["t/732",[0,0.238,344,3.983,576,5.131,954,5.988,955,7.019]],["t/734",[0,0.238,37,2.439,67,3.16,161,2.101,533,2.152,634,3.639,855,6.067,877,5.812,956,6.812,957,6.812]],["t/737",[0,0.239,37,2.37,106,3.28,161,2.041,574,4.369,711,4.634]],["t/739",[0,0.24,161,1.867,526,2.971,684,3.481,714,4.24,750,3.682]],["t/741",[0,0.238,397,3.622,437,3.589,460,2.095,518,2.074,548,2.941,604,4.576,666,4.442,685,5.019,880,4.729,958,5.393,959,6.155,960,4.908,961,5.753,962,5.393]],["t/743",[28,2.175,59,5.081,274,4.955,437,3.989,455,2.814,460,1.831,485,3.386,501,3.612,537,2.593,538,3.787,543,3.165,559,3.194,580,4.386,585,4.386,692,3.995,699,6.641,711,4.736,712,6.022,766,6.362,811,5.395,850,5.221,882,4.841,963,6.022,964,5.221,965,6.762,966,6.762,967,5.559,968,6.762,969,6.762]],["t/745",[0,0.192,7,4.138,28,1.816,67,3.544,113,3.088,161,2.862,179,3.337,321,4.138,366,3.729,416,3.663,417,4.818,437,4.304,460,2.069,487,2.009,527,2.486,533,2.736,537,2.166,540,4.138,542,3.088,546,4.956,558,3.126,567,2.857,570,5.562,679,4.643,684,3.247,685,5.618,696,3.992,697,4.643,769,4.361,811,3.543,829,3.165,866,4.138,882,4.043,936,3.487,947,5.47,948,5.6,959,4.492,970,4.244,971,4.643,972,5.648]],["t/748",[0,0.239,37,1.026,43,1.549,47,1.531,50,1.115,59,3.466,69,3.669,80,1.393,106,1.421,188,1.341,274,2.1,406,2.286,420,3.469,430,1.341,431,1.966,457,2.445,460,1.249,472,1.531,487,2.36,489,1.407,495,1.341,519,1.45,526,2.264,532,1.827,533,0.905,550,2.007,558,1.586,568,1.67,580,1.859,587,1.827,593,1.531,594,1.928,614,2.264,618,1.407,623,1.928,644,2.618,650,2.552,655,3.755,661,2.652,692,1.693,717,1.606,750,2.805,756,2.356,760,4.054,761,3.894,762,1.514,820,1.798,837,2.007,943,1.743,973,2.866,974,3.562,975,2.213,976,4.108,977,2.28,978,2.866,979,2.866,980,2.213,981,2.356,982,2.552,983,2.552,984,1.77,985,2.445,986,2.866,987,2.28,988,2.866,989,2.866]],["t/751",[0,0.24,167,3.062,172,1.6,397,1.526,450,2.193,486,4.664,489,2.508,503,2.517,519,1.649,586,3.373,610,1.684,621,3.258,628,4.865,762,4.341,779,3.019,820,3.953,964,2.517,977,4.064,981,2.68,990,2.781,991,3.26,992,5.11,993,5.11,994,2.781,995,3.26,996,3.056,997,3.744,998,3.26,999,2.517]],["t/753",[0,0.24,89,1.59,143,1.965,148,2.777,344,1.484,420,2.566,430,1.224,431,1.794,444,1.965,464,3.808,487,0.93,489,1.283,495,1.224,519,1.323,526,1.283,527,1.151,554,1.759,593,1.397,614,2.101,616,1.259,628,2.019,644,1.484,647,1.831,655,1.696,661,1.503,682,3.52,705,3.73,717,1.465,726,2.019,727,1.794,750,2.604,760,2.999,761,4.228,762,3.32,764,1.831,943,1.59,976,3.813,980,2.019,987,2.08,1000,2.329,1001,2.615,1002,2.615,1003,2.15,1004,2.231,1005,5.354,1006,1.965,1007,2.15,1008,3.653,1009,2.019]],["t/755",[0,0.24,172,1.018,179,1.226,420,1.244,431,1.423,447,1.945,464,1.453,472,1.109,487,0.738,489,1.018,495,2.156,532,2.938,543,0.971,593,1.109,607,1.121,614,1.733,634,2.461,642,3.41,644,2.003,647,2.472,655,3.526,661,2.649,663,1.485,717,1.978,720,1.163,726,1.602,727,1.423,741,1.651,750,1.262,760,1.453,761,1.396,762,1.096,763,2.147,764,1.453,790,1.848,791,1.771,943,1.262,980,1.602,984,1.281,1003,1.706,1010,2.075,1011,1.945,1012,1.453,1013,2.075,1014,1.771,1015,2.075,1016,1.771,1017,5.199,1018,2.075,1019,2.075,1020,1.706,1021,2.075,1022,1.651,1023,2.075,1024,1.945,1025,2.902]],["t/757",[0,0.24,37,0.311,47,1.215,50,0.63,59,0.653,66,0.692,67,0.403,80,0.423,106,0.431,148,0.564,150,0.715,161,1.036,163,0.537,179,0.514,181,0.774,188,0.407,255,0.692,280,0.597,288,0.671,344,1.291,407,0.449,416,0.564,418,0.692,420,1.363,429,0.431,430,1.334,431,0.597,435,4.456,437,0.403,442,0.537,458,0.692,486,0.494,487,0.576,489,0.795,491,1.033,495,2.306,496,1.53,503,0.671,519,0.82,526,1.398,527,0.713,533,1.205,542,0.476,552,0.623,554,1.09,556,1.382,558,0.897,559,1.346,567,0.82,578,0.671,586,0.574,593,0.465,595,0.623,607,0.875,609,1.244,610,0.449,614,1.116,618,1.116,634,0.465,641,2.431,642,1.016,644,0.494,647,0.609,655,1.051,661,0.5,665,0.774,667,0.637,679,0.715,682,0.715,684,0.931,685,0.564,690,1.332,691,1.332,711,0.609,714,1.134,717,0.487,720,0.487,750,2.043,762,0.459,763,0.985,764,0.609,792,0.671,804,0.774,811,1.016,832,1.756,867,0.609,875,2.259,970,0.653,980,0.671,983,0.774,984,1,987,1.809,1003,0.715,1004,0.742,1012,0.609,1016,0.742,1026,0.742,1027,0.774,1028,0.774,1029,0.87,1030,0.87,1031,1.62,1032,0.87,1033,0.87,1034,0.87,1035,1.62,1036,0.87,1037,0.692,1038,0.815,1039,0.87,1040,1.62,1041,0.87,1042,0.692,1043,0.87,1044,2.849,1045,0.87,1046,0.87,1047,0.87,1048,2.025,1049,0.87]],["t/760",[0,0.229,28,2.857,36,5.566,37,2.126,167,3.558,378,3.994,450,3.994,455,2.471,485,3.957,487,2.112,533,1.875,541,4.158,618,4.36,703,5.059,721,3.994,723,5.288,769,4.585,827,4.351,833,3.851,870,5.288,871,5.938,872,3.786,873,5.938,874,3.558,875,5.316,876,5.938,877,5.066,878,5.938,879,5.288,880,4.881,881,5.938]],["t/762",[74,5.234,162,5.497,297,5.541,409,5.684,485,3.488,497,5.727,598,5.104,618,5.195,667,5.104,836,5.727,837,4.878,872,6.114,882,4.986,883,7.205,884,5.727,885,4.878,886,8.764,887,8.764]],["t/765",[0,0.238,67,2.542,161,2.309,297,4.359,409,3.554,450,3.686,485,2.744,533,1.731,696,2.863,703,2.927,749,3.151,835,4.118,847,4.505,885,3.838,888,4.016,889,6.668,890,4.881,891,4.881,892,4.505,893,6.668,894,3.838,895,4.881,896,4.881,897,4.118]],["t/767",[0,0.239,80,2.923,172,2.952,581,4.407,847,4.945,889,7.099,890,5.357,891,5.357,893,7.099,895,5.357,898,6.015,899,6.015,900,6.015]],["t/770",[0,0.239,80,2.557,161,2.246,162,3.301,344,4.132,458,4.186,465,3.474,526,3.573,675,4.326,888,3.856,892,4.326,894,3.685,897,3.954,901,7.281,902,4.933,903,5.262,904,6.484,905,5.262,906,3.954,907,3.54,908,4.686]],["t/772",[0,0.238,61,3.282,161,2.185,465,3.341,468,3.173,489,3.478,616,2.436,649,3.907,675,4.16,757,4.596,776,3.033,885,3.544,888,3.708,892,4.16,894,3.544,906,3.803,907,3.404,908,4.507,909,5.192,910,6.31,911,5.061,912,6.31,913,5.061]],["t/775",[0,0.238,378,3.894,412,5.155,460,1.567,607,3.128,720,3.244,721,3.894,875,3.894,914,5.789,915,7.77,916,7.77,917,4.605,918,7.77,919,7.77,920,7.77,921,7.77]],["t/777",[0,0.235,116,4.884,455,3.24,533,2.459,828,5.05]],["t/779",[0,0.176,468,3.798,485,4.944,567,4.291,596,4.838,776,5.611,922,9.256,923,5.893,924,9.875,925,6.617,926,4.972,927,6.617,928,6.556,929,6.203,930,5.44,931,5.263,932,5.44,933,6.617,934,4.634,935,4.849]],["t/781",[0,0.202,28,1.839,37,2.047,80,2.779,143,4.296,161,1.763,162,3.586,172,2.806,188,2.676,200,4.296,321,4.19,345,5.359,397,2.676,409,4.998,419,5.092,443,3.646,485,3.858,487,2.034,533,1.806,542,3.126,543,2.676,546,3.708,548,2.923,559,2.701,603,5.092,618,3.782,639,3.922,715,4.415,719,3.775,720,3.204,738,4.7,757,3.708,766,3.846,829,3.204,866,4.19,872,4.913,882,4.093,884,4.7,888,4.19,894,4.004,904,5.092,907,3.846,912,5.092,936,3.53,937,5.718,938,5.718,939,5.718,940,5.718,941,4.878,942,5.359,943,3.477,944,5.718]],["t/784",[0,0.225,18,4.383,28,2.632,50,2.435,116,3.926,161,1.93,188,2.93,408,4.383,414,5.34,427,3.647,437,2.903,460,1.694,533,3.054,541,4.383,703,5.164,825,5.574,826,6.259,827,4.586,828,4.06,829,3.507,830,4.586,831,5.34,832,4.833,833,4.06,834,6.259,835,4.703,836,5.145,837,4.383,838,5.574,839,4.586]],["t/786",[5,4.831,43,3.881,161,2.215,255,5.713,327,6.128,408,5.03,437,3.331,455,2.988,460,1.944,470,4.831,472,3.837,527,3.162,533,3.213,553,4.368,828,5.794,829,5.006,839,5.263,840,7.182,841,6.396,842,5.904,843,6.396,844,5.904]],["t/789",[0,0.237,43,2.606,50,1.876,89,4.844,161,2.457,172,4.256,334,3.837,429,3.948,450,4.607,455,2.007,470,3.244,527,3.016,533,2.163,749,2.773,767,4.996,830,5.019,841,4.295,845,3.724,846,7.965,847,5.631,848,6.85,849,4.823,850,3.724,851,6.85,852,6.421]],["t/791",[0,0.24,5,3.58,37,1.906,161,1.642,427,3.102,434,3.287,455,2.215,533,2.318,720,2.983,844,4.376,853,4.11,854,4.11]],["t/794",[0,0.237]],["t/796",[0,0.235,67,3.642,455,3.267,533,2.48,855,6.993]],["t/798",[0,0.238,89,3.996,188,3.952,429,3.257,455,2.734,714,4.601,767,4.121,856,5.851,857,6.57]],["t/801",[0,0.24,828,5.215,858,5.427,859,6.094]],["t/803",[0,0.24,455,2.519,596,3.128,722,4.436,750,3.682]],["t/805",[43,3.793,161,2.716,172,3.445,386,4.915,408,4.915,434,5.437,455,3.664,470,4.721,527,4.236,532,4.475,533,2.781,537,2.692,584,5.143,618,3.445,766,4.721,811,4.403,828,4.552,830,5.143,845,5.419,860,5.77,861,7.019,862,7.019,863,7.019,864,7.019]],["t/807",[0,0.198,5,4.099,67,2.827,80,2.962,93,3.551,116,3.823,188,3.763,190,5.515,200,4.579,366,4.023,408,4.268,437,2.827,460,2.177,495,2.852,527,2.683,533,3.226,579,4.023,591,3.021,696,3.183,720,3.415,759,5.427,767,3.823,774,4.466,828,3.953,829,4.505,830,4.466,833,3.953,836,5.01,837,4.268,838,5.427,839,4.466,844,5.01,865,6.094,866,4.466,867,5.631,868,5.427,869,5.199]],["t/810",[0,0.227,28,2.716,106,3.257,161,2.026,163,5.214,259,5.606,442,4.057,487,2.337,533,2.075,538,2.893,541,4.601,559,3.104,570,3.937,703,5.261,720,3.682,762,3.47,827,4.814,829,3.682,833,4.261,936,4.057,994,5.606,999,5.073,1067,3.937,1102,5.073,1103,5.851]],["t/812",[74,5.314,163,5.463,267,6.629,384,5.626,410,5.814,465,4.669,475,6.034,487,2.516,501,3.778,537,3.393,538,4.251,543,3.31,559,3.341,614,3.471,692,4.179,696,4.622,719,5.842,762,3.735,907,4.757,999,5.461,1042,5.626,1104,7.073,1105,7.073]],["t/815",[0,0.239,161,2.177,163,3.108,460,1.911,533,1.59,538,2.216,607,2.72,615,4.66,696,2.629,714,3.525,762,2.658,928,6.756,930,5.803,1106,4.138,1107,6.286]],["t/817",[0,0.237,179,3.801,460,2.255,538,2.832,559,3.039,607,3.476,615,4.247,718,3.912,928,6.469,931,6.626,932,6.848]],["t/820",[0,0.238,89,3.435,161,1.742,437,2.619,455,2.35,460,2.069,495,2.643,538,2.486,607,4.129,615,5.045,683,2.983,684,3.247,718,3.435,749,3.247,787,5.03,928,6.499,930,4.643,1067,3.385,1107,5.03]],["t/822",[0,0.239,460,1.557,533,1.817,576,3.352,607,4.181,696,3.005,714,4.029,928,5.419,1108,5.753]],["t/825",[0,0.24]],["t/827",[0,0.24,234,3.954,629,4.326,750,4.428,975,4.063,1109,5.262]],["t/829",[0,0.214,106,4.961,468,3.073,567,4.818,596,4.921,609,2.996,616,3.303,705,5.955,706,5.299,707,6.112,722,6.362,776,4.113,928,4.806,931,5.459,932,5.642,934,4.806,935,5.029,1110,6.863,1111,6.433,1112,6.863]],["t/831",[37,2.99,269,5.324,468,3.739,486,5.552,501,4.46,711,5.847,934,5.847,935,6.118]],["t/833",[0,0.24,37,1.193,67,1.545,106,1.651,161,1.97,455,1.386,468,2.327,486,4.096,501,1.779,533,1.641,542,1.821,596,4.63,673,2.16,684,1.915,696,2.714,735,2.199,736,2.199,762,1.759,820,2.089,934,4.474,1006,2.502,1106,2.738,1113,3.33]],["t/835",[0,0.24,427,3.194,486,3.11,596,2.832,720,3.071]],["t/837",[0,0.239,37,1.94,67,2.512,269,3.454,446,4.308,455,2.254,468,2.425,501,2.893,591,2.685,596,4.937,618,3.645,657,4.07,727,3.715,731,5.316,1114,5.416]],["t/839",[0,0.24,5,2.818,37,1.5,106,2.077,161,1.908,269,2.672,397,1.961,455,1.743,501,2.238,537,1.607,538,1.845,596,2.165,610,2.165,638,3.731,639,2.874,673,2.717,718,2.548,719,2.766,762,2.213,935,4.533,1006,3.148,1115,4.19,1116,3.927,1117,4.19,1118,3.333]],["t/841",[0,0.238,50,2.597,172,2.284,269,2.967,397,2.178,429,2.307,460,1.26,468,2.99,486,2.641,501,2.486,591,3.871,593,2.486,596,5.004,639,3.192,653,2.676,720,2.608,727,6.197,762,3.526,934,4.676,935,3.41,1090,3.97,1119,3.97,1120,4.362,1121,4.144,1122,4.654,1123,4.654]],["t/843",[0,0.199,28,1.973,161,1.892,178,5.75,179,3.624,188,3.78,200,4.609,297,4.88,460,1.661,487,2.873,496,5.432,501,3.277,533,1.938,537,3.097,538,2.701,542,3.354,543,2.871,546,3.979,559,2.898,567,3.103,607,3.315,670,5.917,692,3.624,696,4.218,703,3.277,719,4.05,720,3.437,722,4.495,753,4.609,764,4.296,768,4.609,770,5.463,829,3.437,842,5.043,866,4.495,867,4.296,936,3.788,943,3.731,1067,3.676,1124,6.135]],["t/845",[0,0.192,188,4.349,473,7.178,475,6.534,476,4.967,542,4.187,559,3.617,591,3.796,680,6.295,703,5.344,936,4.729,970,5.754,1125,7.658,1126,7.658,1127,7.658]],["t/847",[0,0.224,47,2.238,50,2.406,74,6.811,80,3.006,89,2.548,93,2.441,106,2.077,116,2.628,161,1.292,162,2.628,163,3.819,259,3.575,306,3.333,324,3.575,408,4.332,409,2.717,437,4.204,441,2.766,442,4.54,460,1.134,485,3.097,487,1.491,533,2.322,537,1.607,538,2.723,543,1.961,553,3.762,554,2.818,559,2.922,570,4.407,618,3.036,667,3.07,670,3.07,684,2.409,692,2.475,696,4.241,703,4.627,719,2.766,721,2.818,762,2.213,767,2.628,825,3.731,828,2.717,829,3.466,830,3.07,853,3.235,854,3.235,870,3.731,872,2.672,885,2.934,888,3.07,945,3.731,947,2.999,948,3.07,949,5.509,999,3.235,1050,3.731,1051,3.444,1052,3.444,1067,2.511,1102,3.235,1103,3.731,1128,4.19,1129,4.19,1130,3.731]],["t/849",[0,0.228,28,1.559,47,2.59,50,1.886,163,2.994,188,3.218,344,2.752,416,3.145,418,3.857,442,5.367,445,6.123,455,2.017,460,1.313,472,4.267,501,2.59,504,3.857,527,2.135,537,1.859,543,3.218,545,3.092,568,2.825,585,3.145,608,2.825,683,3.631,702,4.318,703,4.902,720,3.853,721,4.625,767,3.041,768,3.643,829,2.717,842,3.986,860,3.986,875,5.373,907,3.261,1065,3.744,1076,6.123,1077,4.318,1131,4.137,1132,4.849,1133,5.652,1134,4.849,1135,4.849,1136,4.849,1137,4.849,1138,6.875,1139,4.849,1140,4.849,1141,4.849,1142,3.261]],["t/851",[28,2.292,37,2.552,43,3.851,441,4.705,460,2.407,485,3.569,533,3.06,553,4.334,559,3.367,581,5.222,663,6.364,677,5.222,683,3.764,693,5.503,829,3.994,874,5.328,907,4.794,990,6.081,1022,5.669,1143,7.127,1144,5.355,1145,7.127,1146,7.127]],["t/854",[0,0.227,37,3.151,61,3.778,422,7.314,487,3.13,527,3.435,534,4.08,548,3.989,666,4.498,734,4.97,749,4.486,922,5.461,1007,4.789,1025,4.789,1051,4.789,1059,3.846,1120,5.461,1156,3.442,1157,4.789,1164,7.233,1173,4.789,1261,5.188,1338,6.38,1339,6.38,1340,5.826,1341,6.38,1342,6.38,1343,6.38,1344,6.38,1345,5.826,1346,8.545,1347,5.826,1348,6.38,1349,6.38]],["t/857",[0,0.227,28,2.667,50,3.582,188,2.99,306,5.082,441,4.218,442,5.12,510,5.689,541,4.474,553,5.043,554,4.297,570,4.97,670,4.681,703,5.205,827,4.681,829,4.647,831,5.451,833,4.144,936,3.945,1050,5.689,1051,5.252,1052,5.252,1053,4.573]],["t/860",[28,2.069,37,2.304,43,3.476,50,2.503,80,4.49,93,3.749,112,4.967,386,4.505,416,5.403,417,5.489,434,3.972,440,3.651,441,4.247,450,4.327,533,2.032,538,2.832,543,3.899,545,4.102,553,3.912,563,4.967,614,3.157,677,4.714,699,6.432,717,3.605,811,5.225,867,4.505,868,5.729,869,5.489,882,5.963,967,6.848,1020,5.288,1054,6.03,1055,6.433,1056,6.433]],["t/862",[50,3.055,61,5.093,112,6.063,476,5.093,537,3.011,538,3.457,543,4.416,545,5.007,738,6.456,766,6.346,811,4.926,850,6.063,967,6.456,1057,7.853]],["t/865",[0,0.238,28,1.497,43,2.515,344,4.431,434,2.873,497,3.825,519,3.378,526,2.284,543,2.178,549,5.356,553,2.83,558,2.575,585,3.018,591,2.307,614,2.284,706,5.155,717,2.608,749,2.676,843,4.144,845,3.593,894,3.259,896,4.144,952,6.029,954,3.97,1058,4.144,1059,5.155,1060,4.144,1061,4.362]],["t/867",[0,0.239,47,2.208,93,2.409,428,3.192,437,1.917,487,1.471,489,2.029,490,3.681,506,3.398,518,1.49,526,2.029,549,5.004,553,4.906,554,2.78,604,3.288,616,1.99,685,2.681,699,5.633,706,3.192,776,2.477,853,3.192,854,3.192,952,4.729,1052,3.398,1059,4.043,1060,3.681,1062,4.134,1063,4.134,1064,4.134,1065,3.192,1066,4.134]],["t/870",[0,0.238,533,2.341,839,5.432]],["t/872",[0,0.239]],["t/874",[0,0.237,43,3.229,427,3.482,441,3.946,519,3.023,553,3.634,616,3.82,705,4.099,740,3.81,845,4.614,853,4.614,854,4.614,856,5.322,867,4.185,909,4.379,926,4.49,1058,7.068,1067,4.757,1068,5.976,1069,4.379]],["t/877",[0,0.153,50,3.836,172,3.638,386,5.191,397,4.616,434,4.577,533,2.341,538,3.263,543,4.264,614,4.471,717,5.104,766,4.986,775,6.601,1070,7.413,1071,7.413,1072,7.413]],["t/879",[143,5.951,172,3.887,216,7.424,397,3.707,434,4.89,469,7.424,543,3.707,608,4.615,613,6.3,860,6.511,1073,7.795,1074,7.92,1075,7.92,1076,7.053]],["t/881",[0,0.211,28,2.128,50,3.3,92,5.646,161,2.616,188,3.097,437,3.069,472,3.535,474,5.44,476,4.292,487,2.354,533,2.679,537,2.538,559,3.126,614,4.163,664,5.44,685,4.292,717,4.753,720,3.708,721,4.451,768,4.972,839,4.849,885,4.634,1042,5.263,1053,4.737,1077,5.893,1078,6.617,1079,6.617,1080,6.617]],["t/884",[0,0.14,28,2.175,37,2.422,47,3.612,150,5.559,161,2.086,280,4.639,378,4.549,442,4.176,457,5.769,460,1.831,466,6.339,487,2.406,496,4.549,533,2.136,537,2.593,585,4.386,591,4.263,614,3.319,677,4.955,681,6.022,721,4.549,875,4.549,880,5.559,951,6.022,1020,5.559,1022,6.841,1048,6.022,1067,4.053,1185,5.395,1186,6.762,1187,6.762]],["t/887",[0,0.24,161,1.711,442,3.425,533,1.752,608,3.232,1185,3.479]],["t/889",[0,0.24,161,1.68,460,1.475,533,1.721,608,3.175,609,2.379,1118,4.334,1185,3.417]],["t/891",[0,0.164,353,3.926,460,2.144,538,3.487,608,4.615,618,3.887,683,4.183,692,4.679,703,4.231,715,6.115,894,5.546,1014,6.757,1102,6.115,1185,4.968,1188,7.92]],["t/894",[0,0.24,161,2.194,533,2.247,1185,4.462]],["t/896",[0,0.24,161,2.286,460,1.15,468,2.798,533,1.973,596,3.83,609,1.854,792,3.28,934,2.974,1185,2.664]],["t/898",[442,4.933,537,3.655,614,3.921,618,3.921,673,5.181,703,4.267,718,4.858,769,6.168,796,5.718,1102,6.168,1189,7.989,1190,7.989,1191,7.989]],["t/901",[0,0.241,460,1.114,533,1.928,684,2.366,696,2.15,1185,3.829,1192,3.177,1193,3.665,1194,6.104]],["t/903",[50,3.108,455,3.324,533,2.523,538,3.517,559,3.774,567,4.041,850,6.168,884,6.567,1192,7.359,1193,7.114,1195,7.989,1196,7.488,1197,7.989]],["t/905",[0,0.241]],["t/907",[344,4.534,546,5.181,602,6.003,673,5.181,690,6.567,691,6.567,693,6.168,718,4.858,796,5.718,963,7.114,1144,6.003,1185,5.011,1192,6.168,1198,7.989]],["t/909",[0,0.165,355,6.816,546,5.181,567,4.041,574,5.274,596,4.128,696,4.173,731,5.718,926,6.003,1106,6.567,1199,7.989,1200,7.989,1201,7.989,1202,7.989]],["t/911",[527,3.237,540,5.388,546,4.769,559,4.282,576,4.285,608,4.285,613,5.849,618,3.609,696,3.841,820,4.613,832,5.678,837,6.348,1053,5.264,1067,4.407,1185,6.164,1192,5.678,1203,7.354,1204,7.354,1205,7.354,1206,7.354]],["t/914",[0,0.178,28,2.76,66,6.826,607,4.637,1336,8.044,1350,9.398]],["t/916",[0,0.225,50,3.219,460,2.24,489,4.061,503,6.389,618,4.061]],["t/918",[0,0.234,28,2.667,50,3.226,55,5.451,200,4.8,280,5.688,334,5.082,353,3.167,489,3.135,527,2.813,607,3.452,614,3.135,621,4.074,644,3.626,683,3.374,717,3.58,735,5.475,736,5.475,866,4.681,1067,3.829,1284,6.389]],["t/920",[0,0.207,28,2.463,89,4.657,190,5.253,333,7.658,394,6.82,429,3.796,440,4.346,460,2.516,526,3.758,542,4.187,587,4.883,680,6.295,767,4.804,1014,6.534,1351,8.387]],["t/922",[0,0.238,5,2.98,28,1.425,37,2.308,50,1.724,106,2.196,118,4.153,430,2.074,431,3.039,460,1.745,468,1.984,487,1.576,489,3.163,587,2.825,616,3.656,641,5.498,779,2.618,815,4.153,867,3.103,869,3.78,960,3.78,974,3.421,984,2.736,1009,3.421,1059,4.255,1067,3.862,1220,4.431,1224,5.126,1240,3.78,1242,5.126,1245,4.842,1352,4.431,1353,4.852,1354,7.057]],["t/924",[0,0.199,50,2.73,353,3.479,397,3.285,440,3.983,503,6.799,620,5.988,634,3.749,663,5.024,673,4.552,837,4.915,974,6.799,1054,6.579,1067,4.206,1242,5.583,1254,5.77,1285,7.019,1345,7.019,1355,7.687,1356,7.687,1357,7.019,1358,7.687,1359,7.687,1360,7.687,1361,7.687,1362,7.019]],["t/926",[0,0.237,61,4.005,88,4.325,395,6.176,548,3.157,574,4.077,732,5.077,762,3.262,997,4.525,1081,6.176,1082,7.223,1084,5.789,1173,5.077,1363,7.223,1364,6.763,1365,6.763,1366,4.768]],["t/928",[0,0.218,28,2.569,77,7.989,288,6.168,533,2.523,618,3.921,623,5.373,910,7.114,1254,6.567,1281,7.488,1367,8.749]],["t/930",[0,0.236,69,5.803,618,4.427,623,4.907,684,4.195,1167,6.839,1368,6.839]],["t/932",[0,0.227,406,3.994,587,5.138,1224,6.41,1242,6.41,1369,8.825,1370,8.825,1371,8.825]],["t/934",[0,0.236,67,3.136,74,5.081,421,6.022,443,4.312,483,6.339,495,3.165,757,5.578,1223,6.022,1258,6.339,1298,6.022,1372,7.406,1373,7.406,1374,7.406]],["t/937",[0,0.238,51,4.251,111,4.774,113,2.61,116,2.994,397,2.234,406,2.366,437,2.214,439,2.903,455,1.986,584,3.498,608,2.782,609,2.084,614,2.343,616,2.298,618,2.343,648,3.152,673,3.096,688,3.924,740,5.503,817,4.664,1059,3.152,1153,3.498,1156,4.017,1157,3.924,1161,4.251,1366,3.686,1368,4.474,1375,5.228,1376,4.774,1377,4.251,1378,5.228,1379,5.228,1380,4.474]],["t/940",[0,0.24,609,2.324,1158,4.234]],["t/942",[0,0.195,439,4.776,440,4.457,495,3.676,537,3.011,538,3.457,688,6.456,740,5.007,858,6.993,897,5.901,985,6.7,1162,7.361,1254,6.456,1377,6.993,1381,7.853]],["t/944",[0,0.24,609,2.661,1158,4.847]],["t/946",[0,0.225,318,5.706,485,3.899,625,6.935,683,4.113,688,6.401,734,6.644,740,4.965,1254,6.401,1377,6.935,1382,8.528,1383,8.528]],["t/948",[0,0.24,609,2.77,1158,5.047]],["t/950",[0,0.215,116,4.804,318,5.611,366,5.056,439,4.657,468,3.429,537,2.937,538,3.371,683,4.045,688,6.295,740,4.883,817,5.253,897,5.754,984,4.729,1161,6.82,1377,6.82]],["t/952",[0,0.229,51,5.155,55,4.939,116,3.631,318,4.242,366,3.822,419,5.155,439,3.521,440,3.285,455,2.409,485,2.899,537,2.22,538,2.549,616,2.787,618,2.841,625,5.155,648,3.822,683,4.104,740,6.419,817,3.971,858,5.155,897,4.35,984,3.575,1156,5.182,1161,6.92,1240,4.939,1254,4.759,1366,4.47,1368,5.426,1381,5.789,1384,5.789,1385,6.34,1386,6.34,1387,4.759,1388,6.34]],["t/954",[0,0.23,116,4.273,416,4.418,455,2.834,468,3.05,526,3.343,538,2.999,596,3.52,616,3.279,657,5.119,666,5.26,669,5.418,684,3.917,740,6.051,779,4.025,832,5.26,1156,4.025,1387,5.6,1389,6.385,1390,7.46,1391,7.46]],["t/957",[0,0.201,28,1.504,37,1.675,50,1.819,106,2.318,113,2.557,161,1.442,190,3.208,361,4.677,362,4.677,397,2.189,439,2.844,440,2.654,443,6.184,465,3.088,487,1.664,491,4.993,526,2.295,527,2.95,538,3.447,542,2.557,543,2.189,548,2.391,588,3.208,591,3.322,592,6.281,600,7.03,614,3.843,618,3.289,621,5.452,634,4.183,653,2.689,692,2.763,717,4.388,735,4.424,736,4.424,740,2.982,832,3.611,833,3.033,874,2.803,959,3.72,984,4.835,997,3.427,1000,4.165,1028,4.165,1059,3.088,1153,4.91,1229,3.72,1330,4.677,1352,4.677,1392,5.968,1393,5.122,1394,5.122,1395,4.165,1396,5.509,1397,4.165,1398,5.122]],["t/959",[0,0.226,28,2.423,443,5.866,491,5.866,542,4.119,618,4.515,621,4.803,623,6.188,936,4.652,1153,5.52,1399,8.25]],["t/961",[0,0.24]],["t/963",[0,0.237,37,1.727,50,2.665,162,3.026,227,4.115,255,3.837,309,4.521,397,2.258,436,3.837,443,4.368,455,2.85,487,2.437,489,2.367,491,4.368,527,3.016,538,3.507,580,3.128,618,3.362,621,5.529,644,2.737,982,4.295,984,2.978,1237,6.85,1242,3.837,1392,4.295,1400,5.282,1401,8.672,1402,5.282,1403,6.1]],["t/966",[0,0.24]],["t/968",[0,0.239,37,1.843,106,2.55,406,2.55,477,3.77,614,2.525,615,3.397,616,2.477,717,2.883,735,4.733,736,4.733,776,3.083,926,3.866,1395,6.384,1404,5.635,1405,4.39]],["t/970",[0,0.24,486,2.709,634,3.632,698,4.41]],["t/972",[0,0.163,55,6.7,482,4.776,527,3.457,537,3.011,572,7.361,634,4.195,677,5.754,817,5.387,1406,8.6,1407,8.6,1408,8.6,1409,8.6,1410,8.6,1411,7.853,1412,8.6]],["t/974",[0,0.216,106,3.506,306,5.626,397,4.141,460,2.395,472,3.778,504,5.626,562,6.298,598,5.182,600,5.814,653,4.066,664,5.814,669,5.626,735,4.669,736,4.669,906,5.314,1156,4.179,1258,6.629,1265,6.034,1362,7.073,1392,7.879,1413,7.745]],["t/977",[0,0.219,28,2.418,37,1.974,61,3.576,65,4.385,106,2.733,161,2.319,163,4.642,366,3.64,384,4.385,440,4.266,455,2.294,487,1.961,523,4.704,526,3.69,533,1.741,580,3.576,602,5.649,616,2.654,618,3.69,648,3.64,689,4.704,735,3.64,736,3.64,812,5.168,1090,4.704,1156,3.257,1159,4.385,1184,7.518,1292,5.513,1335,4.257,1363,4.91,1396,6.18,1397,4.91,1414,5.513,1415,6.038,1416,6.038,1417,8.233,1418,5.513,1419,6.038,1420,5.513,1421,4.385,1422,6.038,1423,5.513,1424,6.038,1425,6.038,1426,6.038]],["t/980",[0,0.238,1396,7.415,1397,6.497]],["t/982",[0,0.238]],["t/984",[0,0.239,28,1.519,37,2.82,161,2.65,288,5.212,344,3.831,353,2.342,420,2.831,487,2.401,533,2.487,616,2.274,875,4.54,1335,6.08,1363,6.011,1396,3.884,1397,4.208,1427,4.725,1428,5.174,1429,5.174,1430,5.174]],["t/986",[0,0.238]],["t/988",[0,0.24]],["t/991",[0,0.237]],["t/993",[0,0.24,344,3.458,1335,4.705,1396,5.01]],["t/996",[0,0.24]],["t/998",[0,0.218,161,2.464,648,5.274,734,6.816,906,7.162,1156,4.72,1387,6.567,1396,6.567,1431,8.749,1432,7.488]],["t/1001",[0,0.235,460,2.108,472,4.159,1433,8.528,1434,7.787]],["t/1003",[0,0.239]],["t/1006",[0,0.24]],["t/1008",[0,0.22,28,2.257,116,4.403,163,5.437,460,2.605,472,3.749,503,5.419,526,4.322,527,3.09,538,3.09,610,3.627,735,4.634,736,5.814,875,4.721,1240,5.988,1250,5.988,1435,7.687,1436,7.687,1437,6.579,1438,7.687]],["t/1010",[0,0.24,28,1.362,37,1.516,47,1.713,50,1.247,65,1.475,67,1.964,161,1.923,163,1.145,255,1.475,288,1.432,343,1.739,406,2.099,443,2.044,455,0.772,468,0.831,472,2.262,487,1.141,489,0.91,526,0.91,527,1.864,533,1.799,543,0.868,591,0.919,609,0.81,614,1.573,616,1.543,618,1.573,621,1.183,634,2.694,653,2.435,683,1.693,692,1.096,717,1.797,740,1.183,776,1.921,795,1.248,801,1.582,982,1.652,1133,1.525,1144,1.394,1147,1.432,1427,1.855,1434,4.235,1437,3.969,1439,2.031,1440,2.031,1441,2.031,1442,2.031,1443,2.031,1444,2.031]],["t/1013",[0,0.214,50,2.93,80,3.661,106,3.734,113,4.119,288,5.816,406,3.734,435,4.331,495,3.526,698,4.886,732,6.193,740,4.803,872,4.803,1156,4.451,1229,5.992,1302,6.709,1445,6.709,1446,8.25]],["t/1015",[0,0.23]],["t/1018",[0,0.239,37,2.01,67,2.604,113,3.069,460,1.52,527,2.471,548,2.87,589,4.615,609,2.451,683,2.965,698,3.641,1159,4.465,1243,6.256,1447,4.789,1448,5.614]],["t/1020",[0,0.24,548,2.905,609,3.35,1119,4.848,1243,6.308,1447,4.848,1448,5.682]],["t/1022",[0,0.24,50,1.886,67,3.189,435,4.593,495,2.269,520,2.906,548,2.479,609,3.002,872,5.094,1447,4.137,1449,5.31,1450,7.529]],["t/1024",[0,0.24,495,2.834,548,3.095,609,3.495,732,4.977,1447,5.165]],["t/1026",[0,0.24,118,5.461,496,3.919,548,2.978,609,3.407,1095,4.97,1451,6.38,1452,5.826]],["t/1028",[0,0.239,427,3.575,490,5.463,548,3.136,609,3.526,698,3.979,740,3.912,1243,5.043,1323,6.135]],["t/1031",[0,0.239,18,4.029,37,2.06,344,4.391,430,2.693,460,2.095,609,2.512,698,3.731,740,5.575,954,4.908,1009,4.442,1243,4.729,1335,4.442,1447,4.908]],["t/1033",[0,0.198,113,4.406,280,5.527,439,4.901,607,4.354,608,4.696,740,5.138,1053,5.768,1445,7.176,1453,8.825,1454,8.825,1455,8.825]],["t/1035",[0,0.185,50,2.794,90,6.396,167,4.304,188,3.362,190,4.927,366,4.742,413,6.128,435,4.13,455,2.988,471,5.713,495,4.551,618,3.525,619,5.397,666,5.546,698,4.658,732,5.904,758,6.732,774,5.263,872,4.58,1059,4.742,1421,5.713,1445,6.396,1456,6.396]],["t/1038",[0,0.19,28,2.423,50,2.93,113,4.119,420,4.515,495,3.526,543,3.526,614,3.697,616,3.626,717,4.221,735,4.974,736,4.974,833,4.886,1069,7.278,1156,4.451,1229,5.992,1335,5.816,1395,6.709]],["t/1040",[0,0.233]],["t/1042",[0,0.24]],["t/1044",[0,0.235,28,1.709,43,1.853,50,1.334,162,6.565,210,6.509,406,1.7,446,5.832,465,5.238,470,4.931,477,2.513,493,3.214,494,4.659,513,3.429,529,4.535,534,2.401,618,1.683,626,6.101,645,2.306,649,5.025,652,3.054,687,2.925,701,3.214,735,3.509,736,3.509,799,2.727,877,2.925,897,3.994,902,3.214,1069,2.513,1171,3.429,1219,3.054,1302,3.054,1319,3.429,1395,3.054,1405,4.535,1457,3.755,1458,9.191,1459,3.755,1460,7.128,1461,5.821,1462,5.821,1463,5.821,1464,3.755,1465,3.755,1466,3.755,1467,3.755,1468,3.429,1469,3.755,1470,8.688,1471,3.755]],["t/1046",[0,0.24,37,2.086,420,3.491,494,4.17,820,3.654,1012,4.08,1069,5.718,1335,4.498]],["t/1048",[0,0.238,28,2.143,580,4.323,614,3.271,623,4.483,717,3.735,1069,4.884,1418,6.665,1472,7.299,1473,7.299]],["t/1050",[0,0.238]],["t/1052",[0,0.218,28,2.346,37,2.613,113,3.989,416,4.732,439,4.437,440,4.14,543,3.415,545,4.652,564,6.497,580,4.732,613,5.803,616,3.512,698,4.732,959,5.803,1069,6.61,1243,5.997,1265,6.224,1363,6.497,1456,6.497]],["t/1055",[0,0.177,47,3.586,50,2.611,80,4.161,106,3.328,406,3.328,435,3.86,440,3.81,492,5.044,534,4.701,551,4.681,560,5.183,567,3.396,580,4.354,591,3.328,716,6.293,729,5.044,753,5.044,831,5.728,874,5.131,885,4.701,947,4.805,1026,5.728,1028,5.978,1328,4.605,1474,7.352,1475,7.624,1476,6.713,1477,6.713,1478,6.713,1479,6.713]],["t/1057",[0,0.225,28,1.862,47,4.685,50,2.252,164,4.939,167,3.469,172,2.841,348,5.426,378,3.894,397,3.637,430,2.71,435,5.39,460,1.567,492,4.35,534,6.142,545,3.691,548,2.959,551,3.165,560,4.47,567,2.929,580,3.755,588,3.971,593,3.092,623,3.894,654,4.605,692,5.539,729,4.35,1159,4.605,1328,3.971,1380,5.426,1475,8.348,1480,6.34,1481,5.426]],["t/1060",[0,0.235,47,4.057,50,2.954,435,4.367,574,5.014,593,4.057,1475,6.764,1481,7.119]],["t/1062",[0,0.236,28,2.384,50,2.883,296,6.324,430,3.469,492,5.57,692,4.379,1328,5.085]],["t/1064",[0,0.236,5,1.146,10,2.542,28,2.057,43,0.921,47,0.91,50,1.544,61,2.574,66,1.356,106,2.945,113,2.17,136,1.704,160,1.704,167,2.851,172,0.836,186,2.792,203,1.704,249,4.46,296,2.542,378,3.635,397,1.857,406,0.845,408,2.779,429,0.845,430,0.798,434,1.052,435,2.736,444,2.238,454,1.518,455,1.239,460,1.074,468,3.038,470,1.146,487,0.606,491,2.53,492,3.575,495,0.798,518,0.614,521,1.573,533,0.941,542,0.932,545,1.087,548,2.029,549,1.169,551,2.17,552,3.406,557,1.598,558,1.649,560,3.674,561,1.598,567,3.602,580,2.574,588,2.043,591,0.845,593,0.91,600,1.401,610,2.458,616,1.434,623,1.146,653,3.416,667,2.183,692,2.344,698,1.105,731,1.22,776,1.021,819,2.542,835,2.238,852,1.598,874,4.065,917,1.356,943,1.037,960,1.454,964,4.172,970,3.575,1012,2.779,1025,2.449,1073,3.262,1142,1.146,1156,1.76,1158,2.37,1174,1.704,1282,1.704,1328,4.387,1357,2.979,1403,1.518,1445,1.518,1475,3.534,1476,1.704,1481,2.792,1482,6.675,1483,1.704,1484,8.884,1485,1.867,1486,4.346,1487,6.506,1488,1.867,1489,1.867,1490,1.867,1491,3.262,1492,1.867,1493,1.867,1494,3.262,1495,1.867,1496,1.867,1497,3.262,1498,5.918,1499,1.867,1500,1.867,1501,1.867,1502,1.867,1503,4.346,1504,1.867,1505,1.867,1506,1.704,1507,1.704]],["t/1067",[0,0.237,37,2.168,296,6.83,397,2.834,460,1.639,468,2.711,487,2.154,560,4.675,567,4.538,593,3.234,749,3.481,874,3.628,964,4.675,1012,4.24,1347,8.006,1508,8.767,1509,6.63,1510,6.63,1511,6.63]],["t/1069",[0,0.182,18,4.915,37,2.513,50,2.73,80,3.411,113,3.838,161,2.165,166,5.583,190,4.815,285,5.988,326,6.579,460,1.9,492,5.274,551,3.838,588,4.815,591,3.479,602,5.274,753,5.274,1026,5.988,1042,5.583,1130,6.251,1212,6.251,1229,5.583,1328,4.815,1512,7.019,1513,7.687,1514,7.842,1515,7.687]],["t/1071",[18,5.453,28,2.504,37,2.789,50,3.029,386,5.453,397,3.645,472,4.159,567,3.939,591,3.86,719,5.141,774,5.706,811,4.884,874,4.667,1164,6.401,1328,5.341,1516,8.528,1517,8.528]],["t/1073",[0,0.164,18,5.546,37,2.836,50,3.081,167,4.746,455,3.295,460,2.144,468,3.547,548,4.049,753,5.951,874,4.746,1156,4.679,1164,6.511,1432,7.424,1518,8.674]],["t/1075",[0,0.216,18,3.395,28,1.559,54,4.849,61,3.145,66,3.857,80,2.356,106,2.403,113,2.651,167,2.906,172,2.38,174,4.545,186,4.545,249,4.545,280,3.326,306,3.857,309,4.545,318,5.038,378,3.261,406,2.403,430,2.269,437,3.189,440,2.752,455,2.861,458,3.857,460,1.313,464,4.815,471,3.857,497,3.986,549,3.326,551,4.368,560,5.308,565,4.545,588,3.326,607,2.62,608,2.825,611,4.545,653,2.788,669,3.857,749,2.788,753,3.643,821,4.318,829,2.717,874,2.906,897,5.166,943,2.949,964,5.308,970,3.643,984,2.994,1025,3.986,1073,3.986,1328,4.716,1437,4.545,1478,4.849,1482,4.545,1483,4.849,1514,4.318,1519,5.652,1520,5.31,1521,4.545,1522,7.114,1523,8.748,1524,5.31,1525,5.31]],["t/1077",[0,0.125,18,4.212,28,1.934,37,2.154,47,3.213,50,3.101,80,3.874,106,3.951,113,3.289,124,5.132,148,3.901,190,5.468,285,5.132,326,5.638,406,2.982,458,4.784,460,1.628,479,4.407,492,4.52,501,3.213,551,3.289,559,2.841,567,3.043,602,4.52,609,2.626,657,4.52,669,4.784,753,7.153,767,3.773,774,4.407,811,3.773,1095,5.132,1229,4.784,1328,4.126,1421,4.784,1479,6.015,1506,6.015,1514,5.357,1522,7.099,1526,6.587,1527,6.587,1528,6.587,1529,6.587,1530,6.587]],["t/1080",[0,0.227,50,2.71,80,3.386,113,4.792,270,6.53,406,3.453,430,3.26,434,4.301,476,4.518,543,3.26,559,3.291,567,3.524,598,5.104,634,3.721,754,4.686,906,5.234,907,4.686,1027,6.204,1153,6.422,1366,5.378,1456,6.204]],["t/1082",[0,0.232,455,3.267,648,5.185,767,4.926,1156,4.64,1157,6.456,1158,6.246,1531,7.853]],["t/1085",[0,0.227,50,2.71,80,3.386,113,4.792,270,6.53,406,3.453,430,3.26,434,4.301,476,4.518,543,3.26,559,3.291,567,3.524,598,5.104,634,3.721,754,4.686,906,5.234,907,4.686,1027,6.204,1153,6.422,1366,5.378,1456,6.204]],["t/1087",[0,0.232,455,3.267,648,5.185,767,4.926,1156,4.64,1157,6.456,1158,6.246,1531,7.853]],["t/1090",[0,0.238,551,4.838,883,5.314,1142,4.757]],["t/1092",[0,0.24,88,5.16,460,1.449,468,4.064,479,3.923,779,4.353,1532,4.768]],["t/1094",[0,0.239,88,4.634,430,3.097,551,3.618,591,3.28,872,4.219]],["t/1096",[0,0.239,519,3.348,551,3.618,1142,4.451,1224,5.263]],["t/1098",[0,0.24,88,4.887,468,3.619,479,3.629,1405,4.225,1532,4.41]],["t/1100",[0,0.236,269,4.046,414,5.413,460,1.718,468,2.841,471,6.567,476,5.354,543,2.97,551,3.469,558,3.512,594,4.268,598,6.049,609,2.77,984,3.918,1389,5.947,1533,5.65,1534,5.947,1535,5.65,1536,6.345]],["t/1102",[0,0.232,113,3.542,212,5.769,394,5.769,406,3.211,439,5.089,440,3.676,455,2.695,460,1.754,476,4.202,567,3.277,630,5.769,634,3.46,648,4.277,683,3.422,835,4.868,1006,4.868,1053,4.637,1144,4.868,1156,3.827,1297,5.769,1299,5.769,1521,6.072,1533,5.769,1537,6.478,1538,6.478]],["t/1104",[0,0.179,537,3.322,1156,5.117,1366,6.688,1421,6.89]],["t/1107",[0,0.238,551,4.838,883,5.314,1142,4.757]],["t/1109",[0,0.24,88,5.16,460,1.449,468,4.064,479,3.923,779,4.353,1532,4.768]],["t/1111",[0,0.239,88,4.634,430,3.097,551,3.618,591,3.28,872,4.219]],["t/1113",[0,0.239,519,3.348,551,3.618,1142,4.451,1224,5.263]],["t/1115",[0,0.24,88,4.887,468,3.619,479,3.629,1405,4.225,1532,4.41]],["t/1117",[0,0.236,269,4.046,414,5.413,460,1.718,468,2.841,471,6.567,476,5.354,543,2.97,551,3.469,558,3.512,594,4.268,598,6.049,609,2.77,984,3.918,1389,5.947,1533,5.65,1534,5.947,1535,5.65,1536,6.345]],["t/1119",[0,0.232,113,3.542,212,5.769,394,5.769,406,3.211,439,5.089,440,3.676,455,2.695,460,1.754,476,4.202,567,3.277,630,5.769,634,3.46,648,4.277,683,3.422,835,4.868,1006,4.868,1053,4.637,1144,4.868,1156,3.827,1297,5.769,1299,5.769,1521,6.072,1533,5.769,1537,6.478,1538,6.478]],["t/1121",[0,0.179,537,3.322,1156,5.117,1366,6.688,1421,6.89]],["t/1124",[0,0.223,28,2.275,37,2.533,50,2.751,106,3.506,190,4.851,397,3.31,406,3.506,413,6.034,430,3.31,474,5.814,482,5.381,639,4.851,748,5.626,763,4.301,874,5.302,1229,5.626,1539,7.073,1540,7.745,1541,6.629,1542,7.745]],["t/1126",[0,0.232,1,6.396,188,3.362,190,4.927,234,5.397,348,6.732,383,7.182,460,1.944,476,4.658,482,4.368,1144,5.397,1297,6.396,1507,7.182,1539,7.182,1543,7.866,1544,7.866]],["t/1128",[406,3.56,482,6.364,487,2.555,548,3.672,567,3.633,587,4.58,612,5.263,749,4.13,809,7.956,817,4.927,874,4.304,1090,6.128,1119,6.128,1144,5.397,1328,4.927,1545,7.866,1546,7.866,1547,9.783,1548,7.866,1549,8.933]],["t/1131",[0,0.22]],["t/1133",[0,0.178,501,4.584,962,8.044,1095,7.321,1550,9.398,1551,9.398]],["t/1136",[0,0.225,65,5.499,66,5.499,172,4.281,200,5.195,424,6.157,430,4.083,435,3.975,482,4.205,534,4.842,551,4.77,593,4.659,644,3.924,698,4.484,866,5.066,874,4.143,1025,5.684,1235,6.914,1242,5.499,1552,5.499,1553,6.914]],["t/1138",[0,0.237,527,4.164,538,2.977,683,3.572,698,5.578,1554,7.406,1555,7.406,1556,7.406]],["t/1140",[0,0.234,37,3.361,534,5.453,593,4.159,683,4.113]],["t/1142",[0,0.234,50,2.17,234,5.695,296,6.467,430,4.322,435,3.208,443,3.558,477,4.088,534,3.907,535,2.947,543,2.612,594,3.753,621,3.558,634,2.98,644,3.166,652,4.969,660,4.76,1005,4.308,1009,4.308,1067,5.534,1100,4.587,1142,3.753,1222,4.969,1223,4.969,1257,5.23,1317,4.76,1541,5.23,1552,6.029,1557,7.579,1558,6.11]],["t/1144",[0,0.235,18,4.354,435,3.575,468,2.784,483,7.636,487,2.212,534,4.354,535,3.284,537,2.384,644,5.157,653,3.575,660,5.304,757,4.032,1067,4.882,1552,8.171,1559,6.217]],["t/1146",[0,0.236,443,4.475,477,5.143,479,5.143,535,3.707,538,3.09,1100,7.239,1296,6.251,1560,7.687,1561,7.687,1562,7.687,1563,7.687]],["t/1148",[0,0.24,18,1.761,37,0.901,50,0.978,172,1.234,407,1.3,429,1.247,430,1.177,460,0.681,482,1.53,535,2.795,538,1.107,540,3.039,588,1.725,609,1.098,619,1.89,621,3.374,623,2.79,657,1.89,806,2.358,874,1.507,917,2.001,1100,2.068,1142,2.79,1296,2.24,1300,2.515,1317,3.539,1401,5.292,1405,5.238,1452,2.515,1468,2.515,1557,2.515,1564,9.683,1565,2.755,1566,2.755,1567,2.755,1568,2.755,1569,4.148,1570,2.755,1571,2.755,1572,2.755,1573,2.755,1574,2.515,1575,2.755,1576,2.755]],["t/1151",[0,0.236,28,1.335,37,2.2,59,3.12,61,2.693,172,3.016,397,2.876,429,2.058,430,2.876,435,3.533,460,1.664,482,5.248,487,1.477,535,2.193,548,2.123,551,5.249,574,2.741,580,2.693,629,5.051,644,3.487,683,2.193,698,2.693,729,3.12,763,3.737,820,2.605,872,3.918,874,3.682,883,5.496,975,3.206,1005,3.206,1142,2.793,1159,3.303,1302,5.472,1322,5.76,1403,3.698,1512,4.152,1552,4.888,1553,4.152,1577,4.152,1578,4.547,1579,4.547]],["t/1153",[0,0.235,18,4.878,28,2.24,429,3.453,435,5.039,460,2.373,535,3.679,555,6.971,574,4.599,874,4.175,1142,4.686]],["t/1155",[0,0.241,266,2.962,609,1.379,616,1.521,779,2.946,1275,4.673,1552,4.912,1580,6.763,1581,6.175,1582,5.269,1583,5.46]],["t/1157",[0,0.176,28,2.734,55,6.362,397,3.979,407,2.815,430,3.49,443,4.755,528,4.825,594,5.016,600,4.479,601,4.852,621,3.474,645,3.665,660,4.648,780,5.107,781,5.107,874,5.926,885,3.815,941,4.648,1012,3.815,1121,8.806,1156,3.219,1312,5.448,1541,5.107,1552,7.617,1581,5.448,1582,6.362,1584,8.167,1585,5.967,1586,9.311,1587,5.967,1588,5.967,1589,5.967,1590,8.167,1591,5.967,1592,5.967,1593,5.967]],["t/1159",[0,0.229,161,2.464,430,3.739,435,4.593,460,2.163,482,4.858,1244,7.989,1594,8.749]],["t/1161",[0,0.23,435,4.477,460,2.108,482,4.736,495,3.645,567,3.939,809,8.359,874,4.667,1118,6.194]],["t/1163",[0,0.241,574,3.435]],["t/1166",[0,0.231,37,2.861,413,6.816,482,4.858,537,3.063,612,5.854,1595,8.749]],["t/1168",[0,0.235,28,2.443,468,3.401,478,7.595,874,4.552,1432,7.119,1596,8.318,1597,8.318]],["t/1170",[0,0.239,397,3.763,548,4.11,601,7.16,673,3.953,1214,5.712,1598,6.674,1599,6.674]],["t/1173",[0,0.225]],["t/1175",[0,0.183,460,2.39,1265,7.531]],["t/1177",[482,5.368,609,3.854,1549,8.827]],["t/1180",[0,0.236,161,2.286,487,2.637,551,4.053,567,3.75,634,3.959,763,4.508]],["t/1182",[0,0.212,47,4.304,227,6.875,485,4.035,909,5.905,1037,6.41,1224,6.41,1552,6.41,1569,9.581,1600,8.825]],["t/1184",[0,0.236,1366,6.063,1421,6.246]],["t/1186",[0,0.163,436,7.504,507,7.361,551,5.159,1601,8.6,1602,9.434,1603,8.843,1604,9.434,1605,7.853,1606,7.361,1607,8.6]],["t/1188",[0,0.233,65,5.98,429,2.733,435,4.919,460,1.493,486,3.129,487,1.961,535,2.912,551,5.652,610,4.42,698,4.876,735,4.963,736,4.963,820,3.458,835,4.142,883,4.142,985,4.704,1100,4.532,1219,4.91,1238,5.513,1335,4.257,1606,8.019,1608,6.038,1609,6.038,1610,6.038,1611,5.513,1612,6.038]],["t/1191",[0,0.239,37,1.487,88,2.908,436,3.303,487,2.186,507,3.892,535,2.193,548,2.123,551,4.94,591,2.058,645,2.793,683,2.193,763,2.525,872,5.155,883,4.617,1005,4.744,1403,5.472,1602,6.145,1603,5.76,1604,4.152,1605,4.152,1613,4.547,1614,4.152,1615,4.152]],["t/1192",[0,0.24,88,2.22,172,1.556,378,2.133,436,2.522,487,1.128,548,1.621,551,5.264,591,1.572,634,1.694,645,2.133,763,1.928,872,5.421,883,4.65,985,2.705,1005,2.448,1116,2.972,1294,2.972,1298,2.823,1340,3.17,1603,2.972,1606,4.686,1611,3.17,1614,3.17,1615,3.17]],["t/1194",[0,0.24,179,1.906,429,1.599,430,1.51,460,0.873,532,2.057,545,2.057,551,5.361,567,1.632,591,1.599,619,2.424,634,1.723,644,1.831,647,2.259,765,2.752,800,2.752,872,5.457,883,6.148,943,3.082,960,2.752,975,4.833,1067,3.037,1222,2.873,1223,2.873,1245,3.808,1278,3.226,1294,3.024,1534,4.75,1616,3.533,1617,3.533]],["t/1197",[0,0.221,80,2.942,280,4.153,421,5.392,468,2.711,487,2.848,530,3.927,551,4.377,560,6.181,568,3.528,579,3.997,588,4.153,729,4.549,749,3.481,763,4.869,791,5.165,923,5.392,1006,4.549,1162,7.504,1317,5.165,1384,6.054,1387,4.977,1411,6.054,1519,6.581,1522,5.392,1535,5.392,1618,6.63,1619,6.054,1620,6.63,1621,6.63,1622,6.63,1623,6.054,1624,6.054,1625,6.054,1626,6.63,1627,6.63,1628,6.63]],["t/1200",[0,0.24,88,4.24,468,1.373,518,1.755,576,1.786,577,2.246,591,1.519,593,1.637,631,2.367,639,2.103,644,2.762,654,2.438,731,3.484,762,3.198,764,2.147,765,2.615,796,2.194,941,2.615,1004,2.615,1007,4.001,1224,2.438,1519,4.001,1629,3.065,1630,5.675]],["t/1202",[0,0.237,28,2.403,501,3.991,731,5.349]],["t/1205",[0,0.241,88,4.383,468,1.444,518,1.827,577,2.364,591,1.599,593,1.723,631,2.491,644,2.876,722,2.364,731,3.627,762,1.704,764,2.259,796,2.309,941,2.752,1007,4.166,1273,3.226,1519,4.166,1629,3.226,1630,3.024]],["t/1207",[0,0.239,28,1.816,460,1.529,501,4.082,722,4.138,750,3.435,1024,5.294,1327,5.294,1328,3.874,1582,4.818,1631,6.185,1632,6.185]],["t/1210",[0,0.24,655,3.778]],["t/1212",[0,0.24,655,4.916,750,3.393,779,3.297,953,5.23]],["t/1214",[0,0.237,28,1.712,460,2.451,472,2.843,501,3.92,589,4.376,612,3.9,642,3.339,729,3.999,731,5.253,742,4.74,745,4.989,750,4.463,765,4.541,767,3.339,793,3.651,817,3.651,971,4.376,1392,4.74,1582,6.261,1630,4.989,1633,5.829,1634,5.323,1635,5.829,1636,5.323,1637,5.829]],["t/1216",[0,0.236,155,3.984,166,3.558,397,2.094,416,2.901,444,3.361,460,2.268,468,3.42,482,2.721,501,3.466,526,2.195,551,2.446,567,3.283,568,2.607,588,3.069,619,3.361,634,2.39,639,3.069,644,2.539,677,4.755,749,2.572,763,2.721,796,3.202,811,2.806,817,3.069,828,2.901,874,2.681,997,3.278,1005,3.454,1007,3.677,1097,4.473,1118,3.558,1322,4.193,1336,4.193,1376,4.473,1423,8.377,1519,6.278,1559,4.473,1624,7.637,1625,4.473,1636,4.473,1638,4.899,1639,4.899,1640,4.899,1641,4.899,1642,4.899,1643,4.899]],["t/1218",[0,0.23,28,1.752,274,5.464,298,5.448,318,3.992,421,4.852,468,2.44,487,1.938,518,3.296,523,4.648,530,4.837,533,1.721,540,3.992,558,3.015,568,4.345,569,4.852,586,3.597,588,3.737,598,3.992,821,4.852,929,6.99,931,4.334,990,4.648,1084,5.107,1133,4.479,1250,4.648,1281,5.107,1317,4.648,1328,3.737,1387,4.479,1414,5.448,1482,5.107,1514,6.641,1522,4.852,1535,4.852,1574,5.448,1619,5.448,1623,5.448,1644,5.967,1645,5.967,1646,5.967,1647,5.967]],["t/1220",[0,0.222,89,3.2,112,4.063,113,2.877,161,2.246,410,4.326,460,1.971,468,3.26,474,4.326,487,1.872,501,2.811,506,4.326,518,3.01,523,4.49,537,2.018,558,2.912,568,3.066,578,4.063,596,2.719,604,4.186,607,2.844,608,3.066,644,2.986,648,3.474,667,3.856,748,4.186,828,4.722,829,2.949,906,3.954,917,4.186,923,4.686,943,3.2,959,4.186,1118,4.186,1156,3.109,1231,5.262,1261,4.686,1298,4.686,1327,6.825,1328,3.61,1380,4.933,1387,4.326,1420,5.262,1421,4.186,1477,5.262,1519,4.326,1577,5.262,1582,4.49,1634,7.281,1648,5.763,1649,5.763,1650,5.763,1651,5.763,1652,5.763,1653,5.763]]],"invertedIndex":[["",{"_index":0,"t":{"5":{"position":[[0,4],[5,1],[7,2],[17,1],[22,9],[32,1],[34,3],[38,3],[42,4],[47,5]]},"7":{"position":[[0,4],[5,1],[7,2],[17,1],[22,9],[32,1],[34,3],[38,3],[42,4],[47,5]]},"9":{"position":[[0,4],[5,1],[7,2],[17,1],[22,9],[32,1],[34,3],[38,3],[42,4],[47,5]]},"26":{"position":[[2,8],[36,6],[76,8]]},"31":{"position":[[0,3],[5,5],[12,4],[18,7],[26,5],[33,3],[38,4],[44,4],[50,7],[58,4],[67,4],[72,3],[80,7],[88,4],[97,3],[116,3],[121,4],[134,3],[139,5],[151,4]]},"33":{"position":[[0,3],[5,5],[11,4],[18,4],[24,7],[36,3],[41,4],[59,4],[64,3],[72,7],[87,3],[92,5],[103,5],[113,3],[118,4],[130,3],[135,5],[144,3],[152,4],[177,2],[182,3]]},"36":{"position":[[0,3],[6,5],[13,4],[19,7],[27,5],[34,3],[40,4],[46,4],[52,7],[60,4],[69,4],[74,3],[82,7],[90,5],[96,7],[104,4],[113,3],[137,4],[142,3],[154,3]]},"38":{"position":[[0,4],[7,4],[12,4],[17,1],[19,4],[25,11],[37,7],[49,4],[56,11],[68,4],[73,1],[75,4],[81,4],[86,7],[101,4],[106,4],[115,11],[127,7],[138,4],[143,7],[158,4],[201,4],[206,4],[232,8],[250,4]]},"40":{"position":[[57,2],[60,3],[71,8]]},"42":{"position":[[72,8],[94,7],[102,8],[111,6],[167,8]]},"46":{"position":[[10,4],[20,7]]},"48":{"position":[[5,4],[11,1]]},"50":{"position":[[2,7],[12,9],[26,2],[32,4],[39,9],[53,2],[59,7],[67,3],[74,2],[80,4],[86,1],[88,8],[97,2],[101,2],[104,2],[107,2],[110,2],[113,8],[122,2],[126,3]]},"53":{"position":[[17,4],[26,2]]},"55":{"position":[[2,5],[8,4],[13,2],[16,4]]},"57":{"position":[[2,5],[8,2],[11,2],[14,4],[19,2],[22,3],[26,6],[37,4],[42,2],[45,3],[49,6]]},"60":{"position":[[16,6],[25,4]]},"62":{"position":[[2,8],[11,7]]},"64":{"position":[[3,2],[14,2],[26,7],[36,8],[45,2],[50,2],[57,8],[66,2],[70,2],[73,2],[76,2],[79,2],[82,2],[85,2]]},"69":{"position":[[2,8],[11,7],[19,11],[31,4]]},"71":{"position":[[0,5],[17,8]]},"73":{"position":[[0,4],[8,5],[15,5],[22,6],[34,5],[40,5],[46,8],[57,4],[64,3],[70,4],[77,6],[91,5],[98,8],[108,5],[117,3],[121,3],[125,1],[127,3],[131,3],[135,1],[137,3],[141,3],[145,1],[147,7],[160,8],[169,3],[175,1],[177,5],[185,1],[189,5],[197,3],[203,4],[210,7],[225,5],[231,3],[235,1],[237,5],[243,3],[247,1],[249,5],[255,3],[259,1]]},"78":{"position":[[2,9],[12,6],[20,5]]},"80":{"position":[[2,9],[13,1],[15,3],[19,3],[28,3],[32,1],[34,3],[38,1]]},"85":{"position":[[2,8],[11,5]]},"87":{"position":[[2,8],[11,3],[15,3],[19,1],[21,3],[25,1],[27,1],[29,3],[33,1],[36,4],[41,4],[47,4],[52,5],[58,1],[60,5],[79,8],[91,3],[95,3],[99,1],[109,8],[123,6],[132,8],[150,16],[150,4],[155,7],[163,3],[172,8],[183,8],[194,3],[200,4],[206,8],[218,8],[235,3],[239,1],[242,4],[248,4],[253,7],[261,9],[274,16],[274,4],[279,7],[287,3],[299,3]]},"92":{"position":[[2,9],[12,4]]},"94":{"position":[[0,5],[9,3],[13,3],[17,3],[21,5],[32,9],[44,5],[52,3],[58,4],[65,5],[78,3]]},"99":{"position":[[2,5],[8,4]]},"101":{"position":[[0,4],[8,3],[12,3],[16,3],[20,8],[34,5],[42,4],[49,3],[55,4],[63,8],[80,3],[84,3],[88,3]]},"104":{"position":[[9,1]]},"106":{"position":[[2,4],[7,1],[9,4]]},"108":{"position":[[0,5],[9,3],[13,3],[17,3],[21,11],[21,6],[28,4],[38,4],[43,1],[47,5],[55,3],[61,4],[68,11],[68,6],[75,4],[87,3]]},"110":{"position":[[0,11],[14,1]]},"115":{"position":[[14,6],[21,6],[28,2],[31,4],[36,7],[44,9],[56,5],[64,5],[70,4],[77,5],[83,4],[90,6],[109,6],[116,3],[120,6],[128,6],[149,6],[156,6],[163,2],[169,5],[191,4],[196,5],[202,6],[211,2],[214,6],[221,4],[226,6],[233,4],[238,6],[245,7],[253,6],[275,6],[282,6],[289,2],[295,11],[321,4],[327,1],[330,6],[338,11],[350,3],[354,5],[362,3],[366,6],[376,1],[378,5],[384,5],[392,5],[398,1],[400,5],[406,7],[416,2],[419,3],[424,2],[430,1],[432,8],[441,3],[445,2],[450,2],[455,6],[462,3],[466,6],[473,3],[477,7],[488,6],[496,7],[504,3],[508,5]]},"117":{"position":[[2,6],[16,7],[24,3],[28,2],[34,7],[44,6],[55,4],[61,1],[64,10],[76,6],[83,3],[87,6],[95,6],[104,3],[108,6],[118,1],[121,3],[125,6],[132,6],[139,5],[147,1],[149,1],[153,1],[155,4],[161,3],[166,6],[173,3],[177,7],[188,1],[191,3],[195,6],[204,1],[206,1],[210,1],[212,4],[218,3]]},"119":{"position":[[0,6],[11,7],[22,4],[27,2],[33,1],[36,11],[58,11],[70,11],[82,6],[89,5],[96,4],[103,11],[117,2],[122,6],[131,4],[138,3],[144,7],[154,5],[161,3],[171,4],[176,5],[182,1],[186,4],[191,11]]},"121":{"position":[[1,6],[9,8],[22,6],[30,3],[35,5],[42,11],[56,6],[64,5],[70,4],[75,6],[83,3],[89,5],[96,11],[110,6],[118,3],[122,6],[129,6],[136,5],[143,5],[150,3],[156,6],[164,8]]},"123":{"position":[[0,11],[16,4],[21,9],[35,4],[40,9],[53,6],[60,5],[69,2]]},"126":{"position":[[0,11],[62,3]]},"129":{"position":[[35,3]]},"131":{"position":[[0,6],[32,8],[52,10],[63,14],[92,3],[100,2],[105,7],[115,4]]},"134":{"position":[[0,7],[8,6],[15,6],[25,7],[35,6],[44,3],[50,4],[61,7],[94,6],[108,4],[113,7],[121,9],[133,5],[141,5],[147,4],[154,5],[160,4],[167,6],[179,6],[192,4],[197,6],[204,6],[224,8],[233,3],[237,6],[244,7],[258,8],[273,5],[279,4],[284,7],[302,7],[310,4],[315,5],[326,5],[348,4],[353,5],[359,6],[368,4],[373,6],[380,4],[385,6],[392,7],[400,6],[412,9],[430,4],[435,9],[448,6],[457,6],[465,6],[473,8],[483,4],[488,3],[492,6],[499,7],[509,7],[518,4],[523,4],[528,5],[535,3],[548,15],[569,4],[575,1],[578,6],[586,15],[602,1],[604,7],[613,5],[621,1],[623,5],[629,4],[636,5],[642,1],[644,5],[650,6],[659,4],[667,1],[669,4],[676,2],[679,1],[682,2],[688,1],[690,8],[699,4],[706,2],[711,6],[718,6],[725,3],[730,7],[738,7],[746,10],[761,1],[763,8],[772,4],[780,1],[782,6],[789,3],[798,8],[814,4],[820,1],[823,6],[831,8],[842,5],[850,1],[852,5],[858,5],[866,5],[872,1],[874,5],[880,7],[890,3],[894,1],[897,1],[902,5],[908,1],[910,8],[921,2],[924,3],[931,1],[933,5],[942,3],[949,3],[955,6],[962,3],[970,6],[977,3],[986,7],[1001,4],[1007,1],[1010,6],[1018,7],[1028,5],[1036,1],[1038,5],[1044,5],[1052,5],[1058,1],[1060,5],[1066,7],[1076,3],[1080,3],[1084,5],[1090,3],[1094,1],[1097,1],[1102,5],[1108,1],[1110,8],[1121,2],[1124,1],[1129,1],[1131,4],[1139,1],[1144,3],[1150,3],[1156,1],[1162,6],[1169,3],[1178,9],[1196,3],[1201,4],[1207,1],[1210,6],[1218,9],[1228,3],[1232,5],[1241,1],[1243,7],[1254,3],[1263,9],[1287,4],[1293,1],[1296,6],[1304,9],[1314,3],[1318,7],[1326,7],[1337,3],[1343,6],[1352,4],[1359,3],[1363,4],[1371,6],[1378,4],[1383,3],[1392,1],[1394,7],[1403,3],[1407,6],[1416,6],[1424,5],[1430,4],[1436,1],[1440,1],[1445,1],[1447,1],[1451,3],[1455,4],[1461,3],[1465,4],[1471,3],[1475,7]]},"136":{"position":[[0,7],[8,7],[16,6],[26,3],[32,11],[44,6],[57,10],[73,4],[78,10],[89,6],[98,4],[103,6],[110,6],[118,6],[125,6],[132,5],[138,4],[143,6],[150,6],[157,4],[162,6],[173,4],[178,13],[192,4],[197,6],[205,6],[213,6],[220,6],[229,10],[242,6],[250,10],[262,4],[268,4],[274,6],[282,6],[290,5],[297,4],[302,4],[307,6],[315,3],[321,6],[329,4],[334,4],[339,6],[354,4],[360,1],[363,10],[375,5],[383,5],[391,3],[395,6],[405,1],[408,8],[420,1],[424,1],[426,4],[432,2],[435,1],[437,3],[443,6],[450,3],[456,4],[462,1],[465,10],[477,4],[484,5],[492,3],[496,6],[506,1],[509,8],[521,1],[525,1],[527,4],[533,5],[539,1],[541,6],[549,6],[556,3],[562,4],[568,1],[571,10],[583,4],[590,6],[599,6],[606,1],[608,4],[615,4],[621,1],[624,10],[636,3],[644,3],[650,6],[659,4],[666,1],[668,6],[676,6],[683,4],[688,3],[697,1],[699,5],[706,3],[710,6],[720,1],[723,3],[729,1],[731,1],[735,1],[737,4],[743,3],[761,1],[763,6],[770,9],[780,6],[787,5],[794,4],[800,1],[802,4],[808,4],[815,3],[821,7],[830,3],[844,4],[850,1],[853,10],[865,3],[869,3],[873,6],[883,1],[885,5],[894,3]]},"138":{"position":[[0,7],[8,4],[13,6],[23,7],[33,11],[45,6],[54,11],[66,7],[76,4],[84,4],[89,4],[101,1],[110,6],[120,6],[127,9],[142,1],[150,6],[160,7],[168,13],[183,6],[192,6],[200,2],[203,3],[210,6],[217,15],[233,6],[242,3],[249,3],[255,5],[261,3],[271,1],[281,2],[284,3],[291,6],[298,8],[310,3],[317,3],[323,5],[329,3],[339,1],[349,3],[354,6],[364,7],[372,10],[383,7],[391,10],[405,5],[411,6],[420,2],[423,6],[430,9],[440,3],[448,1],[458,6],[465,3],[470,5],[477,11],[492,4],[497,5],[503,1],[507,4],[512,6],[523,1],[533,2],[536,3],[543,6],[550,7],[561,3],[568,3],[574,5],[580,3]]},"140":{"position":[[1,6],[9,8],[22,6],[30,3],[35,5],[42,11],[56,6],[64,5],[70,4],[75,6],[83,3],[89,5],[96,11],[110,6],[118,8]]},"142":{"position":[[3,4],[11,7],[56,6],[63,4],[85,5],[93,3],[97,3]]},"144":{"position":[[7,6],[18,7],[44,7],[59,9],[88,7],[107,4],[112,4],[117,9]]},"150":{"position":[[16,6],[23,7],[31,2],[37,12],[60,4],[65,12],[78,3],[87,4],[104,5],[112,7],[120,12],[135,4],[140,7],[148,7],[161,12],[174,6],[183,4],[189,1],[191,12],[205,6],[214,6],[261,6],[273,6],[281,7],[292,7],[303,7],[313,1],[321,11],[344,4],[349,11],[361,6],[370,3],[374,7],[382,5],[388,12],[413,6],[420,6],[427,2],[430,4],[436,1],[439,11],[452,12],[465,4],[470,6],[478,5],[486,1],[488,2],[491,4],[498,5],[504,1],[506,2],[509,6],[518,4],[524,2],[530,1],[532,8],[541,4],[547,2],[551,2],[556,6],[563,6],[570,3],[575,7],[583,3],[587,10],[602,2],[605,4],[610,5],[619,7],[629,6],[636,6],[643,3],[648,7],[656,7],[664,7],[676,2],[679,3],[686,4],[691,3],[695,5],[704,3],[711,3],[717,6],[724,3],[730,4],[735,5],[743,7],[751,3],[755,7],[764,7],[775,4],[780,3],[784,4],[792,6],[799,3],[805,4],[811,1],[814,11],[827,11],[839,4],[844,6],[852,5],[860,1],[862,2],[865,4],[872,5],[878,1],[880,2],[883,6],[892,4],[898,2],[904,1],[906,8],[915,4],[921,2],[925,2],[930,6],[937,6],[944,3],[949,7],[957,3],[961,10],[976,2],[979,4],[984,5],[993,7],[1003,6],[1010,6],[1017,3],[1022,7],[1030,7],[1038,7],[1050,2],[1053,3],[1060,4],[1065,3],[1069,4],[1077,3],[1084,3],[1090,6],[1097,3],[1103,4],[1108,5],[1116,7],[1124,3],[1128,7],[1137,7],[1148,4],[1153,3],[1157,4],[1165,6],[1172,3],[1178,6],[1211,6],[1255,9],[1267,6],[1274,4],[1280,1],[1283,11],[1296,6],[1303,3],[1307,7],[1315,7],[1326,3],[1332,6],[1341,4],[1348,3],[1352,4],[1360,6],[1367,4],[1372,3],[1381,1],[1383,7],[1392,3],[1396,6],[1405,11],[1418,5],[1424,4],[1430,1],[1436,1],[1438,1],[1442,3],[1446,4],[1452,3],[1456,7],[1472,11],[1487,2],[1490,3],[1494,2],[1505,2],[1508,3],[1512,7],[1523,3],[1529,3],[1533,7],[1544,5],[1550,4],[1556,1],[1559,7],[1569,7],[1577,2],[1580,6],[1589,4],[1596,2],[1603,8],[1625,1],[1627,2],[1630,5],[1638,4],[1644,2],[1650,1],[1652,8],[1661,3],[1665,2],[1669,1],[1671,2],[1674,7],[1684,2],[1688,2],[1694,4],[1699,5],[1708,7],[1718,2],[1721,3],[1725,7],[1736,3],[1742,3],[1746,7],[1757,5],[1763,4],[1769,3],[1774,7],[1784,7],[1792,11],[1806,4],[1818,8],[1845,2],[1848,4],[1853,1],[1855,7],[1864,1],[1866,5],[1875,6],[1885,1],[1887,6],[1894,1],[1897,2],[1900,1],[1902,7],[1913,3],[1919,6],[1928,4],[1933,1],[1935,7],[1946,6],[1954,4],[1961,4],[1966,5],[1972,4],[1977,8],[1986,1],[1988,9],[2001,4],[2006,11],[2020,1],[2022,7],[2033,5],[2039,4],[2045,3],[2050,7],[2060,7],[2070,4],[2086,4],[2091,3],[2096,3]]},"152":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[62,6],[70,8],[83,4],[89,8],[102,6],[110,3],[115,5],[122,11],[136,11],[149,5],[155,4],[160,6],[170,5],[177,11],[191,6],[199,3],[203,5],[209,4],[214,6],[222,7],[230,2],[233,6],[241,6],[249,3],[254,5],[261,4],[268,11],[281,5],[287,4],[292,6],[302,5],[309,4],[316,6],[324,3],[328,5],[334,4],[339,6],[347,4],[352,7],[360,7],[369,11],[382,4],[387,5],[393,2],[396,7],[405,5],[412,3],[418,3],[422,3],[426,5],[432,7],[443,6],[451,8],[464,4],[470,8]]},"158":{"position":[[9,5],[17,4],[22,7],[30,4],[35,5],[41,7],[56,5],[65,6],[72,6],[79,2],[85,5],[100,4],[105,5],[111,6],[120,4],[125,3],[132,1],[140,1],[147,7],[155,6],[170,4],[175,6],[195,5],[217,4],[222,5],[228,6],[237,2],[240,6],[247,4],[252,6],[259,4],[264,6],[271,7],[279,6],[299,4],[304,5],[319,7],[327,4],[332,5],[349,9],[359,3],[370,6],[395,5],[404,6],[411,6],[418,2],[424,7],[457,6],[471,4],[476,7],[484,9],[496,5],[504,5],[510,4],[517,5],[523,4],[530,6],[537,6],[544,5],[551,5],[559,6],[579,6],[623,9],[635,6],[642,4],[648,1],[651,6],[659,6],[666,3],[670,7],[678,7],[689,3],[695,6],[704,4],[711,3],[715,4],[723,6],[730,4],[735,3],[744,1],[746,7],[755,3],[759,6],[768,6],[776,5],[782,4],[788,1],[794,1],[796,1],[800,3],[804,4],[810,3],[814,7],[830,6],[840,2],[843,3],[847,2],[858,2],[861,3],[865,7],[876,3],[882,3],[886,7],[897,5],[903,4],[909,1],[912,7],[922,7],[930,2],[933,6],[942,4],[949,2],[956,8],[978,1],[980,2],[983,5],[991,3],[996,2],[1002,1],[1004,8],[1013,3],[1017,2],[1021,1],[1023,2],[1026,7],[1036,2],[1040,2],[1045,2],[1048,3],[1052,7],[1063,3],[1069,3],[1073,7],[1084,5],[1090,4],[1096,3],[1101,7],[1111,7],[1119,3],[1123,5],[1131,4],[1143,8],[1170,2],[1173,4],[1178,1],[1180,7],[1189,1],[1191,5],[1200,6],[1210,1],[1212,6],[1219,1],[1222,2],[1225,1],[1227,7],[1238,3],[1244,6],[1253,4],[1258,1],[1260,7],[1271,6],[1279,4],[1286,4],[1291,5],[1297,4],[1302,8],[1311,1],[1313,9],[1326,4],[1331,11],[1345,1],[1347,7],[1358,5],[1364,4],[1370,3],[1375,7],[1385,7],[1395,4],[1411,3],[1416,3]]},"160":{"position":[[2,5],[12,4],[26,4],[32,1],[35,10],[47,3],[55,3],[59,5],[67,1],[69,3],[75,5],[83,6],[92,4],[99,1],[101,6],[109,6],[116,4],[121,3],[130,1],[132,5],[139,3],[143,6],[153,1],[156,3],[162,1],[164,1],[168,1],[170,4],[176,3],[194,7],[205,4],[210,4],[215,6],[222,5],[229,1],[232,2],[235,5],[241,1],[246,1],[250,1],[252,6],[259,4],[264,6],[271,5],[278,4],[284,1],[286,4],[292,4],[299,3],[305,7],[314,3],[319,7],[328,7],[337,9],[348,4],[359,4],[366,1],[368,6],[375,4],[380,6],[387,5],[394,4],[400,1],[402,4],[408,4],[415,3],[421,2],[426,4],[433,7],[442,3],[447,7],[456,7],[465,9],[476,4],[497,5],[508,7],[516,3],[520,6],[530,1],[533,3],[537,5],[543,4],[548,6],[557,1],[559,1],[563,1],[565,4],[573,5],[579,7]]},"162":{"position":[[0,4],[6,1],[9,11],[22,6],[29,3],[33,6],[40,5],[47,6],[54,5],[62,6],[69,6],[76,5],[82,4],[88,1],[91,7],[101,4],[106,7],[114,7],[124,4],[130,3],[134,7],[143,4],[149,1],[153,1],[157,3],[161,4],[167,3],[171,7]]},"164":{"position":[[0,10],[12,6],[29,10],[41,4],[47,6],[55,8],[68,4],[74,8],[87,6],[95,3],[100,5],[107,11],[121,6],[129,5],[135,4],[140,6],[150,5],[157,11],[171,6],[179,3],[183,5],[189,4],[194,6],[202,7],[210,2],[213,6],[221,6],[229,3],[234,5],[241,4],[248,6],[256,5],[262,4],[267,6],[277,5],[284,4],[295,11],[311,6],[319,3],[323,5],[329,4],[334,6],[342,4],[347,7],[355,7],[364,6],[372,4],[377,5],[383,2],[386,6],[394,5],[401,3],[407,6],[415,3],[419,6],[426,6],[433,5],[440,5],[447,3],[453,6],[461,8],[474,4],[480,8]]},"166":{"position":[[10,6],[17,5]]},"168":{"position":[[6,6],[13,5]]},"170":{"position":[[32,2],[37,9],[101,4],[106,8],[216,8],[230,4],[235,8],[244,9],[256,4],[261,7],[269,6],[277,5],[293,13],[314,4],[319,13],[333,6],[342,4],[348,1],[350,13],[365,4],[370,7],[378,6],[386,5],[394,3],[398,6],[415,1],[417,1],[421,7],[430,6],[437,3],[446,11],[465,4],[470,11],[482,6],[491,4],[497,1],[499,11],[512,4],[517,7],[525,6],[533,5],[541,3],[545,6],[562,1],[564,1],[568,7],[577,6],[584,3],[602,19],[627,4],[632,19],[652,6],[661,8],[670,8],[681,4],[686,22],[709,8],[718,8],[729,19],[751,6],[759,19],[779,8],[789,8],[801,4],[807,1],[810,19],[831,12],[844,7],[852,6],[875,7],[886,3],[890,7],[903,1],[911,7],[920,1],[924,1],[926,8],[935,4],[940,7],[957,4],[962,4],[985,13],[1002,13],[1018,7],[1029,22],[1052,13],[1067,7],[1075,12],[1089,5],[1117,11],[1132,11],[1146,7],[1156,22],[1179,11],[1192,7],[1200,12],[1214,5],[1241,11],[1259,4],[1264,11],[1276,6],[1285,4],[1291,1],[1293,11],[1306,9],[1316,7],[1324,6],[1332,5],[1340,3],[1344,6],[1359,1],[1361,1],[1365,7],[1374,6],[1381,3],[1400,14],[1421,4],[1426,14],[1441,6],[1450,11],[1462,11],[1476,4],[1482,1],[1485,14],[1501,12],[1514,7],[1522,6],[1545,7],[1556,3],[1560,7],[1573,1],[1581,7],[1590,1],[1594,1],[1596,11],[1608,9],[1618,7],[1635,4],[1640,4],[1649,9],[1662,14],[1677,11],[1690,11],[1705,9],[1715,12],[1729,5],[1754,14]]},"172":{"position":[[34,2],[39,9],[58,4],[63,17],[81,6],[91,15],[117,6],[124,6]]},"174":{"position":[[48,7],[59,2],[62,6],[70,18],[70,10],[81,7]]},"176":{"position":[[12,4],[17,8],[40,8],[49,7]]},"178":{"position":[[16,9],[28,2],[34,6],[60,7],[78,6],[86,3],[90,1],[95,1],[98,1],[102,7],[110,6],[120,1],[126,2],[129,10],[140,15]]},"180":{"position":[[32,18],[57,2],[65,4],[70,18],[89,6],[98,9],[108,6],[123,9],[133,4],[138,4]]},"182":{"position":[[12,3],[16,7],[34,7],[51,4],[57,1],[60,15],[77,11],[89,5],[97,6],[105,5],[113,3],[121,18],[145,8],[155,4],[160,4],[165,5],[172,1],[176,6],[185,4],[190,1],[192,13],[209,3],[214,6],[223,3],[227,8],[236,4],[243,4],[248,5],[254,1],[258,4],[263,6],[272,6],[279,6],[286,3],[291,6],[298,7]]},"184":{"position":[[0,7],[8,4],[13,6],[23,3],[29,4],[40,15],[56,7],[64,1],[66,3],[70,2],[73,5],[79,3],[83,9],[93,7],[101,7],[109,8],[118,4],[123,15],[139,6],[148,5],[156,6],[163,13],[177,4],[183,18],[202,12],[215,4],[220,6],[234,18],[253,10],[264,1],[266,7],[274,2],[277,6],[284,3],[288,5],[294,4],[299,18],[318,6],[327,8],[338,6],[345,8],[354,4],[359,5],[370,18],[389,7],[397,3],[401,6],[408,1],[410,3],[414,15],[430,4],[435,18],[457,15],[475,3],[483,15],[500,5],[509,6],[519,13],[534,4],[539,4],[545,18],[566,12],[580,4],[585,4],[590,6],[603,2],[606,3],[610,15],[628,6],[635,3],[644,11],[656,6],[663,7],[671,3],[675,5],[681,2],[684,7],[692,1],[694,7],[702,7],[710,3],[714,7],[722,4],[728,1],[731,15],[748,11],[760,8],[771,6],[779,5],[787,3],[795,18],[815,8],[825,8],[835,8],[845,4],[850,4],[855,5],[862,1],[869,8],[878,2],[881,5],[887,8],[898,1],[900,13],[917,3],[921,6],[930,3],[934,8],[948,8],[957,10],[968,5],[974,3],[978,10],[989,4],[995,1],[998,15],[1015,8],[1028,5],[1034,1],[1036,12],[1055,15],[1071,7],[1079,8],[1088,8],[1097,2],[1100,1],[1102,6],[1109,4],[1114,6],[1121,4],[1127,1],[1130,15],[1147,15],[1167,3],[1173,6],[1182,4],[1187,3],[1196,1],[1198,13],[1213,1],[1215,5],[1223,3],[1227,8],[1236,3],[1240,7],[1249,7],[1257,5],[1266,1],[1268,5],[1275,3],[1279,8],[1291,3],[1295,4],[1302,1],[1304,12],[1318,3],[1322,7],[1331,8],[1340,4],[1345,10],[1358,6],[1371,4],[1376,4],[1388,6],[1395,3],[1399,5],[1405,3],[1409,10],[1420,10],[1434,18],[1455,5],[1461,10],[1472,8],[1486,8],[1495,4],[1500,7],[1508,2],[1511,4],[1520,4],[1525,5],[1531,3],[1537,4],[1542,11],[1555,2],[1558,3],[1565,10],[1576,11],[1590,6],[1598,1],[1603,1],[1608,1],[1614,3],[1621,3],[1627,3],[1631,7],[1640,5],[1646,8],[1655,5],[1664,3],[1675,2],[1678,4],[1687,4],[1692,5],[1698,1],[1702,4],[1707,6],[1715,2],[1718,3],[1725,10],[1736,11],[1750,6],[1758,1],[1763,1],[1768,1],[1774,3],[1781,3],[1787,3],[1791,7],[1800,5],[1806,8],[1815,5],[1824,3],[1838,4],[1843,4],[1848,3],[1852,3],[1856,7],[1864,2],[1867,7],[1875,4],[1880,5],[1886,1],[1890,4],[1895,6],[1919,7],[1948,10],[1978,7],[2006,12],[2039,7],[2047,4],[2052,6],[2062,7],[2072,6],[2081,3],[2087,4],[2094,4],[2105,7],[2113,10],[2124,1],[2126,10],[2137,2],[2140,5],[2146,4],[2151,8],[2160,4],[2165,7],[2173,6],[2182,5],[2190,6],[2197,7],[2205,3],[2212,5],[2218,7],[2226,4],[2231,4],[2236,8],[2245,4],[2250,4],[2258,4],[2263,6],[2270,9],[2285,15],[2301,12],[2314,1],[2316,5],[2322,6],[2329,9],[2339,4],[2344,15],[2360,6],[2369,8],[2380,6],[2387,8],[2396,4],[2401,5],[2407,9],[2417,6],[2427,3],[2431,7],[2439,9],[2449,4],[2454,4],[2462,3],[2466,8],[2480,17],[2498,10],[2509,10],[2520,8],[2529,4],[2534,17],[2552,6],[2561,18],[2580,3],[2587,6],[2594,4],[2599,3],[2603,8],[2612,14],[2627,4],[2632,8],[2644,7],[2652,3],[2656,4],[2661,7],[2669,16],[2686,4],[2694,6],[2702,8],[2711,5],[2717,6],[2724,8],[2738,10],[2749,7],[2757,4],[2762,4],[2767,4],[2772,6],[2779,4],[2784,10],[2795,4],[2800,10],[2811,6],[2820,14],[2835,7],[2843,7],[2851,17],[2869,11],[2881,4],[2887,15],[2903,9],[2913,4],[2918,4],[2923,7],[2934,3],[2938,7],[2946,3],[2950,4],[2955,4],[2960,7],[2968,11],[2980,4],[2985,4],[2995,7],[3003,7],[3011,7],[3019,3],[3023,6],[3030,10],[3041,8],[3050,4],[3055,6],[3064,12],[3077,4],[3082,4],[3087,6],[3094,4],[3099,9],[3114,13],[3128,7],[3136,1],[3138,10],[3149,10],[3160,8],[3169,4],[3174,13],[3188,4],[3193,17],[3213,10],[3226,2],[3229,4],[3234,18],[3256,1],[3260,4],[3265,18],[3286,2],[3291,2],[3294,4],[3299,14],[3317,1],[3321,4],[3326,14],[3343,1],[3347,4],[3352,6],[3361,6],[3369,10],[3381,14],[3397,7],[3405,7],[3414,1],[3418,7],[3427,4],[3433,11],[3446,4],[3451,4],[3457,15],[3474,4],[3479,18],[3500,9],[3511,4],[3516,4],[3521,4],[3526,7],[3536,11],[3549,4],[3554,4],[3559,4],[3568,8],[3578,4],[3583,4],[3588,6],[3606,3],[3610,6],[3617,3],[3621,10],[3632,1],[3634,10],[3645,4],[3650,4],[3656,1],[3659,10],[3671,3],[3679,1],[3681,6],[3688,3],[3692,1],[3695,5],[3701,1],[3703,6],[3710,4],[3717,3],[3723,6],[3732,4],[3737,3],[3746,1],[3748,11],[3761,1],[3763,14],[3778,3],[3783,4],[3788,8],[3802,1],[3804,9],[3815,1],[3817,14],[3832,8],[3842,4],[3847,3],[3856,1],[3858,11],[3871,3],[3880,7],[3888,9],[3898,8],[3907,4],[3914,1],[3916,8],[3926,6],[3939,4],[3945,1],[3948,10],[3960,14],[3975,3],[3980,15],[3999,5],[4005,5],[4011,3],[4015,8],[4028,6],[4036,5],[4042,3],[4046,10],[4057,4],[4062,2],[4065,1],[4067,7],[4075,16],[4097,8],[4106,5],[4112,6],[4119,8],[4130,1],[4132,14],[4149,7],[4158,5],[4165,3],[4169,8],[4179,7],[4188,1],[4190,14],[4205,7],[4215,1],[4218,8],[4228,4],[4233,3],[4242,3],[4246,6],[4254,7],[4262,5],[4269,1],[4271,1],[4276,1],[4278,1],[4282,1],[4284,14],[4299,7],[4308,1],[4310,14],[4325,5],[4332,3],[4336,8],[4348,3],[4354,4],[4360,1],[4363,10],[4375,14],[4390,8],[4399,4],[4404,7],[4415,8],[4427,1],[4429,14],[4444,5],[4450,8],[4465,8],[4474,7],[4482,3],[4486,4],[4491,3],[4495,4],[4500,7],[4508,7],[4516,4],[4522,1],[4525,10],[4537,8],[4546,3],[4550,7],[4558,7],[4567,5],[4575,6],[4583,5],[4591,3],[4599,15],[4616,8],[4626,5],[4633,8],[4643,4],[4648,4],[4653,5],[4661,9],[4672,3],[4676,7],[4685,3],[4690,1],[4694,4],[4699,3],[4705,8],[4718,9],[4729,4],[4734,3],[4743,6],[4752,4],[4757,1],[4759,11],[4774,3],[4779,6],[4788,4],[4793,3],[4802,3],[4806,8],[4816,6],[4823,3],[4827,4],[4834,3],[4838,4],[4846,6],[4853,3],[4857,3],[4865,4],[4872,1],[4874,8],[4884,6],[4891,6],[4898,3],[4903,10],[4914,2],[4917,8],[4926,4],[4933,4],[4940,3],[4944,4],[4952,6],[4959,3],[4963,3],[4976,8],[4985,6],[4992,9],[5002,3],[5006,7],[5014,4],[5019,3],[5023,4],[5029,1],[5032,10],[5044,8],[5053,3],[5057,7],[5065,7],[5075,7],[5084,5],[5093,8],[5105,4],[5110,4],[5115,7],[5124,6],[5133,4],[5138,1],[5140,9],[5153,8],[5163,6],[5172,4],[5177,5],[5188,8],[5198,6],[5205,5],[5212,3],[5216,4],[5223,3],[5227,4],[5235,6],[5242,7],[5253,3],[5257,3],[5265,4],[5272,1],[5274,8],[5284,6],[5291,7],[5302,6],[5309,3],[5314,10],[5325,2],[5328,8],[5337,4],[5344,4],[5351,3],[5355,4],[5363,6],[5370,7],[5381,3],[5385,3],[5398,4],[5403,10],[5414,5],[5420,4],[5425,3],[5429,10],[5440,4],[5446,1],[5449,10],[5461,4],[5470,1],[5472,12],[5485,2],[5488,4],[5497,5],[5503,1],[5505,8],[5515,1],[5517,6],[5524,4],[5531,5],[5537,1],[5539,11],[5552,5],[5558,1],[5560,9],[5571,5],[5577,1],[5579,11],[5592,3],[5596,7],[5605,10],[5616,7],[5624,10],[5645,14],[5660,8],[5669,9],[5679,5],[5685,3],[5689,6],[5696,10],[5707,4],[5713,1],[5716,10],[5728,14],[5743,3],[5747,7],[5755,7],[5764,3],[5768,4],[5776,5],[5784,6],[5793,4],[5798,1],[5800,11],[5815,3],[5820,6],[5827,3],[5831,4],[5838,1],[5840,8],[5850,6],[5857,6],[5864,3],[5869,10],[5880,2],[5883,8],[5892,4],[5899,4],[5906,3],[5910,4],[5918,6],[5925,3],[5929,3],[5939,4],[5944,4],[5956,12],[5969,7],[5977,4],[5985,17],[6004,18],[6024,2],[6028,14],[6044,1],[6048,4],[6053,6],[6061,16],[6079,5],[6089,5],[6095,2],[6098,7],[6106,2],[6109,6],[6118,10],[6132,13],[6146,4],[6152,2],[6155,10],[6166,3],[6175,7],[6183,5],[6189,4],[6194,7],[6202,3],[6207,6],[6217,7],[6225,11],[6237,7],[6245,10],[6259,1],[6261,4],[6266,6],[6274,5],[6280,6],[6292,3],[6296,5],[6302,3],[6309,10],[6320,8],[6329,3],[6336,6],[6344,1],[6349,1],[6354,1],[6359,2],[6362,3],[6369,3],[6375,3],[6379,7],[6388,5],[6394,7],[6402,5],[6411,3],[6421,3],[6425,5],[6431,5],[6438,3],[6445,10],[6456,8],[6465,3],[6470,2],[6473,3],[6480,3],[6486,3],[6490,7],[6499,5],[6505,7],[6513,5],[6522,3],[6529,4],[6536,3],[6540,6],[6548,7],[6556,5],[6563,1],[6565,1],[6570,1],[6572,1],[6576,5],[6582,7],[6591,5],[6597,5],[6609,7],[6617,6],[6624,7],[6632,10],[6643,14],[6658,3],[6663,4],[6672,3],[6676,7],[6685,9],[6695,6],[6702,7],[6715,10],[6726,4],[6735,8],[6744,4],[6749,8],[6759,5],[6765,7],[6773,6],[6780,4],[6785,10],[6796,3],[6800,10],[6811,8],[6820,5],[6826,6],[6833,3],[6837,6],[6844,8],[6853,12],[6866,7],[6875,17],[6893,6],[6900,6],[6907,7],[6915,4],[6920,7],[6928,8],[6937,6],[6944,8],[6953,4],[6958,10],[6969,8],[6978,13],[6992,8],[7002,8],[7011,8],[7020,3],[7024,8],[7034,11],[7047,3],[7051,7],[7060,9],[7071,8],[7080,6],[7087,2],[7090,9],[7100,5],[7106,7],[7114,7],[7123,3],[7127,10],[7138,7],[7146,7],[7154,3],[7158,8],[7167,12],[7180,6],[7187,11],[7199,4],[7204,6],[7211,2],[7214,12],[7227,9],[7237,6],[7245,14],[7260,6],[7267,3],[7271,6],[7278,6],[7285,13],[7299,7],[7307,7],[7315,7],[7323,7],[7331,8],[7340,8],[7350,4],[7355,4],[7360,7],[7368,4],[7373,6],[7380,8],[7389,4],[7394,9],[7404,3],[7408,6],[7415,9],[7425,7],[7433,6],[7440,4],[7445,7],[7454,5],[7460,4],[7465,8],[7474,6],[7481,3],[7485,7],[7493,2],[7496,6],[7503,6],[7510,2],[7513,8],[7522,5],[7528,7],[7536,7],[7545,5],[7551,7],[7559,3],[7563,3],[7567,9],[7577,10],[7588,3],[7592,3],[7596,10],[7616,7],[7624,4],[7629,6],[7639,7],[7649,6],[7658,3],[7664,4],[7671,4],[7682,7],[7690,7],[7698,3],[7702,9],[7712,3],[7716,8],[7725,4],[7730,9],[7740,4],[7745,7],[7753,9],[7765,7],[7773,3],[7777,7],[7785,7],[7794,5],[7805,14],[7820,9],[7830,8],[7839,4],[7844,14],[7859,6],[7868,8],[7877,4],[7882,7],[7890,8],[7899,4],[7904,6],[7913,2],[7916,4],[7921,9],[7936,17],[7954,7],[7962,1],[7964,3],[7968,7],[7976,4],[7981,9],[7991,5],[7997,4],[8002,4],[8007,17],[8025,9],[8035,3],[8041,14],[8058,6],[8066,14],[8082,8],[8092,4],[8097,4],[8102,7],[8111,9],[8123,8],[8133,4],[8138,4],[8143,6],[8161,5],[8167,6],[8174,10],[8185,8],[8194,4],[8200,1],[8203,14],[8219,5],[8229,1],[8231,2],[8234,3],[8238,1],[8241,2],[8244,4],[8253,5],[8259,1],[8261,2],[8264,4],[8271,3],[8277,6],[8286,4],[8291,3],[8300,1],[8302,8],[8312,3],[8317,6],[8327,7],[8335,11],[8347,7],[8355,10],[8369,1],[8371,4],[8376,6],[8384,3],[8391,3],[8395,7],[8403,3],[8408,6],[8417,2],[8420,3],[8427,3],[8433,3],[8437,6],[8445,7],[8453,9],[8463,6],[8472,1],[8474,1],[8478,3],[8485,4],[8492,1],[8494,8],[8504,6],[8524,6],[8531,5],[8537,1],[8539,7],[8547,3],[8551,9],[8561,4],[8567,1],[8570,14],[8586,6],[8593,3],[8597,7],[8605,7],[8614,3],[8618,7],[8627,5],[8635,6],[8644,4],[8649,1],[8651,8],[8663,3],[8668,6],[8675,3],[8679,4],[8686,1],[8688,8],[8698,6],[8705,6],[8712,3],[8717,7],[8725,2],[8728,8],[8737,4],[8744,4],[8751,3],[8755,4],[8763,6],[8770,3],[8774,3],[8787,4],[8792,10],[8803,5],[8809,4],[8814,3],[8818,7],[8826,4],[8832,1],[8835,14],[8851,4],[8860,5],[8866,1],[8868,8],[8878,1],[8880,2],[8883,4],[8890,5],[8896,1],[8898,8],[8917,8],[8926,8],[8942,15],[8958,10],[8969,7],[8977,3],[8981,4],[8986,7],[8994,4],[8999,15],[9015,6],[9024,10],[9036,10],[9047,8],[9058,6],[9067,4],[9073,1],[9076,15],[9093,7],[9101,3],[9105,7],[9113,7],[9122,5],[9130,6],[9137,1],[9139,10],[9150,8],[9159,3],[9164,1],[9166,8],[9181,15],[9197,10],[9208,7],[9216,3],[9220,4],[9225,7],[9233,4],[9238,15],[9254,6],[9263,10],[9275,10],[9286,10],[9297,4],[9304,7],[9314,4],[9320,1],[9323,15],[9340,7],[9348,3],[9352,7],[9360,7],[9369,5],[9377,5],[9384,3],[9391,1],[9393,10],[9404,8],[9413,3],[9418,2],[9421,3],[9428,3],[9434,6],[9441,3],[9447,1],[9449,10],[9463,5],[9469,6],[9476,3],[9489,10],[9500,14],[9519,4],[9524,7],[9532,6],[9541,5],[9549,6],[9556,7],[9564,3],[9568,8],[9577,4],[9582,4],[9589,4],[9594,10],[9605,6],[9614,2],[9617,4],[9622,5],[9628,11],[9640,7],[9650,4],[9656,1],[9659,10],[9671,8],[9680,3],[9684,7],[9692,7],[9701,5],[9709,6],[9717,5],[9725,1],[9727,2],[9730,4],[9737,5],[9743,1],[9745,2],[9748,6],[9757,6],[9766,4],[9773,3],[9777,4],[9785,6],[9792,3],[9796,3],[9802,7],[9811,1],[9813,11],[9827,7],[9836,5],[9843,5],[9850,7],[9859,1],[9861,11],[9873,7],[9883,1],[9886,8],[9896,4],[9901,3],[9910,3],[9914,6],[9922,5],[9928,7],[9936,2],[9939,7],[9948,1],[9950,1],[9954,1],[9956,11],[9968,7],[9977,6],[9984,3],[9992,4],[9998,1],[10001,10],[10013,8],[10022,3],[10026,7],[10034,7],[10044,7],[10053,5],[10062,1],[10064,2],[10067,4],[10074,5],[10080,1],[10082,2],[10085,6],[10094,6],[10103,4],[10110,3],[10114,4],[10122,6],[10129,7],[10140,3],[10144,3],[10150,7],[10159,6],[10166,1],[10168,11],[10181,3],[10196,5],[10202,7],[10214,4],[10219,4],[10231,6],[10238,10],[10249,7],[10260,17],[10278,2],[10282,10],[10297,10],[10309,11],[10322,7],[10330,7],[10339,1],[10348,5],[10354,7],[10362,9],[10372,7],[10380,5],[10388,5],[10394,7],[10402,4],[10412,6],[10419,8],[10428,3],[10435,7],[10443,10],[10459,3],[10463,5],[10469,7],[10477,6],[10488,15],[10505,10],[10517,10],[10529,8],[10541,6],[10549,1],[10554,1],[10559,1],[10566,7],[10574,6],[10581,3],[10586,6],[10597,3],[10601,5],[10607,7],[10615,10],[10629,4],[10634,4],[10639,7],[10648,1],[10651,6],[10662,15],[10679,10],[10691,10],[10703,10],[10715,10],[10729,7],[10737,6],[10744,3],[10749,6],[10760,4],[10765,3],[10769,6],[10776,6],[10785,4],[10790,5],[10801,10],[10813,3],[10817,6],[10825,7],[10833,5],[10841,1],[10843,1],[10847,5],[10853,5],[10860,4],[10867,4],[10872,5],[10878,1],[10882,4],[10887,6],[10896,3],[10900,7],[10909,7],[10917,7],[10925,3],[10929,5],[10941,3],[10945,7],[10953,7],[10961,7],[10969,2],[10972,1],[10974,10],[10985,6],[10992,7],[11000,4],[11005,12],[11018,8],[11027,2],[11030,7],[11039,8],[11048,3],[11052,16],[11069,2],[11072,7],[11080,4],[11085,9],[11095,8],[11105,7],[11113,2],[11116,8],[11126,3],[11130,7],[11138,3],[11142,8],[11151,10],[11163,4],[11168,1],[11170,3],[11174,2],[11177,9],[11187,2],[11190,2],[11193,4],[11198,10],[11210,4],[11215,10],[11226,7],[11234,9],[11245,7],[11253,3],[11257,9],[11267,8],[11276,8],[11285,8],[11295,11],[11307,8],[11316,7],[11324,3],[11328,10],[11339,7],[11348,8],[11357,3],[11361,8],[11370,8],[11379,8],[11389,5],[11395,3],[11399,2],[11402,7],[11410,3],[11414,10],[11425,3],[11429,8],[11438,7],[11446,9],[11457,4],[11462,7],[11470,9],[11482,7],[11490,3],[11494,7],[11502,7],[11511,5],[11519,8],[11528,8],[11538,4],[11543,7],[11551,12],[11564,3],[11568,10],[11579,6],[11586,3],[11590,9],[11600,8],[11609,3],[11613,2],[11616,10],[11627,12],[11640,3],[11644,11],[11656,7],[11664,7],[11672,7],[11681,7],[11689,1],[11691,5],[11697,2],[11700,8],[11709,9],[11719,8],[11728,12],[11741,2],[11744,1],[11746,9],[11756,8],[11765,8],[11774,8],[11783,8],[11793,10],[11805,9],[11815,7],[11823,8],[11832,4],[11837,9],[11847,13],[11862,4],[11867,2],[11870,3],[11874,3],[11878,7],[11886,5],[11892,13],[11907,8],[11916,3],[11920,2],[11923,8],[11932,4],[11937,6],[11944,4],[11949,4],[11955,3],[11959,2],[11962,8],[11971,2],[11974,7],[11982,7],[11990,7],[11998,8],[12007,10],[12018,7],[12026,10],[12038,4],[12043,17],[12061,4],[12066,7],[12075,7],[12083,4],[12088,17],[12106,4],[12111,7],[12120,7],[12130,6],[12138,13],[12152,4],[12160,11],[12172,7],[12181,4],[12186,18],[12205,6],[12214,8],[12225,7],[12235,4],[12241,1],[12244,18],[12264,7],[12272,3],[12276,7],[12284,7],[12293,5],[12304,7],[12312,3],[12316,2],[12319,7],[12329,8],[12338,8],[12348,4],[12353,15],[12369,6],[12378,7],[12386,8],[12395,3],[12404,3],[12408,8],[12417,5],[12423,7],[12431,2],[12434,7]]},"186":{"position":[[16,3],[20,11],[34,6],[41,4],[46,11],[58,5],[66,6],[76,11],[90,5]]},"188":{"position":[[0,6],[7,5],[27,5],[77,2],[82,7],[92,9],[106,6],[113,5]]},"194":{"position":[[21,6],[28,7],[36,2],[42,7],[75,6],[89,4],[94,7],[102,9],[114,5],[122,5],[128,4],[135,5],[141,4],[148,6],[155,6],[162,5],[169,5],[178,12],[200,12],[217,6],[237,11],[260,4],[265,11],[277,6],[286,3],[290,7],[298,5],[304,12],[336,3],[340,12],[353,4],[360,6],[371,8],[381,4],[389,6],[396,6],[403,2],[409,8],[430,15],[448,8],[457,4],[463,1],[466,11],[479,8],[488,3],[492,7],[501,5],[509,1],[511,2],[514,4],[521,5],[527,1],[529,2],[532,6],[541,4],[549,3],[553,4],[560,2],[563,1],[566,2],[572,1],[574,8],[583,4],[590,2],[595,6],[602,6],[609,3],[614,7],[622,7],[630,10],[645,1],[647,8],[656,4],[665,11],[678,3],[683,3],[688,5],[695,7],[704,4],[710,3],[714,12],[732,3],[736,7],[745,10],[759,3],[763,4],[771,6],[778,3],[803,6],[810,6],[817,2],[820,4],[826,1],[829,11],[842,8],[856,6],[864,5],[873,1],[875,2],[878,5],[886,5],[892,1],[894,2],[897,7],[907,7],[918,4],[923,3],[927,6],[934,4],[940,4],[948,4],[953,3],[957,6],[964,4],[970,6],[982,6],[991,3],[995,5],[1001,4],[1006,6],[1014,5],[1020,5],[1028,4],[1033,4],[1038,6],[1046,5],[1054,2],[1057,4],[1062,4],[1070,6],[1077,3],[1081,6],[1089,8],[1098,10],[1109,2],[1113,1],[1117,4],[1125,2],[1128,7],[1136,4],[1144,6],[1151,3],[1157,4],[1162,4],[1170,4],[1175,4],[1181,2],[1187,1],[1189,8],[1198,4],[1204,2],[1208,2],[1213,6],[1220,3],[1224,6],[1232,7],[1241,1],[1243,3],[1247,10],[1260,4],[1268,3],[1272,1],[1275,3],[1282,5],[1288,4],[1293,4],[1300,2],[1303,3],[1310,5],[1316,3],[1322,3],[1329,3],[1335,6],[1342,3],[1350,7],[1358,4],[1366,4],[1371,4],[1376,4],[1384,5],[1390,6],[1399,6],[1406,6],[1414,4],[1420,6],[1427,3],[1433,3],[1437,4],[1445,5],[1451,1],[1453,8],[1464,2],[1468,7],[1476,4],[1484,2],[1487,3],[1494,5],[1500,4],[1507,3],[1514,3],[1520,6],[1527,3],[1532,3],[1542,6],[1549,6],[1557,3],[1563,4],[1569,1],[1572,11],[1585,8],[1596,5],[1604,6],[1612,3],[1619,1],[1621,8],[1639,3],[1643,1],[1646,4],[1654,5],[1660,6],[1669,2],[1672,3],[1679,1],[1681,12],[1694,4],[1701,3],[1708,3],[1725,6],[1732,3]]},"196":{"position":[[11,4],[17,1],[20,10],[32,12],[49,6],[58,6],[67,6],[75,4]]},"198":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,7],[459,5],[466,3],[472,3],[476,3],[480,5],[486,7],[496,8],[505,3],[509,8],[522,6],[530,8],[542,7],[551,6],[559,4],[565,8],[577,7],[586,4]]},"201":{"position":[[7,6],[30,5],[36,9],[46,6],[53,2]]},"203":{"position":[[6,7],[26,7],[72,7],[100,7],[111,7]]},"205":{"position":[[9,7],[20,6],[27,6],[34,2],[40,5],[62,4],[67,5],[73,6],[82,2],[85,6],[92,4],[97,6],[104,4],[109,6],[116,7],[124,6],[141,7],[149,4],[154,6],[163,6],[182,6],[189,6],[196,2],[199,4],[205,1],[208,6],[216,6],[223,3],[227,7],[235,7],[246,3],[252,6],[261,4],[268,3],[272,4],[280,6],[287,4],[292,3],[301,1],[303,7],[312,3],[316,6],[325,6],[333,5],[339,4],[345,1],[349,1],[354,1],[356,1],[360,3],[364,4],[370,3],[374,4],[380,3],[384,7],[404,2],[407,3],[411,7],[422,3],[428,3],[432,7],[443,3],[447,7],[456,3],[462,1],[466,3],[470,7]]},"207":{"position":[[10,4],[16,1],[19,10],[31,3],[39,3],[45,6],[54,4],[61,1],[63,6],[71,6],[78,4],[83,3],[92,1],[94,5],[101,3],[105,6],[115,1],[118,3],[124,1],[126,1],[130,1],[132,4],[138,3],[156,7],[167,4],[172,4],[177,6],[185,1],[188,1],[190,6],[197,4],[202,6],[209,5],[216,4],[222,1],[224,4],[230,4],[237,3],[243,7],[252,3],[257,7],[266,7],[288,5],[299,7],[307,3],[311,6],[321,1],[324,3],[328,5],[334,4],[339,6],[348,1],[350,1],[354,1],[356,4],[364,5],[379,7],[387,3],[391,2],[397,7],[407,6],[418,4],[424,1],[427,10],[439,6],[446,3],[450,6],[458,6],[467,3],[471,6],[481,1],[484,3],[488,6],[495,6],[502,5],[510,1],[512,1],[516,1],[518,4],[524,3],[529,6],[536,3],[540,7],[551,1],[554,3],[558,6],[567,1],[569,1],[573,1],[575,4],[581,3]]},"209":{"position":[[0,10],[12,6],[20,6],[28,8],[41,6],[49,3],[54,5],[61,11],[75,6],[83,5],[89,4],[94,6],[102,3],[108,5],[115,11],[129,6],[137,3],[141,5],[147,4],[152,6],[160,3],[165,5],[172,11],[186,6],[194,4],[199,5],[205,2],[208,6],[216,5],[223,3],[229,6],[237,3],[241,6],[248,6],[255,5],[262,5],[269,3],[275,6],[283,8]]},"215":{"position":[[23,4],[28,10],[39,9],[51,11],[65,3],[87,4],[92,10],[103,9],[115,11],[127,5],[133,3],[138,5],[151,4],[156,7],[164,9],[176,7],[184,4],[189,3],[197,4],[203,5],[210,7],[218,6],[227,4],[234,3],[239,5],[255,3],[259,4],[264,10],[275,6],[284,3],[290,4],[298,2],[301,2],[304,2],[312,4],[317,13],[331,3],[337,4],[344,10],[357,6],[365,10],[376,3],[381,3],[388,4],[394,1],[397,10],[409,7],[417,4],[422,3],[430,4],[436,5],[445,9],[456,3],[463,4],[468,7],[476,4],[482,2],[485,3],[492,3],[498,6],[505,3],[510,3],[516,5],[523,3],[530,3],[534,9],[544,1],[546,3],[551,2],[554,3],[561,3],[567,6],[574,3],[579,3],[585,6],[593,3],[600,6],[607,6],[614,5],[621,2],[624,3],[631,3],[637,6],[644,3],[649,3],[655,5],[664,4],[671,4],[677,6],[684,9],[697,2],[700,1],[703,3],[710,2],[713,8],[722,4],[727,6],[735,5],[743,3],[750,3],[756,6],[763,3],[768,3],[774,10],[788,6],[795,4],[800,5],[807,5],[814,9],[825,3],[830,6],[837,10],[849,3],[855,4],[861,1],[864,10],[876,7],[884,10],[897,4],[904,3],[909,5],[918,5],[925,3],[932,3],[936,9],[946,1],[948,3],[953,2],[956,3],[963,3],[969,6],[976,3],[981,3],[987,6],[995,3],[1002,6],[1009,6],[1016,5],[1023,2],[1026,3],[1033,3],[1039,6],[1046,3],[1051,3],[1057,9],[1070,6],[1077,9],[1089,2],[1092,3],[1096,10],[1110,9],[1122,6],[1129,3],[1134,3],[1138,6],[1146,10],[1157,3],[1161,5],[1171,5],[1180,10],[1192,9],[1203,10],[1217,10],[1228,9],[1240,9],[1251,3],[1258,6],[1265,4],[1270,3],[1275,5],[1282,10],[1294,3],[1299,2],[1302,3],[1309,3],[1315,6],[1322,3],[1327,3],[1333,3],[1337,6],[1344,3],[1348,2],[1351,3],[1358,4],[1363,9],[1373,9],[1385,6],[1394,3],[1401,3],[1407,6],[1414,3],[1419,3],[1425,6],[1432,6],[1440,3],[1453,4],[1459,1],[1462,11],[1475,14],[1490,6],[1497,7],[1506,5],[1517,1],[1519,2],[1522,4],[1532,5],[1538,1],[1540,2],[1543,6],[1558,4],[1566,6],[1573,4],[1583,7],[1592,6],[1602,1],[1604,8],[1613,4],[1622,3],[1626,5],[1632,3],[1642,2],[1645,6],[1657,2],[1660,8],[1670,2],[1676,7],[1684,3],[1689,10],[1702,2],[1710,5],[1718,8],[1727,11],[1749,7],[1757,3],[1761,4],[1771,3],[1775,6],[1783,7],[1791,3],[1795,7],[1803,2],[1807,1],[1809,1],[1813,4],[1841,2],[1844,8],[1854,2],[1860,6],[1868,10],[1881,2],[1887,5],[1896,3],[1905,2],[1908,3],[1915,8],[1924,11],[1936,5],[1944,3],[1951,3],[1960,6],[1967,3],[1971,6],[1979,5],[1985,6],[1992,6],[2001,1],[2003,1],[2007,3],[2020,3],[2024,6],[2032,5],[2038,8],[2047,3],[2051,7],[2060,1],[2062,1],[2066,4],[2097,1],[2099,8],[2108,4],[2117,11],[2133,3],[2138,6],[2149,4],[2155,6],[2162,12],[2181,5],[2188,7],[2219,2],[2222,6],[2232,7],[2240,5],[2249,7],[2262,6],[2269,5],[2280,1],[2282,8],[2291,4],[2297,5],[2305,7],[2316,3],[2320,6],[2328,7],[2336,3],[2340,7],[2348,2],[2352,1],[2356,4],[2367,4],[2377,3],[2381,6],[2389,10],[2400,3],[2404,7],[2412,2],[2416,1],[2419,3],[2423,7],[2434,4],[2451,6],[2458,3],[2466,4],[2472,1],[2475,11],[2488,23],[2512,6],[2519,7],[2528,7],[2536,7],[2545,5],[2553,1],[2555,2],[2558,4],[2565,5],[2571,1],[2573,2],[2576,6],[2585,4],[2593,6],[2600,4],[2607,7],[2616,6],[2626,1],[2628,8],[2637,4],[2643,3],[2647,14],[2664,4],[2669,2],[2672,6],[2681,2],[2684,8],[2694,2],[2700,7],[2708,3],[2713,10],[2726,2],[2731,8],[2743,8],[2752,11],[2766,6],[2774,3],[2781,7],[2789,7],[2797,8],[2807,2],[2810,3],[2817,3],[2823,6],[2830,3],[2834,6],[2842,5],[2848,10],[2859,6],[2868,1],[2872,3],[2879,14],[2896,6],[2905,7],[2913,3],[2917,4],[2924,3],[2928,6],[2936,7],[2944,3],[2948,7],[2956,2],[2960,1],[2962,1],[2966,4],[2986,2],[2989,8],[2999,2],[3005,6],[3013,10],[3026,2],[3032,14],[3050,3],[3056,9],[3067,3],[3074,7],[3082,7],[3090,14],[3106,2],[3109,3],[3116,3],[3122,6],[3129,3],[3133,6],[3141,5],[3147,10],[3158,6],[3167,1],[3171,3],[3178,2],[3181,3],[3188,8],[3197,11],[3209,9],[3221,3],[3228,3],[3234,6],[3241,3],[3245,6],[3253,5],[3259,6],[3266,6],[3275,1],[3279,3],[3286,3],[3290,6],[3298,9],[3308,5],[3314,8],[3323,3],[3327,7],[3336,1],[3338,1],[3342,4],[3350,1],[3352,8],[3361,4],[3370,11],[3383,3],[3388,6],[3396,4],[3402,6],[3409,12],[3425,5],[3432,7],[3443,2],[3446,6],[3456,7],[3464,5],[3473,7],[3483,6],[3490,5],[3498,1],[3500,8],[3509,4],[3515,5],[3523,7],[3531,3],[3535,6],[3543,7],[3551,3],[3555,7],[3563,2],[3567,1],[3569,1],[3573,4],[3581,4],[3588,3],[3592,6],[3600,10],[3611,3],[3615,7],[3623,2],[3627,1],[3630,3],[3634,7],[3643,1],[3647,4],[3655,6],[3662,3]]},"217":{"position":[[7,4],[13,1],[16,13],[31,11],[43,5],[49,3],[54,5],[62,2],[65,3],[70,2],[76,5],[83,3],[89,2],[94,1],[96,9],[108,3],[112,6],[119,3],[125,6],[132,3],[136,6],[144,7],[152,5],[158,4],[167,4],[173,1],[176,11],[189,11],[203,3],[209,6],[216,1],[218,9]]},"219":{"position":[[9,1],[26,2],[29,6],[41,4],[47,16],[69,2],[79,11],[91,23],[115,7],[123,16],[140,11],[154,11],[166,13],[180,6]]},"221":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,4],[456,5],[463,3],[469,1],[471,4],[476,7],[484,7],[492,4],[497,11],[510,5],[517,3],[524,4],[530,8],[542,7],[550,3],[554,7],[562,2],[565,4],[570,5],[576,8],[585,3],[589,7],[597,4],[603,4],[608,2],[611,2],[614,2],[617,2],[620,2],[623,3],[629,4],[636,4],[643,6],[651,8],[663,7],[671,3],[675,7],[683,2],[686,4],[691,11],[704,4],[709,5],[715,2],[718,4],[724,5],[731,3],[737,4],[743,5],[749,2],[752,2],[756,1],[758,4],[763,2],[766,7],[774,7],[782,4],[787,11],[800,5],[807,3],[814,11],[827,5],[833,4],[838,4],[846,3],[850,2],[853,5],[861,1],[863,7],[871,2],[874,6],[881,2],[885,8],[894,3],[898,8],[911,6],[919,8],[931,7],[940,6],[948,6],[956,8],[968,7],[977,4],[983,3],[988,8]]},"224":{"position":[[37,4],[42,4],[47,5],[67,6],[83,3]]},"227":{"position":[[2,14],[28,6],[35,6],[42,2],[45,4],[51,1],[54,11],[67,14],[82,6],[89,7],[98,5],[106,1],[108,2],[111,4],[118,5],[124,1],[126,2],[129,6],[138,4],[146,6],[153,4],[160,7],[169,6],[179,1],[181,8],[190,4],[196,2],[199,6],[209,7],[217,5],[226,7],[245,7],[253,3],[257,4],[264,3],[268,6],[276,7],[284,3],[288,7],[296,2],[300,1],[302,1],[306,4],[330,1],[332,8],[341,4],[350,11],[363,3],[368,6],[376,4],[382,6],[389,12],[405,5],[412,7],[440,2],[443,6],[453,7],[461,5],[470,7],[480,6],[487,5],[495,1],[497,8],[506,4],[512,5],[520,7],[528,3],[532,6],[540,7],[548,3],[552,7],[560,2],[564,1],[566,1],[570,4],[578,4],[585,3],[589,6],[597,10],[608,3],[612,7],[620,2],[624,1],[627,3],[631,7],[640,1],[644,4],[652,6],[659,3],[667,8],[677,4],[685,6],[692,6],[699,2],[705,8],[726,15],[744,8],[753,4],[759,1],[762,11],[775,8],[784,3],[788,7],[797,5],[805,1],[807,2],[810,4],[817,5],[823,1],[825,2],[828,6],[837,4],[845,3],[849,4],[856,2],[859,1],[862,2],[868,1],[870,8],[879,4],[886,2],[891,6],[898,6],[905,3],[910,7],[918,7],[926,10],[941,1],[943,8],[952,4],[961,11],[974,3],[979,3],[984,5],[991,7],[1000,4],[1006,3],[1010,12],[1028,3],[1032,7],[1041,10],[1055,3],[1059,4],[1067,6],[1074,3],[1099,6],[1106,6],[1113,2],[1116,4],[1122,1],[1125,11],[1138,8],[1152,6],[1160,5],[1169,1],[1171,2],[1174,5],[1182,5],[1188,1],[1190,2],[1193,7],[1203,7],[1214,4],[1219,3],[1223,6],[1230,4],[1236,4],[1244,4],[1249,3],[1253,6],[1260,4],[1266,6],[1278,6],[1287,3],[1291,5],[1297,4],[1302,6],[1310,5],[1316,5],[1324,4],[1329,4],[1334,6],[1342,5],[1350,2],[1353,4],[1358,4],[1366,6],[1373,3],[1377,6],[1385,8],[1394,10],[1405,2],[1409,1],[1413,4],[1421,2],[1424,7],[1432,4],[1440,6],[1447,3],[1453,4],[1458,4],[1466,4],[1471,4],[1477,2],[1483,1],[1485,8],[1494,4],[1500,2],[1504,2],[1509,6],[1516,3],[1520,6],[1528,7],[1537,1],[1539,3],[1543,10],[1556,4],[1564,3],[1568,1],[1571,3],[1578,5],[1584,4],[1589,4],[1596,2],[1599,3],[1606,5],[1612,3],[1618,3],[1625,3],[1631,6],[1638,3],[1646,7],[1654,4],[1662,4],[1667,4],[1672,4],[1680,5],[1686,6],[1695,6],[1702,6],[1710,4],[1716,6],[1723,3],[1729,3],[1733,4],[1741,5],[1747,1],[1749,8],[1760,2],[1764,7],[1772,4],[1780,2],[1783,3],[1790,5],[1796,4],[1803,3],[1810,3],[1816,6],[1823,3],[1828,3],[1838,6],[1845,6],[1853,3],[1859,4],[1865,1],[1868,11],[1881,8],[1892,5],[1900,6],[1908,3],[1915,1],[1917,8],[1935,3],[1939,1],[1942,4],[1950,5],[1956,6],[1965,2],[1968,3],[1975,1],[1977,12],[1990,4],[1997,3],[2004,3],[2021,6],[2028,3]]},"229":{"position":[[7,4],[12,8],[21,3],[25,5],[33,4],[38,8],[49,4],[54,4],[59,5],[67,4],[72,6],[79,6],[88,2],[91,4],[96,5],[102,5],[108,8],[117,7],[125,6],[132,3],[136,2],[139,6],[153,4],[158,9],[168,7],[176,6],[184,5],[190,8],[200,3],[204,2],[207,6],[216,6],[225,6],[233,6],[241,7],[250,7],[259,5],[266,5],[273,3],[278,3],[287,4],[293,1],[296,6],[304,4],[309,5],[315,8],[325,6],[332,6],[340,4],[348,3],[355,2],[358,5],[366,1],[368,5],[376,6],[385,1],[387,2],[390,4],[397,5],[403,1],[405,2],[408,6],[417,8],[434,6],[442,4],[450,4],[458,5],[466,5],[473,3],[480,3],[484,7],[492,6],[500,4],[509,2],[515,4],[520,3],[526,6],[534,4],[539,2],[542,2],[545,2],[548,2],[551,2],[554,3],[560,3],[564,7],[572,1],[574,3],[582,1],[587,1],[592,1],[596,1],[598,1],[602,2],[606,8],[616,1],[618,7],[627,3],[634,4],[640,1],[643,6],[651,5],[657,6],[664,6],[672,4],[680,3],[687,1],[689,4],[694,4],[700,6],[708,4],[719,4],[725,1],[728,6],[736,5],[742,6],[749,6],[757,4],[765,3],[772,1],[774,4],[779,4],[785,6],[793,4],[804,4],[810,1],[813,6],[821,6],[828,6],[835,6],[843,4],[851,3],[858,1],[860,4],[865,5],[872,6],[880,4],[897,4],[902,13],[916,6],[925,3],[930,6],[939,4],[944,16],[964,13],[980,6],[988,13],[1003,3],[1008,9],[1019,4],[1026,4],[1032,2],[1035,6],[1054,4],[1060,1],[1063,13],[1078,5],[1088,1],[1090,3],[1094,5],[1101,7]]},"231":{"position":[[9,1],[26,2],[29,1],[33,11],[45,14],[60,7],[68,16],[85,11],[105,2],[111,8],[123,4],[128,4],[133,11],[145,5],[152,1],[155,11],[167,4],[172,11],[184,5],[191,4],[198,4],[205,4],[212,3],[218,7],[228,3],[234,7],[243,8],[253,9],[264,4],[273,3],[277,7],[286,2],[289,5],[300,8]]},"233":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,7],[459,5],[466,3],[472,3],[476,3],[480,5],[486,7],[497,4],[503,8],[515,7],[523,3],[527,7],[535,2],[538,4],[544,4],[549,2],[552,2],[555,2],[558,2],[561,2],[564,3],[570,4],[577,4],[584,6],[592,8],[604,7],[612,3],[616,7],[624,2],[627,4],[633,11],[646,5],[652,4],[657,4],[665,3],[669,2],[672,5],[680,1],[682,7],[690,2],[693,6],[700,2],[704,8],[713,3],[717,8],[730,6],[738,8],[750,7],[759,6],[767,6],[775,8],[788,3],[793,8],[802,7],[811,4],[816,10],[828,6],[835,10],[847,4],[852,8],[861,3],[865,8],[877,8],[888,4],[893,6],[902,4],[908,8],[920,7],[929,4],[935,6],[943,8],[955,7],[964,6],[972,6],[980,3],[985,5],[992,11],[1006,11],[1019,5],[1025,4],[1030,6],[1040,5],[1047,11],[1061,6],[1069,3],[1073,5],[1079,4],[1084,6],[1092,7],[1100,2],[1103,6],[1111,6],[1119,3],[1124,5],[1131,4],[1138,11],[1151,5],[1157,4],[1162,6],[1172,5],[1179,4],[1186,6],[1194,3],[1198,5],[1204,4],[1209,6],[1217,4],[1222,7],[1230,7],[1239,11],[1252,4],[1257,5],[1263,2],[1266,7],[1275,5],[1282,3],[1288,3],[1292,3],[1296,5],[1302,7],[1312,8],[1321,3],[1325,8],[1338,6],[1346,8],[1358,7],[1367,6],[1375,4],[1381,8],[1393,7],[1402,4]]},"237":{"position":[[6,4]]},"240":{"position":[[6,3],[10,3],[14,11],[26,5],[42,12],[42,7],[50,4],[56,5]]},"242":{"position":[[0,4],[5,10],[16,6],[25,3],[29,6],[36,7],[44,7],[54,4],[59,13],[73,3],[77,6],[85,7],[93,7],[103,10],[116,6],[124,10],[135,3],[140,3],[145,7],[154,7],[165,4],[171,1],[174,10],[186,4],[191,4],[196,6],[204,6],[213,6],[220,8],[229,4],[234,1],[236,3],[241,4],[248,5],[258,4],[264,1],[267,10],[279,4],[284,4],[289,6],[297,5],[303,3],[308,5],[316,9],[327,3],[334,1],[336,7],[344,7],[352,5],[359,2],[362,3],[369,3],[375,6],[382,3],[388,2],[391,3],[398,2],[401,8],[410,1],[412,3],[417,4],[424,3],[431,3],[437,6],[444,3],[450,6],[457,2],[460,9],[470,1],[472,4],[477,4],[484,9],[495,4],[503,4],[509,1],[512,10],[524,4],[529,4],[534,6],[543,3],[548,5],[557,4],[563,3],[570,2],[573,8],[582,1],[584,4],[589,4],[596,2],[599,3],[606,3],[612,6],[619,3],[624,3],[630,6],[637,1],[639,7],[647,7],[655,4],[663,4],[669,1],[672,10],[684,6],[691,4],[696,6],[704,4],[711,1],[714,3],[721,2],[724,4],[729,1],[731,4],[736,4],[743,6],[750,3],[757,3]]},"245":{"position":[[0,4],[5,11],[17,6],[30,10],[42,10],[55,4],[60,23],[84,5],[91,10],[104,11],[118,6],[126,11],[139,8],[149,4],[154,3],[158,6],[166,11],[180,10],[192,5],[199,6],[207,9],[218,6],[227,4],[233,2],[236,6]]},"247":{"position":[[3,8],[24,15],[42,8],[51,4],[57,1],[60,11],[73,8],[82,3],[86,7],[95,5],[103,1],[105,2],[108,4],[115,5],[121,1],[123,2],[126,6],[138,4],[156,4],[164,3],[168,4],[207,2],[210,1],[212,10],[226,3],[233,1],[235,10],[246,6],[253,4],[312,2],[315,8],[325,2],[331,3],[336,10],[349,2],[354,3],[359,3],[366,1],[368,10],[379,4],[384,4],[390,2],[393,3],[400,3],[406,6],[413,3],[417,6],[425,5],[431,4],[436,6],[445,1],[447,1],[451,3],[458,3],[464,8],[473,11],[485,3],[490,2],[493,3],[500,3],[506,6],[513,3],[517,6],[525,5],[531,6],[538,6],[547,1],[549,1],[553,3],[560,3],[564,6],[572,5],[578,8],[587,3],[591,7],[600,1],[602,1],[606,4],[616,2],[619,1],[622,2],[628,1],[630,8],[639,4],[646,2],[651,6],[658,6],[665,3],[670,7],[678,7],[686,10],[701,1],[703,8],[712,4],[721,11],[734,3],[739,3],[744,5],[751,7],[760,4],[766,3],[770,12],[788,3],[792,7],[801,10],[815,3],[819,4],[827,6],[834,3]]},"249":{"position":[[0,4],[6,1],[9,11],[22,11],[34,4],[39,6],[47,5],[55,1],[57,2],[60,4],[67,5],[73,1],[75,2],[78,6],[87,4],[93,2],[99,1],[101,8],[110,4],[116,2],[120,2],[125,6],[132,6],[139,3],[144,7],[152,3],[156,10],[171,2],[174,4],[179,5],[188,7],[198,6],[205,6],[212,3],[217,7],[225,7],[233,7],[257,2],[260,8],[270,2],[276,4],[281,3],[286,10],[299,2],[305,1],[307,10],[321,3],[327,2],[330,3],[337,1],[339,10],[350,4],[355,4],[361,8],[370,11],[386,3],[393,3],[399,3],[403,6],[411,5],[417,9],[427,3],[432,1],[434,1],[438,4],[448,2],[451,3],[458,4],[463,3],[467,4],[475,3],[482,3],[488,6],[495,3],[501,4],[506,5],[514,7],[522,3],[526,7],[535,7],[546,4],[551,3],[555,4],[563,6],[570,3]]},"251":{"position":[[0,4],[6,1],[9,11],[22,6],[29,3],[33,7],[41,7],[61,6],[68,6],[87,6],[97,4],[102,9],[112,1],[116,4],[121,6],[129,3],[135,6],[144,4],[151,3],[155,4],[163,6],[170,4],[177,6],[184,1],[187,3],[191,7],[200,5],[206,7],[214,5],[222,2],[225,1],[227,10],[241,3],[247,3],[251,4],[257,4],[265,5],[271,1],[273,8],[284,2],[287,4],[292,5],[301,7],[311,2],[314,8],[324,2],[330,4],[335,3],[340,10],[353,2],[358,2],[361,3],[368,1],[370,10],[381,4],[386,4],[392,8],[401,11],[417,3],[424,3],[430,3],[434,6],[442,5],[448,9],[458,3],[463,1],[465,1],[469,4]]},"253":{"position":[[0,7],[11,11],[23,13],[39,4],[45,16],[65,5],[74,11],[86,13],[103,5],[111,7],[123,1],[132,11],[147,11],[159,14],[174,5]]},"255":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,4],[456,5],[463,3],[469,1],[471,4],[476,7],[484,7],[492,4],[497,11],[510,5],[517,3],[524,4],[530,8],[542,7],[550,3],[554,7],[562,2],[565,4],[570,9],[580,5],[586,8],[595,3],[599,7],[607,4],[613,4],[618,2],[621,2],[624,2],[627,2],[630,2],[633,3],[639,4],[646,4],[653,6],[661,8],[673,7],[681,3],[685,7],[693,2],[696,4],[702,11],[715,4],[720,5],[726,2],[729,4],[735,5],[742,3],[748,4],[754,5],[760,2],[763,2],[767,1],[769,4],[774,2],[777,7],[785,7],[793,4],[798,11],[811,5],[818,3],[825,11],[838,5],[844,4],[849,4],[857,3],[861,2],[864,5],[872,1],[874,7],[882,2],[885,6],[892,2],[896,8],[905,3],[909,8],[922,6],[930,8],[942,7],[951,6],[959,6],[967,8],[979,7],[988,4]]},"258":{"position":[[7,9],[17,11],[29,9],[40,3],[46,5],[62,6],[69,1],[72,6],[135,2],[152,2]]},"263":{"position":[[17,4],[22,6],[29,9],[41,3],[47,5],[55,3],[74,4],[95,4],[130,4],[135,3],[139,6],[148,4],[154,1],[156,3],[161,3],[169,3],[173,7],[182,3],[186,6],[197,4],[203,1],[205,3],[210,5],[220,3],[224,7],[233,3],[237,8],[250,4],[256,1],[258,3],[263,4],[272,3],[276,7],[285,3],[289,7],[301,4],[307,1],[309,3],[314,3],[337,4],[343,1],[345,3],[350,4],[378,3],[393,3]]},"265":{"position":[[12,4],[17,5],[23,9],[35,3],[43,4],[48,7],[56,9],[68,5],[78,4],[83,5],[89,9],[101,3],[109,4],[114,7],[122,9],[134,4],[143,4],[148,6],[155,9],[167,4],[179,3],[192,4],[197,3],[201,6],[210,4],[216,1],[218,3],[223,3],[231,3],[235,7],[244,3],[248,6],[259,4],[265,1],[267,3],[272,5],[282,3],[286,7],[295,3],[299,8],[312,4],[318,1],[320,3],[325,4],[334,3],[338,7],[347,3],[351,7],[373,4],[378,10],[389,6],[398,3],[404,4],[410,1],[412,10],[424,4],[433,3],[437,7],[446,3],[450,8]]},"268":{"position":[[0,4],[5,6],[12,9],[24,5],[30,7],[40,4],[45,4],[50,9],[62,6],[69,5],[77,4],[82,4],[87,9],[99,6],[106,7]]},"270":{"position":[[14,4],[19,4],[24,1],[26,5],[35,1],[37,3],[45,4],[50,10],[61,1],[63,7],[74,1],[76,5]]},"272":{"position":[[9,4],[14,11],[26,9],[38,4],[45,5],[53,4],[60,5],[68,6],[77,7],[113,4],[118,12],[131,9],[143,4],[150,5],[160,4],[165,10],[176,9],[188,12],[201,4],[210,4],[215,10],[226,9],[238,12],[251,5],[261,4],[266,11],[278,9],[290,10],[301,10],[312,6]]},"275":{"position":[[0,4],[5,6],[12,9],[24,3],[28,2],[31,6],[40,4],[46,5],[53,4],[63,4],[69,5],[78,4],[83,6],[90,9],[102,6],[109,4],[114,4],[120,5],[126,6],[133,4],[138,4],[144,5],[150,6],[157,2],[160,6],[168,5],[185,4],[190,17],[208,1],[210,6],[219,14],[236,6],[244,14],[259,6],[267,1],[281,4],[286,18],[305,2],[308,9],[320,6],[327,6],[338,15],[356,6],[364,15],[380,12],[394,2]]},"277":{"position":[[0,4],[5,13],[19,9],[31,10],[42,1],[45,4],[50,7],[61,4],[66,14],[81,9],[93,11],[105,1],[107,4],[112,14],[145,4],[150,18],[169,1],[171,13],[186,4],[191,4],[196,7],[205,4],[210,7],[220,6],[227,4],[232,4],[237,4],[242,7],[251,4],[256,7],[266,6],[273,4],[278,11],[290,4],[295,1],[297,4],[302,14],[318,1],[321,4],[326,7],[337,1],[339,10],[350,1],[353,4],[358,9],[368,1],[371,1]]},"281":{"position":[[0,3],[34,2],[49,3],[95,4]]},"284":{"position":[[7,6],[14,12],[27,9],[38,3],[44,5],[60,7],[68,6],[87,1],[89,1],[100,1],[112,1],[136,2],[163,9],[177,6],[184,9]]},"289":{"position":[[10,4],[15,4],[20,9],[32,3],[38,6],[45,4],[52,6],[69,4],[74,7],[82,6],[91,4],[97,1],[100,7],[109,3],[115,6],[124,6],[141,4],[147,1],[150,7],[159,4],[166,6],[175,6],[200,4],[205,7],[213,6],[222,4],[228,1],[231,7],[240,3],[246,6],[255,6],[275,3],[284,4],[290,1],[293,7],[302,4],[309,6],[318,6],[340,7],[351,4],[362,3]]},"291":{"position":[[12,4],[17,5],[23,9],[35,3],[41,6],[50,4],[55,6],[62,9],[74,4],[81,6],[98,4],[103,10],[114,6],[123,4],[129,1],[132,10],[144,3],[150,6],[159,6],[182,4],[187,7],[195,6],[204,10],[217,4],[223,1],[226,7],[235,4],[242,6],[251,6],[274,4],[279,7],[287,6],[296,4],[302,1],[305,7],[314,4],[321,6],[330,6]]},"294":{"position":[[0,4],[5,16],[22,9],[34,14],[49,6],[56,7],[65,8],[74,6],[82,5],[98,4],[103,14],[118,6],[127,4],[133,1],[136,14],[152,14],[167,6],[174,7],[183,8],[192,6],[200,5],[208,2],[211,6],[221,1],[225,6],[232,6],[239,3],[250,1],[279,3],[284,4],[289,17],[307,6],[316,4],[322,1],[325,17],[344,14],[359,6],[366,7],[375,8],[384,6],[392,5],[405,6],[412,1],[423,2],[426,6],[435,1],[439,6],[446,6],[453,3]]},"296":{"position":[[0,4],[5,11],[17,9],[29,4],[34,4],[41,4],[48,6],[56,5],[70,2],[83,4],[88,11],[100,6],[109,4],[115,1],[118,11],[131,4],[136,4],[143,4],[150,6],[158,5],[167,2],[173,10],[198,6],[205,2],[209,3],[221,2],[236,3],[241,4],[246,17],[264,6],[273,4],[279,1],[282,17],[301,4],[306,4],[313,4],[320,6],[328,5],[337,2],[340,3],[344,4],[353,1],[357,6],[368,6],[375,3],[402,2],[408,10],[433,6],[441,3],[449,2],[453,3],[463,2]]},"299":{"position":[[0,6],[19,4],[24,6],[31,6],[40,4],[45,6],[54,4],[60,1],[63,6],[71,3],[77,6],[86,6],[93,1],[95,4],[121,6],[128,4],[133,3],[137,6],[146,6],[155,4],[161,1],[164,3],[169,4],[176,6],[185,6],[206,3],[214,3],[218,6],[225,4],[238,3],[242,7],[250,3],[254,3],[271,3],[275,7],[283,3],[287,4]]},"301":{"position":[[7,4],[12,12],[25,9],[37,7],[47,7],[57,7],[78,7],[86,4],[91,6],[98,6],[107,3],[111,9],[123,7]]},"303":{"position":[[10,5],[18,9]]},"305":{"position":[[0,3],[19,2],[76,3],[94,2],[97,1]]},"308":{"position":[[7,10],[18,9],[28,9],[39,3],[45,5],[61,6],[68,1],[71,6],[133,2],[150,9]]},"310":{"position":[[23,3],[45,2]]},"313":{"position":[[16,4],[21,13],[35,6],[45,4],[51,1],[54,13],[69,4],[74,4],[79,6],[87,5],[95,3],[99,7],[113,5],[122,4],[128,6],[135,3],[141,4],[146,15],[162,6],[171,2],[175,13],[203,4],[209,1],[212,15],[229,8],[240,5],[248,6],[255,1],[257,2],[260,4],[278,15],[297,13]]},"315":{"position":[[10,4],[15,8],[24,9],[36,4],[41,4],[46,6],[54,5],[74,4],[79,13],[93,6],[103,4],[109,1],[112,13],[127,4],[132,4],[137,6],[145,5],[153,3],[157,7],[171,5],[180,4],[186,6],[193,3],[199,4],[204,18],[223,6],[233,4],[239,1],[242,18],[262,4],[267,4],[272,6],[280,5],[288,3],[292,7],[306,10],[320,4],[326,6],[333,3],[351,4],[356,15],[372,6],[381,2],[384,8],[409,4],[414,18],[433,2],[436,8],[447,15],[465,6],[473,15],[489,2],[493,2],[499,4],[505,1],[508,15],[525,8],[536,5],[544,6],[551,1],[553,2],[556,4]]},"318":{"position":[[7,6],[16,4],[21,6],[28,9],[40,3],[44,7],[52,6],[62,4],[67,13],[81,6],[90,4],[96,1],[99,13],[114,3],[118,7],[126,6],[136,3],[140,7],[148,7],[159,4],[164,7],[172,6],[181,6],[188,6],[197,4],[202,10],[213,6],[220,6],[229,7],[239,6],[247,7],[255,6],[263,6],[273,4],[279,1],[282,7],[291,6],[302,1],[304,6],[311,3]]},"320":{"position":[[0,4],[5,10],[16,9],[28,4],[33,2],[37,7],[46,4],[51,6],[59,5],[67,4],[72,11],[84,6],[93,4],[99,1],[102,11],[115,8],[124,5],[130,6],[138,6],[145,10],[157,5],[176,6],[183,6],[190,4],[195,5]]},"322":{"position":[[12,2],[18,7],[26,4],[31,4],[36,8],[45,9],[57,4],[62,4],[67,4],[73,5],[81,4],[86,7],[94,6],[103,2],[106,8],[130,4],[135,7],[143,6],[152,4],[158,1],[161,7],[170,4],[175,4],[180,4],[186,5]]},"325":{"position":[[3,7],[11,2],[14,4],[19,14],[34,9],[46,7],[54,2],[57,3],[64,4],[70,5],[77,4],[82,4],[88,4],[94,5],[105,7],[113,2],[116,4],[121,11],[133,6],[142,4],[147,14],[164,4],[169,14],[184,4],[189,14],[206,11],[220,6],[228,11],[240,4],[246,4],[266,5],[273,10],[285,7]]},"327":{"position":[[0,4],[5,7],[13,9],[25,6],[32,1],[34,4],[39,14],[55,1],[58,4],[63,7],[72,5],[80,4],[85,6],[92,6],[101,8],[110,3],[114,6],[121,7],[131,4],[137,1],[140,6],[148,8],[157,4],[162,6],[170,7],[178,7],[189,1],[191,8],[200,4],[208,7],[229,4],[234,11],[246,6],[255,7],[264,11],[278,4],[284,1],[287,11],[300,6],[307,1],[309,4],[314,14],[330,1],[333,4],[338,7],[347,5]]},"329":{"position":[[2,2],[9,2],[24,6],[31,4],[47,4],[52,2],[55,4],[60,21],[85,11],[99,4],[104,5],[110,14],[126,18],[146,6],[154,11],[170,3],[182,9],[195,3],[199,3],[205,9],[215,7],[223,18],[243,9],[253,7],[261,14],[277,2],[282,3],[289,2],[292,3],[297,2],[300,7],[308,18],[329,2],[332,7],[340,14],[357,2],[360,6],[367,4],[372,1],[375,11]]},"333":{"position":[[0,3],[19,2],[80,2],[95,3]]},"336":{"position":[[2,7],[12,9],[33,7],[41,4],[46,6],[56,3],[62,4],[73,15],[101,4],[106,15],[122,6],[131,8],[142,6],[149,8],[158,4],[163,5],[188,10],[213,4],[218,10],[229,6],[238,5],[246,6],[253,12],[266,4],[272,15],[288,8],[297,4],[302,6],[316,8],[328,10],[348,4],[354,1],[357,10],[369,8],[378,1],[382,6],[390,5],[398,3],[406,15],[423,8],[433,1],[436,8],[446,4],[451,4],[456,5],[466,1],[468,12],[484,3],[488,6],[497,3],[501,8],[525,3],[532,10],[549,4],[555,1],[558,10],[570,3],[578,3],[584,6],[593,4],[598,3],[607,1],[609,12],[623,1],[625,5],[633,3],[637,8],[646,3],[650,7],[659,7],[667,5],[676,1],[678,5],[685,3],[689,8],[701,3],[713,4],[720,1],[722,8],[732,6],[748,4],[756,10],[773,4],[779,1],[782,10],[794,4],[803,5],[809,1],[811,8],[823,4],[828,4],[837,10],[852,10],[864,5],[873,6],[883,12],[897,4],[902,4],[908,15],[926,8],[936,4],[941,4],[946,6],[959,2],[962,10],[973,3],[987,4],[992,5],[998,3],[1004,4],[1009,11],[1022,10],[1033,8],[1044,6],[1052,1],[1057,1],[1062,1],[1067,10],[1078,8],[1089,6],[1097,1],[1102,1],[1107,1],[1122,10],[1133,4],[1162,8],[1173,10],[1186,7],[1206,8],[1215,7],[1239,10],[1258,7],[1304,7],[1322,7]]},"339":{"position":[[4,2],[10,1],[17,7],[33,5],[46,4],[57,7],[69,5],[98,1],[101,2],[109,2],[115,2],[121,5],[130,7],[150,1],[157,2],[172,7],[188,1],[191,2],[199,2],[205,2],[211,5],[220,7],[236,7],[244,4],[249,6],[259,3],[265,4],[273,4],[278,4],[289,2],[295,4],[300,4],[305,3],[310,1],[313,2],[319,4],[324,4],[329,3],[334,2],[337,4],[346,2],[352,2],[355,4],[360,5],[366,1],[370,4],[375,6],[383,5],[389,5],[395,2],[420,5],[431,2],[434,3],[438,7],[447,5],[456,5],[469,2],[472,2],[475,2],[478,5],[485,2],[488,5],[498,2],[501,3],[505,7],[514,5],[523,5],[536,2],[539,2],[542,2],[545,5],[552,1],[554,5],[564,2],[567,3],[571,7],[580,5],[589,5],[602,2],[605,2],[608,2],[611,5],[618,1],[637,5],[644,4],[654,2],[657,3],[661,7],[670,5],[679,5],[687,4],[695,4],[707,2],[710,2],[713,2],[716,5],[723,2],[726,4],[732,4],[737,5],[744,4],[753,2],[756,3],[760,7],[769,5],[778,5],[786,4],[794,4],[806,2],[809,2],[812,2],[815,5],[822,1],[824,4],[830,5],[836,5],[843,4],[852,2],[855,3],[859,7],[868,5],[877,5],[885,4],[893,4],[905,2],[908,2],[911,2],[914,5],[921,1],[923,4],[929,5]]},"341":{"position":[[13,9],[24,12],[39,8],[60,5],[69,2],[83,7],[97,3],[108,3],[121,4],[143,7],[151,4],[156,6],[166,3],[172,4],[197,8],[211,4],[216,15],[232,6],[241,8],[252,6],[259,8],[268,4],[273,5],[290,4],[295,10],[306,6],[315,5],[323,6],[330,12],[343,4],[349,15],[365,8],[374,4],[379,6],[388,8],[397,4],[402,6],[428,3],[435,10],[452,4],[458,1],[461,10],[473,3],[481,5],[487,5],[493,1],[495,8],[522,3],[528,6],[537,4],[542,3],[547,2],[555,1],[557,12],[571,2],[575,2],[580,3],[584,7],[593,12],[606,6],[614,7],[622,3],[630,6],[639,1],[641,5],[649,3],[653,8],[662,3],[666,7],[675,7],[683,5],[692,1],[694,5],[710,3],[714,8],[726,3],[730,4],[737,1],[739,8],[749,3],[753,7],[762,8],[771,4],[776,6],[784,7],[792,3],[800,6],[816,8],[832,4],[838,1],[841,10],[853,8],[862,1],[866,6],[874,5],[882,3],[890,15],[907,8],[917,1],[920,8],[930,4],[935,4],[940,5],[950,6],[959,4],[964,1],[966,12],[982,3],[987,6],[996,3],[1000,8],[1009,4],[1016,1],[1018,8],[1028,6],[1035,3],[1039,6],[1047,10],[1058,2],[1061,8],[1070,4],[1084,4],[1092,10],[1106,9],[1121,4],[1127,1],[1130,10],[1142,4],[1151,5],[1157,1],[1159,8],[1177,5],[1183,1],[1185,12],[1210,12],[1225,1],[1227,8],[1248,3],[1252,7],[1261,10],[1272,7],[1280,10],[1295,4],[1300,4],[1309,10],[1324,10],[1336,5],[1345,6],[1355,12],[1369,4],[1374,4],[1380,15],[1398,8],[1408,4],[1413,4],[1418,6],[1429,8],[1439,4],[1444,4],[1449,6],[1462,2],[1465,10],[1476,3],[1482,4],[1487,5],[1493,3],[1499,4],[1504,11],[1517,10],[1528,8],[1539,6],[1547,1],[1552,1],[1557,1],[1562,10],[1573,8],[1584,6],[1592,1],[1597,1],[1602,1],[1607,10],[1618,4]]},"343":{"position":[[7,7],[15,7],[38,10],[49,9],[70,7],[80,6],[130,8],[160,7],[168,7],[191,8],[200,8],[212,4],[221,7],[229,4],[234,6],[244,7],[254,3],[260,4],[285,8],[299,4],[304,15],[320,6],[329,8],[340,6],[347,8],[356,4],[361,5],[379,4],[384,10],[395,6],[404,5],[412,6],[419,12],[432,4],[438,15],[454,8],[463,4],[468,6],[477,8],[486,4],[491,6],[505,3],[512,10],[529,4],[535,1],[538,10],[550,3],[558,5],[564,5],[570,1],[572,8],[582,3],[588,6],[597,4],[602,3],[607,2],[615,1],[617,12],[631,2],[635,2],[640,3],[644,7],[653,12],[666,6],[674,7],[682,3],[690,6],[699,1],[701,5],[709,3],[713,8],[722,3],[726,7],[735,7],[743,5],[752,1],[754,5],[761,3],[765,8],[777,3],[781,4],[788,1],[790,8],[800,3],[804,7],[813,8],[822,4],[827,6],[835,7],[843,3],[851,6],[867,11],[882,7],[900,4],[906,1],[909,10],[921,11],[933,3],[937,7],[945,7],[954,5],[962,6],[970,5],[978,3],[986,15],[1003,8],[1013,5],[1020,8],[1030,4],[1035,4],[1040,5],[1047,1],[1072,4],[1077,5],[1083,1],[1087,4],[1092,11],[1105,6],[1114,4],[1119,1],[1121,12],[1137,3],[1150,2],[1153,7],[1164,6],[1173,4],[1178,3],[1187,3],[1191,8],[1201,6],[1208,3],[1212,4],[1219,3],[1223,4],[1231,6],[1238,3],[1242,6],[1250,3],[1254,5],[1260,7],[1268,2],[1271,9],[1283,1],[1287,3],[1291,3],[1300,4],[1307,1],[1309,8],[1319,6],[1326,3],[1330,6],[1338,10],[1349,8],[1358,4],[1365,4],[1372,3],[1376,4],[1384,6],[1391,3],[1395,6],[1403,4],[1408,7],[1416,2],[1419,9],[1431,1],[1435,3],[1439,3],[1453,4],[1463,4],[1469,1],[1472,10],[1484,4],[1493,5],[1499,1],[1501,8],[1511,5],[1517,1],[1519,12],[1535,1],[1537,8],[1546,3],[1550,7],[1559,10],[1570,7],[1578,10],[1593,4],[1598,4],[1607,10],[1622,10],[1634,5],[1643,6],[1653,12],[1667,4],[1672,4],[1678,15],[1696,8],[1706,4],[1711,4],[1716,6],[1727,8],[1737,4],[1742,4],[1747,6],[1760,2],[1763,10],[1774,3],[1790,3],[1797,7],[1805,10],[1818,10],[1829,11],[1841,3],[1848,6],[1856,1],[1861,1],[1866,1],[1878,7],[1890,3],[1899,10],[1911,6],[1921,7],[1929,11],[1941,7],[1949,10],[1963,1],[1965,4],[1970,11],[1983,5],[1989,6],[1998,3],[2005,10],[2016,11],[2028,10],[2042,6],[2050,6],[2060,4],[2068,4],[2076,2],[2079,3],[2086,3],[2092,3],[2096,7],[2105,7],[2113,3],[2120,3],[2135,4],[2141,7],[2152,7],[2160,11],[2172,7],[2180,10],[2194,1],[2196,4],[2201,6],[2209,5],[2215,7],[2225,10],[2236,11],[2248,4],[2256,6],[2264,1],[2269,1],[2274,1],[2279,10],[2290,4]]},"345":{"position":[[0,14],[23,7],[31,7],[99,14],[171,7],[206,7],[240,14],[275,7],[316,7],[343,14],[363,8],[465,7],[476,8],[485,8],[527,14],[569,4],[574,7],[596,4],[605,9],[616,8],[660,1],[687,7],[715,7],[723,7],[736,15],[777,15],[795,18],[823,8],[834,8],[845,7],[853,4],[858,6],[868,7],[878,6],[887,3],[897,7],[914,4],[919,7],[927,9],[939,7],[947,3],[951,7],[959,7],[968,1],[971,7],[980,4],[989,4],[994,6],[1003,3],[1009,5],[1020,7],[1040,4],[1045,7],[1053,6],[1062,5],[1070,6],[1077,7],[1085,4],[1090,7],[1098,4],[1103,4],[1108,6],[1117,4],[1122,4],[1127,6],[1148,4],[1153,11],[1165,6],[1174,3],[1178,5],[1184,4],[1189,4],[1194,6],[1205,4],[1211,1],[1214,11],[1227,4],[1236,4],[1241,6],[1252,6],[1259,1],[1261,4],[1268,4],[1274,1],[1277,11],[1290,3],[1296,5],[1304,6],[1311,1],[1313,3],[1322,15],[1343,4],[1348,15],[1364,6],[1373,11],[1385,8],[1396,6],[1405,4],[1411,1],[1414,15],[1431,7],[1439,3],[1443,7],[1451,7],[1460,1],[1463,7],[1474,5],[1480,5],[1486,1],[1488,4],[1494,1],[1496,5],[1504,1],[1506,8],[1515,3],[1519,7],[1528,15],[1544,8],[1556,1],[1558,5],[1570,15],[1591,4],[1596,15],[1612,6],[1621,11],[1633,6],[1640,4],[1647,6],[1656,4],[1662,1],[1665,15],[1682,7],[1690,3],[1694,7],[1702,7],[1711,1],[1714,7],[1725,5],[1731,5],[1737,1],[1739,4],[1745,1],[1747,6],[1757,1],[1759,5],[1765,5],[1771,1],[1773,6],[1783,4],[1788,10],[1802,7],[1812,6],[1820,7],[1829,5],[1838,6],[1848,7],[1857,4],[1862,4],[1867,7],[1877,4],[1883,4],[1888,4],[1893,6],[1904,4],[1910,4],[1915,4],[1920,6],[1938,3],[1949,4],[1955,1],[1958,7],[1967,3],[1975,5],[1981,5],[1987,1],[1989,4],[1995,3],[2001,6],[2010,4],[2015,3],[2024,1],[2026,7],[2035,3],[2042,7],[2050,10],[2070,3],[2077,3],[2081,7],[2089,3],[2094,1],[2097,4],[2104,1],[2106,4],[2112,6],[2128,4],[2145,4],[2151,1],[2154,7],[2163,4],[2168,3],[2172,7],[2180,7],[2189,3],[2193,7],[2202,5],[2210,6],[2219,4],[2224,1],[2226,7],[2237,3],[2242,6],[2251,4],[2258,3],[2262,4],[2270,6],[2277,3],[2281,3],[2287,4],[2294,3],[2298,4],[2306,6],[2313,3],[2317,3],[2325,4],[2332,1],[2334,4],[2340,6],[2347,6],[2354,3],[2359,7],[2367,2],[2370,7],[2380,4],[2387,3],[2391,4],[2399,6],[2406,3],[2410,3],[2423,4],[2433,4],[2439,1],[2442,7],[2451,4],[2460,5],[2466,1],[2468,4],[2476,1],[2478,4],[2485,4],[2490,4],[2499,7],[2510,10],[2523,2],[2526,7],[2534,3],[2540,3],[2547,7],[2555,10],[2568,6],[2579,15],[2596,11],[2609,11],[2621,4],[2627,4],[2632,4],[2637,6],[2649,8],[2661,6],[2669,1],[2674,1],[2679,1],[2686,7],[2694,4],[2699,3],[2704,6],[2720,6],[2731,15],[2748,11],[2761,11],[2773,4],[2779,4],[2784,4],[2789,6],[2801,6],[2809,4],[2814,4],[2821,6],[2829,1],[2835,7],[2843,4],[2848,3],[2853,6],[2861,3],[2865,7],[2874,7],[2882,5],[2893,6],[2900,6],[2908,7],[2916,4],[2934,13],[2948,1],[2978,6],[2985,3],[2989,4],[3001,7],[3045,7],[3053,4],[3058,6],[3068,7],[3078,6],[3087,3],[3093,4],[3107,7],[3118,4],[3123,7],[3131,9],[3143,7],[3151,7],[3159,7],[3169,7],[3178,4],[3187,4],[3192,6],[3201,3],[3207,5],[3218,7],[3232,4],[3237,7],[3245,6],[3254,5],[3262,6],[3269,7],[3277,4],[3282,7],[3290,4],[3295,4],[3300,6],[3309,4],[3314,4],[3319,6],[3330,4],[3335,10],[3349,7],[3359,6],[3367,7],[3376,5],[3385,6],[3395,7],[3404,4],[3409,4],[3414,7],[3424,4],[3430,4],[3435,4],[3440,6],[3451,4],[3457,4],[3462,4],[3467,6],[3482,4],[3488,1],[3491,7],[3500,3],[3508,5],[3514,5],[3520,1],[3522,4],[3528,3],[3534,6],[3543,4],[3548,3],[3557,1],[3559,7],[3568,3],[3572,7],[3580,7],[3588,10],[3602,1],[3605,4],[3612,1],[3614,4],[3620,6],[3633,4],[3639,1],[3642,7],[3651,4],[3660,5],[3666,1],[3668,4],[3676,1],[3678,4],[3688,4],[3702,4],[3708,1],[3711,7],[3720,4],[3725,3],[3729,7],[3737,7],[3746,3],[3750,7],[3759,5],[3767,6],[3776,4],[3781,1],[3783,7],[3794,3],[3799,6],[3808,4],[3815,3],[3819,4],[3827,6],[3834,3],[3838,3],[3844,4],[3851,3],[3855,4],[3863,6],[3870,3],[3874,3],[3882,4],[3889,3],[3893,4],[3901,6],[3908,3],[3912,3],[3918,4],[3925,1],[3927,4],[3933,6],[3940,6],[3947,3],[3952,7],[3960,7],[3982,13],[3996,1],[4035,4],[4040,13],[4054,1],[4056,3],[4061,6],[4070,6],[4077,1],[4079,3],[4083,5],[4089,4],[4094,4],[4099,6],[4108,7],[4116,4],[4121,1],[4125,4],[4130,16],[4147,1],[4149,3],[4157,13],[4171,1],[4176,6],[4184,13],[4198,1],[4202,4],[4208,4],[4213,4],[4218,6],[4229,7],[4238,4],[4243,4],[4248,1],[4251,1],[4268,4],[4274,1],[4277,13],[4291,1],[4295,4],[4304,4],[4309,6],[4320,6],[4327,1],[4329,4],[4336,4],[4342,1],[4345,13],[4359,1],[4363,3],[4369,5],[4377,6],[4384,1],[4386,3],[4395,4],[4405,4],[4411,1],[4414,13],[4428,1],[4432,4],[4437,3],[4441,7],[4449,7],[4459,1],[4462,5],[4471,6],[4480,4],[4487,3],[4491,4],[4499,3],[4503,4],[4508,1],[4510,6],[4517,4],[4523,3],[4527,3],[4533,4],[4538,3],[4547,1],[4549,7],[4558,6],[4565,3],[4570,1],[4572,3],[4624,15],[4645,6],[4688,4],[4693,15],[4709,6],[4719,13],[4735,6],[4745,4],[4750,18],[4772,15],[4790,6],[4798,15],[4815,13],[4830,16],[4849,6],[4864,4],[4870,1],[4873,15],[4890,7],[4898,3],[4902,7],[4910,7],[4919,1],[4922,7],[4933,5],[4939,5],[4945,1],[4947,4],[4953,1],[4955,6],[4964,1],[4966,5],[4972,1],[4974,7],[4985,1],[4987,5],[5039,15],[5091,4],[5096,15],[5112,6],[5121,8],[5132,6],[5139,4],[5144,4],[5149,6],[5158,3],[5162,5],[5170,4],[5175,18],[5194,5],[5202,6],[5211,15],[5229,6],[5237,15],[5254,8],[5264,5],[5271,4],[5277,4],[5282,4],[5287,6],[5302,4],[5308,1],[5311,15],[5328,7],[5336,3],[5340,7],[5348,7],[5357,1],[5360,7],[5371,5],[5377,5],[5383,1],[5385,4],[5391,1],[5393,5],[5401,1],[5403,8],[5412,3],[5416,7],[5425,5],[5431,7],[5442,1],[5444,5],[5453,4],[5459,1],[5462,15],[5479,4],[5488,4],[5493,6],[5504,6],[5511,1],[5513,4],[5520,4],[5526,1],[5529,15],[5546,3],[5552,5],[5560,6],[5567,1],[5569,3],[5581,4],[5589,8],[5600,8],[5614,4],[5619,4],[5628,1],[5633,10],[5646,2],[5649,1],[5651,3],[5657,3],[5664,7],[5672,10],[5688,3],[5692,5],[5698,6],[5708,18],[5729,6],[5737,1],[5742,1],[5747,1],[5752,1],[5756,1],[5758,4],[5763,3],[5768,6],[5779,3],[5783,5],[5789,6],[5799,18],[5820,1],[5824,1],[5826,4],[5831,3],[5836,6],[5844,5],[5851,3],[5858,6],[5865,4],[5870,3],[5875,2],[5878,3],[5885,3],[5891,3],[5895,7],[5904,8],[5913,5],[5922,3],[5929,4],[5936,3],[5940,7],[5949,3],[5953,5],[5962,5],[5979,10],[5991,6],[6001,7],[6009,11],[6021,3],[6026,1],[6028,4],[6033,11],[6046,5],[6052,6],[6061,7],[6072,18],[6093,1],[6097,1],[6099,4],[6104,10],[6116,7],[6125,6],[6133,3],[6140,7],[6148,4],[6153,10],[6165,3],[6169,7],[6178,4],[6183,7],[6194,6],[6202,3],[6207,1],[6209,4],[6224,5],[6230,7],[6240,1],[6242,1],[6244,1],[6247,3],[6251,5],[6259,1],[6261,1],[6263,1],[6266,4],[6271,7],[6283,7],[6291,8],[6300,8],[6320,15],[6336,6],[6344,13],[6358,3],[6362,6],[6369,3],[6376,18],[6395,6],[6403,13],[6417,4],[6425,17],[6443,6],[6451,13],[6465,6],[6475,18],[6494,6],[6502,5],[6510,6]]},"348":{"position":[[7,6],[14,14],[29,9],[40,3],[46,5],[62,6],[69,1],[72,6],[133,2],[148,6],[155,9]]},"356":{"position":[[5,3],[12,11],[31,4],[36,11],[48,6],[57,2],[61,3],[65,2],[70,4],[76,2],[80,11],[93,10],[104,4],[109,4],[115,5],[133,1],[136,3],[143,2],[146,2],[149,4],[155,6],[162,4],[167,5],[179,6],[194,6],[201,3],[207,4],[213,2],[217,11],[230,16],[247,4],[252,4],[258,5],[278,6],[285,9],[295,4],[300,5],[308,7],[320,7],[328,2],[331,3],[335,8],[349,4],[355,2],[359,11],[372,14],[392,4],[398,5],[419,4],[425,3],[432,2],[435,2],[438,5],[445,6],[454,4],[459,5],[475,4],[484,6],[491,10],[503,3]]},"358":{"position":[[10,4],[15,14],[30,6],[39,2],[43,3],[47,2],[52,4],[58,2],[62,14],[78,6],[85,4],[90,4],[96,5],[104,1],[107,3],[114,2],[117,2],[120,4],[126,6],[133,4],[138,5],[150,6],[165,6],[172,3],[178,4],[184,2],[188,14],[204,6],[216,4],[222,5],[231,4],[237,3],[244,2],[247,2],[250,5],[257,6],[266,4],[271,5],[287,4],[298,6],[305,5],[312,3],[328,4],[333,12],[346,6],[355,10],[366,6],[375,4],[381,2],[385,12],[399,16],[416,4],[421,4],[427,5],[435,6],[442,9],[452,4],[457,5],[465,7],[477,7],[485,2],[488,3],[492,8],[516,4],[521,15],[537,6],[546,8],[556,14],[573,4],[579,2],[583,15],[600,18],[624,4],[630,5],[639,5],[646,3],[653,2],[656,8],[665,6],[691,6],[698,10],[710,3],[725,11]]},"361":{"position":[[11,4],[16,10],[27,9],[39,6],[46,4],[51,4],[57,5],[63,7],[71,2],[74,3],[81,4],[87,5],[96,4],[101,11],[113,9],[125,4],[130,2],[134,7],[143,4],[148,6],[156,5]]},"363":{"position":[[0,4],[5,11],[17,6],[26,4],[31,14],[46,5],[52,12],[65,6],[72,15],[90,4],[96,2],[100,11],[113,15],[129,4],[134,4],[140,5],[148,2],[151,3],[158,2],[161,4],[166,6],[173,4],[180,3],[187,3],[193,6],[200,3],[206,6],[213,2],[216,5],[222,16],[239,4]]},"365":{"position":[[17,4],[22,15],[38,4],[45,4],[52,4],[58,5],[70,1],[81,1],[92,1],[105,1],[136,4],[141,16],[158,4],[165,4],[171,5],[180,4],[185,13],[199,4],[206,4],[213,4],[219,5],[229,4],[234,8],[243,4],[248,4],[254,5],[263,4],[268,17],[286,4],[291,4],[297,5]]},"368":{"position":[[50,29]]},"372":{"position":[[0,3],[20,2],[40,3],[58,3],[70,3]]},"375":{"position":[[7,16],[7,6],[14,9],[26,6],[34,3],[38,3],[42,10],[53,3],[57,3],[61,8],[70,10],[96,5],[102,9],[102,3],[106,5],[112,5],[118,10],[118,4],[123,5],[129,5],[135,11],[135,5],[141,5],[157,3],[229,7],[237,8],[237,1],[239,6],[247,7],[256,6],[265,4],[272,9],[300,6],[324,6],[331,18],[331,6],[338,5],[344,5],[350,1],[357,6],[364,3],[369,1],[372,4],[379,6],[388,1],[395,3],[409,17],[409,3],[413,3],[417,2],[420,6],[427,1],[429,3],[433,5],[439,4],[444,7],[492,3],[499,3]]},"378":{"position":[[5,4],[10,6],[17,9],[28,3],[34,5],[50,8],[59,5],[105,2],[124,9],[138,11]]},"383":{"position":[[16,4],[21,13],[35,9],[47,3],[51,6],[58,7],[67,5],[86,4],[91,17],[109,6],[118,4],[124,1],[127,17],[146,3],[150,6],[157,7],[166,5],[174,3],[178,6],[191,2],[201,1],[205,6],[213,6],[220,3],[237,4],[242,13],[256,6],[265,4],[271,1],[274,13],[289,3],[293,6],[300,7],[309,5],[317,3],[321,6],[334,2],[344,1],[348,6],[356,6],[363,3],[386,4],[391,16],[408,6],[417,6],[424,13],[440,4],[446,1],[449,16],[467,14],[482,6],[489,7],[498,5],[506,6],[513,1],[515,6],[522,3],[526,6]]},"385":{"position":[[19,4],[24,13],[38,6],[47,4],[53,1],[56,13],[71,3],[75,6],[82,7],[91,5],[99,3],[103,6],[116,2],[127,1],[131,6],[139,6],[146,3],[160,4],[165,4],[174,9],[188,16],[205,6],[214,13],[231,9],[241,14],[256,3],[260,2]]},"388":{"position":[[0,4],[5,11],[17,3],[21,5],[29,10],[40,11],[54,4],[59,6],[80,4],[85,14],[100,11],[112,11],[125,6],[132,7],[141,5],[149,6],[156,11],[170,4],[175,10],[187,3],[191,6],[204,2],[214,1],[218,6],[226,4],[231,6],[239,3],[243,6],[256,2],[266,1],[270,6],[278,7],[287,6],[294,3],[298,6],[319,6],[326,3],[348,14]]},"390":{"position":[[10,4],[15,13],[29,9],[41,3],[45,6],[52,7],[61,5],[83,4],[88,14],[103,6],[112,7],[120,3],[124,6],[131,13],[147,4],[153,1],[156,14],[172,8],[181,4],[186,6],[194,6],[201,13],[218,1],[220,7],[228,4],[236,6],[245,4],[251,1],[254,14],[270,7],[278,4],[283,6],[291,6],[298,7],[307,5],[315,2],[318,6],[326,2],[332,1],[334,7],[342,4],[349,2],[354,6],[361,6],[368,3],[372,6],[382,6],[389,3],[393,6]]},"393":{"position":[[0,4],[5,6],[12,6],[21,4],[26,6],[33,4],[38,3],[42,7],[50,4],[55,8],[66,4],[71,6],[78,4],[84,6],[92,4],[97,8],[106,4],[111,6],[119,6],[128,6],[135,4],[140,1],[143,6],[153,1],[155,4],[162,4],[171,4],[176,8],[185,4],[190,3],[195,6],[204,6],[211,4],[216,1],[219,6],[229,1],[231,4],[238,4],[247,4],[252,9],[262,4],[270,6],[279,6],[288,1],[294,6],[302,4],[309,9],[321,4],[327,4],[333,7],[342,2],[347,4],[352,6],[362,3],[366,1],[369,3],[376,5],[382,4],[389,3],[393,1],[398,6],[405,1]]},"395":{"position":[[0,4],[5,7],[13,4],[18,4],[23,14],[40,4],[45,7],[54,4],[59,17],[77,4],[82,7],[91,7],[101,6],[108,4],[113,1],[115,4],[120,14],[136,1],[139,4],[144,7],[155,3],[159,6],[174,1],[177,1],[181,1],[183,6],[191,1],[193,3],[197,4],[203,4],[208,1],[211,1],[214,3],[218,6],[233,1],[236,1],[240,1],[242,6],[250,1],[252,3],[256,4],[266,4],[271,14],[286,4],[291,7],[300,7],[310,6],[317,4],[322,1],[324,4],[329,14],[345,1],[348,4],[353,7],[364,2],[367,1],[369,6],[376,3],[381,13],[405,4],[410,5],[416,1],[426,4],[431,18],[451,6],[460,4],[465,1],[468,1]]},"397":{"position":[[41,5],[47,7],[55,5],[87,3],[94,3]]},"401":{"position":[[0,1],[2,1],[4,1],[22,6],[41,4],[46,6],[53,9],[65,3],[69,5],[75,6],[83,7],[91,6],[99,5],[105,5],[113,5],[121,1],[123,1],[125,1],[148,13],[170,4],[175,13],[189,6],[222,4],[227,16],[247,13],[263,6],[271,13],[289,4],[295,1],[298,13],[313,3],[317,5],[323,6],[331,7],[339,6],[347,5],[355,1],[358,3],[365,3],[369,6],[379,1],[383,1],[385,1],[389,5],[396,7],[405,6],[412,3],[418,4],[424,1],[427,13],[442,5],[450,5],[473,6],[480,3],[496,10],[514,4],[519,10],[530,6],[539,4],[545,2],[548,4],[555,4],[560,13],[574,8],[583,6],[593,10],[605,5],[614,4],[620,3],[627,2],[630,8],[639,8],[649,2],[652,8],[652,1],[654,6],[661,2],[664,8],[664,1],[666,6],[673,2],[676,8],[676,1],[678,6],[686,4],[692,2],[695,3],[702,3],[708,6],[715,3],[720,3],[726,6],[734,10],[745,4],[751,4],[758,3],[764,4],[770,1],[773,10],[785,3],[789,5],[795,6],[803,7],[811,6],[819,5],[827,1],[830,3],[837,3],[841,7],[849,1],[851,4],[860,1],[864,1],[867,1],[869,1],[873,4],[878,3],[884,6],[892,4],[897,2],[900,2],[903,2],[906,2],[909,2],[915,5],[922,7],[931,6],[938,3],[944,4],[950,1],[953,10],[965,5],[973,5],[981,6],[988,1],[990,4],[995,5]]},"403":{"position":[[3,15],[28,4],[33,15],[49,6],[58,7],[68,6],[77,4],[82,18],[101,7],[112,6],[121,15],[139,6],[147,15],[163,7],[172,7],[183,4],[189,1],[192,15],[209,3],[213,5],[219,6],[227,7],[235,6],[243,5],[251,3],[255,1],[258,6],[268,5],[274,1],[276,7],[286,2],[289,3],[296,6],[303,3],[307,5],[314,7],[324,3],[331,3],[337,6],[344,3],[352,6],[359,3],[365,4],[371,1],[374,15],[391,5],[399,5],[407,3],[411,1],[414,6],[424,5],[430,1],[432,7],[442,2],[445,3],[452,6],[459,5],[468,3],[475,3],[481,6],[488,3],[496,6],[503,3]]},"405":{"position":[[3,10],[21,4],[26,10],[37,6],[44,5],[52,13],[66,10],[80,7],[89,10],[100,10],[114,4],[130,13],[149,12],[167,4],[172,12],[185,6],[194,4],[199,10],[210,8],[219,6],[242,19],[272,4],[277,19],[297,6],[304,12],[319,6],[327,5],[336,6],[343,6],[350,4],[357,4],[362,13],[377,6],[384,16],[404,3],[408,4],[413,10],[425,6],[432,13],[446,6],[453,8],[463,7],[472,6],[479,3],[484,3],[488,6],[506,1],[510,6],[517,4]]},"407":{"position":[[32,13],[53,4],[58,13],[72,6],[81,8],[90,6],[97,6],[105,4],[110,6],[119,4],[124,16],[141,8],[150,6],[159,13],[175,6],[183,13],[198,8],[208,8],[218,6],[227,4],[232,6],[239,7],[248,1],[252,4],[257,6],[270,4],[276,1],[279,13],[294,3],[298,5],[304,6],[312,7],[320,6],[328,5],[336,4],[344,3],[348,6],[355,6],[364,5],[372,5],[380,7],[390,7],[400,4],[407,4],[412,3],[418,6],[425,4],[430,7],[442,8],[452,1],[457,4],[462,7],[470,4],[476,4],[482,3],[489,1],[491,6],[498,4],[503,1],[505,8],[516,11],[528,4],[535,5],[541,9],[551,8],[562,2],[565,3],[572,3],[578,6],[585,3],[591,5],[597,4],[602,4],[607,5],[615,2],[618,4],[623,10],[637,3],[643,6],[650,3],[654,6],[677,1],[681,4],[686,10],[700,6],[707,3],[713,4],[719,1],[722,13],[737,5],[745,5],[770,6],[777,3]]},"409":{"position":[[0,4],[5,4],[26,13],[43,16],[73,10],[85,3],[92,13],[107,3],[111,3],[117,2],[120,3],[127,3],[133,5],[139,3],[157,15],[176,18],[195,13],[210,10],[230,15],[246,3],[251,4],[268,15],[284,3],[289,4],[308,15],[324,3],[329,5],[359,2],[362,3],[369,15],[385,5],[394,3],[401,3],[407,3],[411,6],[430,1],[432,1],[436,3],[455,13],[472,16],[490,4],[497,3],[501,6],[508,7],[516,3],[520,3],[526,14],[544,18],[563,13],[578,10],[590,13],[605,14],[620,3],[625,4],[653,14],[668,5]]},"411":{"position":[[0,3],[18,2],[33,3],[52,3]]},"413":{"position":[[7,3],[52,3]]},"415":{"position":[[7,3],[13,6],[20,14],[35,9],[80,3],[86,4],[91,6],[98,9],[167,3],[173,6],[180,12],[193,9],[246,3],[252,9],[262,11],[274,9],[327,3],[333,10],[344,9],[354,9]]},"417":{"position":[[62,3],[66,2],[69,7],[115,3],[121,3],[125,1],[127,6],[134,8],[167,4],[174,4],[179,2],[182,6],[190,6],[217,5],[225,3],[229,4],[234,1],[236,5],[242,4],[247,2]]},"422":{"position":[[0,6],[37,6],[47,6],[54,3],[58,1],[60,6],[67,6],[79,6]]},"424":{"position":[[0,6],[10,2],[26,2],[29,3],[33,6],[40,3],[44,1],[46,6],[53,6]]},"427":{"position":[[0,7],[8,4],[13,6],[23,3],[29,6],[36,3],[40,1],[42,6],[49,6],[59,4],[64,4],[73,8],[86,18],[86,2],[89,6],[96,8],[112,6],[122,14],[138,3],[145,6],[152,20],[175,4],[180,8],[191,6],[198,11],[211,2],[214,3],[221,3],[227,3],[231,7],[240,5],[246,10],[257,4],[265,3],[270,6],[279,3],[283,7],[292,6],[299,8],[311,6],[318,14],[340,6],[347,20],[370,4],[375,8],[386,6],[393,11],[414,6],[421,11],[442,2],[452,6],[459,7],[472,6],[479,7],[509,6]]},"429":{"position":[[0,7],[8,4],[13,6],[23,3],[29,6],[36,3],[40,1],[42,6],[49,6],[59,4],[64,4],[73,8],[86,18],[86,2],[89,6],[96,8],[106,14],[126,2],[129,2],[132,53],[206,3],[213,6],[220,22],[245,4],[250,14],[269,4],[274,8],[285,2],[288,3],[295,3],[301,3],[305,7],[314,8],[323,9],[337,4],[344,3],[348,7],[357,8],[366,7],[383,6],[390,22],[413,14],[429,8],[462,3],[471,5]]},"431":{"position":[[18,11],[34,19],[34,3],[38,6],[45,8],[55,17],[74,1],[79,6],[86,20],[109,4],[114,11],[128,6],[135,11],[148,3],[152,7],[161,7],[169,6],[176,8],[188,6],[195,17]]},"433":{"position":[[17,6],[24,4],[41,4],[47,3],[54,6],[61,4],[68,4],[73,14],[90,2],[93,3],[100,3],[107,4],[114,6],[121,11],[135,3],[139,7],[148,8],[157,4],[162,2],[165,8],[175,8],[184,8],[210,6],[217,4],[236,2],[251,5],[257,15],[275,2],[278,4],[283,19],[303,10],[314,6],[322,8],[331,6],[339,6],[348,4],[354,3],[361,6],[368,4],[375,4],[380,10],[393,2],[396,3],[403,3],[409,3],[413,7],[422,5],[428,7],[436,4],[444,3],[449,6],[456,10],[489,2],[492,4],[499,15],[517,7],[526,3],[533,6],[540,20],[563,4],[568,8],[579,15],[596,2],[599,3],[606,3],[612,3],[616,7],[625,5],[631,9],[641,4],[649,3],[654,6],[661,10],[674,3],[678,7],[687,8],[696,4],[701,8],[713,6],[720,6],[727,7],[738,6],[745,10]]},"435":{"position":[[74,6]]},"437":{"position":[[0,6],[7,20],[38,6],[45,22],[76,6],[83,4],[107,5],[114,3],[118,6],[165,4],[170,4],[186,1],[191,3],[196,2],[203,2],[210,2],[216,6],[224,1],[229,3],[233,3],[238,1],[243,3],[247,3],[254,6],[264,2],[267,2],[270,31],[302,21],[325,2],[334,6],[344,2],[354,4],[359,6],[367,22],[394,4],[400,9],[410,21]]},"440":{"position":[[52,2]]},"443":{"position":[[0,7],[8,4],[13,6],[21,3],[32,4],[37,5],[43,9],[55,4],[71,4],[76,6],[83,6],[92,4],[98,1],[100,6],[108,4],[117,3],[121,7],[130,7],[138,6],[149,4],[154,6],[161,6],[170,4],[176,1],[178,6],[186,4],[195,3],[199,7],[208,7],[216,6],[235,4],[240,12],[253,9],[263,6],[271,5],[279,6],[286,9],[298,4],[304,6],[313,6],[320,6],[329,4],[335,6],[344,6],[351,6],[360,7],[369,6],[376,3],[384,4],[389,4],[398,2],[404,12],[418,6],[427,2],[433,12],[447,6],[456,2],[459,4],[466,2],[469,4]]},"445":{"position":[[8,4],[13,4],[18,9],[30,4],[37,4],[43,5],[49,7],[62,4],[68,5],[87,4],[92,7],[100,7],[108,6],[116,4],[121,6],[130,4],[136,5],[145,6],[152,7],[162,4],[168,3],[174,6],[182,7],[190,4],[196,4],[203,3],[207,4],[213,4],[220,6],[228,8],[237,4],[243,4],[250,3],[254,4],[260,4],[267,6],[275,8],[284,3],[289,4],[296,3],[300,7],[309,6],[316,3],[321,3],[325,6],[333,11],[345,7],[367,4],[372,4],[381,4],[387,1],[392,7],[401,4],[409,5],[417,3],[421,7],[429,3],[435,4],[440,4],[447,4],[453,3]]},"447":{"position":[[35,3]]},"450":{"position":[[0,7],[8,4],[13,6],[21,3],[32,4],[37,11],[49,9],[61,7],[79,4],[84,14],[99,6],[108,4],[114,1],[116,14],[132,7],[144,3],[148,7],[157,5],[163,9],[177,4],[182,17],[200,6],[209,4],[215,1],[217,17],[236,7],[248,3],[252,7],[261,8],[270,9],[292,4],[297,9],[307,9],[319,15],[337,11],[359,4],[364,12],[377,6],[386,4],[392,1],[394,12],[408,15],[426,11],[440,6],[447,14],[466,4],[471,15],[487,6],[496,4],[502,1],[504,15],[521,15],[539,11],[553,6],[560,17],[582,4],[587,4],[596,3],[600,7],[608,9],[618,7],[628,12],[643,4],[651,7],[659,15],[677,4],[682,7],[692,7],[702,15],[720,4],[727,7],[735,15],[753,4],[758,7]]},"452":{"position":[[8,4],[13,6],[20,9],[32,3],[36,5],[42,6],[50,3],[54,6],[72,4],[77,13],[91,9],[103,6],[112,6],[131,4],[136,10],[147,6],[156,4],[161,6],[170,4],[176,1],[179,10],[191,3],[195,5],[202,3],[206,6],[228,4],[233,17],[251,6],[260,4],[265,6],[274,4],[280,1],[283,17],[302,6],[311,6],[320,6],[328,10],[339,4],[345,1],[347,4],[366,4],[371,13],[385,6],[394,4],[400,1],[403,13],[418,3],[422,5],[429,3],[433,6],[443,3],[447,6],[457,1],[461,1],[463,1],[467,5],[474,3],[481,4],[486,20],[507,6],[516,4],[522,1],[525,20],[547,6],[556,6],[565,6],[573,13],[599,4],[604,16],[621,3],[625,6],[633,13],[649,2],[652,3],[660,10],[674,6],[682,17],[700,4],[708,3],[712,3],[716,3],[720,3],[728,6],[736,20],[761,4],[766,4],[775,7],[786,16],[803,2],[806,6],[814,7],[814,3],[818,3],[825,6],[835,7],[843,6],[852,6],[859,3],[864,4],[872,11],[884,7]]},"457":{"position":[[0,7],[8,4],[13,6],[21,3],[35,4],[40,6],[47,9],[59,5],[69,4],[74,7],[82,9],[94,4],[106,7],[117,4],[122,13],[136,6],[145,4],[151,13],[166,5],[176,3],[180,7],[189,7],[197,6],[208,4],[213,14],[228,6],[237,4],[243,14],[259,4],[268,3],[272,7],[281,7],[289,7],[304,3],[311,4],[316,9],[326,6],[335,4],[341,9],[352,5],[362,3],[366,7],[375,3],[379,6],[390,4],[395,10],[406,6],[415,4],[421,10],[433,4],[442,3],[446,7],[455,3],[459,7],[481,4],[486,10],[497,9],[509,12],[524,6],[531,13],[547,7],[565,4],[570,14],[585,6],[594,4],[600,14],[616,12],[631,6],[640,6],[647,13],[665,4],[671,14],[687,13],[703,7],[713,6],[720,14],[739,4],[744,10],[755,6],[764,4],[770,10],[782,12],[797,6],[806,6],[813,9],[827,4],[833,10],[845,13],[861,7],[871,6],[878,10],[899,4],[904,4],[913,3],[917,7],[925,10],[936,7],[946,14],[963,7],[971,12],[986,5],[994,7],[1002,13],[1018,4],[1025,7],[1035,10],[1048,7],[1056,12],[1071,5],[1079,7],[1087,13],[1103,4]]},"461":{"position":[[0,7],[8,4],[13,6],[21,3],[26,4],[31,6],[38,9],[50,5],[60,4],[65,3],[69,6],[78,4],[84,3],[89,5],[99,3],[103,7],[112,4],[122,4],[127,3],[131,6],[140,4],[146,3],[151,5],[161,3],[165,7],[174,4],[184,3],[188,14],[205,4],[210,3],[214,6],[221,4],[228,6],[236,4],[241,14],[256,4],[261,6],[269,7],[277,4],[284,6],[294,14],[309,4],[317,7],[327,4],[332,9],[342,4],[347,6],[355,6],[364,2],[367,1],[370,2],[376,14],[391,4],[398,2],[403,6],[410,1],[416,6],[423,3],[429,4],[434,4],[443,14],[459,3],[465,4],[472,6],[481,6],[488,3],[497,14],[513,3],[519,4],[526,6],[535,6],[542,3],[551,9],[562,3],[568,5],[576,9],[587,3],[593,5]]},"465":{"position":[[30,2]]},"470":{"position":[[0,4],[5,4],[12,2],[36,9],[58,9]]},"473":{"position":[[18,9],[59,9]]},"475":{"position":[[0,4],[5,4],[10,6],[19,6],[26,6],[33,1],[35,6],[52,6],[59,10]]},"478":{"position":[[0,4],[5,7],[13,1],[15,6],[24,4],[33,3],[37,2],[40,4],[45,5],[51,4],[59,4],[64,7],[73,2]]},"480":{"position":[[0,4],[6,1],[9,4],[15,4],[45,9]]},"482":{"position":[[0,4],[6,1],[9,4],[15,6],[32,9]]},"484":{"position":[[0,4],[6,1],[9,4],[15,9],[35,9]]},"487":{"position":[[0,2],[3,4],[18,3],[23,9],[40,3],[68,4],[73,4],[95,2],[98,6]]},"489":{"position":[[0,7],[8,4],[13,6],[23,3],[29,4],[36,4],[44,3],[50,5],[58,3],[62,4],[69,4],[74,5],[82,4],[89,4],[94,7],[103,4],[111,4],[116,8],[125,2],[128,3],[135,3],[141,4],[146,1],[148,4],[155,3],[159,3],[163,5],[173,1],[177,4],[182,4],[191,4],[199,5],[205,1],[208,5],[216,5],[222,1],[226,3],[230,6],[238,8],[248,1],[250,3],[254,4],[261,1],[263,1],[267,2],[271,4],[277,4],[282,1],[284,6],[293,4],[298,5],[304,3],[310,4],[315,11],[332,4],[337,8],[350,3],[354,1],[359,1],[362,1],[366,1],[369,1],[375,4],[380,1],[382,4],[389,5],[397,6],[404,5],[411,1],[414,3],[418,6],[426,8],[435,5],[441,4],[448,1],[450,1],[454,1],[457,4],[462,6],[476,4],[481,9],[493,4],[498,1],[500,6],[551,4],[556,5],[562,1],[566,4],[571,6],[583,4],[588,4],[597,3],[601,1],[606,1],[609,1],[613,1],[616,1],[622,2],[625,8],[634,1],[639,8],[652,4],[657,5],[663,2],[668,4],[673,6]]},"491":{"position":[[9,4],[15,4],[74,6],[83,9],[98,6],[114,9],[124,9],[142,9],[166,7],[184,4]]},"493":{"position":[[8,4],[14,1],[17,6],[25,16],[46,1],[48,2],[51,4],[58,5],[64,1],[66,2],[69,6],[78,3],[83,1],[85,9],[97,1],[99,4],[104,4],[118,5],[133,4],[166,7]]},"495":{"position":[[3,4],[8,4],[13,7],[36,6],[45,5],[63,6],[70,9],[117,7],[132,4]]},"497":{"position":[[0,4],[5,4],[12,2]]},"500":{"position":[[0,2],[3,4],[25,2]]},"502":{"position":[[0,4],[5,7],[27,3]]},"504":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[32,4],[40,4],[45,4],[54,3],[61,4],[66,7],[75,2],[82,1],[91,5],[97,5],[126,6],[134,3],[141,3],[145,14],[162,2],[165,3],[172,3],[178,3],[182,7],[191,5],[200,3],[205,6],[214,3],[218,7],[226,6],[233,6]]},"506":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[32,4],[40,4],[45,4],[54,3],[61,4],[66,7],[75,2],[82,1],[86,6],[94,3],[101,3],[105,6],[114,2],[117,3],[124,3],[130,3],[134,7],[143,5],[152,3],[157,6],[166,3],[170,7],[179,6],[189,6],[196,6]]},"509":{"position":[[0,7],[8,4],[13,6],[23,5],[31,3],[37,2],[40,4],[48,4],[53,4],[62,3],[69,4],[74,7],[83,4],[91,5],[98,5],[107,3],[111,3],[115,5],[121,6],[128,3],[132,6],[142,3],[146,2],[149,3],[156,3],[160,3],[167,3],[174,3],[180,3],[184,7],[193,5],[202,3],[209,3],[213,7],[222,6],[232,3],[236,6]]},"511":{"position":[[0,10],[31,7],[39,4],[44,6],[54,5],[62,3],[68,2],[71,4],[79,4],[84,4],[93,3],[100,4],[105,7],[114,4],[122,5],[128,3],[136,1],[141,2],[146,6],[154,3],[161,3],[165,10],[178,2],[181,3],[188,3],[194,3],[198,7],[207,5],[213,8],[222,10],[236,3],[241,6],[250,2],[253,3],[260,3],[264,5],[273,3],[280,3],[286,3],[290,7],[299,5],[305,8],[314,7],[325,3],[330,6],[339,7],[350,5],[356,10],[367,6],[375,3],[379,7],[387,4],[396,3],[400,7],[409,6],[416,4],[424,7],[432,4],[442,2],[445,3],[452,3],[456,4],[464,3],[471,3],[477,3],[481,7],[490,5],[496,7],[504,3],[508,7],[519,3]]},"513":{"position":[[0,7],[8,4],[13,6],[23,5],[31,3],[37,2],[40,4],[48,4],[53,4],[62,3],[69,4],[74,7],[83,3],[89,3],[93,3],[97,5],[103,6],[110,3],[114,6],[124,3],[128,3],[132,5],[140,5],[146,15],[163,5],[169,4],[174,5],[183,2],[186,3],[193,3],[197,3],[204,3],[211,3],[217,3],[221,7],[230,5],[239,3],[246,3],[250,7],[259,6],[269,3],[273,6]]},"515":{"position":[[0,3],[7,4],[12,7],[21,8],[32,3],[36,3],[42,6],[49,3],[53,3],[59,6],[59,2],[62,3],[66,10]]},"517":{"position":[[0,7],[8,4],[13,6],[23,7],[33,3],[39,2],[42,4],[49,4],[57,4],[62,4],[71,3],[76,6],[86,7],[94,11],[106,7],[114,10],[128,1],[130,4],[135,6],[143,5],[149,6],[158,3],[165,4],[170,14],[185,3],[191,5],[200,1],[204,2],[207,3],[214,3],[218,3],[225,3],[232,3],[238,3],[242,7],[251,7],[259,5],[265,3],[269,2],[272,6],[282,3]]},"519":{"position":[[0,7],[8,5],[14,6],[24,2],[29,2],[32,4],[39,7],[53,3],[57,8],[66,1],[68,5],[74,7],[82,7],[90,9],[100,3],[104,6],[112,4],[117,3],[121,7],[129,6],[137,5],[145,3],[152,14],[167,7],[176,6],[183,3],[187,3],[198,13],[212,8],[221,1],[223,5],[229,7],[237,3],[241,7],[249,3],[253,8],[262,6],[269,3],[273,6],[280,6],[288,4],[293,13],[307,7],[315,6],[326,4],[332,5],[341,3],[348,14],[363,7],[372,6],[379,3],[383,14],[405,15],[421,8],[430,1],[432,5],[438,7],[446,3],[450,7],[458,3],[462,6],[469,5],[475,4],[480,3],[484,4],[489,4],[495,4],[500,15],[516,7],[524,6],[535,4],[541,3],[546,5],[555,3],[562,14],[577,7],[586,6],[594,3],[601,3],[605,14],[622,2],[625,3],[632,3],[638,2],[641,7],[650,2],[656,3],[662,4],[667,9],[679,2],[684,6],[691,6],[699,7],[707,8],[719,3],[725,6],[732,6],[741,1],[744,3],[750,6],[757,6],[765,1],[768,3],[777,14],[792,11],[804,2],[808,4],[813,3],[817,4],[822,11],[834,9],[845,4],[850,14],[865,7],[873,6],[882,4],[887,3],[893,4],[901,7],[909,6],[916,7],[925,2],[928,3],[932,4],[941,1],[945,6],[952,4],[957,7],[984,5],[992,3],[999,4],[1004,7],[1012,4],[1017,1],[1021,4],[1026,1],[1034,3],[1038,3],[1044,6],[1051,2],[1054,7],[1066,6],[1066,2],[1069,3],[1073,1],[1078,4],[1083,1],[1087,6],[1094,3]]},"521":{"position":[[0,7],[8,4],[16,4],[22,5],[28,5],[38,4],[43,5],[49,6],[59,5],[67,3],[73,2],[76,4],[84,4],[89,4],[98,4],[106,4],[111,7],[120,4],[128,5],[135,5],[144,4],[152,4],[157,7],[166,4],[174,5],[190,4],[196,3],[203,4],[208,10],[221,2],[224,3],[231,3],[237,3],[241,7],[250,5],[256,8],[265,4],[273,3],[278,6],[287,4],[292,5],[300,4],[305,3],[309,3],[313,5],[319,6],[326,4],[331,6],[341,3],[356,2],[359,3],[366,4],[371,5],[380,3],[387,3],[393,3],[397,7],[406,5],[412,8],[421,4],[429,3],[434,6],[454,2],[457,3],[464,4],[469,5],[478,3],[485,3],[491,3],[495,7],[504,5],[510,8],[519,4],[527,3],[532,6],[553,2],[556,3],[563,4],[568,4],[576,3],[583,3],[589,3],[593,7],[602,5],[608,7],[616,3],[620,4],[628,3],[633,6],[642,2],[645,3],[652,4],[657,4],[665,3],[672,3],[678,3],[682,7],[691,5],[697,7],[705,3],[709,4],[717,3],[722,6],[731,3],[735,7],[744,8],[753,6],[763,3],[767,6]]},"523":{"position":[[0,4],[5,7],[26,6],[35,6],[54,10],[78,6],[97,14],[129,5],[147,4],[152,14],[176,2],[179,4],[192,2]]},"525":{"position":[[2,6],[15,9]]},"527":{"position":[[0,6],[11,7],[22,9]]},"529":{"position":[[5,7],[44,2]]},"531":{"position":[[0,7],[8,4],[13,6],[23,3],[29,4],[37,4],[42,6],[49,2],[52,4],[57,6],[67,4],[72,5],[78,1],[82,4],[87,6],[95,2],[110,4],[115,4],[124,2],[130,4],[135,4],[140,6],[159,7],[167,2],[170,6],[177,2],[187,9],[197,3],[201,7],[222,3],[231,2],[246,3],[250,7],[267,3],[278,2],[284,4],[289,4],[294,6],[312,7],[321,2],[324,6],[331,2],[342,6],[353,7],[367,3],[376,2],[391,6]]},"533":{"position":[[0,6],[15,7],[45,7],[53,4],[58,6],[68,3],[74,4],[82,4],[87,4],[96,3],[103,4],[108,4],[113,6],[121,3],[128,4],[133,4],[138,6],[152,9],[164,3],[173,2],[176,4],[185,4],[190,5],[196,1],[200,4],[205,6],[213,3],[221,7],[229,4],[234,3],[249,9],[261,3],[270,2],[273,4],[282,4],[287,5],[293,1],[297,4],[302,6],[310,3],[318,7],[326,4],[331,3],[344,6],[358,7],[367,6],[376,4],[381,4],[391,3],[396,3],[400,7],[409,8],[421,4],[427,4],[432,4],[442,3],[447,3],[451,7],[460,8],[472,4],[478,4],[485,4],[490,5],[496,1],[500,4],[505,6],[514,3],[518,7],[527,7],[536,2],[539,7],[547,8],[567,6],[577,3],[583,3],[590,7],[611,4],[620,1],[633,4],[640,4],[645,5],[651,1],[655,4],[660,6],[689,7],[710,4],[715,5],[724,6]]},"535":{"position":[[20,6]]},"537":{"position":[[5,9],[28,4],[33,9],[57,7],[65,4],[70,6],[80,3],[86,4],[93,4],[101,4],[106,6],[113,2],[116,3],[121,2],[125,4],[130,9],[143,5],[149,2],[152,4],[172,3],[176,6],[184,6],[192,1],[202,1],[206,2],[210,4],[215,5],[221,1],[225,4],[230,6],[238,3],[242,6],[250,6],[258,1],[266,1],[270,2],[276,4],[281,4],[290,3],[294,2],[297,4],[302,9],[312,3],[316,1],[321,1],[324,1],[329,1],[332,1],[338,2],[341,3],[345,1],[356,2],[359,6],[366,1],[370,2],[380,9],[392,2],[395,4],[414,3],[418,7],[442,2],[445,3],[449,1],[460,9],[479,5],[485,2],[488,4],[497,9],[516,2],[519,4],[537,2],[540,4]]},"539":{"position":[[4,9],[29,4],[34,5],[47,4],[52,9],[68,7],[76,4],[81,6],[91,3],[97,4],[104,4],[112,3],[118,7],[126,3],[130,2],[133,4],[138,5],[146,4],[151,6],[158,2],[161,3],[166,2],[170,4],[175,9],[188,5],[194,2],[197,4],[204,2],[207,4],[214,7],[224,3],[228,6],[236,6],[244,1],[251,1],[253,1],[257,2],[261,7],[270,2],[273,6],[284,4],[289,4],[298,3],[302,2],[305,4],[310,9],[320,3],[324,1],[329,1],[332,1],[337,1],[340,1],[346,2],[349,3],[353,1],[356,2],[359,6],[366,1],[370,2],[376,2],[379,4],[386,3],[390,7],[407,7],[422,2],[425,4],[435,7],[448,9],[471,2],[474,6],[492,9]]},"541":{"position":[[0,4],[5,4],[49,7],[57,4],[62,6],[72,3],[78,4],[85,4],[93,3],[99,5],[107,5],[113,4],[120,4],[125,7],[134,4],[139,5],[150,4],[155,6],[162,2],[165,3],[172,4],[177,1],[179,4],[186,3],[191,5],[199,4],[204,4],[221,4],[228,3],[232,6],[240,6],[248,1],[256,1],[260,2],[264,4],[269,1],[271,6],[282,4],[287,4],[296,3],[300,2],[303,4],[308,9],[318,3],[322,1],[327,1],[330,1],[335,1],[338,1],[344,2],[347,3],[351,1],[354,2],[357,4],[362,2],[365,3],[372,5],[378,2],[381,4],[388,6],[395,2],[401,1],[406,4],[411,5],[417,1],[421,4],[426,6],[442,4],[447,1],[449,4],[456,5],[464,4],[469,4],[474,1],[476,6],[485,4],[490,9],[513,9],[523,2],[526,4],[539,4],[544,4],[556,5],[565,4],[571,4],[576,9],[596,9]]},"543":{"position":[[0,4],[5,4],[20,9],[50,7],[58,4],[63,6],[73,3],[79,4],[87,3],[91,4],[96,4],[101,4],[106,4],[111,10],[126,3],[130,7],[149,4],[154,6],[161,2],[165,4],[170,9],[183,5],[189,2],[192,4],[199,4],[204,2],[207,10],[219,3],[223,7],[232,6],[246,4],[251,4],[260,3],[264,2],[267,4],[272,9],[282,3],[286,1],[291,1],[294,1],[298,1],[301,1],[307,2],[310,3],[314,1],[317,2],[320,6],[328,2],[334,2],[337,4],[350,4],[355,2],[358,10],[373,10],[398,9]]},"545":{"position":[[15,4],[20,6],[37,4],[42,5]]},"547":{"position":[[0,7],[8,4],[13,6],[23,3],[29,4],[36,4],[41,6],[51,3],[55,7],[63,5],[69,4],[74,6],[81,2],[85,4],[90,9],[103,5],[109,2],[112,4],[119,6],[126,8],[136,7],[145,1],[158,4],[163,4],[172,3],[176,2],[179,4],[184,9],[194,3],[198,1],[203,1],[206,1],[210,2],[214,1],[220,2],[223,3],[227,1],[230,2],[233,6],[241,2],[247,2],[250,4],[257,3],[261,7],[278,7],[293,6],[300,8],[310,7],[319,1],[325,7],[337,9],[358,4],[363,5]]},"549":{"position":[[0,7],[8,7],[24,9]]},"551":{"position":[[0,7],[8,4],[13,6],[23,7],[33,3],[39,4],[47,4],[52,6],[59,3],[63,7],[71,7],[82,3],[88,6],[97,4],[104,3],[108,4],[116,3],[120,7],[129,6],[146,6],[153,7],[162,3],[166,7],[175,6],[192,4],[197,5],[203,3],[209,4],[214,11],[233,4],[238,4],[247,3],[252,6],[262,7],[270,11],[282,7],[290,10],[304,1],[306,4],[311,6],[319,5],[325,6],[334,2],[337,6],[344,3],[349,4],[354,5],[360,1],[364,4],[369,6],[386,3],[390,7],[413,7],[421,11],[433,1],[443,3],[450,6]]},"553":{"position":[[8,7],[31,9],[46,9],[59,5],[77,4],[92,4],[109,6],[128,7],[150,9],[169,7],[195,9],[216,5],[248,7],[261,5],[273,6],[288,7],[314,7],[325,2],[354,4],[359,5],[386,7],[396,5],[403,6],[418,7]]},"555":{"position":[[0,7],[8,5],[16,2]]},"557":{"position":[[7,5],[13,2],[53,2],[82,5],[88,12],[140,3],[153,3],[162,2],[175,2],[184,2],[194,3],[205,2],[220,5],[226,12],[239,3],[247,2],[250,1],[252,2],[264,5],[270,14],[285,3],[291,4],[298,4],[307,5],[315,2],[322,3],[326,5],[332,5],[338,7],[346,5],[352,11],[365,5],[372,3],[376,6],[386,2],[393,1],[395,1],[399,5],[405,6],[413,3],[417,6],[425,2],[433,1],[435,1],[439,5],[445,5],[452,3],[456,6],[464,2],[474,1],[476,1],[480,5],[486,10],[498,3],[502,6],[512,2],[521,1],[523,1],[527,5],[533,5],[546,4],[551,13],[565,8],[574,6],[582,5],[590,1],[593,3],[600,2],[603,6],[610,8],[620,2],[623,3],[630,3],[636,6],[643,3],[649,5],[655,1],[657,5],[665,6],[672,5],[678,13],[692,1],[694,2]]},"559":{"position":[[8,5],[17,5],[23,5],[38,4],[43,3],[47,6],[56,1],[58,1],[62,5],[79,5],[85,5],[98,5],[106,9],[129,9],[142,5],[148,10],[175,9],[198,9],[208,5],[222,5],[228,11],[240,2],[245,4],[252,4],[261,4],[270,7],[278,4],[283,6],[293,3],[299,7],[307,5],[315,4],[323,4],[328,4],[337,3],[341,7],[350,5],[358,2],[361,4],[370,5],[376,4],[385,3],[389,7],[398,9],[414,3],[418,7],[427,5],[433,5],[441,5],[447,10],[464,4],[469,5],[475,1],[479,4],[484,6],[492,5],[498,10],[511,3],[515,7],[524,3],[534,5],[555,4],[563,6],[573,3],[580,6],[590,5],[597,5],[603,12],[617,3],[630,9]]},"561":{"position":[[9,7],[17,4],[22,6],[32,3],[38,6],[45,3],[49,8],[58,6],[67,7],[75,5],[84,4],[89,4],[98,6],[105,4],[111,5],[117,5],[125,2],[129,2],[135,5],[141,13],[157,2],[160,2],[165,3],[169,6],[177,2],[180,7],[190,1],[192,1],[196,2],[199,9],[210,3],[214,6],[222,4],[227,6],[236,1],[239,1],[241,1],[245,2],[248,4],[253,4],[259,2],[262,4],[267,7],[276,3],[280,1],[283,3],[290,5],[296,2],[299,4],[306,3],[310,6],[318,10],[331,1],[334,1],[336,1],[340,3],[344,4],[350,3],[354,7],[365,3],[369,1],[372,3],[379,5],[385,2],[388,8],[399,3],[403,6],[411,8],[422,1],[425,1],[427,1],[431,3],[435,3],[440,3],[444,5],[463,4],[468,4],[474,5],[480,5],[486,2],[489,7],[498,3],[502,2],[505,1],[507,4],[512,6],[520,4],[526,5],[533,10],[545,6],[552,3],[556,8],[565,6],[572,2],[575,1],[577,1],[579,10],[591,6],[598,3],[602,1],[604,3],[608,2],[611,2],[614,1],[616,8],[627,9],[637,3],[641,8],[652,8],[661,2],[664,8],[674,11],[674,3],[678,7],[686,1],[688,8],[698,10],[698,3],[702,6],[710,8],[720,12],[720,3],[724,8],[734,8],[744,12],[744,3],[748,8],[758,8],[768,11],[768,3],[772,7],[781,8],[791,6],[798,5],[804,8],[814,4],[819,5],[825,8],[835,7],[843,2],[846,8],[856,3],[860,3],[864,8],[874,3],[878,8],[887,40],[928,8],[938,3],[942,4],[947,4],[952,2],[955,5],[961,2],[964,3],[968,8],[978,3],[982,8],[991,5],[999,3],[1003,3],[1007,6],[1014,40],[1056,4],[1064,6],[1072,6],[1080,4],[1085,4],[1091,3],[1095,7],[1103,3],[1108,4],[1114,3],[1118,3],[1122,1],[1124,2],[1127,2],[1130,2],[1133,4],[1139,4],[1144,1]]},"564":{"position":[[0,4],[5,13],[19,9],[29,6],[39,3],[45,3],[49,1],[51,7],[59,8],[68,7],[76,12],[90,1],[93,2],[96,1],[98,5],[106,9],[118,5],[124,12],[139,5],[145,2],[150,1],[153,1],[158,2],[161,6],[169,8],[178,3],[184,5],[190,13],[204,1],[206,2],[212,1],[214,5],[222,6],[231,4],[236,5],[242,1],[246,4],[251,6]]},"566":{"position":[[0,4],[5,18],[28,5],[34,4],[43,2],[46,1],[51,7],[62,1],[67,3],[73,3],[77,7],[85,2],[88,6],[97,5],[105,1],[107,1],[111,1],[114,5],[120,10],[144,5],[153,5],[159,5],[167,2],[170,9],[181,5],[187,3],[193,5],[200,4],[206,2],[209,4],[214,1],[232,14]]},"568":{"position":[[0,4],[5,11],[21,2],[25,2],[31,5],[37,13],[53,2],[57,2],[62,3],[66,7],[86,6],[95,3],[99,6],[112,1],[114,1],[120,1],[122,3],[130,1],[132,1],[136,2],[139,4],[144,4],[150,2],[153,4],[158,7],[167,2],[170,9],[181,3],[185,7],[195,1],[203,3],[207,1],[210,3],[217,5],[223,2],[226,4],[233,3],[237,6],[248,1],[251,1],[253,1],[257,3],[261,4],[267,3],[271,7]]},"570":{"position":[[0,13],[35,12],[59,14],[77,2],[80,1],[82,2],[99,12],[121,7],[129,5],[138,2],[221,2]]},"572":{"position":[[0,11],[62,3]]},"575":{"position":[[35,3]]},"577":{"position":[[0,6],[32,8],[52,10],[63,14],[92,3],[100,2],[105,7],[115,4]]},"580":{"position":[[0,7],[8,6],[15,6],[25,7],[35,6],[44,3],[50,4],[61,7],[94,6],[108,4],[113,7],[121,9],[133,5],[141,5],[147,4],[154,5],[160,4],[167,6],[179,6],[192,4],[197,6],[204,6],[224,8],[233,3],[237,6],[244,7],[258,8],[273,5],[279,4],[284,7],[302,7],[310,4],[315,5],[326,5],[348,4],[353,5],[359,6],[368,4],[373,6],[380,4],[385,6],[392,7],[400,6],[412,9],[430,4],[435,9],[448,6],[457,6],[465,6],[473,8],[483,4],[488,3],[492,6],[499,7],[509,7],[518,4],[523,4],[528,5],[535,3],[548,15],[569,4],[575,1],[578,6],[586,15],[602,1],[604,7],[613,5],[621,1],[623,5],[629,4],[636,5],[642,1],[644,5],[650,6],[659,4],[667,1],[669,4],[676,2],[679,1],[682,2],[688,1],[690,8],[699,4],[706,2],[711,6],[718,6],[725,3],[730,7],[738,7],[746,10],[761,1],[763,8],[772,4],[780,1],[782,6],[789,3],[798,8],[814,4],[820,1],[823,6],[831,8],[842,5],[850,1],[852,5],[858,5],[866,5],[872,1],[874,5],[880,7],[890,3],[894,1],[897,1],[902,5],[908,1],[910,8],[921,2],[924,3],[931,1],[933,5],[942,3],[949,3],[955,6],[962,3],[970,6],[977,3],[986,7],[1001,4],[1007,1],[1010,6],[1018,7],[1028,5],[1036,1],[1038,5],[1044,5],[1052,5],[1058,1],[1060,5],[1066,7],[1076,3],[1080,3],[1084,5],[1090,3],[1094,1],[1097,1],[1102,5],[1108,1],[1110,8],[1121,2],[1124,1],[1129,1],[1131,4],[1139,1],[1144,3],[1150,3],[1156,1],[1162,6],[1169,3],[1178,9],[1196,3],[1201,4],[1207,1],[1210,6],[1218,9],[1228,3],[1232,5],[1241,1],[1243,7],[1254,3],[1263,9],[1287,4],[1293,1],[1296,6],[1304,9],[1314,3],[1318,7],[1326,7],[1337,3],[1343,6],[1352,4],[1359,3],[1363,4],[1371,6],[1378,4],[1383,3],[1392,1],[1394,7],[1403,3],[1407,6],[1416,6],[1424,5],[1430,4],[1436,1],[1440,1],[1445,1],[1447,1],[1451,3],[1455,4],[1461,3],[1465,4],[1471,3],[1475,7]]},"582":{"position":[[0,7],[8,7],[16,6],[26,3],[32,11],[44,6],[57,10],[73,4],[78,10],[89,6],[98,4],[103,6],[110,6],[118,6],[125,6],[132,5],[138,4],[143,6],[150,6],[157,4],[162,6],[173,4],[178,13],[192,4],[197,6],[205,6],[213,6],[220,6],[229,10],[242,6],[250,10],[262,4],[268,4],[274,6],[282,6],[290,5],[297,4],[302,4],[307,6],[315,3],[321,6],[329,4],[334,4],[339,6],[354,4],[360,1],[363,10],[375,5],[383,5],[391,3],[395,6],[405,1],[408,8],[420,1],[424,1],[426,4],[432,2],[435,1],[437,3],[443,6],[450,3],[456,4],[462,1],[465,10],[477,4],[484,5],[492,3],[496,6],[506,1],[509,8],[521,1],[525,1],[527,4],[533,5],[539,1],[541,6],[549,6],[556,3],[562,4],[568,1],[571,10],[583,4],[590,6],[599,6],[606,1],[608,4],[615,4],[621,1],[624,10],[636,3],[644,3],[650,6],[659,4],[666,1],[668,6],[676,6],[683,4],[688,3],[697,1],[699,5],[706,3],[710,6],[720,1],[723,3],[729,1],[731,1],[735,1],[737,4],[743,3],[761,1],[763,6],[770,9],[780,6],[787,5],[794,4],[800,1],[802,4],[808,4],[815,3],[821,7],[830,3],[844,4],[850,1],[853,10],[865,3],[869,3],[873,6],[883,1],[885,5],[894,3]]},"584":{"position":[[0,7],[8,4],[13,6],[23,7],[33,11],[45,6],[54,11],[66,7],[76,4],[84,4],[89,4],[101,1],[110,6],[120,6],[127,9],[142,1],[150,6],[160,7],[168,13],[183,6],[192,6],[200,2],[203,3],[210,6],[217,15],[233,6],[242,3],[249,3],[255,5],[261,3],[271,1],[281,2],[284,3],[291,6],[298,8],[310,3],[317,3],[323,5],[329,3],[339,1],[349,3],[354,6],[364,7],[372,10],[383,7],[391,10],[405,5],[411,6],[420,2],[423,6],[430,9],[440,3],[448,1],[458,6],[465,3],[470,5],[477,11],[492,4],[497,5],[503,1],[507,4],[512,6],[523,1],[533,2],[536,3],[543,6],[550,7],[561,3],[568,3],[574,5],[580,3]]},"586":{"position":[[1,6],[9,8],[22,6],[30,3],[35,5],[42,11],[56,6],[64,5],[70,4],[75,6],[83,3],[89,5],[96,11],[110,6],[118,8]]},"588":{"position":[[3,4],[11,7],[56,6],[63,4],[85,5],[93,3],[97,3]]},"590":{"position":[[7,6],[18,7],[44,7],[59,9],[88,7],[107,4],[112,4],[117,9]]},"592":{"position":[[0,11],[14,1]]},"597":{"position":[[14,6],[21,6],[28,2],[31,4],[36,7],[44,9],[56,5],[64,5],[70,4],[77,5],[83,4],[90,6],[109,6],[116,3],[120,6],[128,6],[149,6],[156,6],[163,2],[169,5],[191,4],[196,5],[202,6],[211,2],[214,6],[221,4],[226,6],[233,4],[238,6],[245,7],[253,6],[275,6],[282,6],[289,2],[295,11],[321,4],[327,1],[330,6],[338,11],[350,3],[354,5],[362,3],[366,6],[376,1],[378,5],[384,5],[392,5],[398,1],[400,5],[406,7],[416,2],[419,3],[424,2],[430,1],[432,8],[441,3],[445,2],[450,2],[455,6],[462,3],[466,6],[473,3],[477,7],[488,6],[496,7],[504,3],[508,5]]},"599":{"position":[[2,6],[16,7],[24,3],[28,2],[34,7],[44,6],[55,4],[61,1],[64,10],[76,6],[83,3],[87,6],[95,6],[104,3],[108,6],[118,1],[121,3],[125,6],[132,6],[139,5],[147,1],[149,1],[153,1],[155,4],[161,3],[166,6],[173,3],[177,7],[188,1],[191,3],[195,6],[204,1],[206,1],[210,1],[212,4],[218,3]]},"601":{"position":[[0,6],[11,7],[22,4],[27,2],[33,1],[36,11],[58,11],[70,11],[82,6],[89,5],[96,4],[103,11],[117,2],[122,6],[131,4],[138,3],[144,7],[154,5],[161,3],[171,4],[176,5],[182,1],[186,4],[191,11]]},"603":{"position":[[1,6],[9,8],[22,6],[30,3],[35,5],[42,11],[56,6],[64,5],[70,4],[75,6],[83,3],[89,5],[96,11],[110,6],[118,3],[122,6],[129,6],[136,5],[143,5],[150,3],[156,6],[164,8]]},"605":{"position":[[0,11],[16,4],[21,9],[35,4],[40,9],[53,6],[60,5],[69,2]]},"609":{"position":[[7,6],[30,5],[36,9],[46,6],[53,2]]},"611":{"position":[[6,7],[26,7],[72,7],[100,7],[111,7]]},"613":{"position":[[9,7],[20,6],[27,6],[34,2],[40,5],[62,4],[67,5],[73,6],[82,2],[85,6],[92,4],[97,6],[104,4],[109,6],[116,7],[124,6],[141,7],[149,4],[154,6],[163,6],[182,6],[189,6],[196,2],[199,4],[205,1],[208,6],[216,6],[223,3],[227,7],[235,7],[246,3],[252,6],[261,4],[268,3],[272,4],[280,6],[287,4],[292,3],[301,1],[303,7],[312,3],[316,6],[325,6],[333,5],[339,4],[345,1],[349,1],[354,1],[356,1],[360,3],[364,4],[370,3],[374,4],[380,3],[384,7],[404,2],[407,3],[411,7],[422,3],[428,3],[432,7],[443,3],[447,7],[456,3],[462,1],[466,3],[470,7]]},"615":{"position":[[10,4],[16,1],[19,10],[31,3],[39,3],[45,6],[54,4],[61,1],[63,6],[71,6],[78,4],[83,3],[92,1],[94,5],[101,3],[105,6],[115,1],[118,3],[124,1],[126,1],[130,1],[132,4],[138,3],[156,7],[167,4],[172,4],[177,6],[185,1],[188,1],[190,6],[197,4],[202,6],[209,5],[216,4],[222,1],[224,4],[230,4],[237,3],[243,7],[252,3],[257,7],[266,7],[288,5],[299,7],[307,3],[311,6],[321,1],[324,3],[328,5],[334,4],[339,6],[348,1],[350,1],[354,1],[356,4],[364,5],[379,7],[387,3],[391,2],[397,7],[407,6],[418,4],[424,1],[427,10],[439,6],[446,3],[450,6],[458,6],[467,3],[471,6],[481,1],[484,3],[488,6],[495,6],[502,5],[510,1],[512,1],[516,1],[518,4],[524,3],[529,6],[536,3],[540,7],[551,1],[554,3],[558,6],[567,1],[569,1],[573,1],[575,4],[581,3]]},"617":{"position":[[0,10],[12,6],[20,6],[28,8],[41,6],[49,3],[54,5],[61,11],[75,6],[83,5],[89,4],[94,6],[102,3],[108,5],[115,11],[129,6],[137,3],[141,5],[147,4],[152,6],[160,3],[165,5],[172,11],[186,6],[194,4],[199,5],[205,2],[208,6],[216,5],[223,3],[229,6],[237,3],[241,6],[248,6],[255,5],[262,5],[269,3],[275,6],[283,8]]},"619":{"position":[[10,6],[17,5]]},"621":{"position":[[6,6],[13,5]]},"623":{"position":[[32,2],[37,9],[101,4],[106,8],[216,8],[230,4],[235,8],[244,9],[256,4],[261,7],[269,6],[277,5],[293,13],[314,4],[319,13],[333,6],[342,4],[348,1],[350,13],[365,4],[370,7],[378,6],[386,5],[394,3],[398,6],[415,1],[417,1],[421,7],[430,6],[437,3],[446,11],[465,4],[470,11],[482,6],[491,4],[497,1],[499,11],[512,4],[517,7],[525,6],[533,5],[541,3],[545,6],[562,1],[564,1],[568,7],[577,6],[584,3],[602,19],[627,4],[632,19],[652,6],[661,8],[670,8],[681,4],[686,22],[709,8],[718,8],[729,19],[751,6],[759,19],[779,8],[789,8],[801,4],[807,1],[810,19],[831,12],[844,7],[852,6],[875,7],[886,3],[890,7],[903,1],[911,7],[920,1],[924,1],[926,8],[935,4],[940,7],[957,4],[962,4],[985,13],[1002,13],[1018,7],[1029,22],[1052,13],[1067,7],[1075,12],[1089,5],[1117,11],[1132,11],[1146,7],[1156,22],[1179,11],[1192,7],[1200,12],[1214,5],[1241,11],[1259,4],[1264,11],[1276,6],[1285,4],[1291,1],[1293,11],[1306,9],[1316,7],[1324,6],[1332,5],[1340,3],[1344,6],[1359,1],[1361,1],[1365,7],[1374,6],[1381,3],[1400,14],[1421,4],[1426,14],[1441,6],[1450,11],[1462,11],[1476,4],[1482,1],[1485,14],[1501,12],[1514,7],[1522,6],[1545,7],[1556,3],[1560,7],[1573,1],[1581,7],[1590,1],[1594,1],[1596,11],[1608,9],[1618,7],[1635,4],[1640,4],[1649,9],[1662,14],[1677,11],[1690,11],[1705,9],[1715,12],[1729,5],[1754,14]]},"625":{"position":[[34,2],[39,9],[58,4],[63,17],[81,6],[91,15],[117,6],[124,6]]},"627":{"position":[[48,7],[59,2],[62,6],[70,18],[70,10],[81,7]]},"629":{"position":[[12,4],[17,8],[40,8],[49,7]]},"631":{"position":[[16,9],[28,2],[34,6],[60,7],[78,6],[86,3],[90,1],[95,1],[98,1],[102,7],[110,6],[120,1],[126,2],[129,10],[140,15]]},"633":{"position":[[32,18],[57,2],[65,4],[70,18],[89,6],[98,9],[108,6],[123,9],[133,4],[138,4]]},"635":{"position":[[12,3],[16,7],[34,7],[51,4],[57,1],[60,15],[77,11],[89,5],[97,6],[105,5],[113,3],[121,18],[145,8],[155,4],[160,4],[165,5],[172,1],[176,6],[185,4],[190,1],[192,13],[209,3],[214,6],[223,3],[227,8],[236,4],[243,4],[248,5],[254,1],[258,4],[263,6],[272,6],[279,6],[286,3],[291,6],[298,7]]},"637":{"position":[[0,7],[8,4],[13,6],[23,3],[29,4],[40,15],[56,7],[64,1],[66,3],[70,2],[73,5],[79,3],[83,9],[93,7],[101,7],[109,8],[118,4],[123,15],[139,6],[148,5],[156,6],[163,13],[177,4],[183,18],[202,12],[215,4],[220,6],[234,18],[253,10],[264,1],[266,7],[274,2],[277,6],[284,3],[288,5],[294,4],[299,18],[318,6],[327,8],[338,6],[345,8],[354,4],[359,5],[370,18],[389,7],[397,3],[401,6],[408,1],[410,3],[414,15],[430,4],[435,18],[457,15],[475,3],[483,15],[500,5],[509,6],[519,13],[534,4],[539,4],[545,18],[566,12],[580,4],[585,4],[590,6],[603,2],[606,3],[610,15],[628,6],[635,3],[644,11],[656,6],[663,7],[671,3],[675,5],[681,2],[684,7],[692,1],[694,7],[702,7],[710,3],[714,7],[722,4],[728,1],[731,15],[748,11],[760,8],[771,6],[779,5],[787,3],[795,18],[815,8],[825,8],[835,8],[845,4],[850,4],[855,5],[862,1],[869,8],[878,2],[881,5],[887,8],[898,1],[900,13],[917,3],[921,6],[930,3],[934,8],[948,8],[957,10],[968,5],[974,3],[978,10],[989,4],[995,1],[998,15],[1015,8],[1028,5],[1034,1],[1036,12],[1055,15],[1071,7],[1079,8],[1088,8],[1097,2],[1100,1],[1102,6],[1109,4],[1114,6],[1121,4],[1127,1],[1130,15],[1147,15],[1167,3],[1173,6],[1182,4],[1187,3],[1196,1],[1198,13],[1213,1],[1215,5],[1223,3],[1227,8],[1236,3],[1240,7],[1249,7],[1257,5],[1266,1],[1268,5],[1275,3],[1279,8],[1291,3],[1295,4],[1302,1],[1304,12],[1318,3],[1322,7],[1331,8],[1340,4],[1345,10],[1358,6],[1371,4],[1376,4],[1388,6],[1395,3],[1399,5],[1405,3],[1409,10],[1420,10],[1434,18],[1455,5],[1461,10],[1472,8],[1486,8],[1495,4],[1500,7],[1508,2],[1511,4],[1520,4],[1525,5],[1531,3],[1537,4],[1542,11],[1555,2],[1558,3],[1565,10],[1576,11],[1590,6],[1598,1],[1603,1],[1608,1],[1614,3],[1621,3],[1627,3],[1631,7],[1640,5],[1646,8],[1655,5],[1664,3],[1675,2],[1678,4],[1687,4],[1692,5],[1698,1],[1702,4],[1707,6],[1715,2],[1718,3],[1725,10],[1736,11],[1750,6],[1758,1],[1763,1],[1768,1],[1774,3],[1781,3],[1787,3],[1791,7],[1800,5],[1806,8],[1815,5],[1824,3],[1838,4],[1843,4],[1848,3],[1852,3],[1856,7],[1864,2],[1867,7],[1875,4],[1880,5],[1886,1],[1890,4],[1895,6],[1919,7],[1948,10],[1978,7],[2006,12],[2039,7],[2047,4],[2052,6],[2062,7],[2072,6],[2081,3],[2087,4],[2094,4],[2105,7],[2113,10],[2124,1],[2126,10],[2137,2],[2140,5],[2146,4],[2151,8],[2160,4],[2165,7],[2173,6],[2182,5],[2190,6],[2197,7],[2205,3],[2212,5],[2218,7],[2226,4],[2231,4],[2236,8],[2245,4],[2250,4],[2258,4],[2263,6],[2270,9],[2285,15],[2301,12],[2314,1],[2316,5],[2322,6],[2329,9],[2339,4],[2344,15],[2360,6],[2369,8],[2380,6],[2387,8],[2396,4],[2401,5],[2407,9],[2417,6],[2427,3],[2431,7],[2439,9],[2449,4],[2454,4],[2462,3],[2466,8],[2480,17],[2498,10],[2509,10],[2520,8],[2529,4],[2534,17],[2552,6],[2561,18],[2580,3],[2587,6],[2594,4],[2599,3],[2603,8],[2612,14],[2627,4],[2632,8],[2644,7],[2652,3],[2656,4],[2661,7],[2669,16],[2686,4],[2694,6],[2702,8],[2711,5],[2717,6],[2724,8],[2738,10],[2749,7],[2757,4],[2762,4],[2767,4],[2772,6],[2779,4],[2784,10],[2795,4],[2800,10],[2811,6],[2820,14],[2835,7],[2843,7],[2851,17],[2869,11],[2881,4],[2887,15],[2903,9],[2913,4],[2918,4],[2923,7],[2934,3],[2938,7],[2946,3],[2950,4],[2955,4],[2960,7],[2968,11],[2980,4],[2985,4],[2995,7],[3003,7],[3011,7],[3019,3],[3023,6],[3030,10],[3041,8],[3050,4],[3055,6],[3064,12],[3077,4],[3082,4],[3087,6],[3094,4],[3099,9],[3114,13],[3128,7],[3136,1],[3138,10],[3149,10],[3160,8],[3169,4],[3174,13],[3188,4],[3193,17],[3213,10],[3226,2],[3229,4],[3234,18],[3256,1],[3260,4],[3265,18],[3286,2],[3291,2],[3294,4],[3299,14],[3317,1],[3321,4],[3326,14],[3343,1],[3347,4],[3352,6],[3361,6],[3369,10],[3381,14],[3397,7],[3405,7],[3414,1],[3418,7],[3427,4],[3433,11],[3446,4],[3451,4],[3457,15],[3474,4],[3479,18],[3500,9],[3511,4],[3516,4],[3521,4],[3526,7],[3536,11],[3549,4],[3554,4],[3559,4],[3568,8],[3578,4],[3583,4],[3588,6],[3606,3],[3610,6],[3617,3],[3621,10],[3632,1],[3634,10],[3645,4],[3650,4],[3656,1],[3659,10],[3671,3],[3679,1],[3681,6],[3688,3],[3692,1],[3695,5],[3701,1],[3703,6],[3710,4],[3717,3],[3723,6],[3732,4],[3737,3],[3746,1],[3748,11],[3761,1],[3763,14],[3778,3],[3783,4],[3788,8],[3802,1],[3804,9],[3815,1],[3817,14],[3832,8],[3842,4],[3847,3],[3856,1],[3858,11],[3871,3],[3880,7],[3888,9],[3898,8],[3907,4],[3914,1],[3916,8],[3926,6],[3939,4],[3945,1],[3948,10],[3960,14],[3975,3],[3980,15],[3999,5],[4005,5],[4011,3],[4015,8],[4028,6],[4036,5],[4042,3],[4046,10],[4057,4],[4062,2],[4065,1],[4067,7],[4075,16],[4097,8],[4106,5],[4112,6],[4119,8],[4130,1],[4132,14],[4149,7],[4158,5],[4165,3],[4169,8],[4179,7],[4188,1],[4190,14],[4205,7],[4215,1],[4218,8],[4228,4],[4233,3],[4242,3],[4246,6],[4254,7],[4262,5],[4269,1],[4271,1],[4276,1],[4278,1],[4282,1],[4284,14],[4299,7],[4308,1],[4310,14],[4325,5],[4332,3],[4336,8],[4348,3],[4354,4],[4360,1],[4363,10],[4375,14],[4390,8],[4399,4],[4404,7],[4415,8],[4427,1],[4429,14],[4444,5],[4450,8],[4465,8],[4474,7],[4482,3],[4486,4],[4491,3],[4495,4],[4500,7],[4508,7],[4516,4],[4522,1],[4525,10],[4537,8],[4546,3],[4550,7],[4558,7],[4567,5],[4575,6],[4583,5],[4591,3],[4599,15],[4616,8],[4626,5],[4633,8],[4643,4],[4648,4],[4653,5],[4661,9],[4672,3],[4676,7],[4685,3],[4690,1],[4694,4],[4699,3],[4705,8],[4718,9],[4729,4],[4734,3],[4743,6],[4752,4],[4757,1],[4759,11],[4774,3],[4779,6],[4788,4],[4793,3],[4802,3],[4806,8],[4816,6],[4823,3],[4827,4],[4834,3],[4838,4],[4846,6],[4853,3],[4857,3],[4865,4],[4872,1],[4874,8],[4884,6],[4891,6],[4898,3],[4903,10],[4914,2],[4917,8],[4926,4],[4933,4],[4940,3],[4944,4],[4952,6],[4959,3],[4963,3],[4976,8],[4985,6],[4992,9],[5002,3],[5006,7],[5014,4],[5019,3],[5023,4],[5029,1],[5032,10],[5044,8],[5053,3],[5057,7],[5065,7],[5075,7],[5084,5],[5093,8],[5105,4],[5110,4],[5115,7],[5124,6],[5133,4],[5138,1],[5140,9],[5153,8],[5163,6],[5172,4],[5177,5],[5188,8],[5198,6],[5205,5],[5212,3],[5216,4],[5223,3],[5227,4],[5235,6],[5242,7],[5253,3],[5257,3],[5265,4],[5272,1],[5274,8],[5284,6],[5291,7],[5302,6],[5309,3],[5314,10],[5325,2],[5328,8],[5337,4],[5344,4],[5351,3],[5355,4],[5363,6],[5370,7],[5381,3],[5385,3],[5398,4],[5403,10],[5414,5],[5420,4],[5425,3],[5429,10],[5440,4],[5446,1],[5449,10],[5461,4],[5470,1],[5472,12],[5485,2],[5488,4],[5497,5],[5503,1],[5505,8],[5515,1],[5517,6],[5524,4],[5531,5],[5537,1],[5539,11],[5552,5],[5558,1],[5560,9],[5571,5],[5577,1],[5579,11],[5592,3],[5596,7],[5605,10],[5616,7],[5624,10],[5645,14],[5660,8],[5669,9],[5679,5],[5685,3],[5689,6],[5696,10],[5707,4],[5713,1],[5716,10],[5728,14],[5743,3],[5747,7],[5755,7],[5764,3],[5768,4],[5776,5],[5784,6],[5793,4],[5798,1],[5800,11],[5815,3],[5820,6],[5827,3],[5831,4],[5838,1],[5840,8],[5850,6],[5857,6],[5864,3],[5869,10],[5880,2],[5883,8],[5892,4],[5899,4],[5906,3],[5910,4],[5918,6],[5925,3],[5929,3],[5939,4],[5944,4],[5956,12],[5969,7],[5977,4],[5985,17],[6004,18],[6024,2],[6028,14],[6044,1],[6048,4],[6053,6],[6061,16],[6079,5],[6089,5],[6095,2],[6098,7],[6106,2],[6109,6],[6118,10],[6132,13],[6146,4],[6152,2],[6155,10],[6166,3],[6175,7],[6183,5],[6189,4],[6194,7],[6202,3],[6207,6],[6217,7],[6225,11],[6237,7],[6245,10],[6259,1],[6261,4],[6266,6],[6274,5],[6280,6],[6292,3],[6296,5],[6302,3],[6309,10],[6320,8],[6329,3],[6336,6],[6344,1],[6349,1],[6354,1],[6359,2],[6362,3],[6369,3],[6375,3],[6379,7],[6388,5],[6394,7],[6402,5],[6411,3],[6421,3],[6425,5],[6431,5],[6438,3],[6445,10],[6456,8],[6465,3],[6470,2],[6473,3],[6480,3],[6486,3],[6490,7],[6499,5],[6505,7],[6513,5],[6522,3],[6529,4],[6536,3],[6540,6],[6548,7],[6556,5],[6563,1],[6565,1],[6570,1],[6572,1],[6576,5],[6582,7],[6591,5],[6597,5],[6609,7],[6617,6],[6624,7],[6632,10],[6643,14],[6658,3],[6663,4],[6672,3],[6676,7],[6685,9],[6695,6],[6702,7],[6715,10],[6726,4],[6735,8],[6744,4],[6749,8],[6759,5],[6765,7],[6773,6],[6780,4],[6785,10],[6796,3],[6800,10],[6811,8],[6820,5],[6826,6],[6833,3],[6837,6],[6844,8],[6853,12],[6866,7],[6875,17],[6893,6],[6900,6],[6907,7],[6915,4],[6920,7],[6928,8],[6937,6],[6944,8],[6953,4],[6958,10],[6969,8],[6978,13],[6992,8],[7002,8],[7011,8],[7020,3],[7024,8],[7034,11],[7047,3],[7051,7],[7060,9],[7071,8],[7080,6],[7087,2],[7090,9],[7100,5],[7106,7],[7114,7],[7123,3],[7127,10],[7138,7],[7146,7],[7154,3],[7158,8],[7167,12],[7180,6],[7187,11],[7199,4],[7204,6],[7211,2],[7214,12],[7227,9],[7237,6],[7245,14],[7260,6],[7267,3],[7271,6],[7278,6],[7285,13],[7299,7],[7307,7],[7315,7],[7323,7],[7331,8],[7340,8],[7350,4],[7355,4],[7360,7],[7368,4],[7373,6],[7380,8],[7389,4],[7394,9],[7404,3],[7408,6],[7415,9],[7425,7],[7433,6],[7440,4],[7445,7],[7454,5],[7460,4],[7465,8],[7474,6],[7481,3],[7485,7],[7493,2],[7496,6],[7503,6],[7510,2],[7513,8],[7522,5],[7528,7],[7536,7],[7545,5],[7551,7],[7559,3],[7563,3],[7567,9],[7577,10],[7588,3],[7592,3],[7596,10],[7616,7],[7624,4],[7629,6],[7639,7],[7649,6],[7658,3],[7664,4],[7671,4],[7682,7],[7690,7],[7698,3],[7702,9],[7712,3],[7716,8],[7725,4],[7730,9],[7740,4],[7745,7],[7753,9],[7765,7],[7773,3],[7777,7],[7785,7],[7794,5],[7805,14],[7820,9],[7830,8],[7839,4],[7844,14],[7859,6],[7868,8],[7877,4],[7882,7],[7890,8],[7899,4],[7904,6],[7913,2],[7916,4],[7921,9],[7936,17],[7954,7],[7962,1],[7964,3],[7968,7],[7976,4],[7981,9],[7991,5],[7997,4],[8002,4],[8007,17],[8025,9],[8035,3],[8041,14],[8058,6],[8066,14],[8082,8],[8092,4],[8097,4],[8102,7],[8111,9],[8123,8],[8133,4],[8138,4],[8143,6],[8161,5],[8167,6],[8174,10],[8185,8],[8194,4],[8200,1],[8203,14],[8219,5],[8229,1],[8231,2],[8234,3],[8238,1],[8241,2],[8244,4],[8253,5],[8259,1],[8261,2],[8264,4],[8271,3],[8277,6],[8286,4],[8291,3],[8300,1],[8302,8],[8312,3],[8317,6],[8327,7],[8335,11],[8347,7],[8355,10],[8369,1],[8371,4],[8376,6],[8384,3],[8391,3],[8395,7],[8403,3],[8408,6],[8417,2],[8420,3],[8427,3],[8433,3],[8437,6],[8445,7],[8453,9],[8463,6],[8472,1],[8474,1],[8478,3],[8485,4],[8492,1],[8494,8],[8504,6],[8524,6],[8531,5],[8537,1],[8539,7],[8547,3],[8551,9],[8561,4],[8567,1],[8570,14],[8586,6],[8593,3],[8597,7],[8605,7],[8614,3],[8618,7],[8627,5],[8635,6],[8644,4],[8649,1],[8651,8],[8663,3],[8668,6],[8675,3],[8679,4],[8686,1],[8688,8],[8698,6],[8705,6],[8712,3],[8717,7],[8725,2],[8728,8],[8737,4],[8744,4],[8751,3],[8755,4],[8763,6],[8770,3],[8774,3],[8787,4],[8792,10],[8803,5],[8809,4],[8814,3],[8818,7],[8826,4],[8832,1],[8835,14],[8851,4],[8860,5],[8866,1],[8868,8],[8878,1],[8880,2],[8883,4],[8890,5],[8896,1],[8898,8],[8917,8],[8926,8],[8942,15],[8958,10],[8969,7],[8977,3],[8981,4],[8986,7],[8994,4],[8999,15],[9015,6],[9024,10],[9036,10],[9047,8],[9058,6],[9067,4],[9073,1],[9076,15],[9093,7],[9101,3],[9105,7],[9113,7],[9122,5],[9130,6],[9137,1],[9139,10],[9150,8],[9159,3],[9164,1],[9166,8],[9181,15],[9197,10],[9208,7],[9216,3],[9220,4],[9225,7],[9233,4],[9238,15],[9254,6],[9263,10],[9275,10],[9286,10],[9297,4],[9304,7],[9314,4],[9320,1],[9323,15],[9340,7],[9348,3],[9352,7],[9360,7],[9369,5],[9377,5],[9384,3],[9391,1],[9393,10],[9404,8],[9413,3],[9418,2],[9421,3],[9428,3],[9434,6],[9441,3],[9447,1],[9449,10],[9463,5],[9469,6],[9476,3],[9489,10],[9500,14],[9519,4],[9524,7],[9532,6],[9541,5],[9549,6],[9556,7],[9564,3],[9568,8],[9577,4],[9582,4],[9589,4],[9594,10],[9605,6],[9614,2],[9617,4],[9622,5],[9628,11],[9640,7],[9650,4],[9656,1],[9659,10],[9671,8],[9680,3],[9684,7],[9692,7],[9701,5],[9709,6],[9717,5],[9725,1],[9727,2],[9730,4],[9737,5],[9743,1],[9745,2],[9748,6],[9757,6],[9766,4],[9773,3],[9777,4],[9785,6],[9792,3],[9796,3],[9802,7],[9811,1],[9813,11],[9827,7],[9836,5],[9843,5],[9850,7],[9859,1],[9861,11],[9873,7],[9883,1],[9886,8],[9896,4],[9901,3],[9910,3],[9914,6],[9922,5],[9928,7],[9936,2],[9939,7],[9948,1],[9950,1],[9954,1],[9956,11],[9968,7],[9977,6],[9984,3],[9992,4],[9998,1],[10001,10],[10013,8],[10022,3],[10026,7],[10034,7],[10044,7],[10053,5],[10062,1],[10064,2],[10067,4],[10074,5],[10080,1],[10082,2],[10085,6],[10094,6],[10103,4],[10110,3],[10114,4],[10122,6],[10129,7],[10140,3],[10144,3],[10150,7],[10159,6],[10166,1],[10168,11],[10181,3],[10196,5],[10202,7],[10214,4],[10219,4],[10231,6],[10238,10],[10249,7],[10260,17],[10278,2],[10282,10],[10297,10],[10309,11],[10322,7],[10330,7],[10339,1],[10348,5],[10354,7],[10362,9],[10372,7],[10380,5],[10388,5],[10394,7],[10402,4],[10412,6],[10419,8],[10428,3],[10435,7],[10443,10],[10459,3],[10463,5],[10469,7],[10477,6],[10488,15],[10505,10],[10517,10],[10529,8],[10541,6],[10549,1],[10554,1],[10559,1],[10566,7],[10574,6],[10581,3],[10586,6],[10597,3],[10601,5],[10607,7],[10615,10],[10629,4],[10634,4],[10639,7],[10648,1],[10651,6],[10662,15],[10679,10],[10691,10],[10703,10],[10715,10],[10729,7],[10737,6],[10744,3],[10749,6],[10760,4],[10765,3],[10769,6],[10776,6],[10785,4],[10790,5],[10801,10],[10813,3],[10817,6],[10825,7],[10833,5],[10841,1],[10843,1],[10847,5],[10853,5],[10860,4],[10867,4],[10872,5],[10878,1],[10882,4],[10887,6],[10896,3],[10900,7],[10909,7],[10917,7],[10925,3],[10929,5],[10941,3],[10945,7],[10953,7],[10961,7],[10969,2],[10972,1],[10974,10],[10985,6],[10992,7],[11000,4],[11005,12],[11018,8],[11027,2],[11030,7],[11039,8],[11048,3],[11052,16],[11069,2],[11072,7],[11080,4],[11085,9],[11095,8],[11105,7],[11113,2],[11116,8],[11126,3],[11130,7],[11138,3],[11142,8],[11151,10],[11163,4],[11168,1],[11170,3],[11174,2],[11177,9],[11187,2],[11190,2],[11193,4],[11198,10],[11210,4],[11215,10],[11226,7],[11234,9],[11245,7],[11253,3],[11257,9],[11267,8],[11276,8],[11285,8],[11295,11],[11307,8],[11316,7],[11324,3],[11328,10],[11339,7],[11348,8],[11357,3],[11361,8],[11370,8],[11379,8],[11389,5],[11395,3],[11399,2],[11402,7],[11410,3],[11414,10],[11425,3],[11429,8],[11438,7],[11446,9],[11457,4],[11462,7],[11470,9],[11482,7],[11490,3],[11494,7],[11502,7],[11511,5],[11519,8],[11528,8],[11538,4],[11543,7],[11551,12],[11564,3],[11568,10],[11579,6],[11586,3],[11590,9],[11600,8],[11609,3],[11613,2],[11616,10],[11627,12],[11640,3],[11644,11],[11656,7],[11664,7],[11672,7],[11681,7],[11689,1],[11691,5],[11697,2],[11700,8],[11709,9],[11719,8],[11728,12],[11741,2],[11744,1],[11746,9],[11756,8],[11765,8],[11774,8],[11783,8],[11793,10],[11805,9],[11815,7],[11823,8],[11832,4],[11837,9],[11847,13],[11862,4],[11867,2],[11870,3],[11874,3],[11878,7],[11886,5],[11892,13],[11907,8],[11916,3],[11920,2],[11923,8],[11932,4],[11937,6],[11944,4],[11949,4],[11955,3],[11959,2],[11962,8],[11971,2],[11974,7],[11982,7],[11990,7],[11998,8],[12007,10],[12018,7],[12026,10],[12038,4],[12043,17],[12061,4],[12066,7],[12075,7],[12083,4],[12088,17],[12106,4],[12111,7],[12120,7],[12130,6],[12138,13],[12152,4],[12160,11],[12172,7],[12181,4],[12186,18],[12205,6],[12214,8],[12225,7],[12235,4],[12241,1],[12244,18],[12264,7],[12272,3],[12276,7],[12284,7],[12293,5],[12304,7],[12312,3],[12316,2],[12319,7],[12329,8],[12338,8],[12348,4],[12353,15],[12369,6],[12378,7],[12386,8],[12395,3],[12404,3],[12408,8],[12417,5],[12423,7],[12431,2],[12434,7]]},"639":{"position":[[16,3],[20,11],[34,6],[41,4],[46,11],[58,5],[66,6],[76,11],[90,5]]},"641":{"position":[[0,6],[7,5],[27,5],[77,2],[82,7],[92,9],[106,6],[113,5]]},"647":{"position":[[9,5],[17,4],[22,7],[30,4],[35,5],[41,7],[56,5],[65,6],[72,6],[79,2],[85,5],[100,4],[105,5],[111,6],[120,4],[125,3],[132,1],[140,1],[147,7],[155,6],[170,4],[175,6],[195,5],[217,4],[222,5],[228,6],[237,2],[240,6],[247,4],[252,6],[259,4],[264,6],[271,7],[279,6],[299,4],[304,5],[319,7],[327,4],[332,5],[349,9],[359,3],[370,6],[395,5],[404,6],[411,6],[418,2],[424,7],[457,6],[471,4],[476,7],[484,9],[496,5],[504,5],[510,4],[517,5],[523,4],[530,6],[537,6],[544,5],[551,5],[559,6],[579,6],[623,9],[635,6],[642,4],[648,1],[651,6],[659,6],[666,3],[670,7],[678,7],[689,3],[695,6],[704,4],[711,3],[715,4],[723,6],[730,4],[735,3],[744,1],[746,7],[755,3],[759,6],[768,6],[776,5],[782,4],[788,1],[794,1],[796,1],[800,3],[804,4],[810,3],[814,7],[830,6],[840,2],[843,3],[847,2],[858,2],[861,3],[865,7],[876,3],[882,3],[886,7],[897,5],[903,4],[909,1],[912,7],[922,7],[930,2],[933,6],[942,4],[949,2],[956,8],[978,1],[980,2],[983,5],[991,3],[996,2],[1002,1],[1004,8],[1013,3],[1017,2],[1021,1],[1023,2],[1026,7],[1036,2],[1040,2],[1045,2],[1048,3],[1052,7],[1063,3],[1069,3],[1073,7],[1084,5],[1090,4],[1096,3],[1101,7],[1111,7],[1119,3],[1123,5],[1131,4],[1143,8],[1170,2],[1173,4],[1178,1],[1180,7],[1189,1],[1191,5],[1200,6],[1210,1],[1212,6],[1219,1],[1222,2],[1225,1],[1227,7],[1238,3],[1244,6],[1253,4],[1258,1],[1260,7],[1271,6],[1279,4],[1286,4],[1291,5],[1297,4],[1302,8],[1311,1],[1313,9],[1326,4],[1331,11],[1345,1],[1347,7],[1358,5],[1364,4],[1370,3],[1375,7],[1385,7],[1395,4],[1411,3],[1416,3]]},"649":{"position":[[2,5],[12,4],[26,4],[32,1],[35,10],[47,3],[55,3],[59,5],[67,1],[69,3],[75,5],[83,6],[92,4],[99,1],[101,6],[109,6],[116,4],[121,3],[130,1],[132,5],[139,3],[143,6],[153,1],[156,3],[162,1],[164,1],[168,1],[170,4],[176,3],[194,7],[205,4],[210,4],[215,6],[222,5],[229,1],[232,2],[235,5],[241,1],[246,1],[250,1],[252,6],[259,4],[264,6],[271,5],[278,4],[284,1],[286,4],[292,4],[299,3],[305,7],[314,3],[319,7],[328,7],[337,9],[348,4],[359,4],[366,1],[368,6],[375,4],[380,6],[387,5],[394,4],[400,1],[402,4],[408,4],[415,3],[421,2],[426,4],[433,7],[442,3],[447,7],[456,7],[465,9],[476,4],[497,5],[508,7],[516,3],[520,6],[530,1],[533,3],[537,5],[543,4],[548,6],[557,1],[559,1],[563,1],[565,4],[573,5],[579,7]]},"651":{"position":[[0,4],[6,1],[9,11],[22,6],[29,3],[33,6],[40,5],[47,6],[54,5],[62,6],[69,6],[76,5],[82,4],[88,1],[91,7],[101,4],[106,7],[114,7],[124,4],[130,3],[134,7],[143,4],[149,1],[153,1],[157,3],[161,4],[167,3],[171,7]]},"653":{"position":[[0,10],[12,6],[29,10],[41,4],[47,6],[55,8],[68,4],[74,8],[87,6],[95,3],[100,5],[107,11],[121,6],[129,5],[135,4],[140,6],[150,5],[157,11],[171,6],[179,3],[183,5],[189,4],[194,6],[202,7],[210,2],[213,6],[221,6],[229,3],[234,5],[241,4],[248,6],[256,5],[262,4],[267,6],[277,5],[284,4],[295,11],[311,6],[319,3],[323,5],[329,4],[334,6],[342,4],[347,7],[355,7],[364,6],[372,4],[377,5],[383,2],[386,6],[394,5],[401,3],[407,6],[415,3],[419,6],[426,6],[433,5],[440,5],[447,3],[453,6],[461,8],[474,4],[480,8]]},"659":{"position":[[16,6],[23,7],[31,2],[37,12],[60,4],[65,12],[78,3],[87,4],[104,5],[112,7],[120,12],[135,4],[140,7],[148,7],[161,12],[174,6],[183,4],[189,1],[191,12],[205,6],[214,6],[261,6],[273,6],[281,7],[292,7],[303,7],[313,1],[321,11],[344,4],[349,11],[361,6],[370,3],[374,7],[382,5],[388,12],[413,6],[420,6],[427,2],[430,4],[436,1],[439,11],[452,12],[465,4],[470,6],[478,5],[486,1],[488,2],[491,4],[498,5],[504,1],[506,2],[509,6],[518,4],[524,2],[530,1],[532,8],[541,4],[547,2],[551,2],[556,6],[563,6],[570,3],[575,7],[583,3],[587,10],[602,2],[605,4],[610,5],[619,7],[629,6],[636,6],[643,3],[648,7],[656,7],[664,7],[676,2],[679,3],[686,4],[691,3],[695,5],[704,3],[711,3],[717,6],[724,3],[730,4],[735,5],[743,7],[751,3],[755,7],[764,7],[775,4],[780,3],[784,4],[792,6],[799,3],[805,4],[811,1],[814,11],[827,11],[839,4],[844,6],[852,5],[860,1],[862,2],[865,4],[872,5],[878,1],[880,2],[883,6],[892,4],[898,2],[904,1],[906,8],[915,4],[921,2],[925,2],[930,6],[937,6],[944,3],[949,7],[957,3],[961,10],[976,2],[979,4],[984,5],[993,7],[1003,6],[1010,6],[1017,3],[1022,7],[1030,7],[1038,7],[1050,2],[1053,3],[1060,4],[1065,3],[1069,4],[1077,3],[1084,3],[1090,6],[1097,3],[1103,4],[1108,5],[1116,7],[1124,3],[1128,7],[1137,7],[1148,4],[1153,3],[1157,4],[1165,6],[1172,3],[1178,6],[1211,6],[1255,9],[1267,6],[1274,4],[1280,1],[1283,11],[1296,6],[1303,3],[1307,7],[1315,7],[1326,3],[1332,6],[1341,4],[1348,3],[1352,4],[1360,6],[1367,4],[1372,3],[1381,1],[1383,7],[1392,3],[1396,6],[1405,11],[1418,5],[1424,4],[1430,1],[1436,1],[1438,1],[1442,3],[1446,4],[1452,3],[1456,7],[1472,11],[1487,2],[1490,3],[1494,2],[1505,2],[1508,3],[1512,7],[1523,3],[1529,3],[1533,7],[1544,5],[1550,4],[1556,1],[1559,7],[1569,7],[1577,2],[1580,6],[1589,4],[1596,2],[1603,8],[1625,1],[1627,2],[1630,5],[1638,4],[1644,2],[1650,1],[1652,8],[1661,3],[1665,2],[1669,1],[1671,2],[1674,7],[1684,2],[1688,2],[1694,4],[1699,5],[1708,7],[1718,2],[1721,3],[1725,7],[1736,3],[1742,3],[1746,7],[1757,5],[1763,4],[1769,3],[1774,7],[1784,7],[1792,11],[1806,4],[1818,8],[1845,2],[1848,4],[1853,1],[1855,7],[1864,1],[1866,5],[1875,6],[1885,1],[1887,6],[1894,1],[1897,2],[1900,1],[1902,7],[1913,3],[1919,6],[1928,4],[1933,1],[1935,7],[1946,6],[1954,4],[1961,4],[1966,5],[1972,4],[1977,8],[1986,1],[1988,9],[2001,4],[2006,11],[2020,1],[2022,7],[2033,5],[2039,4],[2045,3],[2050,7],[2060,7],[2070,4],[2086,4],[2091,3],[2096,3]]},"661":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[62,6],[70,8],[83,4],[89,8],[102,6],[110,3],[115,5],[122,11],[136,11],[149,5],[155,4],[160,6],[170,5],[177,11],[191,6],[199,3],[203,5],[209,4],[214,6],[222,7],[230,2],[233,6],[241,6],[249,3],[254,5],[261,4],[268,11],[281,5],[287,4],[292,6],[302,5],[309,4],[316,6],[324,3],[328,5],[334,4],[339,6],[347,4],[352,7],[360,7],[369,11],[382,4],[387,5],[393,2],[396,7],[405,5],[412,3],[418,3],[422,3],[426,5],[432,7],[443,6],[451,8],[464,4],[470,8]]},"667":{"position":[[21,6],[28,7],[36,2],[42,7],[75,6],[89,4],[94,7],[102,9],[114,5],[122,5],[128,4],[135,5],[141,4],[148,6],[155,6],[162,5],[169,5],[178,12],[200,12],[217,6],[237,11],[260,4],[265,11],[277,6],[286,3],[290,7],[298,5],[304,12],[336,3],[340,12],[353,4],[360,6],[371,8],[381,4],[389,6],[396,6],[403,2],[409,8],[430,15],[448,8],[457,4],[463,1],[466,11],[479,8],[488,3],[492,7],[501,5],[509,1],[511,2],[514,4],[521,5],[527,1],[529,2],[532,6],[541,4],[549,3],[553,4],[560,2],[563,1],[566,2],[572,1],[574,8],[583,4],[590,2],[595,6],[602,6],[609,3],[614,7],[622,7],[630,10],[645,1],[647,8],[656,4],[665,11],[678,3],[683,3],[688,5],[695,7],[704,4],[710,3],[714,12],[732,3],[736,7],[745,10],[759,3],[763,4],[771,6],[778,3],[803,6],[810,6],[817,2],[820,4],[826,1],[829,11],[842,8],[856,6],[864,5],[873,1],[875,2],[878,5],[886,5],[892,1],[894,2],[897,7],[907,7],[918,4],[923,3],[927,6],[934,4],[940,4],[948,4],[953,3],[957,6],[964,4],[970,6],[982,6],[991,3],[995,5],[1001,4],[1006,6],[1014,5],[1020,5],[1028,4],[1033,4],[1038,6],[1046,5],[1054,2],[1057,4],[1062,4],[1070,6],[1077,3],[1081,6],[1089,8],[1098,10],[1109,2],[1113,1],[1117,4],[1125,2],[1128,7],[1136,4],[1144,6],[1151,3],[1157,4],[1162,4],[1170,4],[1175,4],[1181,2],[1187,1],[1189,8],[1198,4],[1204,2],[1208,2],[1213,6],[1220,3],[1224,6],[1232,7],[1241,1],[1243,3],[1247,10],[1260,4],[1268,3],[1272,1],[1275,3],[1282,5],[1288,4],[1293,4],[1300,2],[1303,3],[1310,5],[1316,3],[1322,3],[1329,3],[1335,6],[1342,3],[1350,7],[1358,4],[1366,4],[1371,4],[1376,4],[1384,5],[1390,6],[1399,6],[1406,6],[1414,4],[1420,6],[1427,3],[1433,3],[1437,4],[1445,5],[1451,1],[1453,8],[1464,2],[1468,7],[1476,4],[1484,2],[1487,3],[1494,5],[1500,4],[1507,3],[1514,3],[1520,6],[1527,3],[1532,3],[1542,6],[1549,6],[1557,3],[1563,4],[1569,1],[1572,11],[1585,8],[1596,5],[1604,6],[1612,3],[1619,1],[1621,8],[1639,3],[1643,1],[1646,4],[1654,5],[1660,6],[1669,2],[1672,3],[1679,1],[1681,12],[1694,4],[1701,3],[1708,3],[1725,6],[1732,3]]},"669":{"position":[[11,4],[17,1],[20,10],[32,12],[49,6],[58,6],[67,6],[75,4]]},"671":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,7],[459,5],[466,3],[472,3],[476,3],[480,5],[486,7],[496,8],[505,3],[509,8],[522,6],[530,8],[542,7],[551,6],[559,4],[565,8],[577,7],[586,4]]},"677":{"position":[[23,4],[28,10],[39,9],[51,11],[65,3],[87,4],[92,10],[103,9],[115,11],[127,5],[133,3],[138,5],[151,4],[156,7],[164,9],[176,7],[184,4],[189,3],[197,4],[203,5],[210,7],[218,6],[227,4],[234,3],[239,5],[255,3],[259,4],[264,10],[275,6],[284,3],[290,4],[298,2],[301,2],[304,2],[312,4],[317,13],[331,3],[337,4],[344,10],[357,6],[365,10],[376,3],[381,3],[388,4],[394,1],[397,10],[409,7],[417,4],[422,3],[430,4],[436,5],[445,9],[456,3],[463,4],[468,7],[476,4],[482,2],[485,3],[492,3],[498,6],[505,3],[510,3],[516,5],[523,3],[530,3],[534,9],[544,1],[546,3],[551,2],[554,3],[561,3],[567,6],[574,3],[579,3],[585,6],[593,3],[600,6],[607,6],[614,5],[621,2],[624,3],[631,3],[637,6],[644,3],[649,3],[655,5],[664,4],[671,4],[677,6],[684,9],[697,2],[700,1],[703,3],[710,2],[713,8],[722,4],[727,6],[735,5],[743,3],[750,3],[756,6],[763,3],[768,3],[774,10],[788,6],[795,4],[800,5],[807,5],[814,9],[825,3],[830,6],[837,10],[849,3],[855,4],[861,1],[864,10],[876,7],[884,10],[897,4],[904,3],[909,5],[918,5],[925,3],[932,3],[936,9],[946,1],[948,3],[953,2],[956,3],[963,3],[969,6],[976,3],[981,3],[987,6],[995,3],[1002,6],[1009,6],[1016,5],[1023,2],[1026,3],[1033,3],[1039,6],[1046,3],[1051,3],[1057,9],[1070,6],[1077,9],[1089,2],[1092,3],[1096,10],[1110,9],[1122,6],[1129,3],[1134,3],[1138,6],[1146,10],[1157,3],[1161,5],[1171,5],[1180,10],[1192,9],[1203,10],[1217,10],[1228,9],[1240,9],[1251,3],[1258,6],[1265,4],[1270,3],[1275,5],[1282,10],[1294,3],[1299,2],[1302,3],[1309,3],[1315,6],[1322,3],[1327,3],[1333,3],[1337,6],[1344,3],[1348,2],[1351,3],[1358,4],[1363,9],[1373,9],[1385,6],[1394,3],[1401,3],[1407,6],[1414,3],[1419,3],[1425,6],[1432,6],[1440,3],[1453,4],[1459,1],[1462,11],[1475,14],[1490,6],[1497,7],[1506,5],[1517,1],[1519,2],[1522,4],[1532,5],[1538,1],[1540,2],[1543,6],[1558,4],[1566,6],[1573,4],[1583,7],[1592,6],[1602,1],[1604,8],[1613,4],[1622,3],[1626,5],[1632,3],[1642,2],[1645,6],[1657,2],[1660,8],[1670,2],[1676,7],[1684,3],[1689,10],[1702,2],[1710,5],[1718,8],[1727,11],[1749,7],[1757,3],[1761,4],[1771,3],[1775,6],[1783,7],[1791,3],[1795,7],[1803,2],[1807,1],[1809,1],[1813,4],[1841,2],[1844,8],[1854,2],[1860,6],[1868,10],[1881,2],[1887,5],[1896,3],[1905,2],[1908,3],[1915,8],[1924,11],[1936,5],[1944,3],[1951,3],[1960,6],[1967,3],[1971,6],[1979,5],[1985,6],[1992,6],[2001,1],[2003,1],[2007,3],[2020,3],[2024,6],[2032,5],[2038,8],[2047,3],[2051,7],[2060,1],[2062,1],[2066,4],[2097,1],[2099,8],[2108,4],[2117,11],[2133,3],[2138,6],[2149,4],[2155,6],[2162,12],[2181,5],[2188,7],[2219,2],[2222,6],[2232,7],[2240,5],[2249,7],[2262,6],[2269,5],[2280,1],[2282,8],[2291,4],[2297,5],[2305,7],[2316,3],[2320,6],[2328,7],[2336,3],[2340,7],[2348,2],[2352,1],[2356,4],[2367,4],[2377,3],[2381,6],[2389,10],[2400,3],[2404,7],[2412,2],[2416,1],[2419,3],[2423,7],[2434,4],[2451,6],[2458,3],[2466,4],[2472,1],[2475,11],[2488,23],[2512,6],[2519,7],[2528,7],[2536,7],[2545,5],[2553,1],[2555,2],[2558,4],[2565,5],[2571,1],[2573,2],[2576,6],[2585,4],[2593,6],[2600,4],[2607,7],[2616,6],[2626,1],[2628,8],[2637,4],[2643,3],[2647,14],[2664,4],[2669,2],[2672,6],[2681,2],[2684,8],[2694,2],[2700,7],[2708,3],[2713,10],[2726,2],[2731,8],[2743,8],[2752,11],[2766,6],[2774,3],[2781,7],[2789,7],[2797,8],[2807,2],[2810,3],[2817,3],[2823,6],[2830,3],[2834,6],[2842,5],[2848,10],[2859,6],[2868,1],[2872,3],[2879,14],[2896,6],[2905,7],[2913,3],[2917,4],[2924,3],[2928,6],[2936,7],[2944,3],[2948,7],[2956,2],[2960,1],[2962,1],[2966,4],[2986,2],[2989,8],[2999,2],[3005,6],[3013,10],[3026,2],[3032,14],[3050,3],[3056,9],[3067,3],[3074,7],[3082,7],[3090,14],[3106,2],[3109,3],[3116,3],[3122,6],[3129,3],[3133,6],[3141,5],[3147,10],[3158,6],[3167,1],[3171,3],[3178,2],[3181,3],[3188,8],[3197,11],[3209,9],[3221,3],[3228,3],[3234,6],[3241,3],[3245,6],[3253,5],[3259,6],[3266,6],[3275,1],[3279,3],[3286,3],[3290,6],[3298,9],[3308,5],[3314,8],[3323,3],[3327,7],[3336,1],[3338,1],[3342,4],[3350,1],[3352,8],[3361,4],[3370,11],[3383,3],[3388,6],[3396,4],[3402,6],[3409,12],[3425,5],[3432,7],[3443,2],[3446,6],[3456,7],[3464,5],[3473,7],[3483,6],[3490,5],[3498,1],[3500,8],[3509,4],[3515,5],[3523,7],[3531,3],[3535,6],[3543,7],[3551,3],[3555,7],[3563,2],[3567,1],[3569,1],[3573,4],[3581,4],[3588,3],[3592,6],[3600,10],[3611,3],[3615,7],[3623,2],[3627,1],[3630,3],[3634,7],[3643,1],[3647,4],[3655,6],[3662,3]]},"679":{"position":[[7,4],[13,1],[16,13],[31,11],[43,5],[49,3],[54,5],[62,2],[65,3],[70,2],[76,5],[83,3],[89,2],[94,1],[96,9],[108,3],[112,6],[119,3],[125,6],[132,3],[136,6],[144,7],[152,5],[158,4],[167,4],[173,1],[176,11],[189,11],[203,3],[209,6],[216,1],[218,9]]},"681":{"position":[[9,1],[26,2],[29,6],[41,4],[47,16],[69,2],[79,11],[91,23],[115,7],[123,16],[140,11],[154,11],[166,13],[180,6]]},"683":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,4],[456,5],[463,3],[469,1],[471,4],[476,7],[484,7],[492,4],[497,11],[510,5],[517,3],[524,4],[530,8],[542,7],[550,3],[554,7],[562,2],[565,4],[570,5],[576,8],[585,3],[589,7],[597,4],[603,4],[608,2],[611,2],[614,2],[617,2],[620,2],[623,3],[629,4],[636,4],[643,6],[651,8],[663,7],[671,3],[675,7],[683,2],[686,4],[691,11],[704,4],[709,5],[715,2],[718,4],[724,5],[731,3],[737,4],[743,5],[749,2],[752,2],[756,1],[758,4],[763,2],[766,7],[774,7],[782,4],[787,11],[800,5],[807,3],[814,11],[827,5],[833,4],[838,4],[846,3],[850,2],[853,5],[861,1],[863,7],[871,2],[874,6],[881,2],[885,8],[894,3],[898,8],[911,6],[919,8],[931,7],[940,6],[948,6],[956,8],[968,7],[977,4],[983,3],[988,8]]},"686":{"position":[[37,4],[42,4],[47,5],[67,6],[83,3]]},"689":{"position":[[2,14],[28,6],[35,6],[42,2],[45,4],[51,1],[54,11],[67,14],[82,6],[89,7],[98,5],[106,1],[108,2],[111,4],[118,5],[124,1],[126,2],[129,6],[138,4],[146,6],[153,4],[160,7],[169,6],[179,1],[181,8],[190,4],[196,2],[199,6],[209,7],[217,5],[226,7],[245,7],[253,3],[257,4],[264,3],[268,6],[276,7],[284,3],[288,7],[296,2],[300,1],[302,1],[306,4],[330,1],[332,8],[341,4],[350,11],[363,3],[368,6],[376,4],[382,6],[389,12],[405,5],[412,7],[440,2],[443,6],[453,7],[461,5],[470,7],[480,6],[487,5],[495,1],[497,8],[506,4],[512,5],[520,7],[528,3],[532,6],[540,7],[548,3],[552,7],[560,2],[564,1],[566,1],[570,4],[578,4],[585,3],[589,6],[597,10],[608,3],[612,7],[620,2],[624,1],[627,3],[631,7],[640,1],[644,4],[652,6],[659,3],[667,8],[677,4],[685,6],[692,6],[699,2],[705,8],[726,15],[744,8],[753,4],[759,1],[762,11],[775,8],[784,3],[788,7],[797,5],[805,1],[807,2],[810,4],[817,5],[823,1],[825,2],[828,6],[837,4],[845,3],[849,4],[856,2],[859,1],[862,2],[868,1],[870,8],[879,4],[886,2],[891,6],[898,6],[905,3],[910,7],[918,7],[926,10],[941,1],[943,8],[952,4],[961,11],[974,3],[979,3],[984,5],[991,7],[1000,4],[1006,3],[1010,12],[1028,3],[1032,7],[1041,10],[1055,3],[1059,4],[1067,6],[1074,3],[1099,6],[1106,6],[1113,2],[1116,4],[1122,1],[1125,11],[1138,8],[1152,6],[1160,5],[1169,1],[1171,2],[1174,5],[1182,5],[1188,1],[1190,2],[1193,7],[1203,7],[1214,4],[1219,3],[1223,6],[1230,4],[1236,4],[1244,4],[1249,3],[1253,6],[1260,4],[1266,6],[1278,6],[1287,3],[1291,5],[1297,4],[1302,6],[1310,5],[1316,5],[1324,4],[1329,4],[1334,6],[1342,5],[1350,2],[1353,4],[1358,4],[1366,6],[1373,3],[1377,6],[1385,8],[1394,10],[1405,2],[1409,1],[1413,4],[1421,2],[1424,7],[1432,4],[1440,6],[1447,3],[1453,4],[1458,4],[1466,4],[1471,4],[1477,2],[1483,1],[1485,8],[1494,4],[1500,2],[1504,2],[1509,6],[1516,3],[1520,6],[1528,7],[1537,1],[1539,3],[1543,10],[1556,4],[1564,3],[1568,1],[1571,3],[1578,5],[1584,4],[1589,4],[1596,2],[1599,3],[1606,5],[1612,3],[1618,3],[1625,3],[1631,6],[1638,3],[1646,7],[1654,4],[1662,4],[1667,4],[1672,4],[1680,5],[1686,6],[1695,6],[1702,6],[1710,4],[1716,6],[1723,3],[1729,3],[1733,4],[1741,5],[1747,1],[1749,8],[1760,2],[1764,7],[1772,4],[1780,2],[1783,3],[1790,5],[1796,4],[1803,3],[1810,3],[1816,6],[1823,3],[1828,3],[1838,6],[1845,6],[1853,3],[1859,4],[1865,1],[1868,11],[1881,8],[1892,5],[1900,6],[1908,3],[1915,1],[1917,8],[1935,3],[1939,1],[1942,4],[1950,5],[1956,6],[1965,2],[1968,3],[1975,1],[1977,12],[1990,4],[1997,3],[2004,3],[2021,6],[2028,3]]},"691":{"position":[[7,4],[12,8],[21,3],[25,5],[33,4],[38,8],[49,4],[54,4],[59,5],[67,4],[72,6],[79,6],[88,2],[91,4],[96,5],[102,5],[108,8],[117,7],[125,6],[132,3],[136,2],[139,6],[153,4],[158,9],[168,7],[176,6],[184,5],[190,8],[200,3],[204,2],[207,6],[216,6],[225,6],[233,6],[241,7],[250,7],[259,5],[266,5],[273,3],[278,3],[287,4],[293,1],[296,6],[304,4],[309,5],[315,8],[325,6],[332,6],[340,4],[348,3],[355,2],[358,5],[366,1],[368,5],[376,6],[385,1],[387,2],[390,4],[397,5],[403,1],[405,2],[408,6],[417,8],[434,6],[442,4],[450,4],[458,5],[466,5],[473,3],[480,3],[484,7],[492,6],[500,4],[509,2],[515,4],[520,3],[526,6],[534,4],[539,2],[542,2],[545,2],[548,2],[551,2],[554,3],[560,3],[564,7],[572,1],[574,3],[582,1],[587,1],[592,1],[596,1],[598,1],[602,2],[606,8],[616,1],[618,7],[627,3],[634,4],[640,1],[643,6],[651,5],[657,6],[664,6],[672,4],[680,3],[687,1],[689,4],[694,4],[700,6],[708,4],[719,4],[725,1],[728,6],[736,5],[742,6],[749,6],[757,4],[765,3],[772,1],[774,4],[779,4],[785,6],[793,4],[804,4],[810,1],[813,6],[821,6],[828,6],[835,6],[843,4],[851,3],[858,1],[860,4],[865,5],[872,6],[880,4],[897,4],[902,13],[916,6],[925,3],[930,6],[939,4],[944,16],[964,13],[980,6],[988,13],[1003,3],[1008,9],[1019,4],[1026,4],[1032,2],[1035,6],[1054,4],[1060,1],[1063,13],[1078,5],[1088,1],[1090,3],[1094,5],[1101,7]]},"693":{"position":[[9,1],[26,2],[29,1],[33,11],[45,14],[60,7],[68,16],[85,11],[105,2],[111,8],[123,4],[128,4],[133,11],[145,5],[152,1],[155,11],[167,4],[172,11],[184,5],[191,4],[198,4],[205,4],[212,3],[218,7],[228,3],[234,7],[243,8],[253,9],[264,4],[273,3],[277,7],[286,2],[289,5],[300,8]]},"695":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,7],[459,5],[466,3],[472,3],[476,3],[480,5],[486,7],[497,4],[503,8],[515,7],[523,3],[527,7],[535,2],[538,4],[544,4],[549,2],[552,2],[555,2],[558,2],[561,2],[564,3],[570,4],[577,4],[584,6],[592,8],[604,7],[612,3],[616,7],[624,2],[627,4],[633,11],[646,5],[652,4],[657,4],[665,3],[669,2],[672,5],[680,1],[682,7],[690,2],[693,6],[700,2],[704,8],[713,3],[717,8],[730,6],[738,8],[750,7],[759,6],[767,6],[775,8],[788,3],[793,8],[802,7],[811,4],[816,10],[828,6],[835,10],[847,4],[852,8],[861,3],[865,8],[877,8],[888,4],[893,6],[902,4],[908,8],[920,7],[929,4],[935,6],[943,8],[955,7],[964,6],[972,6],[980,3],[985,5],[992,11],[1006,11],[1019,5],[1025,4],[1030,6],[1040,5],[1047,11],[1061,6],[1069,3],[1073,5],[1079,4],[1084,6],[1092,7],[1100,2],[1103,6],[1111,6],[1119,3],[1124,5],[1131,4],[1138,11],[1151,5],[1157,4],[1162,6],[1172,5],[1179,4],[1186,6],[1194,3],[1198,5],[1204,4],[1209,6],[1217,4],[1222,7],[1230,7],[1239,11],[1252,4],[1257,5],[1263,2],[1266,7],[1275,5],[1282,3],[1288,3],[1292,3],[1296,5],[1302,7],[1312,8],[1321,3],[1325,8],[1338,6],[1346,8],[1358,7],[1367,6],[1375,4],[1381,8],[1393,7],[1402,4]]},"699":{"position":[[6,4]]},"702":{"position":[[6,3],[10,3],[14,11],[26,5],[42,12],[42,7],[50,4],[56,5]]},"704":{"position":[[0,4],[5,10],[16,6],[25,3],[29,6],[36,7],[44,7],[54,4],[59,13],[73,3],[77,6],[85,7],[93,7],[103,10],[116,6],[124,10],[135,3],[140,3],[145,7],[154,7],[165,4],[171,1],[174,10],[186,4],[191,4],[196,6],[204,6],[213,6],[220,8],[229,4],[234,1],[236,3],[241,4],[248,5],[258,4],[264,1],[267,10],[279,4],[284,4],[289,6],[297,5],[303,3],[308,5],[316,9],[327,3],[334,1],[336,7],[344,7],[352,5],[359,2],[362,3],[369,3],[375,6],[382,3],[388,2],[391,3],[398,2],[401,8],[410,1],[412,3],[417,4],[424,3],[431,3],[437,6],[444,3],[450,6],[457,2],[460,9],[470,1],[472,4],[477,4],[484,9],[495,4],[503,4],[509,1],[512,10],[524,4],[529,4],[534,6],[543,3],[548,5],[557,4],[563,3],[570,2],[573,8],[582,1],[584,4],[589,4],[596,2],[599,3],[606,3],[612,6],[619,3],[624,3],[630,6],[637,1],[639,7],[647,7],[655,4],[663,4],[669,1],[672,10],[684,6],[691,4],[696,6],[704,4],[711,1],[714,3],[721,2],[724,4],[729,1],[731,4],[736,4],[743,6],[750,3],[757,3]]},"707":{"position":[[0,4],[5,11],[17,6],[30,10],[42,10],[55,4],[60,23],[84,5],[91,10],[104,11],[118,6],[126,11],[139,8],[149,4],[154,3],[158,6],[166,11],[180,10],[192,5],[199,6],[207,9],[218,6],[227,4],[233,2],[236,6]]},"709":{"position":[[3,8],[24,15],[42,8],[51,4],[57,1],[60,11],[73,8],[82,3],[86,7],[95,5],[103,1],[105,2],[108,4],[115,5],[121,1],[123,2],[126,6],[138,4],[156,4],[164,3],[168,4],[207,2],[210,1],[212,10],[226,3],[233,1],[235,10],[246,6],[253,4],[312,2],[315,8],[325,2],[331,3],[336,10],[349,2],[354,3],[359,3],[366,1],[368,10],[379,4],[384,4],[390,2],[393,3],[400,3],[406,6],[413,3],[417,6],[425,5],[431,4],[436,6],[445,1],[447,1],[451,3],[458,3],[464,8],[473,11],[485,3],[490,2],[493,3],[500,3],[506,6],[513,3],[517,6],[525,5],[531,6],[538,6],[547,1],[549,1],[553,3],[560,3],[564,6],[572,5],[578,8],[587,3],[591,7],[600,1],[602,1],[606,4],[616,2],[619,1],[622,2],[628,1],[630,8],[639,4],[646,2],[651,6],[658,6],[665,3],[670,7],[678,7],[686,10],[701,1],[703,8],[712,4],[721,11],[734,3],[739,3],[744,5],[751,7],[760,4],[766,3],[770,12],[788,3],[792,7],[801,10],[815,3],[819,4],[827,6],[834,3]]},"711":{"position":[[0,4],[6,1],[9,11],[22,11],[34,4],[39,6],[47,5],[55,1],[57,2],[60,4],[67,5],[73,1],[75,2],[78,6],[87,4],[93,2],[99,1],[101,8],[110,4],[116,2],[120,2],[125,6],[132,6],[139,3],[144,7],[152,3],[156,10],[171,2],[174,4],[179,5],[188,7],[198,6],[205,6],[212,3],[217,7],[225,7],[233,7],[257,2],[260,8],[270,2],[276,4],[281,3],[286,10],[299,2],[305,1],[307,10],[321,3],[327,2],[330,3],[337,1],[339,10],[350,4],[355,4],[361,8],[370,11],[386,3],[393,3],[399,3],[403,6],[411,5],[417,9],[427,3],[432,1],[434,1],[438,4],[448,2],[451,3],[458,4],[463,3],[467,4],[475,3],[482,3],[488,6],[495,3],[501,4],[506,5],[514,7],[522,3],[526,7],[535,7],[546,4],[551,3],[555,4],[563,6],[570,3]]},"713":{"position":[[0,4],[6,1],[9,11],[22,6],[29,3],[33,7],[41,7],[61,6],[68,6],[87,6],[97,4],[102,9],[112,1],[116,4],[121,6],[129,3],[135,6],[144,4],[151,3],[155,4],[163,6],[170,4],[177,6],[184,1],[187,3],[191,7],[200,5],[206,7],[214,5],[222,2],[225,1],[227,10],[241,3],[247,3],[251,4],[257,4],[265,5],[271,1],[273,8],[284,2],[287,4],[292,5],[301,7],[311,2],[314,8],[324,2],[330,4],[335,3],[340,10],[353,2],[358,2],[361,3],[368,1],[370,10],[381,4],[386,4],[392,8],[401,11],[417,3],[424,3],[430,3],[434,6],[442,5],[448,9],[458,3],[463,1],[465,1],[469,4]]},"715":{"position":[[0,7],[11,11],[23,13],[39,4],[45,16],[65,5],[74,11],[86,13],[103,5],[111,7],[123,1],[132,11],[147,11],[159,14],[174,5]]},"717":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,4],[456,5],[463,3],[469,1],[471,4],[476,7],[484,7],[492,4],[497,11],[510,5],[517,3],[524,4],[530,8],[542,7],[550,3],[554,7],[562,2],[565,4],[570,9],[580,5],[586,8],[595,3],[599,7],[607,4],[613,4],[618,2],[621,2],[624,2],[627,2],[630,2],[633,3],[639,4],[646,4],[653,6],[661,8],[673,7],[681,3],[685,7],[693,2],[696,4],[702,11],[715,4],[720,5],[726,2],[729,4],[735,5],[742,3],[748,4],[754,5],[760,2],[763,2],[767,1],[769,4],[774,2],[777,7],[785,7],[793,4],[798,11],[811,5],[818,3],[825,11],[838,5],[844,4],[849,4],[857,3],[861,2],[864,5],[872,1],[874,7],[882,2],[885,6],[892,2],[896,8],[905,3],[909,8],[922,6],[930,8],[942,7],[951,6],[959,6],[967,8],[979,7],[988,4]]},"720":{"position":[[7,10],[18,9],[28,9],[39,3],[45,5],[61,6],[68,1],[71,6],[133,2],[150,9]]},"722":{"position":[[23,3],[45,2]]},"725":{"position":[[16,4],[21,13],[35,6],[45,4],[51,1],[54,13],[69,4],[74,4],[79,6],[87,5],[95,3],[99,7],[113,5],[122,4],[128,6],[135,3],[141,4],[146,15],[162,6],[171,2],[175,13],[203,4],[209,1],[212,15],[229,8],[240,5],[248,6],[255,1],[257,2],[260,4],[278,15],[297,13]]},"727":{"position":[[10,4],[15,8],[24,9],[36,4],[41,4],[46,6],[54,5],[74,4],[79,13],[93,6],[103,4],[109,1],[112,13],[127,4],[132,4],[137,6],[145,5],[153,3],[157,7],[171,5],[180,4],[186,6],[193,3],[199,4],[204,18],[223,6],[233,4],[239,1],[242,18],[262,4],[267,4],[272,6],[280,5],[288,3],[292,7],[306,10],[320,4],[326,6],[333,3],[351,4],[356,15],[372,6],[381,2],[384,8],[409,4],[414,18],[433,2],[436,8],[447,15],[465,6],[473,15],[489,2],[493,2],[499,4],[505,1],[508,15],[525,8],[536,5],[544,6],[551,1],[553,2],[556,4]]},"730":{"position":[[7,6],[16,4],[21,6],[28,9],[40,3],[44,7],[52,6],[62,4],[67,13],[81,6],[90,4],[96,1],[99,13],[114,3],[118,7],[126,6],[136,3],[140,7],[148,7],[159,4],[164,7],[172,6],[181,6],[188,6],[197,4],[202,10],[213,6],[220,6],[229,7],[239,6],[247,7],[255,6],[263,6],[273,4],[279,1],[282,7],[291,6],[302,1],[304,6],[311,3]]},"732":{"position":[[0,4],[5,10],[16,9],[28,4],[33,2],[37,7],[46,4],[51,6],[59,5],[67,4],[72,11],[84,6],[93,4],[99,1],[102,11],[115,8],[124,5],[130,6],[138,6],[145,10],[157,5],[176,6],[183,6],[190,4],[195,5]]},"734":{"position":[[12,2],[18,7],[26,4],[31,4],[36,8],[45,9],[57,4],[62,4],[67,4],[73,5],[81,4],[86,7],[94,6],[103,2],[106,8],[130,4],[135,7],[143,6],[152,4],[158,1],[161,7],[170,4],[175,4],[180,4],[186,5]]},"737":{"position":[[3,7],[11,2],[14,4],[19,14],[34,9],[46,7],[54,2],[57,3],[64,4],[70,5],[77,4],[82,4],[88,4],[94,5],[105,7],[113,2],[116,4],[121,11],[133,6],[142,4],[147,14],[164,4],[169,14],[184,4],[189,14],[206,11],[220,6],[228,11],[240,4],[246,4],[266,5],[273,10],[285,7]]},"739":{"position":[[0,4],[5,7],[13,9],[25,6],[32,1],[34,4],[39,14],[55,1],[58,4],[63,7],[72,5],[80,4],[85,6],[92,6],[101,8],[110,3],[114,6],[121,7],[131,4],[137,1],[140,6],[148,8],[157,4],[162,6],[170,7],[178,7],[189,1],[191,8],[200,4],[208,7],[229,4],[234,11],[246,6],[255,7],[264,11],[278,4],[284,1],[287,11],[300,6],[307,1],[309,4],[314,14],[330,1],[333,4],[338,7],[347,5]]},"741":{"position":[[2,2],[9,2],[24,6],[31,4],[47,4],[52,2],[55,4],[60,21],[85,11],[99,4],[104,5],[110,14],[126,18],[146,6],[154,11],[170,3],[182,9],[195,3],[199,3],[205,9],[215,7],[223,18],[243,9],[253,7],[261,14],[277,2],[282,3],[289,2],[292,3],[297,2],[300,7],[308,18],[329,2],[332,7],[340,14],[357,2],[360,6],[367,4],[372,1],[375,11]]},"745":{"position":[[0,3],[19,2],[80,2],[95,3]]},"748":{"position":[[2,7],[12,9],[33,7],[41,4],[46,6],[56,3],[62,4],[73,15],[101,4],[106,15],[122,6],[131,8],[142,6],[149,8],[158,4],[163,5],[188,10],[213,4],[218,10],[229,6],[238,5],[246,6],[253,12],[266,4],[272,15],[288,8],[297,4],[302,6],[316,8],[328,10],[348,4],[354,1],[357,10],[369,8],[378,1],[382,6],[390,5],[398,3],[406,15],[423,8],[433,1],[436,8],[446,4],[451,4],[456,5],[466,1],[468,12],[484,3],[488,6],[497,3],[501,8],[525,3],[532,10],[549,4],[555,1],[558,10],[570,3],[578,3],[584,6],[593,4],[598,3],[607,1],[609,12],[623,1],[625,5],[633,3],[637,8],[646,3],[650,7],[659,7],[667,5],[676,1],[678,5],[685,3],[689,8],[701,3],[713,4],[720,1],[722,8],[732,6],[748,4],[756,10],[773,4],[779,1],[782,10],[794,4],[803,5],[809,1],[811,8],[823,4],[828,4],[837,10],[852,10],[864,5],[873,6],[883,12],[897,4],[902,4],[908,15],[926,8],[936,4],[941,4],[946,6],[959,2],[962,10],[973,3],[987,4],[992,5],[998,3],[1004,4],[1009,11],[1022,10],[1033,8],[1044,6],[1052,1],[1057,1],[1062,1],[1067,10],[1078,8],[1089,6],[1097,1],[1102,1],[1107,1],[1122,10],[1133,4],[1162,8],[1173,10],[1186,7],[1206,8],[1215,7],[1239,10],[1258,7],[1304,7],[1322,7]]},"751":{"position":[[4,2],[10,1],[17,7],[33,5],[46,4],[57,7],[69,5],[98,1],[101,2],[109,2],[115,2],[121,5],[130,7],[150,1],[157,2],[172,7],[188,1],[191,2],[199,2],[205,2],[211,5],[220,7],[236,7],[244,4],[249,6],[259,3],[265,4],[273,4],[278,4],[289,2],[295,4],[300,4],[305,3],[310,1],[313,2],[319,4],[324,4],[329,3],[334,2],[337,4],[346,2],[352,2],[355,4],[360,5],[366,1],[370,4],[375,6],[383,5],[389,5],[395,2],[420,5],[431,2],[434,3],[438,7],[447,5],[456,5],[469,2],[472,2],[475,2],[478,5],[485,2],[488,5],[498,2],[501,3],[505,7],[514,5],[523,5],[536,2],[539,2],[542,2],[545,5],[552,1],[554,5],[564,2],[567,3],[571,7],[580,5],[589,5],[602,2],[605,2],[608,2],[611,5],[618,1],[637,5],[644,4],[654,2],[657,3],[661,7],[670,5],[679,5],[687,4],[695,4],[707,2],[710,2],[713,2],[716,5],[723,2],[726,4],[732,4],[737,5],[744,4],[753,2],[756,3],[760,7],[769,5],[778,5],[786,4],[794,4],[806,2],[809,2],[812,2],[815,5],[822,1],[824,4],[830,5],[836,5],[843,4],[852,2],[855,3],[859,7],[868,5],[877,5],[885,4],[893,4],[905,2],[908,2],[911,2],[914,5],[921,1],[923,4],[929,5]]},"753":{"position":[[13,9],[24,12],[39,8],[60,5],[69,2],[83,7],[97,3],[108,3],[121,4],[143,7],[151,4],[156,6],[166,3],[172,4],[197,8],[211,4],[216,15],[232,6],[241,8],[252,6],[259,8],[268,4],[273,5],[290,4],[295,10],[306,6],[315,5],[323,6],[330,12],[343,4],[349,15],[365,8],[374,4],[379,6],[388,8],[397,4],[402,6],[428,3],[435,10],[452,4],[458,1],[461,10],[473,3],[481,5],[487,5],[493,1],[495,8],[522,3],[528,6],[537,4],[542,3],[547,2],[555,1],[557,12],[571,2],[575,2],[580,3],[584,7],[593,12],[606,6],[614,7],[622,3],[630,6],[639,1],[641,5],[649,3],[653,8],[662,3],[666,7],[675,7],[683,5],[692,1],[694,5],[710,3],[714,8],[726,3],[730,4],[737,1],[739,8],[749,3],[753,7],[762,8],[771,4],[776,6],[784,7],[792,3],[800,6],[816,8],[832,4],[838,1],[841,10],[853,8],[862,1],[866,6],[874,5],[882,3],[890,15],[907,8],[917,1],[920,8],[930,4],[935,4],[940,5],[950,6],[959,4],[964,1],[966,12],[982,3],[987,6],[996,3],[1000,8],[1009,4],[1016,1],[1018,8],[1028,6],[1035,3],[1039,6],[1047,10],[1058,2],[1061,8],[1070,4],[1084,4],[1092,10],[1106,9],[1121,4],[1127,1],[1130,10],[1142,4],[1151,5],[1157,1],[1159,8],[1177,5],[1183,1],[1185,12],[1210,12],[1225,1],[1227,8],[1248,3],[1252,7],[1261,10],[1272,7],[1280,10],[1295,4],[1300,4],[1309,10],[1324,10],[1336,5],[1345,6],[1355,12],[1369,4],[1374,4],[1380,15],[1398,8],[1408,4],[1413,4],[1418,6],[1429,8],[1439,4],[1444,4],[1449,6],[1462,2],[1465,10],[1476,3],[1482,4],[1487,5],[1493,3],[1499,4],[1504,11],[1517,10],[1528,8],[1539,6],[1547,1],[1552,1],[1557,1],[1562,10],[1573,8],[1584,6],[1592,1],[1597,1],[1602,1],[1607,10],[1618,4]]},"755":{"position":[[7,7],[15,7],[38,10],[49,9],[70,7],[80,6],[130,8],[160,7],[168,7],[191,8],[200,8],[212,4],[221,7],[229,4],[234,6],[244,7],[254,3],[260,4],[285,8],[299,4],[304,15],[320,6],[329,8],[340,6],[347,8],[356,4],[361,5],[379,4],[384,10],[395,6],[404,5],[412,6],[419,12],[432,4],[438,15],[454,8],[463,4],[468,6],[477,8],[486,4],[491,6],[505,3],[512,10],[529,4],[535,1],[538,10],[550,3],[558,5],[564,5],[570,1],[572,8],[582,3],[588,6],[597,4],[602,3],[607,2],[615,1],[617,12],[631,2],[635,2],[640,3],[644,7],[653,12],[666,6],[674,7],[682,3],[690,6],[699,1],[701,5],[709,3],[713,8],[722,3],[726,7],[735,7],[743,5],[752,1],[754,5],[761,3],[765,8],[777,3],[781,4],[788,1],[790,8],[800,3],[804,7],[813,8],[822,4],[827,6],[835,7],[843,3],[851,6],[867,11],[882,7],[900,4],[906,1],[909,10],[921,11],[933,3],[937,7],[945,7],[954,5],[962,6],[970,5],[978,3],[986,15],[1003,8],[1013,5],[1020,8],[1030,4],[1035,4],[1040,5],[1047,1],[1072,4],[1077,5],[1083,1],[1087,4],[1092,11],[1105,6],[1114,4],[1119,1],[1121,12],[1137,3],[1150,2],[1153,7],[1164,6],[1173,4],[1178,3],[1187,3],[1191,8],[1201,6],[1208,3],[1212,4],[1219,3],[1223,4],[1231,6],[1238,3],[1242,6],[1250,3],[1254,5],[1260,7],[1268,2],[1271,9],[1283,1],[1287,3],[1291,3],[1300,4],[1307,1],[1309,8],[1319,6],[1326,3],[1330,6],[1338,10],[1349,8],[1358,4],[1365,4],[1372,3],[1376,4],[1384,6],[1391,3],[1395,6],[1403,4],[1408,7],[1416,2],[1419,9],[1431,1],[1435,3],[1439,3],[1453,4],[1463,4],[1469,1],[1472,10],[1484,4],[1493,5],[1499,1],[1501,8],[1511,5],[1517,1],[1519,12],[1535,1],[1537,8],[1546,3],[1550,7],[1559,10],[1570,7],[1578,10],[1593,4],[1598,4],[1607,10],[1622,10],[1634,5],[1643,6],[1653,12],[1667,4],[1672,4],[1678,15],[1696,8],[1706,4],[1711,4],[1716,6],[1727,8],[1737,4],[1742,4],[1747,6],[1760,2],[1763,10],[1774,3],[1790,3],[1797,7],[1805,10],[1818,10],[1829,11],[1841,3],[1848,6],[1856,1],[1861,1],[1866,1],[1878,7],[1890,3],[1899,10],[1911,6],[1921,7],[1929,11],[1941,7],[1949,10],[1963,1],[1965,4],[1970,11],[1983,5],[1989,6],[1998,3],[2005,10],[2016,11],[2028,10],[2042,6],[2050,6],[2060,4],[2068,4],[2076,2],[2079,3],[2086,3],[2092,3],[2096,7],[2105,7],[2113,3],[2120,3],[2135,4],[2141,7],[2152,7],[2160,11],[2172,7],[2180,10],[2194,1],[2196,4],[2201,6],[2209,5],[2215,7],[2225,10],[2236,11],[2248,4],[2256,6],[2264,1],[2269,1],[2274,1],[2279,10],[2290,4]]},"757":{"position":[[0,14],[23,7],[31,7],[99,14],[171,7],[206,7],[240,14],[275,7],[316,7],[343,14],[363,8],[465,7],[476,8],[485,8],[527,14],[569,4],[574,7],[596,4],[605,9],[616,8],[660,1],[687,7],[715,7],[723,7],[736,15],[777,15],[795,18],[823,8],[834,8],[845,7],[853,4],[858,6],[868,7],[878,6],[887,3],[897,7],[914,4],[919,7],[927,9],[939,7],[947,3],[951,7],[959,7],[968,1],[971,7],[980,4],[989,4],[994,6],[1003,3],[1009,5],[1020,7],[1040,4],[1045,7],[1053,6],[1062,5],[1070,6],[1077,7],[1085,4],[1090,7],[1098,4],[1103,4],[1108,6],[1117,4],[1122,4],[1127,6],[1148,4],[1153,11],[1165,6],[1174,3],[1178,5],[1184,4],[1189,4],[1194,6],[1205,4],[1211,1],[1214,11],[1227,4],[1236,4],[1241,6],[1252,6],[1259,1],[1261,4],[1268,4],[1274,1],[1277,11],[1290,3],[1296,5],[1304,6],[1311,1],[1313,3],[1322,15],[1343,4],[1348,15],[1364,6],[1373,11],[1385,8],[1396,6],[1405,4],[1411,1],[1414,15],[1431,7],[1439,3],[1443,7],[1451,7],[1460,1],[1463,7],[1474,5],[1480,5],[1486,1],[1488,4],[1494,1],[1496,5],[1504,1],[1506,8],[1515,3],[1519,7],[1528,15],[1544,8],[1556,1],[1558,5],[1570,15],[1591,4],[1596,15],[1612,6],[1621,11],[1633,6],[1640,4],[1647,6],[1656,4],[1662,1],[1665,15],[1682,7],[1690,3],[1694,7],[1702,7],[1711,1],[1714,7],[1725,5],[1731,5],[1737,1],[1739,4],[1745,1],[1747,6],[1757,1],[1759,5],[1765,5],[1771,1],[1773,6],[1783,4],[1788,10],[1802,7],[1812,6],[1820,7],[1829,5],[1838,6],[1848,7],[1857,4],[1862,4],[1867,7],[1877,4],[1883,4],[1888,4],[1893,6],[1904,4],[1910,4],[1915,4],[1920,6],[1938,3],[1949,4],[1955,1],[1958,7],[1967,3],[1975,5],[1981,5],[1987,1],[1989,4],[1995,3],[2001,6],[2010,4],[2015,3],[2024,1],[2026,7],[2035,3],[2042,7],[2050,10],[2070,3],[2077,3],[2081,7],[2089,3],[2094,1],[2097,4],[2104,1],[2106,4],[2112,6],[2128,4],[2145,4],[2151,1],[2154,7],[2163,4],[2168,3],[2172,7],[2180,7],[2189,3],[2193,7],[2202,5],[2210,6],[2219,4],[2224,1],[2226,7],[2237,3],[2242,6],[2251,4],[2258,3],[2262,4],[2270,6],[2277,3],[2281,3],[2287,4],[2294,3],[2298,4],[2306,6],[2313,3],[2317,3],[2325,4],[2332,1],[2334,4],[2340,6],[2347,6],[2354,3],[2359,7],[2367,2],[2370,7],[2380,4],[2387,3],[2391,4],[2399,6],[2406,3],[2410,3],[2423,4],[2433,4],[2439,1],[2442,7],[2451,4],[2460,5],[2466,1],[2468,4],[2476,1],[2478,4],[2485,4],[2490,4],[2499,7],[2510,10],[2523,2],[2526,7],[2534,3],[2540,3],[2547,7],[2555,10],[2568,6],[2579,15],[2596,11],[2609,11],[2621,4],[2627,4],[2632,4],[2637,6],[2649,8],[2661,6],[2669,1],[2674,1],[2679,1],[2686,7],[2694,4],[2699,3],[2704,6],[2720,6],[2731,15],[2748,11],[2761,11],[2773,4],[2779,4],[2784,4],[2789,6],[2801,6],[2809,4],[2814,4],[2821,6],[2829,1],[2835,7],[2843,4],[2848,3],[2853,6],[2861,3],[2865,7],[2874,7],[2882,5],[2893,6],[2900,6],[2908,7],[2916,4],[2934,13],[2948,1],[2978,6],[2985,3],[2989,4],[3001,7],[3045,7],[3053,4],[3058,6],[3068,7],[3078,6],[3087,3],[3093,4],[3107,7],[3118,4],[3123,7],[3131,9],[3143,7],[3151,7],[3159,7],[3169,7],[3178,4],[3187,4],[3192,6],[3201,3],[3207,5],[3218,7],[3232,4],[3237,7],[3245,6],[3254,5],[3262,6],[3269,7],[3277,4],[3282,7],[3290,4],[3295,4],[3300,6],[3309,4],[3314,4],[3319,6],[3330,4],[3335,10],[3349,7],[3359,6],[3367,7],[3376,5],[3385,6],[3395,7],[3404,4],[3409,4],[3414,7],[3424,4],[3430,4],[3435,4],[3440,6],[3451,4],[3457,4],[3462,4],[3467,6],[3482,4],[3488,1],[3491,7],[3500,3],[3508,5],[3514,5],[3520,1],[3522,4],[3528,3],[3534,6],[3543,4],[3548,3],[3557,1],[3559,7],[3568,3],[3572,7],[3580,7],[3588,10],[3602,1],[3605,4],[3612,1],[3614,4],[3620,6],[3633,4],[3639,1],[3642,7],[3651,4],[3660,5],[3666,1],[3668,4],[3676,1],[3678,4],[3688,4],[3702,4],[3708,1],[3711,7],[3720,4],[3725,3],[3729,7],[3737,7],[3746,3],[3750,7],[3759,5],[3767,6],[3776,4],[3781,1],[3783,7],[3794,3],[3799,6],[3808,4],[3815,3],[3819,4],[3827,6],[3834,3],[3838,3],[3844,4],[3851,3],[3855,4],[3863,6],[3870,3],[3874,3],[3882,4],[3889,3],[3893,4],[3901,6],[3908,3],[3912,3],[3918,4],[3925,1],[3927,4],[3933,6],[3940,6],[3947,3],[3952,7],[3960,7],[3982,13],[3996,1],[4035,4],[4040,13],[4054,1],[4056,3],[4061,6],[4070,6],[4077,1],[4079,3],[4083,5],[4089,4],[4094,4],[4099,6],[4108,7],[4116,4],[4121,1],[4125,4],[4130,16],[4147,1],[4149,3],[4157,13],[4171,1],[4176,6],[4184,13],[4198,1],[4202,4],[4208,4],[4213,4],[4218,6],[4229,7],[4238,4],[4243,4],[4248,1],[4251,1],[4268,4],[4274,1],[4277,13],[4291,1],[4295,4],[4304,4],[4309,6],[4320,6],[4327,1],[4329,4],[4336,4],[4342,1],[4345,13],[4359,1],[4363,3],[4369,5],[4377,6],[4384,1],[4386,3],[4395,4],[4405,4],[4411,1],[4414,13],[4428,1],[4432,4],[4437,3],[4441,7],[4449,7],[4459,1],[4462,5],[4471,6],[4480,4],[4487,3],[4491,4],[4499,3],[4503,4],[4508,1],[4510,6],[4517,4],[4523,3],[4527,3],[4533,4],[4538,3],[4547,1],[4549,7],[4558,6],[4565,3],[4570,1],[4572,3],[4624,15],[4645,6],[4688,4],[4693,15],[4709,6],[4719,13],[4735,6],[4745,4],[4750,18],[4772,15],[4790,6],[4798,15],[4815,13],[4830,16],[4849,6],[4864,4],[4870,1],[4873,15],[4890,7],[4898,3],[4902,7],[4910,7],[4919,1],[4922,7],[4933,5],[4939,5],[4945,1],[4947,4],[4953,1],[4955,6],[4964,1],[4966,5],[4972,1],[4974,7],[4985,1],[4987,5],[5039,15],[5091,4],[5096,15],[5112,6],[5121,8],[5132,6],[5139,4],[5144,4],[5149,6],[5158,3],[5162,5],[5170,4],[5175,18],[5194,5],[5202,6],[5211,15],[5229,6],[5237,15],[5254,8],[5264,5],[5271,4],[5277,4],[5282,4],[5287,6],[5302,4],[5308,1],[5311,15],[5328,7],[5336,3],[5340,7],[5348,7],[5357,1],[5360,7],[5371,5],[5377,5],[5383,1],[5385,4],[5391,1],[5393,5],[5401,1],[5403,8],[5412,3],[5416,7],[5425,5],[5431,7],[5442,1],[5444,5],[5453,4],[5459,1],[5462,15],[5479,4],[5488,4],[5493,6],[5504,6],[5511,1],[5513,4],[5520,4],[5526,1],[5529,15],[5546,3],[5552,5],[5560,6],[5567,1],[5569,3],[5581,4],[5589,8],[5600,8],[5614,4],[5619,4],[5628,1],[5633,10],[5646,2],[5649,1],[5651,3],[5657,3],[5664,7],[5672,10],[5688,3],[5692,5],[5698,6],[5708,18],[5729,6],[5737,1],[5742,1],[5747,1],[5752,1],[5756,1],[5758,4],[5763,3],[5768,6],[5779,3],[5783,5],[5789,6],[5799,18],[5820,1],[5824,1],[5826,4],[5831,3],[5836,6],[5844,5],[5851,3],[5858,6],[5865,4],[5870,3],[5875,2],[5878,3],[5885,3],[5891,3],[5895,7],[5904,8],[5913,5],[5922,3],[5929,4],[5936,3],[5940,7],[5949,3],[5953,5],[5962,5],[5979,10],[5991,6],[6001,7],[6009,11],[6021,3],[6026,1],[6028,4],[6033,11],[6046,5],[6052,6],[6061,7],[6072,18],[6093,1],[6097,1],[6099,4],[6104,10],[6116,7],[6125,6],[6133,3],[6140,7],[6148,4],[6153,10],[6165,3],[6169,7],[6178,4],[6183,7],[6194,6],[6202,3],[6207,1],[6209,4],[6224,5],[6230,7],[6240,1],[6242,1],[6244,1],[6247,3],[6251,5],[6259,1],[6261,1],[6263,1],[6266,4],[6271,7],[6283,7],[6291,8],[6300,8],[6320,15],[6336,6],[6344,13],[6358,3],[6362,6],[6369,3],[6376,18],[6395,6],[6403,13],[6417,4],[6425,17],[6443,6],[6451,13],[6465,6],[6475,18],[6494,6],[6502,5],[6510,6]]},"760":{"position":[[7,6],[14,12],[27,9],[38,3],[44,5],[60,7],[68,6],[87,1],[89,1],[100,1],[112,1],[136,2],[163,9],[177,6],[184,9]]},"765":{"position":[[10,4],[15,4],[20,9],[32,3],[38,6],[45,4],[52,6],[69,4],[74,7],[82,6],[91,4],[97,1],[100,7],[109,3],[115,6],[124,6],[141,4],[147,1],[150,7],[159,4],[166,6],[175,6],[200,4],[205,7],[213,6],[222,4],[228,1],[231,7],[240,3],[246,6],[255,6],[275,3],[284,4],[290,1],[293,7],[302,4],[309,6],[318,6],[340,7],[351,4],[362,3]]},"767":{"position":[[12,4],[17,5],[23,9],[35,3],[41,6],[50,4],[55,6],[62,9],[74,4],[81,6],[98,4],[103,10],[114,6],[123,4],[129,1],[132,10],[144,3],[150,6],[159,6],[182,4],[187,7],[195,6],[204,10],[217,4],[223,1],[226,7],[235,4],[242,6],[251,6],[274,4],[279,7],[287,6],[296,4],[302,1],[305,7],[314,4],[321,6],[330,6]]},"770":{"position":[[0,4],[5,16],[22,9],[34,14],[49,6],[56,7],[65,8],[74,6],[82,5],[98,4],[103,14],[118,6],[127,4],[133,1],[136,14],[152,14],[167,6],[174,7],[183,8],[192,6],[200,5],[208,2],[211,6],[221,1],[225,6],[232,6],[239,3],[250,1],[279,3],[284,4],[289,17],[307,6],[316,4],[322,1],[325,17],[344,14],[359,6],[366,7],[375,8],[384,6],[392,5],[405,6],[412,1],[423,2],[426,6],[435,1],[439,6],[446,6],[453,3]]},"772":{"position":[[0,4],[5,11],[17,9],[29,4],[34,4],[41,4],[48,6],[56,5],[70,2],[83,4],[88,11],[100,6],[109,4],[115,1],[118,11],[131,4],[136,4],[143,4],[150,6],[158,5],[167,2],[173,10],[198,6],[205,2],[209,3],[221,2],[236,3],[241,4],[246,17],[264,6],[273,4],[279,1],[282,17],[301,4],[306,4],[313,4],[320,6],[328,5],[337,2],[340,3],[344,4],[353,1],[357,6],[368,6],[375,3],[402,2],[408,10],[433,6],[441,3],[449,2],[453,3],[463,2]]},"775":{"position":[[0,6],[19,4],[24,6],[31,6],[40,4],[45,6],[54,4],[60,1],[63,6],[71,3],[77,6],[86,6],[93,1],[95,4],[121,6],[128,4],[133,3],[137,6],[146,6],[155,4],[161,1],[164,3],[169,4],[176,6],[185,6],[206,3],[214,3],[218,6],[225,4],[238,3],[242,7],[250,3],[254,3],[271,3],[275,7],[283,3],[287,4]]},"777":{"position":[[7,4],[12,12],[25,9],[37,7],[47,7],[57,7],[78,7],[86,4],[91,6],[98,6],[107,3],[111,9],[123,7]]},"779":{"position":[[10,5],[18,9]]},"781":{"position":[[0,3],[19,2],[76,3],[94,2],[97,1]]},"784":{"position":[[7,9],[17,11],[29,9],[40,3],[46,5],[62,6],[69,1],[72,6],[135,2],[152,2]]},"789":{"position":[[17,4],[22,6],[29,9],[41,3],[47,5],[55,3],[74,4],[95,4],[130,4],[135,3],[139,6],[148,4],[154,1],[156,3],[161,3],[169,3],[173,7],[182,3],[186,6],[197,4],[203,1],[205,3],[210,5],[220,3],[224,7],[233,3],[237,8],[250,4],[256,1],[258,3],[263,4],[272,3],[276,7],[285,3],[289,7],[301,4],[307,1],[309,3],[314,3],[337,4],[343,1],[345,3],[350,4],[378,3],[393,3]]},"791":{"position":[[12,4],[17,5],[23,9],[35,3],[43,4],[48,7],[56,9],[68,5],[78,4],[83,5],[89,9],[101,3],[109,4],[114,7],[122,9],[134,4],[143,4],[148,6],[155,9],[167,4],[179,3],[192,4],[197,3],[201,6],[210,4],[216,1],[218,3],[223,3],[231,3],[235,7],[244,3],[248,6],[259,4],[265,1],[267,3],[272,5],[282,3],[286,7],[295,3],[299,8],[312,4],[318,1],[320,3],[325,4],[334,3],[338,7],[347,3],[351,7],[373,4],[378,10],[389,6],[398,3],[404,4],[410,1],[412,10],[424,4],[433,3],[437,7],[446,3],[450,8]]},"794":{"position":[[0,4],[5,6],[12,9],[24,5],[30,7],[40,4],[45,4],[50,9],[62,6],[69,5],[77,4],[82,4],[87,9],[99,6],[106,7]]},"796":{"position":[[14,4],[19,4],[24,1],[26,5],[35,1],[37,3],[45,4],[50,10],[61,1],[63,7],[74,1],[76,5]]},"798":{"position":[[9,4],[14,11],[26,9],[38,4],[45,5],[53,4],[60,5],[68,6],[77,7],[113,4],[118,12],[131,9],[143,4],[150,5],[160,4],[165,10],[176,9],[188,12],[201,4],[210,4],[215,10],[226,9],[238,12],[251,5],[261,4],[266,11],[278,9],[290,10],[301,10],[312,6]]},"801":{"position":[[0,4],[5,6],[12,9],[24,3],[28,2],[31,6],[40,4],[46,5],[53,4],[63,4],[69,5],[78,4],[83,6],[90,9],[102,6],[109,4],[114,4],[120,5],[126,6],[133,4],[138,4],[144,5],[150,6],[157,2],[160,6],[168,5],[185,4],[190,17],[208,1],[210,6],[219,14],[236,6],[244,14],[259,6],[267,1],[281,4],[286,18],[305,2],[308,9],[320,6],[327,6],[338,15],[356,6],[364,15],[380,12],[394,2]]},"803":{"position":[[0,4],[5,13],[19,9],[31,10],[42,1],[45,4],[50,7],[61,4],[66,14],[81,9],[93,11],[105,1],[107,4],[112,14],[145,4],[150,18],[169,1],[171,13],[186,4],[191,4],[196,7],[205,4],[210,7],[220,6],[227,4],[232,4],[237,4],[242,7],[251,4],[256,7],[266,6],[273,4],[278,11],[290,4],[295,1],[297,4],[302,14],[318,1],[321,4],[326,7],[337,1],[339,10],[350,1],[353,4],[358,9],[368,1],[371,1]]},"807":{"position":[[0,3],[34,2],[49,3],[95,4]]},"810":{"position":[[5,4],[10,6],[17,9],[28,3],[34,5],[50,8],[59,5],[105,2],[124,9],[138,11]]},"815":{"position":[[16,4],[21,13],[35,9],[47,3],[51,6],[58,7],[67,5],[86,4],[91,17],[109,6],[118,4],[124,1],[127,17],[146,3],[150,6],[157,7],[166,5],[174,3],[178,6],[191,2],[201,1],[205,6],[213,6],[220,3],[237,4],[242,13],[256,6],[265,4],[271,1],[274,13],[289,3],[293,6],[300,7],[309,5],[317,3],[321,6],[334,2],[344,1],[348,6],[356,6],[363,3],[386,4],[391,16],[408,6],[417,6],[424,13],[440,4],[446,1],[449,16],[467,14],[482,6],[489,7],[498,5],[506,6],[513,1],[515,6],[522,3],[526,6]]},"817":{"position":[[19,4],[24,13],[38,6],[47,4],[53,1],[56,13],[71,3],[75,6],[82,7],[91,5],[99,3],[103,6],[116,2],[127,1],[131,6],[139,6],[146,3],[160,4],[165,4],[174,9],[188,16],[205,6],[214,13],[231,9],[241,14],[256,3],[260,2]]},"820":{"position":[[0,4],[5,11],[17,3],[21,5],[29,10],[40,11],[54,4],[59,6],[80,4],[85,14],[100,11],[112,11],[125,6],[132,7],[141,5],[149,6],[156,11],[170,4],[175,10],[187,3],[191,6],[204,2],[214,1],[218,6],[226,4],[231,6],[239,3],[243,6],[256,2],[266,1],[270,6],[278,7],[287,6],[294,3],[298,6],[319,6],[326,3],[348,14]]},"822":{"position":[[10,4],[15,13],[29,9],[41,3],[45,6],[52,7],[61,5],[83,4],[88,14],[103,6],[112,7],[120,3],[124,6],[131,13],[147,4],[153,1],[156,14],[172,8],[181,4],[186,6],[194,6],[201,13],[218,1],[220,7],[228,4],[236,6],[245,4],[251,1],[254,14],[270,7],[278,4],[283,6],[291,6],[298,7],[307,5],[315,2],[318,6],[326,2],[332,1],[334,7],[342,4],[349,2],[354,6],[361,6],[368,3],[372,6],[382,6],[389,3],[393,6]]},"825":{"position":[[0,4],[5,6],[12,6],[21,4],[26,6],[33,4],[38,3],[42,7],[50,4],[55,8],[66,4],[71,6],[78,4],[84,6],[92,4],[97,8],[106,4],[111,6],[119,6],[128,6],[135,4],[140,1],[143,6],[153,1],[155,4],[162,4],[171,4],[176,8],[185,4],[190,3],[195,6],[204,6],[211,4],[216,1],[219,6],[229,1],[231,4],[238,4],[247,4],[252,9],[262,4],[270,6],[279,6],[288,1],[294,6],[302,4],[309,9],[321,4],[327,4],[333,7],[342,2],[347,4],[352,6],[362,3],[366,1],[369,3],[376,5],[382,4],[389,3],[393,1],[398,6],[405,1]]},"827":{"position":[[0,4],[5,7],[13,4],[18,4],[23,14],[40,4],[45,7],[54,4],[59,17],[77,4],[82,7],[91,7],[101,6],[108,4],[113,1],[115,4],[120,14],[136,1],[139,4],[144,7],[155,3],[159,6],[174,1],[177,1],[181,1],[183,6],[191,1],[193,3],[197,4],[203,4],[208,1],[211,1],[214,3],[218,6],[233,1],[236,1],[240,1],[242,6],[250,1],[252,3],[256,4],[266,4],[271,14],[286,4],[291,7],[300,7],[310,6],[317,4],[322,1],[324,4],[329,14],[345,1],[348,4],[353,7],[364,2],[367,1],[369,6],[376,3],[381,13],[405,4],[410,5],[416,1],[426,4],[431,18],[451,6],[460,4],[465,1],[468,1]]},"829":{"position":[[41,5],[47,7],[55,5],[87,3],[94,3]]},"833":{"position":[[0,1],[2,1],[4,1],[22,6],[41,4],[46,6],[53,9],[65,3],[69,5],[75,6],[83,7],[91,6],[99,5],[105,5],[113,5],[121,1],[123,1],[125,1],[148,13],[170,4],[175,13],[189,6],[222,4],[227,16],[247,13],[263,6],[271,13],[289,4],[295,1],[298,13],[313,3],[317,5],[323,6],[331,7],[339,6],[347,5],[355,1],[358,3],[365,3],[369,6],[379,1],[383,1],[385,1],[389,5],[396,7],[405,6],[412,3],[418,4],[424,1],[427,13],[442,5],[450,5],[473,6],[480,3],[496,10],[514,4],[519,10],[530,6],[539,4],[545,2],[548,4],[555,4],[560,13],[574,8],[583,6],[593,10],[605,5],[614,4],[620,3],[627,2],[630,8],[639,8],[649,2],[652,8],[652,1],[654,6],[661,2],[664,8],[664,1],[666,6],[673,2],[676,8],[676,1],[678,6],[686,4],[692,2],[695,3],[702,3],[708,6],[715,3],[720,3],[726,6],[734,10],[745,4],[751,4],[758,3],[764,4],[770,1],[773,10],[785,3],[789,5],[795,6],[803,7],[811,6],[819,5],[827,1],[830,3],[837,3],[841,7],[849,1],[851,4],[860,1],[864,1],[867,1],[869,1],[873,4],[878,3],[884,6],[892,4],[897,2],[900,2],[903,2],[906,2],[909,2],[915,5],[922,7],[931,6],[938,3],[944,4],[950,1],[953,10],[965,5],[973,5],[981,6],[988,1],[990,4],[995,5]]},"835":{"position":[[3,15],[28,4],[33,15],[49,6],[58,7],[68,6],[77,4],[82,18],[101,7],[112,6],[121,15],[139,6],[147,15],[163,7],[172,7],[183,4],[189,1],[192,15],[209,3],[213,5],[219,6],[227,7],[235,6],[243,5],[251,3],[255,1],[258,6],[268,5],[274,1],[276,7],[286,2],[289,3],[296,6],[303,3],[307,5],[314,7],[324,3],[331,3],[337,6],[344,3],[352,6],[359,3],[365,4],[371,1],[374,15],[391,5],[399,5],[407,3],[411,1],[414,6],[424,5],[430,1],[432,7],[442,2],[445,3],[452,6],[459,5],[468,3],[475,3],[481,6],[488,3],[496,6],[503,3]]},"837":{"position":[[3,10],[21,4],[26,10],[37,6],[44,5],[52,13],[66,10],[80,7],[89,10],[100,10],[114,4],[130,13],[149,12],[167,4],[172,12],[185,6],[194,4],[199,10],[210,8],[219,6],[242,19],[272,4],[277,19],[297,6],[304,12],[319,6],[327,5],[336,6],[343,6],[350,4],[357,4],[362,13],[377,6],[384,16],[404,3],[408,4],[413,10],[425,6],[432,13],[446,6],[453,8],[463,7],[472,6],[479,3],[484,3],[488,6],[506,1],[510,6],[517,4]]},"839":{"position":[[32,13],[53,4],[58,13],[72,6],[81,8],[90,6],[97,6],[105,4],[110,6],[119,4],[124,16],[141,8],[150,6],[159,13],[175,6],[183,13],[198,8],[208,8],[218,6],[227,4],[232,6],[239,7],[248,1],[252,4],[257,6],[270,4],[276,1],[279,13],[294,3],[298,5],[304,6],[312,7],[320,6],[328,5],[336,4],[344,3],[348,6],[355,6],[364,5],[372,5],[380,7],[390,7],[400,4],[407,4],[412,3],[418,6],[425,4],[430,7],[442,8],[452,1],[457,4],[462,7],[470,4],[476,4],[482,3],[489,1],[491,6],[498,4],[503,1],[505,8],[516,11],[528,4],[535,5],[541,9],[551,8],[562,2],[565,3],[572,3],[578,6],[585,3],[591,5],[597,4],[602,4],[607,5],[615,2],[618,4],[623,10],[637,3],[643,6],[650,3],[654,6],[677,1],[681,4],[686,10],[700,6],[707,3],[713,4],[719,1],[722,13],[737,5],[745,5],[770,6],[777,3]]},"841":{"position":[[0,4],[5,4],[26,13],[43,16],[73,10],[85,3],[92,13],[107,3],[111,3],[117,2],[120,3],[127,3],[133,5],[139,3],[157,15],[176,18],[195,13],[210,10],[230,15],[246,3],[251,4],[268,15],[284,3],[289,4],[308,15],[324,3],[329,5],[359,2],[362,3],[369,15],[385,5],[394,3],[401,3],[407,3],[411,6],[430,1],[432,1],[436,3],[455,13],[472,16],[490,4],[497,3],[501,6],[508,7],[516,3],[520,3],[526,14],[544,18],[563,13],[578,10],[590,13],[605,14],[620,3],[625,4],[653,14],[668,5]]},"843":{"position":[[0,3],[18,2],[33,3],[52,3]]},"845":{"position":[[7,3],[52,3]]},"847":{"position":[[7,3],[13,6],[20,14],[35,9],[80,3],[86,4],[91,6],[98,9],[167,3],[173,6],[180,12],[193,9],[246,3],[252,9],[262,11],[274,9],[327,3],[333,10],[344,9],[354,9]]},"849":{"position":[[62,3],[66,2],[69,7],[115,3],[121,3],[125,1],[127,6],[134,8],[167,4],[174,4],[179,2],[182,6],[190,6],[217,5],[225,3],[229,4],[234,1],[236,5],[242,4],[247,2]]},"854":{"position":[[0,3],[30,3],[81,2],[84,3],[98,6],[112,3],[131,4],[139,10],[150,6],[159,7],[173,10],[184,3],[188,7]]},"857":{"position":[[7,6],[14,14],[29,9],[40,3],[46,5],[62,6],[69,1],[72,6],[133,2],[148,6],[155,9]]},"865":{"position":[[5,3],[12,11],[31,4],[36,11],[48,6],[57,2],[61,3],[65,2],[70,4],[76,2],[80,11],[93,10],[104,4],[109,4],[115,5],[133,1],[136,3],[143,2],[146,2],[149,4],[155,6],[162,4],[167,5],[179,6],[194,6],[201,3],[207,4],[213,2],[217,11],[230,16],[247,4],[252,4],[258,5],[278,6],[285,9],[295,4],[300,5],[308,7],[320,7],[328,2],[331,3],[335,8],[349,4],[355,2],[359,11],[372,14],[392,4],[398,5],[419,4],[425,3],[432,2],[435,2],[438,5],[445,6],[454,4],[459,5],[475,4],[484,6],[491,10],[503,3]]},"867":{"position":[[10,4],[15,14],[30,6],[39,2],[43,3],[47,2],[52,4],[58,2],[62,14],[78,6],[85,4],[90,4],[96,5],[104,1],[107,3],[114,2],[117,2],[120,4],[126,6],[133,4],[138,5],[150,6],[165,6],[172,3],[178,4],[184,2],[188,14],[204,6],[216,4],[222,5],[231,4],[237,3],[244,2],[247,2],[250,5],[257,6],[266,4],[271,5],[287,4],[298,6],[305,5],[312,3],[328,4],[333,12],[346,6],[355,10],[366,6],[375,4],[381,2],[385,12],[399,16],[416,4],[421,4],[427,5],[435,6],[442,9],[452,4],[457,5],[465,7],[477,7],[485,2],[488,3],[492,8],[516,4],[521,15],[537,6],[546,8],[556,14],[573,4],[579,2],[583,15],[600,18],[624,4],[630,5],[639,5],[646,3],[653,2],[656,8],[665,6],[691,6],[698,10],[710,3],[725,11]]},"870":{"position":[[11,4],[16,10],[27,9],[39,6],[46,4],[51,4],[57,5],[63,7],[71,2],[74,3],[81,4],[87,5],[96,4],[101,11],[113,9],[125,4],[130,2],[134,7],[143,4],[148,6],[156,5]]},"872":{"position":[[0,4],[5,11],[17,6],[26,4],[31,14],[46,5],[52,12],[65,6],[72,15],[90,4],[96,2],[100,11],[113,15],[129,4],[134,4],[140,5],[148,2],[151,3],[158,2],[161,4],[166,6],[173,4],[180,3],[187,3],[193,6],[200,3],[206,6],[213,2],[216,5],[222,16],[239,4]]},"874":{"position":[[17,4],[22,15],[38,4],[45,4],[52,4],[58,5],[70,1],[81,1],[92,1],[105,1],[136,4],[141,16],[158,4],[165,4],[171,5],[180,4],[185,13],[199,4],[206,4],[213,4],[219,5],[229,4],[234,8],[243,4],[248,4],[254,5],[263,4],[268,17],[286,4],[291,4],[297,5]]},"877":{"position":[[50,29]]},"881":{"position":[[0,3],[20,2],[40,3],[58,3],[70,3]]},"884":{"position":[[52,2]]},"887":{"position":[[0,7],[8,4],[13,6],[21,3],[32,4],[37,5],[43,9],[55,4],[71,4],[76,6],[83,6],[92,4],[98,1],[100,6],[108,4],[117,3],[121,7],[130,7],[138,6],[149,4],[154,6],[161,6],[170,4],[176,1],[178,6],[186,4],[195,3],[199,7],[208,7],[216,6],[235,4],[240,12],[253,9],[263,6],[271,5],[279,6],[286,9],[298,4],[304,6],[313,6],[320,6],[329,4],[335,6],[344,6],[351,6],[360,7],[369,6],[376,3],[384,4],[389,4],[398,2],[404,12],[418,6],[427,2],[433,12],[447,6],[456,2],[459,4],[466,2],[469,4]]},"889":{"position":[[8,4],[13,4],[18,9],[30,4],[37,4],[43,5],[49,7],[62,4],[68,5],[87,4],[92,7],[100,7],[108,6],[116,4],[121,6],[130,4],[136,5],[145,6],[152,7],[162,4],[168,3],[174,6],[182,7],[190,4],[196,4],[203,3],[207,4],[213,4],[220,6],[228,8],[237,4],[243,4],[250,3],[254,4],[260,4],[267,6],[275,8],[284,3],[289,4],[296,3],[300,7],[309,6],[316,3],[321,3],[325,6],[333,11],[345,7],[367,4],[372,4],[381,4],[387,1],[392,7],[401,4],[409,5],[417,3],[421,7],[429,3],[435,4],[440,4],[447,4],[453,3]]},"891":{"position":[[35,3]]},"894":{"position":[[0,7],[8,4],[13,6],[21,3],[32,4],[37,11],[49,9],[61,7],[79,4],[84,14],[99,6],[108,4],[114,1],[116,14],[132,7],[144,3],[148,7],[157,5],[163,9],[177,4],[182,17],[200,6],[209,4],[215,1],[217,17],[236,7],[248,3],[252,7],[261,8],[270,9],[292,4],[297,9],[307,9],[319,15],[337,11],[359,4],[364,12],[377,6],[386,4],[392,1],[394,12],[408,15],[426,11],[440,6],[447,14],[466,4],[471,15],[487,6],[496,4],[502,1],[504,15],[521,15],[539,11],[553,6],[560,17],[582,4],[587,4],[596,3],[600,7],[608,9],[618,7],[628,12],[643,4],[651,7],[659,15],[677,4],[682,7],[692,7],[702,15],[720,4],[727,7],[735,15],[753,4],[758,7]]},"896":{"position":[[8,4],[13,6],[20,9],[32,3],[36,5],[42,6],[50,3],[54,6],[72,4],[77,13],[91,9],[103,6],[112,6],[131,4],[136,10],[147,6],[156,4],[161,6],[170,4],[176,1],[179,10],[191,3],[195,5],[202,3],[206,6],[228,4],[233,17],[251,6],[260,4],[265,6],[274,4],[280,1],[283,17],[302,6],[311,6],[320,6],[328,10],[339,4],[345,1],[347,4],[366,4],[371,13],[385,6],[394,4],[400,1],[403,13],[418,3],[422,5],[429,3],[433,6],[443,3],[447,6],[457,1],[461,1],[463,1],[467,5],[474,3],[481,4],[486,20],[507,6],[516,4],[522,1],[525,20],[547,6],[556,6],[565,6],[573,13],[599,4],[604,16],[621,3],[625,6],[633,13],[649,2],[652,3],[660,10],[674,6],[682,17],[700,4],[708,3],[712,3],[716,3],[720,3],[728,6],[736,20],[761,4],[766,4],[775,7],[786,16],[803,2],[806,6],[814,7],[814,3],[818,3],[825,6],[835,7],[843,6],[852,6],[859,3],[864,4],[872,11],[884,7]]},"901":{"position":[[0,7],[8,4],[13,6],[21,3],[35,4],[40,6],[47,9],[59,5],[69,4],[74,7],[82,9],[94,4],[106,7],[117,4],[122,13],[136,6],[145,4],[151,13],[166,5],[176,3],[180,7],[189,7],[197,6],[208,4],[213,14],[228,6],[237,4],[243,14],[259,4],[268,3],[272,7],[281,7],[289,7],[304,3],[311,4],[316,9],[326,6],[335,4],[341,9],[352,5],[362,3],[366,7],[375,3],[379,6],[390,4],[395,10],[406,6],[415,4],[421,10],[433,4],[442,3],[446,7],[455,3],[459,7],[481,4],[486,10],[497,9],[509,12],[524,6],[531,13],[547,7],[565,4],[570,14],[585,6],[594,4],[600,14],[616,12],[631,6],[640,6],[647,13],[665,4],[671,14],[687,13],[703,7],[713,6],[720,14],[739,4],[744,10],[755,6],[764,4],[770,10],[782,12],[797,6],[806,6],[813,9],[827,4],[833,10],[845,13],[861,7],[871,6],[878,10],[899,4],[904,4],[913,3],[917,7],[925,10],[936,7],[946,14],[963,7],[971,12],[986,5],[994,7],[1002,13],[1018,4],[1025,7],[1035,10],[1048,7],[1056,12],[1071,5],[1079,7],[1087,13],[1103,4]]},"905":{"position":[[0,7],[8,4],[13,6],[21,3],[26,4],[31,6],[38,9],[50,5],[60,4],[65,3],[69,6],[78,4],[84,3],[89,5],[99,3],[103,7],[112,4],[122,4],[127,3],[131,6],[140,4],[146,3],[151,5],[161,3],[165,7],[174,4],[184,3],[188,14],[205,4],[210,3],[214,6],[221,4],[228,6],[236,4],[241,14],[256,4],[261,6],[269,7],[277,4],[284,6],[294,14],[309,4],[317,7],[327,4],[332,9],[342,4],[347,6],[355,6],[364,2],[367,1],[370,2],[376,14],[391,4],[398,2],[403,6],[410,1],[416,6],[423,3],[429,4],[434,4],[443,14],[459,3],[465,4],[472,6],[481,6],[488,3],[497,14],[513,3],[519,4],[526,6],[535,6],[542,3],[551,9],[562,3],[568,5],[576,9],[587,3],[593,5]]},"909":{"position":[[30,2]]},"914":{"position":[[2,2]]},"916":{"position":[[10,5],[20,4],[25,11],[40,6],[48,5]]},"918":{"position":[[20,5],[44,5],[67,4],[72,9],[82,6],[91,3],[95,5],[103,4],[109,1],[112,9],[123,2],[137,1],[139,3],[145,6],[152,3],[157,9],[167,4],[172,5]]},"920":{"position":[[2,2],[7,4],[46,4]]},"922":{"position":[[0,1],[22,9],[45,4],[56,4],[61,8],[70,1],[73,1],[75,3],[82,4],[87,3],[93,6],[103,4],[108,4],[113,3],[118,2],[121,4],[130,6],[140,1],[144,1],[146,5],[152,6],[164,6],[171,6],[180,1],[215,3],[225,4],[240,4],[245,8],[254,1],[256,3],[263,4],[268,3],[274,3],[281,4],[286,4],[291,3],[296,2],[299,4],[308,3],[312,1],[317,1],[320,1],[324,1],[327,1],[333,3],[340,1],[344,5],[350,3],[359,6],[366,3],[372,1],[403,4],[408,6],[418,4],[426,4],[431,4],[436,6],[446,2],[449,4],[466,4],[474,6],[491,4]]},"924":{"position":[[38,4],[66,4],[71,2]]},"926":{"position":[[10,9],[20,6],[28,7],[36,7],[45,9],[55,8],[64,2],[71,2],[74,3],[95,2],[98,3],[102,7],[110,3],[114,6],[121,3],[127,2],[130,3],[134,7],[142,5],[150,7],[158,2],[161,6],[176,2],[179,3],[189,2],[192,3],[196,4],[204,7],[223,7],[231,3]]},"928":{"position":[[2,2],[11,9],[34,4],[41,6]]},"930":{"position":[[0,3],[4,3],[11,1],[13,3],[17,1],[20,1],[23,1],[26,5],[33,2],[39,9],[51,3],[58,1],[60,3],[65,2],[70,4],[84,5],[100,2],[105,5]]},"932":{"position":[[19,2],[25,4],[30,4],[35,6],[45,2],[51,6]]},"934":{"position":[[0,2],[7,2],[19,2],[22,1],[28,3],[34,1],[38,1],[42,7],[50,1],[52,1],[63,1],[69,3],[74,2],[77,1],[81,1],[85,7],[93,1],[95,1],[104,4],[109,2],[114,4]]},"937":{"position":[[0,6],[13,8],[22,4],[38,4],[53,4],[60,3],[64,6],[71,9],[83,7],[91,4],[96,6],[106,8],[115,4],[122,3],[129,4],[134,4],[143,8],[158,4],[166,5],[175,3],[181,2],[186,3],[190,6],[197,3],[201,6],[208,9],[220,3],[227,4],[232,9],[244,4],[249,8],[261,6],[269,2],[272,3],[279,3],[285,3],[289,7],[298,5],[307,3],[312,6],[321,3],[325,7],[334,4],[342,6],[350,4],[358,6],[367,3],[371,7],[380,3],[387,6],[395,3],[402,7],[464,4],[476,4]]},"940":{"position":[[4,2],[7,3],[11,6],[18,3],[22,7],[30,5],[40,7],[48,4],[53,6],[63,3],[69,6],[76,3],[80,7],[88,5],[97,4],[102,4],[111,8],[126,4],[134,5],[143,3],[149,2],[154,2],[158,5],[164,5],[170,8],[182,3],[186,7],[195,7],[203,4],[208,4],[215,6],[224,2],[227,5],[233,3],[237,8],[248,4],[255,6],[266,3],[270,7],[279,4],[284,5],[290,6],[301,4],[308,3],[312,7],[321,4],[326,5],[332,4],[337,3],[341,5],[351,4],[359,5],[365,3],[369,8],[380,4],[387,3],[394,5],[400,3],[404,8],[415,3],[421,3],[427,3],[431,7],[440,4],[448,4],[453,6],[463,3],[467,7],[476,3],[483,3]]},"942":{"position":[[17,4],[25,8]]},"944":{"position":[[4,2],[7,3],[11,6],[18,3],[22,4],[27,8],[36,2],[43,7],[51,4],[56,6],[66,3],[71,8],[81,6],[88,3],[92,4],[97,8],[106,2],[112,4],[117,4],[126,3],[130,4],[137,8],[146,35],[182,8],[197,4],[205,5],[214,3],[220,2],[225,3],[229,6],[236,3],[240,6],[247,9],[259,4],[264,9],[276,4],[281,8],[293,6],[301,3],[305,7],[314,4],[322,6],[330,4],[338,3],[342,7],[351,3],[358,6],[366,3]]},"946":{"position":[[9,8],[18,4],[32,4],[42,5],[55,8],[64,4]]},"948":{"position":[[4,2],[7,3],[11,6],[18,3],[22,5],[28,10],[43,7],[51,4],[56,6],[66,3],[72,6],[79,3],[83,5],[89,10],[103,4],[108,4],[117,8],[131,4],[139,4],[147,5],[156,3],[162,2],[168,4],[174,1],[179,10],[190,9],[200,8],[211,4],[218,3],[223,1],[228,10],[239,6],[246,8],[257,3],[263,3],[267,7],[276,4],[284,4],[290,3],[294,7],[303,3],[310,3]]},"950":{"position":[[11,4],[26,4],[38,4],[51,5]]},"952":{"position":[[13,8],[22,4],[30,4],[59,5],[68,4],[90,4],[95,4],[100,8],[109,2],[116,4],[136,4],[147,5],[153,10],[168,4],[180,4]]},"954":{"position":[[4,4],[19,5],[31,4],[41,4],[46,8],[55,2],[62,4],[77,5],[83,10],[107,8],[116,4],[138,4]]},"957":{"position":[[4,2],[40,7],[56,3],[123,6],[130,3],[152,3],[160,7]]},"959":{"position":[[2,7],[24,7],[32,4],[45,6],[56,7],[64,5],[77,7]]},"961":{"position":[[0,7],[8,4],[13,6],[23,3],[29,7],[40,4],[45,4],[54,3],[58,3],[62,3],[68,2],[71,8],[83,7],[91,6],[98,3],[103,9],[116,7],[124,7],[132,3],[137,3],[141,7],[150,4],[158,8],[171,3],[175,3],[179,7],[188,5],[197,9],[211,2],[214,8],[225,7],[233,6],[241,3],[246,9],[258,7],[266,7],[275,3],[280,3],[284,7],[293,5],[299,4],[307,8],[321,3],[325,3],[329,7],[338,5],[344,5],[353,9],[367,12]]},"963":{"position":[[16,7],[24,5],[38,6],[52,4],[59,7],[67,4],[72,6],[82,3],[88,7],[99,4],[104,4],[113,3],[117,3],[121,3],[127,2],[150,9],[162,7],[170,5],[180,3],[186,9],[199,7],[207,7],[216,3],[227,9],[239,7],[247,5],[257,3],[263,9],[276,9],[286,4],[326,7],[334,5],[349,4],[375,2],[378,9],[388,6],[399,9],[409,6],[416,3],[423,3],[427,7],[436,8],[445,5],[454,3],[462,3]]},"966":{"position":[[0,7],[8,4],[13,6],[23,3],[29,7],[40,4],[45,6],[52,6],[61,4],[66,6],[73,3],[77,3],[83,4],[88,4],[97,1],[102,6],[109,4],[116,5],[124,3],[129,2],[133,8],[145,7],[153,6],[160,1],[166,8],[175,7],[183,3],[187,6],[194,2],[197,6],[204,2],[207,3],[211,6],[222,2],[225,6],[232,2],[235,3],[239,4],[244,2],[247,1],[249,2],[252,3],[256,1],[258,6],[266,3],[270,1],[275,1],[278,1],[282,8],[291,8],[303,1],[309,5],[318,8],[327,5],[333,1],[336,3],[340,6],[348,5],[354,4],[361,1],[364,4],[371,1],[373,1],[377,5],[383,4],[389,5],[395,4]]},"968":{"position":[[22,4],[35,7],[43,4],[48,6],[58,3],[64,7],[75,4],[80,4],[85,6],[94,2],[97,3],[102,4],[108,2],[112,4],[118,2],[123,4],[128,6],[136,4],[142,4],[151,4],[156,4],[165,8],[177,7],[185,6],[192,4],[200,3],[204,1],[209,1],[212,1],[216,8],[225,8],[237,1],[243,5],[252,8],[261,5],[267,1],[280,3],[284,6],[292,5],[298,3],[304,1],[306,1],[310,5],[316,3],[321,3],[328,5],[334,3],[338,3],[343,4],[350,3],[354,6],[362,5],[370,1],[373,4],[378,3],[384,1],[386,1],[390,5],[396,4],[402,3]]},"970":{"position":[[6,7],[14,4],[19,6],[29,3],[35,7],[46,4],[51,10],[62,6],[71,4],[77,1],[79,10],[91,3],[95,1],[98,1],[100,3],[105,3],[111,6],[118,1],[122,1],[126,4],[131,4],[140,4],[148,10],[161,6],[171,7],[179,7],[187,4],[193,12],[207,3],[213,4],[223,7],[231,5],[237,7],[245,7],[253,2],[258,7],[266,7],[274,2],[279,6],[289,6],[296,4],[301,4],[307,3],[311,7],[320,6],[330,6],[337,1],[340,3],[350,2],[361,7],[369,4],[374,6],[384,3],[390,7],[401,4],[406,4],[411,6],[420,4],[425,6],[434,4],[440,1],[442,4],[448,8],[461,3],[465,7],[474,5],[483,1],[485,4],[493,4],[498,4],[507,1],[512,4],[517,4],[524,5],[532,1],[537,7],[545,7],[553,1],[556,6],[566,1],[568,12],[582,8],[593,6],[600,4],[605,3],[617,5],[624,5]]},"972":{"position":[[29,2]]},"974":{"position":[[21,9],[35,6],[57,4],[62,8],[80,7]]},"977":{"position":[[2,6],[15,13],[35,15],[74,8],[83,4],[102,4],[169,4],[174,9],[186,4],[191,11]]},"980":{"position":[[0,6],[8,8],[17,4],[23,4],[28,4],[37,1],[42,6],[50,5],[58,2],[69,4],[75,3],[82,4],[87,7],[95,1],[106,3],[110,2],[113,6],[120,3],[126,4],[131,9],[141,4],[148,2]]},"982":{"position":[[0,4],[5,7],[13,6],[22,2],[25,3],[30,4],[36,2],[41,4],[46,6],[54,4],[60,4],[67,9],[77,4],[82,4],[88,4],[94,10],[94,7],[102,2],[105,9]]},"984":{"position":[[5,4],[10,9],[34,4],[51,4],[56,9],[79,4],[108,8],[120,4],[125,6],[132,6],[141,4],[146,6],[153,3],[157,3],[181,4],[187,1],[190,6],[198,13],[212,4],[219,4],[225,5],[233,3],[237,4],[242,6],[251,8],[260,6],[268,4],[274,9],[274,4],[279,4],[286,3],[290,3],[295,4],[301,3],[309,2],[312,3],[319,4],[324,9],[334,4],[341,4],[348,3],[355,3],[361,6],[368,3],[374,2],[377,4],[382,3],[388,1],[393,4],[398,3],[404,3],[410,6],[417,6],[424,3],[429,3],[433,4],[438,2],[441,7],[449,1],[451,3],[455,3]]},"986":{"position":[[0,4],[5,10],[16,4],[21,4],[26,4],[32,2],[35,10],[47,11],[64,4],[70,5],[79,6],[86,4],[91,7],[99,4],[104,4],[109,2],[113,6],[121,4],[126,2],[129,2]]},"988":{"position":[[0,4],[6,2],[10,10],[22,13],[36,4],[43,4],[49,5],[57,3],[61,1],[63,6],[70,2],[73,3],[80,4],[85,9],[95,4],[102,1],[106,3],[113,3],[119,6],[126,3],[132,1],[135,3],[142,4],[147,5],[154,4],[159,2],[162,2],[167,1],[170,2],[173,3],[180,3],[186,6],[193,3],[200,2],[205,10],[216,1],[219,6],[226,3]]},"991":{"position":[[0,4],[5,5],[11,6],[20,2],[23,3],[28,4],[34,2],[39,8],[50,7],[59,4],[65,8],[76,4],[81,10],[93,4],[99,4]]},"993":{"position":[[0,4],[5,5],[11,9],[23,4],[30,7],[40,4],[45,6],[52,6],[61,6],[68,7],[77,4],[83,6],[94,4],[100,1],[102,6],[110,4],[117,7],[127,6],[134,4],[139,2],[144,1],[146,6],[155,1],[157,6],[178,4],[184,1],[187,6],[195,11],[212,4],[218,5],[227,4],[232,5],[238,6],[245,6],[252,4],[257,7],[266,6],[275,4],[280,6],[288,4],[294,4],[302,5],[311,4],[318,6],[327,5],[336,5],[343,1]]},"996":{"position":[[0,3],[4,10],[17,4],[22,4],[28,3],[33,4],[40,9],[54,6],[61,3],[65,5],[71,6],[84,4],[89,15],[105,1],[107,9],[123,4],[129,5],[138,3],[145,10],[156,3],[164,5],[170,6],[178,5],[184,10],[195,3],[199,3],[204,3],[208,5],[216,7],[227,4],[232,10],[243,3],[248,2],[251,3],[258,7],[266,6],[273,1],[277,3],[284,3],[290,6],[297,3],[302,3],[308,6],[315,3],[319,5],[328,3]]},"998":{"position":[[0,4],[5,8],[27,8],[44,8]]},"1001":{"position":[[0,4],[5,4],[10,6],[19,5],[25,3],[30,4],[36,5],[44,4],[50,4],[56,4],[62,4],[67,9],[84,9]]},"1003":{"position":[[0,4],[5,9],[15,4],[20,4],[25,4],[31,1],[34,9],[45,13],[59,1],[63,4],[69,5],[77,1],[82,7],[90,4],[95,6],[102,1],[112,2],[116,3],[123,4],[128,5],[134,4],[139,7],[148,1],[151,2],[154,3],[161,3],[167,6],[174,3],[181,1],[185,9],[195,2],[199,6],[206,3]]},"1006":{"position":[[0,4],[5,26],[5,14],[20,11],[32,1],[35,7],[43,1],[48,2],[54,10],[65,4],[70,4],[75,4],[81,1],[84,1],[87,1],[90,1],[93,1],[96,1],[99,4],[104,3],[110,4],[116,3],[123,4],[128,7],[136,2],[140,6],[147,3],[151,1],[154,3],[159,6],[166,5],[172,1],[177,4],[182,2],[185,2],[191,6],[198,4],[207,4],[212,28],[212,14],[227,13],[241,1],[244,7],[252,1],[257,3],[261,2],[264,10],[275,3],[282,4],[287,9],[299,4],[306,4],[311,2],[314,2],[322,2],[326,6],[333,3],[337,1],[340,3],[345,6],[352,5],[358,1],[361,4],[367,4],[372,4],[377,2],[381,4]]},"1008":{"position":[[17,4],[28,9],[55,4],[60,7],[72,7],[80,9]]},"1010":{"position":[[0,7],[8,4],[13,6],[23,8],[32,4],[39,3],[45,4],[53,4],[58,10],[69,4],[74,4],[79,4],[85,2],[88,10],[100,11],[117,4],[123,5],[132,6],[139,4],[144,7],[152,4],[157,4],[162,2],[166,6],[174,4],[179,2],[182,2],[190,4],[196,2],[200,10],[212,13],[226,4],[233,4],[239,5],[247,3],[251,1],[253,6],[260,2],[263,3],[270,4],[275,9],[285,4],[292,1],[296,3],[303,3],[309,6],[316,3],[322,1],[325,3],[332,4],[337,5],[344,4],[349,2],[352,2],[357,1],[360,2],[363,3],[370,3],[376,6],[383,3],[390,2],[395,10],[406,1],[409,6],[416,3],[422,4],[427,5],[433,6],[442,4],[447,6],[455,4],[461,4],[468,9],[478,10],[490,4],[496,10],[496,5],[502,4],[511,4],[516,4],[525,5],[534,5],[541,4],[548,2],[551,10],[564,9],[575,10],[586,4],[591,3],[601,4],[607,1],[612,4],[617,7],[625,5],[632,3],[636,7],[644,6],[651,4],[663,4],[670,2],[673,10],[686,10],[686,5],[692,4],[699,4],[704,2],[707,2],[712,3],[716,8],[725,5],[731,1],[735,4],[740,9],[750,4],[757,8],[767,3],[771,6],[781,1],[783,1],[787,8],[801,4],[806,2],[809,10],[820,9],[830,4],[835,2],[838,2],[841,2],[844,2],[847,2],[851,4],[856,3],[863,6],[876,7],[884,3],[888,6],[898,8],[907,4],[914,6],[929,6],[952,4],[957,9],[967,4],[972,9],[982,4],[987,11],[999,4],[1004,11],[1026,4],[1033,4],[1072,4],[1078,4],[1104,6],[1124,4],[1129,6],[1136,6],[1145,5],[1151,6],[1163,9],[1178,6],[1185,4],[1190,9],[1200,3],[1204,6],[1212,6],[1221,6],[1228,6],[1235,5],[1242,3],[1252,11],[1267,4],[1272,9],[1285,4],[1291,1],[1293,6],[1301,11],[1316,9],[1329,5],[1340,2],[1343,1],[1345,5],[1362,6],[1371,6],[1381,3],[1391,6],[1398,3],[1403,3],[1407,6],[1416,6],[1426,3],[1435,11],[1450,4],[1455,9],[1468,4],[1474,1],[1476,6],[1484,11],[1501,4],[1507,5],[1516,6],[1525,4],[1532,6],[1543,3],[1552,13],[1569,4],[1574,11],[1589,4],[1595,1],[1598,6],[1606,13],[1620,9],[1630,4],[1635,9],[1648,5],[1655,5],[1663,2],[1666,1],[1671,3],[1677,6],[1684,6],[1691,3],[1696,6],[1703,9],[1713,4],[1718,3],[1722,6],[1751,5],[1767,4],[1772,5],[1778,6],[1791,5],[1799,6],[1812,6],[1819,9],[1831,5],[1838,1],[1847,1],[1854,5],[1882,6],[1895,4],[1900,9],[1936,6],[1944,9],[1964,3],[1968,3],[1972,6],[1979,2],[1982,3],[1989,9],[2000,3],[2006,3],[2013,3],[2019,6],[2026,3],[2032,1],[2034,5],[2042,3],[2046,6],[2053,3],[2062,13],[2079,4],[2084,11],[2099,4],[2105,1],[2108,6],[2116,13],[2130,4],[2137,4],[2143,5],[2151,2],[2154,1],[2159,3],[2165,6],[2172,6],[2179,3],[2184,6],[2191,9],[2201,4],[2206,3],[2210,6],[2221,3],[2225,3],[2229,6],[2236,2],[2239,3],[2246,4],[2251,9],[2261,4],[2268,3],[2274,3],[2281,3],[2287,6],[2294,3],[2300,1],[2302,5],[2310,3],[2314,6],[2321,3],[2330,3],[2347,4],[2353,1],[2355,6],[2363,3],[2369,6],[2378,6],[2385,1],[2387,5]]},"1013":{"position":[[0,7],[22,6],[36,4],[50,3]]},"1015":{"position":[[0,2],[3,3],[7,6],[14,3],[18,10],[29,7]]},"1018":{"position":[[0,7],[15,7],[23,11],[51,7],[59,4],[64,6],[74,3],[80,2],[85,6],[92,3],[96,10],[107,7],[118,3],[124,4],[131,7],[139,4],[145,4],[163,5],[170,1],[174,7],[183,5],[191,6],[200,3],[206,7],[214,4],[220,3],[237,3],[245,4],[250,4],[259,7],[267,5],[275,3],[279,6],[287,5],[294,1],[297,3],[301,3],[306,1],[308,5],[314,3],[319,1],[324,4],[331,3],[346,7],[356,4],[361,5],[369,3],[373,2]]},"1020":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[34,6],[41,3],[45,10],[56,7],[67,4],[72,4],[81,3],[88,7],[96,3],[101,7],[122,4],[130,3],[134,4],[140,4],[158,5],[165,1],[169,7],[178,5],[186,6],[195,3],[202,3],[206,4],[212,3],[229,3],[235,7],[243,9],[253,3],[257,5],[263,2],[266,4],[271,1],[277,3],[281,6],[289,5],[296,1],[299,3],[303,3],[308,1],[310,5],[316,3],[321,1],[326,4],[333,3],[348,7],[358,4],[363,5],[371,3],[375,2]]},"1022":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[34,6],[41,3],[45,10],[56,7],[67,4],[72,4],[81,3],[88,7],[96,3],[101,3],[132,5],[139,8],[151,3],[155,7],[164,5],[180,4],[188,8],[197,4],[203,4],[219,7],[228,5],[236,6],[255,3],[260,6],[270,3],[274,7],[283,3],[296,7],[307,6],[314,4],[320,7],[339,7],[348,7],[359,6],[368,6],[375,7],[383,9],[393,3],[397,5],[403,2],[406,4],[411,1],[419,4],[424,8],[433,11],[448,3],[452,6],[460,5],[468,1],[471,1],[476,4],[482,4],[487,6],[494,11],[509,3],[513,7],[522,7],[543,3],[547,5],[555,4],[560,3],[566,3],[570,3],[576,7],[585,3],[589,3]]},"1024":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[34,6],[41,3],[45,10],[56,7],[67,4],[72,4],[81,3],[88,7],[96,3],[101,3],[105,7],[128,4],[136,3],[140,4],[146,4],[162,5],[169,9],[169,4],[174,4],[181,7],[190,9],[202,6],[211,7],[219,9],[229,3],[233,5],[239,2],[242,4],[247,1],[253,3],[257,7],[266,5],[276,4],[290,6],[297,9],[297,4],[302,4],[307,7],[317,3],[321,7]]},"1026":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[34,6],[41,3],[45,10],[56,7],[67,4],[72,4],[81,3],[88,7],[96,3],[101,4],[106,4],[124,7],[135,3],[139,4],[145,7],[166,5],[173,1],[177,4],[184,7],[192,9],[202,3],[206,5],[212,2],[215,4],[220,1],[226,2],[230,7],[240,3],[244,7],[253,7],[261,4],[266,7],[278,4],[285,3],[289,7],[298,7],[306,4],[311,8],[334,4],[339,4],[346,7],[356,4],[361,4],[367,1]]},"1028":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[34,6],[41,3],[45,10],[56,7],[67,4],[72,4],[81,3],[88,7],[96,3],[101,4],[106,7],[129,5],[138,3],[142,4],[148,5],[166,7],[176,7],[184,9],[194,3],[198,5],[204,2],[207,4],[212,1],[218,3],[222,7],[231,5],[241,5],[258,4],[263,7],[273,5],[279,5],[287,5],[293,6],[302,5],[308,6]]},"1031":{"position":[[5,7],[13,6],[36,7],[44,4],[49,6],[59,3],[65,2],[70,6],[77,3],[81,10],[92,7],[103,4],[108,4],[117,3],[124,7],[132,3],[137,6],[144,6],[170,4],[178,3],[182,4],[188,4],[206,6],[215,3],[219,6],[226,4],[231,1],[234,7],[242,12],[256,5],[264,3],[268,7],[288,4],[294,6],[301,3],[308,7],[316,9],[326,3],[330,5],[336,2],[339,4],[344,1]]},"1033":{"position":[[0,7],[37,3]]},"1035":{"position":[[23,3],[68,7]]},"1038":{"position":[[0,9],[12,2]]},"1040":{"position":[[0,2],[3,3],[7,6],[14,3],[18,2],[21,10],[32,9],[42,3]]},"1042":{"position":[[0,7],[8,4],[13,6],[23,3],[29,6],[36,3],[40,2],[43,10],[54,9],[64,3],[71,4],[76,4],[81,6],[90,4],[95,6],[103,8],[113,8],[124,3],[128,3],[133,8],[143,3],[147,2],[150,3],[154,2],[159,5],[165,6],[173,8],[183,8],[192,5],[202,4],[207,4],[216,8],[228,9],[238,3],[244,4],[252,4],[258,4],[268,3],[273,2],[277,5],[285,7],[293,5],[303,3],[310,8],[319,6],[326,4],[332,2],[335,3],[342,3],[348,3],[352,1],[355,3],[362,5],[368,3],[373,9],[383,16],[403,3],[407,7],[416,10],[427,5],[436,3],[445,4],[452,3],[456,7],[465,10],[476,6]]},"1044":{"position":[[6,8],[20,5],[37,3],[41,1],[48,1],[50,3],[54,1],[61,1],[63,3],[67,1],[84,3],[88,1],[105,3],[109,1],[118,1],[120,3],[131,3],[135,7],[149,8],[167,5],[179,8],[188,1],[195,1],[200,10],[211,1],[217,1],[222,8],[231,1],[237,1],[242,9],[258,9],[274,4],[286,4],[294,4],[306,4],[314,7],[329,8],[338,6],[358,6],[369,6],[381,8],[402,4],[414,4],[419,4],[431,4],[440,5],[450,5],[459,10],[477,5],[486,9],[504,11],[516,5],[527,5],[542,11],[554,5],[565,5],[578,8],[587,1],[594,1],[599,9],[621,4],[632,3]]},"1046":{"position":[[22,5],[30,4],[35,14],[50,2],[53,9],[63,10],[75,4],[82,6],[89,2],[92,5],[100,6],[113,5],[122,4],[127,4],[136,8],[148,9],[158,3],[164,8],[173,18],[193,5],[201,14],[217,4],[222,4],[227,6],[236,3],[240,6],[248,8],[258,5],[268,1],[273,4],[278,3],[284,5],[292,3],[299,8],[308,6],[315,1],[318,2],[321,3],[328,3],[334,3],[338,7],[347,10],[358,6],[368,3],[375,4],[382,3],[386,7],[395,10],[406,6]]},"1048":{"position":[[0,4],[5,7],[13,6],[22,4],[27,6],[35,8],[45,8],[56,7],[64,6],[72,8],[82,7],[94,4],[99,6],[106,6],[115,4],[120,6],[128,8],[138,8],[149,3],[153,3],[158,8],[168,3],[172,2],[177,7],[185,7],[194,8],[204,8],[217,8]]},"1050":{"position":[[0,2],[3,3],[10,3],[16,3],[20,1],[23,1],[28,5],[34,3],[39,9],[49,16],[69,3],[73,6],[81,5],[88,1],[90,6],[97,2],[102,1],[105,3],[109,1],[113,1],[115,5],[124,1],[126,3]]},"1052":{"position":[[0,9],[25,2],[44,3],[52,3],[61,3]]},"1055":{"position":[[0,6],[11,5]]},"1057":{"position":[[3,6],[50,6],[75,6],[83,8],[83,3],[87,4],[94,7],[104,8],[104,3],[108,4],[124,7],[178,5]]},"1060":{"position":[[0,4],[5,6],[13,4],[18,2],[21,8],[21,3],[25,4],[42,4],[47,2],[50,8],[50,3],[54,4],[68,5]]},"1062":{"position":[[0,4],[5,6],[13,4],[18,2],[21,8],[21,3],[25,4],[31,3],[35,4],[43,4],[48,2],[51,8],[51,3],[55,4],[67,3],[71,4]]},"1064":{"position":[[8,4],[13,5],[20,1],[23,4],[28,2],[31,8],[31,3],[35,4],[62,4],[71,6],[85,4],[90,5],[97,1],[99,4],[105,4],[111,4],[116,2],[119,8],[119,3],[123,4],[128,4],[133,4],[138,5],[145,1],[147,5],[154,3],[159,4],[164,2],[167,8],[167,3],[171,4],[176,3],[180,4],[185,5],[192,1],[194,4],[200,3],[205,4],[210,2],[213,8],[213,3],[217,4],[222,3],[226,4],[231,5],[238,1],[240,4],[246,3],[250,3],[255,4],[260,2],[263,8],[263,3],[267,4],[272,3],[276,3],[284,4],[290,3],[295,3],[302,3],[306,3],[409,4],[452,6],[471,4],[486,2],[489,3],[493,4],[517,4],[544,3],[604,3],[631,3],[669,3],[700,3],[723,3],[760,6],[795,3],[799,3],[811,3],[815,4],[829,3],[833,3],[850,3],[885,3],[889,3],[906,3],[929,3],[933,3],[937,1],[971,5],[996,3],[1002,4],[1025,3],[1029,3],[1046,3],[1050,3],[1073,6],[1086,4],[1093,2],[1150,6],[1167,4],[1172,2],[1176,3],[1180,4],[1186,4],[1191,2],[1194,8],[1194,3],[1198,4],[1203,3],[1208,4],[1213,2],[1217,3],[1221,6],[1221,3],[1225,2],[1228,5],[1234,3],[1238,8],[1247,2],[1250,1],[1253,4],[1258,2],[1261,8],[1261,3],[1265,4],[1270,3],[1274,6],[1274,3],[1278,2],[1281,5],[1287,3],[1292,4],[1297,2],[1301,3],[1305,6],[1305,3],[1309,2],[1312,5],[1318,3],[1322,4],[1327,2],[1330,1],[1333,4],[1338,2],[1341,8],[1341,3],[1345,4],[1350,3],[1354,6],[1354,3],[1358,2],[1361,5],[1367,3],[1375,6],[1385,4],[1390,6],[1398,4],[1403,2],[1406,8],[1406,3],[1410,4],[1416,3],[1420,4],[1438,6],[1454,4],[1459,2],[1462,8],[1462,3],[1466,4]]},"1067":{"position":[[17,6],[41,6],[77,4],[82,5],[89,3],[93,4],[99,3],[103,4],[108,5],[116,4],[122,3],[127,3],[131,3],[135,4],[140,5],[148,4],[154,4],[160,3],[164,4],[169,4],[174,5],[182,4],[188,3],[193,3],[197,3],[201,4],[206,6],[214,3]]},"1069":{"position":[[0,6],[68,6]]},"1073":{"position":[[21,6]]},"1075":{"position":[[5,6],[27,4],[47,6],[100,10],[113,10],[163,3],[169,4],[176,3],[219,6],[237,6],[279,6]]},"1077":{"position":[[0,6]]},"1080":{"position":[[0,6],[7,3],[11,1],[13,3],[17,4],[24,2],[45,4],[50,5],[67,7]]},"1082":{"position":[[0,3],[7,2],[26,2],[29,3],[33,6],[40,3],[44,1],[46,3],[50,4]]},"1085":{"position":[[0,6],[7,3],[11,1],[13,3],[17,4],[24,2],[45,4],[50,5],[67,7]]},"1087":{"position":[[0,3],[7,2],[26,2],[29,3],[33,6],[40,3],[44,1],[46,3],[50,4]]},"1090":{"position":[[0,7],[8,4],[13,6],[23,3],[29,6],[36,3],[40,1],[42,3],[46,4],[54,4],[59,4],[68,3],[75,4],[80,6],[89,3],[93,7],[107,2],[113,3],[118,4],[126,4],[131,7],[141,3],[145,7],[158,2],[164,4]]},"1092":{"position":[[0,1],[2,1],[4,1],[9,4],[14,4],[25,7],[33,4],[38,6],[48,3],[54,6],[61,3],[65,1],[67,3],[71,4],[79,4],[84,4],[93,2],[97,3],[104,4],[109,4],[115,4],[120,3],[126,4],[131,8],[131,1],[133,6],[141,1],[144,2],[147,3],[154,3],[160,3],[164,7],[183,3],[188,6],[197,5],[203,4],[208,5],[214,2],[218,3],[222,3],[227,3],[231,4],[236,1],[239,3],[246,4],[251,4],[256,2],[260,3],[268,2],[271,3],[278,3],[284,3],[288,7],[307,3],[312,6],[321,3],[325,7],[342,6],[349,3],[354,1]]},"1094":{"position":[[0,1],[2,1],[4,1],[13,7],[21,4],[26,6],[36,3],[42,6],[49,3],[53,1],[55,3],[59,4],[67,4],[72,4],[81,6],[93,3],[97,2],[101,4],[111,6],[119,2],[126,1],[130,3],[137,4],[142,4],[147,6],[155,4],[161,3],[166,2],[169,3],[176,3],[182,3],[186,7],[203,3]]},"1096":{"position":[[0,1],[2,1],[4,1],[12,7],[20,4],[25,6],[35,3],[41,6],[48,3],[52,1],[54,3],[58,4],[65,4],[73,4],[78,4],[87,3],[94,4],[99,6],[108,3],[112,7],[126,2],[132,3],[137,2],[140,4],[149,4],[154,5],[160,1],[164,4],[169,6],[177,4],[182,4],[187,3],[192,4],[197,7]]},"1098":{"position":[[0,1],[2,1],[4,1],[6,4],[17,7],[25,4],[30,6],[40,3],[46,2],[51,6],[58,3],[62,1],[64,3],[68,4],[75,6],[85,4],[90,4],[99,4],[105,3],[112,2],[115,8],[125,4],[130,3],[136,2],[139,6],[139,1],[141,4],[147,4],[153,2],[156,3],[163,3],[169,3],[173,7],[192,3],[197,6],[206,5],[212,4],[217,5],[225,2],[229,1],[234,4],[239,4],[246,4],[254,2],[257,4],[264,4],[270,3],[277,4],[282,4],[287,3],[291,4],[296,2],[303,1],[306,3],[310,4],[317,4],[322,9],[322,4],[327,4],[333,4],[338,10],[338,3],[342,6],[350,2],[353,3],[360,3],[366,3],[370,7],[379,4],[390,3],[395,6],[404,3],[408,7],[428,6],[436,6],[443,7],[452,4]]},"1100":{"position":[[3,7],[17,1],[19,3],[23,4],[69,5],[75,5],[81,7],[119,1],[121,3],[125,4],[133,7],[143,6],[151,6],[158,3],[162,1],[164,3],[168,4],[174,4],[179,4],[188,4],[193,6],[208,7],[216,6]]},"1102":{"position":[[0,7],[30,6],[37,3],[41,1],[43,3],[47,4],[55,7],[85,4],[90,4],[95,4],[100,6],[120,2],[130,2],[133,2],[136,3]]},"1104":{"position":[[5,6]]},"1107":{"position":[[0,7],[8,4],[13,6],[23,3],[29,6],[36,3],[40,1],[42,3],[46,4],[54,4],[59,4],[68,3],[75,4],[80,6],[89,3],[93,7],[107,2],[113,3],[118,4],[126,4],[131,7],[141,3],[145,7],[158,2],[164,4]]},"1109":{"position":[[0,1],[2,1],[4,1],[9,4],[14,4],[25,7],[33,4],[38,6],[48,3],[54,6],[61,3],[65,1],[67,3],[71,4],[79,4],[84,4],[93,2],[97,3],[104,4],[109,4],[115,4],[120,3],[126,4],[131,8],[131,1],[133,6],[141,1],[144,2],[147,3],[154,3],[160,3],[164,7],[183,3],[188,6],[197,5],[203,4],[208,5],[214,2],[218,3],[222,3],[227,3],[231,4],[236,1],[239,3],[246,4],[251,4],[256,2],[260,3],[268,2],[271,3],[278,3],[284,3],[288,7],[307,3],[312,6],[321,3],[325,7],[342,6],[349,3],[354,1]]},"1111":{"position":[[0,1],[2,1],[4,1],[13,7],[21,4],[26,6],[36,3],[42,6],[49,3],[53,1],[55,3],[59,4],[67,4],[72,4],[81,6],[93,3],[97,2],[101,4],[111,6],[119,2],[126,1],[130,3],[137,4],[142,4],[147,6],[155,4],[161,3],[166,2],[169,3],[176,3],[182,3],[186,7],[203,3]]},"1113":{"position":[[0,1],[2,1],[4,1],[12,7],[20,4],[25,6],[35,3],[41,6],[48,3],[52,1],[54,3],[58,4],[65,4],[73,4],[78,4],[87,3],[94,4],[99,6],[108,3],[112,7],[126,2],[132,3],[137,2],[140,4],[149,4],[154,5],[160,1],[164,4],[169,6],[177,4],[182,4],[187,3],[192,4],[197,7]]},"1115":{"position":[[0,1],[2,1],[4,1],[6,4],[17,7],[25,4],[30,6],[40,3],[46,2],[51,6],[58,3],[62,1],[64,3],[68,4],[75,6],[85,4],[90,4],[99,4],[105,3],[112,2],[115,8],[125,4],[130,3],[136,2],[139,6],[139,1],[141,4],[147,4],[153,2],[156,3],[163,3],[169,3],[173,7],[192,3],[197,6],[206,5],[212,4],[217,5],[225,2],[229,1],[234,4],[239,4],[246,4],[254,2],[257,4],[264,4],[270,3],[277,4],[282,4],[287,3],[291,4],[296,2],[303,1],[306,3],[310,4],[317,4],[322,9],[322,4],[327,4],[333,4],[338,10],[338,3],[342,6],[350,2],[353,3],[360,3],[366,3],[370,7],[379,4],[390,3],[395,6],[404,3],[408,7],[428,6],[436,6],[443,7],[452,4]]},"1117":{"position":[[3,7],[17,1],[19,3],[23,4],[69,5],[75,5],[81,7],[119,1],[121,3],[125,4],[133,7],[143,6],[151,6],[158,3],[162,1],[164,3],[168,4],[174,4],[179,4],[188,4],[193,6],[208,7],[216,6]]},"1119":{"position":[[0,7],[30,6],[37,3],[41,1],[43,3],[47,4],[55,7],[85,4],[90,4],[95,4],[100,6],[120,2],[130,2],[133,2],[136,3]]},"1121":{"position":[[5,6]]},"1124":{"position":[[0,3],[4,3],[8,8],[34,1],[36,1],[40,7],[58,3]]},"1126":{"position":[[0,3],[7,4],[12,8],[21,10],[43,7],[51,8],[62,6],[69,1],[72,5],[80,4],[94,3],[101,5]]},"1131":{"position":[[0,3],[4,7],[12,3]]},"1133":{"position":[[1,4]]},"1136":{"position":[[5,3],[18,3],[23,12],[23,4],[28,7],[47,3],[94,3],[99,3]]},"1138":{"position":[[4,1],[12,3],[17,3],[21,4],[26,4],[31,4],[40,1],[48,3],[53,3],[57,4],[62,4],[67,4],[72,4],[78,3],[83,3],[91,1],[99,3],[104,3],[108,4],[113,8],[113,3],[117,4],[122,8],[122,3],[126,4]]},"1140":{"position":[[7,1],[11,3],[17,3],[22,1],[24,3],[35,3],[41,6],[48,3],[54,3],[59,1],[62,3],[68,3]]},"1142":{"position":[[8,1],[10,5],[21,1],[23,3],[34,5],[41,4],[53,1],[55,8],[76,1],[78,4],[95,1],[97,4],[113,1],[115,5],[128,1],[130,4],[141,2],[144,9],[160,5],[166,8],[183,4],[188,6],[204,1],[206,4],[213,3]]},"1144":{"position":[[3,5],[32,3],[37,5],[43,9],[43,4],[48,4],[63,3],[68,5],[74,4],[79,1],[81,4],[97,3],[102,5],[108,4],[113,4],[118,2],[121,9],[139,3],[144,4],[149,11],[171,3],[176,6],[184,3]]},"1146":{"position":[[1,3],[6,5],[12,3],[24,3],[29,4],[34,6],[51,3],[56,4],[61,4],[76,3],[81,3],[85,3],[91,5],[106,3],[111,1],[113,3],[118,4],[133,2]]},"1148":{"position":[[1,3],[6,4],[11,9],[34,3],[39,5],[46,3],[62,3],[71,3],[76,1],[78,1],[81,3],[99,3],[104,3],[109,3],[115,4],[138,3],[143,4],[148,9],[158,5],[173,3],[178,4],[183,9],[193,6],[209,3],[214,4],[219,9],[229,6],[245,3],[250,1],[252,1],[255,2],[272,3],[277,1],[279,1],[282,2],[296,3],[301,5],[336,3],[345,2],[357,2],[367,2],[377,3],[384,2],[420,3],[424,2],[434,3],[438,3],[449,3],[456,2],[459,4],[471,2],[481,3],[486,1],[490,1],[492,3],[496,7],[504,7],[512,4],[519,1],[521,3],[529,3],[534,1],[536,1],[539,7],[548,6],[555,1],[558,1],[561,7],[570,6],[577,1],[580,1],[583,7],[592,5],[598,1],[601,1],[603,1],[605,3],[609,4],[618,1],[620,3],[624,1],[627,1],[629,1],[631,2],[635,1],[637,6],[645,5],[651,5],[657,1],[662,1],[664,6],[673,1],[675,1],[678,1],[682,2],[685,6],[692,1],[696,3],[701,1],[703,1],[705,10],[716,1],[718,2],[721,8],[731,4],[736,4],[741,1],[744,4],[749,1],[753,3],[758,1],[760,8],[769,7],[779,4],[784,1],[786,3],[791,6],[798,9],[808,5],[814,12],[814,9],[824,2],[827,7],[836,10],[847,1],[850,4],[858,2],[861,4],[866,1],[868,1],[870,1],[872,6],[880,5],[886,5],[892,1],[898,3],[903,1],[905,1],[908,1],[912,2],[916,3],[921,4],[926,6],[933,1],[937,2],[941,3],[946,3],[950,3],[954,1],[956,2],[960,3],[965,1],[967,1],[970,1],[974,2],[978,3],[983,1],[986,1],[989,1],[994,3],[1001,14],[1017,3],[1022,1],[1024,14],[1039,14],[1055,10],[1067,3],[1072,1],[1074,3],[1078,14],[1093,14],[1109,10],[1120,10],[1131,10],[1142,10],[1153,14],[1169,10],[1180,10],[1191,10],[1202,10],[1213,14],[1229,10],[1240,10],[1252,3],[1257,1],[1259,5],[1265,5],[1271,1],[1273,6],[1282,1],[1284,1],[1287,1],[1292,3],[1297,2],[1300,2],[1303,6],[1310,1],[1314,3]]},"1151":{"position":[[6,4],[11,8],[38,3],[43,4],[48,8],[63,8],[87,3],[92,8],[102,10],[102,7],[110,2],[117,6],[124,4],[129,4],[141,3],[158,3],[162,6],[169,4],[174,4],[179,6],[188,4],[204,3],[213,3],[218,3],[222,6],[229,4],[234,4],[239,5],[245,6],[254,3],[271,3],[275,6],[282,2],[285,4],[290,2],[294,3],[301,3],[314,3],[319,3],[323,6],[330,2],[333,4],[338,2],[341,3],[345,3],[396,3],[400,6],[407,4],[412,4],[417,5],[427,3],[440,5],[446,4],[454,4]]},"1153":{"position":[[6,4],[11,7],[37,3],[42,4],[47,7],[61,6],[81,3],[86,6],[93,9],[93,6],[100,2],[104,3],[109,5],[115,8],[124,6],[131,9],[131,6],[138,2]]},"1155":{"position":[[16,5],[24,3],[29,5],[35,10],[46,2],[49,8],[74,4],[81,3],[86,6],[93,10],[104,2],[107,8],[137,4],[142,3],[146,5],[154,3],[159,6],[166,10],[177,2],[180,8],[194,3],[199,1],[201,1],[203,3],[207,7],[215,7],[223,4],[228,1],[230,3],[236,4],[243,3],[248,1],[250,1],[253,7],[262,5],[268,1],[271,1],[273,1],[275,3],[279,7],[279,3],[283,3],[287,3],[291,1],[296,1],[298,3],[302,3],[308,1],[311,1],[314,1],[316,3],[321,1],[325,1],[328,1],[332,1],[335,1],[342,1],[344,3],[351,1],[354,1],[358,1],[360,6],[367,3],[372,1],[376,2],[380,3],[385,1],[387,1],[389,10],[400,1],[402,2],[405,8],[415,4],[420,4],[425,1],[428,4],[433,1],[437,3],[442,1],[444,8],[453,7],[463,3],[467,1],[469,3],[473,7],[481,8],[490,10],[502,3],[507,3],[511,9],[521,7],[529,5],[535,1],[537,2],[540,3],[544,3],[548,6],[548,3],[552,2],[555,10],[566,1],[569,7],[569,3],[573,3],[578,1],[580,3],[585,2],[588,4],[593,1],[595,1],[597,1],[599,3],[606,1],[610,3],[615,5],[621,1],[624,2],[627,8],[636,10],[647,1],[650,1],[653,2],[657,3],[662,5],[668,1],[670,7],[678,10],[689,1],[692,3],[697,1],[699,10],[711,8],[720,10],[731,1],[734,1],[737,2],[740,3],[744,5],[752,1],[754,3],[758,5],[766,1],[768,18],[787,2],[790,7],[790,3],[794,3],[799,1],[801,3],[806,2],[809,4],[814,1],[816,1],[818,1],[820,3],[825,1],[829,1],[832,1],[836,1],[839,1],[847,3],[852,1],[854,1],[857,1],[861,2],[865,3],[870,1],[872,3],[877,1],[881,4]]},"1157":{"position":[[45,3],[50,5],[56,5]]},"1159":{"position":[[6,6],[19,3],[36,3],[41,6],[49,11],[49,6],[56,4]]},"1161":{"position":[[2,3],[19,6],[26,6],[45,3],[50,6],[57,6],[65,8],[76,4]]},"1163":{"position":[[0,1],[6,3],[11,2],[15,1],[17,3],[22,3],[26,1],[29,4],[34,2],[38,2],[41,5],[47,1],[49,1],[52,1],[54,18],[73,2],[76,4],[82,4],[87,1],[90,4],[95,14],[111,2],[114,5],[120,1],[122,2],[126,3],[131,5],[137,1],[140,1],[142,18],[161,2],[164,4],[170,4],[175,1],[178,4],[183,14],[199,2],[202,5],[208,1],[210,2],[213,2],[216,6],[223,1],[228,3],[232,1],[234,2],[240,3],[245,1],[247,1],[250,1],[252,18],[271,2],[274,4],[280,4],[285,1],[288,4],[293,14],[309,2],[312,5],[318,1],[320,2],[323,2],[326,6],[333,1],[338,3],[342,1],[344,2],[350,3],[355,1],[357,6],[364,6],[375,9],[386,5],[393,1],[396,1]]},"1166":{"position":[[3,2],[19,3],[24,2],[28,1],[30,7],[38,1],[41,1],[43,7]]},"1168":{"position":[[4,3],[14,5],[22,7],[32,4],[37,4],[42,5],[48,7],[56,7],[64,5],[80,5],[88,5],[94,5],[100,7]]},"1170":{"position":[[7,3],[12,6],[19,4],[24,7],[32,5],[55,7],[65,3],[69,3],[73,9],[83,7],[91,5],[97,7],[107,7],[116,1],[119,1],[122,13],[122,3],[126,9],[136,7],[144,7],[153,4],[158,6],[165,5],[171,3],[175,2],[178,8],[187,2],[190,7],[199,13],[199,3],[203,9],[214,4],[219,8],[228,8],[237,8],[246,8],[255,7],[263,5],[272,4],[277,8]]},"1173":{"position":[[1,3],[6,3],[11,3],[16,2]]},"1175":{"position":[[3,8]]},"1180":{"position":[[0,3],[5,6],[23,4],[28,6],[35,4],[40,16],[42,6],[49,7],[57,7],[66,5],[66,3],[70,1],[72,3],[77,4],[83,4],[89,4],[95,4]]},"1182":{"position":[[9,3],[13,1],[24,7]]},"1184":{"position":[[0,3],[4,3],[13,3],[17,3],[21,2],[24,9],[34,4],[39,3],[44,3],[49,3],[53,7],[62,3],[66,5],[72,5]]},"1186":{"position":[[14,1]]},"1188":{"position":[[0,3],[26,2],[30,1],[33,5],[39,4],[44,3],[48,3],[54,4],[60,1],[65,2],[81,1],[95,1],[115,4],[125,4],[133,2],[138,3],[144,2],[148,3],[169,1],[172,1],[188,4],[194,4],[201,2]]},"1191":{"position":[[2,5],[22,1],[35,2],[40,1],[42,3],[53,1],[56,7],[65,5],[71,1],[75,7],[84,6],[91,1],[95,7],[104,6],[111,1],[115,7],[124,3],[128,4],[133,1],[136,3],[140,4],[149,5],[149,3],[153,1],[155,3],[161,4],[178,2],[182,3],[188,1],[196,4],[203,6],[211,4],[216,6],[226,4],[231,12],[231,4],[236,7],[248,4],[253,2],[257,3],[264,1],[276,6],[284,1],[286,2],[289,3],[293,5],[299,7],[307,4],[312,3],[317,1],[319,1],[323,6],[334,5],[340,4],[370,6],[378,5],[384,7],[392,7],[403,1],[408,4],[413,12],[413,4],[418,7],[439,4],[457,6],[465,1],[467,2],[470,3],[474,6],[481,7],[489,4],[494,3],[499,1],[501,3],[505,2],[508,5],[514,3],[518,3],[523,1],[525,1],[529,6],[539,3],[547,6],[554,1]]},"1192":{"position":[[2,5],[33,7],[42,5],[48,1],[52,7],[61,6],[68,1],[72,7],[81,6],[88,1],[92,7],[101,3],[105,4],[110,1],[113,3],[117,4],[126,5],[126,3],[130,1],[132,3],[138,4],[155,2],[159,3],[165,1],[173,4],[180,6],[188,4],[193,6],[203,4],[208,12],[208,4],[213,7],[225,4],[230,2],[234,3],[241,1],[253,6],[261,1],[263,2],[266,3],[270,5],[276,7],[284,4],[289,3],[294,1],[296,1],[300,6],[311,5],[317,1],[335,6],[343,5],[349,7],[357,7],[368,1],[373,4],[378,12],[378,4],[383,7],[404,4],[418,6],[426,1],[428,2],[431,3],[435,6],[442,7],[450,4],[455,3],[460,1],[462,3],[466,2],[469,5],[475,3],[479,3],[484,1],[486,1],[490,6],[500,3],[521,4],[528,7],[551,5],[557,5],[567,6],[574,1],[588,2],[592,1],[595,5],[601,4],[606,3],[610,3],[616,4],[622,1],[627,2],[632,1],[635,6],[642,6],[650,1],[652,3],[658,7],[669,2],[673,2],[678,4],[683,1],[685,3],[689,4],[694,6],[701,6],[708,1],[710,2],[713,2],[716,3],[720,1],[722,2],[725,2],[728,2],[733,1],[735,3],[739,4],[744,6],[751,6],[758,1],[760,2],[763,2],[766,3],[770,1],[772,2],[775,2],[778,2],[782,1],[784,3],[790,7],[799,4],[804,6],[811,6],[818,1],[820,2],[823,2],[826,3],[830,1],[832,2],[835,2],[838,2],[841,4],[848,5],[854,4],[859,1],[861,3]]},"1194":{"position":[[1,7],[10,5],[16,1],[20,7],[29,6],[36,1],[40,7],[49,6],[56,1],[60,7],[69,6],[76,1],[80,7],[89,3],[93,4],[98,1],[104,7],[119,4],[124,15],[124,7],[132,7],[140,3],[144,6],[160,7],[183,5],[190,7],[199,1],[202,4],[208,7],[219,1],[225,3],[229,4],[244,7],[259,6],[266,9],[276,2],[280,2],[283,10],[283,2],[286,7],[296,15],[296,7],[304,7],[313,11],[326,2],[329,7],[329,2],[332,4],[339,2],[342,8],[342,2],[345,5],[353,10],[353,2],[356,7],[381,2],[385,9],[395,7],[405,2],[409,4],[419,1],[424,6],[432,9],[445,4],[450,12],[450,4],[455,7],[476,5],[476,3],[480,1],[482,3],[488,4],[496,2],[500,3],[506,1],[511,6],[519,4],[527,4],[532,12],[532,4],[537,7],[549,2],[553,3],[560,1],[572,6],[585,3],[592,1],[594,1],[598,6],[609,5],[615,2],[635,6],[650,3],[657,1],[659,1],[663,6],[674,4],[679,12],[679,4],[684,7],[696,4],[710,6],[723,3],[730,1],[737,3],[744,1],[746,1],[750,6],[760,3],[781,3],[786,3],[790,1],[794,1],[797,1],[801,1],[806,1],[811,6],[830,1],[835,5],[841,5],[865,6],[880,3],[887,1],[889,1],[893,6],[906,6],[913,1]]},"1197":{"position":[[0,4],[5,6],[12,6],[20,3],[34,3],[70,3],[109,9],[119,3],[124,1]]},"1200":{"position":[[0,7],[8,4],[13,6],[23,3],[29,3],[35,3],[41,3],[45,4],[52,2],[57,2],[60,6],[69,7],[80,4],[85,4],[100,10],[116,3],[120,4],[125,4],[137,6],[144,2],[147,3],[154,2],[157,9],[167,10],[180,3],[187,3],[193,3],[197,6],[207,6],[218,1],[222,3],[238,8],[248,3],[255,3],[259,6],[267,4],[274,10],[286,2],[289,3],[296,3],[302,3],[306,6],[321,1],[325,3],[332,5],[338,4],[347,8],[356,5],[364,2],[367,6],[374,10],[404,2],[407,3],[414,2],[417,5],[423,10],[435,4],[442,3],[449,3],[455,3],[459,6],[476,1],[480,3],[495,3],[502,4],[507,11],[521,3],[525,10],[541,4],[546,1],[548,4],[553,14],[569,1],[572,4],[577,7],[588,3],[592,7],[600,1],[604,5],[610,4],[615,4],[620,6],[627,4],[632,6],[640,1],[647,3],[651,10],[664,6],[673,4],[678,1],[680,4],[685,14],[701,1],[704,4],[709,7],[720,1],[722,11],[734,4],[739,8],[749,1],[751,5],[759,4],[765,2],[783,6],[794,4],[799,6],[807,7],[816,3],[831,21],[853,6],[869,3],[873,6],[881,6],[888,9],[898,2],[901,4],[906,6],[915,1],[919,10],[931,2],[934,3],[941,6],[948,5],[954,8],[965,3],[972,3],[979,3],[986,4],[991,15],[1009,3],[1013,6],[1028,1],[1032,3],[1041,4],[1046,21],[1068,6],[1076,4],[1081,6],[1091,7],[1102,4],[1107,4],[1112,2],[1115,6],[1123,1],[1126,6],[1133,6],[1140,7],[1149,2],[1152,9],[1163,7],[1171,7],[1180,2],[1183,4],[1194,7],[1202,3],[1206,7],[1234,2],[1237,3],[1244,6],[1251,5],[1260,3],[1267,3],[1273,3],[1277,6],[1295,1],[1299,3]]},"1202":{"position":[[4,4],[9,6],[21,6],[32,4],[37,6],[45,7],[54,3],[59,11],[72,2],[77,4],[82,6],[90,12],[104,2],[109,4],[114,6],[122,11],[135,2],[140,4],[145,6]]},"1205":{"position":[[0,7],[8,4],[13,6],[23,3],[29,3],[35,3],[39,4],[46,2],[51,2],[54,6],[63,7],[73,4],[80,6],[87,3],[91,3],[95,5],[101,3],[108,4],[113,4],[128,10],[144,3],[148,3],[152,4],[164,6],[171,2],[174,3],[181,2],[184,9],[194,10],[207,3],[214,3],[220,3],[224,6],[234,6],[245,1],[249,3],[265,8],[275,3],[282,3],[286,6],[294,4],[301,10],[313,2],[316,3],[323,3],[329,3],[333,6],[348,1],[352,3],[359,5],[365,4],[374,8],[383,5],[391,2],[394,6],[401,10],[427,2],[430,3],[437,2],[440,5],[446,10],[458,4],[465,3],[472,3],[478,3],[482,6],[499,1],[503,3],[516,3],[520,6],[530,3],[534,3],[547,6],[554,3],[558,3],[562,6],[572,6],[579,3],[583,3],[587,8],[605,6],[612,3],[621,4],[626,1],[629,3],[633,7],[644,1],[646,6],[653,4],[658,8],[669,5],[675,4],[680,3],[684,4],[689,6],[696,6],[709,6],[716,3],[722,3],[726,4],[733,4],[738,1],[741,3],[745,7],[756,1],[758,4],[763,4],[768,8],[778,3],[782,1],[786,6],[796,7],[807,7],[818,4],[823,9],[836,4],[845,6],[853,5],[862,5],[871,5],[895,6],[906,4],[911,6],[919,7],[928,6],[936,11],[949,2],[954,4],[959,6],[967,12],[981,2],[986,4],[991,6],[1009,21],[1031,6],[1047,3],[1051,6],[1059,3],[1063,6],[1070,9],[1080,2],[1083,4],[1088,6],[1097,1],[1101,10],[1113,2],[1116,3],[1123,6],[1130,5],[1136,8],[1147,3],[1154,3],[1161,3],[1168,4],[1173,15],[1191,3],[1195,6],[1210,1],[1214,3]]},"1207":{"position":[[11,11],[23,3],[27,7],[35,3],[39,11],[64,6],[71,3],[77,6],[86,4],[91,1],[94,3],[98,7],[109,1],[111,4],[116,4],[121,8],[131,3],[135,1],[138,6],[148,7],[173,6],[180,3],[184,20],[208,4],[213,20],[236,3],[240,11],[254,6],[261,4],[266,1],[269,3],[273,7],[284,5],[293,4],[298,3],[304,1],[306,4],[313,8],[325,4],[330,5],[336,5],[343,3],[347,6],[359,1],[365,1],[369,1],[371,7],[379,3],[383,4],[389,8]]},"1210":{"position":[[0,4],[5,4],[14,9],[28,4],[33,9],[44,4],[50,4],[55,1],[58,1],[60,6],[69,3],[73,4],[79,5],[88,6],[95,3],[99,4],[105,4],[114,3],[118,4],[123,4],[135,6],[146,4],[151,6],[159,9],[170,9],[181,7],[190,1],[194,4],[199,6],[209,4],[215,3],[222,6],[229,3],[234,4],[241,4],[246,6],[255,2],[258,3],[265,3],[271,3],[275,5],[281,3],[288,5],[294,4],[299,4],[304,5],[312,4],[318,1],[323,2],[326,7],[334,4],[339,4],[345,3],[349,7],[364,6],[371,4]]},"1212":{"position":[[0,4],[5,4],[14,4],[20,3],[27,3],[31,4],[37,4],[46,3],[50,4],[55,4],[62,2],[65,3],[72,3],[78,3],[82,5],[88,3],[95,5],[101,4],[106,5],[119,4],[126,7],[138,3],[144,4],[149,1],[151,1],[153,1],[155,5],[162,4],[167,1],[169,1],[171,1],[173,1],[176,1],[179,3],[185,4],[190,5],[198,4],[203,7],[213,2],[216,3],[223,3],[229,3],[233,5],[239,3],[254,8],[264,3],[271,2],[274,7],[282,4],[288,2],[291,3],[298,3],[304,3],[308,5],[314,3],[321,3],[325,7],[340,6],[347,8]]},"1214":{"position":[[7,9],[21,4],[26,9],[37,4],[43,4],[48,1],[51,1],[53,6],[62,3],[66,4],[72,5],[81,6],[88,3],[92,4],[98,4],[105,10],[120,12],[134,3],[139,15],[156,2],[161,4],[166,6],[174,19],[195,2],[200,4],[205,6],[215,3],[226,3],[230,7],[238,3],[242,11],[269,1],[271,15],[291,6],[314,11],[326,12],[343,4],[348,14],[377,10],[388,13]]},"1216":{"position":[[0,2],[8,4],[13,6],[25,2],[31,2],[35,1],[38,3],[42,4],[47,4],[60,6],[70,2],[74,1],[77,3],[81,4],[86,4],[93,6],[106,2],[115,7],[123,7],[131,2],[134,3],[142,2],[155,6],[175,6],[184,4],[190,1],[194,4],[199,4],[204,4],[215,2],[230,2],[245,4],[270,2],[274,4],[279,6],[286,3],[297,2],[306,2],[309,2],[319,2],[322,2],[326,3],[335,2],[338,2]]},"1218":{"position":[[7,6],[14,10],[39,6],[47,6],[64,6],[73,6],[80,4],[86,8],[99,10],[99,5],[105,4],[110,4],[117,4],[123,3],[127,4],[132,4],[163,4],[168,3],[207,3]]},"1220":{"position":[[0,4],[5,6],[12,6],[44,3],[73,6],[141,4],[146,6],[162,4],[167,6],[174,4],[197,4],[202,6]]}}}],["一个",{"_index":50,"t":{"13":{"position":[[100,2]]},"17":{"position":[[44,2]]},"129":{"position":[[81,2]]},"164":{"position":[[24,2]]},"203":{"position":[[16,2],[69,2]]},"258":{"position":[[122,2]]},"263":{"position":[[3,2]]},"336":{"position":[[1203,2]]},"345":{"position":[[185,2],[451,2]]},"348":{"position":[[89,2],[99,2],[115,2]]},"351":{"position":[[9,2]]},"353":{"position":[[12,2]]},"368":{"position":[[1,2],[18,2],[40,2]]},"372":{"position":[[86,2],[96,2]]},"409":{"position":[[299,2],[341,2]]},"415":{"position":[[46,2],[53,2]]},"417":{"position":[[78,2]]},"459":{"position":[[15,2]]},"482":{"position":[[26,2]]},"487":{"position":[[65,2]]},"489":{"position":[[523,2],[530,2],[538,2]]},"491":{"position":[[108,2]]},"502":{"position":[[17,2]]},"531":{"position":[[153,2],[305,2],[337,2]]},"575":{"position":[[81,2]]},"611":{"position":[[16,2],[69,2]]},"653":{"position":[[24,2]]},"748":{"position":[[1203,2]]},"757":{"position":[[185,2],[451,2]]},"784":{"position":[[122,2]]},"789":{"position":[[3,2]]},"841":{"position":[[299,2],[341,2]]},"847":{"position":[[46,2],[53,2]]},"849":{"position":[[78,2]]},"857":{"position":[[89,2],[99,2],[115,2]]},"860":{"position":[[9,2]]},"862":{"position":[[12,2]]},"877":{"position":[[1,2],[18,2],[40,2]]},"881":{"position":[[86,2],[96,2]]},"903":{"position":[[15,2]]},"916":{"position":[[7,2]]},"918":{"position":[[17,2],[41,2]]},"922":{"position":[[386,2]]},"924":{"position":[[4,2]]},"957":{"position":[[11,2]]},"963":{"position":[[160,2],[237,2]]},"1010":{"position":[[1742,2],[1880,2]]},"1013":{"position":[[9,2]]},"1022":{"position":[[108,2]]},"1035":{"position":[[77,2]]},"1038":{"position":[[18,2]]},"1044":{"position":[[537,2]]},"1055":{"position":[[8,2]]},"1057":{"position":[[172,2]]},"1060":{"position":[[62,2]]},"1062":{"position":[[79,2]]},"1064":{"position":[[415,2],[550,2],[1433,2]]},"1069":{"position":[[13,2]]},"1071":{"position":[[19,2]]},"1073":{"position":[[6,2]]},"1077":{"position":[[8,2],[63,2]]},"1080":{"position":[[32,2]]},"1085":{"position":[[32,2]]},"1124":{"position":[[18,2]]},"1142":{"position":[[71,2]]},"1148":{"position":[[391,2]]}}}],["一些",{"_index":960,"t":{"329":{"position":[[16,2]]},"741":{"position":[[16,2]]},"922":{"position":[[462,2]]},"1064":{"position":[[1142,2]]},"1194":{"position":[[630,2]]}}}],["一件",{"_index":868,"t":{"281":{"position":[[112,2]]},"351":{"position":[[42,2]]},"807":{"position":[[112,2]]},"860":{"position":[[42,2]]}}}],["一再",{"_index":32,"t":{"13":{"position":[[62,2]]}}}],["一定",{"_index":361,"t":{"21":{"position":[[605,2]]},"957":{"position":[[86,2]]}}}],["一旦",{"_index":1593,"t":{"1157":{"position":[[176,2]]}}}],["一条",{"_index":1570,"t":{"1148":{"position":[[313,2]]}}}],["一样",{"_index":200,"t":{"19":{"position":[[63,2]]},"281":{"position":[[101,2]]},"305":{"position":[[127,2]]},"411":{"position":[[95,2]]},"781":{"position":[[127,2]]},"807":{"position":[[101,2]]},"843":{"position":[[95,2]]},"918":{"position":[[10,2]]},"1136":{"position":[[64,2]]}}}],["一次",{"_index":449,"t":{"33":{"position":[[209,2]]},"537":{"position":[[475,2]]},"543":{"position":[[34,2],[389,2]]},"553":{"position":[[100,2]]},"557":{"position":[[25,2]]}}}],["一段",{"_index":291,"t":{"21":{"position":[[291,2]]}}}],["一段时间",{"_index":1615,"t":{"1191":{"position":[[356,4]]},"1192":{"position":[[330,4]]}}}],["一生",{"_index":374,"t":{"23":{"position":[[30,2]]}}}],["一种",{"_index":280,"t":{"21":{"position":[[245,2]]},"345":{"position":[[40,2]]},"422":{"position":[[8,2]]},"440":{"position":[[5,2]]},"470":{"position":[[22,2]]},"473":{"position":[[5,2]]},"537":{"position":[[44,2]]},"757":{"position":[[40,2]]},"884":{"position":[[5,2]]},"918":{"position":[[0,2],[28,2]]},"1033":{"position":[[11,2]]},"1075":{"position":[[59,2]]},"1197":{"position":[[26,2]]}}}],["一系列",{"_index":1352,"t":{"922":{"position":[[196,3]]},"957":{"position":[[52,3]]}}}],["一组",{"_index":1196,"t":{"459":{"position":[[4,2]]},"470":{"position":[[55,2]]},"903":{"position":[[4,2]]}}}],["一致性",{"_index":884,"t":{"286":{"position":[[22,3]]},"305":{"position":[[14,3]]},"459":{"position":[[9,3]]},"762":{"position":[[22,3]]},"781":{"position":[[14,3]]},"903":{"position":[[9,3]]}}}],["一般",{"_index":1299,"t":{"557":{"position":[[69,2]]},"559":{"position":[[193,2]]},"1102":{"position":[[113,2]]},"1119":{"position":[[113,2]]}}}],["一行",{"_index":1587,"t":{"1157":{"position":[[74,2]]}}}],["一部分",{"_index":1531,"t":{"1082":{"position":[[14,3]]},"1087":{"position":[[14,3]]}}}],["一面",{"_index":14,"t":{"13":{"position":[[5,2]]}}}],["一项",{"_index":1052,"t":{"348":{"position":[[126,2]]},"358":{"position":[[754,2]]},"415":{"position":[[70,2]]},"847":{"position":[[70,2]]},"857":{"position":[[126,2]]},"867":{"position":[[754,2]]}}}],["三个",{"_index":1060,"t":{"356":{"position":[[531,2]]},"358":{"position":[[739,2]]},"865":{"position":[[531,2]]},"867":{"position":[[739,2]]}}}],["上下文",{"_index":969,"t":{"331":{"position":[[68,3]]},"743":{"position":[[68,3]]}}}],["上次",{"_index":1310,"t":{"557":{"position":[[384,2]]}}}],["上面",{"_index":1110,"t":{"397":{"position":[[6,2]]},"829":{"position":[[6,2]]}}}],["下载",{"_index":1098,"t":{"375":{"position":[[406,2],[484,2],[496,2]]}}}],["下降",{"_index":1329,"t":{"570":{"position":[[118,2]]}}}],["下面",{"_index":1291,"t":{"555":{"position":[[50,2]]}}}],["不仅",{"_index":345,"t":{"21":{"position":[[535,2]]},"305":{"position":[[101,2]]},"781":{"position":[[101,2]]}}}],["不会",{"_index":450,"t":{"36":{"position":[[129,2]]},"38":{"position":[[257,2]]},"129":{"position":[[90,2]]},"263":{"position":[[327,2],[372,2]]},"284":{"position":[[120,2]]},"289":{"position":[[265,2]]},"339":{"position":[[66,2]]},"351":{"position":[[13,2]]},"575":{"position":[[90,2]]},"751":{"position":[[66,2]]},"760":{"position":[[120,2]]},"765":{"position":[[265,2]]},"789":{"position":[[327,2],[372,2]]},"860":{"position":[[13,2]]}}}],["不免",{"_index":380,"t":{"23":{"position":[[53,2]]}}}],["不再",{"_index":630,"t":{"150":{"position":[[1201,2]]},"659":{"position":[[1201,2]]},"1102":{"position":[[63,2]]},"1119":{"position":[[63,2]]}}}],["不到",{"_index":1339,"t":{"854":{"position":[[7,2]]}}}],["不变",{"_index":908,"t":{"294":{"position":[[493,2]]},"296":{"position":[[481,2]]},"770":{"position":[[493,2]]},"772":{"position":[[481,2]]}}}],["不同",{"_index":59,"t":{"13":{"position":[[129,2]]},"331":{"position":[[66,2]]},"336":{"position":[[1300,2],[1319,2]]},"345":{"position":[[422,2]]},"570":{"position":[[17,2],[26,2]]},"743":{"position":[[66,2]]},"748":{"position":[[1300,2],[1319,2]]},"757":{"position":[[422,2]]},"1151":{"position":[[77,2]]}}}],["不好",{"_index":856,"t":{"272":{"position":[[3,2]]},"365":{"position":[[3,2]]},"798":{"position":[[3,2]]},"874":{"position":[[3,2]]}}}],["不如",{"_index":1382,"t":{"946":{"position":[[39,2]]}}}],["不宜",{"_index":1361,"t":{"924":{"position":[[79,2]]}}}],["不必要",{"_index":860,"t":{"279":{"position":[[0,3]]},"370":{"position":[[28,3]]},"417":{"position":[[209,3]]},"805":{"position":[[0,3]]},"849":{"position":[[209,3]]},"879":{"position":[[28,3]]}}}],["不断",{"_index":284,"t":{"21":{"position":[[257,2]]}}}],["不易",{"_index":1205,"t":{"467":{"position":[[25,2]]},"911":{"position":[[25,2]]}}}],["不是",{"_index":767,"t":{"188":{"position":[[13,2]]},"263":{"position":[[64,2],[84,2],[105,2]]},"272":{"position":[[90,2]]},"281":{"position":[[76,2]]},"415":{"position":[[151,2]]},"417":{"position":[[18,2]]},"529":{"position":[[21,2]]},"641":{"position":[[13,2]]},"789":{"position":[[64,2],[84,2],[105,2]]},"798":{"position":[[90,2]]},"807":{"position":[[76,2]]},"847":{"position":[[151,2]]},"849":{"position":[[18,2]]},"920":{"position":[[27,2]]},"1077":{"position":[[61,2]]},"1082":{"position":[[4,2]]},"1087":{"position":[[4,2]]},"1214":{"position":[[289,2]]}}}],["不管不顾",{"_index":1607,"t":{"1186":{"position":[[32,4]]}}}],["不能",{"_index":897,"t":{"289":{"position":[[347,2]]},"294":{"position":[[460,2]]},"765":{"position":[[347,2]]},"770":{"position":[[460,2]]},"942":{"position":[[12,2]]},"950":{"position":[[21,2]]},"952":{"position":[[85,2]]},"1044":{"position":[[560,2],[589,2]]},"1075":{"position":[[70,2],[229,2]]}}}],["不要",{"_index":842,"t":{"260":{"position":[[31,2]]},"411":{"position":[[66,2]]},"417":{"position":[[251,2]]},"786":{"position":[[31,2]]},"843":{"position":[[66,2]]},"849":{"position":[[251,2]]}}}],["不足",{"_index":111,"t":{"15":{"position":[[30,2]]},"937":{"position":[[486,2]]}}}],["不过",{"_index":393,"t":{"23":{"position":[[112,2]]}}}],["不适",{"_index":1538,"t":{"1102":{"position":[[109,2]]},"1119":{"position":[[109,2]]}}}],["专业",{"_index":109,"t":{"15":{"position":[[24,2]]}}}],["专属",{"_index":782,"t":{"203":{"position":[[18,2]]},"611":{"position":[[18,2]]}}}],["专注",{"_index":839,"t":{"258":{"position":[[169,2]]},"260":{"position":[[2,2]]},"281":{"position":[[7,2]]},"361":{"position":[[5,2]]},"372":{"position":[[28,2]]},"784":{"position":[[169,2]]},"786":{"position":[[2,2]]},"807":{"position":[[7,2]]},"870":{"position":[[5,2]]},"881":{"position":[[28,2]]}}}],["专门",{"_index":1027,"t":{"345":{"position":[[95,2]]},"757":{"position":[[95,2]]},"1080":{"position":[[38,2]]},"1085":{"position":[[38,2]]}}}],["业务",{"_index":689,"t":{"170":{"position":[[69,2],[590,2],[1112,2],[1387,2]]},"318":{"position":[[326,2]]},"623":{"position":[[69,2],[590,2],[1112,2],[1387,2]]},"730":{"position":[[326,2]]},"977":{"position":[[116,2]]}}}],["东西",{"_index":916,"t":{"299":{"position":[[105,2],[268,2]]},"775":{"position":[[105,2],[268,2]]}}}],["丢弃",{"_index":1502,"t":{"1064":{"position":[[820,2]]}}}],["两个",{"_index":1399,"t":{"959":{"position":[[16,2]]}}}],["两次",{"_index":433,"t":{"31":{"position":[[108,2]]},"36":{"position":[[125,2]]}}}],["两百年",{"_index":273,"t":{"21":{"position":[[224,3]]}}}],["两种",{"_index":1350,"t":{"914":{"position":[[14,2]]}}}],["两者",{"_index":324,"t":{"21":{"position":[[442,2]]},"308":{"position":[[102,2]]},"415":{"position":[[378,2]]},"720":{"position":[[102,2]]},"847":{"position":[[378,2]]}}}],["两者之间",{"_index":157,"t":{"17":{"position":[[144,4],[213,4]]}}}],["严格",{"_index":1639,"t":{"1216":{"position":[[236,2]]}}}],["严重",{"_index":257,"t":{"21":{"position":[[171,2]]}}}],["个人",{"_index":134,"t":{"17":{"position":[[65,2]]},"21":{"position":[[571,2]]}}}],["个体",{"_index":35,"t":{"13":{"position":[[69,2],[245,2]]}}}],["中",{"_index":28,"t":{"13":{"position":[[48,1],[262,1]]},"17":{"position":[[206,1]]},"19":{"position":[[38,1]]},"21":{"position":[[316,1]]},"26":{"position":[[11,1]]},"53":{"position":[[10,1]]},"83":{"position":[[4,1]]},"90":{"position":[[4,1]]},"104":{"position":[[5,1]]},"144":{"position":[[69,1]]},"166":{"position":[[8,1]]},"178":{"position":[[55,1]]},"180":{"position":[[51,1]]},"182":{"position":[[44,1]]},"188":{"position":[[80,1]]},"229":{"position":[[893,1]]},"237":{"position":[[45,1]]},"251":{"position":[[74,1]]},"258":{"position":[[53,1],[139,1]]},"284":{"position":[[51,1],[99,1],[140,1]]},"305":{"position":[[21,1]]},"308":{"position":[[52,1],[137,1]]},"331":{"position":[[71,1]]},"333":{"position":[[21,1]]},"348":{"position":[[53,1],[137,1]]},"351":{"position":[[91,1]]},"356":{"position":[[551,1]]},"372":{"position":[[22,1]]},"378":{"position":[[41,1],[109,1]]},"411":{"position":[[20,1]]},"417":{"position":[[165,1]]},"419":{"position":[[9,1]]},"440":{"position":[[55,1]]},"470":{"position":[[18,1]]},"497":{"position":[[15,1]]},"523":{"position":[[197,1]]},"525":{"position":[[9,1]]},"543":{"position":[[30,1]]},"547":{"position":[[347,1]]},"555":{"position":[[22,1]]},"570":{"position":[[93,1],[147,1]]},"590":{"position":[[69,1]]},"619":{"position":[[8,1]]},"631":{"position":[[55,1]]},"633":{"position":[[51,1]]},"635":{"position":[[44,1]]},"641":{"position":[[80,1]]},"691":{"position":[[893,1]]},"699":{"position":[[45,1]]},"713":{"position":[[74,1]]},"720":{"position":[[52,1],[137,1]]},"743":{"position":[[71,1]]},"745":{"position":[[21,1]]},"760":{"position":[[51,1],[99,1],[140,1]]},"781":{"position":[[21,1]]},"784":{"position":[[53,1],[139,1]]},"810":{"position":[[41,1],[109,1]]},"843":{"position":[[20,1]]},"849":{"position":[[165,1]]},"851":{"position":[[9,1]]},"857":{"position":[[53,1],[137,1]]},"860":{"position":[[91,1]]},"865":{"position":[[551,1]]},"881":{"position":[[22,1]]},"884":{"position":[[55,1]]},"914":{"position":[[5,1]]},"918":{"position":[[38,1],[56,1]]},"920":{"position":[[5,1]]},"922":{"position":[[18,1]]},"928":{"position":[[5,1]]},"957":{"position":[[9,1]]},"959":{"position":[[11,1]]},"977":{"position":[[9,1],[120,1]]},"984":{"position":[[92,1]]},"1008":{"position":[[91,1]]},"1010":{"position":[[1040,1],[1067,1],[1922,1]]},"1038":{"position":[[17,1]]},"1044":{"position":[[533,1],[571,1]]},"1048":{"position":[[239,1]]},"1052":{"position":[[30,1]]},"1057":{"position":[[149,1]]},"1062":{"position":[[62,1]]},"1064":{"position":[[80,1],[389,1],[461,1],[522,1],[608,1],[1082,1],[1120,1]]},"1071":{"position":[[31,1]]},"1075":{"position":[[246,1]]},"1077":{"position":[[30,1]]},"1124":{"position":[[84,1]]},"1151":{"position":[[29,1]]},"1153":{"position":[[28,1]]},"1157":{"position":[[28,1],[71,1],[143,1]]},"1168":{"position":[[7,1]]},"1202":{"position":[[17,1]]},"1207":{"position":[[8,1]]},"1214":{"position":[[261,1]]},"1218":{"position":[[26,1]]}}}],["中常",{"_index":1371,"t":{"932":{"position":[[10,2]]}}}],["中断",{"_index":1616,"t":{"1194":{"position":[[373,2]]}}}],["中间",{"_index":1441,"t":{"1010":{"position":[[1744,2]]}}}],["中间件",{"_index":722,"t":{"172":{"position":[[50,3]]},"277":{"position":[[141,3]]},"397":{"position":[[81,3],[90,3]]},"411":{"position":[[44,3]]},"625":{"position":[[50,3]]},"803":{"position":[[141,3]]},"829":{"position":[[81,3],[90,3]]},"843":{"position":[[44,3]]},"1205":{"position":[[543,3]]},"1207":{"position":[[169,3]]}}}],["丰富",{"_index":1456,"t":{"1035":{"position":[[32,2]]},"1052":{"position":[[13,2]]},"1080":{"position":[[85,2]]},"1085":{"position":[[85,2]]}}}],["串行化",{"_index":755,"t":{"184":{"position":[[1927,3]]},"637":{"position":[[1927,3]]}}}],["为了",{"_index":160,"t":{"17":{"position":[[155,2]]},"1064":{"position":[[314,2]]}}}],["为啥",{"_index":1010,"t":{"343":{"position":[[3,2]]},"755":{"position":[[3,2]]}}}],["主",{"_index":709,"t":{"170":{"position":[[951,1],[1629,1]]},"566":{"position":[[228,1]]},"623":{"position":[[951,1],[1629,1]]}}}],["主动",{"_index":1019,"t":{"343":{"position":[[115,2]]},"755":{"position":[[115,2]]}}}],["主机",{"_index":1619,"t":{"1197":{"position":[[49,2]]},"1218":{"position":[[151,2]]}}}],["主线",{"_index":1008,"t":{"341":{"position":[[416,2],[510,2]]},"531":{"position":[[380,2]]},"537":{"position":[[528,2]]},"551":{"position":[[380,2],[399,2]]},"753":{"position":[[416,2],[510,2]]}}}],["主要",{"_index":936,"t":{"305":{"position":[[22,2]]},"308":{"position":[[143,2]]},"333":{"position":[[22,2]]},"348":{"position":[[143,2]]},"378":{"position":[[115,2]]},"411":{"position":[[21,2]]},"413":{"position":[[49,2]]},"525":{"position":[[29,2]]},"527":{"position":[[37,2]]},"553":{"position":[[146,2]]},"555":{"position":[[59,2]]},"720":{"position":[[143,2]]},"745":{"position":[[22,2]]},"781":{"position":[[22,2]]},"810":{"position":[[115,2]]},"843":{"position":[[21,2]]},"845":{"position":[[49,2]]},"857":{"position":[[143,2]]},"959":{"position":[[13,2]]}}}],["主题",{"_index":1201,"t":{"465":{"position":[[37,2]]},"909":{"position":[[37,2]]}}}],["举例",{"_index":995,"t":{"339":{"position":[[233,2]]},"751":{"position":[[233,2]]}}}],["之一",{"_index":333,"t":{"21":{"position":[[484,2]]},"920":{"position":[[22,2]]}}}],["之上",{"_index":271,"t":{"21":{"position":[[219,2]]}}}],["之前",{"_index":508,"t":{"83":{"position":[[18,2]]},"178":{"position":[[47,2]]},"429":{"position":[[190,2]]},"631":{"position":[[47,2]]}}}],["之后",{"_index":1553,"t":{"1136":{"position":[[84,2]]},"1151":{"position":[[192,2]]}}}],["之间",{"_index":1065,"t":{"358":{"position":[[764,2]]},"417":{"position":[[109,2]]},"470":{"position":[[46,2]]},"525":{"position":[[24,2]]},"527":{"position":[[32,2]]},"553":{"position":[[160,2]]},"849":{"position":[[109,2]]},"867":{"position":[[764,2]]}}}],["书",{"_index":12,"t":{"13":{"position":[[2,1]]}}}],["了解",{"_index":1139,"t":{"417":{"position":[[93,2]]},"849":{"position":[[93,2]]}}}],["事",{"_index":869,"t":{"281":{"position":[[114,1]]},"351":{"position":[[44,1]]},"807":{"position":[[114,1]]},"860":{"position":[[44,1]]},"922":{"position":[[464,1]]}}}],["事件",{"_index":528,"t":{"115":{"position":[[137,2],[179,2],[266,2]]},"119":{"position":[[50,2]]},"134":{"position":[[297,2],[336,2],[1190,2],[1273,2]]},"136":{"position":[[755,2]]},"138":{"position":[[344,2]]},"142":{"position":[[76,2]]},"150":{"position":[[1218,2],[1237,2]]},"158":{"position":[[95,2],[205,2],[569,2],[586,2],[605,2]]},"160":{"position":[[188,2]]},"205":{"position":[[0,2],[50,2]]},"207":{"position":[[150,2]]},"541":{"position":[[39,2],[439,2]]},"553":{"position":[[82,2]]},"580":{"position":[[297,2],[336,2],[1190,2],[1273,2]]},"582":{"position":[[755,2]]},"584":{"position":[[344,2]]},"588":{"position":[[76,2]]},"597":{"position":[[137,2],[179,2],[266,2]]},"601":{"position":[[50,2]]},"613":{"position":[[0,2],[50,2]]},"615":{"position":[[150,2]]},"647":{"position":[[95,2],[205,2],[569,2],[586,2],[605,2]]},"649":{"position":[[188,2]]},"659":{"position":[[1218,2],[1237,2]]},"1157":{"position":[[16,2],[30,2],[146,2]]}}}],["事务管理",{"_index":1031,"t":{"345":{"position":[[155,4],[305,4]]},"757":{"position":[[155,4],[305,4]]}}}],["事情",{"_index":1068,"t":{"365":{"position":[[14,2]]},"874":{"position":[[14,2]]}}}],["二者",{"_index":1283,"t":{"553":{"position":[[237,2]]}}}],["二进制",{"_index":1432,"t":{"998":{"position":[[54,3]]},"1073":{"position":[[37,3]]},"1168":{"position":[[74,3]]}}}],["云",{"_index":927,"t":{"303":{"position":[[51,1]]},"779":{"position":[[51,1]]}}}],["互不",{"_index":605,"t":{"144":{"position":[[71,2]]},"590":{"position":[[71,2]]}}}],["互斥",{"_index":1215,"t":{"475":{"position":[[48,2]]}}}],["互相",{"_index":924,"t":{"303":{"position":[[30,2],[55,2],[79,2],[105,2]]},"779":{"position":[[30,2],[55,2],[79,2],[105,2]]}}}],["交互",{"_index":552,"t":{"126":{"position":[[70,2]]},"170":{"position":[[13,2],[198,2]]},"176":{"position":[[5,2]]},"345":{"position":[[409,2]]},"500":{"position":[[39,2]]},"525":{"position":[[27,2]]},"572":{"position":[[70,2]]},"623":{"position":[[13,2],[198,2]]},"629":{"position":[[5,2]]},"757":{"position":[[409,2]]},"1064":{"position":[[404,2],[657,2],[750,2],[880,2]]}}}],["交互式",{"_index":1481,"t":{"1057":{"position":[[174,3]]},"1060":{"position":[[64,3]]},"1064":{"position":[[967,3],[1063,3]]}}}],["产品",{"_index":1192,"t":{"457":{"position":[[29,2]]},"459":{"position":[[6,2],[25,2]]},"463":{"position":[[19,2]]},"467":{"position":[[55,2]]},"901":{"position":[[29,2]]},"903":{"position":[[6,2],[25,2]]},"907":{"position":[[19,2]]},"911":{"position":[[55,2]]}}}],["产物",{"_index":193,"t":{"19":{"position":[[29,2]]}}}],["产生",{"_index":279,"t":{"21":{"position":[[242,2],[332,2]]}}}],["享有",{"_index":169,"t":{"17":{"position":[[182,2]]}}}],["亮点",{"_index":1001,"t":{"341":{"position":[[4,2]]},"753":{"position":[[4,2]]}}}],["人人",{"_index":168,"t":{"17":{"position":[[179,2]]}}}],["人们",{"_index":268,"t":{"21":{"position":[[207,2],[565,2]]}}}],["人性",{"_index":262,"t":{"21":{"position":[[186,2]]}}}],["人生",{"_index":387,"t":{"23":{"position":[[92,2]]}}}],["人类",{"_index":82,"t":{"13":{"position":[[207,2]]},"15":{"position":[[1,2],[39,2]]},"19":{"position":[[34,2],[58,2],[90,2]]},"21":{"position":[[92,2]]}}}],["仅",{"_index":446,"t":{"33":{"position":[[204,1]]},"71":{"position":[[6,1]]},"405":{"position":[[229,1]]},"523":{"position":[[87,1]]},"570":{"position":[[74,1]]},"837":{"position":[[229,1]]},"1044":{"position":[[158,1],[173,1],[446,1],[470,1]]}}}],["仅限",{"_index":1535,"t":{"1100":{"position":[[66,2]]},"1117":{"position":[[66,2]]},"1197":{"position":[[45,2]]},"1218":{"position":[[180,2]]}}}],["仅限于",{"_index":75,"t":{"13":{"position":[[186,3]]}}}],["介绍",{"_index":1292,"t":{"555":{"position":[[56,2]]},"977":{"position":[[160,2]]}}}],["仍然",{"_index":998,"t":{"339":{"position":[[632,2]]},"751":{"position":[[632,2]]}}}],["从而",{"_index":150,"t":{"17":{"position":[[117,2]]},"48":{"position":[[23,2]]},"345":{"position":[[65,2]]},"440":{"position":[[34,2]]},"757":{"position":[[65,2]]},"884":{"position":[[34,2]]}}}],["他人",{"_index":62,"t":{"13":{"position":[[141,2]]}}}],["他们",{"_index":48,"t":{"13":{"position":[[96,2],[108,2],[125,2],[135,2]]},"21":{"position":[[21,2]]}}}],["付出",{"_index":97,"t":{"13":{"position":[[257,2]]}}}],["代价",{"_index":575,"t":{"129":{"position":[[132,2]]},"575":{"position":[[132,2]]}}}],["代替",{"_index":582,"t":{"134":{"position":[[89,2]]},"158":{"position":[[452,2]]},"194":{"position":[[70,2]]},"545":{"position":[[34,2]]},"580":{"position":[[89,2]]},"647":{"position":[[452,2]]},"667":{"position":[[70,2]]}}}],["代理",{"_index":1084,"t":{"375":{"position":[[91,2],[458,2],[466,2],[480,2]]},"926":{"position":[[215,2]]},"1218":{"position":[[58,2]]}}}],["代码",{"_index":537,"t":{"121":{"position":[[180,2]]},"123":{"position":[[76,2]]},"144":{"position":[[134,2]]},"152":{"position":[[486,2]]},"164":{"position":[[496,2]]},"166":{"position":[[44,2]]},"168":{"position":[[19,2]]},"170":{"position":[[1776,2]]},"172":{"position":[[14,2]]},"178":{"position":[[53,2]]},"188":{"position":[[45,2]]},"198":{"position":[[595,2]]},"209":{"position":[[299,2]]},"221":{"position":[[1001,2]]},"233":{"position":[[1411,2]]},"255":{"position":[[997,2]]},"279":{"position":[[27,2]]},"331":{"position":[[53,2]]},"333":{"position":[[101,2]]},"353":{"position":[[0,2]]},"372":{"position":[[13,2]]},"380":{"position":[[14,2],[34,2]]},"407":{"position":[[25,2]]},"411":{"position":[[107,2],[115,2]]},"415":{"position":[[157,2]]},"417":{"position":[[148,2]]},"440":{"position":[[38,2]]},"454":{"position":[[17,2],[30,2]]},"523":{"position":[[195,2]]},"529":{"position":[[53,2]]},"533":{"position":[[562,2]]},"590":{"position":[[134,2]]},"603":{"position":[[180,2]]},"605":{"position":[[76,2]]},"617":{"position":[[299,2]]},"619":{"position":[[44,2]]},"621":{"position":[[19,2]]},"623":{"position":[[1776,2]]},"625":{"position":[[14,2]]},"631":{"position":[[53,2]]},"641":{"position":[[45,2]]},"653":{"position":[[496,2]]},"661":{"position":[[486,2]]},"671":{"position":[[595,2]]},"683":{"position":[[1001,2]]},"695":{"position":[[1411,2]]},"717":{"position":[[997,2]]},"743":{"position":[[53,2]]},"745":{"position":[[101,2]]},"805":{"position":[[27,2]]},"812":{"position":[[14,2],[34,2]]},"839":{"position":[[25,2]]},"843":{"position":[[107,2],[115,2]]},"847":{"position":[[157,2]]},"849":{"position":[[148,2]]},"862":{"position":[[0,2]]},"881":{"position":[[13,2]]},"884":{"position":[[38,2]]},"898":{"position":[[17,2],[30,2]]},"942":{"position":[[45,2]]},"950":{"position":[[47,2]]},"952":{"position":[[190,2]]},"972":{"position":[[0,2]]},"1104":{"position":[[12,2]]},"1121":{"position":[[12,2]]},"1144":{"position":[[25,2]]},"1166":{"position":[[16,2]]},"1220":{"position":[[189,2]]}}}],["代码生成",{"_index":1431,"t":{"998":{"position":[[37,4]]}}}],["代表",{"_index":1237,"t":{"502":{"position":[[19,2]]},"963":{"position":[[178,2],[255,2]]}}}],["令人",{"_index":381,"t":{"23":{"position":[[55,2]]}}}],["以上",{"_index":1412,"t":{"972":{"position":[[32,2]]}}}],["以下",{"_index":680,"t":{"168":{"position":[[0,2]]},"413":{"position":[[46,2]]},"525":{"position":[[33,2]]},"621":{"position":[[0,2]]},"845":{"position":[[46,2]]},"920":{"position":[[40,2]]}}}],["以及",{"_index":1489,"t":{"1064":{"position":[[437,2]]}}}],["价值",{"_index":256,"t":{"21":{"position":[[168,2]]}}}],["价值观",{"_index":156,"t":{"17":{"position":[[139,3]]}}}],["价格",{"_index":252,"t":{"21":{"position":[[161,2]]}}}],["任何",{"_index":877,"t":{"284":{"position":[[127,2]]},"322":{"position":[[125,2]]},"734":{"position":[[125,2]]},"760":{"position":[[127,2]]},"1044":{"position":[[573,2]]}}}],["任务",{"_index":1245,"t":{"523":{"position":[[213,2]]},"531":{"position":[[102,2],[212,2]]},"535":{"position":[[0,2],[29,2],[44,2]]},"537":{"position":[[409,2],[429,2]]},"549":{"position":[[47,2]]},"551":{"position":[[136,2]]},"553":{"position":[[141,2]]},"922":{"position":[[12,2],[36,2]]},"1194":{"position":[[632,2],[778,2]]}}}],["任意",{"_index":1367,"t":{"928":{"position":[[25,2]]}}}],["仿佛",{"_index":304,"t":{"21":{"position":[[335,2]]}}}],["企鹅",{"_index":893,"t":{"289":{"position":[[263,2],[326,2]]},"291":{"position":[[271,2],[338,2]]},"765":{"position":[[263,2],[326,2]]},"767":{"position":[[271,2],[338,2]]}}}],["优于",{"_index":1077,"t":{"372":{"position":[[46,2]]},"417":{"position":[[2,2]]},"849":{"position":[[2,2]]},"881":{"position":[[46,2]]}}}],["优先",{"_index":1131,"t":{"417":{"position":[[9,2]]},"493":{"position":[[161,2]]},"495":{"position":[[112,2]]},"553":{"position":[[309,2]]},"849":{"position":[[9,2]]}}}],["优势",{"_index":1384,"t":{"952":{"position":[[7,2]]},"1197":{"position":[[100,2]]}}}],["优化",{"_index":612,"t":{"147":{"position":[[14,2]]},"184":{"position":[[2036,2],[7613,2]]},"247":{"position":[[151,2]]},"553":{"position":[[367,2]]},"637":{"position":[[2036,2],[7613,2]]},"656":{"position":[[14,2]]},"709":{"position":[[151,2]]},"1128":{"position":[[14,2]]},"1166":{"position":[[7,2]]},"1214":{"position":[[220,2]]}}}],["优点",{"_index":688,"t":{"170":{"position":[[65,2]]},"623":{"position":[[65,2]]},"937":{"position":[[420,2]]},"942":{"position":[[0,2]]},"946":{"position":[[0,2]]},"950":{"position":[[0,2]]}}}],["优缺点",{"_index":1375,"t":{"937":{"position":[[414,3]]}}}],["优越",{"_index":211,"t":{"19":{"position":[[115,2]]}}}],["优雅",{"_index":764,"t":{"184":{"position":[[2021,2]]},"341":{"position":[[1116,2]]},"343":{"position":[[1458,2]]},"345":{"position":[[2428,2]]},"411":{"position":[[56,2]]},"637":{"position":[[2021,2]]},"753":{"position":[[1116,2]]},"755":{"position":[[1458,2]]},"757":{"position":[[2428,2]]},"843":{"position":[[56,2]]},"1200":{"position":[[826,2]]},"1205":{"position":[[1004,2]]}}}],["会",{"_index":172,"t":{"17":{"position":[[194,1]]},"21":{"position":[[58,1],[256,1],[298,1]]},"23":{"position":[[136,1]]},"28":{"position":[[36,1],[79,1]]},"36":{"position":[[146,1]]},"38":{"position":[[177,1]]},"42":{"position":[[29,1],[63,1]]},"263":{"position":[[71,1],[91,1],[112,1],[366,1]]},"279":{"position":[[34,1]]},"291":{"position":[[93,1]]},"305":{"position":[[79,1]]},"339":{"position":[[31,1]]},"343":{"position":[[1894,1]]},"368":{"position":[[22,1]]},"370":{"position":[[25,1]]},"409":{"position":[[637,1]]},"427":{"position":[[503,1]]},"491":{"position":[[20,1],[34,1]]},"493":{"position":[[142,1]]},"533":{"position":[[604,1]]},"551":{"position":[[437,1]]},"557":{"position":[[56,1],[171,1]]},"751":{"position":[[31,1]]},"755":{"position":[[1894,1]]},"767":{"position":[[93,1]]},"781":{"position":[[79,1]]},"789":{"position":[[71,1],[91,1],[112,1],[366,1]]},"805":{"position":[[34,1]]},"841":{"position":[[637,1]]},"877":{"position":[[22,1]]},"879":{"position":[[25,1]]},"1057":{"position":[[169,1]]},"1064":{"position":[[374,1]]},"1075":{"position":[[202,1]]},"1136":{"position":[[56,1],[77,1]]},"1148":{"position":[[395,1]]},"1151":{"position":[[352,1],[375,1]]},"1192":{"position":[[543,1]]}}}],["伟大",{"_index":39,"t":{"13":{"position":[[77,2],[154,2],[182,2],[232,2],[238,2]]}}}],["传",{"_index":1554,"t":{"1138":{"position":[[8,1]]}}}],["传播",{"_index":204,"t":{"19":{"position":[[73,2]]}}}],["传统",{"_index":573,"t":{"129":{"position":[[118,2]]},"575":{"position":[[118,2]]}}}],["传统意义",{"_index":881,"t":{"284":{"position":[[146,4]]},"760":{"position":[[146,4]]}}}],["传输",{"_index":1414,"t":{"977":{"position":[[60,2]]},"1218":{"position":[[171,2]]}}}],["传递",{"_index":1242,"t":{"523":{"position":[[139,2]]},"553":{"position":[[21,2]]},"922":{"position":[[187,2],[384,2]]},"924":{"position":[[2,2]]},"932":{"position":[[16,2]]},"963":{"position":[[133,2]]},"1136":{"position":[[66,2]]}}}],["伪",{"_index":1504,"t":{"1064":{"position":[[900,1]]}}}],["似乎",{"_index":337,"t":{"21":{"position":[[499,2]]}}}],["但是",{"_index":1340,"t":{"854":{"position":[[12,2]]},"1192":{"position":[[18,2]]}}}],["位置",{"_index":660,"t":{"160":{"position":[[22,2]]},"649":{"position":[[22,2]]},"1142":{"position":[[180,2]]},"1144":{"position":[[14,2]]},"1157":{"position":[[35,2]]}}}],["低",{"_index":584,"t":{"134":{"position":[[101,1]]},"158":{"position":[[464,1]]},"194":{"position":[[82,1]]},"279":{"position":[[59,1]]},"433":{"position":[[10,1],[479,1]]},"580":{"position":[[101,1]]},"647":{"position":[[464,1]]},"667":{"position":[[82,1]]},"805":{"position":[[59,1]]},"937":{"position":[[456,1]]}}}],["低层",{"_index":948,"t":{"308":{"position":[[97,2]]},"313":{"position":[[11,2]]},"315":{"position":[[65,2]]},"333":{"position":[[47,2],[142,2]]},"415":{"position":[[373,2]]},"720":{"position":[[97,2]]},"725":{"position":[[11,2]]},"727":{"position":[[65,2]]},"745":{"position":[[47,2],[142,2]]},"847":{"position":[[373,2]]}}}],["低级",{"_index":1537,"t":{"1102":{"position":[[11,2]]},"1119":{"position":[[11,2]]}}}],["体",{"_index":717,"t":{"170":{"position":[[1770,1]]},"318":{"position":[[4,1]]},"336":{"position":[[1314,1]]},"341":{"position":[[187,1]]},"343":{"position":[[275,1],[377,1]]},"345":{"position":[[455,1]]},"351":{"position":[[36,1]]},"356":{"position":[[550,1]]},"368":{"position":[[5,1],[38,1]]},"372":{"position":[[33,1],[90,1]]},"623":{"position":[[1770,1]]},"730":{"position":[[4,1]]},"748":{"position":[[1314,1]]},"753":{"position":[[187,1]]},"755":{"position":[[275,1],[377,1]]},"757":{"position":[[455,1]]},"860":{"position":[[36,1]]},"865":{"position":[[550,1]]},"877":{"position":[[5,1],[38,1]]},"881":{"position":[[33,1],[90,1]]},"918":{"position":[[37,1]]},"957":{"position":[[119,1],[218,1],[238,1]]},"968":{"position":[[2,1]]},"1010":{"position":[[947,1],[1122,1]]},"1038":{"position":[[34,1]]},"1048":{"position":[[238,1]]}}}],["体系",{"_index":198,"t":{"19":{"position":[[47,2]]}}}],["作为",{"_index":562,"t":{"129":{"position":[[58,2]]},"527":{"position":[[19,2]]},"575":{"position":[[58,2]]},"974":{"position":[[44,2]]}}}],["作用",{"_index":1586,"t":{"1157":{"position":[[66,2],[95,2],[135,2]]}}}],["使得",{"_index":1028,"t":{"345":{"position":[[123,2]]},"757":{"position":[[123,2]]},"957":{"position":[[60,2]]},"1055":{"position":[[64,2]]}}}],["使用",{"_index":460,"t":{"40":{"position":[[5,2],[15,2]]},"42":{"position":[[121,2]]},"48":{"position":[[2,2]]},"67":{"position":[[8,2]]},"131":{"position":[[97,2]]},"134":{"position":[[83,2]]},"142":{"position":[[0,2]]},"150":{"position":[[85,2]]},"158":{"position":[[49,2],[296,2],[446,2]]},"170":{"position":[[27,2],[1231,2]]},"176":{"position":[[37,2]]},"184":{"position":[[7607,2]]},"194":{"position":[[64,2],[329,2],[334,2]]},"215":{"position":[[253,2]]},"229":{"position":[[894,2]]},"247":{"position":[[190,2],[199,2]]},"251":{"position":[[79,2]]},"258":{"position":[[102,2]]},"260":{"position":[[60,2]]},"281":{"position":[[28,2],[53,2]]},"299":{"position":[[203,2]]},"310":{"position":[[35,2]]},"329":{"position":[[7,2],[393,2]]},"331":{"position":[[72,2]]},"333":{"position":[[58,2],[78,2]]},"336":{"position":[[0,2],[984,2]]},"375":{"position":[[227,2],[354,2]]},"383":{"position":[[195,2],[338,2]]},"385":{"position":[[120,2],[155,2]]},"388":{"position":[[208,2],[260,2]]},"390":{"position":[[3,2]]},"409":{"position":[[225,2]]},"411":{"position":[[23,2]]},"415":{"position":[[297,2]]},"417":{"position":[[11,2]]},"419":{"position":[[11,2],[41,2]]},"422":{"position":[[87,2]]},"433":{"position":[[14,2]]},"437":{"position":[[331,2]]},"440":{"position":[[27,2]]},"445":{"position":[[362,2]]},"447":{"position":[[12,2]]},"452":{"position":[[594,2]]},"457":{"position":[[896,2]]},"491":{"position":[[46,2]]},"493":{"position":[[115,2],[151,2]]},"495":{"position":[[114,2],[129,2]]},"497":{"position":[[35,2],[48,2]]},"533":{"position":[[679,2]]},"539":{"position":[[26,2]]},"545":{"position":[[12,2]]},"547":{"position":[[355,2]]},"553":{"position":[[166,2],[213,2],[243,2],[351,2]]},"557":{"position":[[36,2],[108,2],[215,2]]},"570":{"position":[[54,2],[96,2],[207,2]]},"577":{"position":[[97,2]]},"580":{"position":[[83,2]]},"588":{"position":[[0,2]]},"623":{"position":[[27,2],[1231,2]]},"629":{"position":[[37,2]]},"637":{"position":[[7607,2]]},"647":{"position":[[49,2],[296,2],[446,2]]},"659":{"position":[[85,2]]},"667":{"position":[[64,2],[329,2],[334,2]]},"677":{"position":[[253,2]]},"691":{"position":[[894,2]]},"709":{"position":[[190,2],[199,2]]},"713":{"position":[[79,2]]},"722":{"position":[[35,2]]},"741":{"position":[[7,2],[393,2]]},"743":{"position":[[72,2]]},"745":{"position":[[58,2],[78,2]]},"748":{"position":[[0,2],[984,2]]},"775":{"position":[[203,2]]},"784":{"position":[[102,2]]},"786":{"position":[[60,2]]},"807":{"position":[[28,2],[53,2]]},"815":{"position":[[195,2],[338,2]]},"817":{"position":[[120,2],[155,2]]},"820":{"position":[[208,2],[260,2]]},"822":{"position":[[3,2]]},"841":{"position":[[225,2]]},"843":{"position":[[23,2]]},"847":{"position":[[297,2]]},"849":{"position":[[11,2]]},"851":{"position":[[11,2],[41,2]]},"884":{"position":[[27,2]]},"889":{"position":[[362,2]]},"891":{"position":[[12,2]]},"896":{"position":[[594,2]]},"901":{"position":[[896,2]]},"916":{"position":[[0,2]]},"920":{"position":[[36,2],[43,2]]},"922":{"position":[[222,2],[400,2]]},"974":{"position":[[8,2],[18,2]]},"1001":{"position":[[82,2]]},"1008":{"position":[[15,2],[26,2],[48,2]]},"1018":{"position":[[39,2]]},"1031":{"position":[[2,2],[157,2]]},"1057":{"position":[[0,2]]},"1064":{"position":[[327,2],[993,2],[1061,2]]},"1067":{"position":[[14,2]]},"1069":{"position":[[57,2]]},"1073":{"position":[[18,2]]},"1075":{"position":[[97,2]]},"1077":{"position":[[124,2]]},"1092":{"position":[[6,2]]},"1100":{"position":[[113,2]]},"1102":{"position":[[27,2]]},"1109":{"position":[[6,2]]},"1117":{"position":[[113,2]]},"1119":{"position":[[27,2]]},"1126":{"position":[[117,2]]},"1148":{"position":[[320,2]]},"1151":{"position":[[2,2],[59,2]]},"1153":{"position":[[2,2],[57,2]]},"1159":{"position":[[2,2]]},"1161":{"position":[[15,2]]},"1175":{"position":[[11,2]]},"1188":{"position":[[186,2]]},"1194":{"position":[[157,2]]},"1207":{"position":[[9,2]]},"1214":{"position":[[224,2],[262,2],[267,2],[341,2]]},"1216":{"position":[[29,2],[91,2],[182,2],[251,2]]},"1220":{"position":[[37,2],[99,2]]}}}],["使用率",{"_index":1643,"t":{"1216":{"position":[[329,3]]}}}],["例",{"_index":1280,"t":{"553":{"position":[[104,1]]}}}],["例如",{"_index":1012,"t":{"343":{"position":[[35,2]]},"345":{"position":[[2973,2]]},"523":{"position":[[208,2]]},"541":{"position":[[29,2]]},"543":{"position":[[37,2]]},"549":{"position":[[40,2]]},"755":{"position":[[35,2]]},"757":{"position":[[2973,2]]},"1046":{"position":[[10,2]]},"1064":{"position":[[661,2],[790,2],[988,2]]},"1067":{"position":[[35,2]]},"1157":{"position":[[152,2]]}}}],["例子",{"_index":1058,"t":{"356":{"position":[[9,2]]},"365":{"position":[[6,2],[120,2]]},"865":{"position":[[9,2]]},"874":{"position":[[6,2],[120,2]]}}}],["依次",{"_index":452,"t":{"36":{"position":[[147,2]]}}}],["依然",{"_index":1023,"t":{"343":{"position":[[186,2]]},"755":{"position":[[186,2]]}}}],["依赖",{"_index":437,"t":{"33":{"position":[[109,2],[149,2]]},"129":{"position":[[109,2]]},"170":{"position":[[20,2],[54,2],[128,2],[139,2],[157,2],[1391,2]]},"191":{"position":[[4,2]]},"194":{"position":[[4,2],[9,2],[193,2],[322,2]]},"196":{"position":[[4,2]]},"258":{"position":[[97,2]]},"260":{"position":[[54,2]]},"281":{"position":[[23,2]]},"308":{"position":[[0,2],[95,2],[107,2],[117,2],[126,2],[161,2]]},"310":{"position":[[0,2],[29,2],[40,2],[63,2]]},"313":{"position":[[9,2],[194,2],[295,2]]},"315":{"position":[[346,2],[396,2]]},"329":{"position":[[39,2],[177,2]]},"331":{"position":[[9,2],[30,2]]},"333":{"position":[[7,2],[29,2],[73,2],[88,2]]},"345":{"position":[[395,2]]},"358":{"position":[[768,2]]},"372":{"position":[[51,2]]},"388":{"position":[[73,2]]},"415":{"position":[[292,2],[320,2],[371,2],[382,2],[391,2],[399,2]]},"568":{"position":[[196,2]]},"575":{"position":[[109,2]]},"623":{"position":[[20,2],[54,2],[128,2],[139,2],[157,2],[1391,2]]},"664":{"position":[[4,2]]},"667":{"position":[[4,2],[9,2],[193,2],[322,2]]},"669":{"position":[[4,2]]},"720":{"position":[[0,2],[95,2],[107,2],[117,2],[126,2],[161,2]]},"722":{"position":[[0,2],[29,2],[40,2],[63,2]]},"725":{"position":[[9,2],[194,2],[295,2]]},"727":{"position":[[346,2],[396,2]]},"741":{"position":[[39,2],[177,2]]},"743":{"position":[[9,2],[30,2]]},"745":{"position":[[7,2],[29,2],[73,2],[88,2]]},"757":{"position":[[395,2]]},"784":{"position":[[97,2]]},"786":{"position":[[54,2]]},"807":{"position":[[23,2]]},"820":{"position":[[73,2]]},"847":{"position":[[292,2],[320,2],[371,2],[382,2],[391,2],[399,2]]},"867":{"position":[[768,2]]},"881":{"position":[[51,2]]},"937":{"position":[[448,2]]},"1075":{"position":[[143,2],[276,2]]}}}],["依赖于",{"_index":1486,"t":{"1064":{"position":[[382,3],[512,3],[599,3]]}}}],["便",{"_index":302,"t":{"21":{"position":[[329,1]]}}}],["便于",{"_index":693,"t":{"170":{"position":[[92,2]]},"180":{"position":[[17,2]]},"419":{"position":[[61,2]]},"463":{"position":[[7,2]]},"623":{"position":[[92,2]]},"633":{"position":[[17,2]]},"851":{"position":[[61,2]]},"907":{"position":[[7,2]]}}}],["保存",{"_index":909,"t":{"296":{"position":[[189,2],[424,2]]},"313":{"position":[[108,2]]},"315":{"position":[[166,2],[301,2]]},"365":{"position":[[95,2]]},"566":{"position":[[136,2]]},"725":{"position":[[108,2]]},"727":{"position":[[166,2],[301,2]]},"772":{"position":[[189,2],[424,2]]},"874":{"position":[[95,2]]},"1182":{"position":[[15,2]]}}}],["保护",{"_index":133,"t":{"17":{"position":[[63,2]]},"134":{"position":[[255,2]]},"539":{"position":[[432,2]]},"553":{"position":[[65,2],[267,2]]},"580":{"position":[[255,2]]}}}],["保持",{"_index":907,"t":{"294":{"position":[[487,2]]},"296":{"position":[[475,2]]},"305":{"position":[[60,2]]},"380":{"position":[[46,2]]},"417":{"position":[[198,2]]},"419":{"position":[[31,2]]},"770":{"position":[[487,2]]},"772":{"position":[[475,2]]},"781":{"position":[[60,2]]},"812":{"position":[[46,2]]},"849":{"position":[[198,2]]},"851":{"position":[[31,2]]},"1080":{"position":[[92,2]]},"1085":{"position":[[92,2]]}}}],["保留",{"_index":447,"t":{"33":{"position":[[205,2]]},"343":{"position":[[188,2]]},"755":{"position":[[188,2]]}}}],["保证",{"_index":1195,"t":{"459":{"position":[[2,2]]},"903":{"position":[[2,2]]}}}],["保障",{"_index":142,"t":{"17":{"position":[[89,2]]}}}],["信",{"_index":932,"t":{"303":{"position":[[70,1]]},"385":{"position":[[6,1],[123,1]]},"397":{"position":[[75,1]]},"779":{"position":[[70,1]]},"817":{"position":[[6,1],[123,1]]},"829":{"position":[[75,1]]}}}],["信任",{"_index":1093,"t":{"375":{"position":[[223,2]]}}}],["信号",{"_index":1224,"t":{"495":{"position":[[21,2],[138,2]]},"922":{"position":[[375,2],[394,2]]},"932":{"position":[[14,2]]},"1096":{"position":[[8,2]]},"1113":{"position":[[8,2]]},"1182":{"position":[[31,2]]},"1200":{"position":[[1220,2]]}}}],["信号处理",{"_index":1534,"t":{"1100":{"position":[[51,4]]},"1117":{"position":[[51,4]]},"1194":{"position":[[112,4],[252,4]]}}}],["信念",{"_index":96,"t":{"13":{"position":[[254,2]]},"21":{"position":[[217,2]]}}}],["信息",{"_index":653,"t":{"158":{"position":[[167,2]]},"201":{"position":[[17,2]]},"203":{"position":[[51,2]]},"215":{"position":[[2091,2]]},"227":{"position":[[327,2]]},"375":{"position":[[214,2],[286,2]]},"409":{"position":[[303,2]]},"555":{"position":[[31,2]]},"557":{"position":[[319,2]]},"559":{"position":[[76,2]]},"561":{"position":[[6,2]]},"568":{"position":[[81,2]]},"609":{"position":[[17,2]]},"611":{"position":[[51,2]]},"647":{"position":[[167,2]]},"677":{"position":[[2091,2]]},"689":{"position":[[327,2]]},"841":{"position":[[303,2]]},"957":{"position":[[74,2]]},"974":{"position":[[92,2]]},"1010":{"position":[[942,2],[1045,2],[1117,2]]},"1064":{"position":[[348,2],[435,2],[444,2],[524,2],[583,2],[647,2]]},"1075":{"position":[[85,2]]},"1144":{"position":[[167,2]]}}}],["信用卡",{"_index":1107,"t":{"383":{"position":[[78,3],[197,3]]},"388":{"position":[[210,3]]},"815":{"position":[[78,3],[197,3]]},"820":{"position":[[210,3]]}}}],["修复",{"_index":1508,"t":{"1067":{"position":[[30,2],[68,2]]}}}],["修改",{"_index":538,"t":{"123":{"position":[[12,2],[31,2],[50,2],[65,2]]},"158":{"position":[[383,2]]},"170":{"position":[[1110,2],[1752,2]]},"172":{"position":[[10,2],[144,2]]},"186":{"position":[[13,2],[101,2]]},"331":{"position":[[14,2],[49,2]]},"351":{"position":[[7,2]]},"353":{"position":[[10,2]]},"368":{"position":[[16,2]]},"378":{"position":[[98,2]]},"380":{"position":[[10,2],[27,2],[42,2]]},"383":{"position":[[381,2]]},"385":{"position":[[16,2]]},"388":{"position":[[346,2]]},"407":{"position":[[21,2]]},"411":{"position":[[111,2]]},"415":{"position":[[132,2],[153,2]]},"431":{"position":[[1,2]]},"447":{"position":[[23,2]]},"459":{"position":[[33,2]]},"539":{"position":[[16,2],[460,2]]},"605":{"position":[[12,2],[31,2],[50,2],[65,2]]},"623":{"position":[[1110,2],[1752,2]]},"625":{"position":[[10,2],[144,2]]},"639":{"position":[[13,2],[101,2]]},"647":{"position":[[383,2]]},"743":{"position":[[14,2],[49,2]]},"810":{"position":[[98,2]]},"812":{"position":[[10,2],[27,2],[42,2]]},"815":{"position":[[381,2]]},"817":{"position":[[16,2]]},"820":{"position":[[346,2]]},"839":{"position":[[21,2]]},"843":{"position":[[111,2]]},"847":{"position":[[132,2],[153,2]]},"860":{"position":[[7,2]]},"862":{"position":[[10,2]]},"877":{"position":[[16,2]]},"891":{"position":[[23,2]]},"903":{"position":[[33,2]]},"942":{"position":[[14,2]]},"950":{"position":[[23,2]]},"952":{"position":[[87,2]]},"954":{"position":[[13,2]]},"957":{"position":[[77,2],[199,2],[234,2]]},"963":{"position":[[4,2],[139,2],[306,2]]},"1008":{"position":[[92,2]]},"1138":{"position":[[93,2]]},"1146":{"position":[[99,2]]},"1148":{"position":[[122,2]]}}}],["倍",{"_index":1411,"t":{"972":{"position":[[31,1]]},"1197":{"position":[[125,1]]}}}],["倒置",{"_index":945,"t":{"308":{"position":[[2,2]]},"415":{"position":[[322,2]]},"720":{"position":[[2,2]]},"847":{"position":[[322,2]]}}}],["值",{"_index":621,"t":{"150":{"position":[[102,1]]},"339":{"position":[[81,1],[165,1]]},"427":{"position":[[525,1]]},"429":{"position":[[449,1]]},"433":{"position":[[225,1]]},"557":{"position":[[202,1]]},"559":{"position":[[551,1]]},"659":{"position":[[102,1]]},"751":{"position":[[81,1],[165,1]]},"918":{"position":[[64,1]]},"957":{"position":[[37,1],[82,1],[192,1],[204,1]]},"959":{"position":[[75,1]]},"963":{"position":[[9,1],[261,1],[313,1],[364,1]]},"1010":{"position":[[2338,1]]},"1142":{"position":[[126,1]]},"1148":{"position":[[31,1],[96,1],[127,1]]},"1157":{"position":[[117,1]]}}}],["值得",{"_index":90,"t":{"13":{"position":[[227,2]]},"205":{"position":[[174,2]]},"613":{"position":[[174,2]]},"1035":{"position":[[79,2]]}}}],["做",{"_index":867,"t":{"281":{"position":[[111,1],[117,1]]},"345":{"position":[[149,1]]},"351":{"position":[[41,1]]},"365":{"position":[[11,1]]},"411":{"position":[[80,1]]},"557":{"position":[[59,1]]},"757":{"position":[[149,1]]},"807":{"position":[[111,1],[117,1]]},"843":{"position":[[80,1]]},"860":{"position":[[41,1]]},"874":{"position":[[11,1]]},"922":{"position":[[461,1]]}}}],["做主",{"_index":371,"t":{"23":{"position":[[20,2]]}}}],["做好",{"_index":1599,"t":{"1170":{"position":[[40,2]]}}}],["做法",{"_index":1284,"t":{"553":{"position":[[305,2]]},"918":{"position":[[30,2]]}}}],["停止",{"_index":594,"t":{"134":{"position":[[994,2]]},"138":{"position":[[526,2]]},"194":{"position":[[789,2]]},"227":{"position":[[239,2],[1085,2]]},"336":{"position":[[1115,2]]},"580":{"position":[[994,2]]},"584":{"position":[[526,2]]},"667":{"position":[[789,2]]},"689":{"position":[[239,2],[1085,2]]},"748":{"position":[[1115,2]]},"1100":{"position":[[104,2]]},"1117":{"position":[[104,2]]},"1142":{"position":[[50,2]]},"1157":{"position":[[86,2],[188,2]]}}}],["健康",{"_index":328,"t":{"21":{"position":[[466,2]]}}}],["健康检查",{"_index":1631,"t":{"1207":{"position":[[57,4]]}}}],["催化剂",{"_index":363,"t":{"21":{"position":[[619,3]]}}}],["像",{"_index":866,"t":{"281":{"position":[[94,1]]},"305":{"position":[[124,1]]},"333":{"position":[[125,1]]},"411":{"position":[[90,1]]},"745":{"position":[[125,1]]},"781":{"position":[[124,1]]},"807":{"position":[[94,1]]},"843":{"position":[[90,1]]},"918":{"position":[[5,1]]},"1136":{"position":[[57,1]]}}}],["僵尸",{"_index":1606,"t":{"1186":{"position":[[20,2]]},"1188":{"position":[[8,2],[19,2],[177,2]]},"1192":{"position":[[546,2],[581,2]]}}}],["儿子",{"_index":1604,"t":{"1186":{"position":[[11,2],[25,2]]},"1191":{"position":[[19,2]]}}}],["允许",{"_index":465,"t":{"42":{"position":[[45,2]]},"294":{"position":[[403,2]]},"296":{"position":[[384,2]]},"380":{"position":[[6,2]]},"470":{"position":[[53,2]]},"473":{"position":[[15,2]]},"500":{"position":[[22,2]]},"511":{"position":[[11,2]]},"533":{"position":[[9,2]]},"539":{"position":[[487,2]]},"770":{"position":[[403,2]]},"772":{"position":[[384,2]]},"812":{"position":[[6,2]]},"957":{"position":[[18,2]]},"1044":{"position":[[159,2],[174,2],[447,2],[471,2],[496,2]]}}}],["元",{"_index":615,"t":{"150":{"position":[[9,1],[340,1]]},"194":{"position":[[256,1]]},"215":{"position":[[2090,1]]},"227":{"position":[[326,1]]},"383":{"position":[[194,1],[337,1]]},"385":{"position":[[119,1]]},"388":{"position":[[207,1],[259,1]]},"659":{"position":[[9,1],[340,1]]},"667":{"position":[[256,1]]},"677":{"position":[[2090,1]]},"689":{"position":[[326,1]]},"815":{"position":[[194,1],[337,1]]},"817":{"position":[[119,1]]},"820":{"position":[[207,1],[259,1]]},"968":{"position":[[14,1]]}}}],["充裕",{"_index":347,"t":{"21":{"position":[[542,2]]}}}],["先",{"_index":436,"t":{"33":{"position":[[98,1]]},"480":{"position":[[24,1]]},"533":{"position":[[598,1]]},"963":{"position":[[319,1]]},"1186":{"position":[[8,1],[27,1]]},"1191":{"position":[[14,1]]},"1192":{"position":[[15,1]]}}}],["先辈",{"_index":219,"t":{"21":{"position":[[24,2]]}}}],["兑现",{"_index":301,"t":{"21":{"position":[[324,2]]}}}],["全局",{"_index":589,"t":{"134":{"position":[[295,2]]},"186":{"position":[[103,2]]},"580":{"position":[[295,2]]},"639":{"position":[[103,2]]},"1018":{"position":[[41,2]]},"1214":{"position":[[364,2]]}}}],["公共",{"_index":1141,"t":{"417":{"position":[[159,2]]},"849":{"position":[[159,2]]}}}],["共享",{"_index":1250,"t":{"529":{"position":[[23,2]]},"535":{"position":[[34,2]]},"539":{"position":[[18,2]]},"1008":{"position":[[94,2]]},"1218":{"position":[[37,2]]}}}],["共享资源",{"_index":1279,"t":{"553":{"position":[[67,4]]}}}],["共同",{"_index":83,"t":{"13":{"position":[[209,2]]},"21":{"position":[[444,2]]}}}],["关于",{"_index":1491,"t":{"1064":{"position":[[529,2],[563,2]]}}}],["关注",{"_index":700,"t":{"170":{"position":[[170,2]]},"623":{"position":[[170,2]]}}}],["关系",{"_index":321,"t":{"21":{"position":[[417,2]]},"23":{"position":[[2,2]]},"191":{"position":[[6,2]]},"194":{"position":[[6,2]]},"305":{"position":[[99,2]]},"333":{"position":[[90,2]]},"664":{"position":[[6,2]]},"667":{"position":[[6,2]]},"745":{"position":[[90,2]]},"781":{"position":[[99,2]]}}}],["关联",{"_index":1214,"t":{"475":{"position":[[45,2]]},"480":{"position":[[27,2]]},"1170":{"position":[[42,2]]}}}],["关键",{"_index":410,"t":{"26":{"position":[[52,2]]},"168":{"position":[[22,2]]},"380":{"position":[[55,2]]},"621":{"position":[[22,2]]},"812":{"position":[[55,2]]},"1220":{"position":[[60,2]]}}}],["关键因素",{"_index":129,"t":{"17":{"position":[[46,4]]}}}],["关键字",{"_index":1472,"t":{"1048":{"position":[[226,3]]}}}],["关键技术",{"_index":1415,"t":{"977":{"position":[[63,4]]}}}],["关闭",{"_index":762,"t":{"184":{"position":[[1998,2]]},"336":{"position":[[753,2]]},"339":{"position":[[14,2],[54,2],[93,2],[139,2],[182,2],[229,2]]},"341":{"position":[[10,2],[51,2],[79,2],[1089,2]]},"343":{"position":[[1460,2]]},"345":{"position":[[2430,2]]},"375":{"position":[[89,2],[393,2],[454,2],[478,2]]},"378":{"position":[[100,2]]},"380":{"position":[[29,2]]},"383":{"position":[[383,2]]},"401":{"position":[[468,2]]},"407":{"position":[[761,2]]},"409":{"position":[[351,2],[419,2]]},"415":{"position":[[134,2]]},"557":{"position":[[172,2]]},"637":{"position":[[1998,2]]},"748":{"position":[[753,2]]},"751":{"position":[[14,2],[54,2],[93,2],[139,2],[182,2],[229,2]]},"753":{"position":[[10,2],[51,2],[79,2],[1089,2]]},"755":{"position":[[1460,2]]},"757":{"position":[[2430,2]]},"810":{"position":[[100,2]]},"812":{"position":[[29,2]]},"815":{"position":[[383,2]]},"833":{"position":[[468,2]]},"839":{"position":[[761,2]]},"841":{"position":[[351,2],[419,2]]},"847":{"position":[[134,2]]},"926":{"position":[[218,2]]},"1200":{"position":[[828,2],[1223,2],[1288,2]]},"1205":{"position":[[1006,2]]}}}],["其一",{"_index":183,"t":{"17":{"position":[[229,2]]}}}],["其中",{"_index":128,"t":{"17":{"position":[[41,2]]},"150":{"position":[[238,2]]},"659":{"position":[[238,2]]}}}],["其他",{"_index":545,"t":{"126":{"position":[[33,2]]},"180":{"position":[[149,2]]},"313":{"position":[[315,2]]},"351":{"position":[[17,2]]},"353":{"position":[[22,2]]},"417":{"position":[[85,2]]},"539":{"position":[[489,2]]},"572":{"position":[[33,2]]},"633":{"position":[[149,2]]},"725":{"position":[[315,2]]},"849":{"position":[[85,2]]},"860":{"position":[[17,2]]},"862":{"position":[[22,2]]},"1052":{"position":[[49,2]]},"1057":{"position":[[66,2]]},"1064":{"position":[[439,2]]},"1194":{"position":[[776,2]]}}}],["其子",{"_index":1474,"t":{"1055":{"position":[[26,2]]}}}],["具体",{"_index":684,"t":{"170":{"position":[[22,2],[49,2],[74,2],[134,2],[1233,2],[1393,2]]},"310":{"position":[[11,2]]},"313":{"position":[[196,2]]},"315":{"position":[[402,2]]},"327":{"position":[[221,2]]},"333":{"position":[[13,2]]},"345":{"position":[[218,2],[234,2]]},"388":{"position":[[75,2]]},"401":{"position":[[129,2]]},"415":{"position":[[314,2]]},"457":{"position":[[560,2]]},"623":{"position":[[22,2],[49,2],[74,2],[134,2],[1233,2],[1393,2]]},"722":{"position":[[11,2]]},"725":{"position":[[196,2]]},"727":{"position":[[402,2]]},"739":{"position":[[221,2]]},"745":{"position":[[13,2]]},"757":{"position":[[218,2],[234,2]]},"820":{"position":[[75,2]]},"833":{"position":[[129,2]]},"847":{"position":[[314,2]]},"901":{"position":[[560,2]]},"930":{"position":[[91,2]]},"954":{"position":[[123,2]]}}}],["具备",{"_index":771,"t":{"188":{"position":[[47,2]]},"641":{"position":[[47,2]]}}}],["具有",{"_index":1520,"t":{"1075":{"position":[[14,2]]}}}],["兼容",{"_index":734,"t":{"176":{"position":[[30,2]]},"629":{"position":[[30,2]]},"854":{"position":[[69,2]]},"946":{"position":[[6,2]]},"998":{"position":[[15,2]]}}}],["兼容性",{"_index":1389,"t":{"954":{"position":[[99,3]]},"1100":{"position":[[60,3]]},"1117":{"position":[[60,3]]}}}],["内",{"_index":1263,"t":{"533":{"position":[[623,1]]}}}],["内在",{"_index":158,"t":{"17":{"position":[[150,2]]}}}],["内存",{"_index":1296,"t":{"557":{"position":[[39,2],[60,2],[111,2],[146,2],[213,2],[258,2]]},"570":{"position":[[52,2],[163,2]]},"1146":{"position":[[128,2]]},"1148":{"position":[[268,2]]}}}],["内存空间",{"_index":1370,"t":{"932":{"position":[[2,4]]}}}],["内容",{"_index":479,"t":{"46":{"position":[[17,2],[30,2]]},"240":{"position":[[64,2]]},"504":{"position":[[110,2]]},"702":{"position":[[64,2]]},"1077":{"position":[[108,2]]},"1092":{"position":[[336,2]]},"1098":{"position":[[419,2]]},"1109":{"position":[[336,2]]},"1115":{"position":[[419,2]]},"1146":{"position":[[130,2]]}}}],["内核",{"_index":521,"t":{"110":{"position":[[28,2],[45,2]]},"112":{"position":[[0,2]]},"115":{"position":[[177,2],[262,2]]},"126":{"position":[[68,2]]},"129":{"position":[[0,2],[9,2],[120,2],[128,2]]},"131":{"position":[[7,2]]},"134":{"position":[[334,2]]},"136":{"position":[[758,2]]},"155":{"position":[[8,2]]},"158":{"position":[[93,2],[203,2]]},"160":{"position":[[191,2],[492,2]]},"203":{"position":[[35,2],[81,2]]},"205":{"position":[[48,2]]},"207":{"position":[[153,2],[283,2]]},"224":{"position":[[13,2]]},"572":{"position":[[68,2]]},"575":{"position":[[0,2],[9,2],[120,2],[128,2]]},"577":{"position":[[7,2]]},"580":{"position":[[334,2]]},"582":{"position":[[758,2]]},"592":{"position":[[28,2],[45,2]]},"594":{"position":[[0,2]]},"597":{"position":[[177,2],[262,2]]},"611":{"position":[[35,2],[81,2]]},"613":{"position":[[48,2]]},"615":{"position":[[153,2],[283,2]]},"644":{"position":[[8,2]]},"647":{"position":[[93,2],[203,2]]},"649":{"position":[[191,2],[492,2]]},"686":{"position":[[13,2]]},"1064":{"position":[[433,2],[570,2]]}}}],["内置",{"_index":744,"t":{"180":{"position":[[3,2]]},"633":{"position":[[3,2]]}}}],["内聚性",{"_index":864,"t":{"279":{"position":[[60,3]]},"805":{"position":[[60,3]]}}}],["内部",{"_index":1574,"t":{"1148":{"position":[[380,2]]},"1218":{"position":[[199,2]]}}}],["再次",{"_index":294,"t":{"21":{"position":[[299,2]]}}}],["冒号",{"_index":404,"t":{"26":{"position":[[16,2],[25,2]]},"28":{"position":[[9,2],[49,2]]},"40":{"position":[[11,2],[22,2]]},"42":{"position":[[3,2],[41,2]]}}}],["写",{"_index":790,"t":{"203":{"position":[[94,1]]},"343":{"position":[[1058,1]]},"611":{"position":[[94,1]]},"755":{"position":[[1058,1]]}}}],["写入",{"_index":792,"t":{"205":{"position":[[176,2],[401,2]]},"237":{"position":[[29,2]]},"345":{"position":[[4261,2]]},"452":{"position":[[223,2]]},"613":{"position":[[176,2],[401,2]]},"699":{"position":[[29,2]]},"757":{"position":[[4261,2]]},"896":{"position":[[223,2]]}}}],["农业",{"_index":232,"t":{"21":{"position":[[86,2]]}}}],["农民",{"_index":56,"t":{"13":{"position":[[117,2]]}}}],["冲突",{"_index":1628,"t":{"1197":{"position":[[149,2]]}}}],["决定",{"_index":373,"t":{"23":{"position":[[27,2]]}}}],["准确",{"_index":1072,"t":{"368":{"position":[[42,2]]},"877":{"position":[[42,2]]}}}],["减少",{"_index":1133,"t":{"417":{"position":[[35,2],[106,2]]},"529":{"position":[[28,2]]},"537":{"position":[[167,2],[510,2]]},"849":{"position":[[35,2],[106,2]]},"1010":{"position":[[2340,2]]},"1218":{"position":[[228,2]]}}}],["减弱",{"_index":938,"t":{"305":{"position":[[53,2]]},"781":{"position":[[53,2]]}}}],["几个",{"_index":1126,"t":{"413":{"position":[[12,2]]},"845":{"position":[[12,2]]}}}],["几乎",{"_index":377,"t":{"23":{"position":[[44,2]]}}}],["几种",{"_index":1248,"t":{"525":{"position":[[35,2]]}}}],["出新",{"_index":940,"t":{"305":{"position":[[68,2]]},"781":{"position":[[68,2]]}}}],["出现",{"_index":422,"t":{"28":{"position":[[26,2]]},"53":{"position":[[13,2]]},"854":{"position":[[57,2],[63,2]]}}}],["出自",{"_index":44,"t":{"13":{"position":[[88,2]]}}}],["出错",{"_index":1122,"t":{"409":{"position":[[425,2]]},"841":{"position":[[425,2]]}}}],["函数",{"_index":1067,"t":{"365":{"position":[[9,2],[133,2]]},"378":{"position":[[85,2]]},"388":{"position":[[362,2]]},"411":{"position":[[37,2]]},"415":{"position":[[119,2]]},"440":{"position":[[78,2]]},"467":{"position":[[66,2]]},"557":{"position":[[67,2]]},"810":{"position":[[85,2]]},"820":{"position":[[362,2]]},"843":{"position":[[37,2]]},"847":{"position":[[119,2]]},"874":{"position":[[9,2],[133,2]]},"884":{"position":[[78,2]]},"911":{"position":[[66,2]]},"918":{"position":[[8,2]]},"922":{"position":[[16,2],[192,2]]},"924":{"position":[[53,2]]},"1142":{"position":[[45,2],[91,2],[109,2],[201,2]]},"1144":{"position":[[22,2],[57,2]]},"1194":{"position":[[116,2],[256,2]]}}}],["函数参数",{"_index":1561,"t":{"1146":{"position":[[70,4]]}}}],["函数调用",{"_index":710,"t":{"170":{"position":[[952,4],[1630,4]]},"623":{"position":[[952,4],[1630,4]]}}}],["分为",{"_index":854,"t":{"265":{"position":[[4,2]]},"358":{"position":[[737,2]]},"365":{"position":[[124,2]]},"415":{"position":[[308,2]]},"791":{"position":[[4,2]]},"847":{"position":[[308,2]]},"867":{"position":[[737,2]]},"874":{"position":[[124,2]]}}}],["分发",{"_index":659,"t":{"160":{"position":[[9,2]]},"649":{"position":[[9,2]]}}}],["分析",{"_index":896,"t":{"289":{"position":[[337,2]]},"356":{"position":[[511,2]]},"765":{"position":[[337,2]]},"865":{"position":[[511,2]]}}}],["分离",{"_index":951,"t":{"310":{"position":[[37,2]]},"440":{"position":[[31,2]]},"722":{"position":[[37,2]]},"884":{"position":[[31,2]]}}}],["分配",{"_index":1303,"t":{"557":{"position":[[148,2]]}}}],["分配不公",{"_index":224,"t":{"21":{"position":[[52,4]]}}}],["分钟",{"_index":6,"t":{"5":{"position":[[19,2]]},"7":{"position":[[19,2]]},"9":{"position":[[19,2]]}}}],["分隔",{"_index":516,"t":{"104":{"position":[[20,2]]}}}],["分页",{"_index":1353,"t":{"922":{"position":[[212,2]]}}}],["切换",{"_index":574,"t":{"129":{"position":[[122,2]]},"170":{"position":[[1100,2]]},"313":{"position":[[313,2]]},"325":{"position":[[261,2]]},"465":{"position":[[42,2]]},"575":{"position":[[122,2]]},"623":{"position":[[1100,2]]},"725":{"position":[[313,2]]},"737":{"position":[[261,2]]},"909":{"position":[[42,2]]},"926":{"position":[[201,2]]},"1060":{"position":[[34,2]]},"1151":{"position":[[75,2]]},"1153":{"position":[[71,2]]},"1163":{"position":[[2,2]]}}}],["切片",{"_index":1460,"t":{"1044":{"position":[[73,2],[94,2],[628,2]]}}}],["列出",{"_index":1238,"t":{"504":{"position":[[104,2]]},"1188":{"position":[[85,2]]}}}],["列表",{"_index":490,"t":{"60":{"position":[[9,2]]},"358":{"position":[[295,2]]},"867":{"position":[[295,2]]},"1028":{"position":[[119,2]]}}}],["创建",{"_index":591,"t":{"134":{"position":[[422,2]]},"138":{"position":[[104,2]]},"253":{"position":[[126,2]]},"281":{"position":[[80,2]]},"310":{"position":[[32,2]]},"356":{"position":[[126,2]]},"405":{"position":[[266,2]]},"409":{"position":[[17,2],[65,2],[149,2]]},"413":{"position":[[28,2]]},"440":{"position":[[7,2],[22,2]]},"502":{"position":[[15,2]]},"521":{"position":[[185,2]]},"523":{"position":[[15,2]]},"531":{"position":[[151,2],[302,2]]},"580":{"position":[[422,2]]},"584":{"position":[[104,2]]},"715":{"position":[[126,2]]},"722":{"position":[[32,2]]},"807":{"position":[[80,2]]},"837":{"position":[[266,2]]},"841":{"position":[[17,2],[65,2],[149,2]]},"845":{"position":[[28,2]]},"865":{"position":[[126,2]]},"884":{"position":[[7,2],[22,2]]},"957":{"position":[[244,2],[253,2]]},"1010":{"position":[[1173,2]]},"1055":{"position":[[90,2]]},"1064":{"position":[[0,2]]},"1069":{"position":[[11,2]]},"1071":{"position":[[17,2]]},"1094":{"position":[[6,2]]},"1111":{"position":[[6,2]]},"1191":{"position":[[172,2]]},"1192":{"position":[[149,2]]},"1194":{"position":[[470,2]]},"1200":{"position":[[232,2]]},"1205":{"position":[[259,2]]}}}],["创新",{"_index":360,"t":{"21":{"position":[[598,2]]}}}],["初始化",{"_index":1273,"t":{"543":{"position":[[39,3],[139,3]]},"1205":{"position":[[513,3]]}}}],["初年",{"_index":41,"t":{"13":{"position":[[82,2]]}}}],["删除",{"_index":1559,"t":{"1144":{"position":[[191,2]]},"1216":{"position":[[153,2]]}}}],["判断",{"_index":628,"t":{"150":{"position":[[1191,2]]},"249":{"position":[[254,2]]},"339":{"position":[[89,2],[144,2],[169,2]]},"341":{"position":[[72,2]]},"659":{"position":[[1191,2]]},"711":{"position":[[254,2]]},"751":{"position":[[89,2],[144,2],[169,2]]},"753":{"position":[[72,2]]}}}],["利用",{"_index":1413,"t":{"974":{"position":[[77,2]]}}}],["利益",{"_index":19,"t":{"13":{"position":[[17,2]]}}}],["别名",{"_index":1442,"t":{"1010":{"position":[[1807,2]]}}}],["到达",{"_index":1264,"t":{"533":{"position":[[628,2]]}}}],["制度",{"_index":176,"t":{"17":{"position":[[208,2]]}}}],["刻意",{"_index":187,"t":{"19":{"position":[[12,2]]}}}],["削弱",{"_index":903,"t":{"294":{"position":[[414,2]]},"770":{"position":[[414,2]]}}}],["前",{"_index":1223,"t":{"491":{"position":[[33,1]]},"934":{"position":[[12,1]]},"1142":{"position":[[49,1]]},"1194":{"position":[[858,1]]}}}],["前提",{"_index":1400,"t":{"963":{"position":[[12,2]]}}}],["前缀",{"_index":505,"t":{"83":{"position":[[7,2]]}}}],["前置条件",{"_index":904,"t":{"294":{"position":[[417,4],[489,4]]},"305":{"position":[[47,4]]},"770":{"position":[[417,4],[489,4]]},"781":{"position":[[47,4]]}}}],["前面",{"_index":426,"t":{"28":{"position":[[39,2]]},"31":{"position":[[130,2]]},"33":{"position":[[50,2],[126,2]]},"42":{"position":[[32,2]]},"247":{"position":[[148,2]]},"709":{"position":[[148,2]]}}}],["剥削",{"_index":189,"t":{"19":{"position":[[17,2]]}}}],["力量",{"_index":25,"t":{"13":{"position":[[36,2]]}}}],["功成名就",{"_index":76,"t":{"13":{"position":[[189,4]]}}}],["功绩",{"_index":21,"t":{"13":{"position":[[22,2]]}}}],["功能",{"_index":543,"t":{"126":{"position":[[27,2],[35,2]]},"129":{"position":[[18,2]]},"170":{"position":[[177,2]]},"172":{"position":[[5,2],[114,2]]},"305":{"position":[[148,2]]},"331":{"position":[[45,2]]},"343":{"position":[[126,2]]},"351":{"position":[[11,2],[23,2]]},"353":{"position":[[14,2],[24,2]]},"356":{"position":[[539,2]]},"368":{"position":[[20,2],[28,2]]},"370":{"position":[[19,2]]},"380":{"position":[[23,2]]},"411":{"position":[[120,2]]},"415":{"position":[[147,2]]},"417":{"position":[[26,2],[261,2]]},"555":{"position":[[61,2]]},"570":{"position":[[14,2],[211,2]]},"572":{"position":[[27,2],[35,2]]},"575":{"position":[[18,2]]},"623":{"position":[[177,2]]},"625":{"position":[[5,2],[114,2]]},"743":{"position":[[45,2]]},"755":{"position":[[126,2]]},"781":{"position":[[148,2]]},"812":{"position":[[23,2]]},"843":{"position":[[120,2]]},"847":{"position":[[147,2]]},"849":{"position":[[26,2],[261,2]]},"860":{"position":[[11,2],[23,2]]},"862":{"position":[[14,2],[24,2]]},"865":{"position":[[539,2]]},"877":{"position":[[20,2],[28,2]]},"879":{"position":[[19,2]]},"957":{"position":[[172,2]]},"1010":{"position":[[1056,2]]},"1038":{"position":[[41,2]]},"1052":{"position":[[18,2]]},"1080":{"position":[[88,2]]},"1085":{"position":[[88,2]]},"1100":{"position":[[0,2]]},"1117":{"position":[[0,2]]},"1142":{"position":[[3,2]]}}}],["功能强大",{"_index":1454,"t":{"1033":{"position":[[18,4]]}}}],["加",{"_index":824,"t":{"251":{"position":[[59,1]]},"713":{"position":[[59,1]]}}}],["加以",{"_index":165,"t":{"17":{"position":[[171,2]]}}}],["加入",{"_index":1430,"t":{"984":{"position":[[174,2]]}}}],["加剧",{"_index":245,"t":{"21":{"position":[[130,2]]}}}],["加密",{"_index":795,"t":{"212":{"position":[[16,2]]},"215":{"position":[[146,2],[248,2]]},"237":{"position":[[24,2]]},"240":{"position":[[68,2]]},"253":{"position":[[186,2]]},"375":{"position":[[185,2]]},"435":{"position":[[64,2]]},"437":{"position":[[129,2],[341,2]]},"674":{"position":[[16,2]]},"677":{"position":[[146,2],[248,2]]},"699":{"position":[[24,2]]},"702":{"position":[[68,2]]},"715":{"position":[[186,2]]},"1010":{"position":[[1051,2]]}}}],["加密算法",{"_index":1181,"t":{"437":{"position":[[146,4],[179,4]]}}}],["加强",{"_index":937,"t":{"305":{"position":[[45,2]]},"781":{"position":[[45,2]]}}}],["加载",{"_index":601,"t":{"142":{"position":[[31,2]]},"588":{"position":[[31,2]]},"1157":{"position":[[170,2]]},"1170":{"position":[[3,2],[50,2]]}}}],["加锁",{"_index":1255,"t":{"529":{"position":[[63,2]]}}}],["务实",{"_index":79,"t":{"13":{"position":[[201,2]]}}}],["劣势",{"_index":1385,"t":{"952":{"position":[[10,2]]}}}],["动力",{"_index":358,"t":{"21":{"position":[[588,2]]}}}],["动态",{"_index":600,"t":{"142":{"position":[[29,2]]},"588":{"position":[[29,2]]},"957":{"position":[[67,2],[93,2],[212,2],[229,2]]},"974":{"position":[[3,2]]},"1064":{"position":[[581,2]]},"1157":{"position":[[166,2]]}}}],["动态控制",{"_index":808,"t":{"224":{"position":[[54,4]]},"686":{"position":[[54,4]]}}}],["动物",{"_index":846,"t":{"263":{"position":[[68,2],[88,2],[109,2]]},"789":{"position":[[68,2],[88,2],[109,2]]}}}],["助力",{"_index":323,"t":{"21":{"position":[[435,2]]}}}],["努力",{"_index":98,"t":{"13":{"position":[[260,2]]}}}],["勇敢",{"_index":85,"t":{"13":{"position":[[215,2]]}}}],["包",{"_index":1153,"t":{"422":{"position":[[74,1]]},"500":{"position":[[8,1]]},"523":{"position":[[184,1]]},"555":{"position":[[38,1]]},"570":{"position":[[135,1]]},"937":{"position":[[27,1]]},"957":{"position":[[48,1],[168,1]]},"959":{"position":[[10,1]]},"1080":{"position":[[36,1],[75,1]]},"1085":{"position":[[36,1],[75,1]]}}}],["包含",{"_index":470,"t":{"42":{"position":[[91,2]]},"158":{"position":[[15,2]]},"260":{"position":[[10,2]]},"263":{"position":[[10,2]]},"279":{"position":[[66,2]]},"318":{"position":[[5,2]]},"427":{"position":[[506,2]]},"647":{"position":[[15,2]]},"730":{"position":[[5,2]]},"786":{"position":[[10,2]]},"789":{"position":[[10,2]]},"805":{"position":[[66,2]]},"1044":{"position":[[192,2],[524,2],[562,2],[591,2]]},"1064":{"position":[[706,2]]}}}],["包容",{"_index":78,"t":{"13":{"position":[[198,2]]}}}],["包括",{"_index":1650,"t":{"1220":{"position":[[65,2]]}}}],["包装",{"_index":1358,"t":{"924":{"position":[[43,2]]}}}],["化",{"_index":602,"t":{"142":{"position":[[39,1]]},"235":{"position":[[6,1]]},"463":{"position":[[11,1]]},"588":{"position":[[39,1]]},"697":{"position":[[6,1]]},"907":{"position":[[11,1]]},"977":{"position":[[56,1],[148,1]]},"1069":{"position":[[42,1]]},"1077":{"position":[[79,1]]}}}],["匹配",{"_index":498,"t":{"71":{"position":[[11,2]]},"375":{"position":[[189,2]]},"429":{"position":[[445,2],[456,2]]},"435":{"position":[[44,2]]}}}],["区分",{"_index":989,"t":{"336":{"position":[[1333,2]]},"748":{"position":[[1333,2]]}}}],["区别",{"_index":411,"t":{"26":{"position":[[54,2]]},"42":{"position":[[150,2]]},"491":{"position":[[94,2]]}}}],["十六进制",{"_index":1468,"t":{"1044":{"position":[[393,4]]},"1148":{"position":[[87,4]]}}}],["升级",{"_index":1170,"t":{"433":{"position":[[204,2]]},"437":{"position":[[103,2]]}}}],["协",{"_index":760,"t":{"184":{"position":[[1992,1]]},"336":{"position":[[546,1],[770,1],[1119,1]]},"341":{"position":[[449,1],[516,1]]},"343":{"position":[[526,1]]},"487":{"position":[[55,1]]},"495":{"position":[[101,1]]},"525":{"position":[[12,1]]},"531":{"position":[[339,1]]},"637":{"position":[[1992,1]]},"748":{"position":[[546,1],[770,1],[1119,1]]},"753":{"position":[[449,1],[516,1]]},"755":{"position":[[526,1]]}}}],["协作",{"_index":1066,"t":{"358":{"position":[[772,2]]},"867":{"position":[[772,2]]}}}],["协议",{"_index":637,"t":{"155":{"position":[[19,2]]},"375":{"position":[[182,2]]},"644":{"position":[[19,2]]}}}],["协调",{"_index":1207,"t":{"470":{"position":[[31,2]]}}}],["单",{"_index":403,"t":{"26":{"position":[[15,1]]},"28":{"position":[[8,1]]},"40":{"position":[[10,1]]},"42":{"position":[[2,1]]},"553":{"position":[[103,1]]}}}],["单一",{"_index":441,"t":{"33":{"position":[[167,2]]},"129":{"position":[[6,2]]},"170":{"position":[[160,2]]},"348":{"position":[[0,2]]},"351":{"position":[[59,2]]},"365":{"position":[[128,2]]},"415":{"position":[[0,2]]},"419":{"position":[[35,2]]},"575":{"position":[[6,2]]},"623":{"position":[[160,2]]},"847":{"position":[[0,2]]},"851":{"position":[[35,2]]},"857":{"position":[[0,2]]},"860":{"position":[[59,2]]},"874":{"position":[[128,2]]}}}],["单个",{"_index":627,"t":{"150":{"position":[[403,2]]},"659":{"position":[[403,2]]}}}],["单元测试",{"_index":694,"t":{"170":{"position":[[94,4]]},"623":{"position":[[94,4]]}}}],["单步",{"_index":1557,"t":{"1142":{"position":[[83,2],[102,2]]},"1148":{"position":[[309,2]]}}}],["单独",{"_index":611,"t":{"147":{"position":[[7,2]]},"656":{"position":[[7,2]]},"1075":{"position":[[274,2]]}}}],["单词",{"_index":511,"t":{"90":{"position":[[10,2]]},"104":{"position":[[12,2],[15,2]]}}}],["占",{"_index":1369,"t":{"932":{"position":[[1,1]]}}}],["占用",{"_index":1625,"t":{"1197":{"position":[[142,2]]},"1216":{"position":[[210,2]]}}}],["卡死",{"_index":1021,"t":{"343":{"position":[[151,2]]},"755":{"position":[[151,2]]}}}],["即便",{"_index":221,"t":{"21":{"position":[[39,2]]}}}],["即可",{"_index":1355,"t":{"924":{"position":[[14,2]]}}}],["历史",{"_index":11,"t":{"13":{"position":[[0,2]]},"19":{"position":[[24,2]]}}}],["压迫",{"_index":238,"t":{"21":{"position":[[107,2]]}}}],["原值",{"_index":1402,"t":{"963":{"position":[[141,2]]}}}],["原则",{"_index":703,"t":{"170":{"position":[[184,2]]},"184":{"position":[[2029,2]]},"188":{"position":[[33,2]]},"258":{"position":[[4,2],[51,2],[58,2],[143,2]]},"284":{"position":[[4,2],[49,2],[56,2],[204,2]]},"289":{"position":[[278,2]]},"308":{"position":[[4,2],[50,2],[57,2],[141,2]]},"348":{"position":[[4,2],[51,2],[58,2],[141,2]]},"378":{"position":[[2,2],[39,2],[46,2],[113,2]]},"411":{"position":[[63,2]]},"413":{"position":[[18,2],[23,2],[57,2]]},"415":{"position":[[4,2],[77,2],[164,2],[243,2],[324,2]]},"417":{"position":[[6,2],[57,2],[118,2],[171,2],[222,2]]},"447":{"position":[[32,2]]},"454":{"position":[[6,2]]},"623":{"position":[[184,2]]},"637":{"position":[[2029,2]]},"641":{"position":[[33,2]]},"720":{"position":[[4,2],[50,2],[57,2],[141,2]]},"760":{"position":[[4,2],[49,2],[56,2],[204,2]]},"765":{"position":[[278,2]]},"784":{"position":[[4,2],[51,2],[58,2],[143,2]]},"810":{"position":[[2,2],[39,2],[46,2],[113,2]]},"843":{"position":[[63,2]]},"845":{"position":[[18,2],[23,2],[57,2]]},"847":{"position":[[4,2],[77,2],[164,2],[243,2],[324,2]]},"849":{"position":[[6,2],[57,2],[118,2],[171,2],[222,2]]},"857":{"position":[[4,2],[51,2],[58,2],[141,2]]},"891":{"position":[[32,2]]},"898":{"position":[[6,2]]}}}],["原因",{"_index":1051,"t":{"348":{"position":[[107,2]]},"375":{"position":[[165,2]]},"415":{"position":[[61,2]]},"847":{"position":[[61,2]]},"854":{"position":[[47,2]]},"857":{"position":[[107,2]]}}}],["原始",{"_index":227,"t":{"21":{"position":[[66,2]]},"172":{"position":[[146,2]]},"625":{"position":[[146,2]]},"963":{"position":[[308,2]]},"1182":{"position":[[17,2]]}}}],["原子",{"_index":1276,"t":{"545":{"position":[[30,2]]},"547":{"position":[[151,2]]}}}],["原有",{"_index":724,"t":{"172":{"position":[[112,2]]},"625":{"position":[[112,2]]}}}],["原来",{"_index":1063,"t":{"358":{"position":[[722,2]]},"867":{"position":[[722,2]]}}}],["原理",{"_index":1231,"t":{"497":{"position":[[43,2]]},"1220":{"position":[[155,2]]}}}],["原语",{"_index":1211,"t":{"473":{"position":[[9,2]]}}}],["去掉",{"_index":509,"t":{"87":{"position":[[73,2],[145,2]]}}}],["去除",{"_index":512,"t":{"97":{"position":[[0,2]]}}}],["参",{"_index":1555,"t":{"1138":{"position":[[9,1]]}}}],["参数",{"_index":698,"t":{"170":{"position":[[153,2]]},"174":{"position":[[7,2]]},"623":{"position":[[153,2]]},"627":{"position":[[7,2]]},"970":{"position":[[1,2],[356,2]]},"1013":{"position":[[18,2]]},"1018":{"position":[[47,2]]},"1028":{"position":[[121,2]]},"1031":{"position":[[25,2]]},"1035":{"position":[[35,2]]},"1052":{"position":[[65,2]]},"1064":{"position":[[572,2]]},"1136":{"position":[[54,2]]},"1138":{"position":[[44,2],[95,2]]},"1151":{"position":[[135,2]]},"1188":{"position":[[83,2],[158,2]]}}}],["参考",{"_index":780,"t":{"201":{"position":[[24,2]]},"609":{"position":[[24,2]]},"1157":{"position":[[0,2]]}}}],["及其",{"_index":1544,"t":{"1126":{"position":[[106,2]]}}}],["友好",{"_index":758,"t":{"184":{"position":[[1975,2]]},"637":{"position":[[1975,2]]},"1035":{"position":[[19,2]]}}}],["双",{"_index":405,"t":{"26":{"position":[[24,1]]},"28":{"position":[[48,1]]},"40":{"position":[[21,1]]},"42":{"position":[[40,1]]}}}],["反",{"_index":1397,"t":{"957":{"position":[[147,1]]},"977":{"position":[[30,1]]},"980":{"position":[[101,1]]},"984":{"position":[[169,1]]}}}],["反向",{"_index":1644,"t":{"1218":{"position":[[56,2]]}}}],["反射",{"_index":1392,"t":{"957":{"position":[[0,2],[251,2]]},"963":{"position":[[0,2]]},"974":{"position":[[10,2],[46,2]]},"1214":{"position":[[264,2]]}}}],["反汇编",{"_index":1568,"t":{"1148":{"position":[[287,3]]}}}],["反转",{"_index":950,"t":{"310":{"position":[[20,2]]},"722":{"position":[[20,2]]}}}],["反过来",{"_index":322,"t":{"21":{"position":[[432,3]]}}}],["反馈",{"_index":784,"t":{"203":{"position":[[49,2],[121,2]]},"611":{"position":[[49,2],[121,2]]}}}],["发出请求",{"_index":643,"t":{"155":{"position":[[49,4]]},"644":{"position":[[49,4]]}}}],["发展",{"_index":215,"t":{"21":{"position":[[10,2],[236,2],[285,2],[456,2]]}}}],["发现",{"_index":603,"t":{"142":{"position":[[49,2]]},"305":{"position":[[84,2]]},"588":{"position":[[49,2]]},"781":{"position":[[84,2]]}}}],["发生",{"_index":1121,"t":{"409":{"position":[[338,2]]},"539":{"position":[[463,2]]},"841":{"position":[[338,2]]},"1157":{"position":[[19,2],[32,2],[118,2],[149,2],[156,2],[182,2]]}}}],["发送",{"_index":519,"t":{"110":{"position":[[23,2],[47,2]]},"112":{"position":[[2,2]]},"115":{"position":[[141,2],[264,2]]},"119":{"position":[[6,2],[48,2]]},"134":{"position":[[1188,2]]},"136":{"position":[[753,2]]},"160":{"position":[[20,2],[186,2]]},"170":{"position":[[406,2],[553,2],[1352,2]]},"203":{"position":[[63,2]]},"207":{"position":[[148,2]]},"336":{"position":[[339,2]]},"339":{"position":[[0,2]]},"341":{"position":[[825,2]]},"345":{"position":[[3017,2],[3699,2]]},"356":{"position":[[269,2],[522,2]]},"365":{"position":[[108,2]]},"531":{"position":[[361,2]]},"580":{"position":[[1188,2]]},"582":{"position":[[753,2]]},"592":{"position":[[23,2],[47,2]]},"594":{"position":[[2,2]]},"597":{"position":[[141,2],[264,2]]},"601":{"position":[[6,2],[48,2]]},"611":{"position":[[63,2]]},"615":{"position":[[148,2]]},"623":{"position":[[406,2],[553,2],[1352,2]]},"649":{"position":[[20,2],[186,2]]},"748":{"position":[[339,2]]},"751":{"position":[[0,2]]},"753":{"position":[[825,2]]},"757":{"position":[[3017,2],[3699,2]]},"865":{"position":[[269,2],[522,2]]},"874":{"position":[[108,2]]},"1096":{"position":[[6,2]]},"1113":{"position":[[6,2]]}}}],["发送器",{"_index":713,"t":{"170":{"position":[[1255,3]]},"623":{"position":[[1255,3]]}}}],["发送数据",{"_index":981,"t":{"336":{"position":[[1194,4]]},"339":{"position":[[25,4]]},"531":{"position":[[398,4]]},"533":{"position":[[168,4],[265,4]]},"748":{"position":[[1194,4]]},"751":{"position":[[25,4]]}}}],["发送给",{"_index":633,"t":{"150":{"position":[[1468,3]]},"158":{"position":[[826,3]]},"647":{"position":[[826,3]]},"659":{"position":[[1468,3]]}}}],["取消",{"_index":1017,"t":{"343":{"position":[[103,2],[110,2],[117,2],[146,2],[895,2]]},"549":{"position":[[45,2]]},"551":{"position":[[440,2]]},"553":{"position":[[139,2]]},"755":{"position":[[103,2],[110,2],[117,2],[146,2],[895,2]]}}}],["受",{"_index":1092,"t":{"375":{"position":[[222,1]]}}}],["受限",{"_index":1513,"t":{"1069":{"position":[[15,2]]}}}],["变为",{"_index":1272,"t":{"541":{"position":[[218,2]]}}}],["变化",{"_index":670,"t":{"166":{"position":[[58,2]]},"188":{"position":[[53,2]]},"348":{"position":[[104,2]]},"411":{"position":[[14,2],[78,2]]},"415":{"position":[[58,2]]},"619":{"position":[[58,2]]},"641":{"position":[[53,2]]},"843":{"position":[[14,2],[78,2]]},"847":{"position":[[58,2]]},"857":{"position":[[104,2]]}}}],["变得",{"_index":1070,"t":{"368":{"position":[[9,2]]},"877":{"position":[[9,2]]}}}],["变成",{"_index":1614,"t":{"1191":{"position":[[49,2]]},"1192":{"position":[[544,2]]}}}],["变更",{"_index":863,"t":{"279":{"position":[[32,2]]},"805":{"position":[[32,2]]}}}],["变量",{"_index":443,"t":{"33":{"position":[[188,2]]},"40":{"position":[[50,2]]},"305":{"position":[[63,2]]},"470":{"position":[[26,2]]},"473":{"position":[[2,2]]},"529":{"position":[[25,2]]},"535":{"position":[[36,2]]},"553":{"position":[[210,2]]},"781":{"position":[[63,2]]},"934":{"position":[[15,2]]},"957":{"position":[[31,2],[71,2],[79,2],[112,2],[183,2],[201,2],[257,2]]},"959":{"position":[[39,2],[72,2]]},"963":{"position":[[6,2],[310,2]]},"1010":{"position":[[1888,2],[1920,2]]},"1142":{"position":[[123,2]]},"1146":{"position":[[20,2]]},"1157":{"position":[[100,2],[109,2]]}}}],["变量值",{"_index":1562,"t":{"1146":{"position":[[101,3]]}}}],["古代",{"_index":367,"t":{"23":{"position":[[10,2]]}}}],["只是",{"_index":54,"t":{"13":{"position":[[112,2],[139,2]]},"1075":{"position":[[54,2]]}}}],["只有",{"_index":306,"t":{"21":{"position":[[347,2]]},"348":{"position":[[97,2]]},"415":{"position":[[51,2]]},"847":{"position":[[51,2]]},"857":{"position":[[97,2]]},"974":{"position":[[0,2]]},"1075":{"position":[[24,2]]}}}],["只能",{"_index":1130,"t":{"415":{"position":[[233,2]]},"487":{"position":[[61,2]]},"847":{"position":[[233,2]]},"1069":{"position":[[27,2]]}}}],["只读",{"_index":858,"t":{"275":{"position":[[179,2]]},"801":{"position":[[179,2]]},"942":{"position":[[40,2]]},"952":{"position":[[65,2]]}}}],["叫",{"_index":849,"t":{"263":{"position":[[113,1]]},"789":{"position":[[113,1]]}}}],["可以",{"_index":37,"t":{"13":{"position":[[73,2]]},"26":{"position":[[64,2]]},"28":{"position":[[66,2]]},"38":{"position":[[243,2]]},"48":{"position":[[0,2]]},"67":{"position":[[6,2]]},"155":{"position":[[54,2]]},"170":{"position":[[99,2],[974,2]]},"194":{"position":[[326,2]]},"203":{"position":[[0,2]]},"247":{"position":[[143,2]]},"251":{"position":[[57,2],[77,2]]},"265":{"position":[[366,2]]},"284":{"position":[[106,2]]},"305":{"position":[[134,2]]},"322":{"position":[[122,2]]},"325":{"position":[[257,2]]},"336":{"position":[[1281,2]]},"345":{"position":[[289,2]]},"351":{"position":[[84,2]]},"375":{"position":[[404,2],[482,2],[488,2],[502,2]]},"399":{"position":[[13,2]]},"401":{"position":[[201,2]]},"405":{"position":[[125,2]]},"407":{"position":[[756,2]]},"419":{"position":[[48,2]]},"427":{"position":[[446,2]]},"433":{"position":[[12,2]]},"440":{"position":[[67,2]]},"523":{"position":[[42,2],[135,2]]},"527":{"position":[[52,2]]},"539":{"position":[[24,2]]},"545":{"position":[[10,2]]},"553":{"position":[[239,2],[381,2]]},"570":{"position":[[214,2]]},"611":{"position":[[0,2]]},"623":{"position":[[99,2],[974,2]]},"644":{"position":[[54,2]]},"667":{"position":[[326,2]]},"709":{"position":[[143,2]]},"713":{"position":[[57,2],[77,2]]},"734":{"position":[[122,2]]},"737":{"position":[[257,2]]},"748":{"position":[[1281,2]]},"757":{"position":[[289,2]]},"760":{"position":[[106,2]]},"781":{"position":[[134,2]]},"791":{"position":[[366,2]]},"831":{"position":[[13,2]]},"833":{"position":[[201,2]]},"837":{"position":[[125,2]]},"839":{"position":[[756,2]]},"851":{"position":[[48,2]]},"854":{"position":[[15,2],[76,2],[122,2]]},"860":{"position":[[84,2]]},"884":{"position":[[67,2]]},"922":{"position":[[230,2],[398,2]]},"957":{"position":[[65,2]]},"963":{"position":[[2,2]]},"968":{"position":[[5,2]]},"977":{"position":[[91,2]]},"984":{"position":[[23,2],[68,2],[95,2]]},"1010":{"position":[[1088,2],[1736,2],[1874,2]]},"1018":{"position":[[35,2]]},"1031":{"position":[[0,2]]},"1046":{"position":[[0,2]]},"1052":{"position":[[39,2]]},"1067":{"position":[[12,2]]},"1069":{"position":[[7,2]]},"1071":{"position":[[15,2]]},"1073":{"position":[[16,2]]},"1077":{"position":[[97,2]]},"1124":{"position":[[61,2]]},"1140":{"position":[[2,2],[31,2]]},"1148":{"position":[[331,2]]},"1151":{"position":[[389,2],[437,2]]},"1166":{"position":[[10,2]]},"1191":{"position":[[30,2]]}}}],["可扩展性",{"_index":679,"t":{"166":{"position":[[100,4]]},"333":{"position":[[109,4]]},"345":{"position":[[76,4]]},"619":{"position":[[100,4]]},"745":{"position":[[109,4]]},"757":{"position":[[76,4]]}}}],["可用",{"_index":1326,"t":{"570":{"position":[[86,2]]}}}],["可维护性",{"_index":417,"t":{"26":{"position":[[87,4]]},"333":{"position":[[114,4]]},"351":{"position":[[2,4]]},"745":{"position":[[114,4]]},"860":{"position":[[2,4]]}}}],["可能",{"_index":61,"t":{"13":{"position":[[137,2]]},"38":{"position":[[211,2]]},"42":{"position":[[81,2]]},"296":{"position":[[216,2]]},"353":{"position":[[16,2]]},"473":{"position":[[47,2]]},"491":{"position":[[66,2],[174,2]]},"570":{"position":[[24,2],[48,2],[112,2]]},"772":{"position":[[216,2]]},"854":{"position":[[109,2]]},"862":{"position":[[16,2]]},"926":{"position":[[67,2]]},"977":{"position":[[124,2]]},"1064":{"position":[[372,2],[639,2],[1133,2]]},"1075":{"position":[[200,2]]},"1151":{"position":[[373,2]]}}}],["可能性",{"_index":1251,"t":{"529":{"position":[[35,3]]}}}],["可见",{"_index":1480,"t":{"1057":{"position":[[71,2]]}}}],["可读性",{"_index":1406,"t":{"972":{"position":[[2,3]]}}}],["可靠",{"_index":1378,"t":{"937":{"position":[[432,2]]}}}],["可靠性",{"_index":564,"t":{"129":{"position":[[76,3]]},"570":{"position":[[234,3]]},"575":{"position":[[76,3]]},"1052":{"position":[[75,3]]}}}],["台阶式",{"_index":289,"t":{"21":{"position":[[282,3]]}}}],["号",{"_index":507,"t":{"83":{"position":[[14,1]]},"1186":{"position":[[15,1]]},"1191":{"position":[[23,1]]}}}],["司法独立",{"_index":131,"t":{"17":{"position":[[53,4]]}}}],["吃",{"_index":915,"t":{"299":{"position":[[104,1],[267,1]]},"775":{"position":[[104,1],[267,1]]}}}],["各种",{"_index":1455,"t":{"1033":{"position":[[34,2]]}}}],["合并",{"_index":463,"t":{"40":{"position":[[82,2]]}}}],["合法",{"_index":1458,"t":{"1044":{"position":[[29,2],[127,2],[282,2],[302,2],[410,2],[427,2]]}}}],["合理",{"_index":664,"t":{"166":{"position":[[30,2]]},"372":{"position":[[66,2]]},"570":{"position":[[205,2]]},"619":{"position":[[30,2]]},"881":{"position":[[66,2]]},"974":{"position":[[75,2]]}}}],["合适",{"_index":1390,"t":{"954":{"position":[[129,2]]}}}],["同一",{"_index":421,"t":{"28":{"position":[[22,2],[62,2]]},"934":{"position":[[131,2]]},"1197":{"position":[[47,2]]},"1218":{"position":[[149,2]]}}}],["同一个",{"_index":1061,"t":{"356":{"position":[[545,3]]},"553":{"position":[[207,3]]},"865":{"position":[[545,3]]}}}],["同属",{"_index":1197,"t":{"459":{"position":[[13,2]]},"903":{"position":[[13,2]]}}}],["同时",{"_index":266,"t":{"21":{"position":[[201,2]]},"523":{"position":[[114,2]]},"1155":{"position":[[125,2]]}}}],["同样",{"_index":36,"t":{"13":{"position":[[71,2]]},"284":{"position":[[196,2]]},"760":{"position":[[196,2]]}}}],["同步",{"_index":974,"t":{"336":{"position":[[174,2],[1223,2]]},"470":{"position":[[49,2]]},"473":{"position":[[7,2]]},"497":{"position":[[20,2]]},"537":{"position":[[17,2]]},"748":{"position":[[174,2],[1223,2]]},"922":{"position":[[377,2]]},"924":{"position":[[26,2],[45,2]]}}}],["同步操作",{"_index":973,"t":{"336":{"position":[[28,4]]},"748":{"position":[[28,4]]}}}],["名",{"_index":806,"t":{"224":{"position":[[32,1]]},"686":{"position":[[32,1]]},"1148":{"position":[[328,1]]}}}],["名声",{"_index":70,"t":{"13":{"position":[[167,2]]}}}],["名字",{"_index":1447,"t":{"1018":{"position":[[157,2]]},"1020":{"position":[[152,2]]},"1022":{"position":[[213,2]]},"1024":{"position":[[156,2]]},"1031":{"position":[[200,2]]}}}],["名将",{"_index":42,"t":{"13":{"position":[[85,2]]}}}],["名称",{"_index":775,"t":{"194":{"position":[[15,2],[197,2]]},"368":{"position":[[45,2]]},"667":{"position":[[15,2],[197,2]]},"877":{"position":[[45,2]]}}}],["后台",{"_index":976,"t":{"336":{"position":[[768,2],[1117,2]]},"341":{"position":[[514,2],[1241,2]]},"748":{"position":[[768,2],[1117,2]]},"753":{"position":[[514,2],[1241,2]]}}}],["后来居上",{"_index":127,"t":{"17":{"position":[[36,4]]}}}],["后缀",{"_index":502,"t":{"76":{"position":[[8,2]]},"87":{"position":[[75,2],[147,2]]}}}],["后置",{"_index":912,"t":{"296":{"position":[[395,2],[477,2]]},"305":{"position":[[55,2]]},"772":{"position":[[395,2],[477,2]]},"781":{"position":[[55,2]]}}}],["后面",{"_index":424,"t":{"28":{"position":[[31,2]]},"31":{"position":[[112,2]]},"42":{"position":[[24,2]]},"1136":{"position":[[51,2]]}}}],["向量",{"_index":1566,"t":{"1148":{"position":[[202,2]]}}}],["吞吐量",{"_index":1642,"t":{"1216":{"position":[[313,3]]}}}],["否则",{"_index":1167,"t":{"429":{"position":[[466,2]]},"489":{"position":[[547,2]]},"930":{"position":[[97,2]]}}}],["含",{"_index":1041,"t":{"345":{"position":[[821,1]]},"757":{"position":[[821,1]]}}}],["启动",{"_index":593,"t":{"134":{"position":[[807,2]]},"138":{"position":[[274,2],[342,2]]},"194":{"position":[[784,2]]},"227":{"position":[[1080,2]]},"336":{"position":[[529,2]]},"341":{"position":[[432,2]]},"343":{"position":[[509,2]]},"345":{"position":[[1942,2]]},"409":{"position":[[263,2]]},"521":{"position":[[348,2],[446,2]]},"531":{"position":[[184,2],[335,2]]},"533":{"position":[[149,2],[246,2]]},"537":{"position":[[377,2]]},"580":{"position":[[807,2]]},"584":{"position":[[274,2],[342,2]]},"667":{"position":[[784,2]]},"689":{"position":[[1080,2]]},"748":{"position":[[529,2]]},"753":{"position":[[432,2]]},"755":{"position":[[509,2]]},"757":{"position":[[1942,2]]},"841":{"position":[[263,2]]},"1057":{"position":[[170,2]]},"1060":{"position":[[60,2]]},"1064":{"position":[[1058,2]]},"1067":{"position":[[5,2]]},"1136":{"position":[[2,2],[39,2]]},"1140":{"position":[[33,2]]},"1200":{"position":[[864,2]]},"1205":{"position":[[1042,2]]}}}],["启用",{"_index":1094,"t":{"375":{"position":[[298,2]]}}}],["告别",{"_index":1450,"t":{"1022":{"position":[[290,2],[331,2]]}}}],["命令",{"_index":435,"t":{"31":{"position":[[159,2]]},"48":{"position":[[16,2]]},"184":{"position":[[7609,2]]},"345":{"position":[[18,2],[54,2],[85,2],[120,2],[135,2],[179,2],[220,2],[255,2],[266,2],[296,2],[331,2],[389,2],[439,2],[1035,2],[1143,2],[2135,2],[2960,2],[3015,2],[3226,2],[3697,2],[3979,2],[4621,2],[5036,2],[6317,2]]},"511":{"position":[[22,2]]},"521":{"position":[[353,2],[451,2],[548,2]]},"523":{"position":[[48,2],[72,2]]},"637":{"position":[[7609,2]]},"757":{"position":[[18,2],[54,2],[85,2],[120,2],[135,2],[179,2],[220,2],[255,2],[266,2],[296,2],[331,2],[389,2],[439,2],[1035,2],[1143,2],[2135,2],[2960,2],[3015,2],[3226,2],[3697,2],[3979,2],[4621,2],[5036,2],[6317,2]]},"1013":{"position":[[57,2]]},"1022":{"position":[[113,2],[128,2],[251,2]]},"1035":{"position":[[5,2]]},"1055":{"position":[[17,2]]},"1057":{"position":[[10,2],[136,2],[153,2],[162,2]]},"1060":{"position":[[31,2]]},"1064":{"position":[[370,2],[481,2],[1096,2],[1109,2]]},"1136":{"position":[[90,2]]},"1142":{"position":[[0,2]]},"1144":{"position":[[9,2]]},"1151":{"position":[[21,2],[73,2]]},"1153":{"position":[[20,2],[69,2]]},"1159":{"position":[[14,2]]},"1161":{"position":[[34,2]]},"1188":{"position":[[15,2],[72,2],[152,2]]}}}],["命令行",{"_index":1445,"t":{"1013":{"position":[[15,3]]},"1033":{"position":[[23,3]]},"1035":{"position":[[62,3]]},"1064":{"position":[[978,3]]}}}],["哈哈镜",{"_index":15,"t":{"13":{"position":[[7,3]]}}}],["哈希",{"_index":1148,"t":{"422":{"position":[[15,2]]},"427":{"position":[[119,2],[408,2],[499,2]]},"429":{"position":[[195,2],[447,2]]},"431":{"position":[[11,2]]},"433":{"position":[[2,2],[199,2],[245,2],[486,2]]},"435":{"position":[[42,2],[54,2]]},"437":{"position":[[32,2],[92,2],[135,2],[434,2]]}}}],["响应",{"_index":655,"t":{"158":{"position":[[291,2]]},"203":{"position":[[21,2],[96,2]]},"205":{"position":[[136,2]]},"336":{"position":[[515,2],[710,2],[1233,2]]},"341":{"position":[[704,2]]},"343":{"position":[[62,2],[155,2],[178,2],[1147,2]]},"345":{"position":[[2930,2],[3031,2]]},"611":{"position":[[21,2],[96,2]]},"613":{"position":[[136,2]]},"647":{"position":[[291,2]]},"748":{"position":[[515,2],[710,2],[1233,2]]},"753":{"position":[[704,2]]},"755":{"position":[[62,2],[155,2],[178,2],[1147,2]]},"757":{"position":[[2930,2],[3031,2]]},"1210":{"position":[[358,2]]},"1212":{"position":[[251,2],[334,2]]}}}],["哪个",{"_index":1260,"t":{"533":{"position":[[587,2]]}}}],["哲学",{"_index":1253,"t":{"529":{"position":[[49,2]]}}}],["唏嘘",{"_index":382,"t":{"23":{"position":[[57,2]]}}}],["唤醒",{"_index":1210,"t":{"470":{"position":[[77,2]]},"480":{"position":[[56,2]]},"482":{"position":[[24,2]]},"484":{"position":[[27,2]]},"487":{"position":[[48,2],[58,2]]},"491":{"position":[[53,2],[71,2],[106,2],[134,2]]},"495":{"position":[[56,2]]},"541":{"position":[[588,2]]}}}],["唯一",{"_index":341,"t":{"21":{"position":[[517,2]]},"28":{"position":[[15,2]]},"40":{"position":[[26,2]]},"42":{"position":[[10,2]]}}}],["善",{"_index":332,"t":{"21":{"position":[[483,1]]}}}],["善良",{"_index":209,"t":{"19":{"position":[[104,2]]}}}],["器",{"_index":727,"t":{"172":{"position":[[150,1]]},"178":{"position":[[52,1]]},"341":{"position":[[286,1]]},"343":{"position":[[374,1]]},"405":{"position":[[270,1]]},"409":{"position":[[24,1],[71,1],[155,1],[357,1],[423,1]]},"557":{"position":[[127,1]]},"625":{"position":[[150,1]]},"631":{"position":[[52,1]]},"753":{"position":[[286,1]]},"755":{"position":[[374,1]]},"837":{"position":[[270,1]]},"841":{"position":[[24,1],[71,1],[155,1],[357,1],[423,1]]}}}],["四个",{"_index":1610,"t":{"1188":{"position":[[156,2]]}}}],["回",{"_index":791,"t":{"203":{"position":[[95,1]]},"343":{"position":[[1057,1]]},"611":{"position":[[95,1]]},"755":{"position":[[1057,1]]},"1197":{"position":[[76,1]]}}}],["回去",{"_index":786,"t":{"203":{"position":[[57,2]]},"611":{"position":[[57,2]]}}}],["回复",{"_index":650,"t":{"158":{"position":[[97,2],[312,2]]},"336":{"position":[[1266,2]]},"647":{"position":[[97,2],[312,2]]},"748":{"position":[[1266,2]]}}}],["回应",{"_index":662,"t":{"160":{"position":[[494,2]]},"207":{"position":[[285,2]]},"615":{"position":[[285,2]]},"649":{"position":[[494,2]]}}}],["回报",{"_index":319,"t":{"21":{"position":[[406,2]]}}}],["回收",{"_index":1294,"t":{"557":{"position":[[4,2],[29,2],[125,2]]},"1192":{"position":[[25,2]]},"1194":{"position":[[171,2]]}}}],["因为",{"_index":835,"t":{"258":{"position":[[150,2]]},"289":{"position":[[356,2]]},"491":{"position":[[64,2]]},"765":{"position":[[356,2]]},"784":{"position":[[150,2]]},"1064":{"position":[[378,2],[508,2]]},"1102":{"position":[[52,2]]},"1119":{"position":[[52,2]]},"1188":{"position":[[163,2]]}}}],["因子",{"_index":1165,"t":{"427":{"position":[[521,2]]},"433":{"position":[[476,2]]},"437":{"position":[[155,2]]}}}],["因此",{"_index":174,"t":{"17":{"position":[[201,2]]},"31":{"position":[[145,2]]},"1075":{"position":[[250,2]]}}}],["困局",{"_index":311,"t":{"21":{"position":[[365,2]]}}}],["困难",{"_index":850,"t":{"263":{"position":[[127,2]]},"331":{"position":[[39,2]]},"353":{"position":[[29,2]]},"459":{"position":[[28,2]]},"743":{"position":[[39,2]]},"789":{"position":[[127,2]]},"862":{"position":[[29,2]]},"903":{"position":[[28,2]]}}}],["固定",{"_index":583,"t":{"134":{"position":[[91,2]]},"158":{"position":[[454,2]]},"178":{"position":[[31,2]]},"194":{"position":[[72,2]]},"580":{"position":[[91,2]]},"631":{"position":[[31,2]]},"647":{"position":[[454,2]]},"667":{"position":[[72,2]]}}}],["圣人",{"_index":331,"t":{"21":{"position":[[477,2],[505,2]]}}}],["在于",{"_index":130,"t":{"17":{"position":[[50,2]]},"21":{"position":[[563,2]]}}}],["地",{"_index":181,"t":{"17":{"position":[[226,1]]},"26":{"position":[[72,1]]},"345":{"position":[[132,1]]},"757":{"position":[[132,1]]}}}],["地区",{"_index":149,"t":{"17":{"position":[[114,2]]}}}],["地址",{"_index":529,"t":{"115":{"position":[[143,2]]},"129":{"position":[[28,2]]},"575":{"position":[[28,2]]},"597":{"position":[[143,2]]},"1044":{"position":[[291,2],[311,2]]}}}],["地方",{"_index":855,"t":{"270":{"position":[[7,2]]},"322":{"position":[[127,2]]},"734":{"position":[[127,2]]},"796":{"position":[[7,2]]}}}],["场景",{"_index":440,"t":{"33":{"position":[[160,2]]},"38":{"position":[[185,2]]},"40":{"position":[[2,2]]},"144":{"position":[[85,2],[104,2]]},"351":{"position":[[89,2]]},"435":{"position":[[0,2]]},"491":{"position":[[199,2]]},"493":{"position":[[158,2]]},"523":{"position":[[205,2]]},"533":{"position":[[681,2]]},"541":{"position":[[26,2]]},"553":{"position":[[5,2]]},"590":{"position":[[85,2],[104,2]]},"860":{"position":[[89,2]]},"920":{"position":[[31,2]]},"924":{"position":[[30,2]]},"942":{"position":[[42,2]]},"952":{"position":[[4,2]]},"957":{"position":[[101,2]]},"977":{"position":[[118,2],[227,2]]},"1052":{"position":[[36,2]]},"1055":{"position":[[102,2]]},"1075":{"position":[[261,2]]},"1102":{"position":[[145,2]]},"1119":{"position":[[145,2]]}}}],["均衡",{"_index":246,"t":{"21":{"position":[[137,2]]}}}],["坚信",{"_index":283,"t":{"21":{"position":[[252,2]]}}}],["垃圾",{"_index":1293,"t":{"557":{"position":[[2,2],[27,2],[123,2]]}}}],["型",{"_index":1048,"t":{"345":{"position":[[3696,1],[3978,1],[5610,1]]},"440":{"position":[[9,1]]},"757":{"position":[[3696,1],[3978,1],[5610,1]]},"884":{"position":[[9,1]]}}}],["型式",{"_index":1045,"t":{"345":{"position":[[2928,2]]},"757":{"position":[[2928,2]]}}}],["培训",{"_index":1420,"t":{"977":{"position":[[154,2]]},"1220":{"position":[[127,2]]}}}],["基",{"_index":1128,"t":{"415":{"position":[[216,1]]},"847":{"position":[[216,1]]}}}],["基于",{"_index":604,"t":{"142":{"position":[[82,2]]},"329":{"position":[[280,2]]},"358":{"position":[[680,2]]},"588":{"position":[[82,2]]},"741":{"position":[[280,2]]},"867":{"position":[[680,2]]},"1220":{"position":[[160,2]]}}}],["基本",{"_index":155,"t":{"17":{"position":[[136,2]]},"129":{"position":[[15,2]]},"575":{"position":[[15,2]]},"1216":{"position":[[53,2]]}}}],["基础",{"_index":1042,"t":{"345":{"position":[[1141,2]]},"372":{"position":[[16,2]]},"380":{"position":[[67,2]]},"757":{"position":[[1141,2]]},"812":{"position":[[67,2]]},"881":{"position":[[16,2]]},"1069":{"position":[[46,2]]}}}],["基类",{"_index":888,"t":{"289":{"position":[[66,2]]},"294":{"position":[[93,2]]},"296":{"position":[[78,2]]},"305":{"position":[[140,2]]},"415":{"position":[[227,2]]},"765":{"position":[[66,2]]},"770":{"position":[[93,2]]},"772":{"position":[[78,2]]},"781":{"position":[[140,2]]},"847":{"position":[[227,2]]}}}],["堆",{"_index":1314,"t":{"557":{"position":[[542,1]]}}}],["堆栈",{"_index":1318,"t":{"559":{"position":[[74,2],[139,2],[165,2],[188,2],[539,2],[640,2]]},"566":{"position":[[138,2]]}}}],["塑造",{"_index":325,"t":{"21":{"position":[[446,2]]}}}],["增加",{"_index":353,"t":{"21":{"position":[[569,2]]},"110":{"position":[[43,2]]},"115":{"position":[[2,2],[100,2],[139,2]]},"117":{"position":[[0,2],[42,2]]},"142":{"position":[[45,2]]},"150":{"position":[[1185,2]]},"158":{"position":[[289,2]]},"194":{"position":[[379,2],[793,2]]},"196":{"position":[[2,2]]},"205":{"position":[[2,2],[134,2],[170,2],[396,2]]},"207":{"position":[[2,2],[405,2]]},"212":{"position":[[5,2]]},"227":{"position":[[675,2],[1089,2]]},"247":{"position":[[178,2]]},"249":{"position":[[248,2]]},"253":{"position":[[184,2]]},"447":{"position":[[17,2]]},"537":{"position":[[351,2],[452,2]]},"588":{"position":[[45,2]]},"592":{"position":[[43,2]]},"597":{"position":[[2,2],[100,2],[139,2]]},"599":{"position":[[0,2],[42,2]]},"613":{"position":[[2,2],[134,2],[170,2],[396,2]]},"615":{"position":[[2,2],[405,2]]},"647":{"position":[[289,2]]},"659":{"position":[[1185,2]]},"667":{"position":[[379,2],[793,2]]},"669":{"position":[[2,2]]},"674":{"position":[[5,2]]},"689":{"position":[[675,2],[1089,2]]},"709":{"position":[[178,2]]},"711":{"position":[[248,2]]},"715":{"position":[[184,2]]},"891":{"position":[[17,2]]},"918":{"position":[[39,2]]},"924":{"position":[[19,2]]},"984":{"position":[[97,2]]}}}],["增多",{"_index":1190,"t":{"454":{"position":[[27,2]]},"898":{"position":[[27,2]]}}}],["增大",{"_index":1408,"t":{"972":{"position":[[12,2]]}}}],["增强",{"_index":1020,"t":{"343":{"position":[[124,2]]},"351":{"position":[[52,2]]},"440":{"position":[[43,2]]},"755":{"position":[[124,2]]},"860":{"position":[[52,2]]},"884":{"position":[[43,2]]}}}],["增长",{"_index":299,"t":{"21":{"position":[[320,2],[439,2],[614,2]]},"557":{"position":[[150,2]]}}}],["声明",{"_index":1034,"t":{"345":{"position":[[194,2]]},"757":{"position":[[194,2]]}}}],["处",{"_index":1600,"t":{"1182":{"position":[[3,1]]}}}],["处在",{"_index":1579,"t":{"1151":{"position":[[362,2]]}}}],["处理",{"_index":526,"t":{"115":{"position":[[6,2],[104,2]]},"134":{"position":[[1278,2]]},"150":{"position":[[1203,2],[1223,2],[1240,2],[1838,2]]},"158":{"position":[[378,2],[591,2],[608,2],[1163,2]]},"164":{"position":[[307,2]]},"170":{"position":[[865,2],[906,2],[1535,2],[1576,2]]},"182":{"position":[[3,2]]},"294":{"position":[[259,2],[472,2]]},"327":{"position":[[358,2]]},"336":{"position":[[1250,2],[1335,2]]},"341":{"position":[[1243,2]]},"345":{"position":[[58,2],[162,2],[431,2],[1944,2]]},"356":{"position":[[473,2]]},"358":{"position":[[285,2]]},"497":{"position":[[16,2]]},"519":{"position":[[972,2]]},"535":{"position":[[27,2]]},"580":{"position":[[1278,2]]},"597":{"position":[[6,2],[104,2]]},"623":{"position":[[865,2],[906,2],[1535,2],[1576,2]]},"635":{"position":[[3,2]]},"647":{"position":[[378,2],[591,2],[608,2],[1163,2]]},"653":{"position":[[307,2]]},"659":{"position":[[1203,2],[1223,2],[1240,2],[1838,2]]},"739":{"position":[[358,2]]},"748":{"position":[[1250,2],[1335,2]]},"753":{"position":[[1243,2]]},"757":{"position":[[58,2],[162,2],[431,2],[1944,2]]},"770":{"position":[[259,2],[472,2]]},"865":{"position":[[473,2]]},"867":{"position":[[285,2]]},"920":{"position":[[13,2]]},"954":{"position":[[143,2]]},"957":{"position":[[105,2]]},"977":{"position":[[93,2],[149,2]]},"1008":{"position":[[37,2],[52,2]]},"1010":{"position":[[1082,2]]},"1216":{"position":[[112,2]]}}}],["处理事件",{"_index":531,"t":{"115":{"position":[[307,4]]},"158":{"position":[[386,4]]},"597":{"position":[[307,4]]},"647":{"position":[[386,4]]}}}],["处理器",{"_index":714,"t":{"170":{"position":[[1417,3]]},"272":{"position":[[94,3]]},"327":{"position":[[223,3]]},"345":{"position":[[257,3],[3228,3]]},"383":{"position":[[374,3]]},"390":{"position":[[79,3]]},"623":{"position":[[1417,3]]},"739":{"position":[[223,3]]},"757":{"position":[[257,3],[3228,3]]},"798":{"position":[[94,3]]},"815":{"position":[[374,3]]},"822":{"position":[[79,3]]}}}],["处理结果",{"_index":783,"t":{"203":{"position":[[44,4]]},"611":{"position":[[44,4]]}}}],["处理错误",{"_index":1436,"t":{"1008":{"position":[[2,4]]}}}],["复制",{"_index":203,"t":{"19":{"position":[[70,2]]},"1064":{"position":[[1137,2]]}}}],["复杂",{"_index":366,"t":{"23":{"position":[[6,2]]},"142":{"position":[[73,2]]},"144":{"position":[[102,2]]},"281":{"position":[[62,2]]},"333":{"position":[[86,2]]},"491":{"position":[[192,2]]},"497":{"position":[[18,2]]},"588":{"position":[[73,2]]},"590":{"position":[[102,2]]},"745":{"position":[[86,2]]},"807":{"position":[[62,2]]},"950":{"position":[[57,2]]},"952":{"position":[[193,2]]},"977":{"position":[[114,2]]},"1035":{"position":[[59,2]]}}}],["复杂度",{"_index":1054,"t":{"351":{"position":[[28,3]]},"860":{"position":[[28,3]]},"924":{"position":[[21,3]]}}}],["复杂性",{"_index":1076,"t":{"370":{"position":[[32,3]]},"417":{"position":[[43,3],[213,3]]},"849":{"position":[[43,3],[213,3]]},"879":{"position":[[32,3]]}}}],["复用",{"_index":967,"t":{"331":{"position":[[56,2]]},"351":{"position":[[74,2],[93,2]]},"353":{"position":[[34,2]]},"743":{"position":[[56,2]]},"860":{"position":[[74,2],[93,2]]},"862":{"position":[[34,2]]}}}],["外置",{"_index":730,"t":{"174":{"position":[[21,2]]},"627":{"position":[[21,2]]}}}],["外部命令",{"_index":1234,"t":{"500":{"position":[[14,4]]},"502":{"position":[[21,4]]},"523":{"position":[[20,4],[200,4]]}}}],["多",{"_index":43,"t":{"13":{"position":[[87,1]]},"23":{"position":[[87,1]]},"40":{"position":[[69,1]]},"178":{"position":[[76,1]]},"237":{"position":[[80,1]]},"260":{"position":[[39,1]]},"263":{"position":[[13,1]]},"279":{"position":[[38,1]]},"336":{"position":[[1285,1]]},"351":{"position":[[88,1]]},"356":{"position":[[27,1]]},"365":{"position":[[13,1]]},"419":{"position":[[10,1]]},"495":{"position":[[52,1]]},"525":{"position":[[11,1]]},"557":{"position":[[218,1]]},"570":{"position":[[57,1]]},"631":{"position":[[76,1]]},"699":{"position":[[80,1]]},"748":{"position":[[1285,1]]},"786":{"position":[[39,1]]},"789":{"position":[[13,1]]},"805":{"position":[[38,1]]},"851":{"position":[[10,1]]},"860":{"position":[[88,1]]},"865":{"position":[[27,1]]},"874":{"position":[[13,1]]},"1044":{"position":[[498,1]]},"1064":{"position":[[950,1]]}}}],["多个",{"_index":427,"t":{"28":{"position":[[55,2],[69,2]]},"38":{"position":[[215,2],[229,2]]},"42":{"position":[[84,2]]},"258":{"position":[[113,2]]},"265":{"position":[[6,2]]},"365":{"position":[[126,2]]},"403":{"position":[[21,2]]},"470":{"position":[[33,2]]},"487":{"position":[[53,2]]},"533":{"position":[[12,2],[354,2],[686,2]]},"535":{"position":[[17,2]]},"537":{"position":[[2,2]]},"539":{"position":[[1,2],[445,2]]},"541":{"position":[[31,2]]},"543":{"position":[[17,2]]},"547":{"position":[[334,2]]},"549":{"position":[[21,2]]},"553":{"position":[[43,2],[192,2],[285,2],[415,2]]},"784":{"position":[[113,2]]},"791":{"position":[[6,2]]},"835":{"position":[[21,2]]},"874":{"position":[[126,2]]},"1028":{"position":[[159,2]]}}}],["多元",{"_index":107,"t":{"15":{"position":[[17,2]]}}}],["多处",{"_index":966,"t":{"331":{"position":[[51,2]]},"743":{"position":[[51,2]]}}}],["多少",{"_index":1274,"t":{"543":{"position":[[394,2]]}}}],["多次",{"_index":423,"t":{"28":{"position":[[28,2]]},"38":{"position":[[167,2]]},"42":{"position":[[47,2]]}}}],["多用户",{"_index":1505,"t":{"1064":{"position":[[946,3]]}}}],["多种",{"_index":1016,"t":{"343":{"position":[[101,2]]},"345":{"position":[[705,2]]},"555":{"position":[[43,2]]},"755":{"position":[[101,2]]},"757":{"position":[[705,2]]}}}],["多线程",{"_index":1549,"t":{"1128":{"position":[[60,3],[67,3]]},"1177":{"position":[[1,3]]}}}],["大",{"_index":116,"t":{"17":{"position":[[0,1]]},"21":{"position":[[49,1]]},"129":{"position":[[104,1],[135,1]]},"258":{"position":[[127,1]]},"281":{"position":[[82,1]]},"301":{"position":[[3,1]]},"415":{"position":[[304,1]]},"557":{"position":[[204,1]]},"575":{"position":[[104,1],[135,1]]},"777":{"position":[[3,1]]},"784":{"position":[[127,1]]},"807":{"position":[[82,1]]},"847":{"position":[[304,1]]},"937":{"position":[[474,1]]},"950":{"position":[[9,1]]},"952":{"position":[[166,1]]},"954":{"position":[[60,1]]},"1008":{"position":[[45,1]]}}}],["大不相同",{"_index":385,"t":{"23":{"position":[[65,4]]}}}],["大于",{"_index":902,"t":{"294":{"position":[[248,2]]},"770":{"position":[[248,2]]},"1044":{"position":[[43,2]]}}}],["大写",{"_index":1465,"t":{"1044":{"position":[[271,2]]}}}],["大多",{"_index":369,"t":{"23":{"position":[[15,2]]}}}],["大多数",{"_index":212,"t":{"21":{"position":[[1,3]]},"491":{"position":[[159,3]]},"1102":{"position":[[142,3]]},"1119":{"position":[[142,3]]}}}],["大小",{"_index":1320,"t":{"559":{"position":[[190,2]]}}}],["大括号",{"_index":1374,"t":{"934":{"position":[[121,3]]}}}],["大规模",{"_index":674,"t":{"166":{"position":[[74,3]]},"619":{"position":[[74,3]]}}}],["大部分",{"_index":1416,"t":{"977":{"position":[[95,3]]}}}],["大顺军",{"_index":31,"t":{"13":{"position":[[58,3]]}}}],["天然",{"_index":759,"t":{"184":{"position":[[1988,2]]},"281":{"position":[[45,2]]},"637":{"position":[[1988,2]]},"807":{"position":[[45,2]]}}}],["太",{"_index":845,"t":{"263":{"position":[[12,1]]},"279":{"position":[[37,1]]},"356":{"position":[[26,1]]},"365":{"position":[[12,1]]},"789":{"position":[[12,1]]},"805":{"position":[[37,1]]},"865":{"position":[[26,1]]},"874":{"position":[[12,1]]}}}],["失效",{"_index":1485,"t":{"1064":{"position":[[375,2]]}}}],["失败",{"_index":88,"t":{"13":{"position":[[223,2]]},"926":{"position":[[80,2]]},"1092":{"position":[[177,2],[301,2]]},"1094":{"position":[[197,2]]},"1098":{"position":[[186,2],[384,2]]},"1109":{"position":[[177,2],[301,2]]},"1111":{"position":[[197,2]]},"1115":{"position":[[186,2],[384,2]]},"1191":{"position":[[200,2]]},"1192":{"position":[[177,2]]},"1200":{"position":[[213,2],[316,2],[471,2]]},"1205":{"position":[[240,2],[343,2],[494,2]]}}}],["奉",{"_index":340,"t":{"21":{"position":[[515,1]]}}}],["契约",{"_index":886,"t":{"286":{"position":[[42,2],[60,2]]},"762":{"position":[[42,2],[60,2]]}}}],["套",{"_index":1089,"t":{"375":{"position":[[187,1]]}}}],["奴隶",{"_index":57,"t":{"13":{"position":[[120,2]]}}}],["好帮手",{"_index":1078,"t":{"372":{"position":[[62,3]]},"881":{"position":[[62,3]]}}}],["好景不长",{"_index":125,"t":{"17":{"position":[[29,4]]}}}],["如下",{"_index":1082,"t":{"375":{"position":[[2,2],[167,2]]},"437":{"position":[[140,2]]},"561":{"position":[[459,2]]},"926":{"position":[[4,2],[89,2]]}}}],["如今",{"_index":383,"t":{"23":{"position":[[60,2]]},"1126":{"position":[[91,2]]}}}],["如何",{"_index":1423,"t":{"977":{"position":[[162,2]]},"1216":{"position":[[4,2],[110,2],[219,2],[293,2]]}}}],["如同",{"_index":13,"t":{"13":{"position":[[3,2]]},"19":{"position":[[56,2]]}}}],["如果",{"_index":167,"t":{"17":{"position":[[177,2]]},"28":{"position":[[20,2]]},"42":{"position":[[15,2],[69,2]]},"170":{"position":[[1740,2]]},"247":{"position":[[188,2],[299,2]]},"284":{"position":[[85,2]]},"339":{"position":[[112,2],[202,2]]},"429":{"position":[[452,2]]},"433":{"position":[[0,2],[207,2],[472,2]]},"533":{"position":[[617,2]]},"537":{"position":[[0,2]]},"553":{"position":[[144,2],[189,2],[228,2],[334,2],[371,2]]},"623":{"position":[[1740,2]]},"709":{"position":[[188,2],[299,2]]},"751":{"position":[[112,2],[202,2]]},"760":{"position":[[85,2]]},"1035":{"position":[[53,2]]},"1057":{"position":[[156,2]]},"1064":{"position":[[356,2],[463,2],[842,2],[1038,2]]},"1073":{"position":[[0,2]]},"1075":{"position":[[183,2]]}}}],["妥善",{"_index":1651,"t":{"1220":{"position":[[69,2]]}}}],["始终",{"_index":1435,"t":{"1008":{"position":[[0,2]]}}}],["婚姻",{"_index":368,"t":{"23":{"position":[[13,2],[39,2]]}}}],["媒妁之言",{"_index":372,"t":{"23":{"position":[[23,4]]}}}],["子",{"_index":872,"t":{"284":{"position":[[91,1]]},"286":{"position":[[5,1],[26,1],[47,1]]},"305":{"position":[[37,1],[117,1]]},"415":{"position":[[204,1]]},"760":{"position":[[91,1]]},"762":{"position":[[5,1],[26,1],[47,1]]},"781":{"position":[[37,1],[117,1]]},"847":{"position":[[204,1]]},"1013":{"position":[[56,1]]},"1022":{"position":[[112,1],[127,1],[250,1]]},"1035":{"position":[[4,1]]},"1094":{"position":[[8,1]]},"1111":{"position":[[8,1]]},"1151":{"position":[[151,1],[364,1]]},"1191":{"position":[[174,1],[272,1],[351,1],[431,1]]},"1192":{"position":[[12,1],[27,1],[151,1],[249,1],[325,1],[396,1],[540,1]]},"1194":{"position":[[179,1],[472,1],[568,1],[580,1],[625,1],[643,1],[733,1]]}}}],["子串",{"_index":1463,"t":{"1044":{"position":[[197,2],[596,2]]}}}],["子类",{"_index":892,"t":{"289":{"position":[[197,2]]},"294":{"position":[[272,2]]},"296":{"position":[[229,2]]},"765":{"position":[[197,2]]},"770":{"position":[[272,2]]},"772":{"position":[[229,2]]}}}],["字",{"_index":735,"t":{"176":{"position":[[58,1]]},"180":{"position":[[151,1]]},"401":{"position":[[208,1]]},"629":{"position":[[58,1]]},"633":{"position":[[151,1]]},"833":{"position":[[208,1]]},"918":{"position":[[50,1],[61,1]]},"957":{"position":[[224,1],[240,1]]},"968":{"position":[[3,1],[275,1]]},"974":{"position":[[90,1]]},"977":{"position":[[134,1]]},"1008":{"position":[[13,1]]},"1038":{"position":[[35,1]]},"1044":{"position":[[17,1],[612,1]]},"1188":{"position":[[102,1],[111,1]]}}}],["字母",{"_index":1462,"t":{"1044":{"position":[[161,2],[176,2]]}}}],["字符",{"_index":1470,"t":{"1044":{"position":[[456,2],[483,2],[501,2],[539,2],[575,2]]}}}],["字符串",{"_index":494,"t":{"67":{"position":[[2,3]]},"90":{"position":[[1,3]]},"97":{"position":[[2,3]]},"104":{"position":[[2,3]]},"150":{"position":[[231,3]]},"158":{"position":[[380,3]]},"519":{"position":[[975,3]]},"647":{"position":[[380,3]]},"659":{"position":[[231,3]]},"1044":{"position":[[69,3],[90,3],[436,3]]},"1046":{"position":[[14,3]]}}}],["字节",{"_index":799,"t":{"215":{"position":[[307,2]]},"219":{"position":[[72,2]]},"240":{"position":[[71,2]]},"677":{"position":[[307,2]]},"681":{"position":[[72,2]]},"702":{"position":[[71,2]]},"1044":{"position":[[499,2]]}}}],["存储",{"_index":776,"t":{"194":{"position":[[320,2]]},"240":{"position":[[0,2]]},"253":{"position":[[188,2]]},"296":{"position":[[68,2]]},"303":{"position":[[42,2],[48,2],[52,2]]},"358":{"position":[[5,2]]},"397":{"position":[[38,2]]},"429":{"position":[[192,2]]},"431":{"position":[[14,2]]},"435":{"position":[[10,2]]},"437":{"position":[[125,2]]},"667":{"position":[[320,2]]},"702":{"position":[[0,2]]},"715":{"position":[[188,2]]},"772":{"position":[[68,2]]},"779":{"position":[[42,2],[48,2],[52,2]]},"829":{"position":[[38,2]]},"867":{"position":[[5,2]]},"968":{"position":[[17,2]]},"1010":{"position":[[938,2],[1113,2]]},"1064":{"position":[[912,2]]}}}],["存储用户",{"_index":1150,"t":{"422":{"position":[[23,4]]},"435":{"position":[[15,4]]}}}],["存储系统",{"_index":925,"t":{"303":{"position":[[35,4]]},"779":{"position":[[35,4]]}}}],["存在",{"_index":92,"t":{"13":{"position":[[240,2]]},"17":{"position":[[148,2]]},"26":{"position":[[50,2]]},"372":{"position":[[104,2]]},"881":{"position":[[104,2]]}}}],["孤儿",{"_index":1601,"t":{"1186":{"position":[[0,2]]}}}],["孤儿院",{"_index":1613,"t":{"1191":{"position":[[24,3]]}}}],["孩子",{"_index":375,"t":{"23":{"position":[[33,2],[76,2],[83,2],[130,2]]}}}],["它们",{"_index":408,"t":{"26":{"position":[[45,2],[59,2]]},"258":{"position":[[99,2]]},"260":{"position":[[56,2]]},"279":{"position":[[15,2]]},"281":{"position":[[25,2]]},"415":{"position":[[213,2],[294,2]]},"784":{"position":[[99,2]]},"786":{"position":[[56,2]]},"805":{"position":[[15,2]]},"807":{"position":[[25,2]]},"847":{"position":[[213,2],[294,2]]},"1064":{"position":[[338,2],[380,2],[510,2]]}}}],["安全",{"_index":148,"t":{"17":{"position":[[108,2]]},"186":{"position":[[111,2]]},"188":{"position":[[39,2]]},"341":{"position":[[8,2],[132,2]]},"345":{"position":[[3025,2]]},"422":{"position":[[10,2]]},"427":{"position":[[488,2]]},"435":{"position":[[13,2]]},"527":{"position":[[46,2]]},"547":{"position":[[348,2]]},"553":{"position":[[16,2],[178,2]]},"639":{"position":[[111,2]]},"641":{"position":[[39,2]]},"753":{"position":[[8,2],[132,2]]},"757":{"position":[[3025,2]]},"1077":{"position":[[68,2]]}}}],["安全性",{"_index":1522,"t":{"1075":{"position":[[43,3],[129,3],[255,3]]},"1077":{"position":[[91,3],[118,3]]},"1197":{"position":[[127,3]]},"1218":{"position":[[193,3]]}}}],["安全措施",{"_index":1524,"t":{"1075":{"position":[[91,4]]}}}],["安装",{"_index":1158,"t":{"424":{"position":[[22,2]]},"940":{"position":[[0,2]]},"944":{"position":[[0,2]]},"948":{"position":[[0,2]]},"1064":{"position":[[1102,2],[1121,2]]},"1082":{"position":[[22,2]]},"1087":{"position":[[22,2]]}}}],["完",{"_index":1221,"t":{"489":{"position":[[529,1]]}}}],["完全",{"_index":497,"t":{"71":{"position":[[9,2]]},"286":{"position":[[12,2]]},"356":{"position":[[533,2]]},"762":{"position":[[12,2]]},"865":{"position":[[533,2]]},"1075":{"position":[[72,2]]}}}],["完成",{"_index":1009,"t":{"341":{"position":[[1245,2]]},"521":{"position":[[550,2]]},"531":{"position":[[104,2],[214,2]]},"537":{"position":[[164,2],[260,2],[411,2],[431,2]]},"753":{"position":[[1245,2]]},"922":{"position":[[389,2]]},"1031":{"position":[[279,2]]},"1142":{"position":[[197,2]]}}}],["完整",{"_index":536,"t":{"121":{"position":[[178,2]]},"123":{"position":[[74,2]]},"144":{"position":[[132,2]]},"152":{"position":[[484,2]]},"164":{"position":[[494,2]]},"198":{"position":[[593,2]]},"209":{"position":[[297,2]]},"221":{"position":[[999,2]]},"233":{"position":[[1409,2]]},"255":{"position":[[995,2]]},"590":{"position":[[132,2]]},"603":{"position":[[178,2]]},"605":{"position":[[74,2]]},"617":{"position":[[297,2]]},"653":{"position":[[494,2]]},"661":{"position":[[484,2]]},"671":{"position":[[593,2]]},"683":{"position":[[999,2]]},"695":{"position":[[1409,2]]},"717":{"position":[[995,2]]}}}],["完毕",{"_index":1269,"t":{"537":{"position":[[21,2],[549,2]]}}}],["完美",{"_index":1529,"t":{"1077":{"position":[[65,2]]}}}],["宏",{"_index":1576,"t":{"1148":{"position":[[393,1]]}}}],["宗教",{"_index":104,"t":{"15":{"position":[[11,2]]}}}],["官方",{"_index":1366,"t":{"926":{"position":[[213,2]]},"937":{"position":[[426,2]]},"952":{"position":[[38,2]]},"1080":{"position":[[27,2]]},"1085":{"position":[[27,2]]},"1104":{"position":[[0,2]]},"1121":{"position":[[0,2]]},"1184":{"position":[[7,2]]}}}],["定义",{"_index":67,"t":{"13":{"position":[[156,2],[173,2]]},"26":{"position":[[31,2]]},"28":{"position":[[13,2],[53,2]]},"31":{"position":[[105,2]]},"33":{"position":[[99,2],[190,2],[212,2]]},"36":{"position":[[122,2]]},"38":{"position":[[169,2],[247,2]]},"42":{"position":[[21,2],[49,2]]},"115":{"position":[[175,2]]},"134":{"position":[[69,2],[332,2]]},"150":{"position":[[0,2],[50,2],[333,2]]},"158":{"position":[[0,2],[91,2],[201,2],[432,2]]},"170":{"position":[[208,2]]},"194":{"position":[[0,2],[50,2],[249,2]]},"205":{"position":[[46,2]]},"270":{"position":[[9,2]]},"281":{"position":[[70,2]]},"289":{"position":[[3,2]]},"315":{"position":[[3,2]]},"322":{"position":[[7,2]]},"333":{"position":[[40,2],[137,2]]},"345":{"position":[[183,2]]},"401":{"position":[[6,2]]},"405":{"position":[[14,2]]},"580":{"position":[[69,2],[332,2]]},"597":{"position":[[175,2]]},"613":{"position":[[46,2]]},"623":{"position":[[208,2]]},"647":{"position":[[0,2],[91,2],[201,2],[432,2]]},"659":{"position":[[0,2],[50,2],[333,2]]},"667":{"position":[[0,2],[50,2],[249,2]]},"727":{"position":[[3,2]]},"734":{"position":[[7,2]]},"745":{"position":[[40,2],[137,2]]},"757":{"position":[[183,2]]},"765":{"position":[[3,2]]},"796":{"position":[[9,2]]},"807":{"position":[[70,2]]},"833":{"position":[[6,2]]},"837":{"position":[[14,2]]},"934":{"position":[[13,2]]},"1010":{"position":[[1740,2],[1788,2],[1878,2]]},"1018":{"position":[[45,2]]},"1022":{"position":[[125,2],[248,2]]}}}],["定制",{"_index":1419,"t":{"977":{"position":[[146,2]]}}}],["定时",{"_index":1018,"t":{"343":{"position":[[108,2]]},"755":{"position":[[108,2]]}}}],["宝贵",{"_index":114,"t":{"15":{"position":[[47,2]]}}}],["实体",{"_index":259,"t":{"21":{"position":[[175,2]]},"378":{"position":[[77,2]]},"415":{"position":[[111,2]]},"810":{"position":[[77,2]]},"847":{"position":[[111,2]]}}}],["实例",{"_index":592,"t":{"134":{"position":[[427,2]]},"580":{"position":[[427,2]]},"957":{"position":[[246,2],[259,2]]}}}],["实现",{"_index":161,"t":{"17":{"position":[[157,2]]},"117":{"position":[[10,2],[52,2]]},"142":{"position":[[19,2]]},"168":{"position":[[3,2]]},"170":{"position":[[24,2],[76,2],[87,2],[136,2],[287,2],[311,2],[462,2],[982,2]]},"184":{"position":[[2019,2]]},"186":{"position":[[6,2]]},"196":{"position":[[8,2]]},"201":{"position":[[20,2]]},"207":{"position":[[415,2]]},"215":{"position":[[15,2],[79,2],[250,2]]},"217":{"position":[[0,2]]},"227":{"position":[[321,2]]},"229":{"position":[[150,2]]},"247":{"position":[[293,2],[303,2]]},"258":{"position":[[160,2]]},"260":{"position":[[45,2]]},"263":{"position":[[120,2],[334,2],[383,2]]},"265":{"position":[[185,2]]},"279":{"position":[[4,2],[13,2]]},"289":{"position":[[64,2],[195,2]]},"294":{"position":[[95,2],[274,2]]},"296":{"position":[[80,2],[231,2]]},"305":{"position":[[34,2]]},"308":{"position":[[166,2]]},"310":{"position":[[13,2]]},"313":{"position":[[198,2]]},"315":{"position":[[69,2],[404,2]]},"322":{"position":[[120,2]]},"325":{"position":[[263,2]]},"327":{"position":[[226,2]]},"333":{"position":[[15,2],[33,2],[51,2],[146,2]]},"345":{"position":[[42,2],[153,2],[223,2],[709,2],[818,2]]},"372":{"position":[[38,2],[56,2]]},"378":{"position":[[153,2]]},"383":{"position":[[83,2],[234,2]]},"388":{"position":[[77,2]]},"401":{"position":[[127,2],[167,2],[511,2]]},"407":{"position":[[16,2],[50,2]]},"411":{"position":[[31,2]]},"415":{"position":[[144,2]]},"440":{"position":[[84,2]]},"443":{"position":[[67,2]]},"445":{"position":[[84,2]]},"450":{"position":[[76,2],[354,2]]},"452":{"position":[[128,2],[219,2],[363,2]]},"495":{"position":[[93,2]]},"525":{"position":[[39,2]]},"588":{"position":[[19,2]]},"599":{"position":[[10,2],[52,2]]},"609":{"position":[[20,2]]},"615":{"position":[[415,2]]},"621":{"position":[[3,2]]},"623":{"position":[[24,2],[76,2],[87,2],[136,2],[287,2],[311,2],[462,2],[982,2]]},"637":{"position":[[2019,2]]},"639":{"position":[[6,2]]},"669":{"position":[[8,2]]},"677":{"position":[[15,2],[79,2],[250,2]]},"679":{"position":[[0,2]]},"689":{"position":[[321,2]]},"691":{"position":[[150,2]]},"709":{"position":[[293,2],[303,2]]},"720":{"position":[[166,2]]},"722":{"position":[[13,2]]},"725":{"position":[[198,2]]},"727":{"position":[[69,2],[404,2]]},"734":{"position":[[120,2]]},"737":{"position":[[263,2]]},"739":{"position":[[226,2]]},"745":{"position":[[15,2],[33,2],[51,2],[146,2]]},"757":{"position":[[42,2],[153,2],[223,2],[709,2],[818,2]]},"765":{"position":[[64,2],[195,2]]},"770":{"position":[[95,2],[274,2]]},"772":{"position":[[80,2],[231,2]]},"781":{"position":[[34,2]]},"784":{"position":[[160,2]]},"786":{"position":[[45,2]]},"789":{"position":[[120,2],[334,2],[383,2]]},"791":{"position":[[185,2]]},"805":{"position":[[4,2],[13,2]]},"810":{"position":[[153,2]]},"815":{"position":[[83,2],[234,2]]},"820":{"position":[[77,2]]},"833":{"position":[[127,2],[167,2],[511,2]]},"839":{"position":[[16,2],[50,2]]},"843":{"position":[[31,2]]},"847":{"position":[[144,2]]},"881":{"position":[[38,2],[56,2]]},"884":{"position":[[84,2]]},"887":{"position":[[67,2]]},"889":{"position":[[84,2]]},"894":{"position":[[76,2],[354,2]]},"896":{"position":[[128,2],[219,2],[363,2]]},"957":{"position":[[91,2]]},"977":{"position":[[166,2],[206,2]]},"984":{"position":[[2,2],[49,2],[90,2],[104,2]]},"998":{"position":[[24,2]]},"1010":{"position":[[949,2],[1049,2],[1264,2],[1447,2],[1566,2],[2076,2]]},"1069":{"position":[[48,2]]},"1159":{"position":[[26,2]]},"1180":{"position":[[15,2]]},"1220":{"position":[[50,2],[158,2]]}}}],["实现目标",{"_index":1046,"t":{"345":{"position":[[2954,4]]},"757":{"position":[[2954,4]]}}}],["实用功能",{"_index":1290,"t":{"555":{"position":[[45,4]]}}}],["实践",{"_index":770,"t":{"188":{"position":[[41,2]]},"411":{"position":[[50,2]]},"641":{"position":[[41,2]]},"843":{"position":[[50,2]]}}}],["实际",{"_index":255,"t":{"21":{"position":[[166,2]]},"260":{"position":[[58,2]]},"345":{"position":[[381,2]]},"757":{"position":[[381,2]]},"786":{"position":[[58,2]]},"963":{"position":[[361,2]]},"1010":{"position":[[2336,2]]}}}],["实际上",{"_index":1575,"t":{"1148":{"position":[[387,3]]}}}],["客户端",{"_index":828,"t":{"258":{"position":[[89,3]]},"260":{"position":[[12,3],[48,3]]},"275":{"position":[[181,3],[277,3]]},"279":{"position":[[39,3]]},"281":{"position":[[15,3]]},"301":{"position":[[72,3]]},"415":{"position":[[285,3]]},"777":{"position":[[72,3]]},"784":{"position":[[89,3]]},"786":{"position":[[12,3],[48,3]]},"801":{"position":[[181,3],[277,3]]},"805":{"position":[[39,3]]},"807":{"position":[[15,3]]},"847":{"position":[[285,3]]},"1216":{"position":[[223,3]]},"1220":{"position":[[96,3],[186,3]]}}}],["家庭",{"_index":364,"t":{"23":{"position":[[0,2]]}}}],["容器",{"_index":1514,"t":{"1069":{"position":[[40,2],[55,2]]},"1075":{"position":[[268,2]]},"1077":{"position":[[77,2]]},"1218":{"position":[[0,2],[27,2]]}}}],["容易",{"_index":1055,"t":{"351":{"position":[[67,2]]},"860":{"position":[[67,2]]}}}],["寄存器",{"_index":1564,"t":{"1148":{"position":[[27,3],[56,3],[93,3],[124,3],[133,3],[168,3],[204,3],[240,3],[325,3],[340,3],[415,3]]}}}],["寄生",{"_index":195,"t":{"19":{"position":[[39,2]]}}}],["密不可分",{"_index":315,"t":{"21":{"position":[[383,4]]}}}],["密码",{"_index":1147,"t":{"422":{"position":[[13,2],[27,2]]},"427":{"position":[[410,2],[501,2]]},"429":{"position":[[203,2],[441,2],[454,2]]},"431":{"position":[[3,2]]},"433":{"position":[[4,2],[247,2]]},"435":{"position":[[8,2],[19,2],[29,2],[47,2]]},"437":{"position":[[34,2],[72,2],[133,2],[438,2]]},"1010":{"position":[[870,2]]}}}],["密钥",{"_index":803,"t":{"219":{"position":[[76,2]]},"681":{"position":[[76,2]]}}}],["富足",{"_index":329,"t":{"21":{"position":[[468,2]]}}}],["对",{"_index":163,"t":{"17":{"position":[[164,1]]},"19":{"position":[[89,1]]},"21":{"position":[[0,1],[209,1]]},"23":{"position":[[35,1]]},"345":{"position":[[341,1]]},"378":{"position":[[91,1],[97,1]]},"380":{"position":[[0,1],[26,1]]},"383":{"position":[[380,1]]},"415":{"position":[[125,1],[131,1]]},"417":{"position":[[84,1]]},"757":{"position":[[341,1]]},"810":{"position":[[91,1],[97,1]]},"812":{"position":[[0,1],[26,1]]},"815":{"position":[[380,1]]},"847":{"position":[[125,1],[131,1]]},"849":{"position":[[84,1]]},"977":{"position":[[128,1],[208,1]]},"1008":{"position":[[10,1],[44,1]]},"1010":{"position":[[1069,1]]}}}],["对于",{"_index":1073,"t":{"370":{"position":[[0,2],[10,2]]},"497":{"position":[[52,2]]},"545":{"position":[[0,2]]},"879":{"position":[[0,2],[10,2]]},"1064":{"position":[[756,2],[942,2],[963,2]]},"1075":{"position":[[252,2]]}}}],["对应",{"_index":1261,"t":{"533":{"position":[[607,2]]},"559":{"position":[[127,2]]},"854":{"position":[[23,2]]},"1220":{"position":[[183,2]]}}}],["对比",{"_index":1376,"t":{"937":{"position":[[417,2]]},"1216":{"position":[[291,2]]}}}],["对称",{"_index":802,"t":{"219":{"position":[[74,2]]},"681":{"position":[[74,2]]}}}],["对象",{"_index":875,"t":{"284":{"position":[[104,2],[116,2]]},"299":{"position":[[11,2]]},"318":{"position":[[13,2]]},"345":{"position":[[90,2],[268,2],[334,2],[386,2],[391,2]]},"417":{"position":[[13,2],[80,2],[87,2]]},"440":{"position":[[19,2]]},"730":{"position":[[13,2]]},"757":{"position":[[90,2],[268,2],[334,2],[386,2],[391,2]]},"760":{"position":[[104,2],[116,2]]},"775":{"position":[[11,2]]},"849":{"position":[[13,2],[80,2],[87,2]]},"884":{"position":[[19,2]]},"984":{"position":[[28,2],[73,2]]},"1008":{"position":[[46,2]]}}}],["寻求",{"_index":177,"t":{"17":{"position":[[217,2]]}}}],["导入",{"_index":798,"t":{"215":{"position":[[82,2],[2979,2]]},"237":{"position":[[62,2]]},"247":{"position":[[182,2],[274,2],[282,2]]},"677":{"position":[[82,2],[2979,2]]},"699":{"position":[[62,2]]},"709":{"position":[[182,2],[274,2],[282,2]]}}}],["导出",{"_index":797,"t":{"215":{"position":[[18,2]]},"237":{"position":[[19,2]]},"249":{"position":[[252,2]]},"677":{"position":[[18,2]]},"699":{"position":[[19,2]]},"711":{"position":[[252,2]]}}}],["导致",{"_index":143,"t":{"17":{"position":[[93,2]]},"305":{"position":[[80,2]]},"341":{"position":[[91,2]]},"370":{"position":[[26,2]]},"375":{"position":[[468,2]]},"570":{"position":[[50,2],[114,2]]},"753":{"position":[[91,2]]},"781":{"position":[[80,2]]},"879":{"position":[[26,2]]}}}],["封装",{"_index":987,"t":{"336":{"position":[[1297,2]]},"341":{"position":[[102,2]]},"345":{"position":[[87,2],[229,2],[448,2]]},"493":{"position":[[0,2]]},"748":{"position":[[1297,2]]},"753":{"position":[[102,2]]},"757":{"position":[[87,2],[229,2],[448,2]]}}}],["将",{"_index":47,"t":{"13":{"position":[[95,1],[124,1],[153,1]]},"23":{"position":[[137,1]]},"53":{"position":[[7,1]]},"174":{"position":[[3,1]]},"203":{"position":[[43,1]]},"310":{"position":[[28,1]]},"336":{"position":[[1283,1]]},"345":{"position":[[50,1],[84,1],[445,1]]},"358":{"position":[[721,1]]},"415":{"position":[[303,1]]},"417":{"position":[[151,1]]},"440":{"position":[[18,1]]},"555":{"position":[[53,1]]},"557":{"position":[[34,1],[106,1]]},"611":{"position":[[43,1]]},"627":{"position":[[3,1]]},"722":{"position":[[28,1]]},"748":{"position":[[1283,1]]},"757":{"position":[[50,1],[84,1],[445,1]]},"847":{"position":[[303,1]]},"849":{"position":[[151,1]]},"867":{"position":[[721,1]]},"884":{"position":[[18,1]]},"1010":{"position":[[1845,1],[1913,1]]},"1055":{"position":[[22,1]]},"1057":{"position":[[19,1],[41,1],[168,1]]},"1060":{"position":[[33,1]]},"1064":{"position":[[1055,1]]},"1077":{"position":[[18,1]]},"1182":{"position":[[0,1]]}}}],["小于",{"_index":1171,"t":{"433":{"position":[[226,2]]},"1044":{"position":[[56,2]]}}}],["小写",{"_index":1464,"t":{"1044":{"position":[[255,2]]}}}],["小国寡民",{"_index":184,"t":{"19":{"position":[[0,4]]}}}],["小型",{"_index":1074,"t":{"370":{"position":[[5,2]]},"879":{"position":[[5,2]]}}}],["小规模",{"_index":1188,"t":{"447":{"position":[[9,3]]},"891":{"position":[[9,3]]}}}],["小麦",{"_index":199,"t":{"19":{"position":[[61,2]]}}}],["少",{"_index":1626,"t":{"1197":{"position":[[144,1]]}}}],["尝试",{"_index":1364,"t":{"926":{"position":[[169,2]]}}}],["尤为重要",{"_index":834,"t":{"258":{"position":[[145,4]]},"784":{"position":[[145,4]]}}}],["尤其",{"_index":136,"t":{"17":{"position":[[70,2]]},"1064":{"position":[[960,2]]}}}],["就",{"_index":819,"t":{"247":{"position":[[198,1],[306,1]]},"533":{"position":[[603,1]]},"557":{"position":[[158,1]]},"709":{"position":[[198,1],[306,1]]},"1064":{"position":[[500,1],[856,1]]}}}],["尽可能",{"_index":1104,"t":{"380":{"position":[[37,3]]},"812":{"position":[[37,3]]}}}],["尽管",{"_index":1515,"t":{"1069":{"position":[[51,2]]}}}],["局部变量",{"_index":1560,"t":{"1146":{"position":[[45,4]]}}}],["层",{"_index":1106,"t":{"383":{"position":[[14,1]]},"401":{"position":[[15,1]]},"465":{"position":[[24,1]]},"815":{"position":[[14,1]]},"833":{"position":[[15,1]]},"909":{"position":[[24,1]]}}}],["层次结构",{"_index":1134,"t":{"417":{"position":[[38,4]]},"849":{"position":[[38,4]]}}}],["属于",{"_index":1155,"t":{"424":{"position":[[7,2]]}}}],["属性",{"_index":879,"t":{"284":{"position":[[131,2]]},"310":{"position":[[59,2]]},"722":{"position":[[59,2]]},"760":{"position":[[131,2]]}}}],["崛起",{"_index":152,"t":{"17":{"position":[[125,2]]}}}],["崩溃",{"_index":565,"t":{"129":{"position":[[88,2]]},"575":{"position":[[88,2]]},"1075":{"position":[[203,2]]}}}],["嵌入",{"_index":723,"t":{"172":{"position":[[110,2]]},"284":{"position":[[174,2]]},"625":{"position":[[110,2]]},"760":{"position":[[174,2]]}}}],["嵌入式",{"_index":1547,"t":{"1128":{"position":[[17,3],[26,3]]}}}],["嵌套",{"_index":1418,"t":{"977":{"position":[[139,2]]},"1048":{"position":[[234,2]]}}}],["工业",{"_index":277,"t":{"21":{"position":[[234,2],[265,2]]}}}],["工业革命",{"_index":241,"t":{"21":{"position":[[114,4]]}}}],["工作",{"_index":943,"t":{"305":{"position":[[129,2]]},"318":{"position":[[316,2]]},"336":{"position":[[544,2]]},"341":{"position":[[447,2]]},"343":{"position":[[524,2]]},"411":{"position":[[97,2]]},"497":{"position":[[41,2]]},"537":{"position":[[196,2],[262,2]]},"541":{"position":[[252,2]]},"551":{"position":[[184,2]]},"730":{"position":[[316,2]]},"748":{"position":[[544,2]]},"753":{"position":[[447,2]]},"755":{"position":[[524,2]]},"781":{"position":[[129,2]]},"843":{"position":[[97,2]]},"1064":{"position":[[505,2]]},"1075":{"position":[[210,2]]},"1194":{"position":[[824,2],[862,2]]},"1220":{"position":[[153,2]]}}}],["工具",{"_index":190,"t":{"19":{"position":[[19,2]]},"188":{"position":[[124,2]]},"281":{"position":[[99,2],[108,2]]},"497":{"position":[[27,2]]},"641":{"position":[[124,2]]},"807":{"position":[[99,2],[108,2]]},"920":{"position":[[20,2]]},"957":{"position":[[139,2]]},"1035":{"position":[[65,2]]},"1069":{"position":[[63,2]]},"1077":{"position":[[13,2],[72,2]]},"1124":{"position":[[25,2]]},"1126":{"position":[[122,2]]}}}],["工具包",{"_index":1200,"t":{"465":{"position":[[33,3]]},"909":{"position":[[33,3]]}}}],["工具箱",{"_index":1331,"t":{"570":{"position":[[144,3]]}}}],["工厂",{"_index":1185,"t":{"440":{"position":[[0,2],[76,2]]},"443":{"position":[[232,2]]},"445":{"position":[[82,2]]},"447":{"position":[[25,2]]},"450":{"position":[[287,2],[356,2]]},"452":{"position":[[67,2]]},"457":{"position":[[476,2],[562,2]]},"463":{"position":[[26,2]]},"467":{"position":[[20,2],[36,2],[50,2]]},"884":{"position":[[0,2],[76,2]]},"887":{"position":[[232,2]]},"889":{"position":[[82,2]]},"891":{"position":[[25,2]]},"894":{"position":[[287,2],[356,2]]},"896":{"position":[[67,2]]},"901":{"position":[[476,2],[562,2]]},"907":{"position":[[26,2]]},"911":{"position":[[20,2],[36,2],[50,2]]}}}],["左",{"_index":1373,"t":{"934":{"position":[[120,1]]}}}],["巧合",{"_index":192,"t":{"19":{"position":[[26,2]]}}}],["差",{"_index":968,"t":{"331":{"position":[[59,1]]},"743":{"position":[[59,1]]}}}],["差异",{"_index":1344,"t":{"854":{"position":[[60,2]]}}}],["已经",{"_index":1507,"t":{"1064":{"position":[[1428,2]]},"1126":{"position":[[97,2]]}}}],["市场机制",{"_index":265,"t":{"21":{"position":[[196,4]]}}}],["市场竞争",{"_index":359,"t":{"21":{"position":[[593,4]]}}}],["布尔",{"_index":1451,"t":{"1026":{"position":[[114,2]]}}}],["布尔值",{"_index":1466,"t":{"1044":{"position":[[325,3]]}}}],["希望",{"_index":352,"t":{"21":{"position":[[567,2]]}}}],["带",{"_index":1003,"t":{"341":{"position":[[67,1]]},"343":{"position":[[1876,1]]},"345":{"position":[[2138,1]]},"753":{"position":[[67,1]]},"755":{"position":[[1876,1]]},"757":{"position":[[2138,1]]}}}],["带有",{"_index":1404,"t":{"968":{"position":[[7,2]]}}}],["帧",{"_index":1573,"t":{"1148":{"position":[[371,1]]}}}],["帮助",{"_index":413,"t":{"26":{"position":[[66,2]]},"48":{"position":[[25,2]]},"1035":{"position":[[48,2]]},"1124":{"position":[[74,2]]},"1166":{"position":[[12,2]]}}}],["常常",{"_index":16,"t":{"13":{"position":[[11,2]]}}}],["常用",{"_index":1026,"t":{"345":{"position":[[47,2]]},"559":{"position":[[92,2]]},"757":{"position":[[47,2]]},"1055":{"position":[[82,2]]},"1069":{"position":[[37,2]]}}}],["常见",{"_index":1184,"t":{"437":{"position":[[176,2]]},"977":{"position":[[98,2],[222,2]]}}}],["常见问题",{"_index":1653,"t":{"1220":{"position":[[213,4]]}}}],["干净",{"_index":1516,"t":{"1071":{"position":[[21,2]]}}}],["干扰",{"_index":606,"t":{"144":{"position":[[73,2]]},"590":{"position":[[73,2]]}}}],["平凡",{"_index":34,"t":{"13":{"position":[[67,2]]}}}],["平凡人",{"_index":24,"t":{"13":{"position":[[32,3]]}}}],["平台",{"_index":1324,"t":{"570":{"position":[[19,2]]}}}],["平滑",{"_index":772,"t":{"188":{"position":[[59,2]]},"641":{"position":[[59,2]]}}}],["平等",{"_index":154,"t":{"17":{"position":[[132,2],[159,2],[198,2]]}}}],["平衡",{"_index":178,"t":{"17":{"position":[[219,2]]},"411":{"position":[[61,2]]},"843":{"position":[[61,2]]}}}],["年",{"_index":1,"t":{"5":{"position":[[4,1]]},"7":{"position":[[4,1]]},"9":{"position":[[4,1]]},"1126":{"position":[[85,1]]}}}],["年龄",{"_index":1448,"t":{"1018":{"position":[[231,2]]},"1020":{"position":[[223,2]]}}}],["并且",{"_index":467,"t":{"42":{"position":[[56,2]]},"527":{"position":[[50,2]]}}}],["并发",{"_index":587,"t":{"134":{"position":[[268,2]]},"178":{"position":[[3,2]]},"184":{"position":[[1973,2]]},"188":{"position":[[37,2]]},"336":{"position":[[208,2]]},"535":{"position":[[42,2]]},"539":{"position":[[458,2]]},"553":{"position":[[125,2],[233,2],[258,2],[374,2]]},"580":{"position":[[268,2]]},"631":{"position":[[3,2]]},"637":{"position":[[1973,2]]},"641":{"position":[[37,2]]},"748":{"position":[[208,2]]},"920":{"position":[[15,2]]},"922":{"position":[[10,2]]},"932":{"position":[[8,2]]},"1128":{"position":[[75,2]]}}}],["并发程序",{"_index":1232,"t":{"497":{"position":[[59,4]]}}}],["并非",{"_index":185,"t":{"19":{"position":[[7,2]]},"21":{"position":[[34,2]]}}}],["幸福",{"_index":220,"t":{"21":{"position":[[27,2]]}}}],["广泛",{"_index":1539,"t":{"1124":{"position":[[28,2]]},"1126":{"position":[[115,2]]}}}],["序列化",{"_index":1396,"t":{"957":{"position":[[143,3],[148,3]]},"977":{"position":[[11,3],[31,3]]},"980":{"position":[[65,3],[102,3]]},"984":{"position":[[170,3]]},"993":{"position":[[172,3]]},"998":{"position":[[57,3]]}}}],["库",{"_index":1156,"t":{"424":{"position":[[16,1]]},"470":{"position":[[17,1]]},"555":{"position":[[21,1]]},"854":{"position":[[54,1]]},"937":{"position":[[9,1],[428,1]]},"952":{"position":[[0,1],[40,1],[131,1]]},"954":{"position":[[132,1]]},"974":{"position":[[72,1]]},"977":{"position":[[90,1]]},"998":{"position":[[19,1]]},"1013":{"position":[[29,1]]},"1038":{"position":[[27,1]]},"1064":{"position":[[1107,1],[1127,1]]},"1073":{"position":[[35,1]]},"1082":{"position":[[12,1]]},"1087":{"position":[[12,1]]},"1102":{"position":[[128,1]]},"1104":{"position":[[14,1]]},"1119":{"position":[[128,1]]},"1121":{"position":[[14,1]]},"1157":{"position":[[168,1]]},"1220":{"position":[[41,1]]}}}],["应",{"_index":74,"t":{"13":{"position":[[185,1],[195,1]]},"286":{"position":[[30,1]]},"380":{"position":[[36,1]]},"415":{"position":[[224,1],[289,1],[370,1],[381,1],[390,1],[398,1]]},"491":{"position":[[45,1],[56,1]]},"762":{"position":[[30,1]]},"812":{"position":[[36,1]]},"847":{"position":[[224,1],[289,1],[370,1],[381,1],[390,1],[398,1]]},"934":{"position":[[124,1]]}}}],["应当",{"_index":330,"t":{"21":{"position":[[474,2]]}}}],["应用",{"_index":1053,"t":{"348":{"position":[[145,2]]},"372":{"position":[[68,2]]},"467":{"position":[[13,2]]},"566":{"position":[[226,2]]},"568":{"position":[[107,2]]},"857":{"position":[[145,2]]},"881":{"position":[[68,2]]},"911":{"position":[[13,2]]},"1033":{"position":[[41,2]]},"1102":{"position":[[115,2]]},"1119":{"position":[[115,2]]}}}],["应用层",{"_index":1641,"t":{"1216":{"position":[[262,3]]}}}],["应用程序",{"_index":1119,"t":{"409":{"position":[[259,4]]},"570":{"position":[[224,4]]},"841":{"position":[[259,4]]},"1020":{"position":[[114,4]]},"1128":{"position":[[35,4]]}}}],["应该",{"_index":829,"t":{"258":{"position":[[93,2]]},"260":{"position":[[7,2],[51,2]]},"281":{"position":[[19,2],[92,2]]},"305":{"position":[[122,2]]},"308":{"position":[[93,2],[105,2],[115,2],[124,2]]},"333":{"position":[[123,2]]},"348":{"position":[[95,2],[121,2]]},"378":{"position":[[89,2]]},"411":{"position":[[88,2]]},"415":{"position":[[49,2],[123,2]]},"417":{"position":[[82,2]]},"419":{"position":[[29,2]]},"720":{"position":[[93,2],[105,2],[115,2],[124,2]]},"745":{"position":[[123,2]]},"781":{"position":[[122,2]]},"784":{"position":[[93,2]]},"786":{"position":[[7,2],[51,2]]},"807":{"position":[[19,2],[92,2]]},"810":{"position":[[89,2]]},"843":{"position":[[88,2]]},"847":{"position":[[49,2],[123,2]]},"849":{"position":[[82,2]]},"851":{"position":[[29,2]]},"857":{"position":[[95,2],[121,2]]},"1075":{"position":[[124,2]]},"1220":{"position":[[133,2]]}}}],["庞大",{"_index":1071,"t":{"368":{"position":[[11,2]]},"877":{"position":[[11,2]]}}}],["废弃",{"_index":1533,"t":{"1100":{"position":[[13,2]]},"1102":{"position":[[21,2]]},"1117":{"position":[[13,2]]},"1119":{"position":[[21,2]]}}}],["延迟",{"_index":1636,"t":{"1214":{"position":[[408,2]]},"1216":{"position":[[301,2]]}}}],["建立",{"_index":267,"t":{"21":{"position":[[204,2]]},"380":{"position":[[62,2]]},"812":{"position":[[62,2]]}}}],["建议",{"_index":394,"t":{"23":{"position":[[115,2]]},"920":{"position":[[52,2]]},"1102":{"position":[[25,2]]},"1119":{"position":[[25,2]]}}}],["开发",{"_index":1144,"t":{"419":{"position":[[5,2]]},"463":{"position":[[12,2]]},"851":{"position":[[5,2]]},"907":{"position":[[12,2]]},"1010":{"position":[[1065,2]]},"1102":{"position":[[117,2]]},"1119":{"position":[[117,2]]},"1126":{"position":[[32,2]]},"1128":{"position":[[20,2]]}}}],["开发人员",{"_index":1542,"t":{"1124":{"position":[[76,4]]}}}],["开发者",{"_index":1330,"t":{"570":{"position":[[141,3]]},"957":{"position":[[62,3]]}}}],["开启",{"_index":118,"t":{"17":{"position":[[6,2]]},"922":{"position":[[19,2]]},"1026":{"position":[[156,2]]}}}],["开头",{"_index":513,"t":{"97":{"position":[[5,2]]},"1044":{"position":[[219,2]]}}}],["开始",{"_index":234,"t":{"21":{"position":[[94,2]]},"318":{"position":[[318,2]]},"395":{"position":[[169,2]]},"537":{"position":[[194,2],[470,2]]},"541":{"position":[[250,2]]},"730":{"position":[[318,2]]},"827":{"position":[[169,2]]},"1126":{"position":[[86,2]]},"1142":{"position":[[27,2],[47,2]]}}}],["开放",{"_index":999,"t":{"339":{"position":[[634,2]]},"378":{"position":[[94,2]]},"380":{"position":[[3,2]]},"415":{"position":[[128,2]]},"751":{"position":[[634,2]]},"810":{"position":[[94,2]]},"812":{"position":[[3,2]]},"847":{"position":[[128,2]]}}}],["开销",{"_index":569,"t":{"129":{"position":[[102,2]]},"435":{"position":[[83,2]]},"575":{"position":[[102,2]]},"1218":{"position":[[235,2]]}}}],["开闭",{"_index":1102,"t":{"378":{"position":[[0,2]]},"415":{"position":[[75,2]]},"447":{"position":[[30,2]]},"454":{"position":[[4,2]]},"810":{"position":[[0,2]]},"847":{"position":[[75,2]]},"891":{"position":[[30,2]]},"898":{"position":[[4,2]]}}}],["异常",{"_index":941,"t":{"305":{"position":[[71,2]]},"781":{"position":[[71,2]]},"1157":{"position":[[160,2]]},"1200":{"position":[[1023,2]]},"1205":{"position":[[1205,2]]}}}],["异步",{"_index":641,"t":{"155":{"position":[[39,2]]},"345":{"position":[[160,2],[310,2],[629,2],[3029,2]]},"644":{"position":[[39,2]]},"757":{"position":[[160,2],[310,2],[629,2],[3029,2]]},"922":{"position":[[3,2],[32,2]]}}}],["式",{"_index":837,"t":{"258":{"position":[[159,1]]},"281":{"position":[[40,1]]},"286":{"position":[[59,1]]},"336":{"position":[[1235,1]]},"467":{"position":[[68,1],[78,1]]},"557":{"position":[[22,1]]},"748":{"position":[[1235,1]]},"762":{"position":[[59,1]]},"784":{"position":[[159,1]]},"807":{"position":[[40,1]]},"911":{"position":[[68,1],[78,1]]},"924":{"position":[[55,1]]}}}],["引入",{"_index":1359,"t":{"924":{"position":[[63,2]]}}}],["引导",{"_index":1511,"t":{"1067":{"position":[[63,2]]}}}],["引用",{"_index":1039,"t":{"345":{"position":[[359,2]]},"757":{"position":[[359,2]]}}}],["引起",{"_index":1050,"t":{"348":{"position":[[101,2]]},"415":{"position":[[55,2]]},"847":{"position":[[55,2]]},"857":{"position":[[101,2]]}}}],["强",{"_index":458,"t":{"38":{"position":[[227,1]]},"294":{"position":[[497,1]]},"345":{"position":[[2966,1]]},"757":{"position":[[2966,1]]},"770":{"position":[[497,1]]},"1075":{"position":[[89,1]]},"1077":{"position":[[86,1]]}}}],["强制",{"_index":958,"t":{"329":{"position":[[5,2]]},"557":{"position":[[0,2],[32,2]]},"741":{"position":[[5,2]]}}}],["强化",{"_index":911,"t":{"296":{"position":[[392,2]]},"772":{"position":[[392,2]]}}}],["强大",{"_index":1229,"t":{"497":{"position":[[25,2]]},"957":{"position":[[13,2]]},"1013":{"position":[[43,2]]},"1038":{"position":[[20,2]]},"1069":{"position":[[60,2]]},"1077":{"position":[[10,2]]},"1124":{"position":[[20,2]]}}}],["强盛时期",{"_index":123,"t":{"17":{"position":[[21,4]]}}}],["强行",{"_index":1345,"t":{"854":{"position":[[88,2]]},"924":{"position":[[61,2]]}}}],["强调",{"_index":1360,"t":{"924":{"position":[[74,2]]}}}],["归咎于",{"_index":399,"t":{"23":{"position":[[140,3]]}}}],["归档",{"_index":857,"t":{"272":{"position":[[100,2]]},"798":{"position":[[100,2]]}}}],["当前",{"_index":1142,"t":{"417":{"position":[[255,2]]},"433":{"position":[[228,2]]},"480":{"position":[[42,2]]},"559":{"position":[[2,2],[71,2]]},"849":{"position":[[255,2]]},"1064":{"position":[[531,2]]},"1090":{"position":[[102,2]]},"1096":{"position":[[121,2]]},"1107":{"position":[[102,2]]},"1113":{"position":[[121,2]]},"1142":{"position":[[199,2]]},"1148":{"position":[[290,2],[398,2]]},"1151":{"position":[[25,2]]},"1153":{"position":[[24,2]]}}}],["当前目录",{"_index":1239,"t":{"504":{"position":[[106,4]]}}}],["形式",{"_index":547,"t":{"126":{"position":[[44,2]]},"572":{"position":[[44,2]]}}}],["彩色",{"_index":1113,"t":{"401":{"position":[[214,2]]},"833":{"position":[[214,2]]}}}],["影响",{"_index":386,"t":{"23":{"position":[[74,2]]},"129":{"position":[[92,2]]},"184":{"position":[[1965,2]]},"279":{"position":[[35,2]]},"351":{"position":[[15,2]]},"368":{"position":[[23,2]]},"575":{"position":[[92,2]]},"637":{"position":[[1965,2]]},"805":{"position":[[35,2]]},"860":{"position":[[15,2]]},"877":{"position":[[23,2]]},"1071":{"position":[[38,2]]}}}],["往往",{"_index":140,"t":{"17":{"position":[[83,2],[210,2]]},"21":{"position":[[398,2]]},"23":{"position":[[133,2]]}}}],["很多",{"_index":1490,"t":{"1064":{"position":[[476,2]]}}}],["循环",{"_index":595,"t":{"134":{"position":[[1275,2]]},"138":{"position":[[346,2]]},"150":{"position":[[1220,2]]},"158":{"position":[[588,2]]},"345":{"position":[[1946,2]]},"491":{"position":[[48,2]]},"580":{"position":[[1275,2]]},"584":{"position":[[346,2]]},"647":{"position":[[588,2]]},"659":{"position":[[1220,2]]},"757":{"position":[[1946,2]]}}}],["微",{"_index":931,"t":{"303":{"position":[[69,1]]},"385":{"position":[[5,1],[122,1]]},"397":{"position":[[74,1]]},"779":{"position":[[69,1]]},"817":{"position":[[5,1],[122,1]]},"829":{"position":[[74,1]]},"1218":{"position":[[142,1]]}}}],["微内核",{"_index":539,"t":{"126":{"position":[[12,3]]},"134":{"position":[[71,3],[186,3],[424,3]]},"138":{"position":[[106,3]]},"144":{"position":[[0,3]]},"150":{"position":[[52,3],[335,3]]},"158":{"position":[[434,3]]},"194":{"position":[[52,3],[251,3]]},"253":{"position":[[128,3]]},"572":{"position":[[12,3]]},"580":{"position":[[71,3],[186,3],[424,3]]},"584":{"position":[[106,3]]},"590":{"position":[[0,3]]},"647":{"position":[[434,3]]},"659":{"position":[[52,3],[335,3]]},"667":{"position":[[52,3],[251,3]]},"715":{"position":[[128,3]]}}}],["心理",{"_index":194,"t":{"19":{"position":[[36,2]]}}}],["必填",{"_index":1457,"t":{"1044":{"position":[[15,2]]}}}],["必然",{"_index":171,"t":{"17":{"position":[[192,2]]}}}],["必要",{"_index":1357,"t":{"924":{"position":[[34,2]]},"1064":{"position":[[42,2],[1104,2]]}}}],["必需",{"_index":1501,"t":{"1064":{"position":[[785,2]]}}}],["必须",{"_index":162,"t":{"17":{"position":[[162,2]]},"170":{"position":[[1750,2]]},"247":{"position":[[291,2]]},"286":{"position":[[8,2],[50,2]]},"294":{"position":[[246,2]]},"305":{"position":[[40,2]]},"415":{"position":[[207,2]]},"480":{"position":[[22,2]]},"491":{"position":[[0,2]]},"495":{"position":[[127,2]]},"623":{"position":[[1750,2]]},"709":{"position":[[291,2]]},"762":{"position":[[8,2],[50,2]]},"770":{"position":[[246,2]]},"781":{"position":[[40,2]]},"847":{"position":[[207,2]]},"963":{"position":[[30,2]]},"1044":{"position":[[26,2],[113,2],[124,2],[143,2],[190,2],[213,2],[233,2],[252,2],[268,2],[279,2],[299,2],[322,2],[345,2],[365,2],[390,2],[407,2],[424,2],[522,2],[609,2]]}}}],["快",{"_index":1162,"t":{"427":{"position":[[468,1]]},"942":{"position":[[10,1]]},"1197":{"position":[[78,1],[122,1]]}}}],["忽略",{"_index":822,"t":{"247":{"position":[[309,2]]},"709":{"position":[[309,2]]}}}],["忽视",{"_index":22,"t":{"13":{"position":[[26,2]]}}}],["态",{"_index":550,"t":{"126":{"position":[[51,1]]},"129":{"position":[[85,1],[126,1],[130,1]]},"131":{"position":[[84,1]]},"184":{"position":[[1934,1]]},"336":{"position":[[1272,1]]},"539":{"position":[[43,1],[466,1]]},"553":{"position":[[27,1],[75,1]]},"572":{"position":[[51,1]]},"575":{"position":[[85,1],[126,1],[130,1]]},"577":{"position":[[84,1]]},"637":{"position":[[1934,1]]},"748":{"position":[[1272,1]]}}}],["思想",{"_index":681,"t":{"168":{"position":[[26,2]]},"440":{"position":[[88,2]]},"621":{"position":[[26,2]]},"884":{"position":[[88,2]]}}}],["性",{"_index":882,"t":{"286":{"position":[[3,1]]},"305":{"position":[[10,1]]},"331":{"position":[[58,1]]},"333":{"position":[[107,1]]},"351":{"position":[[57,1],[76,1]]},"570":{"position":[[232,1]]},"743":{"position":[[58,1]]},"745":{"position":[[107,1]]},"762":{"position":[[3,1]]},"781":{"position":[[10,1]]},"860":{"position":[[57,1],[76,1]]}}}],["性能",{"_index":817,"t":{"247":{"position":[[153,2]]},"491":{"position":[[152,2]]},"545":{"position":[[50,2]]},"553":{"position":[[336,2]]},"570":{"position":[[116,2],[170,2]]},"709":{"position":[[153,2]]},"937":{"position":[[451,2],[484,2]]},"950":{"position":[[43,2]]},"952":{"position":[[81,2]]},"972":{"position":[[15,2]]},"1128":{"position":[[12,2]]},"1214":{"position":[[218,2]]},"1216":{"position":[[289,2]]}}}],["性能比",{"_index":1383,"t":{"946":{"position":[[51,3]]}}}],["总",{"_index":1311,"t":{"557":{"position":[[427,1],[466,1]]}}}],["总线",{"_index":590,"t":{"134":{"position":[[299,2]]},"158":{"position":[[571,2]]},"580":{"position":[[299,2]]},"647":{"position":[[571,2]]}}}],["恢复",{"_index":1479,"t":{"1055":{"position":[[99,2]]},"1077":{"position":[[36,2]]}}}],["情况",{"_index":384,"t":{"23":{"position":[[63,2]]},"380":{"position":[[17,2]]},"491":{"position":[[162,2]]},"519":{"position":[[978,2]]},"557":{"position":[[78,2]]},"812":{"position":[[17,2]]},"977":{"position":[[70,2]]}}}],["意义",{"_index":91,"t":{"13":{"position":[[235,2]]}}}],["意味",{"_index":402,"t":{"23":{"position":[[150,2]]}}}],["意味着",{"_index":205,"t":{"19":{"position":[[86,3]]},"21":{"position":[[400,3],[537,3]]}}}],["意外",{"_index":1057,"t":{"353":{"position":[[18,2]]},"862":{"position":[[18,2]]}}}],["意见",{"_index":392,"t":{"23":{"position":[[109,2]]}}}],["感谢",{"_index":955,"t":{"320":{"position":[[209,2]]},"732":{"position":[[209,2]]}}}],["慢",{"_index":1410,"t":{"972":{"position":[[28,1]]}}}],["成",{"_index":988,"t":{"336":{"position":[[1299,1]]},"748":{"position":[[1299,1]]}}}],["成为",{"_index":348,"t":{"21":{"position":[[547,2],[610,2]]},"1057":{"position":[[20,2]]},"1126":{"position":[[99,2]]}}}],["成功",{"_index":69,"t":{"13":{"position":[[164,2]]},"19":{"position":[[50,2],[82,2],[110,2]]},"158":{"position":[[136,2]]},"336":{"position":[[180,2],[708,2]]},"647":{"position":[[136,2]]},"748":{"position":[[180,2],[708,2]]},"930":{"position":[[81,2]]}}}],["成就",{"_index":38,"t":{"13":{"position":[[75,2]]}}}],["成本",{"_index":678,"t":{"166":{"position":[[95,2]]},"427":{"position":[[519,2]]},"433":{"position":[[7,2],[201,2],[474,2]]},"437":{"position":[[94,2],[153,2]]},"619":{"position":[[95,2]]}}}],["成败",{"_index":100,"t":{"13":{"position":[[266,2]]}}}],["我们",{"_index":65,"t":{"13":{"position":[[149,2]]},"26":{"position":[[68,2]]},"511":{"position":[[13,2]]},"977":{"position":[[122,2]]},"1010":{"position":[[1062,2]]},"1136":{"position":[[75,2]]},"1188":{"position":[[105,2],[184,2]]}}}],["我会",{"_index":525,"t":{"110":{"position":[[41,2]]},"592":{"position":[[41,2]]}}}],["或者",{"_index":1219,"t":{"487":{"position":[[51,2]]},"533":{"position":[[28,2]]},"1044":{"position":[[630,2]]},"1188":{"position":[[170,2]]}}}],["或许",{"_index":53,"t":{"13":{"position":[[110,2],[175,2]]},"21":{"position":[[78,2],[344,2]]}}}],["戳",{"_index":805,"t":{"224":{"position":[[28,1]]},"686":{"position":[[28,1]]}}}],["房地产",{"_index":251,"t":{"21":{"position":[[157,3]]}}}],["所以",{"_index":1611,"t":{"1188":{"position":[[182,2]]},"1192":{"position":[[538,2]]}}}],["所有",{"_index":429,"t":{"28":{"position":[[74,2]]},"36":{"position":[[151,2]]},"42":{"position":[[58,2]]},"53":{"position":[[11,2]]},"64":{"position":[[9,2]]},"134":{"position":[[809,2],[996,2]]},"138":{"position":[[276,2],[528,2]]},"170":{"position":[[1772,2]]},"184":{"position":[[1910,2]]},"224":{"position":[[8,2]]},"263":{"position":[[66,2],[86,2],[107,2]]},"272":{"position":[[92,2]]},"345":{"position":[[906,2]]},"375":{"position":[[456,2]]},"409":{"position":[[353,2]]},"484":{"position":[[29,2]]},"491":{"position":[[136,2]]},"521":{"position":[[546,2]]},"537":{"position":[[407,2],[427,2],[534,2]]},"541":{"position":[[507,2],[590,2]]},"559":{"position":[[628,2]]},"580":{"position":[[809,2],[996,2]]},"584":{"position":[[276,2],[528,2]]},"623":{"position":[[1772,2]]},"637":{"position":[[1910,2]]},"686":{"position":[[8,2]]},"757":{"position":[[906,2]]},"789":{"position":[[66,2],[86,2],[107,2]]},"798":{"position":[[92,2]]},"841":{"position":[[353,2]]},"920":{"position":[[29,2]]},"1064":{"position":[[709,2]]},"1148":{"position":[[25,2]]},"1151":{"position":[[31,2]]},"1153":{"position":[[30,2]]},"1188":{"position":[[87,2]]},"1194":{"position":[[173,2]]}}}],["手中",{"_index":390,"t":{"23":{"position":[[103,2]]}}}],["手动",{"_index":1157,"t":{"424":{"position":[[20,2]]},"529":{"position":[[61,2]]},"854":{"position":[[36,2]]},"937":{"position":[[437,2]]},"1082":{"position":[[20,2]]},"1087":{"position":[[20,2]]}}}],["手段",{"_index":773,"t":{"188":{"position":[[72,2]]},"641":{"position":[[72,2]]}}}],["才",{"_index":293,"t":{"21":{"position":[[297,1]]},"489":{"position":[[532,1]]},"559":{"position":[[218,1]]}}}],["才能",{"_index":309,"t":{"21":{"position":[[359,2]]},"963":{"position":[[137,2]]},"1075":{"position":[[34,2]]}}}],["打印",{"_index":477,"t":{"46":{"position":[[2,2],[15,2],[28,2]]},"48":{"position":[[14,2]]},"224":{"position":[[21,2]]},"559":{"position":[[69,2],[125,2]]},"561":{"position":[[457,2]]},"686":{"position":[[21,2]]},"968":{"position":[[273,2]]},"1044":{"position":[[474,2]]},"1142":{"position":[[121,2]]},"1146":{"position":[[18,2]]}}}],["打开",{"_index":1532,"t":{"1092":{"position":[[173,2]]},"1098":{"position":[[182,2]]},"1109":{"position":[[173,2]]},"1115":{"position":[[182,2]]}}}],["打招呼",{"_index":1449,"t":{"1022":{"position":[[173,3]]}}}],["执行",{"_index":430,"t":{"28":{"position":[[81,2]]},"31":{"position":[[64,2],[148,2]]},"33":{"position":[[56,2],[197,2]]},"36":{"position":[[66,2],[149,2]]},"38":{"position":[[98,2],[179,2]]},"40":{"position":[[40,2]]},"42":{"position":[[65,2]]},"48":{"position":[[20,2]]},"53":{"position":[[0,2]]},"184":{"position":[[2032,2]]},"336":{"position":[[1227,2]]},"341":{"position":[[114,2]]},"345":{"position":[[116,2],[312,2],[1037,2],[3020,2]]},"470":{"position":[[79,2]]},"487":{"position":[[63,2],[90,2]]},"523":{"position":[[198,2]]},"533":{"position":[[37,2],[605,2]]},"537":{"position":[[19,2],[162,2]]},"541":{"position":[[23,2]]},"543":{"position":[[32,2],[239,2],[387,2]]},"553":{"position":[[98,2]]},"637":{"position":[[2032,2]]},"748":{"position":[[1227,2]]},"753":{"position":[[114,2]]},"757":{"position":[[116,2],[312,2],[1037,2],[3020,2]]},"922":{"position":[[34,2]]},"1031":{"position":[[28,2]]},"1057":{"position":[[150,2]]},"1062":{"position":[[63,2]]},"1064":{"position":[[1083,2]]},"1075":{"position":[[36,2]]},"1080":{"position":[[42,2]]},"1085":{"position":[[42,2]]},"1094":{"position":[[195,2]]},"1111":{"position":[[195,2]]},"1124":{"position":[[69,2]]},"1136":{"position":[[62,2],[87,2]]},"1142":{"position":[[85,2],[104,2],[175,2],[195,2]]},"1148":{"position":[[311,2]]},"1151":{"position":[[378,2],[424,2]]},"1157":{"position":[[88,2],[190,2]]},"1159":{"position":[[16,2]]},"1194":{"position":[[628,2]]}}}],["执行命令",{"_index":1035,"t":{"345":{"position":[[196,4],[377,4]]},"757":{"position":[[196,4],[377,4]]}}}],["扩展",{"_index":559,"t":{"129":{"position":[[45,2]]},"166":{"position":[[68,2]]},"170":{"position":[[83,2]]},"172":{"position":[[29,2]]},"178":{"position":[[73,2]]},"184":{"position":[[1941,2],[1994,2]]},"305":{"position":[[120,2]]},"331":{"position":[[37,2]]},"345":{"position":[[291,2],[458,2],[3036,2],[6313,2]]},"372":{"position":[[11,2]]},"378":{"position":[[92,2]]},"380":{"position":[[1,2]]},"385":{"position":[[12,2]]},"411":{"position":[[118,2]]},"413":{"position":[[38,2]]},"415":{"position":[[126,2],[235,2]]},"419":{"position":[[22,2]]},"424":{"position":[[14,2]]},"459":{"position":[[23,2]]},"467":{"position":[[6,2],[27,2]]},"575":{"position":[[45,2]]},"619":{"position":[[68,2]]},"623":{"position":[[83,2]]},"625":{"position":[[29,2]]},"631":{"position":[[73,2]]},"637":{"position":[[1941,2],[1994,2]]},"743":{"position":[[37,2]]},"757":{"position":[[291,2],[458,2],[3036,2],[6313,2]]},"781":{"position":[[120,2]]},"810":{"position":[[92,2]]},"812":{"position":[[1,2]]},"817":{"position":[[12,2]]},"843":{"position":[[118,2]]},"845":{"position":[[38,2]]},"847":{"position":[[126,2],[235,2]]},"851":{"position":[[22,2]]},"881":{"position":[[11,2]]},"903":{"position":[[23,2]]},"911":{"position":[[6,2],[27,2]]},"1077":{"position":[[103,2]]},"1080":{"position":[[34,2]]},"1085":{"position":[[34,2]]}}}],["扩展性",{"_index":457,"t":{"38":{"position":[[223,3]]},"336":{"position":[[1276,3]]},"440":{"position":[[45,3]]},"748":{"position":[[1276,3]]},"884":{"position":[[45,3]]}}}],["扮演",{"_index":338,"t":{"21":{"position":[[501,2]]}}}],["找",{"_index":1338,"t":{"854":{"position":[[6,1]]}}}],["找到",{"_index":1342,"t":{"854":{"position":[[21,2]]}}}],["承担",{"_index":843,"t":{"260":{"position":[[36,2]]},"356":{"position":[[23,2]]},"786":{"position":[[36,2]]},"865":{"position":[[23,2]]}}}],["技术",{"_index":285,"t":{"21":{"position":[[267,2],[394,2]]},"166":{"position":[[38,2],[61,2]]},"619":{"position":[[38,2],[61,2]]},"1069":{"position":[[43,2]]},"1077":{"position":[[80,2]]}}}],["抓取",{"_index":1612,"t":{"1188":{"position":[[192,2]]}}}],["投资者",{"_index":278,"t":{"21":{"position":[[239,3]]}}}],["抛",{"_index":939,"t":{"305":{"position":[[67,1]]},"781":{"position":[[67,1]]}}}],["报告",{"_index":952,"t":{"313":{"position":[[266,2]]},"315":{"position":[[562,2]]},"356":{"position":[[414,2],[481,2],[525,2]]},"358":{"position":[[509,2],[688,2]]},"725":{"position":[[266,2]]},"727":{"position":[[562,2]]},"865":{"position":[[414,2],[481,2],[525,2]]},"867":{"position":[[509,2],[688,2]]}}}],["报错",{"_index":1081,"t":{"375":{"position":[[0,2],[154,2]]},"926":{"position":[[6,2]]}}}],["抽象",{"_index":696,"t":{"170":{"position":[[130,2]]},"281":{"position":[[65,2]]},"289":{"position":[[5,2]]},"308":{"position":[[109,2],[112,2],[128,2]]},"310":{"position":[[2,2]]},"315":{"position":[[5,2],[348,2]]},"333":{"position":[[9,2],[42,2]]},"380":{"position":[[52,2],[60,2]]},"383":{"position":[[12,2]]},"390":{"position":[[7,2]]},"401":{"position":[[13,2],[38,2]]},"411":{"position":[[9,2],[81,2]]},"415":{"position":[[139,2],[384,2],[387,2],[401,2]]},"457":{"position":[[474,2]]},"465":{"position":[[25,2]]},"467":{"position":[[48,2]]},"623":{"position":[[130,2]]},"720":{"position":[[109,2],[112,2],[128,2]]},"722":{"position":[[2,2]]},"727":{"position":[[5,2],[348,2]]},"745":{"position":[[9,2],[42,2]]},"765":{"position":[[5,2]]},"807":{"position":[[65,2]]},"812":{"position":[[52,2],[60,2]]},"815":{"position":[[12,2]]},"822":{"position":[[7,2]]},"833":{"position":[[13,2],[38,2]]},"843":{"position":[[9,2],[81,2]]},"847":{"position":[[139,2],[384,2],[387,2],[401,2]]},"901":{"position":[[474,2]]},"909":{"position":[[25,2]]},"911":{"position":[[48,2]]}}}],["抽象类",{"_index":1033,"t":{"345":{"position":[[190,3]]},"757":{"position":[[190,3]]}}}],["拆",{"_index":853,"t":{"265":{"position":[[3,1]]},"358":{"position":[[736,1]]},"365":{"position":[[123,1]]},"415":{"position":[[307,1]]},"791":{"position":[[3,1]]},"847":{"position":[[307,1]]},"867":{"position":[[736,1]]},"874":{"position":[[123,1]]}}}],["拆分",{"_index":469,"t":{"42":{"position":[[88,2]]},"370":{"position":[[23,2]]},"879":{"position":[[23,2]]}}}],["拓扑",{"_index":777,"t":{"194":{"position":[[795,2]]},"227":{"position":[[1091,2]]},"667":{"position":[[795,2]]},"689":{"position":[[1091,2]]}}}],["拦截器",{"_index":1112,"t":{"397":{"position":[[97,3]]},"829":{"position":[[97,3]]}}}],["拷贝",{"_index":1596,"t":{"1168":{"position":[[2,2]]}}}],["持久",{"_index":812,"t":{"235":{"position":[[4,2]]},"697":{"position":[[4,2]]},"977":{"position":[[54,2]]}}}],["持有",{"_index":1038,"t":{"345":{"position":[[339,2]]},"491":{"position":[[2,2]]},"757":{"position":[[339,2]]}}}],["持续",{"_index":270,"t":{"21":{"position":[[212,2]]},"1080":{"position":[[94,2]]},"1085":{"position":[[94,2]]}}}],["挂",{"_index":1213,"t":{"473":{"position":[[37,1]]},"480":{"position":[[40,1]]}}}],["挂载",{"_index":1482,"t":{"1064":{"position":[[40,2],[81,2],[280,2],[362,2],[467,2],[627,2],[846,2],[1042,2],[1140,2]]},"1075":{"position":[[187,2]]},"1218":{"position":[[45,2]]}}}],["指",{"_index":248,"t":{"21":{"position":[[145,1]]},"166":{"position":[[25,1]]},"619":{"position":[[25,1]]}}}],["指令",{"_index":1569,"t":{"1148":{"position":[[292,2],[317,2]]},"1182":{"position":[[4,2],[19,2]]}}}],["指向",{"_index":1567,"t":{"1148":{"position":[[265,2]]}}}],["指定",{"_index":534,"t":{"119":{"position":[[53,2]]},"160":{"position":[[17,2]]},"601":{"position":[[53,2]]},"649":{"position":[[17,2]]},"854":{"position":[[90,2]]},"1044":{"position":[[348,2]]},"1055":{"position":[[40,2]]},"1057":{"position":[[14,2],[114,2],[160,2]]},"1136":{"position":[[11,2]]},"1140":{"position":[[9,2]]},"1142":{"position":[[178,2]]},"1144":{"position":[[193,2]]}}}],["指标",{"_index":745,"t":{"180":{"position":[[8,2]]},"633":{"position":[[8,2]]},"1214":{"position":[[371,2]]}}}],["指针",{"_index":1401,"t":{"963":{"position":[[135,2],[183,2],[304,2],[322,2]]},"1148":{"position":[[263,2],[363,2],[372,2]]}}}],["按",{"_index":844,"t":{"260":{"position":[[43,1]]},"265":{"position":[[368,1]]},"281":{"position":[[68,1]]},"786":{"position":[[43,1]]},"791":{"position":[[368,1]]},"807":{"position":[[68,1]]}}}],["挫折",{"_index":396,"t":{"23":{"position":[[126,2]]}}}],["捕捉",{"_index":1584,"t":{"1157":{"position":[[8,2],[130,2]]}}}],["捕获",{"_index":1241,"t":{"523":{"position":[[46,2]]}}}],["损坏",{"_index":1347,"t":{"854":{"position":[[118,2]]},"1067":{"position":[[8,2],[70,2]]}}}],["损耗",{"_index":1409,"t":{"972":{"position":[[17,2]]}}}],["换句话说",{"_index":831,"t":{"258":{"position":[[108,4]]},"348":{"position":[[110,4]]},"784":{"position":[[108,4]]},"857":{"position":[[110,4]]},"1055":{"position":[[46,4]]}}}],["授权",{"_index":1109,"t":{"395":{"position":[[421,2]]},"827":{"position":[[421,2]]}}}],["掌握",{"_index":389,"t":{"23":{"position":[[98,2]]},"42":{"position":[[139,2]]}}}],["排序",{"_index":778,"t":{"194":{"position":[[797,2]]},"227":{"position":[[1093,2]]},"667":{"position":[[797,2]]},"689":{"position":[[1093,2]]}}}],["排查",{"_index":1085,"t":{"375":{"position":[[147,2],[201,2],[295,2]]},"570":{"position":[[190,2]]}}}],["排队",{"_index":1036,"t":{"345":{"position":[[302,2]]},"757":{"position":[[302,2]]}}}],["掠夺",{"_index":276,"t":{"21":{"position":[[231,2]]}}}],["接受",{"_index":522,"t":{"110":{"position":[[30,2]]},"592":{"position":[[30,2]]}}}],["接口",{"_index":533,"t":{"117":{"position":[[50,2]]},"134":{"position":[[77,2]]},"158":{"position":[[440,2]]},"170":{"position":[[11,2],[29,2],[123,2],[210,2],[227,2],[285,2],[596,2]]},"194":{"position":[[58,2],[229,2]]},"207":{"position":[[413,2]]},"215":{"position":[[4,2],[148,2]]},"217":{"position":[[4,2]]},"224":{"position":[[19,2]]},"247":{"position":[[193,2],[202,2]]},"258":{"position":[[105,2],[119,2],[128,2],[155,2]]},"260":{"position":[[5,2],[27,2],[34,2],[63,2]]},"263":{"position":[[7,2],[124,2]]},"265":{"position":[[9,2],[189,2]]},"270":{"position":[[11,2]]},"279":{"position":[[30,2],[64,2]]},"281":{"position":[[10,2],[41,2],[55,2],[72,2],[83,2],[88,2]]},"284":{"position":[[160,2]]},"289":{"position":[[7,2]]},"301":{"position":[[4,2]]},"305":{"position":[[26,2]]},"308":{"position":[[147,2]]},"310":{"position":[[7,2]]},"315":{"position":[[7,2],[71,2],[398,2]]},"322":{"position":[[9,2]]},"333":{"position":[[26,2],[44,2],[55,2]]},"336":{"position":[[345,2]]},"345":{"position":[[187,2],[226,2],[631,2],[696,2],[911,2],[3115,2]]},"351":{"position":[[38,2]]},"361":{"position":[[8,2]]},"368":{"position":[[7,2]]},"372":{"position":[[35,2],[92,2]]},"378":{"position":[[121,2]]},"383":{"position":[[7,2]]},"390":{"position":[[5,2]]},"401":{"position":[[10,2],[31,2]]},"411":{"position":[[25,2]]},"415":{"position":[[300,2],[305,2],[317,2]]},"419":{"position":[[13,2],[43,2],[65,2]]},"440":{"position":[[71,2]]},"443":{"position":[[29,2]]},"445":{"position":[[5,2]]},"450":{"position":[[29,2],[289,2]]},"452":{"position":[[5,2],[69,2]]},"457":{"position":[[31,2],[478,2]]},"459":{"position":[[35,2]]},"580":{"position":[[77,2]]},"599":{"position":[[50,2]]},"615":{"position":[[413,2]]},"623":{"position":[[11,2],[29,2],[123,2],[210,2],[227,2],[285,2],[596,2]]},"647":{"position":[[440,2]]},"667":{"position":[[58,2],[229,2]]},"677":{"position":[[4,2],[148,2]]},"679":{"position":[[4,2]]},"686":{"position":[[19,2]]},"709":{"position":[[193,2],[202,2]]},"720":{"position":[[147,2]]},"722":{"position":[[7,2]]},"727":{"position":[[7,2],[71,2],[398,2]]},"734":{"position":[[9,2]]},"745":{"position":[[26,2],[44,2],[55,2]]},"748":{"position":[[345,2]]},"757":{"position":[[187,2],[226,2],[631,2],[696,2],[911,2],[3115,2]]},"760":{"position":[[160,2]]},"765":{"position":[[7,2]]},"777":{"position":[[4,2]]},"781":{"position":[[26,2]]},"784":{"position":[[105,2],[119,2],[128,2],[155,2]]},"786":{"position":[[5,2],[27,2],[34,2],[63,2]]},"789":{"position":[[7,2],[124,2]]},"791":{"position":[[9,2],[189,2]]},"796":{"position":[[11,2]]},"805":{"position":[[30,2],[64,2]]},"807":{"position":[[10,2],[41,2],[55,2],[72,2],[83,2],[88,2]]},"810":{"position":[[121,2]]},"815":{"position":[[7,2]]},"822":{"position":[[5,2]]},"833":{"position":[[10,2],[31,2]]},"843":{"position":[[25,2]]},"847":{"position":[[300,2],[305,2],[317,2]]},"851":{"position":[[13,2],[43,2],[65,2]]},"860":{"position":[[38,2]]},"870":{"position":[[8,2]]},"877":{"position":[[7,2]]},"881":{"position":[[35,2],[92,2]]},"884":{"position":[[71,2]]},"887":{"position":[[29,2]]},"889":{"position":[[5,2]]},"894":{"position":[[29,2],[289,2]]},"896":{"position":[[5,2],[69,2]]},"901":{"position":[[31,2],[478,2]]},"903":{"position":[[35,2]]},"928":{"position":[[8,2]]},"977":{"position":[[203,2]]},"984":{"position":[[20,2],[65,2],[88,2]]},"1010":{"position":[[1016,2],[1282,2],[1465,2],[1586,2],[2096,2]]},"1064":{"position":[[353,2],[753,2]]},"1218":{"position":[[189,2]]}}}],["接口定义",{"_index":581,"t":{"134":{"position":[[85,4]]},"158":{"position":[[448,4]]},"194":{"position":[[66,4]]},"291":{"position":[[7,4]]},"419":{"position":[[25,4]]},"580":{"position":[[85,4]]},"647":{"position":[[448,4]]},"667":{"position":[[66,4]]},"767":{"position":[[7,4]]},"851":{"position":[[25,4]]}}}],["接口类型",{"_index":1394,"t":{"957":{"position":[[107,4]]}}}],["接口隔离",{"_index":825,"t":{"258":{"position":[[0,4]]},"415":{"position":[[239,4]]},"784":{"position":[[0,4]]},"847":{"position":[[239,4]]}}}],["接收",{"_index":1004,"t":{"341":{"position":[[76,2]]},"345":{"position":[[264,2]]},"753":{"position":[[76,2]]},"757":{"position":[[264,2]]},"1200":{"position":[[1215,2]]}}}],["接收数据",{"_index":996,"t":{"339":{"position":[[407,4]]},"531":{"position":[[237,4]]},"751":{"position":[[407,4]]}}}],["接收端",{"_index":991,"t":{"339":{"position":[[40,3]]},"751":{"position":[[40,3]]}}}],["接收者",{"_index":1040,"t":{"345":{"position":[[372,3],[406,3]]},"757":{"position":[[372,3],[406,3]]}}}],["控制",{"_index":763,"t":{"184":{"position":[[2000,2]]},"310":{"position":[[18,2]]},"343":{"position":[[176,2],[897,2]]},"345":{"position":[[2074,2],[3009,2]]},"495":{"position":[[58,2]]},"523":{"position":[[172,2]]},"533":{"position":[[705,2]]},"549":{"position":[[19,2]]},"553":{"position":[[256,2],[299,2],[376,2],[429,2]]},"637":{"position":[[2000,2]]},"722":{"position":[[18,2]]},"755":{"position":[[176,2],[897,2]]},"757":{"position":[[2074,2],[3009,2]]},"1124":{"position":[[71,2]]},"1151":{"position":[[259,2],[305,2]]},"1180":{"position":[[19,2]]},"1191":{"position":[[10,2]]},"1192":{"position":[[10,2]]},"1197":{"position":[[95,2],[137,2]]},"1216":{"position":[[258,2]]}}}],["控制台",{"_index":934,"t":{"303":{"position":[[94,3]]},"397":{"position":[[23,3]]},"399":{"position":[[0,3]]},"401":{"position":[[137,3],[162,3],[461,3]]},"409":{"position":[[19,3],[641,3]]},"452":{"position":[[358,3]]},"779":{"position":[[94,3]]},"829":{"position":[[23,3]]},"831":{"position":[[0,3]]},"833":{"position":[[137,3],[162,3],[461,3]]},"841":{"position":[[19,3],[641,3]]},"896":{"position":[[358,3]]}}}],["推动",{"_index":151,"t":{"17":{"position":[[119,2]]},"21":{"position":[[423,2],[590,2]]}}}],["推荐",{"_index":471,"t":{"42":{"position":[[119,2]]},"495":{"position":[[110,2]]},"553":{"position":[[303,2]]},"1035":{"position":[[81,2]]},"1075":{"position":[[272,2]]},"1100":{"position":[[29,2],[111,2]]},"1117":{"position":[[29,2],[111,2]]}}}],["推荐值",{"_index":1172,"t":{"433":{"position":[[230,3]]}}}],["推送",{"_index":785,"t":{"203":{"position":[[54,2]]},"611":{"position":[[54,2]]}}}],["描述",{"_index":652,"t":{"158":{"position":[[165,2]]},"647":{"position":[[165,2]]},"1044":{"position":[[3,2]]},"1142":{"position":[[5,2]]}}}],["描述符",{"_index":1316,"t":{"557":{"position":[[707,3]]}}}],["提交",{"_index":1043,"t":{"345":{"position":[[2133,2]]},"757":{"position":[[2133,2]]}}}],["提供",{"_index":113,"t":{"15":{"position":[[44,2]]},"17":{"position":[[106,2]]},"203":{"position":[[14,2]]},"333":{"position":[[71,2]]},"422":{"position":[[44,2]]},"470":{"position":[[19,2]]},"500":{"position":[[9,2]]},"527":{"position":[[7,2]]},"545":{"position":[[27,2]]},"555":{"position":[[40,2]]},"611":{"position":[[14,2]]},"745":{"position":[[71,2]]},"937":{"position":[[10,2]]},"957":{"position":[[49,2]]},"1013":{"position":[[31,2]]},"1018":{"position":[[8,2]]},"1033":{"position":[[8,2]]},"1038":{"position":[[30,2]]},"1052":{"position":[[10,2]]},"1064":{"position":[[340,2],[424,2],[560,2]]},"1069":{"position":[[76,2]]},"1075":{"position":[[56,2]]},"1077":{"position":[[82,2]]},"1080":{"position":[[29,2],[82,2]]},"1085":{"position":[[29,2],[82,2]]},"1102":{"position":[[123,2]]},"1119":{"position":[[123,2]]},"1220":{"position":[[20,2]]}}}],["提出",{"_index":827,"t":{"258":{"position":[[78,2]]},"284":{"position":[[74,2]]},"308":{"position":[[77,2]]},"348":{"position":[[78,2]]},"378":{"position":[[64,2]]},"720":{"position":[[77,2]]},"760":{"position":[[74,2]]},"784":{"position":[[78,2]]},"810":{"position":[[64,2]]},"857":{"position":[[78,2]]}}}],["提前",{"_index":1598,"t":{"1170":{"position":[[38,2]]}}}],["提升",{"_index":242,"t":{"21":{"position":[[118,2]]},"545":{"position":[[48,2]]},"570":{"position":[[218,2]]}}}],["提取",{"_index":504,"t":{"83":{"position":[[5,2]]},"87":{"position":[[67,2],[103,2]]},"90":{"position":[[5,2]]},"104":{"position":[[0,2]]},"417":{"position":[[156,2]]},"849":{"position":[[156,2]]},"974":{"position":[[88,2]]}}}],["提高",{"_index":416,"t":{"26":{"position":[[85,2]]},"158":{"position":[[310,2]]},"166":{"position":[[98,2]]},"333":{"position":[[99,2]]},"345":{"position":[[67,2]]},"351":{"position":[[0,2],[72,2]]},"417":{"position":[[29,2]]},"619":{"position":[[98,2]]},"647":{"position":[[310,2]]},"745":{"position":[[99,2]]},"757":{"position":[[67,2]]},"849":{"position":[[29,2]]},"860":{"position":[[0,2],[72,2]]},"954":{"position":[[135,2]]},"1052":{"position":[[70,2]]},"1216":{"position":[[316,2]]}}}],["插件",{"_index":546,"t":{"126":{"position":[[38,2]]},"142":{"position":[[37,2]]},"305":{"position":[[125,2]]},"333":{"position":[[126,2],[148,2]]},"411":{"position":[[91,2]]},"463":{"position":[[9,2]]},"465":{"position":[[17,2]]},"467":{"position":[[76,2]]},"572":{"position":[[38,2]]},"588":{"position":[[37,2]]},"745":{"position":[[126,2],[148,2]]},"781":{"position":[[125,2]]},"843":{"position":[[91,2]]},"907":{"position":[[9,2]]},"909":{"position":[[17,2]]},"911":{"position":[[76,2]]}}}],["插槽",{"_index":972,"t":{"333":{"position":[[139,2]]},"745":{"position":[[139,2]]}}}],["握手",{"_index":1096,"t":{"375":{"position":[[318,2]]}}}],["携带",{"_index":1047,"t":{"345":{"position":[[2964,2]]},"757":{"position":[[2964,2]]}}}],["撤销",{"_index":1029,"t":{"345":{"position":[[145,2]]},"757":{"position":[[145,2]]}}}],["擅长",{"_index":201,"t":{"19":{"position":[[66,2]]}}}],["操作",{"_index":984,"t":{"336":{"position":[[1286,2]]},"343":{"position":[[1069,2]]},"345":{"position":[[150,2],[446,2]]},"487":{"position":[[92,2]]},"533":{"position":[[41,2]]},"543":{"position":[[14,2],[42,2],[142,2]]},"545":{"position":[[7,2],[32,2]]},"553":{"position":[[205,2]]},"748":{"position":[[1286,2]]},"755":{"position":[[1069,2]]},"757":{"position":[[150,2],[446,2]]},"922":{"position":[[5,2]]},"950":{"position":[[33,2]]},"952":{"position":[[175,2]]},"957":{"position":[[29,2],[193,2],[226,2]]},"963":{"position":[[368,2]]},"1075":{"position":[[39,2]]},"1100":{"position":[[44,2]]},"1117":{"position":[[44,2]]}}}],["操作系统",{"_index":1297,"t":{"557":{"position":[[44,4],[116,4]]},"1102":{"position":[[76,4]]},"1119":{"position":[[76,4]]},"1126":{"position":[[109,4]]}}}],["支付",{"_index":928,"t":{"303":{"position":[[60,2],[71,2],[76,2]]},"383":{"position":[[3,2],[81,2],[186,2],[232,2],[329,2],[372,2]]},"385":{"position":[[7,2],[111,2],[124,2]]},"388":{"position":[[199,2],[251,2],[310,2],[339,2]]},"390":{"position":[[74,2],[401,2]]},"397":{"position":[[0,2]]},"779":{"position":[[60,2],[71,2],[76,2]]},"815":{"position":[[3,2],[81,2],[186,2],[232,2],[329,2],[372,2]]},"817":{"position":[[7,2],[111,2],[124,2]]},"820":{"position":[[199,2],[251,2],[310,2],[339,2]]},"822":{"position":[[74,2],[401,2]]},"829":{"position":[[0,2]]}}}],["支付宝",{"_index":930,"t":{"303":{"position":[[65,3]]},"383":{"position":[[229,3],[340,3]]},"388":{"position":[[262,3]]},"779":{"position":[[65,3]]},"815":{"position":[[229,3],[340,3]]},"820":{"position":[[262,3]]}}}],["支持",{"_index":495,"t":{"67":{"position":[[17,2]]},"71":{"position":[[7,2],[26,2]]},"110":{"position":[[19,2]]},"142":{"position":[[70,2]]},"155":{"position":[[24,2]]},"176":{"position":[[26,2]]},"184":{"position":[[1990,2]]},"191":{"position":[[0,2]]},"212":{"position":[[12,2]]},"224":{"position":[[0,2]]},"237":{"position":[[78,2]]},"247":{"position":[[270,2]]},"281":{"position":[[47,2]]},"336":{"position":[[206,2]]},"341":{"position":[[49,2]]},"343":{"position":[[139,2],[209,2],[879,2]]},"345":{"position":[[143,2],[294,2],[420,2],[473,2],[2067,2],[2141,2],[2962,2],[2998,2],[3693,2]]},"388":{"position":[[307,2]]},"588":{"position":[[70,2]]},"592":{"position":[[19,2]]},"629":{"position":[[26,2]]},"637":{"position":[[1990,2]]},"644":{"position":[[24,2]]},"664":{"position":[[0,2]]},"674":{"position":[[12,2]]},"686":{"position":[[0,2]]},"699":{"position":[[78,2]]},"709":{"position":[[270,2]]},"748":{"position":[[206,2]]},"753":{"position":[[49,2]]},"755":{"position":[[139,2],[209,2],[879,2]]},"757":{"position":[[143,2],[294,2],[420,2],[473,2],[2067,2],[2141,2],[2962,2],[2998,2],[3693,2]]},"807":{"position":[[47,2]]},"820":{"position":[[307,2]]},"934":{"position":[[3,2]]},"942":{"position":[[22,2]]},"1013":{"position":[[54,2]]},"1022":{"position":[[110,2]]},"1024":{"position":[[122,2]]},"1035":{"position":[[2,2],[10,2],[39,2]]},"1038":{"position":[[45,2]]},"1064":{"position":[[944,2]]},"1161":{"position":[[5,2]]}}}],["收养",{"_index":1605,"t":{"1186":{"position":[[16,2]]},"1191":{"position":[[27,2]]}}}],["收到",{"_index":789,"t":{"203":{"position":[[84,2]]},"531":{"position":[[259,2]]},"611":{"position":[[84,2]]}}}],["收尾",{"_index":1617,"t":{"1194":{"position":[[860,2]]}}}],["收集",{"_index":1289,"t":{"555":{"position":[[33,2]]}}}],["改",{"_index":1189,"t":{"454":{"position":[[15,1]]},"898":{"position":[[15,1]]}}}],["改为",{"_index":716,"t":{"170":{"position":[[1743,2]]},"623":{"position":[[1743,2]]},"1055":{"position":[[38,2]]}}}],["改动",{"_index":1198,"t":{"463":{"position":[[23,2]]},"907":{"position":[[23,2]]}}}],["改变",{"_index":885,"t":{"286":{"position":[[31,2]]},"289":{"position":[[359,2]]},"296":{"position":[[460,2]]},"372":{"position":[[98,2]]},"415":{"position":[[225,2]]},"762":{"position":[[31,2]]},"765":{"position":[[359,2]]},"772":{"position":[[460,2]]},"847":{"position":[[225,2]]},"881":{"position":[[98,2]]},"1055":{"position":[[52,2]]},"1157":{"position":[[120,2]]}}}],["改变程序",{"_index":876,"t":{"284":{"position":[[122,4]]},"760":{"position":[[122,4]]}}}],["改善",{"_index":217,"t":{"21":{"position":[[14,2]]}}}],["改进",{"_index":1062,"t":{"358":{"position":[[716,2]]},"867":{"position":[[716,2]]}}}],["改造",{"_index":656,"t":{"158":{"position":[[367,2]]},"647":{"position":[[367,2]]}}}],["攻击",{"_index":1180,"t":{"435":{"position":[[94,2]]}}}],["放在",{"_index":58,"t":{"13":{"position":[[127,2]]},"247":{"position":[[145,2]]},"709":{"position":[[145,2]]}}}],["放大",{"_index":17,"t":{"13":{"position":[[13,2]]}}}],["效果",{"_index":1429,"t":{"984":{"position":[[117,2]]}}}],["效率",{"_index":1391,"t":{"954":{"position":[[145,2]]}}}],["敏感",{"_index":1437,"t":{"1008":{"position":[[11,2]]},"1010":{"position":[[940,2],[1043,2],[1115,2]]},"1075":{"position":[[83,2]]}}}],["数",{"_index":1282,"t":{"553":{"position":[[235,1]]},"1064":{"position":[[675,1]]}}}],["数值",{"_index":1275,"t":{"545":{"position":[[5,2]]},"553":{"position":[[118,2]]},"1155":{"position":[[11,2],[69,2]]}}}],["数字",{"_index":1461,"t":{"1044":{"position":[[146,2],[164,2]]}}}],["数据",{"_index":616,"t":{"150":{"position":[[10,2],[341,2]]},"155":{"position":[[33,2]]},"176":{"position":[[3,2]]},"194":{"position":[[257,2]]},"296":{"position":[[381,2]]},"313":{"position":[[110,2],[268,2]]},"315":{"position":[[168,2],[303,2],[564,2]]},"341":{"position":[[93,2]]},"358":{"position":[[684,2]]},"365":{"position":[[75,2],[86,2]]},"397":{"position":[[36,2]]},"523":{"position":[[143,2]]},"527":{"position":[[56,2]]},"529":{"position":[[30,2]]},"533":{"position":[[34,2],[600,2]]},"539":{"position":[[20,2]]},"553":{"position":[[19,2],[269,2],[345,2]]},"629":{"position":[[3,2]]},"644":{"position":[[33,2]]},"659":{"position":[[10,2],[341,2]]},"667":{"position":[[257,2]]},"725":{"position":[[110,2],[268,2]]},"727":{"position":[[168,2],[303,2],[564,2]]},"753":{"position":[[93,2]]},"772":{"position":[[381,2]]},"829":{"position":[[36,2]]},"867":{"position":[[684,2]]},"874":{"position":[[75,2],[86,2]]},"922":{"position":[[185,2],[199,2],[209,2]]},"937":{"position":[[43,2]]},"952":{"position":[[73,2]]},"954":{"position":[[9,2]]},"968":{"position":[[15,2]]},"977":{"position":[[52,2]]},"984":{"position":[[176,2]]},"1010":{"position":[[1085,2],[1914,2]]},"1038":{"position":[[23,2]]},"1052":{"position":[[72,2]]},"1064":{"position":[[447,2],[822,2]]},"1155":{"position":[[129,2]]}}}],["数据处理",{"_index":1247,"t":{"523":{"position":[[221,4]]}}}],["数据库",{"_index":926,"t":{"303":{"position":[[45,3]]},"313":{"position":[[317,3]]},"365":{"position":[[98,3]]},"465":{"position":[[5,3]]},"725":{"position":[[317,3]]},"779":{"position":[[45,3]]},"874":{"position":[[98,3]]},"909":{"position":[[5,3]]},"968":{"position":[[27,3]]}}}],["数据格式",{"_index":1417,"t":{"977":{"position":[[107,4],[129,4]]}}}],["数组",{"_index":625,"t":{"150":{"position":[[255,2]]},"659":{"position":[[255,2]]},"946":{"position":[[37,2]]},"952":{"position":[[141,2]]}}}],["数量",{"_index":1268,"t":{"535":{"position":[[47,2]]}}}],["整个",{"_index":566,"t":{"129":{"position":[[94,2]]},"575":{"position":[[94,2]]}}}],["整体",{"_index":243,"t":{"21":{"position":[[121,2]]}}}],["整体而言",{"_index":1143,"t":{"419":{"position":[[0,4]]},"851":{"position":[[0,4]]}}}],["文件",{"_index":468,"t":{"42":{"position":[[86,2]]},"60":{"position":[[7,2]]},"64":{"position":[[20,2]]},"224":{"position":[[74,2]]},"237":{"position":[[75,2]]},"240":{"position":[[62,2]]},"296":{"position":[[192,2],[427,2]]},"303":{"position":[[40,2],[89,2]]},"397":{"position":[[18,2]]},"399":{"position":[[6,2]]},"401":{"position":[[486,2],[507,2]]},"405":{"position":[[230,2]]},"409":{"position":[[67,2],[645,2]]},"452":{"position":[[124,2],[221,2]]},"557":{"position":[[705,2]]},"566":{"position":[[141,2]]},"686":{"position":[[74,2]]},"699":{"position":[[75,2]]},"702":{"position":[[62,2]]},"772":{"position":[[192,2],[427,2]]},"779":{"position":[[40,2],[89,2]]},"829":{"position":[[18,2]]},"831":{"position":[[6,2]]},"833":{"position":[[486,2],[507,2]]},"837":{"position":[[230,2]]},"841":{"position":[[67,2],[645,2]]},"896":{"position":[[124,2],[221,2]]},"922":{"position":[[205,2]]},"950":{"position":[[16,2]]},"954":{"position":[[67,2]]},"1010":{"position":[[1038,2]]},"1064":{"position":[[391,2],[610,2],[713,2],[736,2],[782,2],[807,2],[923,2],[1144,2]]},"1067":{"position":[[73,2]]},"1073":{"position":[[40,2]]},"1092":{"position":[[21,2],[175,2],[299,2],[334,2]]},"1098":{"position":[[13,2],[184,2],[417,2]]},"1100":{"position":[[42,2]]},"1109":{"position":[[21,2],[175,2],[299,2],[334,2]]},"1115":{"position":[[13,2],[184,2],[417,2]]},"1117":{"position":[[42,2]]},"1144":{"position":[[90,2]]},"1168":{"position":[[19,2]]},"1197":{"position":[[91,2]]},"1200":{"position":[[395,2]]},"1205":{"position":[[422,2]]},"1216":{"position":[[66,2],[161,2],[239,2]]},"1218":{"position":[[53,2]]},"1220":{"position":[[79,2],[91,2]]}}}],["文件名",{"_index":500,"t":{"76":{"position":[[3,3]]},"83":{"position":[[1,3]]},"87":{"position":[[69,3],[105,3]]},"240":{"position":[[37,3]]},"702":{"position":[[37,3]]}}}],["文件系统",{"_index":560,"t":{"129":{"position":[[48,4]]},"575":{"position":[[48,4]]},"1055":{"position":[[77,4]]},"1057":{"position":[[34,4]]},"1064":{"position":[[47,4],[333,4],[419,4],[554,4]]},"1067":{"position":[[54,4]]},"1075":{"position":[[139,4],[193,4]]},"1197":{"position":[[60,4],[131,4]]}}}],["文化",{"_index":103,"t":{"15":{"position":[[8,2]]},"19":{"position":[[5,2],[53,2],[79,2],[99,2],[107,2]]}}}],["文本",{"_index":484,"t":{"53":{"position":[[2,2],[8,2]]}}}],["文档",{"_index":1421,"t":{"977":{"position":[[156,2]]},"1035":{"position":[[50,2]]},"1077":{"position":[[105,2]]},"1104":{"position":[[2,2]]},"1121":{"position":[[2,2]]},"1184":{"position":[[9,2]]},"1220":{"position":[[129,2]]}}}],["断点",{"_index":1552,"t":{"1136":{"position":[[82,2]]},"1142":{"position":[[18,2],[73,2]]},"1144":{"position":[[18,2],[59,2],[93,2],[135,2],[165,2],[195,2]]},"1151":{"position":[[360,2],[451,2]]},"1155":{"position":[[6,2],[64,2],[122,2]]},"1157":{"position":[[10,2],[40,2],[64,2],[93,2],[132,2]]},"1182":{"position":[[1,2]]}}}],["断言",{"_index":1368,"t":{"930":{"position":[[79,2]]},"937":{"position":[[441,2]]},"952":{"position":[[56,2]]}}}],["新",{"_index":692,"t":{"170":{"position":[[85,1]]},"215":{"position":[[74,1]]},"331":{"position":[[44,1]]},"336":{"position":[[341,1]]},"380":{"position":[[22,1]]},"411":{"position":[[106,1]]},"415":{"position":[[146,1]]},"431":{"position":[[10,1]]},"447":{"position":[[19,1]]},"623":{"position":[[85,1]]},"677":{"position":[[74,1]]},"743":{"position":[[44,1]]},"748":{"position":[[341,1]]},"812":{"position":[[22,1]]},"843":{"position":[[106,1]]},"847":{"position":[[146,1]]},"891":{"position":[[19,1]]},"957":{"position":[[255,1]]},"1010":{"position":[[1175,1]]},"1057":{"position":[[22,1],[45,1],[116,1],[142,1]]},"1062":{"position":[[81,1]]},"1064":{"position":[[2,1],[1115,1],[1435,1]]}}}],["新增",{"_index":718,"t":{"172":{"position":[[3,2],[136,2]]},"184":{"position":[[1945,2]]},"194":{"position":[[227,2]]},"215":{"position":[[0,2]]},"227":{"position":[[0,2]]},"385":{"position":[[3,2]]},"388":{"position":[[337,2]]},"407":{"position":[[14,2]]},"454":{"position":[[9,2]]},"463":{"position":[[17,2]]},"625":{"position":[[3,2],[136,2]]},"637":{"position":[[1945,2]]},"667":{"position":[[227,2]]},"677":{"position":[[0,2]]},"689":{"position":[[0,2]]},"817":{"position":[[3,2]]},"820":{"position":[[337,2]]},"839":{"position":[[14,2]]},"898":{"position":[[9,2]]},"907":{"position":[[17,2]]}}}],["方",{"_index":956,"t":{"322":{"position":[[6,1]]},"734":{"position":[[6,1]]}}}],["方便",{"_index":1145,"t":{"419":{"position":[[18,2]]},"851":{"position":[[18,2]]}}}],["方式",{"_index":607,"t":{"144":{"position":[[79,2]]},"170":{"position":[[89,2]]},"299":{"position":[[116,2]]},"343":{"position":[[105,2]]},"345":{"position":[[44,2],[403,2]]},"383":{"position":[[5,2]]},"385":{"position":[[157,2]]},"388":{"position":[[312,2],[341,2]]},"390":{"position":[[76,2],[403,2]]},"411":{"position":[[58,2]]},"511":{"position":[[18,2]]},"525":{"position":[[37,2]]},"527":{"position":[[39,2]]},"553":{"position":[[0,2]]},"590":{"position":[[79,2]]},"623":{"position":[[89,2]]},"755":{"position":[[105,2]]},"757":{"position":[[44,2],[403,2]]},"775":{"position":[[116,2]]},"815":{"position":[[5,2]]},"817":{"position":[[157,2]]},"820":{"position":[[312,2],[341,2]]},"822":{"position":[[76,2],[403,2]]},"843":{"position":[[58,2]]},"914":{"position":[[16,2]]},"918":{"position":[[2,2]]},"1033":{"position":[[28,2]]},"1075":{"position":[[66,2]]},"1220":{"position":[[106,2]]}}}],["方案",{"_index":906,"t":{"294":{"position":[[484,2]]},"296":{"position":[[472,2]]},"770":{"position":[[484,2]]},"772":{"position":[[472,2]]},"974":{"position":[[51,2]]},"998":{"position":[[41,2],[60,2]]},"1080":{"position":[[79,2]]},"1085":{"position":[[79,2]]},"1220":{"position":[[31,2]]}}}],["方法",{"_index":527,"t":{"115":{"position":[[8,2],[106,2]]},"117":{"position":[[8,2]]},"170":{"position":[[151,2]]},"184":{"position":[[1961,2]]},"196":{"position":[[6,2]]},"201":{"position":[[22,2]]},"229":{"position":[[148,2]]},"247":{"position":[[204,2]]},"251":{"position":[[81,2]]},"260":{"position":[[20,2]]},"263":{"position":[[14,2],[390,2]]},"279":{"position":[[21,2],[56,2],[72,2]]},"281":{"position":[[31,2]]},"310":{"position":[[56,2]]},"333":{"position":[[67,2]]},"341":{"position":[[128,2]]},"345":{"position":[[201,2],[285,2]]},"375":{"position":[[84,2],[149,2]]},"417":{"position":[[161,2]]},"467":{"position":[[38,2]]},"500":{"position":[[19,2]]},"537":{"position":[[49,2]]},"597":{"position":[[8,2],[106,2]]},"599":{"position":[[8,2]]},"609":{"position":[[22,2]]},"623":{"position":[[151,2]]},"637":{"position":[[1961,2]]},"669":{"position":[[6,2]]},"691":{"position":[[148,2]]},"709":{"position":[[204,2]]},"713":{"position":[[81,2]]},"722":{"position":[[56,2]]},"745":{"position":[[67,2]]},"753":{"position":[[128,2]]},"757":{"position":[[201,2],[285,2]]},"786":{"position":[[20,2]]},"789":{"position":[[14,2],[390,2]]},"805":{"position":[[21,2],[56,2],[72,2]]},"807":{"position":[[31,2]]},"849":{"position":[[161,2]]},"854":{"position":[[9,2],[26,2]]},"911":{"position":[[38,2]]},"918":{"position":[[54,2]]},"957":{"position":[[207,2],[220,2]]},"963":{"position":[[47,2],[356,2]]},"972":{"position":[[24,2]]},"1008":{"position":[[89,2]]},"1010":{"position":[[1095,2],[1911,2],[1953,2]]},"1018":{"position":[[43,2]]},"1138":{"position":[[2,2],[38,2],[89,2]]}}}],["方面",{"_index":1527,"t":{"1077":{"position":[[49,2]]}}}],["旁人",{"_index":391,"t":{"23":{"position":[[106,2]]}}}],["族",{"_index":1193,"t":{"457":{"position":[[33,1]]},"459":{"position":[[27,1]]},"901":{"position":[[33,1]]},"903":{"position":[[27,1]]}}}],["无法",{"_index":964,"t":{"331":{"position":[[22,2]]},"339":{"position":[[167,2]]},"568":{"position":[[75,2]]},"743":{"position":[[22,2]]},"751":{"position":[[167,2]]},"1064":{"position":[[501,2],[641,2],[650,2],[867,2],[1056,2]]},"1067":{"position":[[3,2]]},"1075":{"position":[[206,2],[214,2]]}}}],["无法访问",{"_index":1476,"t":{"1055":{"position":[[68,4]]},"1064":{"position":[[857,4]]}}}],["无缝",{"_index":944,"t":{"305":{"position":[[136,2]]},"781":{"position":[[136,2]]}}}],["无论",{"_index":99,"t":{"13":{"position":[[264,2]]},"543":{"position":[[392,2]]}}}],["无论是",{"_index":1648,"t":{"1220":{"position":[[34,3]]}}}],["无限",{"_index":1433,"t":{"1001":{"position":[[95,2]]}}}],["无需",{"_index":673,"t":{"166":{"position":[[72,2]]},"172":{"position":[[8,2]]},"401":{"position":[[466,2]]},"407":{"position":[[19,2]]},"454":{"position":[[13,2]]},"463":{"position":[[21,2]]},"547":{"position":[[353,2]]},"619":{"position":[[72,2]]},"625":{"position":[[8,2]]},"833":{"position":[[466,2]]},"839":{"position":[[19,2]]},"898":{"position":[[13,2]]},"907":{"position":[[21,2]]},"924":{"position":[[17,2]]},"937":{"position":[[444,2]]},"1170":{"position":[[45,2]]}}}],["日",{"_index":3,"t":{"5":{"position":[[9,1]]},"7":{"position":[[9,1]]},"9":{"position":[[9,1]]}}}],["日志",{"_index":596,"t":{"136":{"position":[[68,2]]},"172":{"position":[[138,2]]},"180":{"position":[[5,2]]},"224":{"position":[[23,2],[58,2]]},"229":{"position":[[0,2]]},"277":{"position":[[138,2]]},"303":{"position":[[84,2],[91,2],[97,2]]},"375":{"position":[[293,2],[310,2]]},"397":{"position":[[13,2],[20,2],[26,2]]},"401":{"position":[[8,2],[29,2],[131,2],[140,2],[165,2],[464,2],[488,2],[509,2]]},"403":{"position":[[23,2]]},"405":{"position":[[16,2],[162,2],[232,2],[268,2],[499,2]]},"407":{"position":[[662,2]]},"409":{"position":[[22,2],[69,2],[153,2],[227,2],[355,2],[421,2],[635,2]]},"452":{"position":[[3,2],[126,2],[361,2]]},"465":{"position":[[2,2]]},"582":{"position":[[68,2]]},"625":{"position":[[138,2]]},"633":{"position":[[5,2]]},"686":{"position":[[23,2],[58,2]]},"691":{"position":[[0,2]]},"779":{"position":[[84,2],[91,2],[97,2]]},"803":{"position":[[138,2]]},"829":{"position":[[13,2],[20,2],[26,2]]},"833":{"position":[[8,2],[29,2],[131,2],[140,2],[165,2],[464,2],[488,2],[509,2]]},"835":{"position":[[23,2]]},"837":{"position":[[16,2],[162,2],[232,2],[268,2],[499,2]]},"839":{"position":[[662,2]]},"841":{"position":[[22,2],[69,2],[153,2],[227,2],[355,2],[421,2],[635,2]]},"896":{"position":[[3,2],[126,2],[361,2]]},"909":{"position":[[2,2]]},"954":{"position":[[71,2]]},"1220":{"position":[[121,2]]}}}],["日新月异",{"_index":307,"t":{"21":{"position":[[349,4]]}}}],["日期",{"_index":1467,"t":{"1044":{"position":[[353,2]]}}}],["旧",{"_index":796,"t":{"215":{"position":[[10,1]]},"227":{"position":[[241,1],[432,1]]},"454":{"position":[[16,1]]},"463":{"position":[[25,1]]},"677":{"position":[[10,1]]},"689":{"position":[[241,1],[432,1]]},"898":{"position":[[16,1]]},"907":{"position":[[25,1]]},"1200":{"position":[[136,1]]},"1205":{"position":[[163,1]]},"1216":{"position":[[174,1]]}}}],["旧版",{"_index":739,"t":{"176":{"position":[[69,2]]},"629":{"position":[[69,2]]}}}],["旧版本",{"_index":1518,"t":{"1073":{"position":[[31,3]]}}}],["旨在",{"_index":1422,"t":{"977":{"position":[[158,2]]}}}],["时",{"_index":397,"t":{"23":{"position":[[128,1]]},"155":{"position":[[53,1]]},"172":{"position":[[7,1]]},"237":{"position":[[17,1],[38,1]]},"305":{"position":[[89,1]]},"329":{"position":[[38,1],[176,1]]},"339":{"position":[[625,1]]},"368":{"position":[[13,1],[30,1],[47,1]]},"370":{"position":[[35,1]]},"407":{"position":[[10,1]]},"409":{"position":[[424,1]]},"435":{"position":[[39,1]]},"470":{"position":[[75,1]]},"473":{"position":[[36,1],[51,1]]},"491":{"position":[[5,1],[24,1]]},"533":{"position":[[36,1]]},"537":{"position":[[472,1],[509,1]]},"539":{"position":[[22,1],[462,1]]},"555":{"position":[[30,1]]},"625":{"position":[[7,1]]},"644":{"position":[[53,1]]},"699":{"position":[[17,1],[38,1]]},"741":{"position":[[38,1],[176,1]]},"751":{"position":[[625,1]]},"781":{"position":[[89,1]]},"839":{"position":[[10,1]]},"841":{"position":[[424,1]]},"877":{"position":[[13,1],[30,1],[47,1]]},"879":{"position":[[35,1]]},"924":{"position":[[9,1]]},"937":{"position":[[483,1]]},"957":{"position":[[25,1]]},"963":{"position":[[314,1]]},"974":{"position":[[7,1],[73,1]]},"1057":{"position":[[12,1],[32,1]]},"1064":{"position":[[443,1],[1012,1],[1098,1]]},"1067":{"position":[[10,1]]},"1071":{"position":[[13,1]]},"1124":{"position":[[68,1]]},"1151":{"position":[[369,1],[458,1]]},"1157":{"position":[[122,1],[162,1],[172,1]]},"1170":{"position":[[2,1],[49,1]]},"1216":{"position":[[152,1]]}}}],["时代",{"_index":52,"t":{"13":{"position":[[105,2],[159,2]]},"17":{"position":[[3,2]]}}}],["时会",{"_index":1216,"t":{"480":{"position":[[34,2],[58,2]]}}}],["时间",{"_index":645,"t":{"155":{"position":[[60,2]]},"158":{"position":[[346,2]]},"174":{"position":[[13,2]]},"224":{"position":[[26,2]]},"533":{"position":[[735,2]]},"557":{"position":[[388,2],[469,2],[516,2]]},"627":{"position":[[13,2]]},"644":{"position":[[60,2]]},"647":{"position":[[346,2]]},"686":{"position":[[26,2]]},"1044":{"position":[[355,2]]},"1157":{"position":[[180,2]]},"1191":{"position":[[7,2]]},"1192":{"position":[[7,2]]}}}],["明代",{"_index":40,"t":{"13":{"position":[[80,2]]}}}],["明文",{"_index":1151,"t":{"422":{"position":[[32,2]]},"435":{"position":[[24,2]]}}}],["明显",{"_index":1287,"t":{"553":{"position":[[340,2]]}}}],["明确",{"_index":1064,"t":{"358":{"position":[[756,2]]},"867":{"position":[[756,2]]}}}],["易",{"_index":983,"t":{"336":{"position":[[1275,1]]},"345":{"position":[[3035,1]]},"748":{"position":[[1275,1]]},"757":{"position":[[3035,1]]}}}],["易于",{"_index":563,"t":{"129":{"position":[[67,2]]},"170":{"position":[[81,2]]},"184":{"position":[[1939,2]]},"351":{"position":[[47,2]]},"575":{"position":[[67,2]]},"623":{"position":[[81,2]]},"637":{"position":[[1939,2]]},"860":{"position":[[47,2]]}}}],["易变",{"_index":728,"t":{"174":{"position":[[4,2]]},"627":{"position":[[4,2]]}}}],["易用",{"_index":1453,"t":{"1033":{"position":[[15,2]]}}}],["映射",{"_index":1405,"t":{"968":{"position":[[30,2]]},"1044":{"position":[[76,2],[97,2]]},"1098":{"position":[[11,2]]},"1115":{"position":[[11,2]]},"1148":{"position":[[409,2],[429,2],[444,2],[466,2]]}}}],["是否",{"_index":820,"t":{"247":{"position":[[268,2]]},"336":{"position":[[178,2]]},"339":{"position":[[91,2],[180,2],[630,2]]},"375":{"position":[[220,2],[402,2]]},"401":{"position":[[212,2]]},"429":{"position":[[443,2]]},"433":{"position":[[33,2]]},"435":{"position":[[56,2]]},"437":{"position":[[99,2]]},"467":{"position":[[3,2]]},"709":{"position":[[268,2]]},"748":{"position":[[178,2]]},"751":{"position":[[91,2],[180,2],[630,2]]},"833":{"position":[[212,2]]},"911":{"position":[[3,2]]},"1046":{"position":[[17,2]]},"1151":{"position":[[257,2]]},"1188":{"position":[[5,2]]}}}],["是否是",{"_index":1099,"t":{"375":{"position":[[463,3]]}}}],["显",{"_index":1295,"t":{"557":{"position":[[21,1]]}}}],["显现",{"_index":240,"t":{"21":{"position":[[111,2]]}}}],["显示",{"_index":1100,"t":{"375":{"position":[[476,2]]},"559":{"position":[[626,2]]},"1142":{"position":[[154,2]]},"1146":{"position":[[43,2],[68,2]]},"1148":{"position":[[91,2]]},"1188":{"position":[[109,2]]}}}],["显著",{"_index":1337,"t":{"570":{"position":[[216,2]]}}}],["普通",{"_index":55,"t":{"13":{"position":[[114,2]]},"918":{"position":[[6,2]]},"952":{"position":[[27,2]]},"972":{"position":[[22,2]]},"1157":{"position":[[38,2],[62,2]]}}}],["普通人",{"_index":29,"t":{"13":{"position":[[50,3]]},"21":{"position":[[461,3]]}}}],["智",{"_index":228,"t":{"21":{"position":[[68,1]]}}}],["智慧",{"_index":86,"t":{"13":{"position":[[218,2]]}}}],["暂停",{"_index":1312,"t":{"557":{"position":[[467,2],[514,2]]},"1157":{"position":[[126,2]]}}}],["暴力",{"_index":1179,"t":{"435":{"position":[[92,2]]}}}],["暴力破解",{"_index":1176,"t":{"435":{"position":[[69,4]]}}}],["暴露",{"_index":1444,"t":{"1010":{"position":[[2344,2]]}}}],["更",{"_index":80,"t":{"13":{"position":[[204,1]]},"17":{"position":[[104,1]]},"21":{"position":[[26,1],[403,1]]},"23":{"position":[[86,1]]},"38":{"position":[[226,1]]},"42":{"position":[[158,1]]},"129":{"position":[[134,1]]},"142":{"position":[[72,1]]},"281":{"position":[[61,1]]},"291":{"position":[[3,1]]},"294":{"position":[[496,1]]},"305":{"position":[[107,1]]},"336":{"position":[[1284,1]]},"345":{"position":[[129,1]]},"351":{"position":[[46,1],[66,1],[87,1]]},"415":{"position":[[310,1],[313,1]]},"427":{"position":[[487,1]]},"491":{"position":[[177,1]]},"529":{"position":[[40,1],[55,1]]},"553":{"position":[[177,1],[222,1]]},"557":{"position":[[217,1]]},"575":{"position":[[134,1]]},"588":{"position":[[72,1]]},"748":{"position":[[1284,1]]},"757":{"position":[[129,1]]},"767":{"position":[[3,1]]},"770":{"position":[[496,1]]},"781":{"position":[[107,1]]},"807":{"position":[[61,1]]},"847":{"position":[[310,1],[313,1]]},"860":{"position":[[46,1],[66,1],[87,1]]},"1013":{"position":[[42,1]]},"1055":{"position":[[37,1],[72,1]]},"1069":{"position":[[59,1]]},"1075":{"position":[[88,1]]},"1077":{"position":[[85,1],[114,1]]},"1080":{"position":[[84,1]]},"1085":{"position":[[84,1]]},"1197":{"position":[[77,1]]}}}],["更加",{"_index":77,"t":{"13":{"position":[[196,2]]},"928":{"position":[[49,2]]}}}],["更好",{"_index":414,"t":{"26":{"position":[[70,2]]},"258":{"position":[[130,2]]},"784":{"position":[[130,2]]},"1100":{"position":[[94,2]]},"1117":{"position":[[94,2]]}}}],["更弱",{"_index":913,"t":{"296":{"position":[[484,2]]},"772":{"position":[[484,2]]}}}],["更慢",{"_index":1163,"t":{"427":{"position":[[491,2]]}}}],["更改",{"_index":1583,"t":{"1155":{"position":[[13,2],[134,2]]}}}],["更新",{"_index":754,"t":{"184":{"position":[[1914,2]]},"212":{"position":[[3,2]]},"219":{"position":[[22,2]]},"224":{"position":[[5,2]]},"231":{"position":[[22,2]]},"433":{"position":[[37,2]]},"435":{"position":[[49,2]]},"637":{"position":[[1914,2]]},"674":{"position":[[3,2]]},"681":{"position":[[22,2]]},"686":{"position":[[5,2]]},"693":{"position":[[22,2]]},"1080":{"position":[[99,2]]},"1085":{"position":[[99,2]]}}}],["替代",{"_index":598,"t":{"142":{"position":[[8,2]]},"286":{"position":[[14,2]]},"588":{"position":[[8,2]]},"762":{"position":[[14,2]]},"974":{"position":[[49,2]]},"1080":{"position":[[77,2]]},"1085":{"position":[[77,2]]},"1100":{"position":[[130,2],[205,2]]},"1117":{"position":[[130,2],[205,2]]},"1218":{"position":[[161,2]]}}}],["替换",{"_index":485,"t":{"53":{"position":[[4,2],[22,2]]},"67":{"position":[[0,2],[21,2]]},"71":{"position":[[13,2]]},"129":{"position":[[69,2]]},"170":{"position":[[978,2]]},"215":{"position":[[1446,2],[2086,2]]},"219":{"position":[[1,2],[13,2]]},"227":{"position":[[20,2],[317,2]]},"231":{"position":[[1,2],[13,2]]},"237":{"position":[[15,2]]},"284":{"position":[[2,2],[109,2]]},"286":{"position":[[1,2]]},"289":{"position":[[349,2]]},"303":{"position":[[32,2],[57,2],[81,2],[107,2]]},"305":{"position":[[8,2],[138,2]]},"331":{"position":[[26,2]]},"415":{"position":[[162,2],[211,2]]},"419":{"position":[[63,2]]},"575":{"position":[[69,2]]},"623":{"position":[[978,2]]},"677":{"position":[[1446,2],[2086,2]]},"681":{"position":[[1,2],[13,2]]},"689":{"position":[[20,2],[317,2]]},"693":{"position":[[1,2],[13,2]]},"699":{"position":[[15,2]]},"743":{"position":[[26,2]]},"760":{"position":[[2,2],[109,2]]},"762":{"position":[[1,2]]},"765":{"position":[[349,2]]},"779":{"position":[[32,2],[57,2],[81,2],[107,2]]},"781":{"position":[[8,2],[138,2]]},"847":{"position":[[162,2],[211,2]]},"851":{"position":[[63,2]]},"946":{"position":[[26,2]]},"952":{"position":[[127,2]]},"1182":{"position":[[6,2]]}}}],["最后",{"_index":448,"t":{"33":{"position":[[207,2]]}}}],["最大",{"_index":1319,"t":{"559":{"position":[[163,2],[186,2]]},"1044":{"position":[[100,2]]}}}],["最小",{"_index":701,"t":{"170":{"position":[[180,2]]},"623":{"position":[[180,2]]},"1044":{"position":[[79,2]]}}}],["最小化",{"_index":544,"t":{"126":{"position":[[29,3]]},"572":{"position":[[29,3]]}}}],["最少",{"_index":1138,"t":{"417":{"position":[[53,2],[90,2]]},"849":{"position":[[53,2],[90,2]]}}}],["最早",{"_index":1543,"t":{"1126":{"position":[[39,2]]}}}],["最终",{"_index":438,"t":{"33":{"position":[[141,2]]},"539":{"position":[[399,2]]},"547":{"position":[[270,2]]}}}],["最近",{"_index":1313,"t":{"557":{"position":[[510,2]]}}}],["月",{"_index":2,"t":{"5":{"position":[[6,1]]},"7":{"position":[[6,1]]},"9":{"position":[[6,1]]}}}],["有些",{"_index":852,"t":{"263":{"position":[[363,2],[370,2]]},"789":{"position":[[363,2],[370,2]]},"1064":{"position":[[52,2]]}}}],["有人",{"_index":225,"t":{"21":{"position":[[59,2]]}}}],["有关",{"_index":1488,"t":{"1064":{"position":[[426,2]]}}}],["有助于",{"_index":473,"t":{"42":{"position":[[153,3]]},"413":{"position":[[25,3]]},"845":{"position":[[25,3]]}}}],["有效",{"_index":1177,"t":{"435":{"position":[[88,2]]}}}],["有用",{"_index":1528,"t":{"1077":{"position":[[53,2]]}}}],["有益",{"_index":206,"t":{"19":{"position":[[92,2]]}}}],["朋友",{"_index":1140,"t":{"417":{"position":[[101,2]]},"849":{"position":[[101,2]]}}}],["服务",{"_index":518,"t":{"110":{"position":[[21,2],[52,2]]},"112":{"position":[[7,2]]},"115":{"position":[[0,2],[184,2],[269,2],[314,2]]},"119":{"position":[[55,2]]},"126":{"position":[[41,2]]},"129":{"position":[[64,2],[86,2]]},"131":{"position":[[14,2],[41,2]]},"134":{"position":[[75,2],[219,2],[341,2],[566,2],[811,2],[998,2],[1280,2]]},"136":{"position":[[70,2]]},"138":{"position":[[147,2],[278,2],[455,2],[530,2]]},"142":{"position":[[33,2],[47,2]]},"144":{"position":[[36,2]]},"147":{"position":[[0,2],[9,2]]},"150":{"position":[[2,2],[7,2],[55,2],[338,2],[405,2],[1187,2],[1198,2],[1225,2],[1242,2],[1622,2],[1836,2]]},"155":{"position":[[0,2],[47,2]]},"158":{"position":[[210,2],[365,2],[438,2],[593,2],[610,2],[975,2],[1161,2]]},"164":{"position":[[26,2]]},"170":{"position":[[624,2]]},"191":{"position":[[2,2]]},"194":{"position":[[2,2],[13,2],[56,2],[195,2],[254,2],[420,2],[786,2],[791,2]]},"196":{"position":[[0,2]]},"201":{"position":[[0,2]]},"205":{"position":[[55,2]]},"207":{"position":[[0,2]]},"212":{"position":[[0,2],[14,2]]},"215":{"position":[[11,2],[75,2],[1448,2],[2088,2],[2213,2]]},"219":{"position":[[3,2],[15,2]]},"224":{"position":[[2,2],[10,2],[30,2],[79,2]]},"227":{"position":[[22,2],[242,2],[319,2],[428,2],[433,2],[716,2],[1082,2],[1087,2]]},"229":{"position":[[2,2],[891,2]]},"231":{"position":[[3,2],[15,2]]},"235":{"position":[[0,2]]},"237":{"position":[[0,2],[36,2],[67,2],[81,2]]},"247":{"position":[[14,2],[266,2],[289,2]]},"329":{"position":[[395,2]]},"358":{"position":[[323,2]]},"572":{"position":[[41,2]]},"575":{"position":[[64,2],[86,2]]},"577":{"position":[[14,2],[41,2]]},"580":{"position":[[75,2],[219,2],[341,2],[566,2],[811,2],[998,2],[1280,2]]},"582":{"position":[[70,2]]},"584":{"position":[[147,2],[278,2],[455,2],[530,2]]},"588":{"position":[[33,2],[47,2]]},"590":{"position":[[36,2]]},"592":{"position":[[21,2],[52,2]]},"594":{"position":[[7,2]]},"597":{"position":[[0,2],[184,2],[269,2],[314,2]]},"601":{"position":[[55,2]]},"609":{"position":[[0,2]]},"613":{"position":[[55,2]]},"615":{"position":[[0,2]]},"623":{"position":[[624,2]]},"644":{"position":[[0,2],[47,2]]},"647":{"position":[[210,2],[365,2],[438,2],[593,2],[610,2],[975,2],[1161,2]]},"653":{"position":[[26,2]]},"656":{"position":[[0,2],[9,2]]},"659":{"position":[[2,2],[7,2],[55,2],[338,2],[405,2],[1187,2],[1198,2],[1225,2],[1242,2],[1622,2],[1836,2]]},"664":{"position":[[2,2]]},"667":{"position":[[2,2],[13,2],[56,2],[195,2],[254,2],[420,2],[786,2],[791,2]]},"669":{"position":[[0,2]]},"674":{"position":[[0,2],[14,2]]},"677":{"position":[[11,2],[75,2],[1448,2],[2088,2],[2213,2]]},"681":{"position":[[3,2],[15,2]]},"686":{"position":[[2,2],[10,2],[30,2],[79,2]]},"689":{"position":[[22,2],[242,2],[319,2],[428,2],[433,2],[716,2],[1082,2],[1087,2]]},"691":{"position":[[2,2],[891,2]]},"693":{"position":[[3,2],[15,2]]},"697":{"position":[[0,2]]},"699":{"position":[[0,2],[36,2],[67,2],[81,2]]},"709":{"position":[[14,2],[266,2],[289,2]]},"741":{"position":[[395,2]]},"867":{"position":[[323,2]]},"1064":{"position":[[597,2]]},"1200":{"position":[[866,2],[1021,2]]},"1205":{"position":[[1044,2],[1203,2]]},"1218":{"position":[[143,2],[155,2],[176,2],[219,2]]},"1220":{"position":[[18,2],[178,2],[208,2]]}}}],["服务器",{"_index":1630,"t":{"1200":{"position":[[779,3],[1225,3],[1285,3]]},"1205":{"position":[[891,3]]},"1214":{"position":[[303,3]]}}}],["服务器返回",{"_index":1115,"t":{"407":{"position":[[664,5]]},"839":{"position":[[664,5]]}}}],["服务端",{"_index":1015,"t":{"343":{"position":[[89,3]]},"755":{"position":[[89,3]]}}}],["期望",{"_index":878,"t":{"284":{"position":[[129,2]]},"760":{"position":[[129,2]]}}}],["未",{"_index":629,"t":{"150":{"position":[[1194,1]]},"395":{"position":[[420,1]]},"557":{"position":[[35,1],[107,1]]},"659":{"position":[[1194,1]]},"827":{"position":[[420,1]]},"1151":{"position":[[261,1],[307,1]]}}}],["未必",{"_index":208,"t":{"19":{"position":[[101,2]]}}}],["未来",{"_index":269,"t":{"21":{"position":[[210,2],[341,2]]},"166":{"position":[[53,2]]},"180":{"position":[[19,2]]},"186":{"position":[[9,2]]},"399":{"position":[[11,2]]},"405":{"position":[[123,2]]},"407":{"position":[[0,2]]},"409":{"position":[[446,2]]},"619":{"position":[[53,2]]},"633":{"position":[[19,2]]},"639":{"position":[[9,2]]},"831":{"position":[[11,2]]},"837":{"position":[[123,2]]},"839":{"position":[[0,2]]},"841":{"position":[[446,2]]},"1100":{"position":[[97,2]]},"1117":{"position":[[97,2]]}}}],["未注册",{"_index":1108,"t":{"390":{"position":[[405,3]]},"822":{"position":[[405,3]]}}}],["未知",{"_index":1114,"t":{"405":{"position":[[496,2]]},"837":{"position":[[496,2]]}}}],["未能",{"_index":300,"t":{"21":{"position":[[322,2]]}}}],["本",{"_index":523,"t":{"110":{"position":[[37,1]]},"592":{"position":[[37,1]]},"977":{"position":[[153,1]]},"1218":{"position":[[182,1]]},"1220":{"position":[[126,1]]}}}],["本地",{"_index":923,"t":{"303":{"position":[[5,2]]},"779":{"position":[[5,2]]},"1197":{"position":[[73,2]]},"1220":{"position":[[27,2]]}}}],["本能",{"_index":354,"t":{"21":{"position":[[576,2]]}}}],["本身",{"_index":1525,"t":{"1075":{"position":[[226,2]]}}}],["机",{"_index":1647,"t":{"1218":{"position":[[183,1]]}}}],["机制",{"_index":579,"t":{"131":{"position":[[89,2]]},"142":{"position":[[51,2]]},"155":{"position":[[44,2]]},"166":{"position":[[23,2]]},"176":{"position":[[62,2]]},"281":{"position":[[43,2]]},"495":{"position":[[85,2]]},"570":{"position":[[200,2]]},"577":{"position":[[89,2]]},"588":{"position":[[51,2]]},"619":{"position":[[23,2]]},"629":{"position":[[62,2]]},"644":{"position":[[44,2]]},"807":{"position":[[43,2]]},"1197":{"position":[[38,2]]}}}],["机器",{"_index":1548,"t":{"1128":{"position":[[53,2]]}}}],["权利",{"_index":135,"t":{"17":{"position":[[67,2]]}}}],["权限",{"_index":1519,"t":{"1075":{"position":[[0,2],[19,2]]},"1197":{"position":[[93,2],[135,2]]},"1200":{"position":[[397,2],[469,2]]},"1205":{"position":[[424,2],[492,2]]},"1216":{"position":[[68,2],[241,2],[256,2]]},"1220":{"position":[[93,2]]}}}],["李自成",{"_index":30,"t":{"13":{"position":[[54,3]]}}}],["条",{"_index":1123,"t":{"409":{"position":[[634,1]]},"841":{"position":[[634,1]]}}}],["条件",{"_index":757,"t":{"184":{"position":[[1935,2]]},"296":{"position":[[397,2],[479,2]]},"305":{"position":[[57,2]]},"470":{"position":[[24,2]]},"473":{"position":[[0,2],[31,2],[45,2],[71,2]]},"487":{"position":[[15,2],[85,2]]},"491":{"position":[[41,2],[61,2],[195,2]]},"493":{"position":[[2,2]]},"539":{"position":[[44,2],[467,2]]},"541":{"position":[[17,2],[216,2],[553,2]]},"553":{"position":[[28,2]]},"637":{"position":[[1935,2]]},"772":{"position":[[397,2],[479,2]]},"781":{"position":[[57,2]]},"934":{"position":[[10,2],[126,2]]},"1144":{"position":[[133,2]]}}}],["来看",{"_index":336,"t":{"21":{"position":[[492,2]]}}}],["来说",{"_index":1500,"t":{"1064":{"position":[[775,2]]}}}],["松",{"_index":704,"t":{"170":{"position":[[201,1]]},"623":{"position":[[201,1]]}}}],["极端",{"_index":180,"t":{"17":{"position":[[224,2]]}}}],["构建",{"_index":774,"t":{"188":{"position":[[103,2]]},"281":{"position":[[59,2]]},"561":{"position":[[4,2]]},"568":{"position":[[79,2]]},"570":{"position":[[177,2]]},"641":{"position":[[103,2]]},"807":{"position":[[59,2]]},"1035":{"position":[[57,2]]},"1071":{"position":[[1,2]]},"1077":{"position":[[44,2]]}}}],["构造",{"_index":953,"t":{"318":{"position":[[0,2]]},"730":{"position":[[0,2]]},"1212":{"position":[[117,2]]}}}],["构造函数",{"_index":697,"t":{"170":{"position":[[146,4]]},"310":{"position":[[51,4]]},"333":{"position":[[60,4]]},"623":{"position":[[146,4]]},"722":{"position":[[51,4]]},"745":{"position":[[60,4]]}}}],["枚举",{"_index":617,"t":{"150":{"position":[[91,2],[100,2]]},"659":{"position":[[91,2],[100,2]]}}}],["架构",{"_index":540,"t":{"126":{"position":[[16,2]]},"142":{"position":[[40,2]]},"333":{"position":[[121,2]]},"467":{"position":[[79,2]]},"572":{"position":[[16,2]]},"588":{"position":[[40,2]]},"745":{"position":[[121,2]]},"911":{"position":[[79,2]]},"1148":{"position":[[66,2],[405,2]]},"1218":{"position":[[145,2]]}}}],["架构设计",{"_index":665,"t":{"166":{"position":[[33,4]]},"345":{"position":[[496,4]]},"619":{"position":[[33,4]]},"757":{"position":[[496,4]]}}}],["某个",{"_index":1212,"t":{"473":{"position":[[29,2]]},"541":{"position":[[15,2],[37,2]]},"543":{"position":[[12,2]]},"1069":{"position":[[23,2]]}}}],["某些",{"_index":186,"t":{"19":{"position":[[9,2]]},"1064":{"position":[[365,2],[635,2]]},"1075":{"position":[[146,2]]}}}],["某种",{"_index":1591,"t":{"1157":{"position":[[158,2]]}}}],["查找",{"_index":1638,"t":{"1216":{"position":[[208,2]]}}}],["查看",{"_index":535,"t":{"121":{"position":[[176,2]]},"123":{"position":[[72,2]]},"144":{"position":[[130,2]]},"152":{"position":[[482,2]]},"164":{"position":[[492,2]]},"198":{"position":[[591,2]]},"209":{"position":[[295,2]]},"221":{"position":[[997,2]]},"233":{"position":[[1407,2]]},"247":{"position":[[264,2]]},"255":{"position":[[993,2]]},"375":{"position":[[210,2],[282,2],[313,2]]},"590":{"position":[[130,2]]},"603":{"position":[[176,2]]},"605":{"position":[[72,2]]},"617":{"position":[[295,2]]},"653":{"position":[[492,2]]},"661":{"position":[[482,2]]},"671":{"position":[[591,2]]},"683":{"position":[[997,2]]},"695":{"position":[[1407,2]]},"709":{"position":[[264,2]]},"717":{"position":[[993,2]]},"1142":{"position":[[135,2]]},"1144":{"position":[[163,2]]},"1146":{"position":[[126,2]]},"1148":{"position":[[23,2],[52,2],[260,2]]},"1151":{"position":[[23,2]]},"1153":{"position":[[22,2]]},"1188":{"position":[[3,2]]},"1191":{"position":[[37,2]]}}}],["查询",{"_index":985,"t":{"336":{"position":[[1290,2]]},"748":{"position":[[1290,2]]},"942":{"position":[[34,2]]},"1188":{"position":[[17,2]]},"1192":{"position":[[579,2]]}}}],["标准",{"_index":648,"t":{"158":{"position":[[2,2],[51,2],[393,2]]},"470":{"position":[[15,2]]},"511":{"position":[[25,2]]},"523":{"position":[[90,2],[118,2],[123,2]]},"555":{"position":[[19,2]]},"647":{"position":[[2,2],[51,2],[393,2]]},"937":{"position":[[7,2]]},"952":{"position":[[129,2]]},"977":{"position":[[88,2]]},"998":{"position":[[17,2]]},"1082":{"position":[[10,2]]},"1087":{"position":[[10,2]]},"1102":{"position":[[126,2]]},"1119":{"position":[[126,2]]},"1220":{"position":[[39,2]]}}}],["标准化",{"_index":636,"t":{"155":{"position":[[14,3]]},"644":{"position":[[14,3]]}}}],["标志",{"_index":1452,"t":{"1026":{"position":[[116,2]]},"1148":{"position":[[238,2]]}}}],["标签",{"_index":1395,"t":{"957":{"position":[[120,2]]},"968":{"position":[[9,2],[277,2]]},"1038":{"position":[[37,2]]},"1044":{"position":[[0,2]]}}}],["标记",{"_index":1580,"t":{"1155":{"position":[[2,2],[60,2],[118,2]]}}}],["标识",{"_index":1620,"t":{"1197":{"position":[[66,2]]}}}],["栈",{"_index":1317,"t":{"559":{"position":[[6,1]]},"1142":{"position":[[158,1]]},"1148":{"position":[[262,1],[362,1]]},"1197":{"position":[[86,1]]},"1218":{"position":[[234,1]]}}}],["树",{"_index":1526,"t":{"1077":{"position":[[29,1]]}}}],["校验",{"_index":1363,"t":{"926":{"position":[[78,2],[220,2]]},"977":{"position":[[136,2]]},"984":{"position":[[99,2],[178,2]]},"1052":{"position":[[34,2]]}}}],["核心",{"_index":542,"t":{"126":{"position":[[25,2]]},"134":{"position":[[189,2]]},"144":{"position":[[4,2]]},"166":{"position":[[84,2]]},"170":{"position":[[175,2]]},"188":{"position":[[122,2]]},"305":{"position":[[4,2]]},"333":{"position":[[4,2]]},"345":{"position":[[166,2]]},"401":{"position":[[36,2]]},"411":{"position":[[4,2]]},"413":{"position":[[14,2]]},"572":{"position":[[25,2]]},"580":{"position":[[189,2]]},"590":{"position":[[4,2]]},"619":{"position":[[84,2]]},"623":{"position":[[175,2]]},"641":{"position":[[122,2]]},"745":{"position":[[4,2]]},"757":{"position":[[166,2]]},"781":{"position":[[4,2]]},"833":{"position":[[36,2]]},"843":{"position":[[4,2]]},"845":{"position":[[14,2]]},"920":{"position":[[18,2]]},"957":{"position":[[170,2]]},"959":{"position":[[18,2]]},"1064":{"position":[[673,2]]}}}],["核心思想",{"_index":541,"t":{"126":{"position":[[19,4]]},"258":{"position":[[82,4]]},"284":{"position":[[78,4]]},"308":{"position":[[81,4]]},"348":{"position":[[82,4]]},"378":{"position":[[68,4]]},"572":{"position":[[19,4]]},"720":{"position":[[81,4]]},"760":{"position":[[78,4]]},"784":{"position":[[82,4]]},"810":{"position":[[68,4]]},"857":{"position":[[82,4]]}}}],["根",{"_index":1509,"t":{"1067":{"position":[[53,1]]}}}],["根基",{"_index":351,"t":{"21":{"position":[[561,2]]}}}],["根据",{"_index":657,"t":{"160":{"position":[[0,2]]},"184":{"position":[[2027,2]]},"405":{"position":[[262,2]]},"637":{"position":[[2027,2]]},"649":{"position":[[0,2]]},"837":{"position":[[262,2]]},"954":{"position":[[121,2]]},"1077":{"position":[[99,2]]},"1148":{"position":[[396,2]]}}}],["根目录",{"_index":1475,"t":{"1055":{"position":[[31,3],[58,3]]},"1057":{"position":[[24,3],[46,3],[118,3],[144,3]]},"1060":{"position":[[36,3]]},"1064":{"position":[[4,3],[1117,3],[1448,3]]}}}],["格式",{"_index":649,"t":{"158":{"position":[[6,2],[53,2]]},"176":{"position":[[7,2]]},"296":{"position":[[465,2]]},"437":{"position":[[138,2]]},"629":{"position":[[7,2]]},"647":{"position":[[6,2],[53,2]]},"772":{"position":[[465,2]]},"1044":{"position":[[34,2],[350,2],[378,2]]}}}],["框架",{"_index":959,"t":{"329":{"position":[[11,2],[286,2]]},"333":{"position":[[82,2]]},"741":{"position":[[11,2],[286,2]]},"745":{"position":[[82,2]]},"957":{"position":[[156,2]]},"1052":{"position":[[56,2]]},"1220":{"position":[[47,2]]}}}],["检查",{"_index":997,"t":{"339":{"position":[[413,2],[626,2]]},"437":{"position":[[90,2]]},"473":{"position":[[69,2]]},"487":{"position":[[13,2]]},"491":{"position":[[43,2],[59,2]]},"493":{"position":[[4,2]]},"751":{"position":[[413,2],[626,2]]},"926":{"position":[[83,2]]},"957":{"position":[[178,2]]},"1216":{"position":[[58,2]]}}}],["检查和",{"_index":1393,"t":{"957":{"position":[[26,3]]}}}],["检测",{"_index":814,"t":{"237":{"position":[[40,2]]},"435":{"position":[[52,2]]},"699":{"position":[[40,2]]}}}],["概念",{"_index":1032,"t":{"345":{"position":[[168,2]]},"757":{"position":[[168,2]]}}}],["模块",{"_index":570,"t":{"129":{"position":[[106,2]]},"131":{"position":[[47,2]]},"170":{"position":[[3,2]]},"308":{"position":[[90,2],[99,2]]},"313":{"position":[[5,2],[13,2]]},"315":{"position":[[67,2],[344,2]]},"333":{"position":[[38,2],[49,2],[135,2],[144,2]]},"348":{"position":[[93,2],[119,2]]},"378":{"position":[[82,2]]},"415":{"position":[[116,2],[367,2],[375,2]]},"561":{"position":[[2,2]]},"575":{"position":[[106,2]]},"577":{"position":[[47,2]]},"623":{"position":[[3,2]]},"720":{"position":[[90,2],[99,2]]},"725":{"position":[[5,2],[13,2]]},"727":{"position":[[67,2],[344,2]]},"745":{"position":[[38,2],[49,2],[135,2],[144,2]]},"810":{"position":[[82,2]]},"847":{"position":[[116,2],[367,2],[375,2]]},"857":{"position":[[93,2],[119,2]]}}}],["模块化",{"_index":453,"t":{"38":{"position":[[192,3]]},"129":{"position":[[40,3]]},"575":{"position":[[40,3]]}}}],["模型",{"_index":741,"t":{"178":{"position":[[5,2]]},"184":{"position":[[1986,2]]},"343":{"position":[[94,2]]},"535":{"position":[[12,2]]},"631":{"position":[[5,2]]},"637":{"position":[[1986,2]]},"755":{"position":[[94,2]]}}}],["模式",{"_index":496,"t":{"67":{"position":[[19,2]]},"172":{"position":[[53,2]]},"184":{"position":[[7611,2]]},"345":{"position":[[15,2],[20,2],[441,2]]},"411":{"position":[[41,2],[47,2]]},"440":{"position":[[2,2]]},"497":{"position":[[50,2]]},"553":{"position":[[105,2]]},"625":{"position":[[53,2]]},"637":{"position":[[7611,2]]},"757":{"position":[[15,2],[20,2],[441,2]]},"843":{"position":[[41,2],[47,2]]},"884":{"position":[[2,2]]},"1026":{"position":[[160,2]]}}}],["模式匹配",{"_index":499,"t":{"71":{"position":[[28,4]]}}}],["模拟",{"_index":532,"t":{"115":{"position":[[312,2]]},"134":{"position":[[1193,2]]},"136":{"position":[[751,2]]},"160":{"position":[[184,2]]},"207":{"position":[[146,2]]},"279":{"position":[[50,2]]},"336":{"position":[[982,2]]},"343":{"position":[[1065,2],[1783,2],[1874,2]]},"580":{"position":[[1193,2]]},"582":{"position":[[751,2]]},"597":{"position":[[312,2]]},"615":{"position":[[146,2]]},"649":{"position":[[184,2]]},"748":{"position":[[982,2]]},"755":{"position":[[1065,2],[1783,2],[1874,2]]},"805":{"position":[[50,2]]},"1194":{"position":[[623,2]]}}}],["次数",{"_index":1183,"t":{"437":{"position":[[160,2]]},"557":{"position":[[428,2]]}}}],["欢迎",{"_index":954,"t":{"320":{"position":[[203,2]]},"356":{"position":[[271,2]]},"732":{"position":[[203,2]]},"865":{"position":[[271,2]]},"1031":{"position":[[282,2]]}}}],["歌唱",{"_index":891,"t":{"289":{"position":[[186,2]]},"291":{"position":[[262,2]]},"765":{"position":[[186,2]]},"767":{"position":[[262,2]]}}}],["正在",{"_index":1278,"t":{"551":{"position":[[182,2]]},"1194":{"position":[[822,2]]}}}],["正常",{"_index":1025,"t":{"343":{"position":[[1785,2],[2130,2]]},"755":{"position":[[1785,2],[2130,2]]},"854":{"position":[[41,2]]},"1064":{"position":[[503,2],[1161,2]]},"1075":{"position":[[208,2]]},"1136":{"position":[[60,2]]}}}],["正是",{"_index":356,"t":{"21":{"position":[[581,2]]}}}],["正确",{"_index":917,"t":{"299":{"position":[[114,2]]},"497":{"position":[[46,2],[56,2]]},"504":{"position":[[118,2]]},"775":{"position":[[114,2]]},"1064":{"position":[[322,2]]},"1148":{"position":[[412,2]]},"1220":{"position":[[101,2]]}}}],["此时",{"_index":1403,"t":{"963":{"position":[[147,2],[224,2]]},"1064":{"position":[[1425,2]]},"1151":{"position":[[386,2]]},"1191":{"position":[[17,2],[362,2]]}}}],["步入",{"_index":122,"t":{"17":{"position":[[19,2]]}}}],["步骤",{"_index":1551,"t":{"1133":{"position":[[14,2]]}}}],["武装",{"_index":275,"t":{"21":{"position":[[229,2]]}}}],["死",{"_index":1603,"t":{"1186":{"position":[[9,1],[28,1]]},"1191":{"position":[[15,1],[367,1]]},"1192":{"position":[[16,1]]}}}],["死锁",{"_index":1002,"t":{"341":{"position":[[56,2]]},"753":{"position":[[56,2]]}}}],["段",{"_index":736,"t":{"176":{"position":[[59,1]]},"180":{"position":[[152,1]]},"401":{"position":[[209,1]]},"629":{"position":[[59,1]]},"633":{"position":[[152,1]]},"833":{"position":[[209,1]]},"918":{"position":[[51,1],[62,1]]},"957":{"position":[[225,1],[241,1]]},"968":{"position":[[4,1],[276,1]]},"974":{"position":[[91,1]]},"977":{"position":[[135,1]]},"1008":{"position":[[14,1],[42,1]]},"1038":{"position":[[36,1]]},"1044":{"position":[[18,1],[613,1]]},"1188":{"position":[[103,1],[112,1]]}}}],["每个",{"_index":93,"t":{"13":{"position":[[243,2]]},"38":{"position":[[172,2]]},"76":{"position":[[1,2]]},"144":{"position":[[41,2]]},"170":{"position":[[165,2]]},"203":{"position":[[3,2]]},"237":{"position":[[65,2]]},"247":{"position":[[287,2]]},"281":{"position":[[106,2]]},"351":{"position":[[32,2]]},"358":{"position":[[747,2]]},"415":{"position":[[64,2]]},"537":{"position":[[457,2]]},"559":{"position":[[172,2]]},"590":{"position":[[41,2]]},"611":{"position":[[3,2]]},"623":{"position":[[165,2]]},"699":{"position":[[65,2]]},"709":{"position":[[287,2]]},"807":{"position":[[106,2]]},"847":{"position":[[64,2]]},"860":{"position":[[32,2]]},"867":{"position":[[747,2]]}}}],["每次",{"_index":787,"t":{"203":{"position":[[61,2]]},"388":{"position":[[335,2]]},"611":{"position":[[61,2]]},"820":{"position":[[335,2]]}}}],["比如",{"_index":454,"t":{"38":{"position":[[198,2]]},"129":{"position":[[21,2]]},"575":{"position":[[21,2]]},"1064":{"position":[[1069,2]]}}}],["水平",{"_index":244,"t":{"21":{"position":[[125,2]]}}}],["永久",{"_index":1011,"t":{"343":{"position":[[30,2]]},"533":{"position":[[673,2]]},"755":{"position":[[30,2]]}}}],["汇编",{"_index":1571,"t":{"1148":{"position":[[315,2]]}}}],["池",{"_index":743,"t":{"178":{"position":[[26,1]]},"631":{"position":[[26,1]]}}}],["汪",{"_index":919,"t":{"299":{"position":[[195,1],[300,1]]},"775":{"position":[[195,1],[300,1]]}}}],["汪汪",{"_index":918,"t":{"299":{"position":[[193,2],[298,2]]},"775":{"position":[[193,2],[298,2]]}}}],["沙箱",{"_index":1478,"t":{"1055":{"position":[[92,2]]},"1075":{"position":[[265,2]]}}}],["没",{"_index":1356,"t":{"924":{"position":[[33,1]]}}}],["没有",{"_index":378,"t":{"23":{"position":[[46,2]]},"247":{"position":[[301,2]]},"284":{"position":[[144,2]]},"299":{"position":[[7,2]]},"440":{"position":[[59,2]]},"533":{"position":[[624,2]]},"709":{"position":[[301,2]]},"760":{"position":[[144,2]]},"775":{"position":[[7,2]]},"884":{"position":[[59,2]]},"1057":{"position":[[158,2]]},"1064":{"position":[[358,2],[465,2],[625,2],[844,2],[1040,2]]},"1075":{"position":[[185,2]]},"1192":{"position":[[517,2]]}}}],["泄漏",{"_index":1334,"t":{"570":{"position":[[165,2]]}}}],["泄露",{"_index":1152,"t":{"422":{"position":[[34,2]]},"435":{"position":[[26,2]]}}}],["法则",{"_index":1137,"t":{"417":{"position":[[50,2]]},"849":{"position":[[50,2]]}}}],["泛",{"_index":1044,"t":{"345":{"position":[[2927,1],[3695,1],[3977,1],[5609,1]]},"757":{"position":[[2927,1],[3695,1],[3977,1],[5609,1]]}}}],["泡沫",{"_index":247,"t":{"21":{"position":[[143,2],[327,2]]}}}],["注入",{"_index":685,"t":{"170":{"position":[[56,2],[141,2],[155,2]]},"308":{"position":[[163,2]]},"310":{"position":[[42,2],[61,2]]},"329":{"position":[[41,2],[179,2]]},"333":{"position":[[31,2],[64,2],[69,2]]},"345":{"position":[[397,2]]},"358":{"position":[[770,2]]},"372":{"position":[[53,2]]},"623":{"position":[[56,2],[141,2],[155,2]]},"720":{"position":[[163,2]]},"722":{"position":[[42,2],[61,2]]},"741":{"position":[[41,2],[179,2]]},"745":{"position":[[31,2],[64,2],[69,2]]},"757":{"position":[[397,2]]},"867":{"position":[[770,2]]},"881":{"position":[[53,2]]}}}],["注册",{"_index":576,"t":{"131":{"position":[[16,2]]},"134":{"position":[[216,2],[564,2]]},"138":{"position":[[145,2]]},"164":{"position":[[21,2]]},"194":{"position":[[369,2],[418,2]]},"227":{"position":[[665,2],[714,2]]},"237":{"position":[[34,2]]},"247":{"position":[[12,2]]},"320":{"position":[[168,2],[211,2]]},"390":{"position":[[72,2]]},"467":{"position":[[69,2]]},"577":{"position":[[16,2]]},"580":{"position":[[216,2],[564,2]]},"584":{"position":[[145,2]]},"653":{"position":[[21,2]]},"667":{"position":[[369,2],[418,2]]},"689":{"position":[[665,2],[714,2]]},"699":{"position":[[34,2]]},"709":{"position":[[12,2]]},"732":{"position":[[168,2],[211,2]]},"822":{"position":[[72,2]]},"911":{"position":[[69,2]]},"1200":{"position":[[490,2]]}}}],["注意",{"_index":1298,"t":{"557":{"position":[[50,2]]},"934":{"position":[[101,2]]},"1192":{"position":[[509,2]]},"1220":{"position":[[62,2]]}}}],["注意事项",{"_index":1351,"t":{"920":{"position":[[55,4]]}}}],["注解",{"_index":1608,"t":{"1188":{"position":[[74,2]]}}}],["活着",{"_index":27,"t":{"13":{"position":[[45,2]]}}}],["派生类",{"_index":1129,"t":{"415":{"position":[[220,3]]},"847":{"position":[[220,3]]}}}],["流",{"_index":815,"t":{"240":{"position":[[73,1]]},"702":{"position":[[73,1]]},"922":{"position":[[208,1]]}}}],["流向",{"_index":147,"t":{"17":{"position":[[102,2]]}}}],["流式",{"_index":1240,"t":{"511":{"position":[[16,2]]},"523":{"position":[[68,2]]},"922":{"position":[[183,2]]},"952":{"position":[[185,2]]},"1008":{"position":[[50,2]]}}}],["流行",{"_index":961,"t":{"329":{"position":[[18,2]]},"741":{"position":[[18,2]]}}}],["测试",{"_index":811,"t":{"231":{"position":[[102,2]]},"279":{"position":[[45,2]]},"331":{"position":[[19,2],[34,2]]},"333":{"position":[[105,2]]},"345":{"position":[[462,2],[5976,2]]},"351":{"position":[[55,2],[69,2]]},"353":{"position":[[27,2]]},"375":{"position":[[400,2],[461,2]]},"693":{"position":[[102,2]]},"743":{"position":[[19,2],[34,2]]},"745":{"position":[[105,2]]},"757":{"position":[[462,2],[5976,2]]},"805":{"position":[[45,2]]},"860":{"position":[[55,2],[69,2]]},"862":{"position":[[27,2]]},"1071":{"position":[[11,2]]},"1077":{"position":[[41,2]]},"1216":{"position":[[51,2]]}}}],["测试日志",{"_index":597,"t":{"138":{"position":[[451,4]]},"584":{"position":[[451,4]]}}}],["测试步骤",{"_index":456,"t":{"38":{"position":[[217,4]]}}}],["浏览器",{"_index":1091,"t":{"375":{"position":[[207,3]]}}}],["浮点",{"_index":1565,"t":{"1148":{"position":[[166,2]]}}}],["消息",{"_index":520,"t":{"110":{"position":[[25,2],[32,2],[49,2]]},"112":{"position":[[4,2]]},"115":{"position":[[4,2],[102,2]]},"119":{"position":[[8,2]]},"131":{"position":[[19,2]]},"150":{"position":[[1205,2]]},"155":{"position":[[17,2]]},"158":{"position":[[4,2]]},"203":{"position":[[65,2],[86,2]]},"531":{"position":[[261,2],[363,2]]},"533":{"position":[[626,2]]},"577":{"position":[[19,2]]},"592":{"position":[[25,2],[32,2],[49,2]]},"594":{"position":[[4,2]]},"597":{"position":[[4,2],[102,2]]},"601":{"position":[[8,2]]},"611":{"position":[[65,2],[86,2]]},"644":{"position":[[17,2]]},"647":{"position":[[4,2]]},"659":{"position":[[1205,2]]},"1022":{"position":[[333,2]]}}}],["消息传递",{"_index":571,"t":{"129":{"position":[[111,4]]},"529":{"position":[[15,4]]},"575":{"position":[[111,4]]}}}],["消费",{"_index":1220,"t":{"489":{"position":[[514,2],[527,2]]},"922":{"position":[[236,2]]}}}],["消费者",{"_index":1267,"t":{"535":{"position":[[9,3]]}}}],["涵盖",{"_index":1425,"t":{"977":{"position":[[220,2]]}}}],["淡化",{"_index":23,"t":{"13":{"position":[[29,2]]}}}],["淮",{"_index":45,"t":{"13":{"position":[[90,1]]}}}],["深入",{"_index":1473,"t":{"1048":{"position":[[231,2]]}}}],["深度",{"_index":110,"t":{"15":{"position":[[26,2]]},"559":{"position":[[167,2]]}}}],["添加",{"_index":501,"t":{"76":{"position":[[6,2]]},"180":{"position":[[52,2]]},"182":{"position":[[45,2]]},"331":{"position":[[42,2]]},"380":{"position":[[20,2]]},"399":{"position":[[17,2]]},"401":{"position":[[203,2]]},"405":{"position":[[127,2]]},"407":{"position":[[4,2]]},"409":{"position":[[448,2]]},"411":{"position":[[104,2]]},"417":{"position":[[253,2]]},"633":{"position":[[52,2]]},"635":{"position":[[45,2]]},"743":{"position":[[42,2]]},"812":{"position":[[20,2]]},"831":{"position":[[17,2]]},"833":{"position":[[203,2]]},"837":{"position":[[127,2]]},"839":{"position":[[4,2]]},"841":{"position":[[448,2]]},"843":{"position":[[104,2]]},"849":{"position":[[253,2]]},"1077":{"position":[[112,2]]},"1133":{"position":[[6,2]]},"1202":{"position":[[18,2]]},"1207":{"position":[[55,2],[165,2]]},"1214":{"position":[[362,2],[375,2]]},"1216":{"position":[[164,2],[265,2]]},"1220":{"position":[[113,2]]}}}],["清晰",{"_index":682,"t":{"170":{"position":[[8,2]]},"341":{"position":[[104,2],[118,2]]},"345":{"position":[[3041,2]]},"623":{"position":[[8,2]]},"753":{"position":[[104,2],[118,2]]},"757":{"position":[[3041,2]]}}}],["清理",{"_index":1007,"t":{"341":{"position":[[139,2]]},"753":{"position":[[139,2]]},"854":{"position":[[96,2]]},"1200":{"position":[[134,2],[205,2]]},"1205":{"position":[[161,2],[232,2]]},"1216":{"position":[[172,2]]}}}],["清空",{"_index":1365,"t":{"926":{"position":[[173,2]]}}}],["游泳",{"_index":848,"t":{"263":{"position":[[92,2],[367,2]]},"789":{"position":[[92,2],[367,2]]}}}],["源于",{"_index":261,"t":{"21":{"position":[[184,2]]}}}],["源代码",{"_index":1558,"t":{"1142":{"position":[[137,3]]}}}],["源码",{"_index":1550,"t":{"1133":{"position":[[8,2]]}}}],["溢出",{"_index":1321,"t":{"559":{"position":[[214,2]]}}}],["满足",{"_index":1208,"t":{"470":{"position":[[69,2]]},"473":{"position":[[34,2],[49,2]]},"487":{"position":[[87,2]]},"541":{"position":[[19,2]]}}}],["滥用",{"_index":1362,"t":{"924":{"position":[[81,2]]},"974":{"position":[[15,2]]}}}],["演示",{"_index":1049,"t":{"345":{"position":[[5586,2]]},"757":{"position":[[5586,2]]}}}],["演进",{"_index":671,"t":{"166":{"position":[[63,2]]},"188":{"position":[[61,2]]},"619":{"position":[[63,2]]},"641":{"position":[[61,2]]}}}],["灵活",{"_index":475,"t":{"42":{"position":[[159,2]]},"380":{"position":[[64,2]]},"413":{"position":[[30,2]]},"812":{"position":[[64,2]]},"845":{"position":[[30,2]]}}}],["灵活处理",{"_index":1424,"t":{"977":{"position":[[215,4]]}}}],["灵活性",{"_index":418,"t":{"26":{"position":[[92,3]]},"158":{"position":[[315,3]]},"345":{"position":[[72,3]]},"417":{"position":[[31,3]]},"647":{"position":[[315,3]]},"757":{"position":[[72,3]]},"849":{"position":[[31,3]]}}}],["点",{"_index":506,"t":{"83":{"position":[[13,1]]},"170":{"position":[[118,1]]},"358":{"position":[[718,1]]},"623":{"position":[[118,1]]},"867":{"position":[[718,1]]},"1220":{"position":[[64,1]]}}}],["点击",{"_index":1348,"t":{"854":{"position":[[126,2]]}}}],["热",{"_index":793,"t":{"212":{"position":[[2,1]]},"219":{"position":[[0,1],[12,1],[21,1]]},"224":{"position":[[4,1]]},"227":{"position":[[19,1]]},"231":{"position":[[0,1],[12,1],[21,1]]},"237":{"position":[[14,1]]},"674":{"position":[[2,1]]},"681":{"position":[[0,1],[12,1],[21,1]]},"686":{"position":[[4,1]]},"689":{"position":[[19,1]]},"693":{"position":[[0,1],[12,1],[21,1]]},"699":{"position":[[14,1]]},"1214":{"position":[[258,1]]}}}],["然后",{"_index":982,"t":{"336":{"position":[[1199,2]]},"748":{"position":[[1199,2]]},"963":{"position":[[343,2]]},"1010":{"position":[[1891,2]]}}}],["然而",{"_index":124,"t":{"17":{"position":[[26,2]]},"19":{"position":[[76,2]]},"21":{"position":[[30,2],[262,2]]},"23":{"position":[[118,2]]},"1077":{"position":[[56,2]]}}}],["父",{"_index":883,"t":{"286":{"position":[[16,1],[33,1],[54,1]]},"762":{"position":[[16,1],[33,1],[54,1]]},"1090":{"position":[[154,1]]},"1107":{"position":[[154,1]]},"1151":{"position":[[146,1],[197,1],[355,1]]},"1188":{"position":[[132,1]]},"1191":{"position":[[46,1],[449,1]]},"1192":{"position":[[21,1],[414,1],[514,1]]},"1194":{"position":[[706,1],[718,1],[769,1],[819,1],[853,1],[873,1]]}}}],["父亲",{"_index":1602,"t":{"1186":{"position":[[6,2],[30,2]]},"1191":{"position":[[12,2],[364,2]]}}}],["父母",{"_index":370,"t":{"23":{"position":[[18,2],[70,2],[143,2]]}}}],["片段",{"_index":459,"t":{"38":{"position":[[241,2]]}}}],["版本",{"_index":1164,"t":{"427":{"position":[[516,2]]},"568":{"position":[[115,2],[125,2]]},"570":{"position":[[179,2]]},"854":{"position":[[55,2],[66,2],[92,2]]},"1071":{"position":[[5,2]]},"1073":{"position":[[10,2]]}}}],["物质",{"_index":346,"t":{"21":{"position":[[540,2]]}}}],["特别",{"_index":1333,"t":{"570":{"position":[[156,2]]}}}],["特定",{"_index":18,"t":{"13":{"position":[[15,2]]},"258":{"position":[[115,2]]},"784":{"position":[[115,2]]},"1031":{"position":[[30,2]]},"1069":{"position":[[31,2]]},"1071":{"position":[[3,2]]},"1073":{"position":[[8,2]]},"1075":{"position":[[152,2]]},"1077":{"position":[[24,2]]},"1144":{"position":[[12,2]]},"1148":{"position":[[54,2]]},"1153":{"position":[[74,2]]}}}],["特定条件",{"_index":1209,"t":{"470":{"position":[[71,4]]}}}],["特性",{"_index":1000,"t":{"341":{"position":[[2,2]]},"495":{"position":[[0,2]]},"753":{"position":[[2,2]]},"957":{"position":[[15,2]]}}}],["特权",{"_index":1646,"t":{"1218":{"position":[[174,2]]}}}],["特殊",{"_index":1300,"t":{"557":{"position":[[76,2]]},"1148":{"position":[[131,2]]}}}],["特点",{"_index":1618,"t":{"1197":{"position":[[41,2]]}}}],["特色",{"_index":957,"t":{"322":{"position":[[14,2]]},"734":{"position":[[14,2]]}}}],["状态",{"_index":610,"t":{"147":{"position":[[2,2]]},"150":{"position":[[4,2],[57,2],[226,2],[1189,2]]},"155":{"position":[[26,2]]},"184":{"position":[[1905,2]]},"186":{"position":[[105,2]]},"212":{"position":[[7,2],[18,2]]},"215":{"position":[[2,2],[20,2],[84,2],[1833,2],[2977,2]]},"217":{"position":[[2,2]]},"235":{"position":[[2,2]]},"237":{"position":[[2,2],[47,2],[73,2]]},"247":{"position":[[180,2],[272,2],[280,2]]},"249":{"position":[[250,2]]},"339":{"position":[[417,2]]},"345":{"position":[[1030,2]]},"407":{"position":[[671,2]]},"637":{"position":[[1905,2]]},"639":{"position":[[105,2]]},"644":{"position":[[26,2]]},"656":{"position":[[2,2]]},"659":{"position":[[4,2],[57,2],[226,2],[1189,2]]},"674":{"position":[[7,2],[18,2]]},"677":{"position":[[2,2],[20,2],[84,2],[1833,2],[2977,2]]},"679":{"position":[[2,2]]},"697":{"position":[[2,2]]},"699":{"position":[[2,2],[47,2],[73,2]]},"709":{"position":[[180,2],[272,2],[280,2]]},"711":{"position":[[250,2]]},"751":{"position":[[417,2]]},"757":{"position":[[1030,2]]},"839":{"position":[[671,2]]},"1008":{"position":[[96,2]]},"1064":{"position":[[398,2],[539,2],[577,2],[687,2]]},"1188":{"position":[[120,2],[165,2],[198,2]]}}}],["狗",{"_index":851,"t":{"263":{"position":[[326,1],[365,1]]},"789":{"position":[[326,1],[365,1]]}}}],["独立",{"_index":428,"t":{"28":{"position":[[57,2]]},"38":{"position":[[245,2]]},"131":{"position":[[45,2]]},"144":{"position":[[38,2]]},"358":{"position":[[741,2]]},"577":{"position":[[45,2]]},"590":{"position":[[38,2]]},"867":{"position":[[741,2]]}}}],["独裁政权",{"_index":139,"t":{"17":{"position":[[79,4]]}}}],["狭隘",{"_index":73,"t":{"13":{"position":[[179,2]]}}}],["猜测",{"_index":1086,"t":{"375":{"position":[[163,2]]}}}],["率先",{"_index":121,"t":{"17":{"position":[[17,2]]}}}],["环",{"_index":1621,"t":{"1197":{"position":[[75,1]]}}}],["环境",{"_index":1328,"t":{"570":{"position":[[91,2],[186,2]]},"1055":{"position":[[87,2]]},"1057":{"position":[[147,2]]},"1062":{"position":[[83,2]]},"1064":{"position":[[78,2],[459,2],[984,2],[1080,2],[1157,2],[1382,2],[1445,2]]},"1069":{"position":[[18,2]]},"1071":{"position":[[24,2]]},"1075":{"position":[[135,2],[244,2]]},"1077":{"position":[[46,2]]},"1128":{"position":[[70,2]]},"1207":{"position":[[6,2]]},"1218":{"position":[[24,2]]},"1220":{"position":[[111,2]]}}}],["环境中运行",{"_index":1499,"t":{"1064":{"position":[[767,5]]}}}],["环境变量",{"_index":732,"t":{"174":{"position":[[33,4]]},"627":{"position":[[33,4]]},"926":{"position":[[85,4]]},"1013":{"position":[[64,4]]},"1024":{"position":[[118,4]]},"1035":{"position":[[12,4]]}}}],["现代",{"_index":326,"t":{"21":{"position":[[449,2],[556,2]]},"1069":{"position":[[53,2]]},"1077":{"position":[[75,2]]}}}],["现实",{"_index":175,"t":{"17":{"position":[[204,2]]}}}],["现有",{"_index":719,"t":{"172":{"position":[[12,2]]},"184":{"position":[[1967,2]]},"305":{"position":[[146,2]]},"380":{"position":[[12,2],[32,2]]},"407":{"position":[[23,2]]},"411":{"position":[[113,2]]},"415":{"position":[[155,2]]},"625":{"position":[[12,2]]},"637":{"position":[[1967,2]]},"781":{"position":[[146,2]]},"812":{"position":[[12,2],[32,2]]},"839":{"position":[[23,2]]},"843":{"position":[[113,2]]},"847":{"position":[[155,2]]},"1071":{"position":[[32,2]]}}}],["现象",{"_index":260,"t":{"21":{"position":[[180,2]]}}}],["理想",{"_index":95,"t":{"13":{"position":[[251,2]]}}}],["理由",{"_index":1080,"t":{"372":{"position":[[101,2]]},"881":{"position":[[101,2]]}}}],["理解",{"_index":112,"t":{"15":{"position":[[36,2]]},"26":{"position":[[57,2]]},"351":{"position":[[49,2]]},"353":{"position":[[4,2]]},"497":{"position":[[38,2]]},"860":{"position":[[49,2]]},"862":{"position":[[4,2]]},"1220":{"position":[[139,2]]}}}],["瓶颈",{"_index":1286,"t":{"553":{"position":[[338,2]]}}}],["甚至",{"_index":87,"t":{"13":{"position":[[221,2]]},"21":{"position":[[512,2],[545,2]]}}}],["生产",{"_index":1327,"t":{"570":{"position":[[89,2],[184,2]]},"1207":{"position":[[4,2]]},"1220":{"position":[[109,2],[194,2]]}}}],["生产者",{"_index":1266,"t":{"535":{"position":[[5,3]]}}}],["生命周期",{"_index":578,"t":{"131":{"position":[[24,4]]},"144":{"position":[[27,4]]},"345":{"position":[[138,4]]},"549":{"position":[[35,4]]},"577":{"position":[[24,4]]},"590":{"position":[[27,4]]},"757":{"position":[[138,4]]},"1220":{"position":[[81,4]]}}}],["生存",{"_index":94,"t":{"13":{"position":[[248,2]]}}}],["生成",{"_index":1059,"t":{"356":{"position":[[410,2],[479,2],[527,2]]},"358":{"position":[[511,2],[686,2]]},"427":{"position":[[109,2],[406,2],[496,2]]},"431":{"position":[[8,2]]},"433":{"position":[[484,2]]},"437":{"position":[[30,2]]},"489":{"position":[[521,2],[540,2]]},"557":{"position":[[540,2]]},"854":{"position":[[197,2]]},"865":{"position":[[410,2],[479,2],[527,2]]},"867":{"position":[[511,2],[686,2]]},"922":{"position":[[194,2],[233,2]]},"937":{"position":[[35,2]]},"957":{"position":[[135,2]]},"1035":{"position":[[46,2]]}}}],["生活",{"_index":218,"t":{"21":{"position":[[17,2],[76,2],[123,2],[471,2]]},"23":{"position":[[42,2],[79,2],[122,2]]}}}],["用于",{"_index":406,"t":{"26":{"position":[[29,2]]},"46":{"position":[[0,2]]},"115":{"position":[[182,2]]},"134":{"position":[[339,2]]},"158":{"position":[[208,2]]},"180":{"position":[[118,2]]},"205":{"position":[[53,2]]},"227":{"position":[[17,2]]},"336":{"position":[[172,2],[199,2]]},"470":{"position":[[29,2]]},"502":{"position":[[13,2]]},"523":{"position":[[13,2],[44,2],[137,2],[168,2]]},"555":{"position":[[23,2]]},"557":{"position":[[71,2]]},"580":{"position":[[339,2]]},"597":{"position":[[182,2]]},"613":{"position":[[53,2]]},"633":{"position":[[118,2]]},"647":{"position":[[208,2]]},"689":{"position":[[17,2]]},"748":{"position":[[172,2],[199,2]]},"932":{"position":[[12,2]]},"937":{"position":[[30,2]]},"968":{"position":[[12,2]]},"1010":{"position":[[936,2],[1022,2],[1111,2]]},"1013":{"position":[[11,2]]},"1044":{"position":[[626,2]]},"1055":{"position":[[20,2]]},"1064":{"position":[[896,2]]},"1075":{"position":[[126,2]]},"1077":{"position":[[16,2]]},"1080":{"position":[[40,2]]},"1085":{"position":[[40,2]]},"1102":{"position":[[111,2]]},"1119":{"position":[[111,2]]},"1124":{"position":[[30,2]]},"1128":{"position":[[5,2]]}}}],["用户",{"_index":549,"t":{"126":{"position":[[49,2]]},"129":{"position":[[60,2],[83,2],[124,2]]},"131":{"position":[[82,2]]},"356":{"position":[[128,2],[412,2],[515,2]]},"358":{"position":[[3,2],[293,2],[682,2]]},"435":{"position":[[6,2],[35,2]]},"572":{"position":[[49,2]]},"575":{"position":[[60,2],[83,2],[124,2]]},"577":{"position":[[82,2]]},"865":{"position":[[128,2],[412,2],[515,2]]},"867":{"position":[[3,2],[293,2],[682,2]]},"1064":{"position":[[739,2]]},"1075":{"position":[[32,2]]}}}],["用来",{"_index":1512,"t":{"1069":{"position":[[9,2]]},"1151":{"position":[[137,2]]}}}],["用法",{"_index":412,"t":{"26":{"position":[[62,2]]},"299":{"position":[[16,2]]},"555":{"position":[[64,2]]},"775":{"position":[[16,2]]}}}],["电池",{"_index":1495,"t":{"1064":{"position":[[685,2]]}}}],["瘦身",{"_index":1597,"t":{"1168":{"position":[[72,2]]}}}],["登录",{"_index":1174,"t":{"435":{"position":[[37,2]]},"1064":{"position":[[1007,2]]}}}],["百分比",{"_index":1305,"t":{"557":{"position":[[188,3]]}}}],["皮肤",{"_index":1202,"t":{"465":{"position":[[40,2]]},"909":{"position":[[40,2]]}}}],["盐",{"_index":1166,"t":{"427":{"position":[[524,1]]},"437":{"position":[[392,1]]}}}],["监听",{"_index":631,"t":{"150":{"position":[[1235,2]]},"158":{"position":[[603,2]]},"533":{"position":[[352,2],[574,2],[684,2]]},"553":{"position":[[283,2],[413,2]]},"647":{"position":[[603,2]]},"659":{"position":[[1235,2]]},"1200":{"position":[[314,2]]},"1205":{"position":[[341,2]]}}}],["监听器",{"_index":1629,"t":{"1200":{"position":[[234,3]]},"1205":{"position":[[261,3]]}}}],["监控",{"_index":1582,"t":{"1155":{"position":[[9,2],[67,2],[127,2]]},"1157":{"position":[[12,2],[139,2]]},"1207":{"position":[[167,2]]},"1214":{"position":[[369,2],[401,2]]},"1220":{"position":[[118,2]]}}}],["监测",{"_index":1169,"t":{"433":{"position":[[197,2]]}}}],["目前",{"_index":517,"t":{"110":{"position":[[16,2]]},"592":{"position":[[16,2]]}}}],["目录",{"_index":492,"t":{"64":{"position":[[6,2]]},"240":{"position":[[2,2]]},"702":{"position":[[2,2]]},"1055":{"position":[[43,2]]},"1057":{"position":[[57,2]]},"1062":{"position":[[60,2]]},"1064":{"position":[[311,2],[387,2],[704,2],[893,2]]},"1069":{"position":[[33,2]]},"1077":{"position":[[27,2]]}}}],["目标",{"_index":407,"t":{"26":{"position":[[33,2]]},"28":{"position":[[24,2],[64,2]]},"31":{"position":[[102,2]]},"33":{"position":[[172,2]]},"36":{"position":[[119,2]]},"38":{"position":[[165,2]]},"40":{"position":[[30,2],[43,2]]},"42":{"position":[[17,2],[53,2],[130,2]]},"150":{"position":[[1620,2],[1834,2]]},"158":{"position":[[973,2],[1159,2]]},"166":{"position":[[86,2]]},"170":{"position":[[0,2]]},"172":{"position":[[0,2]]},"174":{"position":[[0,2]]},"176":{"position":[[0,2]]},"178":{"position":[[0,2]]},"180":{"position":[[0,2]]},"182":{"position":[[0,2]]},"345":{"position":[[416,2]]},"557":{"position":[[186,2]]},"619":{"position":[[86,2]]},"623":{"position":[[0,2]]},"625":{"position":[[0,2]]},"627":{"position":[[0,2]]},"629":{"position":[[0,2]]},"631":{"position":[[0,2]]},"633":{"position":[[0,2]]},"635":{"position":[[0,2]]},"647":{"position":[[973,2],[1159,2]]},"659":{"position":[[1620,2],[1834,2]]},"757":{"position":[[416,2]]},"1148":{"position":[[402,2]]},"1157":{"position":[[178,2]]}}}],["目的",{"_index":1187,"t":{"440":{"position":[[15,2]]},"884":{"position":[[15,2]]}}}],["盲目",{"_index":281,"t":{"21":{"position":[[247,2]]}}}],["直到",{"_index":1257,"t":{"531":{"position":[[388,2]]},"537":{"position":[[532,2]]},"1142":{"position":[[68,2]]}}}],["直接",{"_index":683,"t":{"170":{"position":[[18,2],[191,2]]},"186":{"position":[[99,2]]},"194":{"position":[[332,2]]},"247":{"position":[[307,2]]},"313":{"position":[[7,2],[192,2],[293,2]]},"388":{"position":[[71,2]]},"417":{"position":[[98,2],[204,2]]},"419":{"position":[[54,2]]},"431":{"position":[[6,2]]},"447":{"position":[[4,2]]},"623":{"position":[[18,2],[191,2]]},"639":{"position":[[99,2]]},"667":{"position":[[332,2]]},"709":{"position":[[307,2]]},"725":{"position":[[7,2],[192,2],[293,2]]},"820":{"position":[[71,2]]},"849":{"position":[[98,2],[204,2]]},"851":{"position":[[54,2]]},"891":{"position":[[4,2]]},"918":{"position":[[13,2]]},"946":{"position":[[24,2]]},"950":{"position":[[31,2]]},"952":{"position":[[125,2],[173,2]]},"1010":{"position":[[1876,2],[2342,2]]},"1018":{"position":[[37,2]]},"1102":{"position":[[74,2]]},"1119":{"position":[[74,2]]},"1138":{"position":[[6,2]]},"1140":{"position":[[4,2]]},"1151":{"position":[[376,2]]},"1191":{"position":[[452,2]]}}}],["直观",{"_index":1446,"t":{"1013":{"position":[[46,2]]}}}],["相互",{"_index":451,"t":{"36":{"position":[[131,2]]},"38":{"position":[[259,2]]}}}],["相互促进",{"_index":320,"t":{"21":{"position":[[412,4]]}}}],["相关",{"_index":434,"t":{"31":{"position":[[156,2]]},"170":{"position":[[193,2],[1774,2]]},"265":{"position":[[187,2]]},"279":{"position":[[53,2],[69,2]]},"351":{"position":[[20,2]]},"356":{"position":[[536,2]]},"368":{"position":[[26,2]]},"370":{"position":[[16,2]]},"375":{"position":[[160,2]]},"623":{"position":[[193,2],[1774,2]]},"791":{"position":[[187,2]]},"805":{"position":[[53,2],[69,2]]},"860":{"position":[[20,2]]},"865":{"position":[[536,2]]},"877":{"position":[[26,2]]},"879":{"position":[[16,2]]},"1064":{"position":[[918,2]]},"1080":{"position":[[56,2]]},"1085":{"position":[[56,2]]}}}],["相同",{"_index":466,"t":{"42":{"position":[[51,2]]},"440":{"position":[[86,2]]},"884":{"position":[[86,2]]}}}],["相对",{"_index":1380,"t":{"937":{"position":[[453,2]]},"1057":{"position":[[42,2]]},"1220":{"position":[[55,2]]}}}],["相当于",{"_index":1443,"t":{"1010":{"position":[[1929,3]]}}}],["相比",{"_index":572,"t":{"129":{"position":[[116,2]]},"575":{"position":[[116,2]]},"972":{"position":[[20,2]]}}}],["真实",{"_index":965,"t":{"331":{"position":[[28,2]]},"743":{"position":[[28,2]]}}}],["真正",{"_index":840,"t":{"260":{"position":[[15,2]]},"786":{"position":[[15,2]]}}}],["真理",{"_index":342,"t":{"21":{"position":[[521,2]]}}}],["矛盾",{"_index":159,"t":{"17":{"position":[[152,2]]}}}],["知识",{"_index":702,"t":{"170":{"position":[[182,2]]},"417":{"position":[[55,2]]},"623":{"position":[[182,2]]},"849":{"position":[[55,2]]}}}],["短信",{"_index":707,"t":{"170":{"position":[[458,2],[555,2],[1103,2],[1745,2]]},"397":{"position":[[71,2]]},"623":{"position":[[458,2],[555,2],[1103,2],[1745,2]]},"829":{"position":[[71,2]]}}}],["码",{"_index":638,"t":{"155":{"position":[[28,1]]},"407":{"position":[[673,1]]},"644":{"position":[[28,1]]},"839":{"position":[[673,1]]}}}],["破坏",{"_index":738,"t":{"176":{"position":[[67,2]]},"305":{"position":[[144,2]]},"353":{"position":[[20,2]]},"629":{"position":[[67,2]]},"781":{"position":[[144,2]]},"862":{"position":[[20,2]]}}}],["硬",{"_index":686,"t":{"170":{"position":[[60,1]]},"186":{"position":[[3,1]]},"623":{"position":[[60,1]]},"639":{"position":[[3,1]]}}}],["硬件",{"_index":1487,"t":{"1064":{"position":[[402,2],[567,2],[615,2],[645,2],[746,2],[861,2]]}}}],["硬盘",{"_index":1497,"t":{"1064":{"position":[[717,2],[803,2]]}}}],["确保",{"_index":444,"t":{"33":{"position":[[194,2]]},"341":{"position":[[1103,2]]},"489":{"position":[[519,2]]},"493":{"position":[[129,2]]},"543":{"position":[[10,2],[370,2]]},"547":{"position":[[322,2]]},"753":{"position":[[1103,2]]},"1064":{"position":[[316,2],[1112,2]]},"1216":{"position":[[146,2]]}}}],["确定",{"_index":1168,"t":{"433":{"position":[[31,2]]},"437":{"position":[[97,2]]}}}],["确实",{"_index":216,"t":{"21":{"position":[[12,2]]},"370":{"position":[[12,2]]},"879":{"position":[[12,2]]}}}],["磁盘",{"_index":813,"t":{"237":{"position":[[31,2],[43,2]]},"699":{"position":[[31,2],[43,2]]}}}],["示例",{"_index":609,"t":{"144":{"position":[[97,2]]},"170":{"position":[[204,2],[1227,2]]},"172":{"position":[[18,2]]},"174":{"position":[[28,2]]},"176":{"position":[[34,2]]},"178":{"position":[[43,2]]},"180":{"position":[[27,2]]},"182":{"position":[[29,2]]},"240":{"position":[[33,2]]},"345":{"position":[[4619,2],[5034,2],[6220,2],[6315,2]]},"397":{"position":[[9,2]]},"437":{"position":[[251,2]]},"445":{"position":[[364,2]]},"452":{"position":[[596,2]]},"478":{"position":[[29,2]]},"537":{"position":[[53,2]]},"539":{"position":[[64,2]]},"541":{"position":[[45,2]]},"543":{"position":[[46,2]]},"559":{"position":[[266,2]]},"590":{"position":[[97,2]]},"623":{"position":[[204,2],[1227,2]]},"625":{"position":[[18,2]]},"627":{"position":[[28,2]]},"629":{"position":[[34,2]]},"631":{"position":[[43,2]]},"633":{"position":[[27,2]]},"635":{"position":[[29,2]]},"702":{"position":[[33,2]]},"757":{"position":[[4619,2],[5034,2],[6220,2],[6315,2]]},"829":{"position":[[9,2]]},"889":{"position":[[364,2]]},"896":{"position":[[596,2]]},"937":{"position":[[47,2]]},"940":{"position":[[36,2]]},"944":{"position":[[39,2]]},"948":{"position":[[39,2]]},"1010":{"position":[[872,2]]},"1018":{"position":[[340,2]]},"1020":{"position":[[112,2],[342,2]]},"1022":{"position":[[116,2],[537,2]]},"1024":{"position":[[116,2],[286,2]]},"1026":{"position":[[118,2],[328,2]]},"1028":{"position":[[123,2],[252,2]]},"1031":{"position":[[154,2]]},"1077":{"position":[[126,2]]},"1100":{"position":[[116,2]]},"1117":{"position":[[116,2]]},"1148":{"position":[[474,2]]},"1155":{"position":[[189,2]]},"1177":{"position":[[6,2]]}}}],["社会",{"_index":105,"t":{"15":{"position":[[14,2],[41,2]]},"17":{"position":[[190,2]]},"21":{"position":[[451,2]]}}}],["禁用",{"_index":1595,"t":{"1166":{"position":[[5,2]]}}}],["私人",{"_index":137,"t":{"17":{"position":[[73,2]]}}}],["科技",{"_index":313,"t":{"21":{"position":[[371,2],[430,2]]}}}],["科技进步",{"_index":308,"t":{"21":{"position":[[354,4],[425,4]]}}}],["秒",{"_index":1262,"t":{"533":{"position":[[622,1]]},"551":{"position":[[435,1]]}}}],["程",{"_index":761,"t":{"184":{"position":[[1993,1]]},"336":{"position":[[547,1],[771,1],[1120,1]]},"341":{"position":[[418,1],[450,1],[512,1],[517,1]]},"343":{"position":[[527,1]]},"487":{"position":[[56,1]]},"495":{"position":[[102,1]]},"525":{"position":[[13,1]]},"531":{"position":[[340,1],[382,1]]},"537":{"position":[[530,1]]},"551":{"position":[[382,1],[401,1]]},"637":{"position":[[1993,1]]},"748":{"position":[[547,1],[771,1],[1120,1]]},"753":{"position":[[418,1],[450,1],[512,1],[517,1]]},"755":{"position":[[527,1]]}}}],["程序",{"_index":874,"t":{"284":{"position":[[97,2]]},"419":{"position":[[20,2],[52,2]]},"760":{"position":[[97,2]]},"851":{"position":[[20,2],[52,2]]},"957":{"position":[[20,2]]},"1055":{"position":[[55,2],[66,2]]},"1064":{"position":[[367,2],[478,2],[637,2],[743,2],[773,2],[854,2],[981,2],[1129,2]]},"1067":{"position":[[65,2]]},"1071":{"position":[[8,2]]},"1073":{"position":[[13,2]]},"1075":{"position":[[198,2]]},"1124":{"position":[[55,2],[82,2]]},"1128":{"position":[[57,2]]},"1136":{"position":[[13,2]]},"1148":{"position":[[350,2]]},"1151":{"position":[[27,2],[371,2]]},"1153":{"position":[[26,2]]},"1157":{"position":[[26,2],[69,2],[124,2],[141,2],[154,2],[186,2]]},"1161":{"position":[[40,2]]},"1168":{"position":[[77,2]]},"1216":{"position":[[148,2]]}}}],["程序执行",{"_index":1235,"t":{"500":{"position":[[28,4]]},"1136":{"position":[[41,4]]}}}],["程序调试",{"_index":1546,"t":{"1128":{"position":[[7,4]]}}}],["程序运行",{"_index":1541,"t":{"1124":{"position":[[64,4]]},"1142":{"position":[[29,4]]},"1157":{"position":[[78,4]]}}}],["程度",{"_index":362,"t":{"21":{"position":[[607,2]]},"957":{"position":[[88,2]]}}}],["稳定",{"_index":51,"t":{"13":{"position":[[102,2]]},"17":{"position":[[111,2]]},"937":{"position":[[430,2]]},"952":{"position":[[42,2]]}}}],["稳定性",{"_index":1105,"t":{"380":{"position":[[48,3]]},"812":{"position":[[48,3]]}}}],["稳定期",{"_index":292,"t":{"21":{"position":[[293,3],[309,3]]}}}],["空",{"_index":910,"t":{"296":{"position":[[220,1],[380,1]]},"519":{"position":[[974,1]]},"772":{"position":[[220,1],[380,1]]},"928":{"position":[[7,1]]}}}],["空格",{"_index":514,"t":{"97":{"position":[[11,2]]},"104":{"position":[[18,2]]}}}],["空间",{"_index":557,"t":{"129":{"position":[[30,2],[62,2]]},"575":{"position":[[30,2],[62,2]]},"1064":{"position":[[741,2]]}}}],["立即",{"_index":992,"t":{"339":{"position":[[76,2],[160,2]]},"751":{"position":[[76,2],[160,2]]}}}],["竞",{"_index":756,"t":{"184":{"position":[[1933,1]]},"336":{"position":[[1271,1]]},"539":{"position":[[42,1],[465,1]]},"553":{"position":[[26,1],[74,1]]},"637":{"position":[[1933,1]]},"748":{"position":[[1271,1]]}}}],["竞争",{"_index":1249,"t":{"527":{"position":[[58,2]]},"529":{"position":[[2,2],[32,2]]},"553":{"position":[[184,2]]}}}],["章节",{"_index":524,"t":{"110":{"position":[[38,2]]},"592":{"position":[[38,2]]}}}],["端",{"_index":990,"t":{"339":{"position":[[2,1]]},"419":{"position":[[68,1]]},"751":{"position":[[2,1]]},"851":{"position":[[68,1]]},"1218":{"position":[[218,1]]}}}],["端口",{"_index":1627,"t":{"1197":{"position":[[147,2]]}}}],["端点",{"_index":1632,"t":{"1207":{"position":[[61,2]]}}}],["笔记本电脑",{"_index":1496,"t":{"1064":{"position":[[691,5]]}}}],["符合",{"_index":1252,"t":{"529":{"position":[[41,2]]},"553":{"position":[[322,2]]}}}],["第",{"_index":515,"t":{"104":{"position":[[7,1]]}}}],["第一个",{"_index":510,"t":{"90":{"position":[[7,3]]},"348":{"position":[[55,3]]},"521":{"position":[[350,3]]},"857":{"position":[[55,3]]}}}],["第三个",{"_index":871,"t":{"284":{"position":[[53,3]]},"760":{"position":[[53,3]]}}}],["第二个",{"_index":994,"t":{"339":{"position":[[83,3]]},"378":{"position":[[43,3]]},"521":{"position":[[448,3]]},"751":{"position":[[83,3]]},"810":{"position":[[43,3]]}}}],["第五个",{"_index":946,"t":{"308":{"position":[[54,3]]},"720":{"position":[[54,3]]}}}],["第四个",{"_index":826,"t":{"258":{"position":[[55,3]]},"784":{"position":[[55,3]]}}}],["等",{"_index":106,"t":{"15":{"position":[[16,1]]},"129":{"position":[[57,1]]},"144":{"position":[[127,1]]},"180":{"position":[[15,1]]},"224":{"position":[[81,1]]},"325":{"position":[[292,1]]},"336":{"position":[[1295,1]]},"345":{"position":[[2994,1]]},"378":{"position":[[87,1]]},"397":{"position":[[33,1],[60,1],[78,1],[100,1]]},"401":{"position":[[218,1]]},"407":{"position":[[766,1]]},"415":{"position":[[121,1]]},"549":{"position":[[49,1]]},"575":{"position":[[57,1]]},"590":{"position":[[127,1]]},"633":{"position":[[15,1]]},"686":{"position":[[81,1]]},"737":{"position":[[292,1]]},"748":{"position":[[1295,1]]},"757":{"position":[[2994,1]]},"810":{"position":[[87,1]]},"829":{"position":[[33,1],[60,1],[78,1],[100,1]]},"833":{"position":[[218,1]]},"839":{"position":[[766,1]]},"847":{"position":[[121,1]]},"922":{"position":[[219,1]]},"957":{"position":[[158,1]]},"968":{"position":[[32,1]]},"974":{"position":[[71,1]]},"977":{"position":[[143,1]]},"1013":{"position":[[68,1]]},"1055":{"position":[[101,1]]},"1064":{"position":[[310,1],[498,1],[579,1],[729,1],[877,1],[939,1]]},"1075":{"position":[[180,1]]},"1077":{"position":[[48,1],[128,1]]},"1124":{"position":[[47,1]]}}}],["等于",{"_index":210,"t":{"19":{"position":[[113,2]]},"1044":{"position":[[45,2],[58,2],[115,2]]}}}],["等价",{"_index":1372,"t":{"934":{"position":[[58,2]]}}}],["等同于",{"_index":1585,"t":{"1157":{"position":[[22,3]]}}}],["等待",{"_index":661,"t":{"160":{"position":[[490,2]]},"207":{"position":[[281,2]]},"336":{"position":[[513,2],[1225,2]]},"341":{"position":[[1239,2]]},"343":{"position":[[153,2],[180,2],[1145,2]]},"345":{"position":[[4400,2]]},"473":{"position":[[40,2],[55,2]]},"482":{"position":[[28,2]]},"484":{"position":[[31,2]]},"489":{"position":[[512,2]]},"491":{"position":[[110,2],[138,2],[197,2]]},"495":{"position":[[53,2]]},"521":{"position":[[544,2]]},"531":{"position":[[210,2],[385,2]]},"537":{"position":[[405,2]]},"541":{"position":[[13,2],[35,2],[214,2],[509,2],[551,2],[592,2]]},"551":{"position":[[383,2]]},"553":{"position":[[41,2],[87,2]]},"615":{"position":[[281,2]]},"649":{"position":[[490,2]]},"748":{"position":[[513,2],[1225,2]]},"753":{"position":[[1239,2]]},"755":{"position":[[153,2],[180,2],[1145,2]]},"757":{"position":[[4400,2]]}}}],["等等",{"_index":1592,"t":{"1157":{"position":[[173,2]]}}}],["简化",{"_index":1154,"t":{"422":{"position":[[76,2]]}}}],["简单",{"_index":608,"t":{"144":{"position":[[83,2]]},"370":{"position":[[2,2]]},"417":{"position":[[202,2]]},"443":{"position":[[230,2]]},"445":{"position":[[80,2]]},"447":{"position":[[2,2]]},"467":{"position":[[18,2]]},"491":{"position":[[178,2]]},"493":{"position":[[156,2]]},"495":{"position":[[99,2]]},"537":{"position":[[46,2]]},"545":{"position":[[2,2]]},"590":{"position":[[83,2]]},"849":{"position":[[202,2]]},"879":{"position":[[2,2]]},"887":{"position":[[230,2]]},"889":{"position":[[80,2]]},"891":{"position":[[2,2]]},"911":{"position":[[18,2]]},"937":{"position":[[461,2]]},"1033":{"position":[[13,2]]},"1075":{"position":[[61,2]]},"1220":{"position":[[57,2]]}}}],["简史",{"_index":101,"t":{"15":{"position":[[3,2]]}}}],["简洁",{"_index":1254,"t":{"529":{"position":[[56,2]]},"924":{"position":[[76,2]]},"928":{"position":[[51,2]]},"942":{"position":[[47,2]]},"946":{"position":[[48,2]]},"952":{"position":[[78,2]]}}}],["简洁性",{"_index":1203,"t":{"467":{"position":[[9,3]]},"911":{"position":[[9,3]]}}}],["算法",{"_index":1149,"t":{"422":{"position":[[17,2]]}}}],["管理",{"_index":558,"t":{"129":{"position":[[32,2]]},"131":{"position":[[28,2]]},"144":{"position":[[15,2]]},"147":{"position":[[4,2],[11,2]]},"150":{"position":[[407,2]]},"191":{"position":[[8,2]]},"333":{"position":[[84,2]]},"336":{"position":[[201,2]]},"345":{"position":[[133,2],[1028,2]]},"356":{"position":[[517,2]]},"557":{"position":[[62,2]]},"570":{"position":[[181,2]]},"575":{"position":[[32,2]]},"577":{"position":[[28,2]]},"590":{"position":[[15,2]]},"656":{"position":[[4,2],[11,2]]},"659":{"position":[[407,2]]},"664":{"position":[[8,2]]},"745":{"position":[[84,2]]},"748":{"position":[[201,2]]},"757":{"position":[[133,2],[1028,2]]},"865":{"position":[[517,2]]},"1064":{"position":[[617,2],[898,2]]},"1100":{"position":[[35,2]]},"1117":{"position":[[35,2]]},"1218":{"position":[[187,2]]},"1220":{"position":[[71,2]]}}}],["管道",{"_index":1111,"t":{"397":{"position":[[84,2]]},"521":{"position":[[187,2]]},"829":{"position":[[84,2]]}}}],["米特",{"_index":1136,"t":{"417":{"position":[[48,2]]},"849":{"position":[[48,2]]}}}],["类",{"_index":442,"t":{"33":{"position":[[187,1]]},"170":{"position":[[1395,1]]},"345":{"position":[[222,1]]},"348":{"position":[[91,1],[117,1]]},"378":{"position":[[80,1]]},"415":{"position":[[48,1],[66,1],[114,1]]},"417":{"position":[[20,1],[37,1],[108,1],[164,1]]},"440":{"position":[[61,1]]},"443":{"position":[[69,1]]},"454":{"position":[[22,1]]},"623":{"position":[[1395,1]]},"757":{"position":[[222,1]]},"810":{"position":[[80,1]]},"847":{"position":[[48,1],[66,1],[114,1]]},"849":{"position":[[20,1],[37,1],[108,1],[164,1]]},"857":{"position":[[91,1],[117,1]]},"884":{"position":[[61,1]]},"887":{"position":[[69,1]]},"898":{"position":[[22,1]]}}}],["类似",{"_index":288,"t":{"21":{"position":[[279,2]]},"60":{"position":[[12,2]]},"345":{"position":[[436,2]]},"757":{"position":[[436,2]]},"928":{"position":[[30,2]]},"984":{"position":[[43,2],[106,2]]},"1010":{"position":[[1092,2]]},"1013":{"position":[[33,2]]}}}],["类型",{"_index":618,"t":{"150":{"position":[[93,2]]},"170":{"position":[[51,2],[1235,2],[1389,2]]},"279":{"position":[[9,2]]},"284":{"position":[[92,2],[101,2],[113,2]]},"286":{"position":[[6,2],[17,2],[27,2],[34,2],[48,2],[55,2]]},"305":{"position":[[38,2],[118,2]]},"336":{"position":[[1331,2]]},"345":{"position":[[424,2],[2967,2],[3023,2]]},"405":{"position":[[18,2],[501,2]]},"415":{"position":[[205,2],[217,2]]},"447":{"position":[[20,2]]},"454":{"position":[[11,2]]},"467":{"position":[[0,2]]},"623":{"position":[[51,2],[1235,2],[1389,2]]},"659":{"position":[[93,2]]},"748":{"position":[[1331,2]]},"757":{"position":[[424,2],[2967,2],[3023,2]]},"760":{"position":[[92,2],[101,2],[113,2]]},"762":{"position":[[6,2],[17,2],[27,2],[34,2],[48,2],[55,2]]},"781":{"position":[[38,2],[118,2]]},"805":{"position":[[9,2]]},"837":{"position":[[18,2],[501,2]]},"847":{"position":[[205,2],[217,2]]},"891":{"position":[[20,2]]},"898":{"position":[[11,2]]},"911":{"position":[[0,2]]},"916":{"position":[[16,2]]},"928":{"position":[[27,2]]},"930":{"position":[[77,2],[93,2]]},"937":{"position":[[439,2]]},"952":{"position":[[54,2]]},"957":{"position":[[34,2],[176,2]]},"959":{"position":[[20,2],[42,2]]},"963":{"position":[[175,2],[252,2]]},"977":{"position":[[141,2],[212,2]]},"1010":{"position":[[1746,2],[1860,2]]},"1035":{"position":[[37,2]]},"1044":{"position":[[614,2]]}}}],["类型信息",{"_index":1398,"t":{"957":{"position":[[186,4]]}}}],["精确",{"_index":898,"t":{"291":{"position":[[4,2]]},"767":{"position":[[4,2]]}}}],["系列",{"_index":1194,"t":{"457":{"position":[[114,2],[308,2]]},"901":{"position":[[114,2],[308,2]]}}}],["系列产品",{"_index":1206,"t":{"467":{"position":[[61,4]]},"911":{"position":[[61,4]]}}}],["系统",{"_index":567,"t":{"129":{"position":[[96,2]]},"166":{"position":[[4,2],[47,2]]},"188":{"position":[[119,2]]},"303":{"position":[[2,2],[86,2]]},"333":{"position":[[128,2]]},"345":{"position":[[69,2],[125,2]]},"397":{"position":[[2,2],[15,2],[65,2]]},"411":{"position":[[93,2]]},"459":{"position":[[17,2]]},"465":{"position":[[19,2]]},"575":{"position":[[96,2]]},"619":{"position":[[4,2],[47,2]]},"641":{"position":[[119,2]]},"745":{"position":[[128,2]]},"757":{"position":[[69,2],[125,2]]},"779":{"position":[[2,2],[86,2]]},"829":{"position":[[2,2],[15,2],[65,2]]},"843":{"position":[[93,2]]},"903":{"position":[[17,2]]},"909":{"position":[[19,2]]},"1055":{"position":[[97,2]]},"1057":{"position":[[63,2]]},"1064":{"position":[[346,2],[396,2],[428,2],[533,2],[565,2],[595,2],[665,2],[953,2],[1010,2]]},"1067":{"position":[[1,2],[27,2],[50,2]]},"1071":{"position":[[29,2]]},"1077":{"position":[[34,2]]},"1080":{"position":[[59,2]]},"1085":{"position":[[59,2]]},"1102":{"position":[[13,2]]},"1119":{"position":[[13,2]]},"1128":{"position":[[29,2]]},"1161":{"position":[[10,2]]},"1180":{"position":[[11,2]]},"1194":{"position":[[376,2]]},"1216":{"position":[[101,2],[253,2]]}}}],["系统命令",{"_index":1236,"t":{"500":{"position":[[32,4]]}}}],["系统文件",{"_index":1483,"t":{"1064":{"position":[[54,4]]},"1075":{"position":[[155,4]]}}}],["系统管理",{"_index":1246,"t":{"523":{"position":[[216,4]]}}}],["系统配置",{"_index":1493,"t":{"1064":{"position":[[620,4]]}}}],["索引",{"_index":1346,"t":{"854":{"position":[[116,2],[199,2]]}}}],["紧",{"_index":712,"t":{"170":{"position":[[1224,1]]},"331":{"position":[[0,1]]},"623":{"position":[[1224,1]]},"743":{"position":[[0,1]]}}}],["紧密",{"_index":1075,"t":{"370":{"position":[[14,2]]},"879":{"position":[[14,2]]}}}],["累积",{"_index":461,"t":{"40":{"position":[[38,2]]}}}],["繁琐",{"_index":1388,"t":{"952":{"position":[[144,2]]}}}],["繁荣",{"_index":207,"t":{"19":{"position":[[96,2]]},"21":{"position":[[259,2]]}}}],["繁衍",{"_index":196,"t":{"19":{"position":[[42,2]]}}}],["约",{"_index":1624,"t":{"1197":{"position":[[123,1]]},"1216":{"position":[[305,1],[318,1],[334,1]]}}}],["级",{"_index":1477,"t":{"1055":{"position":[[75,1]]},"1220":{"position":[[196,1]]}}}],["级别",{"_index":807,"t":{"224":{"position":[[34,2],[60,2]]},"559":{"position":[[543,2]]},"686":{"position":[[34,2],[60,2]]}}}],["纵览",{"_index":102,"t":{"15":{"position":[[6,2]]}}}],["线程",{"_index":555,"t":{"129":{"position":[[23,2]]},"186":{"position":[[108,2]]},"527":{"position":[[44,2]]},"541":{"position":[[33,2]]},"575":{"position":[[23,2]]},"639":{"position":[[108,2]]},"1153":{"position":[[32,2],[76,2]]}}}],["组",{"_index":1640,"t":{"1216":{"position":[[255,1]]}}}],["组件",{"_index":699,"t":{"170":{"position":[[167,2],[187,2],[196,2]]},"331":{"position":[[4,2],[61,2]]},"351":{"position":[[64,2],[82,2]]},"358":{"position":[[744,2],[749,2],[762,2]]},"623":{"position":[[167,2],[187,2],[196,2]]},"743":{"position":[[4,2],[61,2]]},"860":{"position":[[64,2],[82,2]]},"867":{"position":[[744,2],[749,2],[762,2]]}}}],["组合",{"_index":720,"t":{"172":{"position":[[23,2]]},"265":{"position":[[370,2]]},"281":{"position":[[57,2]]},"299":{"position":[[119,2]]},"305":{"position":[[31,2]]},"343":{"position":[[99,2]]},"345":{"position":[[400,2]]},"372":{"position":[[44,2]]},"378":{"position":[[135,2]]},"403":{"position":[[19,2]]},"409":{"position":[[151,2]]},"411":{"position":[[28,2]]},"417":{"position":[[0,2],[15,2]]},"625":{"position":[[23,2]]},"755":{"position":[[99,2]]},"757":{"position":[[400,2]]},"775":{"position":[[119,2]]},"781":{"position":[[31,2]]},"791":{"position":[[370,2]]},"807":{"position":[[57,2]]},"810":{"position":[[135,2]]},"835":{"position":[[19,2]]},"841":{"position":[[151,2]]},"843":{"position":[[28,2]]},"849":{"position":[[0,2],[15,2]]},"881":{"position":[[44,2]]}}}],["组成部分",{"_index":1332,"t":{"570":{"position":[[151,4]]}}}],["组织",{"_index":415,"t":{"26":{"position":[[73,2]]}}}],["细粒度",{"_index":1056,"t":{"351":{"position":[[78,3]]},"860":{"position":[[78,3]]}}}],["细节",{"_index":949,"t":{"308":{"position":[[119,2],[122,2]]},"415":{"position":[[393,2],[396,2]]},"720":{"position":[[119,2],[122,2]]},"847":{"position":[[393,2],[396,2]]}}}],["终止",{"_index":765,"t":{"184":{"position":[[2023,2]]},"637":{"position":[[2023,2]]},"1194":{"position":[[176,2]]},"1200":{"position":[[1218,2]]},"1214":{"position":[[298,2]]}}}],["终端",{"_index":1498,"t":{"1064":{"position":[[720,2],[870,2],[916,2],[951,2],[1066,2]]}}}],["终端设备",{"_index":1503,"t":{"1064":{"position":[[837,4],[901,4],[1014,4]]}}}],["经历",{"_index":290,"t":{"21":{"position":[[289,2]]}}}],["经济",{"_index":214,"t":{"21":{"position":[[8,2],[141,2],[177,2],[254,2],[305,2],[612,2]]}}}],["经验",{"_index":84,"t":{"13":{"position":[[212,2]]}}}],["结合",{"_index":1265,"t":{"533":{"position":[[721,2]]},"553":{"position":[[241,2],[383,2]]},"974":{"position":[[54,2]]},"1052":{"position":[[41,2]]},"1175":{"position":[[1,2]]}}}],["结尾",{"_index":493,"t":{"64":{"position":[[17,2]]},"97":{"position":[[8,2]]},"1044":{"position":[[239,2]]}}}],["结束",{"_index":975,"t":{"336":{"position":[[517,2]]},"395":{"position":[[228,2]]},"537":{"position":[[507,2]]},"553":{"position":[[56,2]]},"748":{"position":[[517,2]]},"827":{"position":[[228,2]]},"1151":{"position":[[380,2]]},"1194":{"position":[[646,2],[856,2],[876,2]]}}}],["结构",{"_index":614,"t":{"147":{"position":[[18,2]]},"155":{"position":[[21,2]]},"170":{"position":[[1768,2]]},"318":{"position":[[2,2]]},"336":{"position":[[98,2],[1312,2]]},"341":{"position":[[185,2],[287,2]]},"343":{"position":[[273,2],[375,2]]},"345":{"position":[[453,2],[1145,2],[3039,2]]},"351":{"position":[[34,2]]},"356":{"position":[[548,2]]},"368":{"position":[[3,2],[36,2]]},"372":{"position":[[31,2],[88,2]]},"380":{"position":[[69,2]]},"440":{"position":[[81,2]]},"454":{"position":[[24,2]]},"502":{"position":[[31,2]]},"623":{"position":[[1768,2]]},"644":{"position":[[21,2]]},"656":{"position":[[18,2]]},"730":{"position":[[2,2]]},"748":{"position":[[98,2],[1312,2]]},"753":{"position":[[185,2],[287,2]]},"755":{"position":[[273,2],[375,2]]},"757":{"position":[[453,2],[1145,2],[3039,2]]},"812":{"position":[[69,2]]},"860":{"position":[[34,2]]},"865":{"position":[[548,2]]},"877":{"position":[[3,2],[36,2]]},"881":{"position":[[31,2],[88,2]]},"884":{"position":[[81,2]]},"898":{"position":[[24,2]]},"918":{"position":[[35,2]]},"937":{"position":[[481,2]]},"957":{"position":[[117,2],[216,2],[236,2]]},"968":{"position":[[0,2]]},"1010":{"position":[[945,2],[1120,2]]},"1038":{"position":[[32,2]]},"1048":{"position":[[236,2]]}}}],["结构复杂",{"_index":1191,"t":{"454":{"position":[[32,4]]},"898":{"position":[[32,4]]}}}],["结果",{"_index":431,"t":{"31":{"position":[[76,2]]},"33":{"position":[[68,2]]},"36":{"position":[[78,2]]},"38":{"position":[[111,2]]},"336":{"position":[[1229,2]]},"341":{"position":[[208,2]]},"343":{"position":[[296,2]]},"345":{"position":[[4402,2]]},"748":{"position":[[1229,2]]},"753":{"position":[[208,2]]},"755":{"position":[[296,2]]},"757":{"position":[[4402,2]]},"922":{"position":[[52,2]]}}}],["绕过",{"_index":1622,"t":{"1197":{"position":[[80,2]]}}}],["绝对",{"_index":170,"t":{"17":{"position":[[184,2]]},"21":{"position":[[36,2]]}}}],["统一",{"_index":804,"t":{"224":{"position":[[17,2]]},"345":{"position":[[429,2]]},"686":{"position":[[17,2]]},"757":{"position":[[429,2]]}}}],["统治",{"_index":237,"t":{"21":{"position":[[104,2]]}}}],["统计",{"_index":1309,"t":{"557":{"position":[[317,2]]}}}],["继承",{"_index":721,"t":{"172":{"position":[[27,2]]},"284":{"position":[[152,2]]},"299":{"position":[[14,2]]},"372":{"position":[[48,2]]},"415":{"position":[[142,2]]},"417":{"position":[[4,2],[21,2]]},"440":{"position":[[63,2]]},"625":{"position":[[27,2]]},"760":{"position":[[152,2]]},"775":{"position":[[14,2]]},"847":{"position":[[142,2]]},"849":{"position":[[4,2],[21,2]]},"881":{"position":[[48,2]]},"884":{"position":[[63,2]]}}}],["继续",{"_index":1270,"t":{"537":{"position":[[25,2]]}}}],["继续执行",{"_index":1222,"t":{"489":{"position":[[533,4]]},"539":{"position":[[502,4]]},"1142":{"position":[[64,4]]},"1194":{"position":[[772,4]]}}}],["维护",{"_index":476,"t":{"42":{"position":[[163,2]]},"166":{"position":[[93,2]]},"353":{"position":[[7,2]]},"372":{"position":[[7,2]]},"413":{"position":[[34,2]]},"619":{"position":[[93,2]]},"845":{"position":[[34,2]]},"862":{"position":[[7,2]]},"881":{"position":[[7,2]]},"1080":{"position":[[96,2]]},"1085":{"position":[[96,2]]},"1100":{"position":[[99,2],[106,2]]},"1102":{"position":[[65,2]]},"1117":{"position":[[99,2],[106,2]]},"1119":{"position":[[65,2]]},"1126":{"position":[[35,2]]}}}],["缓冲",{"_index":1225,"t":{"495":{"position":[[30,2]]},"531":{"position":[[156,2],[308,2]]}}}],["缓存",{"_index":922,"t":{"303":{"position":[[0,2],[7,2],[15,2],[27,2]]},"779":{"position":[[0,2],[7,2],[15,2],[27,2]]},"854":{"position":[[104,2]]}}}],["缓解",{"_index":310,"t":{"21":{"position":[[361,2]]}}}],["编写",{"_index":474,"t":{"42":{"position":[[156,2]]},"372":{"position":[[4,2]]},"497":{"position":[[54,2]]},"881":{"position":[[4,2]]},"1124":{"position":[[52,2]]},"1220":{"position":[[181,2]]}}}],["编号",{"_index":737,"t":{"176":{"position":[[60,2]]},"629":{"position":[[60,2]]}}}],["编码",{"_index":687,"t":{"170":{"position":[[61,2]]},"186":{"position":[[4,2]]},"623":{"position":[[61,2]]},"639":{"position":[[4,2]]},"1044":{"position":[[376,2]]}}}],["编程",{"_index":663,"t":{"166":{"position":[[1,2]]},"170":{"position":[[125,2]]},"310":{"position":[[15,2]]},"343":{"position":[[92,2]]},"419":{"position":[[15,2],[45,2]]},"619":{"position":[[1,2]]},"623":{"position":[[125,2]]},"722":{"position":[[15,2]]},"755":{"position":[[92,2]]},"851":{"position":[[15,2],[45,2]]},"924":{"position":[[56,2]]}}}],["编程语言",{"_index":1540,"t":{"1124":{"position":[[48,4]]}}}],["编译",{"_index":962,"t":{"329":{"position":[[36,2]]},"741":{"position":[[36,2]]},"1133":{"position":[[10,2]]}}}],["编译器",{"_index":624,"t":{"150":{"position":[[248,3]]},"659":{"position":[[248,3]]}}}],["缺乏",{"_index":141,"t":{"17":{"position":[[85,2]]}}}],["缺点",{"_index":1377,"t":{"937":{"position":[[423,2]]},"942":{"position":[[3,2]]},"946":{"position":[[3,2]]},"950":{"position":[[3,2]]}}}],["网关",{"_index":929,"t":{"303":{"position":[[62,2]]},"779":{"position":[[62,2]]},"1218":{"position":[[210,2],[214,2]]}}}],["网络",{"_index":1090,"t":{"375":{"position":[[192,2],[471,2]]},"409":{"position":[[648,2]]},"841":{"position":[[648,2]]},"977":{"position":[[58,2]]},"1128":{"position":[[47,2]]}}}],["网络协议",{"_index":1623,"t":{"1197":{"position":[[82,4]]},"1218":{"position":[[230,4]]}}}],["网络接口",{"_index":1494,"t":{"1064":{"position":[[677,4],[873,4]]}}}],["网络日志",{"_index":935,"t":{"303":{"position":[[100,4]]},"397":{"position":[[29,4]]},"399":{"position":[[19,4]]},"407":{"position":[[6,4],[46,4]]},"409":{"position":[[450,4]]},"779":{"position":[[100,4]]},"829":{"position":[[29,4]]},"831":{"position":[[19,4]]},"839":{"position":[[6,4],[46,4]]},"841":{"position":[[450,4]]}}}],["置于",{"_index":49,"t":{"13":{"position":[[98,2]]}}}],["考虑",{"_index":971,"t":{"333":{"position":[[76,2]]},"491":{"position":[[154,2]]},"493":{"position":[[163,2]]},"553":{"position":[[311,2]]},"745":{"position":[[76,2]]},"1214":{"position":[[339,2]]}}}],["者",{"_index":1226,"t":{"495":{"position":[[55,1]]}}}],["而是",{"_index":191,"t":{"19":{"position":[[22,2]]},"21":{"position":[[277,2]]},"188":{"position":[[20,2]]},"641":{"position":[[20,2]]}}}],["而言",{"_index":213,"t":{"21":{"position":[[5,2]]}}}],["耗时",{"_index":1024,"t":{"343":{"position":[[1067,2]]},"755":{"position":[[1067,2]]},"1207":{"position":[[361,2]]}}}],["耦",{"_index":691,"t":{"170":{"position":[[79,1]]},"345":{"position":[[63,1],[3014,1]]},"463":{"position":[[5,1]]},"623":{"position":[[79,1]]},"757":{"position":[[63,1],[3014,1]]},"907":{"position":[[5,1]]}}}],["耦合",{"_index":585,"t":{"134":{"position":[[102,2]]},"158":{"position":[[465,2]]},"170":{"position":[[202,2],[1225,2]]},"194":{"position":[[83,2]]},"331":{"position":[[1,2]]},"356":{"position":[[542,2]]},"417":{"position":[[112,2]]},"440":{"position":[[40,2]]},"580":{"position":[[102,2]]},"623":{"position":[[202,2],[1225,2]]},"647":{"position":[[465,2]]},"667":{"position":[[83,2]]},"743":{"position":[[1,2]]},"849":{"position":[[112,2]]},"865":{"position":[[542,2]]},"884":{"position":[[40,2]]}}}],["耦合度",{"_index":1146,"t":{"419":{"position":[[57,3]]},"851":{"position":[[57,3]]}}}],["职责",{"_index":553,"t":{"129":{"position":[[4,2]]},"170":{"position":[[162,2]]},"260":{"position":[[40,2]]},"348":{"position":[[2,2],[128,2]]},"351":{"position":[[61,2]]},"356":{"position":[[28,2]]},"358":{"position":[[7,2],[325,2],[513,2],[759,2]]},"365":{"position":[[130,2]]},"415":{"position":[[2,2],[72,2]]},"419":{"position":[[33,2]]},"575":{"position":[[4,2]]},"623":{"position":[[162,2]]},"786":{"position":[[40,2]]},"847":{"position":[[2,2],[72,2]]},"851":{"position":[[33,2]]},"857":{"position":[[2,2],[128,2]]},"860":{"position":[[61,2]]},"865":{"position":[[28,2]]},"867":{"position":[[7,2],[325,2],[513,2],[759,2]]},"874":{"position":[[130,2]]}}}],["聚合",{"_index":726,"t":{"172":{"position":[[148,2]]},"178":{"position":[[50,2]]},"341":{"position":[[284,2]]},"343":{"position":[[372,2]]},"625":{"position":[[148,2]]},"631":{"position":[[50,2]]},"753":{"position":[[284,2]]},"755":{"position":[[372,2]]}}}],["聚居",{"_index":235,"t":{"21":{"position":[[96,2]]}}}],["股票",{"_index":250,"t":{"21":{"position":[[154,2]]}}}],["背景",{"_index":64,"t":{"13":{"position":[[146,2]]}}}],["胖",{"_index":841,"t":{"260":{"position":[[26,1]]},"263":{"position":[[6,1]]},"786":{"position":[[26,1]]},"789":{"position":[[6,1]]}}}],["能",{"_index":7,"t":{"11":{"position":[[0,1],[10,1]]},"17":{"position":[[105,1]]},"23":{"position":[[73,1]]},"178":{"position":[[7,1]]},"201":{"position":[[3,1]]},"333":{"position":[[98,1]]},"435":{"position":[[87,1]]},"609":{"position":[[3,1]]},"631":{"position":[[7,1]]},"745":{"position":[[98,1]]}}}],["能力",{"_index":725,"t":{"172":{"position":[[140,2]]},"188":{"position":[[56,2]]},"625":{"position":[[140,2]]},"641":{"position":[[56,2]]}}}],["能够",{"_index":667,"t":{"166":{"position":[[49,2]]},"286":{"position":[[10,2]]},"345":{"position":[[127,2]]},"415":{"position":[[209,2]]},"619":{"position":[[49,2]]},"757":{"position":[[127,2]]},"762":{"position":[[10,2]]},"847":{"position":[[209,2]]},"1064":{"position":[[320,2],[1159,2]]},"1220":{"position":[[135,2]]}}}],["脆弱",{"_index":862,"t":{"279":{"position":[[24,2]]},"805":{"position":[[24,2]]}}}],["脚本",{"_index":1594,"t":{"1159":{"position":[[23,2]]}}}],["脱离",{"_index":258,"t":{"21":{"position":[[173,2]]}}}],["自主权",{"_index":379,"t":{"23":{"position":[[48,3],[88,3]]}}}],["自信",{"_index":282,"t":{"21":{"position":[[249,2]]}}}],["自动",{"_index":619,"t":{"150":{"position":[[96,2],[251,2]]},"427":{"position":[[504,2]]},"551":{"position":[[438,2]]},"557":{"position":[[57,2]]},"659":{"position":[[96,2],[251,2]]},"1035":{"position":[[44,2]]},"1148":{"position":[[407,2]]},"1194":{"position":[[368,2]]},"1216":{"position":[[170,2]]}}}],["自动化",{"_index":1244,"t":{"523":{"position":[[210,3]]},"1159":{"position":[[28,3]]}}}],["自定义",{"_index":1335,"t":{"570":{"position":[[193,3]]},"977":{"position":[[209,3]]},"984":{"position":[[25,3],[70,3],[166,3]]},"993":{"position":[[169,3]]},"1031":{"position":[[159,3]]},"1038":{"position":[[47,3]]},"1046":{"position":[[2,3]]},"1188":{"position":[[97,3]]}}}],["自己",{"_index":376,"t":{"23":{"position":[[36,2],[101,2]]},"144":{"position":[[55,2]]},"150":{"position":[[1484,2]]},"158":{"position":[[837,2]]},"170":{"position":[[172,2]]},"237":{"position":[[70,2]]},"495":{"position":[[91,2]]},"590":{"position":[[55,2]]},"623":{"position":[[172,2]]},"647":{"position":[[837,2]]},"659":{"position":[[1484,2]]},"699":{"position":[[70,2]]}}}],["自我",{"_index":202,"t":{"19":{"position":[[68,2]]}}}],["自然",{"_index":146,"t":{"17":{"position":[[100,2]]}}}],["自由",{"_index":153,"t":{"17":{"position":[[129,2],[169,2],[187,2]]}}}],["自私",{"_index":357,"t":{"21":{"position":[[585,2]]}}}],["至关重要",{"_index":1233,"t":{"497":{"position":[[63,4]]}}}],["至少",{"_index":1471,"t":{"1044":{"position":[[535,2]]}}}],["至此",{"_index":1588,"t":{"1157":{"position":[[82,2]]}}}],["航海",{"_index":117,"t":{"17":{"position":[[1,2]]}}}],["艰难",{"_index":231,"t":{"21":{"position":[[82,2]]}}}],["范围",{"_index":1204,"t":{"467":{"position":[[15,2]]},"911":{"position":[[15,2]]}}}],["荷兰",{"_index":126,"t":{"17":{"position":[[34,2],[58,2],[122,2]]}}}],["获取",{"_index":491,"t":{"64":{"position":[[0,2]]},"203":{"position":[[119,2]]},"251":{"position":[[84,2]]},"345":{"position":[[1586,2],[2715,2]]},"480":{"position":[[25,2],[62,2]]},"491":{"position":[[37,2]]},"504":{"position":[[116,2]]},"523":{"position":[[88,2],[116,2]]},"559":{"position":[[0,2]]},"568":{"position":[[77,2]]},"611":{"position":[[119,2]]},"713":{"position":[[84,2]]},"757":{"position":[[1586,2],[2715,2]]},"957":{"position":[[69,2],[181,2],[196,2]]},"959":{"position":[[52,2],[85,2]]},"963":{"position":[[320,2],[358,2]]},"1064":{"position":[[394,2],[527,2],[643,2]]}}}],["菜单栏",{"_index":1349,"t":{"854":{"position":[[128,3]]}}}],["葡萄牙",{"_index":120,"t":{"17":{"position":[[14,3]]}}}],["虚假",{"_index":1218,"t":{"487":{"position":[[46,2]]},"491":{"position":[[69,2]]}}}],["虚拟",{"_index":249,"t":{"21":{"position":[[148,2]]},"1064":{"position":[[45,2],[331,2],[417,2],[552,2]]},"1075":{"position":[[191,2]]}}}],["虽然",{"_index":880,"t":{"284":{"position":[[142,2]]},"329":{"position":[[0,2]]},"440":{"position":[[57,2]]},"741":{"position":[[0,2]]},"760":{"position":[[142,2]]},"884":{"position":[[57,2]]}}}],["蛋糕",{"_index":223,"t":{"21":{"position":[[46,2]]}}}],["行",{"_index":483,"t":{"50":{"position":[[28,1],[55,1],[76,1]]},"934":{"position":[[133,1]]},"1144":{"position":[[27,1],[92,1]]}}}],["行为",{"_index":409,"t":{"26":{"position":[[48,2]]},"28":{"position":[[3,2]]},"172":{"position":[[31,2]]},"174":{"position":[[44,2]]},"231":{"position":[[108,2]]},"286":{"position":[[20,2],[39,2]]},"289":{"position":[[370,2]]},"305":{"position":[[12,2],[110,2]]},"415":{"position":[[230,2]]},"625":{"position":[[31,2]]},"627":{"position":[[44,2]]},"693":{"position":[[108,2]]},"762":{"position":[[20,2],[39,2]]},"765":{"position":[[370,2]]},"781":{"position":[[12,2],[110,2]]},"847":{"position":[[230,2]]}}}],["行号",{"_index":481,"t":{"46":{"position":[[35,2]]}}}],["行时",{"_index":1589,"t":{"1157":{"position":[[84,2]]}}}],["表现",{"_index":1325,"t":{"570":{"position":[[22,2]]}}}],["表示",{"_index":623,"t":{"150":{"position":[[245,2]]},"158":{"position":[[134,2],[141,2]]},"336":{"position":[[89,2]]},"557":{"position":[[144,2]]},"647":{"position":[[134,2],[141,2]]},"659":{"position":[[245,2]]},"748":{"position":[[89,2]]},"928":{"position":[[23,2]]},"930":{"position":[[75,2]]},"959":{"position":[[37,2],[70,2]]},"1048":{"position":[[229,2]]},"1057":{"position":[[139,2]]},"1064":{"position":[[1034,2]]},"1148":{"position":[[348,2],[360,2]]}}}],["表达式",{"_index":1590,"t":{"1157":{"position":[[103,3],[112,3]]}}}],["被迫",{"_index":830,"t":{"258":{"position":[[95,2]]},"263":{"position":[[332,2],[381,2]]},"279":{"position":[[11,2]]},"281":{"position":[[21,2]]},"415":{"position":[[290,2]]},"784":{"position":[[95,2]]},"789":{"position":[[332,2],[381,2]]},"805":{"position":[[11,2]]},"807":{"position":[[21,2]]},"847":{"position":[[290,2]]}}}],["西",{"_index":46,"t":{"13":{"position":[[91,1]]}}}],["西班牙",{"_index":119,"t":{"17":{"position":[[10,3]]}}}],["要",{"_index":715,"t":{"170":{"position":[[1742,1]]},"305":{"position":[[108,1]]},"431":{"position":[[0,1]]},"447":{"position":[[22,1]]},"553":{"position":[[230,1]]},"623":{"position":[[1742,1]]},"781":{"position":[[108,1]]},"891":{"position":[[22,1]]}}}],["要求",{"_index":821,"t":{"247":{"position":[[285,2]]},"709":{"position":[[285,2]]},"1075":{"position":[[258,2]]},"1218":{"position":[[196,2]]}}}],["覆盖",{"_index":425,"t":{"28":{"position":[[37,2]]},"31":{"position":[[126,2]]},"33":{"position":[[48,2],[123,2]]},"36":{"position":[[133,2]]},"38":{"position":[[261,2]]},"40":{"position":[[93,2]]},"42":{"position":[[30,2],[132,2]]}}}],["观察",{"_index":1581,"t":{"1155":{"position":[[4,2],[62,2],[120,2]]},"1157":{"position":[[91,2]]}}}],["观念",{"_index":197,"t":{"19":{"position":[[45,2]]}}}],["规则",{"_index":420,"t":{"28":{"position":[[17,2],[34,2],[42,2],[59,2],[71,2],[76,2]]},"33":{"position":[[53,2],[169,2],[201,2]]},"36":{"position":[[160,2]]},"38":{"position":[[174,2],[195,2]]},"40":{"position":[[28,2],[80,2],[91,2]]},"42":{"position":[[12,2],[27,2],[60,2]]},"174":{"position":[[16,2]]},"184":{"position":[[1912,2]]},"336":{"position":[[93,2],[203,2],[342,2]]},"341":{"position":[[191,2],[827,2]]},"343":{"position":[[279,2]]},"345":{"position":[[1340,2],[1588,2],[2717,2]]},"627":{"position":[[16,2]]},"637":{"position":[[1912,2]]},"748":{"position":[[93,2],[203,2],[342,2]]},"753":{"position":[[191,2],[827,2]]},"755":{"position":[[279,2]]},"757":{"position":[[1340,2],[1588,2],[2717,2]]},"984":{"position":[[101,2]]},"1038":{"position":[[52,2]]},"1046":{"position":[[7,2]]}}}],["规模",{"_index":672,"t":{"166":{"position":[[66,2]]},"178":{"position":[[9,2]]},"619":{"position":[[66,2]]},"631":{"position":[[9,2]]}}}],["规避",{"_index":1101,"t":{"375":{"position":[[504,2]]}}}],["视角",{"_index":115,"t":{"15":{"position":[[49,2]]}}}],["角度",{"_index":335,"t":{"21":{"position":[[490,2]]}}}],["角色",{"_index":339,"t":{"21":{"position":[[509,2]]}}}],["解",{"_index":690,"t":{"170":{"position":[[78,1]]},"345":{"position":[[62,1],[3013,1]]},"463":{"position":[[4,1]]},"623":{"position":[[78,1]]},"757":{"position":[[62,1],[3013,1]]},"907":{"position":[[4,1]]}}}],["解决",{"_index":1083,"t":{"375":{"position":[[82,2]]}}}],["解密",{"_index":801,"t":{"215":{"position":[[2982,2]]},"237":{"position":[[57,2]]},"677":{"position":[[2982,2]]},"699":{"position":[[57,2]]},"1010":{"position":[[1054,2]]}}}],["解析",{"_index":740,"t":{"176":{"position":[[71,2]]},"365":{"position":[[84,2]]},"533":{"position":[[564,2]]},"629":{"position":[[71,2]]},"874":{"position":[[84,2]]},"937":{"position":[[32,2],[50,2],[469,2],[472,2]]},"942":{"position":[[6,2]]},"946":{"position":[[29,2]]},"950":{"position":[[18,2]]},"952":{"position":[[35,2],[45,2],[121,2],[133,2],[164,2],[187,2]]},"954":{"position":[[36,2],[58,2],[96,2]]},"957":{"position":[[115,2]]},"1010":{"position":[[1916,2]]},"1013":{"position":[[13,2]]},"1028":{"position":[[117,2]]},"1031":{"position":[[23,2],[162,2],[277,2]]},"1033":{"position":[[26,2]]}}}],["解释",{"_index":432,"t":{"31":{"position":[[93,2]]},"33":{"position":[[83,2]]},"36":{"position":[[109,2]]},"38":{"position":[[154,2]]},"531":{"position":[[274,2]]},"537":{"position":[[438,2]]},"539":{"position":[[418,2]]},"541":{"position":[[535,2]]},"543":{"position":[[346,2]]},"547":{"position":[[289,2]]},"551":{"position":[[409,2]]}}}],["解锁",{"_index":1256,"t":{"529":{"position":[[66,2]]}}}],["触发",{"_index":1037,"t":{"345":{"position":[[329,2]]},"533":{"position":[[668,2]]},"541":{"position":[[41,2],[437,2]]},"553":{"position":[[84,2]]},"557":{"position":[[23,2],[129,2],[159,2]]},"757":{"position":[[329,2]]},"1182":{"position":[[22,2]]}}}],["警告",{"_index":1120,"t":{"409":{"position":[[301,2]]},"841":{"position":[[301,2]]},"854":{"position":[[4,2]]}}}],["计数",{"_index":1271,"t":{"537":{"position":[[169,2],[353,2],[454,2],[512,2]]},"539":{"position":[[246,2],[401,2]]},"547":{"position":[[272,2]]}}}],["计数器",{"_index":1572,"t":{"1148":{"position":[[352,3]]}}}],["计时",{"_index":751,"t":{"180":{"position":[[61,2]]},"633":{"position":[[61,2]]}}}],["计算",{"_index":620,"t":{"150":{"position":[[98,2],[253,2]]},"435":{"position":[[81,2]]},"553":{"position":[[120,2]]},"659":{"position":[[98,2],[253,2]]},"924":{"position":[[28,2]]}}}],["计算成本",{"_index":1160,"t":{"427":{"position":[[437,4]]},"437":{"position":[[349,4]]}}}],["订单",{"_index":708,"t":{"170":{"position":[[867,2],[899,2],[1415,2],[1537,2],[1569,2]]},"623":{"position":[[867,2],[899,2],[1415,2],[1537,2],[1569,2]]}}}],["认证",{"_index":1097,"t":{"375":{"position":[[398,2]]},"1216":{"position":[[267,2]]}}}],["讨论",{"_index":1530,"t":{"1077":{"position":[[121,2]]}}}],["记住",{"_index":1079,"t":{"372":{"position":[[82,2]]},"881":{"position":[[82,2]]}}}],["记录",{"_index":1635,"t":{"1214":{"position":[[404,2]]}}}],["许多",{"_index":1492,"t":{"1064":{"position":[[586,2]]}}}],["讽刺",{"_index":401,"t":{"23":{"position":[[148,2]]}}}],["设备",{"_index":1484,"t":{"1064":{"position":[[351,2],[575,2],[588,2],[653,2],[711,2],[727,2],[734,2],[748,2],[780,2],[805,2],[825,2],[863,2],[921,2]]}}}],["设定",{"_index":1609,"t":{"1188":{"position":[[107,2]]}}}],["设置",{"_index":644,"t":{"155":{"position":[[56,2]]},"336":{"position":[[91,2],[210,2]]},"341":{"position":[[189,2]]},"343":{"position":[[67,2],[277,2]]},"345":{"position":[[1338,2]]},"375":{"position":[[93,2],[289,2]]},"557":{"position":[[121,2],[166,2],[182,2],[256,2]]},"559":{"position":[[161,2],[170,2],[532,2]]},"570":{"position":[[29,2]]},"644":{"position":[[56,2]]},"748":{"position":[[91,2],[210,2]]},"753":{"position":[[189,2]]},"755":{"position":[[67,2],[277,2]]},"757":{"position":[[1338,2]]},"918":{"position":[[57,2]]},"963":{"position":[[34,2]]},"1136":{"position":[[79,2]]},"1142":{"position":[[16,2]]},"1144":{"position":[[16,2],[55,2],[88,2]]},"1151":{"position":[[139,2],[393,2]]},"1194":{"position":[[241,2]]},"1200":{"position":[[393,2],[467,2]]},"1205":{"position":[[420,2],[490,2]]},"1216":{"position":[[234,2]]},"1220":{"position":[[86,2]]}}}],["设计",{"_index":188,"t":{"19":{"position":[[14,2]]},"110":{"position":[[12,2]]},"134":{"position":[[104,2]]},"158":{"position":[[467,2],[573,2]]},"166":{"position":[[6,2]]},"168":{"position":[[24,2]]},"170":{"position":[[116,2]]},"188":{"position":[[17,2]]},"194":{"position":[[85,2]]},"229":{"position":[[4,2]]},"258":{"position":[[172,2]]},"272":{"position":[[6,2],[110,2]]},"281":{"position":[[12,2],[90,2]]},"305":{"position":[[28,2]]},"336":{"position":[[1236,2]]},"345":{"position":[[2951,2]]},"348":{"position":[[165,2]]},"372":{"position":[[79,2]]},"411":{"position":[[70,2],[86,2]]},"413":{"position":[[16,2],[55,2]]},"417":{"position":[[200,2],[268,2]]},"580":{"position":[[104,2]]},"592":{"position":[[12,2]]},"619":{"position":[[6,2]]},"621":{"position":[[24,2]]},"623":{"position":[[116,2]]},"641":{"position":[[17,2]]},"647":{"position":[[467,2],[573,2]]},"667":{"position":[[85,2]]},"691":{"position":[[4,2]]},"748":{"position":[[1236,2]]},"757":{"position":[[2951,2]]},"781":{"position":[[28,2]]},"784":{"position":[[172,2]]},"798":{"position":[[6,2],[110,2]]},"807":{"position":[[12,2],[90,2]]},"843":{"position":[[70,2],[86,2]]},"845":{"position":[[16,2],[55,2]]},"849":{"position":[[200,2],[268,2]]},"857":{"position":[[165,2]]},"881":{"position":[[79,2]]},"1035":{"position":[[27,2]]},"1126":{"position":[[88,2]]}}}],["设计模式",{"_index":1186,"t":{"440":{"position":[[10,4]]},"884":{"position":[[10,4]]}}}],["访问",{"_index":588,"t":{"134":{"position":[[270,2]]},"543":{"position":[[408,2]]},"553":{"position":[[347,2]]},"580":{"position":[[270,2]]},"957":{"position":[[231,2]]},"1057":{"position":[[39,2]]},"1064":{"position":[[324,2],[778,2]]},"1069":{"position":[[29,2]]},"1075":{"position":[[81,2]]},"1148":{"position":[[333,2]]},"1197":{"position":[[97,2]]},"1216":{"position":[[226,2]]},"1218":{"position":[[184,2]]}}}],["证书",{"_index":1087,"t":{"375":{"position":[[171,2],[197,2],[212,2],[218,2],[284,2]]}}}],["证明",{"_index":33,"t":{"13":{"position":[[64,2]]}}}],["识别",{"_index":1343,"t":{"854":{"position":[[50,2]]}}}],["诊断",{"_index":748,"t":{"180":{"position":[[21,2]]},"188":{"position":[[67,2]]},"570":{"position":[[174,2]]},"633":{"position":[[21,2]]},"641":{"position":[[67,2]]},"1124":{"position":[[80,2]]},"1220":{"position":[[211,2]]}}}],["话",{"_index":9,"t":{"11":{"position":[[4,1],[14,1]]}}}],["详细",{"_index":1095,"t":{"375":{"position":[[315,2]]},"555":{"position":[[54,2]]},"1026":{"position":[[158,2]]},"1077":{"position":[[115,2]]},"1133":{"position":[[12,2]]}}}],["语义",{"_index":942,"t":{"305":{"position":[[112,2]]},"495":{"position":[[140,2]]},"781":{"position":[[112,2]]}}}],["语句",{"_index":1258,"t":{"533":{"position":[[7,2]]},"934":{"position":[[128,2]]},"974":{"position":[[42,2]]}}}],["语法",{"_index":419,"t":{"28":{"position":[[0,2]]},"305":{"position":[[104,2]]},"781":{"position":[[104,2]]},"952":{"position":[[76,2]]}}}],["语言",{"_index":833,"t":{"258":{"position":[[137,2]]},"281":{"position":[[36,2]]},"284":{"position":[[138,2]]},"308":{"position":[[135,2]]},"348":{"position":[[135,2]]},"378":{"position":[[107,2]]},"529":{"position":[[47,2]]},"553":{"position":[[328,2]]},"720":{"position":[[135,2]]},"760":{"position":[[138,2]]},"784":{"position":[[137,2]]},"807":{"position":[[36,2]]},"810":{"position":[[107,2]]},"857":{"position":[[135,2]]},"957":{"position":[[7,2]]},"1038":{"position":[[15,2]]}}}],["说",{"_index":8,"t":{"11":{"position":[[1,1],[11,1]]}}}],["说明",{"_index":977,"t":{"336":{"position":[[1145,2]]},"339":{"position":[[127,2],[217,2]]},"427":{"position":[[337,2]]},"429":{"position":[[380,2]]},"435":{"position":[[3,2]]},"748":{"position":[[1145,2]]},"751":{"position":[[127,2],[217,2]]}}}],["请求",{"_index":750,"t":{"180":{"position":[[54,2]]},"277":{"position":[[136,2]]},"327":{"position":[[360,2]]},"336":{"position":[[96,2],[1252,2]]},"341":{"position":[[183,2],[829,2]]},"343":{"position":[[271,2]]},"345":{"position":[[51,2],[231,2],[426,2],[707,2],[908,2]]},"395":{"position":[[167,2],[226,2]]},"533":{"position":[[733,2]]},"633":{"position":[[54,2]]},"739":{"position":[[360,2]]},"748":{"position":[[96,2],[1252,2]]},"753":{"position":[[183,2],[829,2]]},"755":{"position":[[271,2]]},"757":{"position":[[51,2],[231,2],[426,2],[707,2],[908,2]]},"803":{"position":[[136,2]]},"827":{"position":[[167,2],[226,2]]},"1207":{"position":[[355,2]]},"1212":{"position":[[123,2]]},"1214":{"position":[[300,2],[406,2]]}}}],["读写",{"_index":859,"t":{"275":{"position":[[275,2]]},"801":{"position":[[275,2]]}}}],["读取",{"_index":779,"t":{"201":{"position":[[4,2]]},"203":{"position":[[108,2]]},"205":{"position":[[4,2]]},"207":{"position":[[7,2]]},"237":{"position":[[52,2]]},"339":{"position":[[51,2],[623,2]]},"511":{"position":[[20,2]]},"523":{"position":[[70,2]]},"557":{"position":[[313,2]]},"561":{"position":[[0,2]]},"609":{"position":[[4,2]]},"611":{"position":[[108,2]]},"613":{"position":[[4,2]]},"615":{"position":[[7,2]]},"699":{"position":[[52,2]]},"751":{"position":[[51,2],[623,2]]},"922":{"position":[[203,2]]},"954":{"position":[[1,2]]},"1092":{"position":[[19,2],[297,2]]},"1109":{"position":[[19,2],[297,2]]},"1155":{"position":[[71,2],[131,2]]},"1212":{"position":[[249,2]]}}}],["读取数据",{"_index":1259,"t":{"533":{"position":[[23,4]]}}}],["调度",{"_index":556,"t":{"129":{"position":[[25,2]]},"345":{"position":[[299,2],[1033,2]]},"559":{"position":[[116,2]]},"575":{"position":[[25,2]]},"757":{"position":[[299,2],[1033,2]]}}}],["调整",{"_index":742,"t":{"178":{"position":[[11,2]]},"427":{"position":[[448,2]]},"631":{"position":[[11,2]]},"1214":{"position":[[312,2]]}}}],["调用",{"_index":634,"t":{"150":{"position":[[1832,2]]},"158":{"position":[[1157,2]]},"170":{"position":[[594,2]]},"322":{"position":[[4,2]]},"343":{"position":[[1787,2],[1887,2],[2132,2]]},"345":{"position":[[271,2]]},"480":{"position":[[32,2]]},"491":{"position":[[6,2],[22,2]]},"537":{"position":[[473,2],[547,2]]},"559":{"position":[[4,2]]},"623":{"position":[[594,2]]},"647":{"position":[[1157,2]]},"659":{"position":[[1832,2]]},"734":{"position":[[4,2]]},"755":{"position":[[1787,2],[1887,2],[2132,2]]},"757":{"position":[[271,2]]},"924":{"position":[[47,2]]},"957":{"position":[[95,2],[209,2],[214,2]]},"970":{"position":[[3,2],[358,2]]},"972":{"position":[[26,2]]},"1010":{"position":[[1762,2],[1867,2],[1932,2],[1961,2]]},"1080":{"position":[[61,2]]},"1085":{"position":[[61,2]]},"1102":{"position":[[15,2]]},"1119":{"position":[[15,2]]},"1142":{"position":[[156,2]]},"1180":{"position":[[13,2]]},"1192":{"position":[[519,2]]},"1194":{"position":[[378,2]]},"1216":{"position":[[103,2]]}}}],["调用者",{"_index":980,"t":{"336":{"position":[[1156,3]]},"341":{"position":[[706,3]]},"343":{"position":[[26,3]]},"345":{"position":[[324,3]]},"748":{"position":[[1156,3]]},"753":{"position":[[706,3]]},"755":{"position":[[26,3]]},"757":{"position":[[324,3]]}}}],["调试",{"_index":482,"t":{"48":{"position":[[27,2]]},"129":{"position":[[72,2]]},"375":{"position":[[291,2],[308,2]]},"555":{"position":[[25,2]]},"557":{"position":[[73,2]]},"559":{"position":[[95,2],[195,2]]},"570":{"position":[[167,2],[230,2]]},"575":{"position":[[72,2]]},"972":{"position":[[8,2]]},"1124":{"position":[[23,2],[32,2]]},"1126":{"position":[[120,2]]},"1128":{"position":[[23,2],[42,2],[49,2],[63,2],[73,2]]},"1136":{"position":[[9,2]]},"1148":{"position":[[400,2]]},"1151":{"position":[[83,2],[195,2],[262,2],[308,2],[432,2]]},"1159":{"position":[[31,2]]},"1161":{"position":[[12,2]]},"1166":{"position":[[14,2]]},"1177":{"position":[[4,2]]},"1216":{"position":[[6,2]]}}}],["调试信息",{"_index":478,"t":{"46":{"position":[[4,4]]},"1168":{"position":[[9,4]]}}}],["谨慎",{"_index":1230,"t":{"497":{"position":[[33,2]]},"570":{"position":[[94,2]]}}}],["象征",{"_index":350,"t":{"21":{"position":[[552,2]]}}}],["负",{"_index":905,"t":{"294":{"position":[[463,1]]},"770":{"position":[[463,1]]}}}],["负担",{"_index":861,"t":{"279":{"position":[[6,2]]},"805":{"position":[[6,2]]}}}],["负数",{"_index":1304,"t":{"557":{"position":[[169,2]]}}}],["负责",{"_index":554,"t":{"129":{"position":[[12,2]]},"131":{"position":[[11,2]]},"341":{"position":[[130,2]]},"345":{"position":[[114,2],[262,2]]},"348":{"position":[[124,2]]},"358":{"position":[[752,2]]},"415":{"position":[[68,2]]},"575":{"position":[[12,2]]},"577":{"position":[[11,2]]},"753":{"position":[[130,2]]},"757":{"position":[[114,2],[262,2]]},"847":{"position":[[68,2]]},"857":{"position":[[124,2]]},"867":{"position":[[752,2]]}}}],["负载",{"_index":640,"t":{"155":{"position":[[35,2]]},"158":{"position":[[187,2]]},"644":{"position":[[35,2]]},"647":{"position":[[187,2]]}}}],["贡献",{"_index":26,"t":{"13":{"position":[[39,2]]}}}],["财产",{"_index":138,"t":{"17":{"position":[[75,2]]}}}],["财富",{"_index":145,"t":{"17":{"position":[[98,2]]},"21":{"position":[[133,2],[533,2],[558,2],[573,2]]}}}],["责任",{"_index":398,"t":{"23":{"position":[[138,2]]}}}],["贪婪",{"_index":263,"t":{"21":{"position":[[189,2],[602,2]]}}}],["贴近",{"_index":81,"t":{"13":{"position":[[205,2]]}}}],["资本",{"_index":144,"t":{"17":{"position":[[95,2]]},"21":{"position":[[150,2],[388,2],[421,2],[437,2]]}}}],["资本主义",{"_index":264,"t":{"21":{"position":[[192,4],[379,4],[495,4]]}}}],["资源",{"_index":1006,"t":{"341":{"position":[[137,2]]},"401":{"position":[[470,2]]},"407":{"position":[[767,2]]},"753":{"position":[[137,2]]},"833":{"position":[[470,2]]},"839":{"position":[[767,2]]},"1102":{"position":[[80,2]]},"1119":{"position":[[80,2]]},"1197":{"position":[[140,2]]}}}],["赋予",{"_index":68,"t":{"13":{"position":[[161,2],[230,2]]}}}],["赋值",{"_index":462,"t":{"40":{"position":[[52,2]]}}}],["走向",{"_index":173,"t":{"17":{"position":[[195,2]]}}}],["起来",{"_index":1649,"t":{"1220":{"position":[[52,2]]}}}],["超",{"_index":254,"t":{"21":{"position":[[164,1]]}}}],["超时",{"_index":642,"t":{"155":{"position":[[42,2],[58,2]]},"158":{"position":[[344,2]]},"174":{"position":[[11,2]]},"182":{"position":[[24,2],[47,2]]},"343":{"position":[[141,2],[890,2],[1161,2],[1895,2]]},"345":{"position":[[2139,2],[5974,2]]},"523":{"position":[[170,2]]},"533":{"position":[[703,2]]},"549":{"position":[[42,2]]},"551":{"position":[[138,2]]},"553":{"position":[[136,2],[297,2],[427,2]]},"627":{"position":[[11,2]]},"635":{"position":[[24,2],[47,2]]},"644":{"position":[[42,2],[58,2]]},"647":{"position":[[344,2]]},"755":{"position":[[141,2],[890,2],[1161,2],[1895,2]]},"757":{"position":[[2139,2],[5974,2]]},"1214":{"position":[[366,2]]}}}],["越",{"_index":1306,"t":{"557":{"position":[[203,1],[207,1]]}}}],["足够",{"_index":1521,"t":{"1075":{"position":[[16,2]]},"1102":{"position":[[140,2]]},"1119":{"position":[[140,2]]}}}],["跃升",{"_index":295,"t":{"21":{"position":[[301,2]]}}}],["跟踪",{"_index":1322,"t":{"559":{"position":[[541,2]]},"1151":{"position":[[144,2],[353,2]]},"1216":{"position":[[99,2]]}}}],["跨",{"_index":599,"t":{"142":{"position":[[21,1]]},"588":{"position":[[21,1]]}}}],["跨平台",{"_index":1536,"t":{"1100":{"position":[[91,3]]},"1117":{"position":[[91,3]]}}}],["路径",{"_index":729,"t":{"174":{"position":[[18,2]]},"188":{"position":[[64,2]]},"627":{"position":[[18,2]]},"641":{"position":[[64,2]]},"1055":{"position":[[61,2]]},"1057":{"position":[[17,2]]},"1151":{"position":[[367,2]]},"1197":{"position":[[64,2]]},"1214":{"position":[[259,2]]}}}],["路由",{"_index":577,"t":{"131":{"position":[[21,2]]},"142":{"position":[[78,2]]},"150":{"position":[[1617,2]]},"158":{"position":[[566,2],[970,2]]},"577":{"position":[[21,2]]},"588":{"position":[[78,2]]},"647":{"position":[[566,2],[970,2]]},"659":{"position":[[1617,2]]},"1200":{"position":[[492,2]]},"1205":{"position":[[602,2]]}}}],["跳转",{"_index":1341,"t":{"854":{"position":[[19,2]]}}}],["转储",{"_index":1315,"t":{"557":{"position":[[543,2]]}}}],["转化",{"_index":1428,"t":{"984":{"position":[[75,2]]}}}],["转发",{"_index":635,"t":{"155":{"position":[[10,2]]},"164":{"position":[[292,2]]},"644":{"position":[[10,2]]},"653":{"position":[[292,2]]}}}],["转换",{"_index":1427,"t":{"984":{"position":[[30,2]]},"1010":{"position":[[1849,2]]}}}],["转换成",{"_index":622,"t":{"150":{"position":[[228,3]]},"659":{"position":[[228,3]]}}}],["软",{"_index":1308,"t":{"557":{"position":[[260,1]]}}}],["软件",{"_index":1103,"t":{"378":{"position":[[75,2]]},"415":{"position":[[109,2]]},"810":{"position":[[75,2]]},"847":{"position":[[109,2]]}}}],["软件包",{"_index":1517,"t":{"1071":{"position":[[34,3]]}}}],["软件开发",{"_index":1545,"t":{"1128":{"position":[[0,4]]}}}],["软件系统",{"_index":1127,"t":{"413":{"position":[[41,4]]},"845":{"position":[[41,4]]}}}],["轻松",{"_index":711,"t":{"170":{"position":[[976,2]]},"178":{"position":[[71,2]]},"325":{"position":[[259,2]]},"331":{"position":[[24,2]]},"345":{"position":[[130,2]]},"399":{"position":[[15,2]]},"623":{"position":[[976,2]]},"631":{"position":[[71,2]]},"737":{"position":[[259,2]]},"743":{"position":[[24,2]]},"757":{"position":[[130,2]]},"831":{"position":[[15,2]]}}}],["较",{"_index":1161,"t":{"427":{"position":[[467,1]]},"937":{"position":[[455,1]]},"950":{"position":[[49,1]]},"952":{"position":[[143,1],[192,1]]}}}],["较慢",{"_index":1386,"t":{"952":{"position":[[49,2]]}}}],["辉煌",{"_index":63,"t":{"13":{"position":[[143,2]]}}}],["输入",{"_index":1243,"t":{"523":{"position":[[141,2]]},"1018":{"position":[[153,2],[227,2]]},"1020":{"position":[[148,2],[219,2]]},"1028":{"position":[[157,2]]},"1031":{"position":[[196,2]]},"1052":{"position":[[32,2]]}}}],["输出",{"_index":486,"t":{"57":{"position":[[34,2]]},"73":{"position":[[87,2],[221,2]]},"87":{"position":[[231,2],[295,2]]},"94":{"position":[[74,2]]},"101":{"position":[[76,2]]},"108":{"position":[[83,2]]},"224":{"position":[[63,2]]},"339":{"position":[[466,2],[533,2],[599,2],[704,2],[803,2],[902,2]]},"345":{"position":[[6218,2]]},"399":{"position":[[3,2],[8,2]]},"401":{"position":[[133,2],[142,2],[216,2],[490,2]]},"403":{"position":[[25,2]]},"409":{"position":[[638,2]]},"504":{"position":[[123,2]]},"511":{"position":[[27,2]]},"523":{"position":[[50,2],[74,2],[92,2],[120,2]]},"686":{"position":[[63,2]]},"751":{"position":[[466,2],[533,2],[599,2],[704,2],[803,2],[902,2]]},"757":{"position":[[6218,2]]},"831":{"position":[[3,2],[8,2]]},"833":{"position":[[133,2],[142,2],[216,2],[490,2]]},"835":{"position":[[25,2]]},"841":{"position":[[638,2]]},"970":{"position":[[613,2]]},"1188":{"position":[[100,2]]}}}],["边",{"_index":1354,"t":{"922":{"position":[[232,1],[235,1]]}}}],["边界条件",{"_index":752,"t":{"182":{"position":[[5,4]]},"635":{"position":[[5,4]]}}}],["迁徙",{"_index":229,"t":{"21":{"position":[[71,2]]}}}],["迁移",{"_index":794,"t":{"212":{"position":[[9,2],[20,2]]},"215":{"position":[[1835,2]]},"674":{"position":[[9,2],[20,2]]},"677":{"position":[[1835,2]]}}}],["过",{"_index":327,"t":{"21":{"position":[[464,1]]},"260":{"position":[[38,1]]},"433":{"position":[[9,1],[478,1]]},"570":{"position":[[31,1],[56,1]]},"786":{"position":[[38,1]]}}}],["过于",{"_index":72,"t":{"13":{"position":[[177,2]]}}}],["过去",{"_index":272,"t":{"21":{"position":[[222,2]]}}}],["过度",{"_index":768,"t":{"188":{"position":[[15,2]]},"372":{"position":[[77,2]]},"411":{"position":[[68,2]]},"417":{"position":[[266,2]]},"493":{"position":[[149,2]]},"641":{"position":[[15,2]]},"843":{"position":[[68,2]]},"849":{"position":[[266,2]]},"881":{"position":[[77,2]]}}}],["过时",{"_index":1175,"t":{"435":{"position":[[58,2]]}}}],["过期",{"_index":1088,"t":{"375":{"position":[[176,2]]}}}],["过程",{"_index":1022,"t":{"343":{"position":[[182,2]]},"375":{"position":[[320,2]]},"419":{"position":[[7,2]]},"440":{"position":[[24,2],[29,2]]},"755":{"position":[[182,2]]},"851":{"position":[[7,2]]},"884":{"position":[[24,2],[29,2]]}}}],["运行",{"_index":548,"t":{"126":{"position":[[46,2]]},"131":{"position":[[79,2]]},"144":{"position":[[52,2]]},"150":{"position":[[1195,2]]},"227":{"position":[[436,2]]},"305":{"position":[[87,2]]},"329":{"position":[[174,2]]},"500":{"position":[[12,2]]},"523":{"position":[[18,2]]},"555":{"position":[[28,2]]},"572":{"position":[[46,2]]},"577":{"position":[[79,2]]},"590":{"position":[[52,2]]},"659":{"position":[[1195,2]]},"689":{"position":[[436,2]]},"741":{"position":[[174,2]]},"781":{"position":[[87,2]]},"854":{"position":[[33,2],[38,2]]},"926":{"position":[[186,2]]},"957":{"position":[[23,2]]},"1018":{"position":[[338,2]]},"1020":{"position":[[340,2]]},"1022":{"position":[[535,2]]},"1024":{"position":[[284,2]]},"1026":{"position":[[326,2]]},"1028":{"position":[[250,2]]},"1057":{"position":[[30,2]]},"1064":{"position":[[441,2],[965,2],[1163,2]]},"1073":{"position":[[4,2]]},"1128":{"position":[[32,2]]},"1151":{"position":[[430,2]]},"1170":{"position":[[0,2],[47,2]]},"1191":{"position":[[354,2]]},"1192":{"position":[[328,2]]}}}],["近代",{"_index":312,"t":{"21":{"position":[[369,2]]}}}],["返回",{"_index":489,"t":{"60":{"position":[[5,2]]},"150":{"position":[[1842,2]]},"158":{"position":[[391,2],[1167,2]]},"194":{"position":[[191,2]]},"201":{"position":[[15,2]]},"205":{"position":[[6,2],[172,2],[398,2]]},"207":{"position":[[4,2]]},"296":{"position":[[66,2],[218,2]]},"336":{"position":[[176,2]]},"339":{"position":[[78,2],[162,2]]},"341":{"position":[[206,2]]},"343":{"position":[[294,2]]},"345":{"position":[[4640,2],[5611,2]]},"358":{"position":[[291,2]]},"429":{"position":[[459,2],[468,2]]},"433":{"position":[[222,2]]},"491":{"position":[[31,2]]},"493":{"position":[[138,2]]},"557":{"position":[[41,2],[113,2]]},"559":{"position":[[34,2]]},"609":{"position":[[15,2]]},"613":{"position":[[6,2],[172,2],[398,2]]},"615":{"position":[[4,2]]},"647":{"position":[[391,2],[1167,2]]},"659":{"position":[[1842,2]]},"667":{"position":[[191,2]]},"748":{"position":[[176,2]]},"751":{"position":[[78,2],[162,2]]},"753":{"position":[[206,2]]},"755":{"position":[[294,2]]},"757":{"position":[[4640,2],[5611,2]]},"772":{"position":[[66,2],[218,2]]},"867":{"position":[[291,2]]},"916":{"position":[[5,2]]},"918":{"position":[[15,2]]},"922":{"position":[[41,2],[50,2]]},"963":{"position":[[49,2]]},"1010":{"position":[[2334,2]]}}}],["返回值",{"_index":503,"t":{"80":{"position":[[24,3]]},"339":{"position":[[86,3]]},"345":{"position":[[2969,3]]},"751":{"position":[[86,3]]},"757":{"position":[[2969,3]]},"916":{"position":[[2,3]]},"924":{"position":[[6,3],[11,3]]},"1008":{"position":[[6,3]]}}}],["还是",{"_index":1577,"t":{"1151":{"position":[[149,2]]},"1220":{"position":[[42,2]]}}}],["这个",{"_index":334,"t":{"21":{"position":[[488,2]]},"203":{"position":[[39,2]]},"263":{"position":[[122,2]]},"557":{"position":[[65,2]]},"611":{"position":[[39,2]]},"789":{"position":[[122,2]]},"918":{"position":[[59,2]]}}}],["这些",{"_index":970,"t":{"333":{"position":[[53,2]]},"345":{"position":[[118,2]]},"413":{"position":[[21,2]]},"570":{"position":[[209,2]]},"745":{"position":[[53,2]]},"757":{"position":[[118,2]]},"845":{"position":[[21,2]]},"1064":{"position":[[329,2],[360,2],[385,2],[732,2]]},"1075":{"position":[[189,2]]}}}],["这样",{"_index":343,"t":{"21":{"position":[[526,2]]},"489":{"position":[[517,2]]},"1010":{"position":[[1927,2]]}}}],["这种",{"_index":71,"t":{"13":{"position":[[171,2]]},"17":{"position":[[87,2]]},"21":{"position":[[410,2],[583,2]]}}}],["这边",{"_index":818,"t":{"247":{"position":[[196,2]]},"709":{"position":[[196,2]]}}}],["这里",{"_index":1116,"t":{"407":{"position":[[759,2]]},"839":{"position":[[759,2]]},"1192":{"position":[[512,2]]}}}],["进",{"_index":1578,"t":{"1151":{"position":[[311,1]]}}}],["进入",{"_index":296,"t":{"21":{"position":[[307,2]]},"1062":{"position":[[77,2]]},"1064":{"position":[[1372,2],[1430,2]]},"1067":{"position":[[25,2],[48,2]]},"1142":{"position":[[89,2],[107,2]]}}}],["进制",{"_index":1563,"t":{"1146":{"position":[[135,2]]}}}],["进步",{"_index":286,"t":{"21":{"position":[[270,2]]}}}],["进程",{"_index":551,"t":{"126":{"position":[[56,2]]},"142":{"position":[[22,2]]},"572":{"position":[[56,2]]},"588":{"position":[[22,2]]},"1055":{"position":[[23,2],[28,2]]},"1057":{"position":[[28,2]]},"1064":{"position":[[318,2],[430,2],[536,2]]},"1069":{"position":[[25,2]]},"1075":{"position":[[76,2],[148,2],[233,2]]},"1077":{"position":[[19,2]]},"1090":{"position":[[104,2],[155,2]]},"1094":{"position":[[9,2]]},"1096":{"position":[[123,2]]},"1100":{"position":[[33,2]]},"1107":{"position":[[104,2],[155,2]]},"1111":{"position":[[9,2]]},"1113":{"position":[[123,2]]},"1117":{"position":[[33,2]]},"1136":{"position":[[58,2],[69,2]]},"1151":{"position":[[33,2],[79,2],[147,2],[152,2],[198,2],[265,2],[356,2],[365,2]]},"1180":{"position":[[17,2]]},"1186":{"position":[[2,2],[22,2]]},"1188":{"position":[[10,2],[21,2],[89,2],[130,2],[142,2],[174,2],[179,2],[203,2]]},"1191":{"position":[[47,2],[175,2],[273,2],[352,2],[432,2],[450,2]]},"1192":{"position":[[13,2],[22,2],[28,2],[152,2],[250,2],[326,2],[397,2],[415,2],[515,2],[541,2],[548,2],[583,2]]},"1194":{"position":[[180,2],[473,2],[569,2],[581,2],[626,2],[644,2],[707,2],[719,2],[734,2],[770,2],[820,2],[854,2],[874,2]]},"1197":{"position":[[28,2],[53,2]]},"1216":{"position":[[212,2]]}}}],["进行",{"_index":580,"t":{"131":{"position":[[120,2]]},"331":{"position":[[32,2]]},"336":{"position":[[23,2]]},"435":{"position":[[40,2]]},"553":{"position":[[365,2]]},"577":{"position":[[120,2]]},"743":{"position":[[32,2]]},"748":{"position":[[23,2]]},"963":{"position":[[366,2]]},"977":{"position":[[144,2]]},"1048":{"position":[[240,2]]},"1052":{"position":[[58,2]]},"1055":{"position":[[95,2]]},"1057":{"position":[[60,2]]},"1064":{"position":[[613,2],[655,2],[878,2]]},"1151":{"position":[[81,2]]}}}],["进阶",{"_index":1426,"t":{"977":{"position":[[225,2]]}}}],["远",{"_index":253,"t":{"21":{"position":[[163,1]]}}}],["远程",{"_index":809,"t":{"224":{"position":[[77,2]]},"686":{"position":[[77,2]]},"1128":{"position":[[40,2],[51,2]]},"1161":{"position":[[8,2],[38,2]]}}}],["违反",{"_index":894,"t":{"289":{"position":[[273,2]]},"294":{"position":[[277,2]]},"296":{"position":[[234,2]]},"305":{"position":[[74,2]]},"356":{"position":[[3,2]]},"447":{"position":[[28,2]]},"765":{"position":[[273,2]]},"770":{"position":[[277,2]]},"772":{"position":[[234,2]]},"781":{"position":[[74,2]]},"865":{"position":[[3,2]]},"891":{"position":[[28,2]]}}}],["连接",{"_index":1118,"t":{"407":{"position":[[764,2]]},"445":{"position":[[3,2]]},"839":{"position":[[764,2]]},"889":{"position":[[3,2]]},"1161":{"position":[[36,2]]},"1216":{"position":[[55,2]]},"1220":{"position":[[104,2]]}}}],["连接池",{"_index":1633,"t":{"1214":{"position":[[0,3]]}}}],["迟迟",{"_index":1013,"t":{"343":{"position":[[59,2]]},"755":{"position":[[59,2]]}}}],["迪",{"_index":1135,"t":{"417":{"position":[[47,1]]},"849":{"position":[[47,1]]}}}],["迭代",{"_index":1182,"t":{"437":{"position":[[158,2]]}}}],["追加",{"_index":986,"t":{"336":{"position":[[1293,2]]},"748":{"position":[[1293,2]]}}}],["追求",{"_index":182,"t":{"17":{"position":[[227,2]]},"21":{"position":[[479,2]]}}}],["追踪",{"_index":747,"t":{"180":{"position":[[13,2],[120,2]]},"633":{"position":[[13,2],[120,2]]}}}],["退出",{"_index":1005,"t":{"341":{"position":[[134,2],[420,2],[519,2],[1118,2],[1174,2]]},"551":{"position":[[141,2],[402,2],[457,2]]},"753":{"position":[[134,2],[420,2],[519,2],[1118,2],[1174,2]]},"1142":{"position":[[211,2]]},"1151":{"position":[[382,2]]},"1191":{"position":[[434,2],[454,2]]},"1192":{"position":[[399,2]]},"1216":{"position":[[150,2]]}}}],["适合",{"_index":1014,"t":{"343":{"position":[[87,2]]},"447":{"position":[[7,2]]},"755":{"position":[[87,2]]},"891":{"position":[[7,2]]},"920":{"position":[[34,2]]}}}],["适应",{"_index":668,"t":{"166":{"position":[[51,2]]},"188":{"position":[[51,2]]},"619":{"position":[[51,2]]},"641":{"position":[[51,2]]}}}],["适当",{"_index":1634,"t":{"1214":{"position":[[310,2]]},"1220":{"position":[[88,2],[115,2]]}}}],["适用",{"_index":439,"t":{"33":{"position":[[158,2],[164,2]]},"38":{"position":[[183,2],[189,2]]},"40":{"position":[[0,2]]},"42":{"position":[[7,2]]},"422":{"position":[[20,2]]},"491":{"position":[[189,2]]},"523":{"position":[[65,2],[185,2]]},"541":{"position":[[10,2]]},"549":{"position":[[16,2]]},"553":{"position":[[3,2],[280,2],[410,2]]},"570":{"position":[[158,2]]},"937":{"position":[[458,2]]},"942":{"position":[[37,2]]},"950":{"position":[[6,2]]},"952":{"position":[[2,2]]},"957":{"position":[[99,2]]},"1033":{"position":[[31,2]]},"1052":{"position":[[21,2]]},"1102":{"position":[[8,2],[69,2]]},"1119":{"position":[[8,2],[69,2]]}}}],["适配器",{"_index":1199,"t":{"465":{"position":[[11,3]]},"909":{"position":[[11,3]]}}}],["逃逸",{"_index":1523,"t":{"1075":{"position":[[78,2],[216,2],[247,2]]}}}],["选",{"_index":654,"t":{"158":{"position":[[186,1],[342,1]]},"215":{"position":[[14,1],[78,1]]},"559":{"position":[[550,1]]},"647":{"position":[[186,1],[342,1]]},"677":{"position":[[14,1],[78,1]]},"1057":{"position":[[134,1]]},"1200":{"position":[[401,1]]}}}],["选字",{"_index":1438,"t":{"1008":{"position":[[40,2]]}}}],["选择",{"_index":666,"t":{"166":{"position":[[40,2]]},"329":{"position":[[20,2]]},"491":{"position":[[181,2]]},"619":{"position":[[40,2]]},"741":{"position":[[20,2]]},"854":{"position":[[170,2]]},"954":{"position":[[127,2]]},"1035":{"position":[[84,2]]}}}],["选择权",{"_index":388,"t":{"23":{"position":[[95,3]]}}}],["选项",{"_index":1124,"t":{"411":{"position":[[39,2]]},"843":{"position":[[39,2]]}}}],["透支",{"_index":305,"t":{"21":{"position":[[339,2]]}}}],["逐利",{"_index":316,"t":{"21":{"position":[[390,2]]}}}],["逐渐",{"_index":239,"t":{"21":{"position":[[109,2]]}}}],["递增",{"_index":1277,"t":{"547":{"position":[[153,2],[350,2]]}}}],["递归",{"_index":1434,"t":{"1001":{"position":[[97,2]]},"1010":{"position":[[1760,2],[1865,2],[1959,2]]}}}],["通信",{"_index":568,"t":{"129":{"position":[[100,2]]},"131":{"position":[[87,2],[122,2]]},"142":{"position":[[24,2]]},"144":{"position":[[32,2],[77,2]]},"178":{"position":[[68,2]]},"182":{"position":[[42,2]]},"336":{"position":[[25,2]]},"417":{"position":[[103,2]]},"495":{"position":[[103,2]]},"527":{"position":[[34,2]]},"553":{"position":[[163,2]]},"575":{"position":[[100,2]]},"577":{"position":[[87,2],[122,2]]},"588":{"position":[[24,2]]},"590":{"position":[[32,2],[77,2]]},"631":{"position":[[68,2]]},"635":{"position":[[42,2]]},"748":{"position":[[25,2]]},"849":{"position":[[103,2]]},"1197":{"position":[[55,2]]},"1216":{"position":[[19,2]]},"1218":{"position":[[32,2],[201,2]]},"1220":{"position":[[29,2]]}}}],["通信模型",{"_index":979,"t":{"336":{"position":[[1151,4]]},"748":{"position":[[1151,4]]}}}],["通常",{"_index":66,"t":{"13":{"position":[[151,2]]},"345":{"position":[[337,2]]},"757":{"position":[[337,2]]},"914":{"position":[[11,2]]},"1064":{"position":[[1018,2]]},"1075":{"position":[[22,2]]},"1136":{"position":[[72,2]]}}}],["通用",{"_index":832,"t":{"258":{"position":[[124,2]]},"345":{"position":[[627,2],[816,2],[3104,2]]},"467":{"position":[[45,2]]},"757":{"position":[[627,2],[816,2],[3104,2]]},"784":{"position":[[124,2]]},"911":{"position":[[45,2]]},"954":{"position":[[94,2]]},"957":{"position":[[137,2]]}}}],["通知",{"_index":705,"t":{"170":{"position":[[225,2],[309,2],[410,2],[460,2],[557,2],[622,2],[980,2],[1105,2],[1747,2]]},"341":{"position":[[414,2],[508,2],[1172,2]]},"365":{"position":[[110,2]]},"397":{"position":[[63,2],[76,2]]},"473":{"position":[[53,2]]},"495":{"position":[[23,2]]},"541":{"position":[[505,2]]},"551":{"position":[[447,2]]},"553":{"position":[[89,2]]},"623":{"position":[[225,2],[309,2],[410,2],[460,2],[557,2],[622,2],[980,2],[1105,2],[1747,2]]},"753":{"position":[[414,2],[508,2],[1172,2]]},"829":{"position":[[63,2],[76,2]]},"874":{"position":[[110,2]]}}}],["通过",{"_index":487,"t":{"60":{"position":[[0,2]]},"126":{"position":[[53,2]]},"155":{"position":[[6,2]]},"166":{"position":[[28,2]]},"170":{"position":[[6,2],[144,2]]},"172":{"position":[[21,2]]},"174":{"position":[[31,2]]},"178":{"position":[[57,2]]},"184":{"position":[[1916,2],[2003,2]]},"188":{"position":[[22,2]]},"203":{"position":[[37,2],[89,2]]},"224":{"position":[[15,2]]},"284":{"position":[[156,2]]},"305":{"position":[[24,2]]},"308":{"position":[[145,2]]},"310":{"position":[[5,2],[49,2]]},"333":{"position":[[24,2]]},"336":{"position":[[1159,2],[1201,2],[1255,2],[1317,2]]},"341":{"position":[[194,2]]},"343":{"position":[[282,2]]},"345":{"position":[[82,2],[393,2]]},"358":{"position":[[766,2]]},"372":{"position":[[24,2]]},"375":{"position":[[205,2],[391,2],[452,2],[490,2]]},"378":{"position":[[117,2]]},"380":{"position":[[58,2]]},"411":{"position":[[7,2],[102,2]]},"415":{"position":[[137,2]]},"440":{"position":[[69,2]]},"525":{"position":[[31,2]]},"529":{"position":[[13,2]]},"531":{"position":[[350,2]]},"570":{"position":[[203,2]]},"572":{"position":[[53,2]]},"611":{"position":[[37,2],[89,2]]},"619":{"position":[[28,2]]},"623":{"position":[[6,2],[144,2]]},"625":{"position":[[21,2]]},"627":{"position":[[31,2]]},"631":{"position":[[57,2]]},"637":{"position":[[1916,2],[2003,2]]},"641":{"position":[[22,2]]},"644":{"position":[[6,2]]},"686":{"position":[[15,2]]},"720":{"position":[[145,2]]},"722":{"position":[[5,2],[49,2]]},"745":{"position":[[24,2]]},"748":{"position":[[1159,2],[1201,2],[1255,2],[1317,2]]},"753":{"position":[[194,2]]},"755":{"position":[[282,2]]},"757":{"position":[[82,2],[393,2]]},"760":{"position":[[156,2]]},"781":{"position":[[24,2]]},"810":{"position":[[117,2]]},"812":{"position":[[58,2]]},"843":{"position":[[7,2],[102,2]]},"847":{"position":[[137,2]]},"854":{"position":[[17,2],[78,2],[124,2]]},"867":{"position":[[766,2]]},"881":{"position":[[24,2]]},"884":{"position":[[69,2]]},"922":{"position":[[39,2]]},"957":{"position":[[249,2]]},"963":{"position":[[302,2],[345,2]]},"977":{"position":[[164,2]]},"984":{"position":[[0,2],[47,2]]},"1010":{"position":[[1738,2],[1893,2]]},"1064":{"position":[[1021,2]]},"1067":{"position":[[38,2]]},"1128":{"position":[[45,2]]},"1144":{"position":[[0,2]]},"1151":{"position":[[391,2]]},"1180":{"position":[[3,2]]},"1188":{"position":[[13,2]]},"1191":{"position":[[0,2],[32,2]]},"1192":{"position":[[0,2]]},"1197":{"position":[[58,2],[89,2]]},"1218":{"position":[[35,2]]},"1220":{"position":[[124,2]]}}}],["通道",{"_index":586,"t":{"134":{"position":[[221,2]]},"158":{"position":[[293,2]]},"203":{"position":[[23,2],[41,2],[92,2]]},"205":{"position":[[138,2]]},"339":{"position":[[415,2],[628,2]]},"345":{"position":[[433,2]]},"495":{"position":[[32,2]]},"533":{"position":[[31,2]]},"580":{"position":[[221,2]]},"611":{"position":[[23,2],[41,2],[92,2]]},"613":{"position":[[138,2]]},"647":{"position":[[293,2]]},"751":{"position":[[415,2],[628,2]]},"757":{"position":[[433,2]]},"1218":{"position":[[225,2]]}}}],["通配符",{"_index":488,"t":{"60":{"position":[[2,3]]},"67":{"position":[[13,3]]}}}],["速度",{"_index":1381,"t":{"942":{"position":[[8,2]]},"952":{"position":[[47,2]]}}}],["逻辑",{"_index":344,"t":{"21":{"position":[[529,2]]},"170":{"position":[[71,2],[592,2],[869,2],[1114,2],[1539,2]]},"184":{"position":[[1969,2]]},"294":{"position":[[261,2],[474,2]]},"318":{"position":[[328,2]]},"320":{"position":[[170,2]]},"341":{"position":[[116,2]]},"345":{"position":[[60,2],[236,2],[383,2]]},"356":{"position":[[130,2],[275,2],[416,2]]},"417":{"position":[[154,2]]},"463":{"position":[[28,2]]},"566":{"position":[[229,2]]},"623":{"position":[[71,2],[592,2],[869,2],[1114,2],[1539,2]]},"637":{"position":[[1969,2]]},"730":{"position":[[328,2]]},"732":{"position":[[170,2]]},"753":{"position":[[116,2]]},"757":{"position":[[60,2],[236,2],[383,2]]},"770":{"position":[[261,2],[474,2]]},"849":{"position":[[154,2]]},"865":{"position":[[130,2],[275,2],[416,2]]},"907":{"position":[[28,2]]},"984":{"position":[[40,2],[84,2]]},"993":{"position":[[175,2]]},"1031":{"position":[[32,2],[164,2]]}}}],["遇到",{"_index":395,"t":{"23":{"position":[[124,2]]},"926":{"position":[[2,2]]}}}],["道德",{"_index":349,"t":{"21":{"position":[[549,2]]}}}],["遵守",{"_index":887,"t":{"286":{"position":[[44,2],[52,2]]},"762":{"position":[[44,2],[52,2]]}}}],["遵循",{"_index":769,"t":{"188":{"position":[[24,2]]},"284":{"position":[[200,2]]},"333":{"position":[[93,2]]},"454":{"position":[[2,2]]},"641":{"position":[[24,2]]},"745":{"position":[[93,2]]},"760":{"position":[[200,2]]},"898":{"position":[[2,2]]}}}],["避免",{"_index":472,"t":{"42":{"position":[[128,2]]},"155":{"position":[[63,2]]},"176":{"position":[[65,2]]},"184":{"position":[[1931,2]]},"260":{"position":[[23,2]]},"336":{"position":[[1269,2]]},"343":{"position":[[149,2]]},"372":{"position":[[75,2]]},"417":{"position":[[144,2],[207,2],[264,2]]},"493":{"position":[[147,2]]},"519":{"position":[[981,2]]},"527":{"position":[[54,2]]},"529":{"position":[[0,2],[59,2]]},"533":{"position":[[697,2]]},"535":{"position":[[32,2]]},"553":{"position":[[24,2],[181,2]]},"629":{"position":[[65,2]]},"637":{"position":[[1931,2]]},"644":{"position":[[63,2]]},"748":{"position":[[1269,2]]},"755":{"position":[[149,2]]},"786":{"position":[[23,2]]},"849":{"position":[[144,2],[207,2],[264,2]]},"881":{"position":[[75,2]]},"974":{"position":[[13,2]]},"1001":{"position":[[93,2]]},"1008":{"position":[[69,2]]},"1010":{"position":[[1758,2],[1863,2],[1956,2]]},"1071":{"position":[[27,2]]},"1214":{"position":[[255,2]]}}}],["那么",{"_index":873,"t":{"284":{"position":[[95,2]]},"760":{"position":[[95,2]]}}}],["邮件",{"_index":706,"t":{"170":{"position":[[307,2],[408,2],[1253,2],[1354,2]]},"356":{"position":[[273,2],[520,2]]},"358":{"position":[[321,2]]},"397":{"position":[[68,2]]},"623":{"position":[[307,2],[408,2],[1253,2],[1354,2]]},"829":{"position":[[68,2]]},"865":{"position":[[273,2],[520,2]]},"867":{"position":[[321,2]]}}}],["邮箱",{"_index":1459,"t":{"1044":{"position":[[32,2]]}}}],["部分",{"_index":164,"t":{"17":{"position":[[165,2]]},"83":{"position":[[9,2],[21,2]]},"184":{"position":[[2034,2]]},"637":{"position":[[2034,2]]},"1057":{"position":[[68,2]]}}}],["部署",{"_index":1652,"t":{"1220":{"position":[[192,2]]}}}],["都",{"_index":89,"t":{"13":{"position":[[226,1]]},"17":{"position":[[181,1]]},"26":{"position":[[28,1]]},"28":{"position":[[78,1]]},"38":{"position":[[176,1]]},"42":{"position":[[62,1]]},"263":{"position":[[70,1],[90,1],[111,1]]},"272":{"position":[[97,1]]},"308":{"position":[[104,1]]},"341":{"position":[[48,1]]},"388":{"position":[[343,1]]},"415":{"position":[[380,1]]},"720":{"position":[[104,1]]},"753":{"position":[[48,1]]},"789":{"position":[[70,1],[90,1],[111,1]]},"798":{"position":[[97,1]]},"820":{"position":[[343,1]]},"847":{"position":[[380,1]]},"920":{"position":[[33,1]]},"1220":{"position":[[54,1]]}}}],["配置",{"_index":731,"t":{"174":{"position":[[24,2]]},"405":{"position":[[164,2],[264,2]]},"465":{"position":[[9,2]]},"627":{"position":[[24,2]]},"837":{"position":[[164,2],[264,2]]},"909":{"position":[[9,2]]},"1064":{"position":[[682,2]]},"1200":{"position":[[97,2],[777,2]]},"1202":{"position":[[15,2]]},"1205":{"position":[[125,2],[889,2]]},"1214":{"position":[[3,2],[306,2]]}}}],["配置文件",{"_index":733,"t":{"174":{"position":[[38,4]]},"627":{"position":[[38,4]]}}}],["采用",{"_index":1440,"t":{"1010":{"position":[[1090,2]]}}}],["采集",{"_index":230,"t":{"21":{"position":[[74,2]]}}}],["释放",{"_index":1217,"t":{"480":{"position":[[36,2]]},"491":{"position":[[25,2]]},"493":{"position":[[124,2],[144,2]]},"539":{"position":[[483,2]]}}}],["里氏",{"_index":870,"t":{"284":{"position":[[0,2]]},"415":{"position":[[160,2]]},"760":{"position":[[0,2]]},"847":{"position":[[160,2]]}}}],["重",{"_index":1030,"t":{"345":{"position":[[148,1]]},"757":{"position":[[148,1]]}}}],["重写",{"_index":676,"t":{"166":{"position":[[80,2]]},"619":{"position":[[80,2]]}}}],["重启",{"_index":800,"t":{"215":{"position":[[2211,2]]},"227":{"position":[[426,2]]},"677":{"position":[[2211,2]]},"689":{"position":[[426,2]]},"1194":{"position":[[370,2]]}}}],["重命名",{"_index":632,"t":{"150":{"position":[[1251,3]]},"158":{"position":[[619,3]]},"194":{"position":[[426,3]]},"227":{"position":[[722,3]]},"247":{"position":[[20,3]]},"647":{"position":[[619,3]]},"659":{"position":[[1251,3]]},"667":{"position":[[426,3]]},"689":{"position":[[722,3]]},"709":{"position":[[20,3]]}}}],["重复",{"_index":445,"t":{"33":{"position":[[199,2]]},"42":{"position":[[19,2]]},"417":{"position":[[146,2],[152,2]]},"849":{"position":[[146,2],[152,2]]}}}],["重建",{"_index":810,"t":{"227":{"position":[[324,2]]},"689":{"position":[[324,2]]}}}],["重新",{"_index":1173,"t":{"433":{"position":[[243,2],[482,2]]},"435":{"position":[[62,2]]},"480":{"position":[[60,2]]},"491":{"position":[[35,2],[57,2]]},"854":{"position":[[195,2]]},"926":{"position":[[184,2]]}}}],["重新安装",{"_index":1510,"t":{"1067":{"position":[[59,4]]}}}],["重构",{"_index":675,"t":{"166":{"position":[[77,2]]},"294":{"position":[[482,2]]},"296":{"position":[[470,2]]},"619":{"position":[[77,2]]},"770":{"position":[[482,2]]},"772":{"position":[[470,2]]}}}],["重点",{"_index":978,"t":{"336":{"position":[[1147,2]]},"748":{"position":[[1147,2]]}}}],["重用",{"_index":1132,"t":{"417":{"position":[[24,2]]},"849":{"position":[[24,2]]}}}],["重要",{"_index":10,"t":{"11":{"position":[[6,2],[16,2]]},"21":{"position":[[617,2]]},"555":{"position":[[36,2]]},"570":{"position":[[149,2]]},"1064":{"position":[[343,2],[957,2]]}}}],["重视",{"_index":132,"t":{"17":{"position":[[60,2]]}}}],["金额",{"_index":901,"t":{"294":{"position":[[244,2],[458,2]]},"770":{"position":[[244,2],[458,2]]}}}],["银联",{"_index":933,"t":{"303":{"position":[[74,2]]},"779":{"position":[[74,2]]}}}],["链接",{"_index":781,"t":{"201":{"position":[[26,2]]},"609":{"position":[[26,2]]},"1157":{"position":[[2,2]]}}}],["链路",{"_index":746,"t":{"180":{"position":[[11,2]]},"633":{"position":[[11,2]]}}}],["锁",{"_index":816,"t":{"247":{"position":[[147,1]]},"475":{"position":[[50,1]]},"480":{"position":[[30,1],[38,1],[64,1]]},"491":{"position":[[4,1],[27,1],[39,1]]},"493":{"position":[[126,1],[141,1]]},"539":{"position":[[485,1]]},"553":{"position":[[124,1],[183,1]]},"709":{"position":[[147,1]]}}}],["错误",{"_index":639,"t":{"155":{"position":[[30,2]]},"305":{"position":[[90,2]]},"407":{"position":[[669,2]]},"409":{"position":[[343,2]]},"504":{"position":[[121,2]]},"523":{"position":[[125,2]]},"644":{"position":[[30,2]]},"781":{"position":[[90,2]]},"839":{"position":[[669,2]]},"841":{"position":[[343,2]]},"1124":{"position":[[86,2]]},"1200":{"position":[[1290,2]]},"1216":{"position":[[138,2]]}}}],["错误处理",{"_index":1336,"t":{"570":{"position":[[196,4]]},"914":{"position":[[7,4]]},"1216":{"position":[[166,4]]}}}],["错误率",{"_index":1637,"t":{"1214":{"position":[[411,3]]}}}],["错误码",{"_index":651,"t":{"158":{"position":[[143,3]]},"647":{"position":[[143,3]]}}}],["长",{"_index":1117,"t":{"407":{"position":[[763,1]]},"839":{"position":[[763,1]]}}}],["长度",{"_index":626,"t":{"150":{"position":[[258,2]]},"659":{"position":[[258,2]]},"1044":{"position":[[81,2],[102,2],[111,2]]}}}],["长期",{"_index":646,"t":{"155":{"position":[[65,2]]},"166":{"position":[[91,2]]},"619":{"position":[[91,2]]},"644":{"position":[[65,2]]}}}],["问题",{"_index":749,"t":{"180":{"position":[[23,2]]},"188":{"position":[[69,2]]},"263":{"position":[[375,2]]},"289":{"position":[[335,2]]},"313":{"position":[[275,2]]},"356":{"position":[[509,2]]},"375":{"position":[[173,2],[194,2],[199,2],[473,2],[507,2]]},"388":{"position":[[332,2]]},"497":{"position":[[22,2]]},"559":{"position":[[118,2],[216,2]]},"570":{"position":[[172,2],[188,2]]},"633":{"position":[[23,2]]},"641":{"position":[[69,2]]},"725":{"position":[[275,2]]},"765":{"position":[[335,2]]},"789":{"position":[[375,2]]},"820":{"position":[[332,2]]},"854":{"position":[[45,2],[72,2]]},"865":{"position":[[509,2]]},"1067":{"position":[[32,2]]},"1075":{"position":[[2,2]]},"1128":{"position":[[77,2]]},"1197":{"position":[[151,2]]},"1216":{"position":[[21,2]]}}}],["间",{"_index":274,"t":{"21":{"position":[[227,1]]},"129":{"position":[[108,1]]},"170":{"position":[[5,1]]},"331":{"position":[[6,1]]},"336":{"position":[[22,1]]},"575":{"position":[[108,1]]},"623":{"position":[[5,1]]},"743":{"position":[[6,1]]},"748":{"position":[[22,1]]},"1218":{"position":[[29,1],[221,1]]}}}],["间通信",{"_index":530,"t":{"115":{"position":[[186,3],[316,3]]},"126":{"position":[[58,3]]},"134":{"position":[[343,3],[1282,3]]},"150":{"position":[[1227,3],[1244,3]]},"155":{"position":[[2,3]]},"158":{"position":[[212,3],[595,3],[612,3]]},"205":{"position":[[57,3]]},"572":{"position":[[58,3]]},"580":{"position":[[343,3],[1282,3]]},"597":{"position":[[186,3],[316,3]]},"613":{"position":[[57,3]]},"644":{"position":[[2,3]]},"647":{"position":[[212,3],[595,3],[612,3]]},"659":{"position":[[1227,3],[1244,3]]},"1197":{"position":[[30,3]]},"1218":{"position":[[2,3],[157,3]]}}}],["间隔",{"_index":823,"t":{"251":{"position":[[55,2]]},"713":{"position":[[55,2]]}}}],["阅读",{"_index":4,"t":{"5":{"position":[[13,2]]},"7":{"position":[[13,2]]},"9":{"position":[[13,2]]}}}],["队列",{"_index":1227,"t":{"495":{"position":[[83,2]]},"535":{"position":[[2,2]]}}}],["防止",{"_index":464,"t":{"40":{"position":[[89,2]]},"341":{"position":[[54,2],[74,2],[1202,2]]},"343":{"position":[[24,2]]},"422":{"position":[[30,2]]},"435":{"position":[[22,2],[67,2]]},"487":{"position":[[44,2]]},"533":{"position":[[671,2]]},"539":{"position":[[40,2],[443,2]]},"553":{"position":[[72,2]]},"753":{"position":[[54,2],[74,2],[1202,2]]},"755":{"position":[[24,2]]},"1075":{"position":[[74,2],[231,2]]}}}],["阵营",{"_index":60,"t":{"13":{"position":[[132,2]]}}}],["阶层",{"_index":20,"t":{"13":{"position":[[19,2]]}}}],["阻塞",{"_index":647,"t":{"155":{"position":[[67,2]]},"341":{"position":[[1204,2]]},"343":{"position":[[32,2],[1055,2]]},"345":{"position":[[4259,2]]},"531":{"position":[[242,2],[383,2]]},"533":{"position":[[675,2],[699,2]]},"537":{"position":[[526,2]]},"644":{"position":[[67,2]]},"753":{"position":[[1204,2]]},"755":{"position":[[32,2],[1055,2]]},"757":{"position":[[4259,2]]},"1194":{"position":[[169,2]]}}}],["阻止",{"_index":1178,"t":{"435":{"position":[[90,2]]}}}],["阿",{"_index":920,"t":{"299":{"position":[[232,1],[264,1]]},"775":{"position":[[232,1],[264,1]]}}}],["附加",{"_index":480,"t":{"46":{"position":[[33,2]]}}}],["附带",{"_index":788,"t":{"203":{"position":[[67,2]]},"611":{"position":[[67,2]]}}}],["降低",{"_index":677,"t":{"166":{"position":[[89,2]]},"351":{"position":[[26,2]]},"419":{"position":[[50,2]]},"440":{"position":[[36,2]]},"619":{"position":[[89,2]]},"851":{"position":[[50,2]]},"860":{"position":[[26,2]]},"884":{"position":[[36,2]]},"972":{"position":[[5,2]]},"1216":{"position":[[303,2],[332,2]]}}}],["限制",{"_index":166,"t":{"17":{"position":[[173,2]]},"533":{"position":[[731,2]]},"535":{"position":[[40,2]]},"553":{"position":[[231,2]]},"557":{"position":[[261,2]]},"1069":{"position":[[21,2]]},"1216":{"position":[[221,2]]}}}],["除非",{"_index":1228,"t":{"495":{"position":[[125,2]]}}}],["陷入困境",{"_index":226,"t":{"21":{"position":[[61,4]]}}}],["随之",{"_index":303,"t":{"21":{"position":[[330,2]]}}}],["随之而来",{"_index":236,"t":{"21":{"position":[[99,4]]}}}],["随机",{"_index":658,"t":{"160":{"position":[[7,2]]},"649":{"position":[[7,2]]}}}],["隐",{"_index":836,"t":{"258":{"position":[[158,1]]},"281":{"position":[[39,1]]},"286":{"position":[[58,1]]},"762":{"position":[[58,1]]},"784":{"position":[[158,1]]},"807":{"position":[[39,1]]}}}],["隐藏",{"_index":1439,"t":{"1010":{"position":[[1041,2]]}}}],["隔离",{"_index":753,"t":{"184":{"position":[[1907,2]]},"411":{"position":[[12,2]]},"637":{"position":[[1907,2]]},"843":{"position":[[12,2]]},"1055":{"position":[[85,2]]},"1069":{"position":[[78,2]]},"1073":{"position":[[29,2]]},"1075":{"position":[[64,2]]},"1077":{"position":[[21,2],[39,2],[70,2],[88,2]]}}}],["难以",{"_index":766,"t":{"186":{"position":[[11,2]]},"279":{"position":[[43,2]]},"305":{"position":[[82,2]]},"313":{"position":[[311,2]]},"331":{"position":[[12,2],[17,2],[63,2]]},"353":{"position":[[2,2],[32,2]]},"368":{"position":[[33,2]]},"639":{"position":[[11,2]]},"725":{"position":[[311,2]]},"743":{"position":[[12,2],[17,2],[63,2]]},"781":{"position":[[82,2]]},"805":{"position":[[43,2]]},"862":{"position":[[2,2],[32,2]]},"877":{"position":[[33,2]]}}}],["难度",{"_index":1407,"t":{"972":{"position":[[10,2]]}}}],["集体经济",{"_index":222,"t":{"21":{"position":[[41,4]]}}}],["集成",{"_index":1645,"t":{"1218":{"position":[[60,2]]}}}],["零",{"_index":993,"t":{"339":{"position":[[80,1],[164,1]]},"751":{"position":[[80,1],[164,1]]}}}],["需",{"_index":5,"t":{"5":{"position":[[15,1]]},"7":{"position":[[15,1]]},"9":{"position":[[15,1]]},"260":{"position":[[44,1]]},"265":{"position":[[369,1]]},"281":{"position":[[69,1]]},"407":{"position":[[13,1]]},"495":{"position":[[90,1]]},"786":{"position":[[44,1]]},"791":{"position":[[369,1]]},"807":{"position":[[69,1]]},"839":{"position":[[13,1]]},"922":{"position":[[383,1]]},"1064":{"position":[[1125,1]]}}}],["需求",{"_index":669,"t":{"166":{"position":[[56,2]]},"553":{"position":[[378,2]]},"619":{"position":[[56,2]]},"954":{"position":[[125,2]]},"974":{"position":[[5,2]]},"1075":{"position":[[132,2]]},"1077":{"position":[[101,2]]}}}],["需要",{"_index":455,"t":{"38":{"position":[[213,2]]},"170":{"position":[[1108,2]]},"260":{"position":[[17,2]]},"263":{"position":[[387,2]]},"265":{"position":[[183,2]]},"270":{"position":[[4,2]]},"272":{"position":[[98,2]]},"277":{"position":[[134,2]]},"279":{"position":[[18,2],[48,2]]},"284":{"position":[[198,2]]},"301":{"position":[[76,2]]},"331":{"position":[[47,2]]},"388":{"position":[[344,2]]},"401":{"position":[[205,2]]},"405":{"position":[[234,2]]},"407":{"position":[[2,2]]},"417":{"position":[[258,2]]},"424":{"position":[[18,2]]},"433":{"position":[[35,2],[241,2]]},"437":{"position":[[101,2]]},"459":{"position":[[31,2]]},"497":{"position":[[31,2]]},"523":{"position":[[188,2]]},"537":{"position":[[15,2]]},"539":{"position":[[14,2]]},"557":{"position":[[703,2]]},"623":{"position":[[1108,2]]},"743":{"position":[[47,2]]},"760":{"position":[[198,2]]},"777":{"position":[[76,2]]},"786":{"position":[[17,2]]},"789":{"position":[[387,2]]},"791":{"position":[[183,2]]},"796":{"position":[[4,2]]},"798":{"position":[[98,2]]},"803":{"position":[[134,2]]},"805":{"position":[[18,2],[48,2]]},"820":{"position":[[344,2]]},"833":{"position":[[205,2]]},"837":{"position":[[234,2]]},"839":{"position":[[2,2]]},"849":{"position":[[258,2]]},"903":{"position":[[31,2]]},"937":{"position":[[435,2]]},"952":{"position":[[52,2]]},"954":{"position":[[25,2]]},"963":{"position":[[300,2],[317,2]]},"977":{"position":[[126,2]]},"1010":{"position":[[1070,2]]},"1035":{"position":[[55,2]]},"1064":{"position":[[67,2],[1135,2]]},"1073":{"position":[[2,2]]},"1075":{"position":[[12,2],[150,2]]},"1082":{"position":[[18,2]]},"1087":{"position":[[18,2]]},"1102":{"position":[[72,2]]},"1119":{"position":[[72,2]]}}}],["非",{"_index":179,"t":{"17":{"position":[[223,1]]},"158":{"position":[[139,1]]},"170":{"position":[[17,1],[48,1],[59,1],[133,1]]},"172":{"position":[[26,1]]},"310":{"position":[[10,1]]},"315":{"position":[[401,1]]},"333":{"position":[[12,1]]},"343":{"position":[[1054,1]]},"345":{"position":[[4258,1]]},"385":{"position":[[15,1]]},"411":{"position":[[110,1]]},"623":{"position":[[17,1],[48,1],[59,1],[133,1]]},"625":{"position":[[26,1]]},"647":{"position":[[139,1]]},"722":{"position":[[10,1]]},"727":{"position":[[401,1]]},"745":{"position":[[12,1]]},"755":{"position":[[1054,1]]},"757":{"position":[[4258,1]]},"817":{"position":[[15,1]]},"843":{"position":[[110,1]]},"1194":{"position":[[168,1]]}}}],["非常",{"_index":1506,"t":{"1064":{"position":[[955,2]]},"1077":{"position":[[51,2]]}}}],["非线性",{"_index":287,"t":{"21":{"position":[[273,3]]}}}],["面向",{"_index":695,"t":{"170":{"position":[[121,2]]},"623":{"position":[[121,2]]}}}],["面向对象编程",{"_index":1125,"t":{"413":{"position":[[0,6]]},"845":{"position":[[0,6]]}}}],["面相",{"_index":914,"t":{"299":{"position":[[9,2]]},"775":{"position":[[9,2]]}}}],["革命",{"_index":233,"t":{"21":{"position":[[88,2]]}}}],["项",{"_index":1323,"t":{"568":{"position":[[198,1]]},"1028":{"position":[[161,1]]}}}],["项目",{"_index":613,"t":{"147":{"position":[[16,2]]},"370":{"position":[[7,2]]},"467":{"position":[[33,2]]},"656":{"position":[[16,2]]},"879":{"position":[[7,2]]},"911":{"position":[[33,2]]},"1052":{"position":[[28,2]]}}}],["预先",{"_index":865,"t":{"281":{"position":[[78,2]]},"807":{"position":[[78,2]]}}}],["预期",{"_index":297,"t":{"21":{"position":[[314,2]]},"286":{"position":[[37,2]]},"289":{"position":[[368,2]]},"411":{"position":[[75,2]]},"762":{"position":[[37,2]]},"765":{"position":[[368,2]]},"843":{"position":[[75,2]]}}}],["预设",{"_index":1556,"t":{"1138":{"position":[[42,2]]}}}],["领先",{"_index":317,"t":{"21":{"position":[[396,2]]}}}],["领域",{"_index":108,"t":{"15":{"position":[[19,2]]}}}],["颇为",{"_index":365,"t":{"23":{"position":[[4,2]]}}}],["颇具",{"_index":400,"t":{"23":{"position":[[146,2]]}}}],["频率",{"_index":1301,"t":{"557":{"position":[[131,2]]}}}],["频繁",{"_index":1307,"t":{"557":{"position":[[209,2]]}}}],["颜色代码",{"_index":1469,"t":{"1044":{"position":[[397,4]]}}}],["额外",{"_index":1379,"t":{"937":{"position":[[446,2]]}}}],["风格",{"_index":1285,"t":{"553":{"position":[[330,2]]},"924":{"position":[[59,2]]}}}],["飞",{"_index":847,"t":{"263":{"position":[[72,1],[329,1]]},"289":{"position":[[267,1]]},"291":{"position":[[94,1]]},"765":{"position":[[267,1]]},"767":{"position":[[94,1]]},"789":{"position":[[72,1],[329,1]]}}}],["飞翔",{"_index":890,"t":{"289":{"position":[[135,2]]},"291":{"position":[[170,2]]},"765":{"position":[[135,2]]},"767":{"position":[[170,2]]}}}],["飞速发展",{"_index":314,"t":{"21":{"position":[[374,4]]}}}],["驱动",{"_index":355,"t":{"21":{"position":[[578,2]]},"174":{"position":[[42,2]]},"465":{"position":[[22,2]]},"627":{"position":[[42,2]]},"909":{"position":[[22,2]]}}}],["驱动程序",{"_index":561,"t":{"129":{"position":[[53,4]]},"575":{"position":[[53,4]]},"1064":{"position":[[590,4]]}}}],["验证",{"_index":1069,"t":{"365":{"position":[[73,2]]},"429":{"position":[[201,2],[439,2]]},"435":{"position":[[31,2]]},"437":{"position":[[70,2]]},"874":{"position":[[73,2]]},"1038":{"position":[[25,2],[39,2],[50,2]]},"1044":{"position":[[636,2]]},"1046":{"position":[[5,2],[12,2]]},"1048":{"position":[[242,2]]},"1052":{"position":[[16,2],[67,2]]}}}],["高",{"_index":318,"t":{"21":{"position":[[404,1]]},"129":{"position":[[79,1]]},"435":{"position":[[85,1]]},"570":{"position":[[32,1]]},"575":{"position":[[79,1]]},"946":{"position":[[69,1]]},"950":{"position":[[45,1]]},"952":{"position":[[83,1]]},"1075":{"position":[[128,1],[254,1]]},"1218":{"position":[[192,1]]}}}],["高层",{"_index":947,"t":{"308":{"position":[[88,2]]},"313":{"position":[[3,2]]},"315":{"position":[[342,2]]},"333":{"position":[[36,2],[133,2]]},"415":{"position":[[365,2]]},"720":{"position":[[88,2]]},"725":{"position":[[3,2]]},"727":{"position":[[342,2]]},"745":{"position":[[36,2],[133,2]]},"847":{"position":[[365,2]]},"1055":{"position":[[73,2]]}}}],["高度",{"_index":963,"t":{"331":{"position":[[7,2]]},"463":{"position":[[2,2]]},"743":{"position":[[7,2]]},"907":{"position":[[2,2]]}}}],["高性能",{"_index":1387,"t":{"952":{"position":[[112,3]]},"954":{"position":[[27,3]]},"998":{"position":[[21,3]]},"1197":{"position":[[104,3]]},"1218":{"position":[[204,3]]},"1220":{"position":[[23,3]]}}}],["高效",{"_index":1281,"t":{"553":{"position":[[116,2],[223,2]]},"928":{"position":[[53,2]]},"1218":{"position":[[30,2]]}}}],["高速",{"_index":298,"t":{"21":{"position":[[318,2],[454,2]]},"1218":{"position":[[223,2]]}}}],["高频",{"_index":1288,"t":{"553":{"position":[[343,2]]}}}],["鸟",{"_index":899,"t":{"291":{"position":[[96,1]]},"767":{"position":[[96,1]]}}}],["鸟儿",{"_index":900,"t":{"291":{"position":[[167,2]]},"767":{"position":[[167,2]]}}}],["鸣叫",{"_index":895,"t":{"289":{"position":[[329,2]]},"291":{"position":[[341,2]]},"765":{"position":[[329,2]]},"767":{"position":[[341,2]]}}}],["麻雀",{"_index":889,"t":{"289":{"position":[[132,2],[183,2]]},"291":{"position":[[179,2],[259,2]]},"765":{"position":[[132,2],[183,2]]},"767":{"position":[[179,2],[259,2]]}}}],["黄",{"_index":921,"t":{"299":{"position":[[233,1],[265,1]]},"775":{"position":[[233,1],[265,1]]}}}],["默认",{"_index":1159,"t":{"427":{"position":[[434,2]]},"533":{"position":[[39,2]]},"557":{"position":[[192,2]]},"977":{"position":[[68,2]]},"1018":{"position":[[11,2]]},"1057":{"position":[[166,2]]},"1151":{"position":[[349,2]]}}}],["默认值",{"_index":1302,"t":{"557":{"position":[[135,3]]},"1013":{"position":[[60,3]]},"1044":{"position":[[617,3]]},"1151":{"position":[[208,3],[297,3]]}}}],["鼓励",{"_index":838,"t":{"258":{"position":[[165,2]]},"281":{"position":[[3,2]]},"784":{"position":[[165,2]]},"807":{"position":[[3,2]]}}}]],"pipeline":["stemmer"]}}]