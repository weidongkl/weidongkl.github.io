"use strict";(self.webpackChunkweidongkl_github_io=self.webpackChunkweidongkl_github_io||[]).push([[6231],{6151:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>t,toc:()=>s});const t=JSON.parse('{"id":"note/golang/design/microkernel/microkernel8","title":"microkernel \u8bbe\u8ba18","description":"1. \u76ee\u6807","source":"@site/docs/note/golang/design/microkernel/microkernel8.md","sourceDirName":"note/golang/design/microkernel","slug":"/note/golang/design/microkernel/microkernel8","permalink":"/en/docs/note/golang/design/microkernel/microkernel8","draft":false,"unlisted":false,"editUrl":"https://github.com/weidongkl/weidongkl.github.io/tree/master/docs/note/golang/design/microkernel/microkernel8.md","tags":[],"version":"current","lastUpdatedBy":"weidongkl","lastUpdatedAt":1746671732000,"sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"note","previous":{"title":"microkernel \u8bbe\u8ba17","permalink":"/en/docs/note/golang/design/microkernel/microkernel7"},"next":{"title":"microkernel \u8bbe\u8ba19","permalink":"/en/docs/note/golang/design/microkernel/microkernel9"}}');var o=r(4848),i=r(8453);const l={sidebar_position:8},c="microkernel \u8bbe\u8ba18",a={},s=[{value:"1. \u76ee\u6807",id:"1-\u76ee\u6807",level:2},{value:"2. \u4ee3\u7801\u6539\u52a8",id:"2-\u4ee3\u7801\u6539\u52a8",level:2},{value:"2.1 Kernel\uff08\u6838\u5fc3\uff09",id:"21-kernel\u6838\u5fc3",level:3},{value:"2.2 echo\u670d\u52a1",id:"22-echo\u670d\u52a1",level:3},{value:"2.3 main",id:"23-main",level:3},{value:"2.4 \u8fd0\u884c\u7ed3\u679c",id:"24-\u8fd0\u884c\u7ed3\u679c",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"microkernel-\u8bbe\u8ba18",children:"microkernel \u8bbe\u8ba18"})}),"\n",(0,o.jsx)(n.h2,{id:"1-\u76ee\u6807",children:"1. \u76ee\u6807"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"\u670d\u52a1\u70ed\u66f4\u65b0\u589e\u52a0\u72b6\u6001\u8fc1\u79fb"}),"\n",(0,o.jsx)(n.li,{children:"\u652f\u6301\u670d\u52a1\u52a0\u5bc6\u72b6\u6001\u8fc1\u79fb"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"2-\u4ee3\u7801\u6539\u52a8",children:"2. \u4ee3\u7801\u6539\u52a8"}),"\n",(0,o.jsx)(n.h3,{id:"21-kernel\u6838\u5fc3",children:"2.1 Kernel\uff08\u6838\u5fc3\uff09"}),"\n",(0,o.jsx)(n.p,{children:"\u65b0\u589e\u72b6\u6001\u63a5\u53e3"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:"// \u65e7\u670d\u52a1\u53ef\u9009\u5b9e\u73b0\uff1a\u5bfc\u51fa\u72b6\u6001\ntype Exportable interface {\n    ExportState() any\n}\n\n// \u65b0\u670d\u52a1\u53ef\u9009\u5b9e\u73b0\uff1a\u5bfc\u5165\u72b6\u6001\ntype Importable interface {\n    ImportState(state any) error\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"\u52a0\u5bc6\u63a5\u53e3"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:"type Crypter interface {\n    Encrypt(data any) ([]byte, error)\n    Decrypt(cipher []byte) (any, error)\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"\u52a0\u5bc6\u5b9e\u73b0"}),"\n",(0,o.jsx)(n.p,{children:"\u4f7f\u7528aes"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'type AESCrypter struct {\n    key []byte // 16/24/32 \u5b57\u8282\n}\n\nfunc NewAESCrypter(key []byte) *AESCrypter {\n    return &AESCrypter{key: key}\n}\n\nfunc (a *AESCrypter) Encrypt(data any) ([]byte, error) {\n    plaintext, err := json.Marshal(data)\n    if err != nil {\n        return nil, err\n    }\n    block, err := aes.NewCipher(a.key)\n    if err != nil {\n        return nil, err\n    }\n    aesgcm, err := cipher.NewGCM(block)\n    if err != nil {\n        return nil, err\n    }\n\n    nonce := make([]byte, aesgcm.NonceSize())\n    if _, err := io.ReadFull(rand.Reader, nonce); err != nil {\n        return nil, err\n    }\n\n    ciphertext := aesgcm.Seal(nonce, nonce, plaintext, nil)\n    return ciphertext, nil\n}\n\nfunc (a *AESCrypter) Decrypt(ciphertext []byte) (any, error) {\n    block, err := aes.NewCipher(a.key)\n    if err != nil {\n        return nil, err\n    }\n    aesgcm, err := cipher.NewGCM(block)\n    if err != nil {\n        return nil, err\n    }\n\n    nonceSize := aesgcm.NonceSize()\n    if len(ciphertext) < nonceSize {\n        return nil, fmt.Errorf("ciphertext too short")\n    }\n\n    nonce := ciphertext[:nonceSize]\n    cipherData := ciphertext[nonceSize:]\n\n    plaintext, err := aesgcm.Open(nil, nonce, cipherData, nil)\n    if err != nil {\n        return nil, err\n    }\n\n    var result any\n    if err := json.Unmarshal(plaintext, &result); err != nil {\n        return nil, err\n    }\n    return result, nil\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"\u66ff\u6362\u670d\u52a1"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'//func (k *MicroKernel) ReplaceService(newSvc Service) error {\n//\tk.mu.Lock()\n//\tdefer k.mu.Unlock()\n//\n//\tname := newSvc.Name()\n//\toldMeta, exists := k.services[name]\n//\tvar state any\n//\n//\tif exists {\n//\t\tif exporter, ok := oldMeta.svc.(Exportable); ok {\n//\t\t\tstate = exporter.ExportState()\n//\t\t}\n//\t\toldMeta.svc.Stop()\n//\t\tfmt.Printf("Stopped old version of %s\\n", name)\n//\t}\n//\n//\t// \u72b6\u6001\u8fc1\u79fb\n//\tif importer, ok := newSvc.(Importable); ok && state != nil {\n//\t\tif err := importer.ImportState(state); err != nil {\n//\t\t\treturn fmt.Errorf("state import failed: %w\\n", err)\n//\t\t}\n//\t\tfmt.Printf("State migrated for service %s\\n", name)\n//\t}\n//\n//\t// \u66ff\u6362\u670d\u52a1\u5143\u4fe1\u606f\n//\tk.services[name] = &serviceMeta{\n//\t\tsvc:   newSvc,\n//\t\tdeps:  newSvc.Dependencies(),\n//\t\tstate: Created,\n//\t}\n//\n//\t// \u91cd\u542f\u670d\u52a1\n//\tif exists && oldMeta.state == Running {\n//\t\tnewSvc.Start()\n//\t\tk.services[name].state = Running\n//\t\tfmt.Printf("Started new version of %s", name)\n//\t} else {\n//\t\tfmt.Printf("Registered new version of %s (not started)", name)\n//\t}\n//\n//\treturn nil\n//}\n\nfunc (k *MicroKernel) ReplaceServiceEncrypted(newSvc Service, crypter Crypter) error {\n\tk.mu.Lock()\n\tdefer k.mu.Unlock()\n\n\tname := newSvc.Name()\n\toldMeta, exists := k.services[name]\n\tvar encryptedState []byte\n\n\tif exists {\n\t\tif exporter, ok := oldMeta.svc.(Exportable); ok {\n\t\t\trawState := exporter.ExportState()\n\t\t\tcipher, err := crypter.Encrypt(rawState)\n\t\t\tif err != nil {\n\t\t\t\treturn fmt.Errorf("state encryption failed: %w", err)\n\t\t\t}\n\t\t\tencryptedState = cipher\n\t\t}\n\t\toldMeta.svc.Stop()\n\t\tfmt.Printf("Stopped old version of %s\\n", name)\n\t}\n\n\t// \u72b6\u6001\u5bfc\u5165\uff08\u89e3\u5bc6\uff09\n\tif importer, ok := newSvc.(Importable); ok && encryptedState != nil {\n\t\tdecrypted, err := crypter.Decrypt(encryptedState)\n\t\tif err != nil {\n\t\t\treturn fmt.Errorf("state decryption failed: %w", err)\n\t\t}\n\t\tif err := importer.ImportState(decrypted); err != nil {\n\t\t\treturn fmt.Errorf("state import failed: %w", err)\n\t\t}\n\t\tfmt.Printf("Encrypted state migrated for service %s\\n", name)\n\t}\n\n\tk.services[name] = &serviceMeta{\n\t\tsvc:   newSvc,\n\t\tdeps:  newSvc.Dependencies(),\n\t\tstate: Created,\n\t}\n\n\tif exists && oldMeta.state == Running {\n\t\tnewSvc.Start()\n\t\tk.services[name].state = Running\n\t\tfmt.Printf("Started new version of %s\\n", name)\n\t} else {\n\t\tfmt.Printf("Registered new version of %s (not started)\\n", name)\n\t}\n\n\treturn nil\n}\n\n'})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"22-echo\u670d\u52a1",children:"2.2 echo\u670d\u52a1"}),"\n",(0,o.jsx)(n.p,{children:"\u5b9e\u73b0\u72b6\u6001\u63a5\u53e3"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'func (e *EchoServiceV2) ImportState(state any) error {\n\tif val, ok := state.(int); ok {\n\t\te.echoCount = val\n\t\treturn nil\n\t}\n\treturn fmt.Errorf("invalid state type")\n}\nfunc (e *EchoService) ExportState() any {\n\treturn e.echoCount\n}\n\n'})}),"\n",(0,o.jsx)(n.h3,{id:"23-main",children:"2.3 main"}),"\n",(0,o.jsx)(n.p,{children:"\u70ed\u66ff\u6362\u670d\u52a1"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'// 7. \u70ed\u66ff\u6362\u670d\u52a1\n\t// \u70ed\u66f4\u65b0\u4e3a V2\naesKey := []byte("1234567890123456") // 16 \u5b57\u8282\u5bf9\u79f0\u5bc6\u94a5\n\tmicroKernel.ReplaceServiceEncrypted(service.NewEchoServiceV2(microKernel), microkernel.NewAESCrypter(aesKey))\n\t\n\n'})}),"\n",(0,o.jsx)(n.h3,{id:"24-\u8fd0\u884c\u7ed3\u679c",children:"2.4 \u8fd0\u884c\u7ed3\u679c"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"Registered: logger\nRegistered: echo\nStarting all services...\nServices: [echo logger]\n[echo] starting...\nStarted: echo\n[logger] starting...\nStarted: logger\n[logger] LOG: Hello, Microkernel!\n[MicroKernel] Event from logger: - Hello, Microkernel!\n[logger] got reply from kernel: Handled by kernel\n[logger] LOG: Hello, Echo!\n[MicroKernel] Event from logger: - Hello, Echo!\n[logger] got reply from kernel: echo service handled\n[MicroKernel] Send Event to echo: Hello, Log!\n{0 echo service handled from microKernel: Hello, Log!}\n[echo] stopping...\nStopped old version of echo\nState migrated for service echo\n[2025-04-24 21:28:38.032] [INFO] [echo] [echov2] starting...\n\nStarted new version of echo[MicroKernel] Send Event to echo: Hello, Log!\n[echo] count is 10\n{0 echo v2 service handled from microKernel: Hello, Log!}\n[MicroKernel] Event from main: - log\nv2 reply: {0 Handled by kernel ok}\nStopping all services...\n[logger] stopping...\nStopped: logger\n[echov2] stopping...\nStopped: echo\n[log] stopping\n\n"})}),"\n",(0,o.jsxs)(n.p,{children:["\u67e5\u770b",(0,o.jsx)(n.a,{href:"https://gitee.com/weidongkl/weidongkl.github.io/blob/master/docs/note/golang/design/microkernel/microkernel8",children:"\u5b8c\u6574\u4ee3\u7801"})]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>c});var t=r(6540);const o={},i=t.createContext(o);function l(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);