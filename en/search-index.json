[{"documents":[{"i":971,"t":"","u":"/en/blog/archive","b":["博客"]},{"i":972,"t":"","u":"/en/blog/authors","b":["博客"]},{"i":973,"t":"","u":"/en/blog/authors/weidongkl","b":["博客"]},{"i":980,"t":"人类简史","u":"/en/blog/人类简史","b":["博客"]},{"i":990,"t":"南明史","u":"/en/blog/南明史","b":["博客"]},{"i":992,"t":"一句顶一万句","u":"/en/blog/一句顶一万句","b":["博客"]},{"i":994,"t":"Makefile 常用方法","u":"/en/docs/note/build/makefile_function","b":["笔记","Build"]},{"i":1060,"t":"microkernel 设计1","u":"/en/docs/note/design/microkernel/microkernel1","b":["笔记","Design","微内核设计模式"]},{"i":1080,"t":"Makefile 中 : 和 :: 的使用指南","u":"/en/docs/note/build/makefile:","b":["笔记","Build"]},{"i":1099,"t":"microkernel 设计2","u":"/en/docs/note/design/microkernel/microkernel2","b":["笔记","Design","微内核设计模式"]},{"i":1115,"t":"microkernel 设计3","u":"/en/docs/note/design/microkernel/microkernel3","b":["笔记","Design","微内核设计模式"]},{"i":1126,"t":"Future-Proof 机制","u":"/en/docs/note/design/future_proof","b":["笔记","Design"]},{"i":1150,"t":"microkernel 设计4","u":"/en/docs/note/design/microkernel/microkernel4","b":["笔记","Design","微内核设计模式"]},{"i":1162,"t":"microkernel 设计5","u":"/en/docs/note/design/microkernel/microkernel5","b":["笔记","Design","微内核设计模式"]},{"i":1170,"t":"microkernel 设计6","u":"/en/docs/note/design/microkernel/microkernel6","b":["笔记","Design","微内核设计模式"]},{"i":1180,"t":"microkernel 设计7","u":"/en/docs/note/design/microkernel/microkernel7","b":["笔记","Design","微内核设计模式"]},{"i":1192,"t":"microkernel 设计8","u":"/en/docs/note/design/microkernel/microkernel8","b":["笔记","Design","微内核设计模式"]},{"i":1204,"t":"microkernel 设计9","u":"/en/docs/note/design/microkernel/microkernel9","b":["笔记","Design","微内核设计模式"]},{"i":1226,"t":"面向对象编程中的设计原则","u":"/en/docs/note/design/oop_pinciple/principle","b":["笔记","Golang","Design","面相对象设计原则","Design","面相对象设计原则"]},{"i":1232,"t":"开闭原则(OCP)","u":"/en/docs/note/design/oop_pinciple/ocp","b":["笔记","Design","面相对象设计原则"]},{"i":1268,"t":"Golang 多goroutine交互模型","u":"/en/docs/note/design/multi_goroutine","b":["笔记","Design"]},{"i":1280,"t":"单一职责原则(SRP)","u":"/en/docs/note/design/oop_pinciple/srp","b":["笔记","Design","面相对象设计原则"]},{"i":1307,"t":"git 错误","u":"/en/docs/note/git/git_err","b":["笔记","Git"]},{"i":1310,"t":"Golang os/exec 用法","u":"/en/docs/note/golang/cmd","b":["笔记","Golang"]},{"i":1336,"t":"Golang bcrypt","u":"/en/docs/note/golang/bcrypt","b":["笔记","Golang"]},{"i":1354,"t":"Golang 并发编程","u":"/en/docs/note/golang/concurrency","b":["笔记","Golang"]},{"i":1384,"t":"microkernel 设计1","u":"/en/docs/note/golang/design/microkernel/microkernel1","b":["笔记","Golang","Design","微内核设计模式"]},{"i":1404,"t":"Future-Proof 机制","u":"/en/docs/note/golang/design/future_proof","b":["笔记","Golang","Design"]},{"i":1428,"t":"Golang runtime/debug 用法","u":"/en/docs/note/golang/debug","b":["笔记","Golang"]},{"i":1445,"t":"microkernel 设计3","u":"/en/docs/note/golang/design/microkernel/microkernel3","b":["笔记","Golang","Design","微内核设计模式"]},{"i":1456,"t":"microkernel 设计2","u":"/en/docs/note/golang/design/microkernel/microkernel2","b":["笔记","Golang","Design","微内核设计模式"]},{"i":1472,"t":"microkernel 设计5","u":"/en/docs/note/golang/design/microkernel/microkernel5","b":["笔记","Golang","Design","微内核设计模式"]},{"i":1480,"t":"microkernel 设计6","u":"/en/docs/note/golang/design/microkernel/microkernel6","b":["笔记","Golang","Design","微内核设计模式"]},{"i":1490,"t":"microkernel 设计4","u":"/en/docs/note/golang/design/microkernel/microkernel4","b":["笔记","Golang","Design","微内核设计模式"]},{"i":1502,"t":"microkernel 设计7","u":"/en/docs/note/golang/design/microkernel/microkernel7","b":["笔记","Golang","Design","微内核设计模式"]},{"i":1514,"t":"microkernel 设计8","u":"/en/docs/note/golang/design/microkernel/microkernel8","b":["笔记","Golang","Design","微内核设计模式"]},{"i":1526,"t":"microkernel 设计9","u":"/en/docs/note/golang/design/microkernel/microkernel9","b":["笔记","Golang","Design","微内核设计模式"]},{"i":1548,"t":"面向对象编程中的设计原则","u":"/en/docs/note/golang/design/oop_pinciple/principle","b":["笔记","Golang","Design","面相对象设计原则"]},{"i":1554,"t":"单一职责原则(SRP)","u":"/en/docs/note/golang/design/oop_pinciple/srp","b":["笔记","Golang","Design","面相对象设计原则"]},{"i":1581,"t":"开闭原则(OCP)","u":"/en/docs/note/golang/design/oop_pinciple/ocp","b":["笔记","Golang","Design","面相对象设计原则"]},{"i":1617,"t":"goland 问题处理记录","u":"/en/docs/note/golang/goland","b":["笔记","Golang"]},{"i":1620,"t":"Golang 随笔","u":"/en/docs/note/golang/jotting","b":["笔记","Golang"]},{"i":1643,"t":"Golang 多goroutine交互模型","u":"/en/docs/note/golang/design/multi_goroutine","b":["笔记","Golang","Design"]},{"i":1655,"t":"kingpin 用法","u":"/en/docs/note/golang/kingpin","b":["笔记","Golang"]},{"i":1680,"t":"Golang JSON 解析","u":"/en/docs/note/golang/json","b":["笔记","Golang"]},{"i":1700,"t":"Golang Reflect","u":"/en/docs/note/golang/reflect","b":["笔记","Golang"]},{"i":1720,"t":"Golang Validator","u":"/en/docs/note/golang/validator","b":["笔记","Golang"]},{"i":1737,"t":"Golang 序列化/反序列化","u":"/en/docs/note/golang/serialization","b":["笔记","Golang"]},{"i":1773,"t":"chroot 用法","u":"/en/docs/note/os/chroot","b":["笔记","OS"]},{"i":1798,"t":"Golang Unix Socket 服务","u":"/en/docs/note/golang/web_server_unix","b":["笔记","Golang"]},{"i":1824,"t":"GDB 调试工具","u":"/en/docs/note/os/debug/gdb","b":["笔记","OS","调试工具"]},{"i":1887,"t":"Golang sys/unix syscall","u":"/en/docs/note/golang/syscall","b":["笔记","Golang"]},{"i":1931,"t":"僵尸进程","u":"/en/docs/note/os/zombie","b":["笔记","OS"]}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/971",[]],["t/972",[]],["t/973",[]],["t/980",[0,4.107,1,4.107]],["t/990",[2,4.107,3,4.107]],["t/992",[4,3.537,5,3.537,6,3.537]],["t/994",[7,0.191,8,3.537,9,3.537]],["t/1060",[7,0.264,10,0.956]],["t/1080",[7,0.191,11,2.7,12,3.537]],["t/1099",[7,0.264,10,0.956]],["t/1115",[7,0.264,10,0.956]],["t/1126",[7,0.264,13,3.032]],["t/1150",[7,0.264,10,0.956]],["t/1162",[7,0.264,10,0.956]],["t/1170",[7,0.264,10,0.956]],["t/1180",[7,0.264,10,0.956]],["t/1192",[7,0.264,10,0.956]],["t/1204",[7,0.264,10,0.956]],["t/1226",[10,0.839,11,2.371,14,2.662,15,1.835]],["t/1232",[7,0.191,15,2.089,16,3.032]],["t/1268",[7,0.221,17,2.373,18,2.373,19,2.373]],["t/1280",[7,0.168,15,1.835,20,2.662,21,2.662]],["t/1307",[7,0.222,22,4.107]],["t/1310",[7,0.281,23,2.153]],["t/1336",[7,0.292]],["t/1354",[7,0.191,24,3.537,25,3.537]],["t/1384",[7,0.264,10,0.956]],["t/1404",[7,0.264,13,3.032]],["t/1428",[7,0.281,23,2.153]],["t/1445",[7,0.264,10,0.956]],["t/1456",[7,0.264,10,0.956]],["t/1472",[7,0.264,10,0.956]],["t/1480",[7,0.264,10,0.956]],["t/1490",[7,0.264,10,0.956]],["t/1502",[7,0.264,10,0.956]],["t/1514",[7,0.264,10,0.956]],["t/1526",[7,0.264,10,0.956]],["t/1548",[10,0.839,11,2.371,14,2.662,15,1.835]],["t/1554",[7,0.168,15,1.835,20,2.662,21,2.662]],["t/1581",[7,0.191,15,2.089,16,3.032]],["t/1617",[7,0.168,26,3.105,27,3.105,28,3.105]],["t/1620",[7,0.222,29,4.107]],["t/1643",[7,0.221,17,2.373,18,2.373,19,2.373]],["t/1655",[7,0.222,23,2.848]],["t/1680",[7,0.264,30,3.537]],["t/1700",[7,0.292]],["t/1720",[7,0.292]],["t/1737",[7,0.168,31,4.455,32,3.105]],["t/1773",[7,0.222,23,2.848]],["t/1798",[7,0.281,33,3.105]],["t/1824",[7,0.191,34,3.537,35,3.537]],["t/1887",[7,0.307]],["t/1931",[36,4.107,37,4.107]]],"invertedIndex":[["",{"_index":7,"t":{"994":{"position":[[0,8]]},"1060":{"position":[[0,11],[14,1]]},"1080":{"position":[[0,8]]},"1099":{"position":[[0,11],[14,1]]},"1115":{"position":[[0,11],[14,1]]},"1126":{"position":[[0,6],[7,5]]},"1150":{"position":[[0,11],[14,1]]},"1162":{"position":[[0,11],[14,1]]},"1170":{"position":[[0,11],[14,1]]},"1180":{"position":[[0,11],[14,1]]},"1192":{"position":[[0,11],[14,1]]},"1204":{"position":[[0,11],[14,1]]},"1232":{"position":[[5,3]]},"1268":{"position":[[0,6],[8,9]]},"1280":{"position":[[7,3]]},"1307":{"position":[[0,3]]},"1310":{"position":[[0,6],[7,2],[10,4]]},"1336":{"position":[[0,6],[7,6]]},"1354":{"position":[[0,6]]},"1384":{"position":[[0,11],[14,1]]},"1404":{"position":[[0,6],[7,5]]},"1428":{"position":[[0,6],[7,7],[15,5]]},"1445":{"position":[[0,11],[14,1]]},"1456":{"position":[[0,11],[14,1]]},"1472":{"position":[[0,11],[14,1]]},"1480":{"position":[[0,11],[14,1]]},"1490":{"position":[[0,11],[14,1]]},"1502":{"position":[[0,11],[14,1]]},"1514":{"position":[[0,11],[14,1]]},"1526":{"position":[[0,11],[14,1]]},"1554":{"position":[[7,3]]},"1581":{"position":[[5,3]]},"1617":{"position":[[0,6]]},"1620":{"position":[[0,6]]},"1643":{"position":[[0,6],[8,9]]},"1655":{"position":[[0,7]]},"1680":{"position":[[0,6],[7,4]]},"1700":{"position":[[0,6],[7,7]]},"1720":{"position":[[0,6],[7,9]]},"1737":{"position":[[0,6]]},"1773":{"position":[[0,6]]},"1798":{"position":[[0,6],[7,4],[12,6]]},"1824":{"position":[[0,3]]},"1887":{"position":[[0,6],[7,3],[11,4],[16,7]]}}}],["一万句",{"_index":6,"t":{"992":{"position":[[3,3]]}}}],["一句",{"_index":4,"t":{"992":{"position":[[0,2]]}}}],["中",{"_index":11,"t":{"1080":{"position":[[9,1]]},"1226":{"position":[[6,1]]},"1548":{"position":[[6,1]]}}}],["交互",{"_index":18,"t":{"1268":{"position":[[17,2]]},"1643":{"position":[[17,2]]}}}],["人类",{"_index":0,"t":{"980":{"position":[[0,2]]}}}],["使用指南",{"_index":12,"t":{"1080":{"position":[[19,4]]}}}],["僵尸",{"_index":36,"t":{"1931":{"position":[[0,2]]}}}],["单一",{"_index":20,"t":{"1280":{"position":[[0,2]]},"1554":{"position":[[0,2]]}}}],["南",{"_index":2,"t":{"990":{"position":[[0,1]]}}}],["原则",{"_index":15,"t":{"1226":{"position":[[10,2]]},"1232":{"position":[[2,2]]},"1280":{"position":[[4,2]]},"1548":{"position":[[10,2]]},"1554":{"position":[[4,2]]},"1581":{"position":[[2,2]]}}}],["反",{"_index":32,"t":{"1737":{"position":[[11,1]]}}}],["处理",{"_index":27,"t":{"1617":{"position":[[9,2]]}}}],["多",{"_index":17,"t":{"1268":{"position":[[7,1]]},"1643":{"position":[[7,1]]}}}],["工具",{"_index":35,"t":{"1824":{"position":[[6,2]]}}}],["常用",{"_index":8,"t":{"994":{"position":[[9,2]]}}}],["并发",{"_index":24,"t":{"1354":{"position":[[7,2]]}}}],["序列化",{"_index":31,"t":{"1737":{"position":[[7,3],[12,3]]}}}],["开闭",{"_index":16,"t":{"1232":{"position":[[0,2]]},"1581":{"position":[[0,2]]}}}],["方法",{"_index":9,"t":{"994":{"position":[[11,2]]}}}],["明史",{"_index":3,"t":{"990":{"position":[[1,2]]}}}],["服务",{"_index":33,"t":{"1798":{"position":[[19,2]]}}}],["机制",{"_index":13,"t":{"1126":{"position":[[13,2]]},"1404":{"position":[[13,2]]}}}],["模型",{"_index":19,"t":{"1268":{"position":[[19,2]]},"1643":{"position":[[19,2]]}}}],["用法",{"_index":23,"t":{"1310":{"position":[[15,2]]},"1428":{"position":[[21,2]]},"1655":{"position":[[8,2]]},"1773":{"position":[[7,2]]}}}],["简史",{"_index":1,"t":{"980":{"position":[[2,2]]}}}],["编程",{"_index":25,"t":{"1354":{"position":[[9,2]]}}}],["职责",{"_index":21,"t":{"1280":{"position":[[2,2]]},"1554":{"position":[[2,2]]}}}],["解析",{"_index":30,"t":{"1680":{"position":[[12,2]]}}}],["记录",{"_index":28,"t":{"1617":{"position":[[11,2]]}}}],["设计",{"_index":10,"t":{"1060":{"position":[[12,2]]},"1099":{"position":[[12,2]]},"1115":{"position":[[12,2]]},"1150":{"position":[[12,2]]},"1162":{"position":[[12,2]]},"1170":{"position":[[12,2]]},"1180":{"position":[[12,2]]},"1192":{"position":[[12,2]]},"1204":{"position":[[12,2]]},"1226":{"position":[[8,2]]},"1384":{"position":[[12,2]]},"1445":{"position":[[12,2]]},"1456":{"position":[[12,2]]},"1472":{"position":[[12,2]]},"1480":{"position":[[12,2]]},"1490":{"position":[[12,2]]},"1502":{"position":[[12,2]]},"1514":{"position":[[12,2]]},"1526":{"position":[[12,2]]},"1548":{"position":[[8,2]]}}}],["调试",{"_index":34,"t":{"1824":{"position":[[4,2]]}}}],["进程",{"_index":37,"t":{"1931":{"position":[[2,2]]}}}],["错误",{"_index":22,"t":{"1307":{"position":[[4,2]]}}}],["问题",{"_index":26,"t":{"1617":{"position":[[7,2]]}}}],["随笔",{"_index":29,"t":{"1620":{"position":[[7,2]]}}}],["面向对象编程",{"_index":14,"t":{"1226":{"position":[[0,6]]},"1548":{"position":[[0,6]]}}}],["顶",{"_index":5,"t":{"992":{"position":[[2,1]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":974,"t":"人类简史","u":"/en/blog/authors/weidongkl","h":"","p":973},{"i":976,"t":"南明史","u":"/en/blog/authors/weidongkl","h":"","p":973},{"i":978,"t":"一句顶一万句","u":"/en/blog/authors/weidongkl","h":"","p":973},{"i":982,"t":"司法","u":"/en/blog/人类简史","h":"#司法","p":980},{"i":984,"t":"文化","u":"/en/blog/人类简史","h":"#文化","p":980},{"i":986,"t":"经济","u":"/en/blog/人类简史","h":"#经济","p":980},{"i":988,"t":"家庭","u":"/en/blog/人类简史","h":"#家庭","p":980},{"i":995,"t":"info/warning","u":"/en/docs/note/build/makefile_function","h":"#infowarning","p":994},{"i":996,"t":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能","p":994},{"i":998,"t":"调试：","u":"/en/docs/note/build/makefile_function","h":"#调试","p":994},{"i":1000,"t":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例","p":994},{"i":1002,"t":"subst","u":"/en/docs/note/build/makefile_function","h":"#subst","p":994},{"i":1003,"t":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-1","p":994},{"i":1005,"t":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法","p":994},{"i":1007,"t":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-1","p":994},{"i":1009,"t":"wildcard","u":"/en/docs/note/build/makefile_function","h":"#wildcard","p":994},{"i":1010,"t":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-2","p":994},{"i":1012,"t":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-1","p":994},{"i":1014,"t":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-2","p":994},{"i":1016,"t":"patsubst","u":"/en/docs/note/build/makefile_function","h":"#patsubst","p":994},{"i":1017,"t":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-3","p":994},{"i":1019,"t":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-2","p":994},{"i":1021,"t":"区别：","u":"/en/docs/note/build/makefile_function","h":"#区别","p":994},{"i":1023,"t":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-3","p":994},{"i":1025,"t":"addsuffix","u":"/en/docs/note/build/makefile_function","h":"#addsuffix","p":994},{"i":1026,"t":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-4","p":994},{"i":1028,"t":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-3","p":994},{"i":1030,"t":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-4","p":994},{"i":1032,"t":"basename","u":"/en/docs/note/build/makefile_function","h":"#basename","p":994},{"i":1033,"t":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-5","p":994},{"i":1035,"t":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-4","p":994},{"i":1037,"t":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-5","p":994},{"i":1039,"t":"firstword","u":"/en/docs/note/build/makefile_function","h":"#firstword","p":994},{"i":1040,"t":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-6","p":994},{"i":1042,"t":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-5","p":994},{"i":1044,"t":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-6","p":994},{"i":1046,"t":"strip","u":"/en/docs/note/build/makefile_function","h":"#strip","p":994},{"i":1047,"t":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-7","p":994},{"i":1049,"t":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-6","p":994},{"i":1051,"t":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-7","p":994},{"i":1053,"t":"word","u":"/en/docs/note/build/makefile_function","h":"#word","p":994},{"i":1054,"t":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-8","p":994},{"i":1056,"t":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-7","p":994},{"i":1058,"t":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-8","p":994},{"i":1062,"t":"1. 微内核核心设计","u":"/en/docs/note/design/microkernel/microkernel1","h":"#1-微内核核心设计","p":1060},{"i":1063,"t":"1.1 特点","u":"/en/docs/note/design/microkernel/microkernel1","h":"#11-特点","p":1060},{"i":1065,"t":"1.2 核心组件","u":"/en/docs/note/design/microkernel/microkernel1","h":"#12-核心组件","p":1060},{"i":1067,"t":"2. Go 实现 microkernel","u":"/en/docs/note/design/microkernel/microkernel1","h":"#2-go-实现-microkernel","p":1060},{"i":1068,"t":"2.1 定义 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel1","h":"#21-定义-kernel核心","p":1060},{"i":1070,"t":"2.2 实现示例服务（LogService）","u":"/en/docs/note/design/microkernel/microkernel1","h":"#22-实现示例服务logservice","p":1060},{"i":1072,"t":"2.3 主程序（运行微内核 + 服务）","u":"/en/docs/note/design/microkernel/microkernel1","h":"#23-主程序运行微内核--服务","p":1060},{"i":1074,"t":"2.4 运行结果","u":"/en/docs/note/design/microkernel/microkernel1","h":"#24-运行结果","p":1060},{"i":1076,"t":"3. 扩展方向","u":"/en/docs/note/design/microkernel/microkernel1","h":"#3-扩展方向","p":1060},{"i":1078,"t":"4. 总结","u":"/en/docs/note/design/microkernel/microkernel1","h":"#4-总结","p":1060},{"i":1081,"t":"1. 概述","u":"/en/docs/note/build/makefile:","h":"#1-概述","p":1080},{"i":1083,"t":"2. :（单冒号）与 ::（双冒号）的区别","u":"/en/docs/note/build/makefile:","h":"#2-单冒号与-双冒号的区别","p":1080},{"i":1085,"t":"3. :（单冒号）的用法","u":"/en/docs/note/build/makefile:","h":"#3-单冒号的用法","p":1080},{"i":1086,"t":"3.1 基本示例","u":"/en/docs/note/build/makefile:","h":"#31-基本示例","p":1080},{"i":1088,"t":"3.2 依赖的覆盖","u":"/en/docs/note/build/makefile:","h":"#32-依赖的覆盖","p":1080},{"i":1090,"t":"4. ::（双冒号）的用法","u":"/en/docs/note/build/makefile:","h":"#4-双冒号的用法","p":1080},{"i":1091,"t":"4.1 基本示例","u":"/en/docs/note/build/makefile:","h":"#41-基本示例","p":1080},{"i":1093,"t":"4.2 组合依赖","u":"/en/docs/note/build/makefile:","h":"#42-组合依赖","p":1080},{"i":1095,"t":"5. : vs :: 适用场景总结","u":"/en/docs/note/build/makefile:","h":"#5--vs--适用场景总结","p":1080},{"i":1097,"t":"6. 结论","u":"/en/docs/note/build/makefile:","h":"#6-结论","p":1080},{"i":1101,"t":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel2","h":"#1-目标","p":1099},{"i":1103,"t":"2. 代码改动","u":"/en/docs/note/design/microkernel/microkernel2","h":"#2-代码改动","p":1099},{"i":1104,"t":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel2","h":"#21-kernel核心","p":1099},{"i":1106,"t":"2.2 LogService","u":"/en/docs/note/design/microkernel/microkernel2","h":"#22-logservice","p":1099},{"i":1108,"t":"2.3 主程序（运行微内核 + 服务）","u":"/en/docs/note/design/microkernel/microkernel2","h":"#23-主程序运行微内核--服务","p":1099},{"i":1110,"t":"2.4 运行结果","u":"/en/docs/note/design/microkernel/microkernel2","h":"#24-运行结果","p":1099},{"i":1112,"t":"2.5 优化函数和变量命名","u":"/en/docs/note/design/microkernel/microkernel2","h":"#25-优化函数和变量命名","p":1099},{"i":1114,"t":"","u":"/en/docs/note/design/microkernel/microkernel2","h":"","p":1099},{"i":1116,"t":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel3","h":"#1-目标","p":1115},{"i":1118,"t":"2. 代码改动","u":"/en/docs/note/design/microkernel/microkernel3","h":"#2-代码改动","p":1115},{"i":1120,"t":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel3","h":"#21-kernel核心","p":1115},{"i":1122,"t":"2.2 LogService","u":"/en/docs/note/design/microkernel/microkernel3","h":"#22-logservice","p":1115},{"i":1124,"t":"2.3 运行结果","u":"/en/docs/note/design/microkernel/microkernel3","h":"#23-运行结果","p":1115},{"i":1128,"t":"1. Future-Proof 机制的关键原则","u":"/en/docs/note/design/future_proof","h":"","p":1126},{"i":1130,"t":"1.1.  松耦合（Loose Coupling）","u":"/en/docs/note/design/future_proof","h":"#11--松耦合loose-coupling","p":1126},{"i":1132,"t":"1.2. 可扩展性（Extensibility）","u":"/en/docs/note/design/future_proof","h":"#12-可扩展性extensibility","p":1126},{"i":1134,"t":"1.3. 配置化而非硬编码","u":"/en/docs/note/design/future_proof","h":"#13-配置化而非硬编码","p":1126},{"i":1136,"t":"1.4. 协议与数据格式的兼容性","u":"/en/docs/note/design/future_proof","h":"#14-协议与数据格式的兼容性","p":1126},{"i":1138,"t":"1.5. 并发模型的可适应性","u":"/en/docs/note/design/future_proof","h":"#15-并发模型的可适应性","p":1126},{"i":1140,"t":"1.6. 可观测性（Observability）","u":"/en/docs/note/design/future_proof","h":"#16-可观测性observability","p":1126},{"i":1142,"t":"1.7. 防御性编程","u":"/en/docs/note/design/future_proof","h":"#17-防御性编程","p":1126},{"i":1144,"t":"2. 聚合器示例","u":"/en/docs/note/design/future_proof","h":"#2-聚合器示例","p":1126},{"i":1146,"t":"3. 反模式：非 Future-Proof 的设计","u":"/en/docs/note/design/future_proof","h":"#3-反模式非-future-proof-的设计","p":1126},{"i":1148,"t":"4. 总结","u":"/en/docs/note/design/future_proof","h":"#4-总结","p":1126},{"i":1151,"t":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel4","h":"#1-目标","p":1150},{"i":1153,"t":"2. 代码改动","u":"/en/docs/note/design/microkernel/microkernel4","h":"#2-代码改动","p":1150},{"i":1154,"t":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel4","h":"#21-kernel核心","p":1150},{"i":1156,"t":"2.2 LogService","u":"/en/docs/note/design/microkernel/microkernel4","h":"#22-logservice","p":1150},{"i":1158,"t":"2.3 增加另一个类似的EchoService","u":"/en/docs/note/design/microkernel/microkernel4","h":"#23-增加另一个类似的echoservice","p":1150},{"i":1160,"t":"2.4 运行结果","u":"/en/docs/note/design/microkernel/microkernel4","h":"#24-运行结果","p":1150},{"i":1163,"t":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel5","h":"#1-目标","p":1162},{"i":1165,"t":"2. 代码改动","u":"/en/docs/note/design/microkernel/microkernel5","h":"#2-代码改动","p":1162},{"i":1166,"t":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel5","h":"#21-kernel核心","p":1162},{"i":1168,"t":"2.2 运行结果","u":"/en/docs/note/design/microkernel/microkernel5","h":"#22-运行结果","p":1162},{"i":1171,"t":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel6","h":"#1-目标","p":1170},{"i":1173,"t":"2. 代码改动","u":"/en/docs/note/design/microkernel/microkernel6","h":"#2-代码改动","p":1170},{"i":1174,"t":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel6","h":"#21-kernel核心","p":1170},{"i":1176,"t":"2.2 服务","u":"/en/docs/note/design/microkernel/microkernel6","h":"#22-服务","p":1170},{"i":1178,"t":"2.3 运行结果","u":"/en/docs/note/design/microkernel/microkernel6","h":"#23-运行结果","p":1170},{"i":1181,"t":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel7","h":"#1-目标","p":1180},{"i":1183,"t":"2. 代码改动","u":"/en/docs/note/design/microkernel/microkernel7","h":"#2-代码改动","p":1180},{"i":1184,"t":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel7","h":"#21-kernel核心","p":1180},{"i":1186,"t":"2.2 日志服务","u":"/en/docs/note/design/microkernel/microkernel7","h":"#22-日志服务","p":1180},{"i":1188,"t":"2.3 main","u":"/en/docs/note/design/microkernel/microkernel7","h":"#23-main","p":1180},{"i":1190,"t":"2.4 运行结果","u":"/en/docs/note/design/microkernel/microkernel7","h":"#24-运行结果","p":1180},{"i":1193,"t":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel8","h":"#1-目标","p":1192},{"i":1195,"t":"2. 代码改动","u":"/en/docs/note/design/microkernel/microkernel8","h":"#2-代码改动","p":1192},{"i":1196,"t":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel8","h":"#21-kernel核心","p":1192},{"i":1198,"t":"2.2 echo服务","u":"/en/docs/note/design/microkernel/microkernel8","h":"#22-echo服务","p":1192},{"i":1200,"t":"2.3 main","u":"/en/docs/note/design/microkernel/microkernel8","h":"#23-main","p":1192},{"i":1202,"t":"2.4 运行结果","u":"/en/docs/note/design/microkernel/microkernel8","h":"#24-运行结果","p":1192},{"i":1206,"t":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel9","h":"#1-目标","p":1204},{"i":1208,"t":"2. 状态存储设计","u":"/en/docs/note/design/microkernel/microkernel9","h":"#2-状态存储设计","p":1204},{"i":1209,"t":"2.1 存储文件设计","u":"/en/docs/note/design/microkernel/microkernel9","h":"#21-存储文件设计","p":1204},{"i":1211,"t":"2.2 状态管理模块：StateStore","u":"/en/docs/note/design/microkernel/microkernel9","h":"#22-状态管理模块statestore","p":1204},{"i":1213,"t":"3. 内核集成","u":"/en/docs/note/design/microkernel/microkernel9","h":"#3-内核集成","p":1204},{"i":1214,"t":"3.1 kernel 初始化集成StateStore","u":"/en/docs/note/design/microkernel/microkernel9","h":"#31-kernel-初始化集成statestore","p":1204},{"i":1216,"t":"3.2 注册服务时尝试自动加载状态","u":"/en/docs/note/design/microkernel/microkernel9","h":"#32-注册服务时尝试自动加载状态","p":1204},{"i":1218,"t":"3.3 停止服务时，保存状态","u":"/en/docs/note/design/microkernel/microkernel9","h":"#33-停止服务时保存状态","p":1204},{"i":1220,"t":"3.4 定时持久化状态","u":"/en/docs/note/design/microkernel/microkernel9","h":"#34-定时持久化状态","p":1204},{"i":1222,"t":"4. main","u":"/en/docs/note/design/microkernel/microkernel9","h":"#4-main","p":1204},{"i":1224,"t":"4.1 运行结果","u":"/en/docs/note/design/microkernel/microkernel9","h":"#41-运行结果","p":1204},{"i":1228,"t":"SOLID原则","u":"/en/docs/note/design/oop_pinciple/principle","h":"#solid原则","p":1226},{"i":1230,"t":"其他重要原则","u":"/en/docs/note/design/oop_pinciple/principle","h":"#其他重要原则","p":1226},{"i":1233,"t":"1. 开闭原则简介","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#1-开闭原则简介","p":1232},{"i":1235,"t":"2. OCP的核心概念","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#2-ocp的核心概念","p":1232},{"i":1237,"t":"3. Go语言中的OCP实现方式","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#3-go语言中的ocp实现方式","p":1232},{"i":1238,"t":"3.1 使用接口实现OCP","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#31-使用接口实现ocp","p":1232},{"i":1240,"t":"3.2 添加新支付方式（扩展）","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#32-添加新支付方式扩展","p":1232},{"i":1242,"t":"4. 违反OCP的示例与重构","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#4-违反ocp的示例与重构","p":1232},{"i":1243,"t":"4.1 违反OCP的代码","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#41-违反ocp的代码","p":1232},{"i":1245,"t":"4.2 重构为符合OCP的代码","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#42-重构为符合ocp的代码","p":1232},{"i":1247,"t":"5. Go语言中实践OCP的高级技巧","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#5-go语言中实践ocp的高级技巧","p":1232},{"i":1248,"t":"5.1 函数选项模式(Functional Options)","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#51-函数选项模式functional-options","p":1232},{"i":1250,"t":"5.2 中间件模式","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#52-中间件模式","p":1232},{"i":1252,"t":"6. OCP的实际应用场景","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#6-ocp的实际应用场景","p":1232},{"i":1254,"t":"7. OCP的日志系统","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#7-ocp的日志系统","p":1232},{"i":1256,"t":"7.1 基础设计","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#71-基础设计","p":1232},{"i":1258,"t":"7.2 组合日志器（支持多种输出）","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#72-组合日志器支持多种输出","p":1232},{"i":1260,"t":"7.3 使用工厂方法创建日志器","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#73-使用工厂方法创建日志器","p":1232},{"i":1262,"t":"7.4 添加网络日志输出（扩展示例）","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#74-添加网络日志输出扩展示例","p":1232},{"i":1264,"t":"7.5 完整使用示例","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#75-完整使用示例","p":1232},{"i":1266,"t":"8. 总结","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#8-总结","p":1232},{"i":1269,"t":"1. channel 交互","u":"/en/docs/note/design/multi_goroutine","h":"#1-channel-交互","p":1268},{"i":1271,"t":"2.  增加 channel 状态判断","u":"/en/docs/note/design/multi_goroutine","h":"#2--增加-channel-状态判断","p":1268},{"i":1272,"t":"2.1. 理解 channel 行为","u":"/en/docs/note/design/multi_goroutine","h":"#21-理解-channel-行为","p":1268},{"i":1274,"t":"2.2. 使用判断channel 优化示例","u":"/en/docs/note/design/multi_goroutine","h":"#22-使用判断channel-优化示例","p":1268},{"i":1276,"t":"3. 支持 context.Context","u":"/en/docs/note/design/multi_goroutine","h":"#3-支持-contextcontext","p":1268},{"i":1278,"t":"4. CommandHandler 模式","u":"/en/docs/note/design/multi_goroutine","h":"#4-commandhandler-模式","p":1268},{"i":1281,"t":"1. 概述","u":"/en/docs/note/design/oop_pinciple/srp","h":"#1-概述","p":1280},{"i":1283,"t":"2. 为什么需要SRP？","u":"/en/docs/note/design/oop_pinciple/srp","h":"#2-为什么需要srp","p":1280},{"i":1284,"t":"优点：","u":"/en/docs/note/design/oop_pinciple/srp","h":"#优点","p":1280},{"i":1286,"t":"违反SRP的后果：","u":"/en/docs/note/design/oop_pinciple/srp","h":"#违反srp的后果","p":1280},{"i":1288,"t":"3. Go语言中的SRP示例","u":"/en/docs/note/design/oop_pinciple/srp","h":"#3-go语言中的srp示例","p":1280},{"i":1289,"t":"3.1 违反SRP的例子","u":"/en/docs/note/design/oop_pinciple/srp","h":"#31-违反srp的例子","p":1280},{"i":1291,"t":"3.2 遵循SRP的改进版本","u":"/en/docs/note/design/oop_pinciple/srp","h":"#32-遵循srp的改进版本","p":1280},{"i":1293,"t":"4. Go语言中实践SRP的技巧","u":"/en/docs/note/design/oop_pinciple/srp","h":"#4-go语言中实践srp的技巧","p":1280},{"i":1294,"t":"4.1 接口设计","u":"/en/docs/note/design/oop_pinciple/srp","h":"#41-接口设计","p":1280},{"i":1296,"t":"4.2 组合代替继承","u":"/en/docs/note/design/oop_pinciple/srp","h":"#42-组合代替继承","p":1280},{"i":1298,"t":"4.3 函数职责单一","u":"/en/docs/note/design/oop_pinciple/srp","h":"#43-函数职责单一","p":1280},{"i":1300,"t":"5. 何时应用SRP？","u":"/en/docs/note/design/oop_pinciple/srp","h":"#5-何时应用srp","p":1280},{"i":1301,"t":"应该应用SRP的情况：","u":"/en/docs/note/design/oop_pinciple/srp","h":"#应该应用srp的情况","p":1280},{"i":1303,"t":"不必过度应用：","u":"/en/docs/note/design/oop_pinciple/srp","h":"#不必过度应用","p":1280},{"i":1305,"t":"6. 总结","u":"/en/docs/note/design/oop_pinciple/srp","h":"#6-总结","p":1280},{"i":1308,"t":"1. tls 连接错误","u":"/en/docs/note/git/git_err","h":"#1-tls-连接错误","p":1307},{"i":1311,"t":"1. os/exec 包简介","u":"/en/docs/note/golang/cmd","h":"#1-osexec-包简介","p":1310},{"i":1313,"t":"2. exec.Command 基本用法","u":"/en/docs/note/golang/cmd","h":"#2-execcommand-基本用法","p":1310},{"i":1315,"t":"2.1 获取stdout和stderr","u":"/en/docs/note/golang/cmd","h":"#21-获取stdout和stderr","p":1310},{"i":1317,"t":"2.2 只获取stdout","u":"/en/docs/note/golang/cmd","h":"#22-只获取stdout","p":1310},{"i":1319,"t":"3. 高级用法","u":"/en/docs/note/golang/cmd","h":"#3-高级用法","p":1310},{"i":1320,"t":"3.1 使用cmd.Stdout","u":"/en/docs/note/golang/cmd","h":"#31-使用cmdstdout","p":1310},{"i":1322,"t":"3.2 使用 StdoutPipe","u":"/en/docs/note/golang/cmd","h":"#32-使用-stdoutpipe","p":1310},{"i":1324,"t":"3.3 传递输入 (stdin)","u":"/en/docs/note/golang/cmd","h":"#33-传递输入-stdin","p":1310},{"i":1326,"t":"3.4 设置环境变量","u":"/en/docs/note/golang/cmd","h":"#34-设置环境变量","p":1310},{"i":1328,"t":"3.5 运行带超时的命令","u":"/en/docs/note/golang/cmd","h":"#35-运行带超时的命令","p":1310},{"i":1330,"t":"3.6 增加错误判断","u":"/en/docs/note/golang/cmd","h":"#36-增加错误判断","p":1310},{"i":1332,"t":"3.7 使用管道连接多个命令","u":"/en/docs/note/golang/cmd","h":"#37-使用管道连接多个命令","p":1310},{"i":1334,"t":"4. 结论","u":"/en/docs/note/golang/cmd","h":"#4-结论","p":1310},{"i":1337,"t":"1. 概述","u":"/en/docs/note/golang/bcrypt","h":"#1-概述","p":1336},{"i":1339,"t":"2. 安装","u":"/en/docs/note/golang/bcrypt","h":"#2-安装","p":1336},{"i":1341,"t":"3. 基本用法","u":"/en/docs/note/golang/bcrypt","h":"#3-基本用法","p":1336},{"i":1342,"t":"3.1 生成哈希密码","u":"/en/docs/note/golang/bcrypt","h":"#31-生成哈希密码","p":1336},{"i":1344,"t":"3.2 校验密码","u":"/en/docs/note/golang/bcrypt","h":"#32-校验密码","p":1336},{"i":1346,"t":"3.3 修改密码","u":"/en/docs/note/golang/bcrypt","h":"#33-修改密码","p":1336},{"i":1348,"t":"3.4 确定哈希是否需要更新","u":"/en/docs/note/golang/bcrypt","h":"#34-确定哈希是否需要更新","p":1336},{"i":1350,"t":"4. 适用场景","u":"/en/docs/note/golang/bcrypt","h":"#4-适用场景","p":1336},{"i":1352,"t":"5. 总结","u":"/en/docs/note/golang/bcrypt","h":"#5-总结","p":1336},{"i":1356,"t":"1. Channel（推荐方式）","u":"/en/docs/note/golang/concurrency","h":"#1-channel推荐方式","p":1354},{"i":1358,"t":"1.1 Channel 的特点","u":"/en/docs/note/golang/concurrency","h":"#11-channel-的特点","p":1354},{"i":1360,"t":"1.2 基础示例：","u":"/en/docs/note/golang/concurrency","h":"#12-基础示例","p":1354},{"i":1362,"t":"1.3 select 结合 channel 用法","u":"/en/docs/note/golang/concurrency","h":"#13-select-结合-channel-用法","p":1354},{"i":1364,"t":"1.4 Channel 的适用场景","u":"/en/docs/note/golang/concurrency","h":"#14-channel-的适用场景","p":1354},{"i":1366,"t":"2. sync.WaitGroup`","u":"/en/docs/note/golang/concurrency","h":"#2-syncwaitgroup","p":1354},{"i":1368,"t":"3.  sync.Mutex","u":"/en/docs/note/golang/concurrency","h":"#3--syncmutex","p":1354},{"i":1370,"t":"4.  sync.Cond 进行事件通知","u":"/en/docs/note/golang/concurrency","h":"#4--synccond-进行事件通知","p":1354},{"i":1372,"t":"5.  sync.Once","u":"/en/docs/note/golang/concurrency","h":"#5--synconce","p":1354},{"i":1374,"t":"6.  atomic","u":"/en/docs/note/golang/concurrency","h":"#6--atomic","p":1354},{"i":1376,"t":"示例：","u":"/en/docs/note/golang/concurrency","h":"#示例","p":1354},{"i":1378,"t":"7.  context","u":"/en/docs/note/golang/concurrency","h":"#7--context","p":1354},{"i":1380,"t":"示例：","u":"/en/docs/note/golang/concurrency","h":"#示例-1","p":1354},{"i":1382,"t":"总结","u":"/en/docs/note/golang/concurrency","h":"#总结","p":1354},{"i":1386,"t":"1. 微内核核心设计","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#1-微内核核心设计","p":1384},{"i":1387,"t":"1.1 特点","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#11-特点","p":1384},{"i":1389,"t":"1.2 核心组件","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#12-核心组件","p":1384},{"i":1391,"t":"2. Go 实现 microkernel","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#2-go-实现-microkernel","p":1384},{"i":1392,"t":"2.1 定义 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#21-定义-kernel核心","p":1384},{"i":1394,"t":"2.2 实现示例服务（LogService）","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#22-实现示例服务logservice","p":1384},{"i":1396,"t":"2.3 主程序（运行微内核 + 服务）","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#23-主程序运行微内核--服务","p":1384},{"i":1398,"t":"2.4 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#24-运行结果","p":1384},{"i":1400,"t":"3. 扩展方向","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#3-扩展方向","p":1384},{"i":1402,"t":"4. 总结","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#4-总结","p":1384},{"i":1406,"t":"1. Future-Proof 机制的关键原则","u":"/en/docs/note/golang/design/future_proof","h":"","p":1404},{"i":1408,"t":"1.1.  松耦合（Loose Coupling）","u":"/en/docs/note/golang/design/future_proof","h":"#11--松耦合loose-coupling","p":1404},{"i":1410,"t":"1.2. 可扩展性（Extensibility）","u":"/en/docs/note/golang/design/future_proof","h":"#12-可扩展性extensibility","p":1404},{"i":1412,"t":"1.3. 配置化而非硬编码","u":"/en/docs/note/golang/design/future_proof","h":"#13-配置化而非硬编码","p":1404},{"i":1414,"t":"1.4. 协议与数据格式的兼容性","u":"/en/docs/note/golang/design/future_proof","h":"#14-协议与数据格式的兼容性","p":1404},{"i":1416,"t":"1.5. 并发模型的可适应性","u":"/en/docs/note/golang/design/future_proof","h":"#15-并发模型的可适应性","p":1404},{"i":1418,"t":"1.6. 可观测性（Observability）","u":"/en/docs/note/golang/design/future_proof","h":"#16-可观测性observability","p":1404},{"i":1420,"t":"1.7. 防御性编程","u":"/en/docs/note/golang/design/future_proof","h":"#17-防御性编程","p":1404},{"i":1422,"t":"2. 聚合器示例","u":"/en/docs/note/golang/design/future_proof","h":"#2-聚合器示例","p":1404},{"i":1424,"t":"3. 反模式：非 Future-Proof 的设计","u":"/en/docs/note/golang/design/future_proof","h":"#3-反模式非-future-proof-的设计","p":1404},{"i":1426,"t":"4. 总结","u":"/en/docs/note/golang/design/future_proof","h":"#4-总结","p":1404},{"i":1430,"t":"1. 内存和垃圾回收相关操作","u":"/en/docs/note/golang/debug","h":"#1-内存和垃圾回收相关操作","p":1428},{"i":1432,"t":"2. 堆栈信息操作","u":"/en/docs/note/golang/debug","h":"#2-堆栈信息操作","p":1428},{"i":1434,"t":"3. 构建信息读取","u":"/en/docs/note/golang/debug","h":"#3-构建信息读取","p":1428},{"i":1436,"t":"4. 实际应用示例","u":"/en/docs/note/golang/debug","h":"#4-实际应用示例","p":1428},{"i":1437,"t":"4.1. 内存监控工具","u":"/en/docs/note/golang/debug","h":"#41-内存监控工具","p":1428},{"i":1439,"t":"4.2. 增强的panic处理","u":"/en/docs/note/golang/debug","h":"#42-增强的panic处理","p":1428},{"i":1441,"t":"4.3. 构建信息展示","u":"/en/docs/note/golang/debug","h":"#43-构建信息展示","p":1428},{"i":1443,"t":"5. 注意事项","u":"/en/docs/note/golang/debug","h":"#5-注意事项","p":1428},{"i":1446,"t":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel3","h":"#1-目标","p":1445},{"i":1448,"t":"2. 代码改动","u":"/en/docs/note/golang/design/microkernel/microkernel3","h":"#2-代码改动","p":1445},{"i":1450,"t":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel3","h":"#21-kernel核心","p":1445},{"i":1452,"t":"2.2 LogService","u":"/en/docs/note/golang/design/microkernel/microkernel3","h":"#22-logservice","p":1445},{"i":1454,"t":"2.3 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel3","h":"#23-运行结果","p":1445},{"i":1458,"t":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#1-目标","p":1456},{"i":1460,"t":"2. 代码改动","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#2-代码改动","p":1456},{"i":1461,"t":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#21-kernel核心","p":1456},{"i":1463,"t":"2.2 LogService","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#22-logservice","p":1456},{"i":1465,"t":"2.3 主程序（运行微内核 + 服务）","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#23-主程序运行微内核--服务","p":1456},{"i":1467,"t":"2.4 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#24-运行结果","p":1456},{"i":1469,"t":"2.5 优化函数和变量命名","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#25-优化函数和变量命名","p":1456},{"i":1471,"t":"","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"","p":1456},{"i":1473,"t":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel5","h":"#1-目标","p":1472},{"i":1475,"t":"2. 代码改动","u":"/en/docs/note/golang/design/microkernel/microkernel5","h":"#2-代码改动","p":1472},{"i":1476,"t":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel5","h":"#21-kernel核心","p":1472},{"i":1478,"t":"2.2 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel5","h":"#22-运行结果","p":1472},{"i":1481,"t":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel6","h":"#1-目标","p":1480},{"i":1483,"t":"2. 代码改动","u":"/en/docs/note/golang/design/microkernel/microkernel6","h":"#2-代码改动","p":1480},{"i":1484,"t":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel6","h":"#21-kernel核心","p":1480},{"i":1486,"t":"2.2 服务","u":"/en/docs/note/golang/design/microkernel/microkernel6","h":"#22-服务","p":1480},{"i":1488,"t":"2.3 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel6","h":"#23-运行结果","p":1480},{"i":1491,"t":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel4","h":"#1-目标","p":1490},{"i":1493,"t":"2. 代码改动","u":"/en/docs/note/golang/design/microkernel/microkernel4","h":"#2-代码改动","p":1490},{"i":1494,"t":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel4","h":"#21-kernel核心","p":1490},{"i":1496,"t":"2.2 LogService","u":"/en/docs/note/golang/design/microkernel/microkernel4","h":"#22-logservice","p":1490},{"i":1498,"t":"2.3 增加另一个类似的EchoService","u":"/en/docs/note/golang/design/microkernel/microkernel4","h":"#23-增加另一个类似的echoservice","p":1490},{"i":1500,"t":"2.4 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel4","h":"#24-运行结果","p":1490},{"i":1503,"t":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel7","h":"#1-目标","p":1502},{"i":1505,"t":"2. 代码改动","u":"/en/docs/note/golang/design/microkernel/microkernel7","h":"#2-代码改动","p":1502},{"i":1506,"t":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel7","h":"#21-kernel核心","p":1502},{"i":1508,"t":"2.2 日志服务","u":"/en/docs/note/golang/design/microkernel/microkernel7","h":"#22-日志服务","p":1502},{"i":1510,"t":"2.3 main","u":"/en/docs/note/golang/design/microkernel/microkernel7","h":"#23-main","p":1502},{"i":1512,"t":"2.4 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel7","h":"#24-运行结果","p":1502},{"i":1515,"t":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel8","h":"#1-目标","p":1514},{"i":1517,"t":"2. 代码改动","u":"/en/docs/note/golang/design/microkernel/microkernel8","h":"#2-代码改动","p":1514},{"i":1518,"t":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel8","h":"#21-kernel核心","p":1514},{"i":1520,"t":"2.2 echo服务","u":"/en/docs/note/golang/design/microkernel/microkernel8","h":"#22-echo服务","p":1514},{"i":1522,"t":"2.3 main","u":"/en/docs/note/golang/design/microkernel/microkernel8","h":"#23-main","p":1514},{"i":1524,"t":"2.4 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel8","h":"#24-运行结果","p":1514},{"i":1528,"t":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#1-目标","p":1526},{"i":1530,"t":"2. 状态存储设计","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#2-状态存储设计","p":1526},{"i":1531,"t":"2.1 存储文件设计","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#21-存储文件设计","p":1526},{"i":1533,"t":"2.2 状态管理模块：StateStore","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#22-状态管理模块statestore","p":1526},{"i":1535,"t":"3. 内核集成","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#3-内核集成","p":1526},{"i":1536,"t":"3.1 kernel 初始化集成StateStore","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#31-kernel-初始化集成statestore","p":1526},{"i":1538,"t":"3.2 注册服务时尝试自动加载状态","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#32-注册服务时尝试自动加载状态","p":1526},{"i":1540,"t":"3.3 停止服务时，保存状态","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#33-停止服务时保存状态","p":1526},{"i":1542,"t":"3.4 定时持久化状态","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#34-定时持久化状态","p":1526},{"i":1544,"t":"4. main","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#4-main","p":1526},{"i":1546,"t":"4.1 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#41-运行结果","p":1526},{"i":1550,"t":"SOLID原则","u":"/en/docs/note/golang/design/oop_pinciple/principle","h":"#solid原则","p":1548},{"i":1552,"t":"其他重要原则","u":"/en/docs/note/golang/design/oop_pinciple/principle","h":"#其他重要原则","p":1548},{"i":1555,"t":"1. 概述","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#1-概述","p":1554},{"i":1557,"t":"2. 为什么需要SRP？","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#2-为什么需要srp","p":1554},{"i":1558,"t":"优点：","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#优点","p":1554},{"i":1560,"t":"违反SRP的后果：","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#违反srp的后果","p":1554},{"i":1562,"t":"3. Go语言中的SRP示例","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#3-go语言中的srp示例","p":1554},{"i":1563,"t":"3.1 违反SRP的例子","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#31-违反srp的例子","p":1554},{"i":1565,"t":"3.2 遵循SRP的改进版本","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#32-遵循srp的改进版本","p":1554},{"i":1567,"t":"4. Go语言中实践SRP的技巧","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#4-go语言中实践srp的技巧","p":1554},{"i":1568,"t":"4.1 接口设计","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#41-接口设计","p":1554},{"i":1570,"t":"4.2 组合代替继承","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#42-组合代替继承","p":1554},{"i":1572,"t":"4.3 函数职责单一","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#43-函数职责单一","p":1554},{"i":1574,"t":"5. 何时应用SRP？","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#5-何时应用srp","p":1554},{"i":1575,"t":"应该应用SRP的情况：","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#应该应用srp的情况","p":1554},{"i":1577,"t":"不必过度应用：","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#不必过度应用","p":1554},{"i":1579,"t":"6. 总结","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#6-总结","p":1554},{"i":1582,"t":"1. 开闭原则简介","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#1-开闭原则简介","p":1581},{"i":1584,"t":"2. OCP的核心概念","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#2-ocp的核心概念","p":1581},{"i":1586,"t":"3. Go语言中的OCP实现方式","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#3-go语言中的ocp实现方式","p":1581},{"i":1587,"t":"3.1 使用接口实现OCP","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#31-使用接口实现ocp","p":1581},{"i":1589,"t":"3.2 添加新支付方式（扩展）","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#32-添加新支付方式扩展","p":1581},{"i":1591,"t":"4. 违反OCP的示例与重构","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#4-违反ocp的示例与重构","p":1581},{"i":1592,"t":"4.1 违反OCP的代码","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#41-违反ocp的代码","p":1581},{"i":1594,"t":"4.2 重构为符合OCP的代码","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#42-重构为符合ocp的代码","p":1581},{"i":1596,"t":"5. Go语言中实践OCP的高级技巧","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#5-go语言中实践ocp的高级技巧","p":1581},{"i":1597,"t":"5.1 函数选项模式(Functional Options)","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#51-函数选项模式functional-options","p":1581},{"i":1599,"t":"5.2 中间件模式","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#52-中间件模式","p":1581},{"i":1601,"t":"6. OCP的实际应用场景","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#6-ocp的实际应用场景","p":1581},{"i":1603,"t":"7. OCP的日志系统","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#7-ocp的日志系统","p":1581},{"i":1605,"t":"7.1 基础设计","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#71-基础设计","p":1581},{"i":1607,"t":"7.2 组合日志器（支持多种输出）","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#72-组合日志器支持多种输出","p":1581},{"i":1609,"t":"7.3 使用工厂方法创建日志器","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#73-使用工厂方法创建日志器","p":1581},{"i":1611,"t":"7.4 添加网络日志输出（扩展示例）","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#74-添加网络日志输出扩展示例","p":1581},{"i":1613,"t":"7.5 完整使用示例","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#75-完整使用示例","p":1581},{"i":1615,"t":"8. 总结","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#8-总结","p":1581},{"i":1618,"t":"1. ide 警告找不到方法","u":"/en/docs/note/golang/goland","h":"#1-ide-警告找不到方法","p":1617},{"i":1621,"t":"错误处理","u":"/en/docs/note/golang/jotting","h":"#错误处理","p":1620},{"i":1623,"t":"普通函数","u":"/en/docs/note/golang/jotting","h":"#普通函数","p":1620},{"i":1625,"t":"结构体方法","u":"/en/docs/note/golang/jotting","h":"#结构体方法","p":1620},{"i":1627,"t":"Go 中何时使用 chan","u":"/en/docs/note/golang/jotting","h":"#go-中何时使用-chan","p":1620},{"i":1629,"t":"✅ 推荐使用的场景","u":"/en/docs/note/golang/jotting","h":"#-推荐使用的场景","p":1620},{"i":1631,"t":"❌ 不推荐的场景","u":"/en/docs/note/golang/jotting","h":"#-不推荐的场景","p":1620},{"i":1633,"t":"go mod tidy 报错 GOSUMDB","u":"/en/docs/note/golang/jotting","h":"#go-mod-tidy-报错-gosumdb","p":1620},{"i":1635,"t":"空接口 interface{} 与任意类型","u":"/en/docs/note/golang/jotting","h":"#空接口-interface-与任意类型","p":1620},{"i":1637,"t":"类型断言与转换","u":"/en/docs/note/golang/jotting","h":"#类型断言与转换","p":1620},{"i":1639,"t":"空结构体 struct{}","u":"/en/docs/note/golang/jotting","h":"#空结构体-struct","p":1620},{"i":1641,"t":"if 判断语法简化","u":"/en/docs/note/golang/jotting","h":"#if-判断语法简化","p":1620},{"i":1644,"t":"1. channel 交互","u":"/en/docs/note/golang/design/multi_goroutine","h":"#1-channel-交互","p":1643},{"i":1646,"t":"2.  增加 channel 状态判断","u":"/en/docs/note/golang/design/multi_goroutine","h":"#2--增加-channel-状态判断","p":1643},{"i":1647,"t":"2.1. 理解 channel 行为","u":"/en/docs/note/golang/design/multi_goroutine","h":"#21-理解-channel-行为","p":1643},{"i":1649,"t":"2.2. 使用判断channel 优化示例","u":"/en/docs/note/golang/design/multi_goroutine","h":"#22-使用判断channel-优化示例","p":1643},{"i":1651,"t":"3. 支持 context.Context","u":"/en/docs/note/golang/design/multi_goroutine","h":"#3-支持-contextcontext","p":1643},{"i":1653,"t":"4. CommandHandler 模式","u":"/en/docs/note/golang/design/multi_goroutine","h":"#4-commandhandler-模式","p":1643},{"i":1656,"t":"1. 简介","u":"/en/docs/note/golang/kingpin","h":"#1-简介","p":1655},{"i":1658,"t":"2. 安装","u":"/en/docs/note/golang/kingpin","h":"#2-安装","p":1655},{"i":1660,"t":"3. 基本用法","u":"/en/docs/note/golang/kingpin","h":"#3-基本用法","p":1655},{"i":1661,"t":"3.1 使用默认 App","u":"/en/docs/note/golang/kingpin","h":"#31-使用默认-app","p":1655},{"i":1663,"t":"3.2 定义命令行参数（使用 New 方法）","u":"/en/docs/note/golang/kingpin","h":"#32-定义命令行参数使用-new-方法","p":1655},{"i":1665,"t":"3.3 使用子命令","u":"/en/docs/note/golang/kingpin","h":"#33-使用子命令","p":1655},{"i":1667,"t":"3.4 绑定环境变量","u":"/en/docs/note/golang/kingpin","h":"#34-绑定环境变量","p":1655},{"i":1669,"t":"3.5 处理布尔标志","u":"/en/docs/note/golang/kingpin","h":"#35-处理布尔标志","p":1655},{"i":1671,"t":"3.6 解析列表参数","u":"/en/docs/note/golang/kingpin","h":"#36-解析列表参数","p":1655},{"i":1673,"t":"4. 其他高级用法","u":"/en/docs/note/golang/kingpin","h":"#4-其他高级用法","p":1655},{"i":1674,"t":"4.1 自定义解析器","u":"/en/docs/note/golang/kingpin","h":"#41-自定义解析器","p":1655},{"i":1676,"t":"5. 总结","u":"/en/docs/note/golang/kingpin","h":"#5-总结","p":1655},{"i":1678,"t":"特点总结","u":"/en/docs/note/golang/kingpin","h":"#特点总结","p":1655},{"i":1681,"t":"1. Golang 默认 JSON 解析 (encoding/json)","u":"/en/docs/note/golang/json","h":"#1-golang-默认-json-解析-encodingjson","p":1680},{"i":1683,"t":"2. 第三方 JSON 解析库","u":"/en/docs/note/golang/json","h":"#2-第三方-json-解析库","p":1680},{"i":1684,"t":"2.1 github.com/tidwall/gjson（高效 JSON 读取）","u":"/en/docs/note/golang/json","h":"#21-githubcomtidwallgjson高效-json-读取","p":1680},{"i":1686,"t":"优缺点对比","u":"/en/docs/note/golang/json","h":"#优缺点对比","p":1680},{"i":1688,"t":"2.2 github.com/json-iterator/go（高性能 JSON 解析）","u":"/en/docs/note/golang/json","h":"#22-githubcomjson-iteratorgo高性能-json-解析","p":1680},{"i":1690,"t":"优缺点对比","u":"/en/docs/note/golang/json","h":"#优缺点对比-1","p":1680},{"i":1692,"t":"2.3 github.com/buger/jsonparser（流式 JSON 解析）","u":"/en/docs/note/golang/json","h":"#23-githubcombugerjsonparser流式-json-解析","p":1680},{"i":1694,"t":"优缺点对比","u":"/en/docs/note/golang/json","h":"#优缺点对比-2","p":1680},{"i":1696,"t":"3. JSON 解析库对比","u":"/en/docs/note/golang/json","h":"#3-json-解析库对比","p":1680},{"i":1698,"t":"总结与推荐","u":"/en/docs/note/golang/json","h":"#总结与推荐","p":1680},{"i":1701,"t":"1. 反射（Reflect）概述","u":"/en/docs/note/golang/reflect","h":"#1-反射reflect概述","p":1700},{"i":1703,"t":"2. 反射的基本类型","u":"/en/docs/note/golang/reflect","h":"#2-反射的基本类型","p":1700},{"i":1705,"t":"2.1 获取变量的类型和值","u":"/en/docs/note/golang/reflect","h":"#21-获取变量的类型和值","p":1700},{"i":1707,"t":"3. 反射修改变量值","u":"/en/docs/note/golang/reflect","h":"#3-反射修改变量值","p":1700},{"i":1709,"t":"4. 反射处理结构体","u":"/en/docs/note/golang/reflect","h":"#4-反射处理结构体","p":1700},{"i":1710,"t":"4.1 获取结构体字段信息","u":"/en/docs/note/golang/reflect","h":"#41-获取结构体字段信息","p":1700},{"i":1712,"t":"4.2 解析结构体标签（Tag）","u":"/en/docs/note/golang/reflect","h":"#42-解析结构体标签tag","p":1700},{"i":1714,"t":"5. 反射调用方法","u":"/en/docs/note/golang/reflect","h":"#5-反射调用方法","p":1700},{"i":1716,"t":"6. 反射的局限性","u":"/en/docs/note/golang/reflect","h":"#6-反射的局限性","p":1700},{"i":1718,"t":"7. 反射最佳实践","u":"/en/docs/note/golang/reflect","h":"#7-反射最佳实践","p":1700},{"i":1721,"t":"1. 简介","u":"/en/docs/note/golang/validator","h":"#1-简介","p":1720},{"i":1723,"t":"2. 安装","u":"/en/docs/note/golang/validator","h":"#2-安装","p":1720},{"i":1725,"t":"3. 基本使用","u":"/en/docs/note/golang/validator","h":"#3-基本使用","p":1720},{"i":1727,"t":"4. 常见的内置验证标签","u":"/en/docs/note/golang/validator","h":"#4-常见的内置验证标签","p":1720},{"i":1729,"t":"5. 自定义验证","u":"/en/docs/note/golang/validator","h":"#5-自定义验证","p":1720},{"i":1731,"t":"6. 结构体嵌套验证","u":"/en/docs/note/golang/validator","h":"#6-结构体嵌套验证","p":1720},{"i":1733,"t":"7. 处理错误信息","u":"/en/docs/note/golang/validator","h":"#7-处理错误信息","p":1720},{"i":1735,"t":"8. 结论","u":"/en/docs/note/golang/validator","h":"#8-结论","p":1720},{"i":1738,"t":"1. 引言","u":"/en/docs/note/golang/serialization","h":"#1-引言","p":1737},{"i":1740,"t":"2. 标准库的序列化支持","u":"/en/docs/note/golang/serialization","h":"#2-标准库的序列化支持","p":1737},{"i":1741,"t":"2.1 JSON序列化","u":"/en/docs/note/golang/serialization","h":"#21-json序列化","p":1737},{"i":1743,"t":"2.2 结构体标签","u":"/en/docs/note/golang/serialization","h":"#22-结构体标签","p":1737},{"i":1745,"t":"3. 自定义类型序列化","u":"/en/docs/note/golang/serialization","h":"#3-自定义类型序列化","p":1737},{"i":1747,"t":"3.1 实现Marshaler接口","u":"/en/docs/note/golang/serialization","h":"#31-实现marshaler接口","p":1737},{"i":1749,"t":"3.2 实现Unmarshaler接口","u":"/en/docs/note/golang/serialization","h":"#32-实现unmarshaler接口","p":1737},{"i":1751,"t":"4. 复合类型处理","u":"/en/docs/note/golang/serialization","h":"#4-复合类型处理","p":1737},{"i":1752,"t":"4.1 嵌套结构体","u":"/en/docs/note/golang/serialization","h":"#41-嵌套结构体","p":1737},{"i":1754,"t":"4.2 接口类型处理","u":"/en/docs/note/golang/serialization","h":"#42-接口类型处理","p":1737},{"i":1756,"t":"5. 性能优化","u":"/en/docs/note/golang/serialization","h":"#5-性能优化","p":1737},{"i":1757,"t":"5.1 使用缓冲池","u":"/en/docs/note/golang/serialization","h":"#51-使用缓冲池","p":1737},{"i":1759,"t":"5.2 使用第三方库","u":"/en/docs/note/golang/serialization","h":"#52-使用第三方库","p":1737},{"i":1761,"t":"6. 常见问题解决","u":"/en/docs/note/golang/serialization","h":"#6-常见问题解决","p":1737},{"i":1762,"t":"6.1 循环引用问题","u":"/en/docs/note/golang/serialization","h":"#61-循环引用问题","p":1737},{"i":1764,"t":"6.2 时间格式处理","u":"/en/docs/note/golang/serialization","h":"#62-时间格式处理","p":1737},{"i":1766,"t":"7. 测试验证","u":"/en/docs/note/golang/serialization","h":"#7-测试验证","p":1737},{"i":1767,"t":"7.1 单元测试示例","u":"/en/docs/note/golang/serialization","h":"#71-单元测试示例","p":1737},{"i":1769,"t":"8. 最佳实践","u":"/en/docs/note/golang/serialization","h":"#8-最佳实践","p":1737},{"i":1771,"t":"附录：完整示例","u":"/en/docs/note/golang/serialization","h":"#附录完整示例","p":1737},{"i":1774,"t":"1. 概述","u":"/en/docs/note/os/chroot","h":"#1-概述","p":1773},{"i":1776,"t":"2. 工作原理","u":"/en/docs/note/os/chroot","h":"#2-工作原理","p":1773},{"i":1778,"t":"3. 基本用法","u":"/en/docs/note/os/chroot","h":"#3-基本用法","p":1773},{"i":1779,"t":"3.1. 进入 chroot 环境","u":"/en/docs/note/os/chroot","h":"#31-进入-chroot-环境","p":1773},{"i":1781,"t":"3.2. 在 chroot 环境中执行命令","u":"/en/docs/note/os/chroot","h":"#32-在-chroot-环境中执行命令","p":1773},{"i":1783,"t":"4. 创建一个基本的 chroot 环境","u":"/en/docs/note/os/chroot","h":"#4-创建一个基本的-chroot-环境","p":1773},{"i":1785,"t":"5. 使用场景","u":"/en/docs/note/os/chroot","h":"#5-使用场景","p":1773},{"i":1786,"t":"5.1. 系统恢复","u":"/en/docs/note/os/chroot","h":"#51-系统恢复","p":1773},{"i":1788,"t":"5.2. 隔离环境（Sandbox）","u":"/en/docs/note/os/chroot","h":"#52-隔离环境sandbox","p":1773},{"i":1790,"t":"5.3. 软件包编译","u":"/en/docs/note/os/chroot","h":"#53-软件包编译","p":1773},{"i":1792,"t":"5.4. 运行特定版本的应用程序","u":"/en/docs/note/os/chroot","h":"#54-运行特定版本的应用程序","p":1773},{"i":1794,"t":"6. 注意事项","u":"/en/docs/note/os/chroot","h":"#6-注意事项","p":1773},{"i":1796,"t":"7. 总结","u":"/en/docs/note/os/chroot","h":"#7-总结","p":1773},{"i":1799,"t":"1. Unix Socket 简介","u":"/en/docs/note/golang/web_server_unix","h":"#1-unix-socket-简介","p":1798},{"i":1801,"t":"2. 使用标准库 net/http 实现","u":"/en/docs/note/golang/web_server_unix","h":"#2-使用标准库-nethttp-实现","p":1798},{"i":1802,"t":"2.1 基础实现","u":"/en/docs/note/golang/web_server_unix","h":"#21-基础实现","p":1798},{"i":1804,"t":"2.2 高级配置","u":"/en/docs/note/golang/web_server_unix","h":"#22-高级配置","p":1798},{"i":1806,"t":"3. 使用 Gin 框架实现","u":"/en/docs/note/golang/web_server_unix","h":"#3-使用-gin-框架实现","p":1798},{"i":1807,"t":"3.1 基础实现","u":"/en/docs/note/golang/web_server_unix","h":"#31-基础实现","p":1798},{"i":1809,"t":"3.2 生产环境建议","u":"/en/docs/note/golang/web_server_unix","h":"#32-生产环境建议","p":1798},{"i":1811,"t":"4. 客户端连接方式","u":"/en/docs/note/golang/web_server_unix","h":"#4-客户端连接方式","p":1798},{"i":1812,"t":"4.1 标准HTTP客户端","u":"/en/docs/note/golang/web_server_unix","h":"#41-标准http客户端","p":1798},{"i":1814,"t":"4.2 通用Socket客户端","u":"/en/docs/note/golang/web_server_unix","h":"#42-通用socket客户端","p":1798},{"i":1816,"t":"5. 性能优化建议","u":"/en/docs/note/golang/web_server_unix","h":"#5-性能优化建议","p":1798},{"i":1818,"t":"6. 常见问题解答","u":"/en/docs/note/golang/web_server_unix","h":"#6-常见问题解答","p":1798},{"i":1820,"t":"7. 实际应用场景","u":"/en/docs/note/golang/web_server_unix","h":"#7-实际应用场景","p":1798},{"i":1822,"t":"总结","u":"/en/docs/note/golang/web_server_unix","h":"#总结","p":1798},{"i":1825,"t":"1. GDB 概述","u":"/en/docs/note/os/debug/gdb","h":"#1-gdb-概述","p":1824},{"i":1827,"t":"1.1 GDB的历史和发展","u":"/en/docs/note/os/debug/gdb","h":"#11-gdb的历史和发展","p":1824},{"i":1829,"t":"1.2 GDB应用场景","u":"/en/docs/note/os/debug/gdb","h":"#12-gdb应用场景","p":1824},{"i":1831,"t":"2. GDB安装","u":"/en/docs/note/os/debug/gdb","h":"#2-gdb安装","p":1824},{"i":1832,"t":"2.1 使用包管理器安装","u":"/en/docs/note/os/debug/gdb","h":"#21-使用包管理器安装","p":1824},{"i":1834,"t":"2.2 源码编译安装","u":"/en/docs/note/os/debug/gdb","h":"#22-源码编译安装","p":1824},{"i":1836,"t":"3. GDB 基本功能","u":"/en/docs/note/os/debug/gdb","h":"#3-gdb-基本功能","p":1824},{"i":1837,"t":"3.1 启动GDB","u":"/en/docs/note/os/debug/gdb","h":"#31-启动gdb","p":1824},{"i":1839,"t":"3.2 调试带参数的程序","u":"/en/docs/note/os/debug/gdb","h":"#32-调试带参数的程序","p":1824},{"i":1841,"t":"3.3 调试运行中的进程","u":"/en/docs/note/os/debug/gdb","h":"#33-调试运行中的进程","p":1824},{"i":1843,"t":"3.4 基本调试命令","u":"/en/docs/note/os/debug/gdb","h":"#34-基本调试命令","p":1824},{"i":1845,"t":"3.5 断点管理","u":"/en/docs/note/os/debug/gdb","h":"#35-断点管理","p":1824},{"i":1847,"t":"3.6 变量与内存操作","u":"/en/docs/note/os/debug/gdb","h":"#36-变量与内存操作","p":1824},{"i":1849,"t":"3.7 寄存器操作","u":"/en/docs/note/os/debug/gdb","h":"#37-寄存器操作","p":1824},{"i":1851,"t":"4. 高级调试技巧","u":"/en/docs/note/os/debug/gdb","h":"#4-高级调试技巧","p":1824},{"i":1852,"t":"4.1 多进程调试","u":"/en/docs/note/os/debug/gdb","h":"#41-多进程调试","p":1824},{"i":1854,"t":"4.2 多线程调试","u":"/en/docs/note/os/debug/gdb","h":"#42-多线程调试","p":1824},{"i":1856,"t":"4.3 观察点(Watchpoints)","u":"/en/docs/note/os/debug/gdb","h":"#43-观察点watchpoints","p":1824},{"i":1858,"t":"4.4 捕获点(Catchpoints)","u":"/en/docs/note/os/debug/gdb","h":"#44-捕获点catchpoints","p":1824},{"i":1860,"t":"4.5 自动化调试","u":"/en/docs/note/os/debug/gdb","h":"#45-自动化调试","p":1824},{"i":1862,"t":"4.6 远程调试","u":"/en/docs/note/os/debug/gdb","h":"#46-远程调试","p":1824},{"i":1864,"t":"4.7 切换栈帧","u":"/en/docs/note/os/debug/gdb","h":"#47-切换栈帧","p":1824},{"i":1866,"t":"5. 调试信息与符号","u":"/en/docs/note/os/debug/gdb","h":"#5-调试信息与符号","p":1824},{"i":1867,"t":"5.1 编译时添加调试信息","u":"/en/docs/note/os/debug/gdb","h":"#51-编译时添加调试信息","p":1824},{"i":1869,"t":"5.2 分离调试信息","u":"/en/docs/note/os/debug/gdb","h":"#52-分离调试信息","p":1824},{"i":1871,"t":"5.3 加载调试信息","u":"/en/docs/note/os/debug/gdb","h":"#53-加载调试信息","p":1824},{"i":1873,"t":"6. 调试案例","u":"/en/docs/note/os/debug/gdb","h":"#6-调试案例","p":1824},{"i":1874,"t":"6.1 段错误调试","u":"/en/docs/note/os/debug/gdb","h":"#61-段错误调试","p":1824},{"i":1876,"t":"6.2 内存泄漏检查","u":"/en/docs/note/os/debug/gdb","h":"#62-内存泄漏检查","p":1824},{"i":1878,"t":"6.3 死锁检测","u":"/en/docs/note/os/debug/gdb","h":"#63-死锁检测","p":1824},{"i":1880,"t":"7. GDB 实现原理","u":"/en/docs/note/os/debug/gdb","h":"#7-gdb-实现原理","p":1824},{"i":1881,"t":"7.1 ptrace系统调用","u":"/en/docs/note/os/debug/gdb","h":"#71-ptrace系统调用","p":1824},{"i":1883,"t":"7.2 断点实现原理","u":"/en/docs/note/os/debug/gdb","h":"#72-断点实现原理","p":1824},{"i":1885,"t":"8. 参考资源","u":"/en/docs/note/os/debug/gdb","h":"#8-参考资源","p":1824},{"i":1888,"t":"1. 简介","u":"/en/docs/note/golang/syscall","h":"#1-简介","p":1887},{"i":1890,"t":"2. 安装","u":"/en/docs/note/golang/syscall","h":"#2-安装","p":1887},{"i":1892,"t":"3. 常见 Golang golang.org/x/sys/unix","u":"/en/docs/note/golang/syscall","h":"#3-常见-golang-golangorgxsysunix","p":1887},{"i":1893,"t":"1. 简介","u":"/en/docs/note/golang/syscall","h":"#1-简介-1","p":1887},{"i":1895,"t":"2. 安装","u":"/en/docs/note/golang/syscall","h":"#2-安装-1","p":1887},{"i":1897,"t":"3. 常见 unix 用法","u":"/en/docs/note/golang/syscall","h":"#3-常见-unix-用法","p":1887},{"i":1898,"t":"3.1 获取进程 ID","u":"/en/docs/note/golang/syscall","h":"#31-获取进程-id","p":1887},{"i":1900,"t":"3.2 文件操作","u":"/en/docs/note/golang/syscall","h":"#32-文件操作","p":1887},{"i":1902,"t":"3.3 进程控制","u":"/en/docs/note/golang/syscall","h":"#33-进程控制","p":1887},{"i":1904,"t":"3.4 信号处理","u":"/en/docs/note/golang/syscall","h":"#34-信号处理","p":1887},{"i":1906,"t":"3.5 内存管理","u":"/en/docs/note/golang/syscall","h":"#35-内存管理","p":1887},{"i":1908,"t":"4. unix 作为 syscall 的替代方案","u":"/en/docs/note/golang/syscall","h":"#4-unix-作为-syscall-的替代方案","p":1887},{"i":1910,"t":"5. 结论","u":"/en/docs/note/golang/syscall","h":"#5-结论","p":1887},{"i":1912,"t":"6. 参考","u":"/en/docs/note/golang/syscall","h":"#6-参考","p":1887},{"i":1914,"t":"** unix 用法**","u":"/en/docs/note/golang/syscall","h":"#-unix-用法","p":1887},{"i":1915,"t":"3.1 获取进程 ID","u":"/en/docs/note/golang/syscall","h":"#31-获取进程-id-1","p":1887},{"i":1917,"t":"3.2 文件操作","u":"/en/docs/note/golang/syscall","h":"#32-文件操作-1","p":1887},{"i":1919,"t":"3.3 进程控制","u":"/en/docs/note/golang/syscall","h":"#33-进程控制-1","p":1887},{"i":1921,"t":"3.4 信号处理","u":"/en/docs/note/golang/syscall","h":"#34-信号处理-1","p":1887},{"i":1923,"t":"3.5 内存管理","u":"/en/docs/note/golang/syscall","h":"#35-内存管理-1","p":1887},{"i":1925,"t":"4. unix 作为 syscall 的替代方案","u":"/en/docs/note/golang/syscall","h":"#4-unix-作为-syscall-的替代方案-1","p":1887},{"i":1927,"t":"5. 结论","u":"/en/docs/note/golang/syscall","h":"#5-结论-1","p":1887},{"i":1929,"t":"6. 参考","u":"/en/docs/note/golang/syscall","h":"#6-参考-1","p":1887},{"i":1933,"t":"查杀僵尸进程","u":"/en/docs/note/os/zombie","h":"#查杀僵尸进程","p":1931},{"i":1935,"t":"举例","u":"/en/docs/note/os/zombie","h":"#举例","p":1931},{"i":1936,"t":"孤儿进程","u":"/en/docs/note/os/zombie","h":"#孤儿进程","p":1931},{"i":1939,"t":"回收儿子","u":"/en/docs/note/os/zombie","h":"#回收儿子","p":1931}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/974",[0,7.208,1,7.208]],["t/976",[2,7.208,3,7.208]],["t/978",[4,6.368,5,6.368,6,6.368]],["t/982",[7,8.304]],["t/984",[8,8.304]],["t/986",[9,8.304]],["t/988",[10,8.304]],["t/995",[11,0.221]],["t/996",[12,5.655]],["t/998",[13,5.381]],["t/1000",[14,3.935]],["t/1002",[11,0.2]],["t/1003",[12,5.655]],["t/1005",[15,4.623]],["t/1007",[14,3.935]],["t/1009",[11,0.2]],["t/1010",[12,5.655]],["t/1012",[15,4.623]],["t/1014",[14,3.935]],["t/1016",[11,0.2]],["t/1017",[12,5.655]],["t/1019",[15,4.623]],["t/1021",[16,7.571]],["t/1023",[14,3.935]],["t/1025",[11,0.2]],["t/1026",[12,5.655]],["t/1028",[15,4.623]],["t/1030",[14,3.935]],["t/1032",[11,0.2]],["t/1033",[12,5.655]],["t/1035",[15,4.623]],["t/1037",[14,3.935]],["t/1039",[11,0.2]],["t/1040",[12,5.655]],["t/1042",[15,4.623]],["t/1044",[14,3.935]],["t/1046",[11,0.2]],["t/1047",[12,5.655]],["t/1049",[15,4.623]],["t/1051",[14,3.935]],["t/1053",[11,0.2]],["t/1054",[12,5.655]],["t/1056",[15,4.623]],["t/1058",[14,3.935]],["t/1062",[11,0.137,17,4.258,18,3.034,19,3.613]],["t/1063",[11,0.204,20,5.159]],["t/1065",[11,0.189,18,3.034,21,5.199]],["t/1067",[11,0.217,22,3.34]],["t/1068",[11,0.206,18,2.747,23,4.407]],["t/1070",[11,0.195,14,2.236,22,2.763,24,2.763]],["t/1072",[11,0.165,17,3.522,24,2.763,25,3.822,26,2.408]],["t/1074",[11,0.189,26,2.911,27,3.227]],["t/1076",[11,0.153,28,4.754,29,5.806]],["t/1078",[11,0.173,30,4.221]],["t/1081",[11,0.173,31,5.203]],["t/1083",[11,0.113,16,4.301,32,4.301,33,5.876,34,4.301]],["t/1085",[11,0.137,15,3.175,32,5.199,33,4.868]],["t/1086",[11,0.189,14,2.702,35,3.785]],["t/1088",[11,0.189,36,5.199,37,5.703]],["t/1090",[11,0.137,15,3.175,33,4.868,34,5.199]],["t/1091",[11,0.189,14,2.702,35,3.785]],["t/1093",[11,0.189,36,5.199,38,4.422]],["t/1095",[11,0.177,30,3.024,39,4.407,40,3.427]],["t/1097",[11,0.173,41,5.59]],["t/1101",[11,0.173,42,4.221]],["t/1103",[11,0.153,43,3.603,44,3.871]],["t/1104",[11,0.217,18,3.034]],["t/1106",[11,0.23]],["t/1108",[11,0.165,17,3.522,24,2.763,25,3.822,26,2.408]],["t/1110",[11,0.189,26,2.911,27,3.227]],["t/1112",[11,0.165,45,3.522,46,3.405,47,3.822,48,4.301]],["t/1114",[]],["t/1116",[11,0.173,42,4.221]],["t/1118",[11,0.153,43,3.603,44,3.871]],["t/1120",[11,0.217,18,3.034]],["t/1122",[11,0.23]],["t/1124",[11,0.189,26,2.911,27,3.227]],["t/1128",[11,0.195,49,4.301,50,4.301,51,3.303]],["t/1130",[11,0.215,52,4.301,53,4.301]],["t/1132",[11,0.217,54,5.199]],["t/1134",[11,0.156,55,3.707,56,3.518,57,3.518,58,3.959,59,3.959]],["t/1136",[11,0.177,60,4.708,61,4.708,62,4.708]],["t/1138",[11,0.177,63,4.708,64,4.708,65,4.708]],["t/1140",[11,0.206,66,4.708,67,4.708]],["t/1142",[11,0.189,68,5.199,69,5.199]],["t/1144",[11,0.137,14,2.702,70,5.199,71,4.258]],["t/1146",[11,0.186,19,2.751,57,3.518,72,3.959,73,3.041]],["t/1148",[11,0.173,30,4.221]],["t/1151",[11,0.173,42,4.221]],["t/1153",[11,0.153,43,3.603,44,3.871]],["t/1154",[11,0.217,18,3.034]],["t/1156",[11,0.23]],["t/1158",[11,0.195,74,3.658,75,4.027,76,4.301]],["t/1160",[11,0.189,26,2.911,27,3.227]],["t/1163",[11,0.173,42,4.221]],["t/1165",[11,0.153,43,3.603,44,3.871]],["t/1166",[11,0.217,18,3.034]],["t/1168",[11,0.189,26,2.911,27,3.227]],["t/1171",[11,0.173,42,4.221]],["t/1173",[11,0.153,43,3.603,44,3.871]],["t/1174",[11,0.217,18,3.034]],["t/1176",[11,0.204,24,3.729]],["t/1178",[11,0.189,26,2.911,27,3.227]],["t/1181",[11,0.173,42,4.221]],["t/1183",[11,0.153,43,3.603,44,3.871]],["t/1184",[11,0.217,18,3.034]],["t/1186",[11,0.189,24,3.34,77,3.993]],["t/1188",[11,0.23]],["t/1190",[11,0.189,26,2.911,27,3.227]],["t/1193",[11,0.173,42,4.221]],["t/1195",[11,0.153,43,3.603,44,3.871]],["t/1196",[11,0.217,18,3.034]],["t/1198",[11,0.217,24,3.34]],["t/1200",[11,0.23]],["t/1202",[11,0.189,26,2.911,27,3.227]],["t/1206",[11,0.173,42,4.221]],["t/1208",[11,0.137,19,3.613,78,3.613,79,4.62]],["t/1209",[11,0.177,19,3.272,79,4.183,80,4.183]],["t/1211",[11,0.195,78,2.989,81,3.658,82,4.301]],["t/1213",[11,0.153,83,5.806,84,5.159]],["t/1214",[11,0.215,84,3.822,85,4.301]],["t/1216",[11,0.139,24,2.194,78,2.374,86,3.416,87,2.905,88,3.416,89,3.416,90,3.198]],["t/1218",[11,0.156,24,2.543,78,2.751,87,3.367,91,3.959,92,3.959]],["t/1220",[11,0.165,56,3.822,78,2.989,93,4.301,94,4.301]],["t/1222",[11,0.221]],["t/1224",[11,0.189,26,2.911,27,3.227]],["t/1228",[11,0.173,51,5.047]],["t/1230",[51,4.459,95,5.435,96,5.806]],["t/1233",[11,0.137,51,3.993,97,5.199,98,3.993]],["t/1235",[11,0.189,18,3.034,99,5.199]],["t/1237",[11,0.186,22,2.543,100,3.041,101,2.814,102,3.242]],["t/1238",[11,0.195,22,2.763,103,2.474,104,3.405]],["t/1240",[11,0.156,28,3.242,102,3.242,105,3.367,106,3.959,107,3.959]],["t/1242",[11,0.177,14,2.447,108,3.616,109,4.183]],["t/1243",[11,0.206,43,2.922,108,3.616]],["t/1245",[11,0.195,43,2.669,109,3.822,110,4.301]],["t/1247",[11,0.178,100,2.817,101,2.607,111,3.003,112,3.003,113,3.119]],["t/1248",[11,0.206,46,3.135,73,3.041,114,3.959]],["t/1250",[11,0.189,73,3.993,115,5.199]],["t/1252",[11,0.177,40,3.427,116,4.183,117,3.346]],["t/1254",[11,0.189,77,3.993,118,4.62]],["t/1256",[11,0.189,19,3.613,119,4.422]],["t/1258",[11,0.147,38,3.119,71,3.003,77,2.817,120,3.119,121,3.667,122,3.259]],["t/1260",[11,0.147,71,3.003,77,2.817,103,2.11,123,3.667,124,3.003,125,3.434]],["t/1262",[11,0.156,14,2.058,28,3.242,105,3.367,122,3.518,126,3.959]],["t/1264",[11,0.177,14,2.447,103,2.708,127,4.407]],["t/1266",[11,0.173,30,4.221]],["t/1269",[11,0.204,128,5.806]],["t/1271",[11,0.177,74,4.004,78,3.272,129,4.004]],["t/1272",[11,0.206,130,4.708,131,4.708]],["t/1274",[11,0.186,14,2.058,45,3.242,103,2.278,129,3.367]],["t/1276",[11,0.217,120,4.422]],["t/1278",[11,0.204,73,4.459]],["t/1281",[11,0.173,31,5.203]],["t/1283",[11,0.189,132,5.199,133,4.868]],["t/1284",[134,7.571]],["t/1286",[11,0.153,108,4.459,135,5.806]],["t/1288",[11,0.195,14,2.236,100,3.303,101,3.057]],["t/1289",[11,0.206,108,3.616,136,4.708]],["t/1291",[11,0.195,137,4.301,138,4.301,139,4.027]],["t/1293",[11,0.186,100,3.041,101,2.814,111,3.242,113,3.367]],["t/1294",[11,0.189,19,3.613,104,4.117]],["t/1296",[11,0.177,38,4.004,140,4.708,141,4.708]],["t/1298",[11,0.177,46,3.727,142,4.708,143,4.708]],["t/1300",[11,0.189,117,3.695,144,4.868]],["t/1301",[11,0.137,117,3.695,145,5.199,146,5.199]],["t/1303",[117,4.126,147,5.806,148,5.806]],["t/1305",[11,0.173,30,4.221]],["t/1308",[11,0.189,149,4.868,150,5.199]],["t/1311",[11,0.206,98,3.616,151,4.708]],["t/1313",[11,0.206,15,2.875,35,3.427]],["t/1315",[11,0.224,152,3.855]],["t/1317",[11,0.217,152,4.258]],["t/1319",[11,0.153,15,3.545,112,4.754]],["t/1320",[11,0.224,103,2.708]],["t/1322",[11,0.217,103,2.991]],["t/1324",[11,0.206,153,5.164,154,5.164]],["t/1326",[11,0.189,155,5.703,156,5.199]],["t/1328",[11,0.165,26,2.408,157,4.301,158,4.717,159,3.822]],["t/1330",[11,0.189,74,4.422,160,5.703]],["t/1332",[11,0.156,103,2.278,149,3.707,159,3.518,161,4.342,162,4.342]],["t/1334",[11,0.173,41,5.59]],["t/1337",[11,0.173,31,5.203]],["t/1339",[11,0.173,163,5.047]],["t/1341",[11,0.153,15,3.545,35,4.226]],["t/1342",[11,0.177,164,5.164,165,4.708,166,4.407]],["t/1344",[11,0.189,166,4.868,167,5.703]],["t/1346",[11,0.189,166,4.868,168,5.199]],["t/1348",[11,0.156,133,3.707,165,3.959,169,4.342,170,4.342,171,4.342]],["t/1350",[11,0.153,39,5.435,40,4.226]],["t/1352",[11,0.173,30,4.221]],["t/1356",[11,0.189,102,4.258,172,4.62]],["t/1358",[11,0.217,20,4.62]],["t/1360",[11,0.189,14,2.702,119,4.422]],["t/1362",[11,0.215,15,2.627,173,4.717]],["t/1364",[11,0.206,39,4.407,40,3.427]],["t/1366",[11,0.23]],["t/1368",[11,0.23]],["t/1370",[11,0.195,174,4.717,175,4.717,176,4.717]],["t/1372",[11,0.23]],["t/1374",[11,0.221]],["t/1376",[14,3.935]],["t/1378",[11,0.221]],["t/1380",[14,3.935]],["t/1382",[30,4.863]],["t/1386",[11,0.137,17,4.258,18,3.034,19,3.613]],["t/1387",[11,0.204,20,5.159]],["t/1389",[11,0.189,18,3.034,21,5.199]],["t/1391",[11,0.217,22,3.34]],["t/1392",[11,0.206,18,2.747,23,4.407]],["t/1394",[11,0.195,14,2.236,22,2.763,24,2.763]],["t/1396",[11,0.165,17,3.522,24,2.763,25,3.822,26,2.408]],["t/1398",[11,0.189,26,2.911,27,3.227]],["t/1400",[11,0.153,28,4.754,29,5.806]],["t/1402",[11,0.173,30,4.221]],["t/1406",[11,0.195,49,4.301,50,4.301,51,3.303]],["t/1408",[11,0.215,52,4.301,53,4.301]],["t/1410",[11,0.217,54,5.199]],["t/1412",[11,0.156,55,3.707,56,3.518,57,3.518,58,3.959,59,3.959]],["t/1414",[11,0.177,60,4.708,61,4.708,62,4.708]],["t/1416",[11,0.177,63,4.708,64,4.708,65,4.708]],["t/1418",[11,0.206,66,4.708,67,4.708]],["t/1420",[11,0.189,68,5.199,69,5.199]],["t/1422",[11,0.137,14,2.702,70,5.199,71,4.258]],["t/1424",[11,0.186,19,2.751,57,3.518,72,3.959,73,3.041]],["t/1426",[11,0.173,30,4.221]],["t/1430",[11,0.113,177,3.522,178,4.717,179,4.301,180,4.717,181,3.522]],["t/1432",[11,0.137,181,4.258,182,5.703,183,4.422]],["t/1434",[11,0.137,183,4.422,184,5.199,185,5.199]],["t/1436",[11,0.137,14,2.702,116,4.62,117,3.695]],["t/1437",[11,0.177,177,3.855,186,5.164,187,5.164]],["t/1439",[11,0.206,188,5.164,189,3.855]],["t/1441",[11,0.177,183,4.004,184,4.708,190,5.164]],["t/1443",[11,0.173,191,6.572]],["t/1446",[11,0.173,42,4.221]],["t/1448",[11,0.153,43,3.603,44,3.871]],["t/1450",[11,0.217,18,3.034]],["t/1452",[11,0.23]],["t/1454",[11,0.189,26,2.911,27,3.227]],["t/1458",[11,0.173,42,4.221]],["t/1460",[11,0.153,43,3.603,44,3.871]],["t/1461",[11,0.217,18,3.034]],["t/1463",[11,0.23]],["t/1465",[11,0.165,17,3.522,24,2.763,25,3.822,26,2.408]],["t/1467",[11,0.189,26,2.911,27,3.227]],["t/1469",[11,0.165,45,3.522,46,3.405,47,3.822,48,4.301]],["t/1471",[]],["t/1473",[11,0.173,42,4.221]],["t/1475",[11,0.153,43,3.603,44,3.871]],["t/1476",[11,0.217,18,3.034]],["t/1478",[11,0.189,26,2.911,27,3.227]],["t/1481",[11,0.173,42,4.221]],["t/1483",[11,0.153,43,3.603,44,3.871]],["t/1484",[11,0.217,18,3.034]],["t/1486",[11,0.204,24,3.729]],["t/1488",[11,0.189,26,2.911,27,3.227]],["t/1491",[11,0.173,42,4.221]],["t/1493",[11,0.153,43,3.603,44,3.871]],["t/1494",[11,0.217,18,3.034]],["t/1496",[11,0.23]],["t/1498",[11,0.195,74,3.658,75,4.027,76,4.301]],["t/1500",[11,0.189,26,2.911,27,3.227]],["t/1503",[11,0.173,42,4.221]],["t/1505",[11,0.153,43,3.603,44,3.871]],["t/1506",[11,0.217,18,3.034]],["t/1508",[11,0.189,24,3.34,77,3.993]],["t/1510",[11,0.23]],["t/1512",[11,0.189,26,2.911,27,3.227]],["t/1515",[11,0.173,42,4.221]],["t/1517",[11,0.153,43,3.603,44,3.871]],["t/1518",[11,0.217,18,3.034]],["t/1520",[11,0.217,24,3.34]],["t/1522",[11,0.23]],["t/1524",[11,0.189,26,2.911,27,3.227]],["t/1528",[11,0.173,42,4.221]],["t/1530",[11,0.137,19,3.613,78,3.613,79,4.62]],["t/1531",[11,0.177,19,3.272,79,4.183,80,4.183]],["t/1533",[11,0.195,78,2.989,81,3.658,82,4.301]],["t/1535",[11,0.153,83,5.806,84,5.159]],["t/1536",[11,0.215,84,3.822,85,4.301]],["t/1538",[11,0.139,24,2.194,78,2.374,86,3.416,87,2.905,88,3.416,89,3.416,90,3.198]],["t/1540",[11,0.156,24,2.543,78,2.751,87,3.367,91,3.959,92,3.959]],["t/1542",[11,0.165,56,3.822,78,2.989,93,4.301,94,4.301]],["t/1544",[11,0.221]],["t/1546",[11,0.189,26,2.911,27,3.227]],["t/1550",[11,0.173,51,5.047]],["t/1552",[51,4.459,95,5.435,96,5.806]],["t/1555",[11,0.173,31,5.203]],["t/1557",[11,0.189,132,5.199,133,4.868]],["t/1558",[134,7.571]],["t/1560",[11,0.153,108,4.459,135,5.806]],["t/1562",[11,0.195,14,2.236,100,3.303,101,3.057]],["t/1563",[11,0.206,108,3.616,136,4.708]],["t/1565",[11,0.195,137,4.301,138,4.301,139,4.027]],["t/1567",[11,0.186,100,3.041,101,2.814,111,3.242,113,3.367]],["t/1568",[11,0.189,19,3.613,104,4.117]],["t/1570",[11,0.177,38,4.004,140,4.708,141,4.708]],["t/1572",[11,0.177,46,3.727,142,4.708,143,4.708]],["t/1574",[11,0.189,117,3.695,144,4.868]],["t/1575",[11,0.137,117,3.695,145,5.199,146,5.199]],["t/1577",[117,4.126,147,5.806,148,5.806]],["t/1579",[11,0.173,30,4.221]],["t/1582",[11,0.137,51,3.993,97,5.199,98,3.993]],["t/1584",[11,0.189,18,3.034,99,5.199]],["t/1586",[11,0.186,22,2.543,100,3.041,101,2.814,102,3.242]],["t/1587",[11,0.195,22,2.763,103,2.474,104,3.405]],["t/1589",[11,0.156,28,3.242,102,3.242,105,3.367,106,3.959,107,3.959]],["t/1591",[11,0.177,14,2.447,108,3.616,109,4.183]],["t/1592",[11,0.206,43,2.922,108,3.616]],["t/1594",[11,0.195,43,2.669,109,3.822,110,4.301]],["t/1596",[11,0.178,100,2.817,101,2.607,111,3.003,112,3.003,113,3.119]],["t/1597",[11,0.206,46,3.135,73,3.041,114,3.959]],["t/1599",[11,0.189,73,3.993,115,5.199]],["t/1601",[11,0.177,40,3.427,116,4.183,117,3.346]],["t/1603",[11,0.189,77,3.993,118,4.62]],["t/1605",[11,0.189,19,3.613,119,4.422]],["t/1607",[11,0.147,38,3.119,71,3.003,77,2.817,120,3.119,121,3.667,122,3.259]],["t/1609",[11,0.147,71,3.003,77,2.817,103,2.11,123,3.667,124,3.003,125,3.434]],["t/1611",[11,0.156,14,2.058,28,3.242,105,3.367,122,3.518,126,3.959]],["t/1613",[11,0.177,14,2.447,103,2.708,127,4.407]],["t/1615",[11,0.173,30,4.221]],["t/1618",[11,0.165,124,3.522,192,4.717,193,4.717,194,4.717]],["t/1621",[195,8.304]],["t/1623",[46,5.203,196,7.208]],["t/1625",[124,4.754,197,4.459,198,4.459]],["t/1627",[11,0.177,101,3.346,103,2.708,144,4.407]],["t/1629",[40,4.226,103,3.34,172,5.159]],["t/1631",[40,4.784,172,5.84]],["t/1633",[11,0.224,199,5.164]],["t/1635",[11,0.124,104,3.727,200,4.708,201,5.164,202,3.855]],["t/1637",[202,4.754,203,6.368,204,6.368]],["t/1639",[11,0.137,197,3.993,198,3.993,200,5.199]],["t/1641",[11,0.137,129,4.422,205,5.703,206,5.703]],["t/1644",[11,0.204,128,5.806]],["t/1646",[11,0.177,74,4.004,78,3.272,129,4.004]],["t/1647",[11,0.206,130,4.708,131,4.708]],["t/1649",[11,0.186,14,2.058,45,3.242,103,2.278,129,3.367]],["t/1651",[11,0.217,120,4.422]],["t/1653",[11,0.204,73,4.459]],["t/1656",[11,0.173,98,5.047]],["t/1658",[11,0.173,163,5.047]],["t/1660",[11,0.153,15,3.545,35,4.226]],["t/1661",[11,0.206,103,2.708,207,4.708]],["t/1663",[11,0.178,23,3.434,103,2.11,124,3.003,208,4.023,209,3.434]],["t/1665",[11,0.177,103,2.708,159,4.183,210,5.164]],["t/1667",[11,0.189,156,5.199,211,5.703]],["t/1669",[11,0.177,189,3.855,212,5.164,213,5.164]],["t/1671",[11,0.177,209,4.407,214,3.727,215,5.164]],["t/1673",[11,0.137,15,3.175,95,4.868,112,4.258]],["t/1674",[11,0.189,216,4.868,217,5.703]],["t/1676",[11,0.173,30,4.221]],["t/1678",[20,5.84,30,4.221]],["t/1681",[11,0.221,207,3.959,214,3.135]],["t/1683",[11,0.177,214,3.727,218,4.708,219,4.004]],["t/1684",[11,0.228,185,3.416,220,3.747]],["t/1686",[221,6.153,222,5.84]],["t/1688",[11,0.23,214,2.531,223,3.506]],["t/1690",[221,6.153,222,5.84]],["t/1692",[11,0.228,214,2.705,224,3.747]],["t/1694",[221,6.153,222,5.84]],["t/1696",[11,0.177,214,3.727,219,4.004,222,4.183]],["t/1698",[30,4.221,172,5.84]],["t/1701",[11,0.189,31,4.117,225,4.117]],["t/1703",[11,0.137,35,3.785,202,4.258,225,4.117]],["t/1705",[11,0.165,47,3.822,152,3.522,202,3.522,226,4.717]],["t/1707",[11,0.137,168,5.199,225,4.117,227,5.703]],["t/1709",[11,0.124,189,3.855,197,3.616,198,3.616,225,3.727]],["t/1710",[11,0.147,152,3.003,183,3.119,197,2.817,198,2.817,228,4.023,229,3.667]],["t/1712",[11,0.186,197,3.041,198,3.041,214,3.135,230,3.707]],["t/1714",[11,0.137,124,4.258,225,4.117,231,5.199]],["t/1716",[11,0.153,225,4.597,232,6.368]],["t/1718",[11,0.137,111,4.258,225,4.117,233,5.199]],["t/1721",[11,0.173,98,5.047]],["t/1723",[11,0.173,163,5.047]],["t/1725",[11,0.153,35,4.226,103,3.34]],["t/1727",[11,0.124,230,4.407,234,4.183,235,5.164,236,4.183]],["t/1729",[11,0.153,216,5.435,236,5.159]],["t/1731",[11,0.124,197,3.616,198,3.616,236,4.183,237,4.708]],["t/1733",[11,0.153,183,4.938,238,6.368]],["t/1735",[11,0.173,41,5.59]],["t/1738",[11,0.173,239,7.208]],["t/1740",[11,0.124,120,4.004,219,4.004,240,4.407,241,4.407]],["t/1741",[11,0.217,241,4.868]],["t/1743",[11,0.177,197,3.616,198,3.616,230,4.407]],["t/1745",[11,0.137,202,4.258,216,4.868,241,4.868]],["t/1747",[11,0.206,22,3.024,104,3.727]],["t/1749",[11,0.206,22,3.024,104,3.727]],["t/1751",[11,0.137,189,4.258,202,4.258,242,5.703]],["t/1752",[11,0.177,197,3.616,198,3.616,237,4.708]],["t/1754",[11,0.189,189,4.258,243,5.703]],["t/1756",[11,0.153,45,4.754,244,5.806]],["t/1757",[11,0.177,103,2.708,245,5.164,246,5.164]],["t/1759",[11,0.177,103,2.708,218,4.708,219,4.004]],["t/1761",[11,0.153,247,6.368,248,6.368]],["t/1762",[11,0.177,249,5.164,250,5.164,251,5.164]],["t/1764",[11,0.177,189,3.855,252,5.164,253,5.164]],["t/1766",[11,0.153,236,5.159,254,6.368]],["t/1767",[11,0.189,14,2.702,255,5.703]],["t/1769",[11,0.153,111,4.754,233,5.806]],["t/1771",[14,3.018,127,5.435,256,6.368]],["t/1774",[11,0.173,31,5.203]],["t/1776",[11,0.153,257,6.368,258,5.435]],["t/1778",[11,0.153,15,3.545,35,4.226]],["t/1779",[11,0.206,259,5.164,260,4.004]],["t/1781",[11,0.195,101,3.057,260,3.658,261,4.717]],["t/1783",[11,0.165,35,3.131,75,4.027,125,4.027,260,3.658]],["t/1785",[11,0.153,40,4.226,103,3.34]],["t/1786",[11,0.189,118,4.62,262,5.703]],["t/1788",[11,0.206,260,4.004,263,5.164]],["t/1790",[11,0.189,264,5.703,265,4.868]],["t/1792",[11,0.165,26,2.408,139,4.027,266,4.717,267,4.717]],["t/1794",[11,0.173,191,6.572]],["t/1796",[11,0.173,30,4.221]],["t/1799",[11,0.217,98,3.993]],["t/1801",[11,0.186,22,2.543,103,2.278,219,3.367,240,3.707]],["t/1802",[11,0.189,22,3.34,119,4.422]],["t/1804",[11,0.189,55,4.868,112,4.258]],["t/1806",[11,0.177,22,3.024,103,2.708,268,5.164]],["t/1807",[11,0.189,22,3.34,119,4.422]],["t/1809",[11,0.177,260,4.004,269,5.164,270,4.708]],["t/1811",[11,0.137,102,4.258,149,4.868,271,4.868]],["t/1812",[11,0.206,240,4.407,271,4.407]],["t/1814",[11,0.206,271,4.407,272,5.164]],["t/1816",[11,0.137,45,4.258,244,5.199,270,5.199]],["t/1818",[11,0.153,234,5.159,273,6.368]],["t/1820",[11,0.137,40,3.785,116,4.62,117,3.695]],["t/1822",[30,4.863]],["t/1825",[11,0.204,31,4.597]],["t/1827",[11,0.206,274,5.164,275,5.164]],["t/1829",[11,0.206,40,3.427,117,3.346]],["t/1831",[11,0.204,163,4.459]],["t/1832",[11,0.165,103,2.474,151,4.301,163,3.303,276,4.717]],["t/1834",[11,0.177,163,3.616,265,4.407,277,5.164]],["t/1836",[11,0.204,278,6.368]],["t/1837",[11,0.217,279,5.703]],["t/1839",[11,0.165,13,3.057,157,4.301,209,4.027,280,4.717]],["t/1841",[11,0.165,13,3.057,26,2.408,101,3.057,281,3.303]],["t/1843",[11,0.177,13,3.346,35,3.427,159,4.183]],["t/1845",[11,0.189,81,4.422,282,5.199]],["t/1847",[11,0.177,47,4.183,177,3.855,181,3.855]],["t/1849",[11,0.189,181,4.258,283,5.703]],["t/1851",[11,0.137,13,3.695,112,4.258,113,4.422]],["t/1852",[11,0.177,13,3.346,281,3.616,284,5.164]],["t/1854",[11,0.189,13,3.695,285,5.703]],["t/1856",[11,0.217,286,5.703]],["t/1858",[11,0.206,287,5.164,288,5.164]],["t/1860",[11,0.189,13,3.695,289,5.703]],["t/1862",[11,0.189,13,3.695,290,5.703]],["t/1864",[11,0.177,291,5.164,292,5.164,293,5.164]],["t/1866",[11,0.153,294,5.159,295,6.368]],["t/1867",[11,0.165,87,3.658,105,3.658,265,4.027,294,3.822]],["t/1869",[11,0.189,294,4.62,296,5.703]],["t/1871",[11,0.189,90,4.868,294,4.62]],["t/1873",[11,0.153,13,4.126,297,6.368]],["t/1874",[11,0.177,13,3.346,150,4.708,229,4.708]],["t/1876",[11,0.177,177,3.855,298,5.164,299,5.164]],["t/1878",[11,0.189,300,5.703,301,5.703]],["t/1880",[11,0.189,22,3.34,258,4.868]],["t/1881",[11,0.206,118,4.183,231,4.708]],["t/1883",[11,0.177,22,3.024,258,4.407,282,4.708]],["t/1885",[11,0.153,302,5.435,303,6.368]],["t/1888",[11,0.173,98,5.047]],["t/1890",[11,0.173,163,5.047]],["t/1892",[11,0.234,234,3.259]],["t/1893",[11,0.173,98,5.047]],["t/1895",[11,0.173,163,5.047]],["t/1897",[11,0.189,15,3.175,234,4.62]],["t/1898",[11,0.206,152,3.855,281,3.616]],["t/1900",[11,0.189,80,4.62,181,4.258]],["t/1902",[11,0.189,281,3.993,304,5.199]],["t/1904",[11,0.204,305,5.806]],["t/1906",[11,0.189,81,4.422,177,4.258]],["t/1908",[11,0.195,306,4.301,307,4.301,308,4.301]],["t/1910",[11,0.173,41,5.59]],["t/1912",[11,0.173,302,6.153]],["t/1914",[11,0.173,15,4.013]],["t/1915",[11,0.206,152,3.855,281,3.616]],["t/1917",[11,0.189,80,4.62,181,4.258]],["t/1919",[11,0.189,281,3.993,304,5.199]],["t/1921",[11,0.204,305,5.806]],["t/1923",[11,0.189,81,4.422,177,4.258]],["t/1925",[11,0.195,306,4.301,307,4.301,308,4.301]],["t/1927",[11,0.173,41,5.59]],["t/1929",[11,0.173,302,6.153]],["t/1933",[281,4.459,309,6.368,310,6.368]],["t/1935",[311,8.304]],["t/1936",[281,5.047,312,7.208]],["t/1939",[179,6.572,313,7.208]]],"invertedIndex":[["",{"_index":11,"t":{"995":{"position":[[0,4],[5,7]]},"1002":{"position":[[0,5]]},"1009":{"position":[[0,8]]},"1016":{"position":[[0,8]]},"1025":{"position":[[0,9]]},"1032":{"position":[[0,8]]},"1039":{"position":[[0,9]]},"1046":{"position":[[0,5]]},"1053":{"position":[[0,4]]},"1062":{"position":[[0,1]]},"1063":{"position":[[0,1],[2,1]]},"1065":{"position":[[0,1],[2,1]]},"1067":{"position":[[0,1],[3,2],[9,11]]},"1068":{"position":[[0,1],[2,1],[7,6]]},"1070":{"position":[[0,1],[2,1],[11,10]]},"1072":{"position":[[0,1],[2,1]]},"1074":{"position":[[0,1],[2,1]]},"1076":{"position":[[0,1]]},"1078":{"position":[[0,1]]},"1081":{"position":[[0,1]]},"1083":{"position":[[0,1]]},"1085":{"position":[[0,1]]},"1086":{"position":[[0,1],[2,1]]},"1088":{"position":[[0,1],[2,1]]},"1090":{"position":[[0,1]]},"1091":{"position":[[0,1],[2,1]]},"1093":{"position":[[0,1],[2,1]]},"1095":{"position":[[0,1],[5,2]]},"1097":{"position":[[0,1]]},"1101":{"position":[[0,1]]},"1103":{"position":[[0,1]]},"1104":{"position":[[0,1],[2,1],[4,6]]},"1106":{"position":[[0,1],[2,1],[4,10]]},"1108":{"position":[[0,1],[2,1]]},"1110":{"position":[[0,1],[2,1]]},"1112":{"position":[[0,1],[2,1]]},"1116":{"position":[[0,1]]},"1118":{"position":[[0,1]]},"1120":{"position":[[0,1],[2,1],[4,6]]},"1122":{"position":[[0,1],[2,1],[4,10]]},"1124":{"position":[[0,1],[2,1]]},"1128":{"position":[[0,1],[3,6],[10,5]]},"1130":{"position":[[0,1],[2,1],[10,5],[16,8]]},"1132":{"position":[[0,1],[2,1],[10,13]]},"1134":{"position":[[0,1],[2,1]]},"1136":{"position":[[0,1],[2,1]]},"1138":{"position":[[0,1],[2,1]]},"1140":{"position":[[0,1],[2,1],[10,13]]},"1142":{"position":[[0,1],[2,1]]},"1144":{"position":[[0,1]]},"1146":{"position":[[0,1],[9,6],[16,5]]},"1148":{"position":[[0,1]]},"1151":{"position":[[0,1]]},"1153":{"position":[[0,1]]},"1154":{"position":[[0,1],[2,1],[4,6]]},"1156":{"position":[[0,1],[2,1],[4,10]]},"1158":{"position":[[0,1],[2,1],[12,11]]},"1160":{"position":[[0,1],[2,1]]},"1163":{"position":[[0,1]]},"1165":{"position":[[0,1]]},"1166":{"position":[[0,1],[2,1],[4,6]]},"1168":{"position":[[0,1],[2,1]]},"1171":{"position":[[0,1]]},"1173":{"position":[[0,1]]},"1174":{"position":[[0,1],[2,1],[4,6]]},"1176":{"position":[[0,1],[2,1]]},"1178":{"position":[[0,1],[2,1]]},"1181":{"position":[[0,1]]},"1183":{"position":[[0,1]]},"1184":{"position":[[0,1],[2,1],[4,6]]},"1186":{"position":[[0,1],[2,1]]},"1188":{"position":[[0,1],[2,1],[4,4]]},"1190":{"position":[[0,1],[2,1]]},"1193":{"position":[[0,1]]},"1195":{"position":[[0,1]]},"1196":{"position":[[0,1],[2,1],[4,6]]},"1198":{"position":[[0,1],[2,1],[4,4]]},"1200":{"position":[[0,1],[2,1],[4,4]]},"1202":{"position":[[0,1],[2,1]]},"1206":{"position":[[0,1]]},"1208":{"position":[[0,1]]},"1209":{"position":[[0,1],[2,1]]},"1211":{"position":[[0,1],[2,1],[11,10]]},"1213":{"position":[[0,1]]},"1214":{"position":[[0,1],[2,1],[4,6],[16,10]]},"1216":{"position":[[0,1],[2,1]]},"1218":{"position":[[0,1],[2,1]]},"1220":{"position":[[0,1],[2,1]]},"1222":{"position":[[0,1],[3,4]]},"1224":{"position":[[0,1],[2,1]]},"1228":{"position":[[0,5]]},"1233":{"position":[[0,1]]},"1235":{"position":[[0,1],[3,3]]},"1237":{"position":[[0,1],[3,2],[9,3]]},"1238":{"position":[[0,1],[2,1],[10,3]]},"1240":{"position":[[0,1],[2,1]]},"1242":{"position":[[0,1],[5,3]]},"1243":{"position":[[0,1],[2,1],[6,3]]},"1245":{"position":[[0,1],[2,1],[9,3]]},"1247":{"position":[[0,1],[3,2],[10,3]]},"1248":{"position":[[0,1],[2,1],[11,10],[22,7]]},"1250":{"position":[[0,1],[2,1]]},"1252":{"position":[[0,1],[3,3]]},"1254":{"position":[[0,1],[3,3]]},"1256":{"position":[[0,1],[2,1]]},"1258":{"position":[[0,1],[2,1]]},"1260":{"position":[[0,1],[2,1]]},"1262":{"position":[[0,1],[2,1]]},"1264":{"position":[[0,1],[2,1]]},"1266":{"position":[[0,1]]},"1269":{"position":[[0,1],[3,7]]},"1271":{"position":[[0,1],[7,7]]},"1272":{"position":[[0,1],[2,1],[8,7]]},"1274":{"position":[[0,1],[2,1],[9,7]]},"1276":{"position":[[0,1],[6,7],[14,7]]},"1278":{"position":[[0,1],[3,14]]},"1281":{"position":[[0,1]]},"1283":{"position":[[0,1],[8,3]]},"1286":{"position":[[2,3]]},"1288":{"position":[[0,1],[3,2],[9,3]]},"1289":{"position":[[0,1],[2,1],[6,3]]},"1291":{"position":[[0,1],[2,1],[6,3]]},"1293":{"position":[[0,1],[3,2],[10,3]]},"1294":{"position":[[0,1],[2,1]]},"1296":{"position":[[0,1],[2,1]]},"1298":{"position":[[0,1],[2,1]]},"1300":{"position":[[0,1],[7,3]]},"1301":{"position":[[4,3]]},"1305":{"position":[[0,1]]},"1308":{"position":[[0,1],[3,3]]},"1311":{"position":[[0,1],[3,2],[6,4]]},"1313":{"position":[[0,1],[3,4],[8,7]]},"1315":{"position":[[0,1],[2,1],[6,6],[13,6]]},"1317":{"position":[[0,1],[2,1],[7,6]]},"1319":{"position":[[0,1]]},"1320":{"position":[[0,1],[2,1],[6,3],[10,6]]},"1322":{"position":[[0,1],[2,1],[7,10]]},"1324":{"position":[[0,1],[2,1],[10,5]]},"1326":{"position":[[0,1],[2,1]]},"1328":{"position":[[0,1],[2,1]]},"1330":{"position":[[0,1],[2,1]]},"1332":{"position":[[0,1],[2,1]]},"1334":{"position":[[0,1]]},"1337":{"position":[[0,1]]},"1339":{"position":[[0,1]]},"1341":{"position":[[0,1]]},"1342":{"position":[[0,1],[2,1]]},"1344":{"position":[[0,1],[2,1]]},"1346":{"position":[[0,1],[2,1]]},"1348":{"position":[[0,1],[2,1]]},"1350":{"position":[[0,1]]},"1352":{"position":[[0,1]]},"1356":{"position":[[0,1],[3,7]]},"1358":{"position":[[0,1],[2,1],[4,7]]},"1360":{"position":[[0,1],[2,1]]},"1362":{"position":[[0,1],[2,1],[4,6],[14,7]]},"1364":{"position":[[0,1],[2,1],[4,7]]},"1366":{"position":[[0,1],[3,4],[8,9]]},"1368":{"position":[[0,1],[4,4],[9,5]]},"1370":{"position":[[0,1],[4,4],[9,4]]},"1372":{"position":[[0,1],[4,4],[9,4]]},"1374":{"position":[[0,1],[4,6]]},"1378":{"position":[[0,1],[4,7]]},"1386":{"position":[[0,1]]},"1387":{"position":[[0,1],[2,1]]},"1389":{"position":[[0,1],[2,1]]},"1391":{"position":[[0,1],[3,2],[9,11]]},"1392":{"position":[[0,1],[2,1],[7,6]]},"1394":{"position":[[0,1],[2,1],[11,10]]},"1396":{"position":[[0,1],[2,1]]},"1398":{"position":[[0,1],[2,1]]},"1400":{"position":[[0,1]]},"1402":{"position":[[0,1]]},"1406":{"position":[[0,1],[3,6],[10,5]]},"1408":{"position":[[0,1],[2,1],[10,5],[16,8]]},"1410":{"position":[[0,1],[2,1],[10,13]]},"1412":{"position":[[0,1],[2,1]]},"1414":{"position":[[0,1],[2,1]]},"1416":{"position":[[0,1],[2,1]]},"1418":{"position":[[0,1],[2,1],[10,13]]},"1420":{"position":[[0,1],[2,1]]},"1422":{"position":[[0,1]]},"1424":{"position":[[0,1],[9,6],[16,5]]},"1426":{"position":[[0,1]]},"1430":{"position":[[0,1]]},"1432":{"position":[[0,1]]},"1434":{"position":[[0,1]]},"1436":{"position":[[0,1]]},"1437":{"position":[[0,1],[2,1]]},"1439":{"position":[[0,1],[2,1],[8,5]]},"1441":{"position":[[0,1],[2,1]]},"1443":{"position":[[0,1]]},"1446":{"position":[[0,1]]},"1448":{"position":[[0,1]]},"1450":{"position":[[0,1],[2,1],[4,6]]},"1452":{"position":[[0,1],[2,1],[4,10]]},"1454":{"position":[[0,1],[2,1]]},"1458":{"position":[[0,1]]},"1460":{"position":[[0,1]]},"1461":{"position":[[0,1],[2,1],[4,6]]},"1463":{"position":[[0,1],[2,1],[4,10]]},"1465":{"position":[[0,1],[2,1]]},"1467":{"position":[[0,1],[2,1]]},"1469":{"position":[[0,1],[2,1]]},"1473":{"position":[[0,1]]},"1475":{"position":[[0,1]]},"1476":{"position":[[0,1],[2,1],[4,6]]},"1478":{"position":[[0,1],[2,1]]},"1481":{"position":[[0,1]]},"1483":{"position":[[0,1]]},"1484":{"position":[[0,1],[2,1],[4,6]]},"1486":{"position":[[0,1],[2,1]]},"1488":{"position":[[0,1],[2,1]]},"1491":{"position":[[0,1]]},"1493":{"position":[[0,1]]},"1494":{"position":[[0,1],[2,1],[4,6]]},"1496":{"position":[[0,1],[2,1],[4,10]]},"1498":{"position":[[0,1],[2,1],[12,11]]},"1500":{"position":[[0,1],[2,1]]},"1503":{"position":[[0,1]]},"1505":{"position":[[0,1]]},"1506":{"position":[[0,1],[2,1],[4,6]]},"1508":{"position":[[0,1],[2,1]]},"1510":{"position":[[0,1],[2,1],[4,4]]},"1512":{"position":[[0,1],[2,1]]},"1515":{"position":[[0,1]]},"1517":{"position":[[0,1]]},"1518":{"position":[[0,1],[2,1],[4,6]]},"1520":{"position":[[0,1],[2,1],[4,4]]},"1522":{"position":[[0,1],[2,1],[4,4]]},"1524":{"position":[[0,1],[2,1]]},"1528":{"position":[[0,1]]},"1530":{"position":[[0,1]]},"1531":{"position":[[0,1],[2,1]]},"1533":{"position":[[0,1],[2,1],[11,10]]},"1535":{"position":[[0,1]]},"1536":{"position":[[0,1],[2,1],[4,6],[16,10]]},"1538":{"position":[[0,1],[2,1]]},"1540":{"position":[[0,1],[2,1]]},"1542":{"position":[[0,1],[2,1]]},"1544":{"position":[[0,1],[3,4]]},"1546":{"position":[[0,1],[2,1]]},"1550":{"position":[[0,5]]},"1555":{"position":[[0,1]]},"1557":{"position":[[0,1],[8,3]]},"1560":{"position":[[2,3]]},"1562":{"position":[[0,1],[3,2],[9,3]]},"1563":{"position":[[0,1],[2,1],[6,3]]},"1565":{"position":[[0,1],[2,1],[6,3]]},"1567":{"position":[[0,1],[3,2],[10,3]]},"1568":{"position":[[0,1],[2,1]]},"1570":{"position":[[0,1],[2,1]]},"1572":{"position":[[0,1],[2,1]]},"1574":{"position":[[0,1],[7,3]]},"1575":{"position":[[4,3]]},"1579":{"position":[[0,1]]},"1582":{"position":[[0,1]]},"1584":{"position":[[0,1],[3,3]]},"1586":{"position":[[0,1],[3,2],[9,3]]},"1587":{"position":[[0,1],[2,1],[10,3]]},"1589":{"position":[[0,1],[2,1]]},"1591":{"position":[[0,1],[5,3]]},"1592":{"position":[[0,1],[2,1],[6,3]]},"1594":{"position":[[0,1],[2,1],[9,3]]},"1596":{"position":[[0,1],[3,2],[10,3]]},"1597":{"position":[[0,1],[2,1],[11,10],[22,7]]},"1599":{"position":[[0,1],[2,1]]},"1601":{"position":[[0,1],[3,3]]},"1603":{"position":[[0,1],[3,3]]},"1605":{"position":[[0,1],[2,1]]},"1607":{"position":[[0,1],[2,1]]},"1609":{"position":[[0,1],[2,1]]},"1611":{"position":[[0,1],[2,1]]},"1613":{"position":[[0,1],[2,1]]},"1615":{"position":[[0,1]]},"1618":{"position":[[0,1],[3,3]]},"1627":{"position":[[0,2],[9,4]]},"1633":{"position":[[0,2],[3,3],[7,4],[15,7]]},"1635":{"position":[[4,9]]},"1639":{"position":[[5,6]]},"1641":{"position":[[0,2]]},"1644":{"position":[[0,1],[3,7]]},"1646":{"position":[[0,1],[7,7]]},"1647":{"position":[[0,1],[2,1],[8,7]]},"1649":{"position":[[0,1],[2,1],[9,7]]},"1651":{"position":[[0,1],[6,7],[14,7]]},"1653":{"position":[[0,1],[3,14]]},"1656":{"position":[[0,1]]},"1658":{"position":[[0,1]]},"1660":{"position":[[0,1]]},"1661":{"position":[[0,1],[2,1],[9,3]]},"1663":{"position":[[0,1],[2,1],[15,3]]},"1665":{"position":[[0,1],[2,1]]},"1667":{"position":[[0,1],[2,1]]},"1669":{"position":[[0,1],[2,1]]},"1671":{"position":[[0,1],[2,1]]},"1673":{"position":[[0,1]]},"1674":{"position":[[0,1],[2,1]]},"1676":{"position":[[0,1]]},"1681":{"position":[[0,1],[3,6],[13,4],[22,8],[31,4]]},"1683":{"position":[[0,1],[7,4]]},"1684":{"position":[[0,1],[2,1],[4,6],[11,3],[15,7],[23,5],[32,4]]},"1688":{"position":[[0,1],[2,1],[4,6],[11,3],[15,4],[20,8],[29,2],[36,4]]},"1692":{"position":[[0,1],[2,1],[4,6],[11,3],[15,5],[21,10],[35,4]]},"1696":{"position":[[0,1],[3,4]]},"1701":{"position":[[0,1],[6,7]]},"1703":{"position":[[0,1]]},"1705":{"position":[[0,1],[2,1]]},"1707":{"position":[[0,1]]},"1709":{"position":[[0,1]]},"1710":{"position":[[0,1],[2,1]]},"1712":{"position":[[0,1],[2,1],[12,3]]},"1714":{"position":[[0,1]]},"1716":{"position":[[0,1]]},"1718":{"position":[[0,1]]},"1721":{"position":[[0,1]]},"1723":{"position":[[0,1]]},"1725":{"position":[[0,1]]},"1727":{"position":[[0,1]]},"1729":{"position":[[0,1]]},"1731":{"position":[[0,1]]},"1733":{"position":[[0,1]]},"1735":{"position":[[0,1]]},"1738":{"position":[[0,1]]},"1740":{"position":[[0,1]]},"1741":{"position":[[0,1],[2,1],[4,4]]},"1743":{"position":[[0,1],[2,1]]},"1745":{"position":[[0,1]]},"1747":{"position":[[0,1],[2,1],[6,9]]},"1749":{"position":[[0,1],[2,1],[6,11]]},"1751":{"position":[[0,1]]},"1752":{"position":[[0,1],[2,1]]},"1754":{"position":[[0,1],[2,1]]},"1756":{"position":[[0,1]]},"1757":{"position":[[0,1],[2,1]]},"1759":{"position":[[0,1],[2,1]]},"1761":{"position":[[0,1]]},"1762":{"position":[[0,1],[2,1]]},"1764":{"position":[[0,1],[2,1]]},"1766":{"position":[[0,1]]},"1767":{"position":[[0,1],[2,1]]},"1769":{"position":[[0,1]]},"1774":{"position":[[0,1]]},"1776":{"position":[[0,1]]},"1778":{"position":[[0,1]]},"1779":{"position":[[0,1],[2,1],[8,6]]},"1781":{"position":[[0,1],[2,1],[7,6]]},"1783":{"position":[[0,1],[11,6]]},"1785":{"position":[[0,1]]},"1786":{"position":[[0,1],[2,1]]},"1788":{"position":[[0,1],[2,1],[10,7]]},"1790":{"position":[[0,1],[2,1]]},"1792":{"position":[[0,1],[2,1]]},"1794":{"position":[[0,1]]},"1796":{"position":[[0,1]]},"1799":{"position":[[0,1],[3,4],[8,6]]},"1801":{"position":[[0,1],[9,3],[13,4]]},"1802":{"position":[[0,1],[2,1]]},"1804":{"position":[[0,1],[2,1]]},"1806":{"position":[[0,1],[6,3]]},"1807":{"position":[[0,1],[2,1]]},"1809":{"position":[[0,1],[2,1]]},"1811":{"position":[[0,1]]},"1812":{"position":[[0,1],[2,1],[6,4]]},"1814":{"position":[[0,1],[2,1],[6,6]]},"1816":{"position":[[0,1]]},"1818":{"position":[[0,1]]},"1820":{"position":[[0,1]]},"1825":{"position":[[0,1],[3,3]]},"1827":{"position":[[0,1],[2,1],[4,3]]},"1829":{"position":[[0,1],[2,1],[4,3]]},"1831":{"position":[[0,1],[3,3]]},"1832":{"position":[[0,1],[2,1]]},"1834":{"position":[[0,1],[2,1]]},"1836":{"position":[[0,1],[3,3]]},"1837":{"position":[[0,1],[2,1],[6,3]]},"1839":{"position":[[0,1],[2,1]]},"1841":{"position":[[0,1],[2,1]]},"1843":{"position":[[0,1],[2,1]]},"1845":{"position":[[0,1],[2,1]]},"1847":{"position":[[0,1],[2,1]]},"1849":{"position":[[0,1],[2,1]]},"1851":{"position":[[0,1]]},"1852":{"position":[[0,1],[2,1]]},"1854":{"position":[[0,1],[2,1]]},"1856":{"position":[[0,1],[2,1],[8,11]]},"1858":{"position":[[0,1],[2,1],[8,11]]},"1860":{"position":[[0,1],[2,1]]},"1862":{"position":[[0,1],[2,1]]},"1864":{"position":[[0,1],[2,1]]},"1866":{"position":[[0,1]]},"1867":{"position":[[0,1],[2,1]]},"1869":{"position":[[0,1],[2,1]]},"1871":{"position":[[0,1],[2,1]]},"1873":{"position":[[0,1]]},"1874":{"position":[[0,1],[2,1]]},"1876":{"position":[[0,1],[2,1]]},"1878":{"position":[[0,1],[2,1]]},"1880":{"position":[[0,1],[3,3]]},"1881":{"position":[[0,1],[2,1],[4,6]]},"1883":{"position":[[0,1],[2,1]]},"1885":{"position":[[0,1]]},"1888":{"position":[[0,1]]},"1890":{"position":[[0,1]]},"1892":{"position":[[0,1],[6,6],[13,6],[20,3],[24,1],[26,3],[30,4]]},"1893":{"position":[[0,1]]},"1895":{"position":[[0,1]]},"1897":{"position":[[0,1],[6,4]]},"1898":{"position":[[0,1],[2,1],[9,2]]},"1900":{"position":[[0,1],[2,1]]},"1902":{"position":[[0,1],[2,1]]},"1904":{"position":[[0,1],[2,1]]},"1906":{"position":[[0,1],[2,1]]},"1908":{"position":[[0,1],[3,4],[11,7]]},"1910":{"position":[[0,1]]},"1912":{"position":[[0,1]]},"1914":{"position":[[3,4]]},"1915":{"position":[[0,1],[2,1],[9,2]]},"1917":{"position":[[0,1],[2,1]]},"1919":{"position":[[0,1],[2,1]]},"1921":{"position":[[0,1],[2,1]]},"1923":{"position":[[0,1],[2,1]]},"1925":{"position":[[0,1],[3,4],[11,7]]},"1927":{"position":[[0,1]]},"1929":{"position":[[0,1]]}}}],["一万句",{"_index":6,"t":{"978":{"position":[[3,3]]}}}],["一个",{"_index":75,"t":{"1158":{"position":[[7,2]]},"1498":{"position":[[7,2]]},"1783":{"position":[[5,2]]}}}],["一句",{"_index":4,"t":{"978":{"position":[[0,2]]}}}],["不到",{"_index":194,"t":{"1618":{"position":[[10,2]]}}}],["不必",{"_index":147,"t":{"1303":{"position":[[0,2]]},"1577":{"position":[[0,2]]}}}],["中",{"_index":101,"t":{"1237":{"position":[[7,1]]},"1247":{"position":[[7,1]]},"1288":{"position":[[7,1]]},"1293":{"position":[[7,1]]},"1562":{"position":[[7,1]]},"1567":{"position":[[7,1]]},"1586":{"position":[[7,1]]},"1596":{"position":[[7,1]]},"1627":{"position":[[3,1]]},"1781":{"position":[[16,1]]},"1841":{"position":[[8,1]]}}}],["中间件",{"_index":115,"t":{"1250":{"position":[[4,3]]},"1599":{"position":[[4,3]]}}}],["为什么",{"_index":132,"t":{"1283":{"position":[[3,3]]},"1557":{"position":[[3,3]]}}}],["主程序",{"_index":25,"t":{"1072":{"position":[[4,3]]},"1108":{"position":[[4,3]]},"1396":{"position":[[4,3]]},"1465":{"position":[[4,3]]}}}],["举例",{"_index":311,"t":{"1935":{"position":[[0,2]]}}}],["事件",{"_index":175,"t":{"1370":{"position":[[16,2]]}}}],["交互",{"_index":128,"t":{"1269":{"position":[[11,2]]},"1644":{"position":[[11,2]]}}}],["人类",{"_index":0,"t":{"974":{"position":[[0,2]]}}}],["代替",{"_index":140,"t":{"1296":{"position":[[6,2]]},"1570":{"position":[[6,2]]}}}],["代码",{"_index":43,"t":{"1103":{"position":[[3,2]]},"1118":{"position":[[3,2]]},"1153":{"position":[[3,2]]},"1165":{"position":[[3,2]]},"1173":{"position":[[3,2]]},"1183":{"position":[[3,2]]},"1195":{"position":[[3,2]]},"1243":{"position":[[10,2]]},"1245":{"position":[[13,2]]},"1448":{"position":[[3,2]]},"1460":{"position":[[3,2]]},"1475":{"position":[[3,2]]},"1483":{"position":[[3,2]]},"1493":{"position":[[3,2]]},"1505":{"position":[[3,2]]},"1517":{"position":[[3,2]]},"1592":{"position":[[10,2]]},"1594":{"position":[[13,2]]}}}],["任意",{"_index":201,"t":{"1635":{"position":[[17,2]]}}}],["优化",{"_index":45,"t":{"1112":{"position":[[4,2]]},"1274":{"position":[[17,2]]},"1469":{"position":[[4,2]]},"1649":{"position":[[17,2]]},"1756":{"position":[[5,2]]},"1816":{"position":[[5,2]]}}}],["优点",{"_index":134,"t":{"1284":{"position":[[0,2]]},"1558":{"position":[[0,2]]}}}],["优缺点",{"_index":221,"t":{"1686":{"position":[[0,3]]},"1690":{"position":[[0,3]]},"1694":{"position":[[0,3]]}}}],["传递",{"_index":153,"t":{"1324":{"position":[[4,2]]}}}],["体",{"_index":198,"t":{"1625":{"position":[[2,1]]},"1639":{"position":[[3,1]]},"1709":{"position":[[9,1]]},"1710":{"position":[[8,1]]},"1712":{"position":[[8,1]]},"1731":{"position":[[5,1]]},"1743":{"position":[[6,1]]},"1752":{"position":[[8,1]]}}}],["何时",{"_index":144,"t":{"1300":{"position":[[3,2]]},"1574":{"position":[[3,2]]},"1627":{"position":[[4,2]]}}}],["作为",{"_index":306,"t":{"1908":{"position":[[8,2]]},"1925":{"position":[[8,2]]}}}],["使用",{"_index":103,"t":{"1238":{"position":[[4,2]]},"1260":{"position":[[4,2]]},"1264":{"position":[[6,2]]},"1274":{"position":[[5,2]]},"1320":{"position":[[4,2]]},"1322":{"position":[[4,2]]},"1332":{"position":[[4,2]]},"1587":{"position":[[4,2]]},"1609":{"position":[[4,2]]},"1613":{"position":[[6,2]]},"1627":{"position":[[6,2]]},"1629":{"position":[[4,2]]},"1649":{"position":[[5,2]]},"1661":{"position":[[4,2]]},"1663":{"position":[[12,2]]},"1665":{"position":[[4,2]]},"1725":{"position":[[5,2]]},"1757":{"position":[[4,2]]},"1759":{"position":[[4,2]]},"1785":{"position":[[3,2]]},"1801":{"position":[[3,2]]},"1806":{"position":[[3,2]]},"1832":{"position":[[4,2]]}}}],["例子",{"_index":136,"t":{"1289":{"position":[[10,2]]},"1563":{"position":[[10,2]]}}}],["依赖",{"_index":36,"t":{"1088":{"position":[[4,2]]},"1093":{"position":[[6,2]]}}}],["保存",{"_index":92,"t":{"1218":{"position":[[10,2]]},"1540":{"position":[[10,2]]}}}],["信号处理",{"_index":305,"t":{"1904":{"position":[[4,4]]},"1921":{"position":[[4,4]]}}}],["信息",{"_index":183,"t":{"1432":{"position":[[5,2]]},"1434":{"position":[[5,2]]},"1441":{"position":[[7,2]]},"1710":{"position":[[11,2]]},"1733":{"position":[[7,2]]}}}],["修改",{"_index":168,"t":{"1346":{"position":[[4,2]]},"1707":{"position":[[5,2]]}}}],["值",{"_index":226,"t":{"1705":{"position":[[12,1]]}}}],["停止",{"_index":91,"t":{"1218":{"position":[[4,2]]},"1540":{"position":[[4,2]]}}}],["僵尸",{"_index":310,"t":{"1933":{"position":[[2,2]]}}}],["儿子",{"_index":313,"t":{"1939":{"position":[[2,2]]}}}],["关键",{"_index":50,"t":{"1128":{"position":[[19,2]]},"1406":{"position":[[19,2]]}}}],["其他",{"_index":95,"t":{"1230":{"position":[[0,2]]},"1552":{"position":[[0,2]]},"1673":{"position":[[3,2]]}}}],["兼容性",{"_index":62,"t":{"1136":{"position":[[13,3]]},"1414":{"position":[[13,3]]}}}],["内存",{"_index":177,"t":{"1430":{"position":[[3,2]]},"1437":{"position":[[5,2]]},"1847":{"position":[[7,2]]},"1876":{"position":[[4,2]]},"1906":{"position":[[4,2]]},"1923":{"position":[[4,2]]}}}],["内核",{"_index":83,"t":{"1213":{"position":[[3,2]]},"1535":{"position":[[3,2]]}}}],["内置",{"_index":235,"t":{"1727":{"position":[[6,2]]}}}],["冒号",{"_index":33,"t":{"1083":{"position":[[6,2],[15,2]]},"1085":{"position":[[6,2]]},"1090":{"position":[[7,2]]}}}],["函数",{"_index":46,"t":{"1112":{"position":[[6,2]]},"1248":{"position":[[4,2]]},"1298":{"position":[[4,2]]},"1469":{"position":[[6,2]]},"1572":{"position":[[4,2]]},"1597":{"position":[[4,2]]},"1623":{"position":[[2,2]]}}}],["分离",{"_index":296,"t":{"1869":{"position":[[4,2]]}}}],["切换",{"_index":291,"t":{"1864":{"position":[[4,2]]}}}],["列表",{"_index":215,"t":{"1671":{"position":[[6,2]]}}}],["创建",{"_index":125,"t":{"1260":{"position":[[10,2]]},"1609":{"position":[[10,2]]},"1783":{"position":[[3,2]]}}}],["初始化",{"_index":85,"t":{"1214":{"position":[[11,3]]},"1536":{"position":[[11,3]]}}}],["判断",{"_index":129,"t":{"1271":{"position":[[17,2]]},"1274":{"position":[[7,2]]},"1641":{"position":[[3,2]]},"1646":{"position":[[17,2]]},"1649":{"position":[[7,2]]}}}],["功能",{"_index":12,"t":{"996":{"position":[[0,2]]},"1003":{"position":[[0,2]]},"1010":{"position":[[0,2]]},"1017":{"position":[[0,2]]},"1026":{"position":[[0,2]]},"1033":{"position":[[0,2]]},"1040":{"position":[[0,2]]},"1047":{"position":[[0,2]]},"1054":{"position":[[0,2]]}}}],["加载",{"_index":90,"t":{"1216":{"position":[[13,2]]},"1538":{"position":[[13,2]]},"1871":{"position":[[4,2]]}}}],["包",{"_index":151,"t":{"1311":{"position":[[11,1]]},"1832":{"position":[[6,1]]}}}],["化",{"_index":56,"t":{"1134":{"position":[[7,1]]},"1220":{"position":[[8,1]]},"1412":{"position":[[7,1]]},"1542":{"position":[[8,1]]}}}],["区别",{"_index":16,"t":{"1021":{"position":[[0,2]]},"1083":{"position":[[19,2]]}}}],["协议",{"_index":60,"t":{"1136":{"position":[[5,2]]},"1414":{"position":[[5,2]]}}}],["单",{"_index":32,"t":{"1083":{"position":[[5,1]]},"1085":{"position":[[5,1]]}}}],["单一",{"_index":143,"t":{"1298":{"position":[[8,2]]},"1572":{"position":[[8,2]]}}}],["单元测试",{"_index":255,"t":{"1767":{"position":[[4,4]]}}}],["南",{"_index":2,"t":{"976":{"position":[[0,1]]}}}],["历史",{"_index":274,"t":{"1827":{"position":[[8,2]]}}}],["原则",{"_index":51,"t":{"1128":{"position":[[21,2]]},"1228":{"position":[[5,2]]},"1230":{"position":[[4,2]]},"1233":{"position":[[5,2]]},"1406":{"position":[[21,2]]},"1550":{"position":[[5,2]]},"1552":{"position":[[4,2]]},"1582":{"position":[[5,2]]}}}],["原理",{"_index":258,"t":{"1776":{"position":[[5,2]]},"1880":{"position":[[9,2]]},"1883":{"position":[[8,2]]}}}],["参数",{"_index":209,"t":{"1663":{"position":[[9,2]]},"1671":{"position":[[8,2]]},"1839":{"position":[[7,2]]}}}],["参考",{"_index":302,"t":{"1885":{"position":[[3,2]]},"1912":{"position":[[3,2]]},"1929":{"position":[[3,2]]}}}],["双",{"_index":34,"t":{"1083":{"position":[[14,1]]},"1090":{"position":[[6,1]]}}}],["反",{"_index":72,"t":{"1146":{"position":[[3,1]]},"1424":{"position":[[3,1]]}}}],["反射",{"_index":225,"t":{"1701":{"position":[[3,2]]},"1703":{"position":[[3,2]]},"1707":{"position":[[3,2]]},"1709":{"position":[[3,2]]},"1714":{"position":[[3,2]]},"1716":{"position":[[3,2]]},"1718":{"position":[[3,2]]}}}],["发展",{"_index":275,"t":{"1827":{"position":[[11,2]]}}}],["变量",{"_index":47,"t":{"1112":{"position":[[9,2]]},"1469":{"position":[[9,2]]},"1705":{"position":[[6,2]]},"1847":{"position":[[4,2]]}}}],["变量值",{"_index":227,"t":{"1707":{"position":[[7,3]]}}}],["可扩展性",{"_index":54,"t":{"1132":{"position":[[5,4]]},"1410":{"position":[[5,4]]}}}],["司法",{"_index":7,"t":{"982":{"position":[[0,2]]}}}],["后果",{"_index":135,"t":{"1286":{"position":[[6,2]]},"1560":{"position":[[6,2]]}}}],["启动",{"_index":279,"t":{"1837":{"position":[[4,2]]}}}],["命令",{"_index":159,"t":{"1328":{"position":[[10,2]]},"1332":{"position":[[12,2]]},"1665":{"position":[[7,2]]},"1843":{"position":[[8,2]]}}}],["命令行",{"_index":208,"t":{"1663":{"position":[[6,3]]}}}],["命名",{"_index":48,"t":{"1112":{"position":[[11,2]]},"1469":{"position":[[11,2]]}}}],["哈希",{"_index":165,"t":{"1342":{"position":[[6,2]]},"1348":{"position":[[6,2]]}}}],["器",{"_index":71,"t":{"1144":{"position":[[5,1]]},"1258":{"position":[[8,1]]},"1260":{"position":[[14,1]]},"1422":{"position":[[5,1]]},"1607":{"position":[[8,1]]},"1609":{"position":[[14,1]]}}}],["回收",{"_index":179,"t":{"1430":{"position":[[8,2]]},"1939":{"position":[[0,2]]}}}],["场景",{"_index":40,"t":{"1095":{"position":[[13,2]]},"1252":{"position":[[11,2]]},"1350":{"position":[[5,2]]},"1364":{"position":[[15,2]]},"1601":{"position":[[11,2]]},"1629":{"position":[[7,2]]},"1631":{"position":[[6,2]]},"1785":{"position":[[5,2]]},"1820":{"position":[[7,2]]},"1829":{"position":[[9,2]]}}}],["垃圾",{"_index":178,"t":{"1430":{"position":[[6,2]]}}}],["基本",{"_index":35,"t":{"1086":{"position":[[4,2]]},"1091":{"position":[[4,2]]},"1313":{"position":[[16,2]]},"1341":{"position":[[3,2]]},"1660":{"position":[[3,2]]},"1703":{"position":[[6,2]]},"1725":{"position":[[3,2]]},"1778":{"position":[[3,2]]},"1783":{"position":[[7,2]]},"1843":{"position":[[4,2]]}}}],["基本功能",{"_index":278,"t":{"1836":{"position":[[7,4]]}}}],["基础",{"_index":119,"t":{"1256":{"position":[[4,2]]},"1360":{"position":[[4,2]]},"1605":{"position":[[4,2]]},"1802":{"position":[[4,2]]},"1807":{"position":[[4,2]]}}}],["堆栈",{"_index":182,"t":{"1432":{"position":[[3,2]]}}}],["增加",{"_index":74,"t":{"1158":{"position":[[4,2]]},"1271":{"position":[[4,2]]},"1330":{"position":[[4,2]]},"1498":{"position":[[4,2]]},"1646":{"position":[[4,2]]}}}],["增强",{"_index":188,"t":{"1439":{"position":[[5,2]]}}}],["处理",{"_index":189,"t":{"1439":{"position":[[13,2]]},"1669":{"position":[[4,2]]},"1709":{"position":[[5,2]]},"1751":{"position":[[7,2]]},"1754":{"position":[[8,2]]},"1764":{"position":[[8,2]]}}}],["处理错误",{"_index":238,"t":{"1733":{"position":[[3,4]]}}}],["复合",{"_index":242,"t":{"1751":{"position":[[3,2]]}}}],["多",{"_index":284,"t":{"1852":{"position":[[4,1]]}}}],["多个",{"_index":162,"t":{"1332":{"position":[[10,2]]}}}],["多种",{"_index":121,"t":{"1258":{"position":[[12,2]]},"1607":{"position":[[12,2]]}}}],["多线程",{"_index":285,"t":{"1854":{"position":[[4,3]]}}}],["子",{"_index":210,"t":{"1665":{"position":[[6,1]]}}}],["字",{"_index":228,"t":{"1710":{"position":[[9,1]]}}}],["存储",{"_index":79,"t":{"1208":{"position":[[5,2]]},"1209":{"position":[[4,2]]},"1530":{"position":[[5,2]]},"1531":{"position":[[4,2]]}}}],["孤儿",{"_index":312,"t":{"1936":{"position":[[0,2]]}}}],["安装",{"_index":163,"t":{"1339":{"position":[[3,2]]},"1658":{"position":[[3,2]]},"1723":{"position":[[3,2]]},"1831":{"position":[[6,2]]},"1832":{"position":[[10,2]]},"1834":{"position":[[8,2]]},"1890":{"position":[[3,2]]},"1895":{"position":[[3,2]]}}}],["完整",{"_index":127,"t":{"1264":{"position":[[4,2]]},"1613":{"position":[[4,2]]},"1771":{"position":[[3,2]]}}}],["定义",{"_index":23,"t":{"1068":{"position":[[4,2]]},"1392":{"position":[[4,2]]},"1663":{"position":[[4,2]]}}}],["定时",{"_index":93,"t":{"1220":{"position":[[4,2]]},"1542":{"position":[[4,2]]}}}],["实现",{"_index":22,"t":{"1067":{"position":[[6,2]]},"1070":{"position":[[4,2]]},"1237":{"position":[[12,2]]},"1238":{"position":[[8,2]]},"1391":{"position":[[6,2]]},"1394":{"position":[[4,2]]},"1586":{"position":[[12,2]]},"1587":{"position":[[8,2]]},"1747":{"position":[[4,2]]},"1749":{"position":[[4,2]]},"1801":{"position":[[18,2]]},"1802":{"position":[[6,2]]},"1806":{"position":[[12,2]]},"1807":{"position":[[6,2]]},"1880":{"position":[[7,2]]},"1883":{"position":[[6,2]]}}}],["实践",{"_index":111,"t":{"1247":{"position":[[8,2]]},"1293":{"position":[[8,2]]},"1567":{"position":[[8,2]]},"1596":{"position":[[8,2]]},"1718":{"position":[[7,2]]},"1769":{"position":[[5,2]]}}}],["实际",{"_index":116,"t":{"1252":{"position":[[7,2]]},"1436":{"position":[[3,2]]},"1601":{"position":[[7,2]]},"1820":{"position":[[3,2]]}}}],["客户端",{"_index":271,"t":{"1811":{"position":[[3,3]]},"1812":{"position":[[10,3]]},"1814":{"position":[[12,3]]}}}],["家庭",{"_index":10,"t":{"988":{"position":[[0,2]]}}}],["寄存器",{"_index":283,"t":{"1849":{"position":[[4,3]]}}}],["密码",{"_index":166,"t":{"1342":{"position":[[8,2]]},"1344":{"position":[[6,2]]},"1346":{"position":[[6,2]]}}}],["对比",{"_index":222,"t":{"1686":{"position":[[3,2]]},"1690":{"position":[[3,2]]},"1694":{"position":[[3,2]]},"1696":{"position":[[11,2]]}}}],["尝试",{"_index":88,"t":{"1216":{"position":[[9,2]]},"1538":{"position":[[9,2]]}}}],["局限性",{"_index":232,"t":{"1716":{"position":[[6,3]]}}}],["展示",{"_index":190,"t":{"1441":{"position":[[9,2]]}}}],["嵌套",{"_index":237,"t":{"1731":{"position":[[6,2]]},"1752":{"position":[[4,2]]}}}],["工作",{"_index":257,"t":{"1776":{"position":[[3,2]]}}}],["工具",{"_index":187,"t":{"1437":{"position":[[9,2]]}}}],["工厂",{"_index":123,"t":{"1260":{"position":[[6,2]]},"1609":{"position":[[6,2]]}}}],["布尔",{"_index":212,"t":{"1669":{"position":[[6,2]]}}}],["带",{"_index":157,"t":{"1328":{"position":[[6,1]]},"1839":{"position":[[6,1]]}}}],["帧",{"_index":293,"t":{"1864":{"position":[[7,1]]}}}],["常见",{"_index":234,"t":{"1727":{"position":[[3,2]]},"1818":{"position":[[3,2]]},"1892":{"position":[[3,2]]},"1897":{"position":[[3,2]]}}}],["常见问题",{"_index":247,"t":{"1761":{"position":[[3,4]]}}}],["并发",{"_index":63,"t":{"1138":{"position":[[5,2]]},"1416":{"position":[[5,2]]}}}],["序列化",{"_index":241,"t":{"1740":{"position":[[7,3]]},"1741":{"position":[[8,3]]},"1745":{"position":[[8,3]]}}}],["库",{"_index":219,"t":{"1683":{"position":[[14,1]]},"1696":{"position":[[10,1]]},"1740":{"position":[[5,1]]},"1759":{"position":[[9,1]]},"1801":{"position":[[7,1]]}}}],["应用",{"_index":117,"t":{"1252":{"position":[[9,2]]},"1300":{"position":[[5,2]]},"1301":{"position":[[2,2]]},"1303":{"position":[[4,2]]},"1436":{"position":[[5,2]]},"1574":{"position":[[5,2]]},"1575":{"position":[[2,2]]},"1577":{"position":[[4,2]]},"1601":{"position":[[9,2]]},"1820":{"position":[[5,2]]},"1829":{"position":[[7,2]]}}}],["应用程序",{"_index":267,"t":{"1792":{"position":[[12,4]]}}}],["应该",{"_index":145,"t":{"1301":{"position":[[0,2]]},"1575":{"position":[[0,2]]}}}],["建议",{"_index":270,"t":{"1809":{"position":[[8,2]]},"1816":{"position":[[7,2]]}}}],["开闭",{"_index":97,"t":{"1233":{"position":[[3,2]]},"1582":{"position":[[3,2]]}}}],["引用",{"_index":250,"t":{"1762":{"position":[[6,2]]}}}],["引言",{"_index":239,"t":{"1738":{"position":[[3,2]]}}}],["循环",{"_index":249,"t":{"1762":{"position":[[4,2]]}}}],["微内核",{"_index":17,"t":{"1062":{"position":[[3,3]]},"1072":{"position":[[10,3]]},"1108":{"position":[[10,3]]},"1386":{"position":[[3,3]]},"1396":{"position":[[10,3]]},"1465":{"position":[[10,3]]}}}],["性",{"_index":67,"t":{"1140":{"position":[[8,1]]},"1418":{"position":[[8,1]]}}}],["性能",{"_index":244,"t":{"1756":{"position":[[3,2]]},"1816":{"position":[[3,2]]}}}],["总结",{"_index":30,"t":{"1078":{"position":[[3,2]]},"1095":{"position":[[15,2]]},"1148":{"position":[[3,2]]},"1266":{"position":[[3,2]]},"1305":{"position":[[3,2]]},"1352":{"position":[[3,2]]},"1382":{"position":[[0,2]]},"1402":{"position":[[3,2]]},"1426":{"position":[[3,2]]},"1579":{"position":[[3,2]]},"1615":{"position":[[3,2]]},"1676":{"position":[[3,2]]},"1678":{"position":[[2,2]]},"1698":{"position":[[0,2]]},"1796":{"position":[[3,2]]},"1822":{"position":[[0,2]]}}}],["恢复",{"_index":262,"t":{"1786":{"position":[[7,2]]}}}],["情况",{"_index":146,"t":{"1301":{"position":[[8,2]]},"1575":{"position":[[8,2]]}}}],["执行命令",{"_index":261,"t":{"1781":{"position":[[17,4]]}}}],["扩展",{"_index":28,"t":{"1076":{"position":[[3,2]]},"1240":{"position":[[12,2]]},"1262":{"position":[[13,2]]},"1400":{"position":[[3,2]]},"1589":{"position":[[12,2]]},"1611":{"position":[[13,2]]}}}],["找",{"_index":193,"t":{"1618":{"position":[[9,1]]}}}],["技巧",{"_index":113,"t":{"1247":{"position":[[16,2]]},"1293":{"position":[[14,2]]},"1567":{"position":[[14,2]]},"1596":{"position":[[16,2]]},"1851":{"position":[[7,2]]}}}],["报错",{"_index":199,"t":{"1633":{"position":[[12,2]]}}}],["持久",{"_index":94,"t":{"1220":{"position":[[6,2]]},"1542":{"position":[[6,2]]}}}],["捕获",{"_index":287,"t":{"1858":{"position":[[4,2]]}}}],["接口",{"_index":104,"t":{"1238":{"position":[[6,2]]},"1294":{"position":[[4,2]]},"1568":{"position":[[4,2]]},"1587":{"position":[[6,2]]},"1635":{"position":[[1,2]]},"1747":{"position":[[15,2]]},"1749":{"position":[[17,2]]}}}],["接口类型",{"_index":243,"t":{"1754":{"position":[[4,4]]}}}],["控制",{"_index":304,"t":{"1902":{"position":[[6,2]]},"1919":{"position":[[6,2]]}}}],["推荐",{"_index":172,"t":{"1356":{"position":[[11,2]]},"1629":{"position":[[2,2]]},"1631":{"position":[[3,2]]},"1698":{"position":[[3,2]]}}}],["操作",{"_index":181,"t":{"1430":{"position":[[12,2]]},"1432":{"position":[[7,2]]},"1847":{"position":[[9,2]]},"1849":{"position":[[7,2]]},"1900":{"position":[[6,2]]},"1917":{"position":[[6,2]]}}}],["支付",{"_index":107,"t":{"1240":{"position":[[7,2]]},"1589":{"position":[[7,2]]}}}],["支持",{"_index":120,"t":{"1258":{"position":[[10,2]]},"1276":{"position":[[3,2]]},"1607":{"position":[[10,2]]},"1651":{"position":[[3,2]]},"1740":{"position":[[10,2]]}}}],["改动",{"_index":44,"t":{"1103":{"position":[[5,2]]},"1118":{"position":[[5,2]]},"1153":{"position":[[5,2]]},"1165":{"position":[[5,2]]},"1173":{"position":[[5,2]]},"1183":{"position":[[5,2]]},"1195":{"position":[[5,2]]},"1448":{"position":[[5,2]]},"1460":{"position":[[5,2]]},"1475":{"position":[[5,2]]},"1483":{"position":[[5,2]]},"1493":{"position":[[5,2]]},"1505":{"position":[[5,2]]},"1517":{"position":[[5,2]]}}}],["改进",{"_index":138,"t":{"1291":{"position":[[10,2]]},"1565":{"position":[[10,2]]}}}],["数据格式",{"_index":61,"t":{"1136":{"position":[[8,4]]},"1414":{"position":[[8,4]]}}}],["文件",{"_index":80,"t":{"1209":{"position":[[6,2]]},"1531":{"position":[[6,2]]},"1900":{"position":[[4,2]]},"1917":{"position":[[4,2]]}}}],["文化",{"_index":8,"t":{"984":{"position":[[0,2]]}}}],["断点",{"_index":282,"t":{"1845":{"position":[[4,2]]},"1883":{"position":[[4,2]]}}}],["断言",{"_index":203,"t":{"1637":{"position":[[2,2]]}}}],["新",{"_index":106,"t":{"1240":{"position":[[6,1]]},"1589":{"position":[[6,1]]}}}],["方向",{"_index":29,"t":{"1076":{"position":[[5,2]]},"1400":{"position":[[5,2]]}}}],["方式",{"_index":102,"t":{"1237":{"position":[[14,2]]},"1240":{"position":[[9,2]]},"1356":{"position":[[13,2]]},"1586":{"position":[[14,2]]},"1589":{"position":[[9,2]]},"1811":{"position":[[8,2]]}}}],["方案",{"_index":308,"t":{"1908":{"position":[[22,2]]},"1925":{"position":[[22,2]]}}}],["方法",{"_index":124,"t":{"1260":{"position":[[8,2]]},"1609":{"position":[[8,2]]},"1618":{"position":[[12,2]]},"1625":{"position":[[3,2]]},"1663":{"position":[[19,2]]},"1714":{"position":[[7,2]]}}}],["日志",{"_index":77,"t":{"1186":{"position":[[4,2]]},"1254":{"position":[[7,2]]},"1258":{"position":[[6,2]]},"1260":{"position":[[12,2]]},"1508":{"position":[[4,2]]},"1603":{"position":[[7,2]]},"1607":{"position":[[6,2]]},"1609":{"position":[[12,2]]}}}],["时",{"_index":87,"t":{"1216":{"position":[[8,1]]},"1218":{"position":[[8,1]]},"1538":{"position":[[8,1]]},"1540":{"position":[[8,1]]},"1867":{"position":[[6,1]]}}}],["时间",{"_index":252,"t":{"1764":{"position":[[4,2]]}}}],["明史",{"_index":3,"t":{"976":{"position":[[1,2]]}}}],["是否",{"_index":170,"t":{"1348":{"position":[[8,2]]}}}],["普通",{"_index":196,"t":{"1623":{"position":[[0,2]]}}}],["更新",{"_index":171,"t":{"1348":{"position":[[12,2]]}}}],["替代",{"_index":307,"t":{"1908":{"position":[[20,2]]},"1925":{"position":[[20,2]]}}}],["最佳",{"_index":233,"t":{"1718":{"position":[[5,2]]},"1769":{"position":[[3,2]]}}}],["服务",{"_index":24,"t":{"1070":{"position":[[8,2]]},"1072":{"position":[[16,2]]},"1108":{"position":[[16,2]]},"1176":{"position":[[4,2]]},"1186":{"position":[[6,2]]},"1198":{"position":[[8,2]]},"1216":{"position":[[6,2]]},"1218":{"position":[[6,2]]},"1394":{"position":[[8,2]]},"1396":{"position":[[16,2]]},"1465":{"position":[[16,2]]},"1486":{"position":[[4,2]]},"1508":{"position":[[6,2]]},"1520":{"position":[[8,2]]},"1538":{"position":[[6,2]]},"1540":{"position":[[6,2]]}}}],["机制",{"_index":49,"t":{"1128":{"position":[[16,2]]},"1406":{"position":[[16,2]]}}}],["松",{"_index":52,"t":{"1130":{"position":[[6,1]]},"1408":{"position":[[6,1]]}}}],["构建",{"_index":184,"t":{"1434":{"position":[[3,2]]},"1441":{"position":[[5,2]]}}}],["查杀",{"_index":309,"t":{"1933":{"position":[[0,2]]}}}],["标准",{"_index":240,"t":{"1740":{"position":[[3,2]]},"1801":{"position":[[5,2]]},"1812":{"position":[[4,2]]}}}],["标志",{"_index":213,"t":{"1669":{"position":[[8,2]]}}}],["标签",{"_index":230,"t":{"1712":{"position":[[9,2]]},"1727":{"position":[[10,2]]},"1743":{"position":[[7,2]]}}}],["栈",{"_index":292,"t":{"1864":{"position":[[6,1]]}}}],["校验",{"_index":167,"t":{"1344":{"position":[[4,2]]}}}],["核心",{"_index":18,"t":{"1062":{"position":[[6,2]]},"1065":{"position":[[4,2]]},"1068":{"position":[[14,2]]},"1104":{"position":[[11,2]]},"1120":{"position":[[11,2]]},"1154":{"position":[[11,2]]},"1166":{"position":[[11,2]]},"1174":{"position":[[11,2]]},"1184":{"position":[[11,2]]},"1196":{"position":[[11,2]]},"1235":{"position":[[7,2]]},"1386":{"position":[[6,2]]},"1389":{"position":[[4,2]]},"1392":{"position":[[14,2]]},"1450":{"position":[[11,2]]},"1461":{"position":[[11,2]]},"1476":{"position":[[11,2]]},"1484":{"position":[[11,2]]},"1494":{"position":[[11,2]]},"1506":{"position":[[11,2]]},"1518":{"position":[[11,2]]},"1584":{"position":[[7,2]]}}}],["格式",{"_index":253,"t":{"1764":{"position":[[6,2]]}}}],["框架",{"_index":268,"t":{"1806":{"position":[[10,2]]}}}],["案例",{"_index":297,"t":{"1873":{"position":[[5,2]]}}}],["检查",{"_index":299,"t":{"1876":{"position":[[8,2]]}}}],["检测",{"_index":301,"t":{"1878":{"position":[[6,2]]}}}],["概念",{"_index":99,"t":{"1235":{"position":[[9,2]]},"1584":{"position":[[9,2]]}}}],["概述",{"_index":31,"t":{"1081":{"position":[[3,2]]},"1281":{"position":[[3,2]]},"1337":{"position":[[3,2]]},"1555":{"position":[[3,2]]},"1701":{"position":[[14,2]]},"1774":{"position":[[3,2]]},"1825":{"position":[[7,2]]}}}],["模块",{"_index":82,"t":{"1211":{"position":[[8,2]]},"1533":{"position":[[8,2]]}}}],["模型",{"_index":64,"t":{"1138":{"position":[[7,2]]},"1416":{"position":[[7,2]]}}}],["模式",{"_index":73,"t":{"1146":{"position":[[4,2]]},"1248":{"position":[[8,2]]},"1250":{"position":[[7,2]]},"1278":{"position":[[18,2]]},"1424":{"position":[[4,2]]},"1597":{"position":[[8,2]]},"1599":{"position":[[7,2]]},"1653":{"position":[[18,2]]}}}],["死锁",{"_index":300,"t":{"1878":{"position":[[4,2]]}}}],["段",{"_index":229,"t":{"1710":{"position":[[10,1]]},"1874":{"position":[[4,1]]}}}],["池",{"_index":246,"t":{"1757":{"position":[[8,1]]}}}],["泄漏",{"_index":298,"t":{"1876":{"position":[[6,2]]}}}],["注册",{"_index":86,"t":{"1216":{"position":[[4,2]]},"1538":{"position":[[4,2]]}}}],["注意事项",{"_index":191,"t":{"1443":{"position":[[3,4]]},"1794":{"position":[[3,4]]}}}],["流式",{"_index":224,"t":{"1692":{"position":[[32,2]]}}}],["测试",{"_index":254,"t":{"1766":{"position":[[3,2]]}}}],["添加",{"_index":105,"t":{"1240":{"position":[[4,2]]},"1262":{"position":[[4,2]]},"1589":{"position":[[4,2]]},"1611":{"position":[[4,2]]},"1867":{"position":[[7,2]]}}}],["源码",{"_index":277,"t":{"1834":{"position":[[4,2]]}}}],["点",{"_index":288,"t":{"1858":{"position":[[6,1]]}}}],["版本",{"_index":139,"t":{"1291":{"position":[[12,2]]},"1565":{"position":[[12,2]]},"1792":{"position":[[9,2]]}}}],["特定",{"_index":266,"t":{"1792":{"position":[[7,2]]}}}],["特点",{"_index":20,"t":{"1063":{"position":[[4,2]]},"1358":{"position":[[13,2]]},"1387":{"position":[[4,2]]},"1678":{"position":[[0,2]]}}}],["状态",{"_index":78,"t":{"1208":{"position":[[3,2]]},"1211":{"position":[[4,2]]},"1216":{"position":[[15,2]]},"1218":{"position":[[12,2]]},"1220":{"position":[[9,2]]},"1271":{"position":[[15,2]]},"1530":{"position":[[3,2]]},"1533":{"position":[[4,2]]},"1538":{"position":[[15,2]]},"1540":{"position":[[12,2]]},"1542":{"position":[[9,2]]},"1646":{"position":[[15,2]]}}}],["环境",{"_index":260,"t":{"1779":{"position":[[15,2]]},"1781":{"position":[[14,2]]},"1783":{"position":[[18,2]]},"1788":{"position":[[7,2]]},"1809":{"position":[[6,2]]}}}],["环境变量",{"_index":156,"t":{"1326":{"position":[[6,4]]},"1667":{"position":[[6,4]]}}}],["理解",{"_index":130,"t":{"1272":{"position":[[5,2]]},"1647":{"position":[[5,2]]}}}],["生产",{"_index":269,"t":{"1809":{"position":[[4,2]]}}}],["生成",{"_index":164,"t":{"1342":{"position":[[4,2]]}}}],["用法",{"_index":15,"t":{"1005":{"position":[[0,2]]},"1012":{"position":[[0,2]]},"1019":{"position":[[0,2]]},"1028":{"position":[[0,2]]},"1035":{"position":[[0,2]]},"1042":{"position":[[0,2]]},"1049":{"position":[[0,2]]},"1056":{"position":[[0,2]]},"1085":{"position":[[10,2]]},"1090":{"position":[[11,2]]},"1313":{"position":[[18,2]]},"1319":{"position":[[5,2]]},"1341":{"position":[[5,2]]},"1362":{"position":[[22,2]]},"1660":{"position":[[5,2]]},"1673":{"position":[[7,2]]},"1778":{"position":[[5,2]]},"1897":{"position":[[11,2]]},"1914":{"position":[[8,2]]}}}],["监控",{"_index":186,"t":{"1437":{"position":[[7,2]]}}}],["目标",{"_index":42,"t":{"1101":{"position":[[3,2]]},"1116":{"position":[[3,2]]},"1151":{"position":[[3,2]]},"1163":{"position":[[3,2]]},"1171":{"position":[[3,2]]},"1181":{"position":[[3,2]]},"1193":{"position":[[3,2]]},"1206":{"position":[[3,2]]},"1446":{"position":[[3,2]]},"1458":{"position":[[3,2]]},"1473":{"position":[[3,2]]},"1481":{"position":[[3,2]]},"1491":{"position":[[3,2]]},"1503":{"position":[[3,2]]},"1515":{"position":[[3,2]]},"1528":{"position":[[3,2]]}}}],["相关",{"_index":180,"t":{"1430":{"position":[[10,2]]}}}],["硬",{"_index":58,"t":{"1134":{"position":[[10,1]]},"1412":{"position":[[10,1]]}}}],["确定",{"_index":169,"t":{"1348":{"position":[[4,2]]}}}],["示例",{"_index":14,"t":{"1000":{"position":[[0,2]]},"1007":{"position":[[0,2]]},"1014":{"position":[[0,2]]},"1023":{"position":[[0,2]]},"1030":{"position":[[0,2]]},"1037":{"position":[[0,2]]},"1044":{"position":[[0,2]]},"1051":{"position":[[0,2]]},"1058":{"position":[[0,2]]},"1070":{"position":[[6,2]]},"1086":{"position":[[6,2]]},"1091":{"position":[[6,2]]},"1144":{"position":[[6,2]]},"1242":{"position":[[9,2]]},"1262":{"position":[[15,2]]},"1264":{"position":[[8,2]]},"1274":{"position":[[19,2]]},"1288":{"position":[[12,2]]},"1360":{"position":[[6,2]]},"1376":{"position":[[0,2]]},"1380":{"position":[[0,2]]},"1394":{"position":[[6,2]]},"1422":{"position":[[6,2]]},"1436":{"position":[[7,2]]},"1562":{"position":[[12,2]]},"1591":{"position":[[9,2]]},"1611":{"position":[[15,2]]},"1613":{"position":[[8,2]]},"1649":{"position":[[19,2]]},"1767":{"position":[[8,2]]},"1771":{"position":[[5,2]]}}}],["程序",{"_index":280,"t":{"1839":{"position":[[10,2]]}}}],["空",{"_index":200,"t":{"1635":{"position":[[0,1]]},"1639":{"position":[[0,1]]}}}],["符号",{"_index":295,"t":{"1866":{"position":[[8,2]]}}}],["符合",{"_index":110,"t":{"1245":{"position":[[7,2]]},"1594":{"position":[[7,2]]}}}],["第三方",{"_index":218,"t":{"1683":{"position":[[3,3]]},"1759":{"position":[[6,3]]}}}],["简介",{"_index":98,"t":{"1233":{"position":[[7,2]]},"1311":{"position":[[12,2]]},"1582":{"position":[[7,2]]},"1656":{"position":[[3,2]]},"1721":{"position":[[3,2]]},"1799":{"position":[[15,2]]},"1888":{"position":[[3,2]]},"1893":{"position":[[3,2]]}}}],["简化",{"_index":206,"t":{"1641":{"position":[[7,2]]}}}],["简史",{"_index":1,"t":{"974":{"position":[[2,2]]}}}],["管理",{"_index":81,"t":{"1211":{"position":[[6,2]]},"1533":{"position":[[6,2]]},"1845":{"position":[[6,2]]},"1906":{"position":[[6,2]]},"1923":{"position":[[6,2]]}}}],["管理器",{"_index":276,"t":{"1832":{"position":[[7,3]]}}}],["管道",{"_index":161,"t":{"1332":{"position":[[6,2]]}}}],["类似",{"_index":76,"t":{"1158":{"position":[[9,2]]},"1498":{"position":[[9,2]]}}}],["类型",{"_index":202,"t":{"1635":{"position":[[19,2]]},"1637":{"position":[[0,2]]},"1703":{"position":[[8,2]]},"1705":{"position":[[9,2]]},"1745":{"position":[[6,2]]},"1751":{"position":[[5,2]]}}}],["系统",{"_index":118,"t":{"1254":{"position":[[9,2]]},"1603":{"position":[[9,2]]},"1786":{"position":[[5,2]]},"1881":{"position":[[10,2]]}}}],["组件",{"_index":21,"t":{"1065":{"position":[[6,2]]},"1389":{"position":[[6,2]]}}}],["组合",{"_index":38,"t":{"1093":{"position":[[4,2]]},"1258":{"position":[[4,2]]},"1296":{"position":[[4,2]]},"1570":{"position":[[4,2]]},"1607":{"position":[[4,2]]}}}],["经济",{"_index":9,"t":{"986":{"position":[[0,2]]}}}],["绑定",{"_index":211,"t":{"1667":{"position":[[4,2]]}}}],["结合",{"_index":173,"t":{"1362":{"position":[[11,2]]}}}],["结构",{"_index":197,"t":{"1625":{"position":[[0,2]]},"1639":{"position":[[1,2]]},"1709":{"position":[[7,2]]},"1710":{"position":[[6,2]]},"1712":{"position":[[6,2]]},"1731":{"position":[[3,2]]},"1743":{"position":[[4,2]]},"1752":{"position":[[6,2]]}}}],["结果",{"_index":27,"t":{"1074":{"position":[[6,2]]},"1110":{"position":[[6,2]]},"1124":{"position":[[6,2]]},"1160":{"position":[[6,2]]},"1168":{"position":[[6,2]]},"1178":{"position":[[6,2]]},"1190":{"position":[[6,2]]},"1202":{"position":[[6,2]]},"1224":{"position":[[6,2]]},"1398":{"position":[[6,2]]},"1454":{"position":[[6,2]]},"1467":{"position":[[6,2]]},"1478":{"position":[[6,2]]},"1488":{"position":[[6,2]]},"1500":{"position":[[6,2]]},"1512":{"position":[[6,2]]},"1524":{"position":[[6,2]]},"1546":{"position":[[6,2]]}}}],["结论",{"_index":41,"t":{"1097":{"position":[[3,2]]},"1334":{"position":[[3,2]]},"1735":{"position":[[3,2]]},"1910":{"position":[[3,2]]},"1927":{"position":[[3,2]]}}}],["继承",{"_index":141,"t":{"1296":{"position":[[8,2]]},"1570":{"position":[[8,2]]}}}],["缓冲",{"_index":245,"t":{"1757":{"position":[[6,2]]}}}],["编码",{"_index":59,"t":{"1134":{"position":[[11,2]]},"1412":{"position":[[11,2]]}}}],["编程",{"_index":69,"t":{"1142":{"position":[[8,2]]},"1420":{"position":[[8,2]]}}}],["编译",{"_index":265,"t":{"1790":{"position":[[8,2]]},"1834":{"position":[[6,2]]},"1867":{"position":[[4,2]]}}}],["网络日志",{"_index":126,"t":{"1262":{"position":[[6,4]]},"1611":{"position":[[6,4]]}}}],["耦合",{"_index":53,"t":{"1130":{"position":[[7,2]]},"1408":{"position":[[7,2]]}}}],["职责",{"_index":142,"t":{"1298":{"position":[[6,2]]},"1572":{"position":[[6,2]]}}}],["聚合",{"_index":70,"t":{"1144":{"position":[[3,2]]},"1422":{"position":[[3,2]]}}}],["自动",{"_index":89,"t":{"1216":{"position":[[11,2]]},"1538":{"position":[[11,2]]}}}],["自动化",{"_index":289,"t":{"1860":{"position":[[4,3]]}}}],["自定义",{"_index":216,"t":{"1674":{"position":[[4,3]]},"1729":{"position":[[3,3]]},"1745":{"position":[[3,3]]}}}],["获取",{"_index":152,"t":{"1315":{"position":[[4,2]]},"1317":{"position":[[5,2]]},"1705":{"position":[[4,2]]},"1710":{"position":[[4,2]]},"1898":{"position":[[4,2]]},"1915":{"position":[[4,2]]}}}],["行为",{"_index":131,"t":{"1272":{"position":[[16,2]]},"1647":{"position":[[16,2]]}}}],["覆盖",{"_index":37,"t":{"1088":{"position":[[7,2]]}}}],["观察点",{"_index":286,"t":{"1856":{"position":[[4,3]]}}}],["观测",{"_index":66,"t":{"1140":{"position":[[6,2]]},"1418":{"position":[[6,2]]}}}],["解决",{"_index":248,"t":{"1761":{"position":[[7,2]]}}}],["解析",{"_index":214,"t":{"1671":{"position":[[4,2]]},"1681":{"position":[[18,2]]},"1683":{"position":[[12,2]]},"1688":{"position":[[41,2]]},"1692":{"position":[[40,2]]},"1696":{"position":[[8,2]]},"1712":{"position":[[4,2]]}}}],["解析器",{"_index":217,"t":{"1674":{"position":[[7,3]]}}}],["警告",{"_index":192,"t":{"1618":{"position":[[7,2]]}}}],["设置",{"_index":155,"t":{"1326":{"position":[[4,2]]}}}],["设计",{"_index":19,"t":{"1062":{"position":[[8,2]]},"1146":{"position":[[23,2]]},"1208":{"position":[[7,2]]},"1209":{"position":[[8,2]]},"1256":{"position":[[6,2]]},"1294":{"position":[[6,2]]},"1386":{"position":[[8,2]]},"1424":{"position":[[23,2]]},"1530":{"position":[[7,2]]},"1531":{"position":[[8,2]]},"1568":{"position":[[6,2]]},"1605":{"position":[[6,2]]}}}],["语法",{"_index":205,"t":{"1641":{"position":[[5,2]]}}}],["语言",{"_index":100,"t":{"1237":{"position":[[5,2]]},"1247":{"position":[[5,2]]},"1288":{"position":[[5,2]]},"1293":{"position":[[5,2]]},"1562":{"position":[[5,2]]},"1567":{"position":[[5,2]]},"1586":{"position":[[5,2]]},"1596":{"position":[[5,2]]}}}],["读取",{"_index":185,"t":{"1434":{"position":[[7,2]]},"1684":{"position":[[37,2]]}}}],["调用",{"_index":231,"t":{"1714":{"position":[[5,2]]},"1881":{"position":[[12,2]]}}}],["调试",{"_index":13,"t":{"998":{"position":[[0,2]]},"1839":{"position":[[4,2]]},"1841":{"position":[[4,2]]},"1843":{"position":[[6,2]]},"1851":{"position":[[5,2]]},"1852":{"position":[[7,2]]},"1854":{"position":[[7,2]]},"1860":{"position":[[7,2]]},"1862":{"position":[[6,2]]},"1873":{"position":[[3,2]]},"1874":{"position":[[7,2]]}}}],["调试信息",{"_index":294,"t":{"1866":{"position":[[3,4]]},"1867":{"position":[[9,4]]},"1869":{"position":[[6,4]]},"1871":{"position":[[6,4]]}}}],["资源",{"_index":303,"t":{"1885":{"position":[[5,2]]}}}],["超时",{"_index":158,"t":{"1328":{"position":[[7,2]]}}}],["转换",{"_index":204,"t":{"1637":{"position":[[5,2]]}}}],["软件包",{"_index":264,"t":{"1790":{"position":[[5,3]]}}}],["输入",{"_index":154,"t":{"1324":{"position":[[6,2]]}}}],["输出",{"_index":122,"t":{"1258":{"position":[[14,2]]},"1262":{"position":[[10,2]]},"1607":{"position":[[14,2]]},"1611":{"position":[[10,2]]}}}],["过度",{"_index":148,"t":{"1303":{"position":[[2,2]]},"1577":{"position":[[2,2]]}}}],["运行",{"_index":26,"t":{"1072":{"position":[[8,2]]},"1074":{"position":[[4,2]]},"1108":{"position":[[8,2]]},"1110":{"position":[[4,2]]},"1124":{"position":[[4,2]]},"1160":{"position":[[4,2]]},"1168":{"position":[[4,2]]},"1178":{"position":[[4,2]]},"1190":{"position":[[4,2]]},"1202":{"position":[[4,2]]},"1224":{"position":[[4,2]]},"1328":{"position":[[4,2]]},"1396":{"position":[[8,2]]},"1398":{"position":[[4,2]]},"1454":{"position":[[4,2]]},"1465":{"position":[[8,2]]},"1467":{"position":[[4,2]]},"1478":{"position":[[4,2]]},"1488":{"position":[[4,2]]},"1500":{"position":[[4,2]]},"1512":{"position":[[4,2]]},"1524":{"position":[[4,2]]},"1546":{"position":[[4,2]]},"1792":{"position":[[5,2]]},"1841":{"position":[[6,2]]}}}],["进入",{"_index":259,"t":{"1779":{"position":[[5,2]]}}}],["进程",{"_index":281,"t":{"1841":{"position":[[10,2]]},"1852":{"position":[[5,2]]},"1898":{"position":[[6,2]]},"1902":{"position":[[4,2]]},"1915":{"position":[[6,2]]},"1919":{"position":[[4,2]]},"1933":{"position":[[4,2]]},"1936":{"position":[[2,2]]}}}],["进行",{"_index":174,"t":{"1370":{"position":[[14,2]]}}}],["远程",{"_index":290,"t":{"1862":{"position":[[4,2]]}}}],["违反",{"_index":108,"t":{"1242":{"position":[[3,2]]},"1243":{"position":[[4,2]]},"1286":{"position":[[0,2]]},"1289":{"position":[[4,2]]},"1560":{"position":[[0,2]]},"1563":{"position":[[4,2]]},"1591":{"position":[[3,2]]},"1592":{"position":[[4,2]]}}}],["连接",{"_index":149,"t":{"1308":{"position":[[7,2]]},"1332":{"position":[[8,2]]},"1811":{"position":[[6,2]]}}}],["适应性",{"_index":65,"t":{"1138":{"position":[[11,3]]},"1416":{"position":[[11,3]]}}}],["适用",{"_index":39,"t":{"1095":{"position":[[11,2]]},"1350":{"position":[[3,2]]},"1364":{"position":[[13,2]]}}}],["选项",{"_index":114,"t":{"1248":{"position":[[6,2]]},"1597":{"position":[[6,2]]}}}],["通用",{"_index":272,"t":{"1814":{"position":[[4,2]]}}}],["通知",{"_index":176,"t":{"1370":{"position":[[18,2]]}}}],["遵循",{"_index":137,"t":{"1291":{"position":[[4,2]]},"1565":{"position":[[4,2]]}}}],["配置",{"_index":55,"t":{"1134":{"position":[[5,2]]},"1412":{"position":[[5,2]]},"1804":{"position":[[6,2]]}}}],["重构",{"_index":109,"t":{"1242":{"position":[[12,2]]},"1245":{"position":[[4,2]]},"1591":{"position":[[12,2]]},"1594":{"position":[[4,2]]}}}],["重要",{"_index":96,"t":{"1230":{"position":[[2,2]]},"1552":{"position":[[2,2]]}}}],["错误",{"_index":150,"t":{"1308":{"position":[[9,2]]},"1874":{"position":[[5,2]]}}}],["错误判断",{"_index":160,"t":{"1330":{"position":[[6,4]]}}}],["错误处理",{"_index":195,"t":{"1621":{"position":[[0,4]]}}}],["问题",{"_index":251,"t":{"1762":{"position":[[8,2]]}}}],["问题解答",{"_index":273,"t":{"1818":{"position":[[5,4]]}}}],["防御性",{"_index":68,"t":{"1142":{"position":[[5,3]]},"1420":{"position":[[5,3]]}}}],["附录",{"_index":256,"t":{"1771":{"position":[[0,2]]}}}],["隔离",{"_index":263,"t":{"1788":{"position":[[5,2]]}}}],["集成",{"_index":84,"t":{"1213":{"position":[[5,2]]},"1214":{"position":[[14,2]]},"1535":{"position":[[5,2]]},"1536":{"position":[[14,2]]}}}],["需要",{"_index":133,"t":{"1283":{"position":[[6,2]]},"1348":{"position":[[10,2]]},"1557":{"position":[[6,2]]}}}],["非",{"_index":57,"t":{"1134":{"position":[[9,1]]},"1146":{"position":[[7,1]]},"1412":{"position":[[9,1]]},"1424":{"position":[[7,1]]}}}],["顶",{"_index":5,"t":{"978":{"position":[[2,1]]}}}],["验证",{"_index":236,"t":{"1727":{"position":[[8,2]]},"1729":{"position":[[6,2]]},"1731":{"position":[[8,2]]},"1766":{"position":[[5,2]]}}}],["高性能",{"_index":223,"t":{"1688":{"position":[[32,3]]}}}],["高效",{"_index":220,"t":{"1684":{"position":[[29,2]]}}}],["高级",{"_index":112,"t":{"1247":{"position":[[14,2]]},"1319":{"position":[[3,2]]},"1596":{"position":[[14,2]]},"1673":{"position":[[5,2]]},"1804":{"position":[[4,2]]},"1851":{"position":[[3,2]]}}}],["默认",{"_index":207,"t":{"1661":{"position":[[6,2]]},"1681":{"position":[[10,2]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":971,"t":"Archive","s":"","u":"/en/blog/archive","p":971},{"i":980,"t":"『人类简史』纵览文化、宗教、社会等多元领域，虽在专业深度上有不足，却为我理解『人类社会』提供了宝贵视角。","s":"人类简史","u":"/en/blog/人类简史","p":980},{"i":990,"t":"历史书如同一面哈哈镜，常常放大特定利益阶层的功绩，却忽视或淡化了平凡人的力量与贡献。","s":"南明史","u":"/en/blog/南明史","p":990},{"i":992,"t":"能说的上话很重要。","s":"一句顶一万句","u":"/en/blog/一句顶一万句","p":992},{"i":994,"t":"info/warning","s":"Makefile 常用方法","u":"/en/docs/note/build/makefile_function","p":994},{"i":1060,"t":"microkernel（微内核）架构的核心思想是 核心功能最小化，其他功能以插件或服务的形式运行在用户态，通过 进程间通信（IPC） 与内核交互。","s":"microkernel 设计1","u":"/en/docs/note/design/microkernel/microkernel1","p":1060},{"i":1080,"t":"1. 概述","s":"Makefile 中 : 和 :: 的使用指南","u":"/en/docs/note/build/makefile:","p":1080},{"i":1099,"t":"microkernel 设计1 目前只支持服务发送消息，内核接受消息。","s":"microkernel 设计2","u":"/en/docs/note/design/microkernel/microkernel2","p":1099},{"i":1115,"t":"1. 目标","s":"microkernel 设计3","u":"/en/docs/note/design/microkernel/microkernel3","p":1115},{"i":1126,"t":"在编程和系统设计中，Future-Proof 机制指的是通过合理的架构设计和技术选择，使代码或系统能够适应未来的需求变化、技术演进和规模扩展，而无需大规模重构或重写。其核心目标是降低长期维护成本，提高可扩展性。","s":"Future-Proof 机制","u":"/en/docs/note/design/future_proof","p":1126},{"i":1150,"t":"1. 目标","s":"microkernel 设计4","u":"/en/docs/note/design/microkernel/microkernel4","p":1150},{"i":1162,"t":"1. 目标","s":"microkernel 设计5","u":"/en/docs/note/design/microkernel/microkernel5","p":1162},{"i":1170,"t":"1. 目标","s":"microkernel 设计6","u":"/en/docs/note/design/microkernel/microkernel6","p":1170},{"i":1180,"t":"1. 目标","s":"microkernel 设计7","u":"/en/docs/note/design/microkernel/microkernel7","p":1180},{"i":1192,"t":"1. 目标","s":"microkernel 设计8","u":"/en/docs/note/design/microkernel/microkernel8","p":1192},{"i":1204,"t":"服务状态持久化","s":"microkernel 设计9","u":"/en/docs/note/design/microkernel/microkernel9","p":1204},{"i":1226,"t":"面向对象编程(OOP)有几个核心设计原则，这些原则有助于创建灵活、可维护和可扩展的软件系统。以下是主要的OOP设计原则：","s":"面向对象编程中的设计原则","u":"/en/docs/note/design/oop_pinciple/principle","p":1226},{"i":1232,"t":"1. 开闭原则简介","s":"开闭原则(OCP)","u":"/en/docs/note/design/oop_pinciple/ocp","p":1232},{"i":1268,"t":"1. channel 交互","s":"Golang 多goroutine交互模型","u":"/en/docs/note/design/multi_goroutine","p":1268},{"i":1280,"t":"1. 概述","s":"单一职责原则(SRP)","u":"/en/docs/note/design/oop_pinciple/srp","p":1280},{"i":1307,"t":"1. tls 连接错误","s":"git 错误","u":"/en/docs/note/git/git_err","p":1307},{"i":1310,"t":"1. os/exec 包简介","s":"Golang os/exec 用法","u":"/en/docs/note/golang/cmd","p":1310},{"i":1336,"t":"1. 概述","s":"Golang bcrypt","u":"/en/docs/note/golang/bcrypt","p":1336},{"i":1354,"t":"在 Golang 中，多协程 goroutine之间的交互主要通过以下几种方式实现：","s":"Golang 并发编程","u":"/en/docs/note/golang/concurrency","p":1354},{"i":1384,"t":"microkernel（微内核）架构的核心思想是 核心功能最小化，其他功能以插件或服务的形式运行在用户态，通过 进程间通信（IPC） 与内核交互。","s":"microkernel 设计1","u":"/en/docs/note/golang/design/microkernel/microkernel1","p":1384},{"i":1404,"t":"在编程和系统设计中，Future-Proof 机制指的是通过合理的架构设计和技术选择，使代码或系统能够适应未来的需求变化、技术演进和规模扩展，而无需大规模重构或重写。其核心目标是降低长期维护成本，提高可扩展性。","s":"Future-Proof 机制","u":"/en/docs/note/golang/design/future_proof","p":1404},{"i":1428,"t":"runtime/debug 是 Go 标准库中用于调试和运行时信息收集的重要包，提供了多种实用功能。下面我将详细介绍其主要功能和用法：","s":"Golang runtime/debug 用法","u":"/en/docs/note/golang/debug","p":1428},{"i":1445,"t":"1. 目标","s":"microkernel 设计3","u":"/en/docs/note/golang/design/microkernel/microkernel3","p":1445},{"i":1456,"t":"microkernel 设计1 目前只支持服务发送消息，内核接受消息。","s":"microkernel 设计2","u":"/en/docs/note/golang/design/microkernel/microkernel2","p":1456},{"i":1472,"t":"1. 目标","s":"microkernel 设计5","u":"/en/docs/note/golang/design/microkernel/microkernel5","p":1472},{"i":1480,"t":"1. 目标","s":"microkernel 设计6","u":"/en/docs/note/golang/design/microkernel/microkernel6","p":1480},{"i":1490,"t":"1. 目标","s":"microkernel 设计4","u":"/en/docs/note/golang/design/microkernel/microkernel4","p":1490},{"i":1502,"t":"1. 目标","s":"microkernel 设计7","u":"/en/docs/note/golang/design/microkernel/microkernel7","p":1502},{"i":1514,"t":"1. 目标","s":"microkernel 设计8","u":"/en/docs/note/golang/design/microkernel/microkernel8","p":1514},{"i":1526,"t":"服务状态持久化","s":"microkernel 设计9","u":"/en/docs/note/golang/design/microkernel/microkernel9","p":1526},{"i":1548,"t":"面向对象编程(OOP)有几个核心设计原则，这些原则有助于创建灵活、可维护和可扩展的软件系统。以下是主要的OOP设计原则：","s":"面向对象编程中的设计原则","u":"/en/docs/note/golang/design/oop_pinciple/principle","p":1548},{"i":1554,"t":"1. 概述","s":"单一职责原则(SRP)","u":"/en/docs/note/golang/design/oop_pinciple/srp","p":1554},{"i":1581,"t":"1. 开闭原则简介","s":"开闭原则(OCP)","u":"/en/docs/note/golang/design/oop_pinciple/ocp","p":1581},{"i":1617,"t":"1. ide 警告找不到方法","s":"goland 问题处理记录","u":"/en/docs/note/golang/goland","p":1617},{"i":1620,"t":"------","s":"Golang 随笔","u":"/en/docs/note/golang/jotting","p":1620},{"i":1643,"t":"1. channel 交互","s":"Golang 多goroutine交互模型","u":"/en/docs/note/golang/design/multi_goroutine","p":1643},{"i":1655,"t":"1. 简介","s":"kingpin 用法","u":"/en/docs/note/golang/kingpin","p":1655},{"i":1680,"t":"1. Golang 默认 JSON 解析 (encoding/json)","s":"Golang JSON 解析","u":"/en/docs/note/golang/json","p":1680},{"i":1700,"t":"1. 反射（Reflect）概述","s":"Golang Reflect","u":"/en/docs/note/golang/reflect","p":1700},{"i":1720,"t":"1. 简介","s":"Golang Validator","u":"/en/docs/note/golang/validator","p":1720},{"i":1737,"t":"1. 引言","s":"Golang 序列化/反序列化","u":"/en/docs/note/golang/serialization","p":1737},{"i":1773,"t":"1. 概述","s":"chroot 用法","u":"/en/docs/note/os/chroot","p":1773},{"i":1798,"t":"1. Unix Socket 简介","s":"Golang Unix Socket 服务","u":"/en/docs/note/golang/web_server_unix","p":1798},{"i":1824,"t":"1. GDB 概述","s":"GDB 调试工具","u":"/en/docs/note/os/debug/gdb","p":1824},{"i":1887,"t":"1. 简介","s":"Golang sys/unix syscall","u":"/en/docs/note/golang/syscall","p":1887},{"i":1931,"t":"孤儿进程： 父亲先死，儿子被1号收养。","s":"僵尸进程","u":"/en/docs/note/os/zombie","p":1931}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/971",[0,0.206]],["t/980",[1,3.391,2,2.166,3,2.166,4,2.166,5,2.166,6,3.391,7,2.166,8,2.166,9,2.166,10,2.166,11,2.166,12,2.166,13,2.166,14,1.854,15,2.166,16,2.166]],["t/990",[17,2.332,18,2.332,19,2.332,20,2.332,21,2.332,22,2.332,23,2.332,24,2.332,25,2.332,26,2.332,27,2.332,28,2.332,29,2.332,30,2.332,31,2.332,32,2.332]],["t/992",[33,4.306,34,4.306,35,4.306,36,3.686]],["t/994",[0,0.23]],["t/1060",[0,0.118,37,1.676,38,1.676,39,1.676,40,1.148,41,2.382,42,1.676,43,1.676,44,1.676,45,1.148,46,1.676,47,1.49,48,1.676,49,1.676,50,1.24,51,1.49,52,1.676,53,1.351,54,1.24]],["t/1080",[0,0.189,55,2.738]],["t/1099",[0,0.159,45,1.69,53,1.989,56,1.69,57,2.467,58,2.467,59,2.467,60,3.603,61,2.467]],["t/1115",[0,0.189,62,1.806]],["t/1126",[0,0.085,40,0.775,50,0.837,56,0.775,62,0.476,63,1.131,64,1.935,65,0.912,66,1.131,67,1.131,68,1.131,69,1.131,70,1.935,71,1.131,72,1.131,73,1.131,74,1.131,75,1.131,76,1.131,77,1.131,78,1.131,79,1.131,80,0.912,81,1.131,82,1.131,83,1.131,84,1.131,85,1.131,86,1.131,87,0.912,88,1.131,89,1.131,90,1.131]],["t/1150",[0,0.189,62,1.806]],["t/1162",[0,0.189,62,1.806]],["t/1170",[0,0.189,62,1.806]],["t/1180",[0,0.189,62,1.806]],["t/1192",[0,0.189,62,1.806]],["t/1204",[45,2.526,91,3.686,92,3.686,93,3.686]],["t/1226",[0,0.124,40,1.227,56,1.935,80,1.444,87,1.444,94,1.79,95,1.79,96,2.819,97,1.79,98,1.79,99,1.79,100,1.79,101,1.79,102,1.592,103,1.444]],["t/1232",[0,0.162,96,2.972,104,3.686,105,2.352]],["t/1268",[0,0.219,54,2.936]],["t/1280",[0,0.189,55,2.738]],["t/1307",[0,0.209,106,4.306,107,4.306]],["t/1310",[0,0.224,105,2.197,108,3.443]],["t/1336",[0,0.189,55,2.738]],["t/1354",[0,0.144,50,1.599,54,1.599,65,1.742,102,1.921,103,1.742,109,2.525,110,2.525,111,2.525,112,2.525,113,2.525,114,2.525,115,2.525]],["t/1384",[0,0.118,37,1.676,38,1.676,39,1.676,40,1.148,41,2.382,42,1.676,43,1.676,44,1.676,45,1.148,46,1.676,47,1.49,48,1.676,49,1.676,50,1.24,51,1.49,52,1.676,53,1.351,54,1.24]],["t/1404",[0,0.085,40,0.775,50,0.837,56,0.775,62,0.476,63,1.131,64,1.935,65,0.912,66,1.131,67,1.131,68,1.131,69,1.131,70,1.935,71,1.131,72,1.131,73,1.131,74,1.131,75,1.131,76,1.131,77,1.131,78,1.131,79,1.131,80,0.912,81,1.131,82,1.131,83,1.131,84,1.131,85,1.131,86,1.131,87,0.912,88,1.131,89,1.131,90,1.131]],["t/1428",[0,0.138,14,1.528,36,1.528,41,1.359,47,1.359,65,1.232,103,1.232,108,1.528,116,1.786,117,1.786,118,1.786,119,1.786,120,1.786,121,1.786,122,1.786,123,1.786,124,1.786,125,1.786,126,1.786,127,1.786,128,1.786,129,1.786]],["t/1445",[0,0.189,62,1.806]],["t/1456",[0,0.159,45,1.69,53,1.989,56,1.69,57,2.467,58,2.467,59,2.467,60,3.603,61,2.467]],["t/1472",[0,0.189,62,1.806]],["t/1480",[0,0.189,62,1.806]],["t/1490",[0,0.189,62,1.806]],["t/1502",[0,0.189,62,1.806]],["t/1514",[0,0.189,62,1.806]],["t/1526",[45,2.526,91,3.686,92,3.686,93,3.686]],["t/1548",[0,0.124,40,1.227,56,1.935,80,1.444,87,1.444,94,1.79,95,1.79,96,2.819,97,1.79,98,1.79,99,1.79,100,1.79,101,1.79,102,1.592,103,1.444]],["t/1554",[0,0.189,55,2.738]],["t/1581",[0,0.162,96,2.972,104,3.686,105,2.352]],["t/1617",[0,0.192,130,3.774,131,3.774,132,3.774,133,3.774]],["t/1620",[]],["t/1643",[0,0.219,54,2.936]],["t/1655",[0,0.189,105,2.738]],["t/1680",[0,0.237,134,3.554,135,3.554]],["t/1700",[0,0.209,55,2.352,136,4.306]],["t/1720",[0,0.189,105,2.738]],["t/1737",[0,0.189,137,5.014]],["t/1773",[0,0.189,55,2.738]],["t/1798",[0,0.231,105,2.352]],["t/1824",[0,0.219,55,2.53]],["t/1887",[0,0.189,105,2.738]],["t/1931",[0,0.12,51,2.422,138,3.183,139,3.183,140,3.183,141,3.183,142,3.183,143,3.183,144,3.183]]],"invertedIndex":[["",{"_index":0,"t":{"971":{"position":[[0,7]]},"994":{"position":[[0,4],[5,7]]},"1060":{"position":[[0,11],[62,3]]},"1080":{"position":[[0,1]]},"1099":{"position":[[0,11],[14,1]]},"1115":{"position":[[0,1]]},"1126":{"position":[[10,6],[17,5]]},"1150":{"position":[[0,1]]},"1162":{"position":[[0,1]]},"1170":{"position":[[0,1]]},"1180":{"position":[[0,1]]},"1192":{"position":[[0,1]]},"1226":{"position":[[7,3],[52,3]]},"1232":{"position":[[0,1]]},"1268":{"position":[[0,1],[3,7]]},"1280":{"position":[[0,1]]},"1307":{"position":[[0,1],[3,3]]},"1310":{"position":[[0,1],[3,2],[6,4]]},"1336":{"position":[[0,1]]},"1354":{"position":[[2,6],[15,9]]},"1384":{"position":[[0,11],[62,3]]},"1404":{"position":[[10,6],[17,5]]},"1428":{"position":[[0,7],[8,5],[16,2]]},"1445":{"position":[[0,1]]},"1456":{"position":[[0,11],[14,1]]},"1472":{"position":[[0,1]]},"1480":{"position":[[0,1]]},"1490":{"position":[[0,1]]},"1502":{"position":[[0,1]]},"1514":{"position":[[0,1]]},"1548":{"position":[[7,3],[52,3]]},"1554":{"position":[[0,1]]},"1581":{"position":[[0,1]]},"1617":{"position":[[0,1],[3,3]]},"1643":{"position":[[0,1],[3,7]]},"1655":{"position":[[0,1]]},"1680":{"position":[[0,1],[3,6],[13,4],[22,8],[31,4]]},"1700":{"position":[[0,1],[6,7]]},"1720":{"position":[[0,1]]},"1737":{"position":[[0,1]]},"1773":{"position":[[0,1]]},"1798":{"position":[[0,1],[3,4],[8,6]]},"1824":{"position":[[0,1],[3,3]]},"1887":{"position":[[0,1]]},"1931":{"position":[[14,1]]}}}],["一面",{"_index":20,"t":{"990":{"position":[[5,2]]}}}],["下面",{"_index":125,"t":{"1428":{"position":[[50,2]]}}}],["不到",{"_index":132,"t":{"1617":{"position":[[10,2]]}}}],["不足",{"_index":12,"t":{"980":{"position":[[30,2]]}}}],["专业",{"_index":10,"t":{"980":{"position":[[24,2]]}}}],["中",{"_index":65,"t":{"1126":{"position":[[8,1]]},"1354":{"position":[[9,1]]},"1404":{"position":[[8,1]]},"1428":{"position":[[22,1]]}}}],["主要",{"_index":103,"t":{"1226":{"position":[[49,2]]},"1354":{"position":[[29,2]]},"1428":{"position":[[59,2]]},"1548":{"position":[[49,2]]}}}],["之间",{"_index":112,"t":{"1354":{"position":[[24,2]]}}}],["书",{"_index":18,"t":{"990":{"position":[[2,1]]}}}],["交互",{"_index":54,"t":{"1060":{"position":[[70,2]]},"1268":{"position":[[11,2]]},"1354":{"position":[[27,2]]},"1384":{"position":[[70,2]]},"1643":{"position":[[11,2]]}}}],["人类",{"_index":1,"t":{"980":{"position":[[1,2],[39,2]]}}}],["介绍",{"_index":128,"t":{"1428":{"position":[[56,2]]}}}],["代码",{"_index":72,"t":{"1126":{"position":[[44,2]]},"1404":{"position":[[44,2]]}}}],["以下",{"_index":102,"t":{"1226":{"position":[[46,2]]},"1354":{"position":[[33,2]]},"1548":{"position":[[46,2]]}}}],["信息",{"_index":121,"t":{"1428":{"position":[[31,2]]}}}],["儿子",{"_index":142,"t":{"1931":{"position":[[11,2]]}}}],["先",{"_index":140,"t":{"1931":{"position":[[8,1]]}}}],["其他",{"_index":43,"t":{"1060":{"position":[[33,2]]},"1384":{"position":[[33,2]]}}}],["内核",{"_index":53,"t":{"1060":{"position":[[68,2]]},"1099":{"position":[[28,2]]},"1384":{"position":[[68,2]]},"1456":{"position":[[28,2]]}}}],["几个",{"_index":95,"t":{"1226":{"position":[[12,2]]},"1548":{"position":[[12,2]]}}}],["几种",{"_index":113,"t":{"1354":{"position":[[35,2]]}}}],["创建",{"_index":99,"t":{"1226":{"position":[[28,2]]},"1548":{"position":[[28,2]]}}}],["利益",{"_index":25,"t":{"990":{"position":[[17,2]]}}}],["力量",{"_index":31,"t":{"990":{"position":[[36,2]]}}}],["功绩",{"_index":27,"t":{"990":{"position":[[22,2]]}}}],["功能",{"_index":41,"t":{"1060":{"position":[[27,2],[35,2]]},"1384":{"position":[[27,2],[35,2]]},"1428":{"position":[[61,2]]}}}],["包",{"_index":108,"t":{"1310":{"position":[[11,1]]},"1428":{"position":[[38,1]]}}}],["化",{"_index":93,"t":{"1204":{"position":[[6,1]]},"1526":{"position":[[6,1]]}}}],["协",{"_index":110,"t":{"1354":{"position":[[12,1]]}}}],["历史",{"_index":17,"t":{"990":{"position":[[0,2]]}}}],["原则",{"_index":96,"t":{"1226":{"position":[[18,2],[23,2],[57,2]]},"1232":{"position":[[5,2]]},"1548":{"position":[[18,2],[23,2],[57,2]]},"1581":{"position":[[5,2]]}}}],["反射",{"_index":136,"t":{"1700":{"position":[[3,2]]}}}],["发送",{"_index":59,"t":{"1099":{"position":[[23,2]]},"1456":{"position":[[23,2]]}}}],["变化",{"_index":77,"t":{"1126":{"position":[[58,2]]},"1404":{"position":[[58,2]]}}}],["可扩展性",{"_index":90,"t":{"1126":{"position":[[100,4]]},"1404":{"position":[[100,4]]}}}],["号",{"_index":143,"t":{"1931":{"position":[[15,1]]}}}],["合理",{"_index":68,"t":{"1126":{"position":[[30,2]]},"1404":{"position":[[30,2]]}}}],["哈哈镜",{"_index":21,"t":{"990":{"position":[[7,3]]}}}],["多",{"_index":109,"t":{"1354":{"position":[[11,1]]}}}],["多元",{"_index":8,"t":{"980":{"position":[[17,2]]}}}],["多种",{"_index":123,"t":{"1428":{"position":[[43,2]]}}}],["大规模",{"_index":82,"t":{"1126":{"position":[[74,3]]},"1404":{"position":[[74,3]]}}}],["如同",{"_index":19,"t":{"990":{"position":[[3,2]]}}}],["孤儿",{"_index":138,"t":{"1931":{"position":[[0,2]]}}}],["宗教",{"_index":5,"t":{"980":{"position":[[11,2]]}}}],["宝贵",{"_index":15,"t":{"980":{"position":[[47,2]]}}}],["实现",{"_index":115,"t":{"1354":{"position":[[39,2]]}}}],["实用功能",{"_index":124,"t":{"1428":{"position":[[45,4]]}}}],["将",{"_index":126,"t":{"1428":{"position":[[53,1]]}}}],["常常",{"_index":22,"t":{"990":{"position":[[11,2]]}}}],["平凡人",{"_index":30,"t":{"990":{"position":[[32,3]]}}}],["库",{"_index":117,"t":{"1428":{"position":[[21,1]]}}}],["开闭",{"_index":104,"t":{"1232":{"position":[[3,2]]},"1581":{"position":[[3,2]]}}}],["引言",{"_index":137,"t":{"1737":{"position":[[3,2]]}}}],["形式",{"_index":46,"t":{"1060":{"position":[[44,2]]},"1384":{"position":[[44,2]]}}}],["微内核",{"_index":37,"t":{"1060":{"position":[[12,3]]},"1384":{"position":[[12,3]]}}}],["忽视",{"_index":28,"t":{"990":{"position":[[26,2]]}}}],["态",{"_index":49,"t":{"1060":{"position":[[51,1]]},"1384":{"position":[[51,1]]}}}],["成本",{"_index":88,"t":{"1126":{"position":[[95,2]]},"1404":{"position":[[95,2]]}}}],["扩展",{"_index":80,"t":{"1126":{"position":[[68,2]]},"1226":{"position":[[38,2]]},"1404":{"position":[[68,2]]},"1548":{"position":[[38,2]]}}}],["找",{"_index":131,"t":{"1617":{"position":[[9,1]]}}}],["技术",{"_index":70,"t":{"1126":{"position":[[38,2],[61,2]]},"1404":{"position":[[38,2],[61,2]]}}}],["持久",{"_index":92,"t":{"1204":{"position":[[4,2]]},"1526":{"position":[[4,2]]}}}],["指",{"_index":67,"t":{"1126":{"position":[[25,1]]},"1404":{"position":[[25,1]]}}}],["接受",{"_index":61,"t":{"1099":{"position":[[30,2]]},"1456":{"position":[[30,2]]}}}],["提供",{"_index":14,"t":{"980":{"position":[[44,2]]},"1428":{"position":[[40,2]]}}}],["提高",{"_index":89,"t":{"1126":{"position":[[98,2]]},"1404":{"position":[[98,2]]}}}],["插件",{"_index":44,"t":{"1060":{"position":[[38,2]]},"1384":{"position":[[38,2]]}}}],["支持",{"_index":58,"t":{"1099":{"position":[[19,2]]},"1456":{"position":[[19,2]]}}}],["收养",{"_index":144,"t":{"1931":{"position":[[16,2]]}}}],["收集",{"_index":122,"t":{"1428":{"position":[[33,2]]}}}],["放大",{"_index":23,"t":{"990":{"position":[[13,2]]}}}],["文化",{"_index":4,"t":{"980":{"position":[[8,2]]}}}],["方式",{"_index":114,"t":{"1354":{"position":[[37,2]]}}}],["方法",{"_index":133,"t":{"1617":{"position":[[12,2]]}}}],["无需",{"_index":81,"t":{"1126":{"position":[[72,2]]},"1404":{"position":[[72,2]]}}}],["时",{"_index":120,"t":{"1428":{"position":[[30,1]]}}}],["最小化",{"_index":42,"t":{"1060":{"position":[[29,3]]},"1384":{"position":[[29,3]]}}}],["有助于",{"_index":98,"t":{"1226":{"position":[[25,3]]},"1548":{"position":[[25,3]]}}}],["服务",{"_index":45,"t":{"1060":{"position":[[41,2]]},"1099":{"position":[[21,2]]},"1204":{"position":[[0,2]]},"1384":{"position":[[41,2]]},"1456":{"position":[[21,2]]},"1526":{"position":[[0,2]]}}}],["未来",{"_index":75,"t":{"1126":{"position":[[53,2]]},"1404":{"position":[[53,2]]}}}],["机制",{"_index":66,"t":{"1126":{"position":[[23,2]]},"1404":{"position":[[23,2]]}}}],["架构",{"_index":38,"t":{"1060":{"position":[[16,2]]},"1384":{"position":[[16,2]]}}}],["架构设计",{"_index":69,"t":{"1126":{"position":[[33,4]]},"1404":{"position":[[33,4]]}}}],["标准",{"_index":116,"t":{"1428":{"position":[[19,2]]}}}],["核心",{"_index":40,"t":{"1060":{"position":[[25,2]]},"1126":{"position":[[84,2]]},"1226":{"position":[[14,2]]},"1384":{"position":[[25,2]]},"1404":{"position":[[84,2]]},"1548":{"position":[[14,2]]}}}],["核心思想",{"_index":39,"t":{"1060":{"position":[[19,4]]},"1384":{"position":[[19,4]]}}}],["概述",{"_index":55,"t":{"1080":{"position":[[3,2]]},"1280":{"position":[[3,2]]},"1336":{"position":[[3,2]]},"1554":{"position":[[3,2]]},"1700":{"position":[[14,2]]},"1773":{"position":[[3,2]]},"1824":{"position":[[7,2]]}}}],["死",{"_index":141,"t":{"1931":{"position":[[9,1]]}}}],["消息",{"_index":60,"t":{"1099":{"position":[[25,2],[32,2]]},"1456":{"position":[[25,2],[32,2]]}}}],["淡化",{"_index":29,"t":{"990":{"position":[[29,2]]}}}],["深度",{"_index":11,"t":{"980":{"position":[[26,2]]}}}],["演进",{"_index":78,"t":{"1126":{"position":[[63,2]]},"1404":{"position":[[63,2]]}}}],["灵活",{"_index":100,"t":{"1226":{"position":[[30,2]]},"1548":{"position":[[30,2]]}}}],["父亲",{"_index":139,"t":{"1931":{"position":[[6,2]]}}}],["特定",{"_index":24,"t":{"990":{"position":[[15,2]]}}}],["状态",{"_index":91,"t":{"1204":{"position":[[2,2]]},"1526":{"position":[[2,2]]}}}],["理解",{"_index":13,"t":{"980":{"position":[[36,2]]}}}],["用于",{"_index":118,"t":{"1428":{"position":[[23,2]]}}}],["用户",{"_index":48,"t":{"1060":{"position":[[49,2]]},"1384":{"position":[[49,2]]}}}],["用法",{"_index":129,"t":{"1428":{"position":[[64,2]]}}}],["目前",{"_index":57,"t":{"1099":{"position":[[16,2]]},"1456":{"position":[[16,2]]}}}],["目标",{"_index":62,"t":{"1115":{"position":[[3,2]]},"1126":{"position":[[86,2]]},"1150":{"position":[[3,2]]},"1162":{"position":[[3,2]]},"1170":{"position":[[3,2]]},"1180":{"position":[[3,2]]},"1192":{"position":[[3,2]]},"1404":{"position":[[86,2]]},"1445":{"position":[[3,2]]},"1472":{"position":[[3,2]]},"1480":{"position":[[3,2]]},"1490":{"position":[[3,2]]},"1502":{"position":[[3,2]]},"1514":{"position":[[3,2]]}}}],["社会",{"_index":6,"t":{"980":{"position":[[14,2],[41,2]]}}}],["程",{"_index":111,"t":{"1354":{"position":[[13,1]]}}}],["等",{"_index":7,"t":{"980":{"position":[[16,1]]}}}],["简介",{"_index":105,"t":{"1232":{"position":[[7,2]]},"1310":{"position":[[12,2]]},"1581":{"position":[[7,2]]},"1655":{"position":[[3,2]]},"1720":{"position":[[3,2]]},"1798":{"position":[[15,2]]},"1887":{"position":[[3,2]]}}}],["简史",{"_index":2,"t":{"980":{"position":[[3,2]]}}}],["系统",{"_index":64,"t":{"1126":{"position":[[4,2],[47,2]]},"1404":{"position":[[4,2],[47,2]]}}}],["纵览",{"_index":3,"t":{"980":{"position":[[6,2]]}}}],["维护",{"_index":87,"t":{"1126":{"position":[[93,2]]},"1226":{"position":[[34,2]]},"1404":{"position":[[93,2]]},"1548":{"position":[[34,2]]}}}],["编程",{"_index":63,"t":{"1126":{"position":[[1,2]]},"1404":{"position":[[1,2]]}}}],["能",{"_index":33,"t":{"992":{"position":[[0,1]]}}}],["能够",{"_index":73,"t":{"1126":{"position":[[49,2]]},"1404":{"position":[[49,2]]}}}],["规模",{"_index":79,"t":{"1126":{"position":[[66,2]]},"1404":{"position":[[66,2]]}}}],["视角",{"_index":16,"t":{"980":{"position":[[49,2]]}}}],["解析",{"_index":135,"t":{"1680":{"position":[[18,2]]}}}],["警告",{"_index":130,"t":{"1617":{"position":[[7,2]]}}}],["设计",{"_index":56,"t":{"1099":{"position":[[12,2]]},"1126":{"position":[[6,2]]},"1226":{"position":[[16,2],[55,2]]},"1404":{"position":[[6,2]]},"1456":{"position":[[12,2]]},"1548":{"position":[[16,2],[55,2]]}}}],["话",{"_index":35,"t":{"992":{"position":[[4,1]]}}}],["详细",{"_index":127,"t":{"1428":{"position":[[54,2]]}}}],["说",{"_index":34,"t":{"992":{"position":[[1,1]]}}}],["调试",{"_index":119,"t":{"1428":{"position":[[25,2]]}}}],["贡献",{"_index":32,"t":{"990":{"position":[[39,2]]}}}],["软件系统",{"_index":101,"t":{"1226":{"position":[[41,4]]},"1548":{"position":[[41,4]]}}}],["运行",{"_index":47,"t":{"1060":{"position":[[46,2]]},"1384":{"position":[[46,2]]},"1428":{"position":[[28,2]]}}}],["这些",{"_index":97,"t":{"1226":{"position":[[21,2]]},"1548":{"position":[[21,2]]}}}],["进程",{"_index":51,"t":{"1060":{"position":[[56,2]]},"1384":{"position":[[56,2]]},"1931":{"position":[[2,2]]}}}],["连接",{"_index":106,"t":{"1307":{"position":[[7,2]]}}}],["适应",{"_index":74,"t":{"1126":{"position":[[51,2]]},"1404":{"position":[[51,2]]}}}],["选择",{"_index":71,"t":{"1126":{"position":[[40,2]]},"1404":{"position":[[40,2]]}}}],["通过",{"_index":50,"t":{"1060":{"position":[[53,2]]},"1126":{"position":[[28,2]]},"1354":{"position":[[31,2]]},"1384":{"position":[[53,2]]},"1404":{"position":[[28,2]]}}}],["重写",{"_index":84,"t":{"1126":{"position":[[80,2]]},"1404":{"position":[[80,2]]}}}],["重构",{"_index":83,"t":{"1126":{"position":[[77,2]]},"1404":{"position":[[77,2]]}}}],["重要",{"_index":36,"t":{"992":{"position":[[6,2]]},"1428":{"position":[[36,2]]}}}],["错误",{"_index":107,"t":{"1307":{"position":[[9,2]]}}}],["长期",{"_index":86,"t":{"1126":{"position":[[91,2]]},"1404":{"position":[[91,2]]}}}],["间通信",{"_index":52,"t":{"1060":{"position":[[58,3]]},"1384":{"position":[[58,3]]}}}],["阶层",{"_index":26,"t":{"990":{"position":[[19,2]]}}}],["降低",{"_index":85,"t":{"1126":{"position":[[89,2]]},"1404":{"position":[[89,2]]}}}],["需求",{"_index":76,"t":{"1126":{"position":[[56,2]]},"1404":{"position":[[56,2]]}}}],["面向对象编程",{"_index":94,"t":{"1226":{"position":[[0,6]]},"1548":{"position":[[0,6]]}}}],["领域",{"_index":9,"t":{"980":{"position":[[19,2]]}}}],["默认",{"_index":134,"t":{"1680":{"position":[[10,2]]}}}]],"pipeline":["stemmer"]}},{"documents":[],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]}},{"documents":[{"i":975,"t":"April 25, 2025 · 6 min read weidongkl I can see your smile.","s":"人类简史","u":"/en/blog/authors/weidongkl","h":"","p":973},{"i":977,"t":"February 22, 2025 · 2 min read weidongkl I can see your smile.","s":"南明史","u":"/en/blog/authors/weidongkl","h":"","p":973},{"i":979,"t":"February 16, 2025 · One min read weidongkl I can see your smile.","s":"一句顶一万句","u":"/en/blog/authors/weidongkl","h":"","p":973},{"i":981,"t":"『人类简史』纵览文化、宗教、社会等多元领域，虽在专业深度上有不足，却为我理解『人类社会』提供了宝贵视角。","s":"人类简史","u":"/en/blog/人类简史","h":"","p":980},{"i":983,"t":"大航海时代的开启，使西班牙和葡萄牙率先步入强盛时期。然而，好景不长，荷兰后来居上。其中，一个关键因素在于其司法独立。荷兰重视并保护个人权利，尤其是私人财产，而独裁政权往往缺乏这种保障。这导致资本和财富自然流向更能提供安全与稳定的地区，从而推动了荷兰的崛起。 自由与平等是最基本的价值观，但两者之间存在内在矛盾。为了实现平等，必须对部分人的自由加以限制；而如果人人都享有绝对的自由，社会必然会走向不平等。因此，现实中的制度往往在两者之间寻求平衡，而非极端地追求其一。","s":"司法","u":"/en/blog/人类简史","h":"#司法","p":980},{"i":985,"t":"小国寡民的文化并非某些人刻意设计的剥削工具，而是历史巧合的产物，是在人类心理中寄生并繁衍的观念体系。成功的文化，如同人类与小麦一样，擅长自我复制与传播。然而，文化的成功并不意味着对人类有益——繁荣的文化未必是善良的文化，成功不等于优越。","s":"文化","u":"/en/blog/人类简史","h":"#文化","p":980},{"i":987,"t":"对大多数人而言，经济发展确实改善了生活，使他们比先辈更幸福。然而，这并非绝对。即便集体经济的蛋糕再大，若分配不公，仍会有人陷入困境。原始智人的迁徙与采集生活或许并不艰难，但农业革命后，人类开始聚居，随之而来的统治与压迫逐渐显现。工业革命提升了整体生活水平，却也加剧了财富的不均衡。 经济泡沫指的是虚拟资本（如股票、房地产）价格远超其实际价值，严重脱离实体经济的现象。它源于人性的贪婪和资本主义市场机制，同时也建立在人们对未来持续向好的信念之上。过去两百年间，武装掠夺与工业发展让投资者产生了一种盲目自信，坚信经济会不断繁荣。然而，工业技术的进步并非线性，而是类似于台阶式发展——经历一段稳定期后才会再次跃升。当经济进入稳定期，而预期中的高速增长未能兑现，泡沫便随之产生，仿佛是在透支未来。或许，只有日新月异的科技进步，才能缓解这一困局。 近代科技的飞速发展与资本主义密不可分。资本逐利，而技术领先往往意味着更高的回报。在这种相互促进的关系下，资本推动科技进步，科技反过来助力资本增长，两者共同塑造了现代社会的高速发展。 让普通人过上健康富足的生活，应当是圣人追求的至善之一。从这个角度来看，资本主义似乎扮演了“圣人”的角色，甚至被奉为唯一的“真理”。在这样的逻辑下，财富不仅意味着物质充裕，甚至成为道德的象征。 现代财富的根基在于人们希望增加个人财富的本能驱动。正是这种自私的动力推动了市场竞争与创新，而贪婪在一定程度上成为经济增长的重要催化剂。","s":"经济","u":"/en/blog/人类简史","h":"#经济","p":980},{"i":989,"t":"家庭关系颇为复杂。在古代，婚姻大多由父母做主，媒妁之言决定了一生，孩子对自己的婚姻和生活几乎没有自主权，这不免令人唏嘘。如今，情况大不相同。父母仍能影响孩子的生活，但孩子有更多自主权，人生的选择权掌握在自己手中。旁人的意见，不过是建议。然而，当生活遇到挫折时，孩子却往往仍会将责任归咎于父母，颇具讽刺意味。","s":"家庭","u":"/en/blog/人类简史","h":"#家庭","p":980},{"i":991,"t":"历史书如同一面哈哈镜，常常放大特定利益阶层的功绩，却忽视或淡化了平凡人的力量与贡献。 从《活着》中的普通人到李自成的大顺军，一再证明，平凡个体同样可以成就伟大。明代初年，名将多出自淮西，但若将他们置于一个稳定的时代，他们或许只是普通的农民或奴隶；若将他们放在不同的阵营，他们可能只是他人辉煌的背景。我们通常将伟大定义为时代赋予的成功与名声，但这种定义或许过于狭隘。伟大不应仅限于功成名就，而应更加包容和务实，更贴近人类共同的经验。勇敢、智慧，甚至失败，都值得被赋予伟大的意义。伟大存在于每个个体为生存、理想和信念所付出的努力中，无论成败。","s":"南明史","u":"/en/blog/南明史","h":"","p":990},{"i":993,"t":"能说的上话很重要。 能说的上话很重要。","s":"一句顶一万句","u":"/en/blog/一句顶一万句","h":"","p":992},{"i":997,"t":"用于打印调试信息。 info 打印内容，warning 打印内容并附加行号。","s":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能","p":994},{"i":999,"t":"可以使用 make -n 来打印命令但不执行，从而帮助调试。","s":"调试：","u":"/en/docs/note/build/makefile_function","h":"#调试","p":994},{"i":1001,"t":"$(warning $(LANGUAGES)) # 29行 $(info $(LANGUAGES)) # 30行 $(warning xxx) # 31行 $ make -n Makefile:29: zh wd zh wd Makefile:31: xxx","s":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例","p":994},{"i":1004,"t":"执行文本替换：将文本中所有出现的 from 替换为 to。","s":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-1","p":994},{"i":1006,"t":"$(subst from,to,text)","s":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法","p":994},{"i":1008,"t":"$(subst ee,EE,feet on the street) 输出：fEEt on the strEEt","s":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-1","p":994},{"i":1011,"t":"通过通配符返回文件列表，类似于 Python 的 glob。","s":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-2","p":994},{"i":1013,"t":"$(wildcard pattern)","s":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-1","p":994},{"i":1015,"t":"获取 po 目录下所有以 .po 结尾的文件： $(warning $(wildcard po/*.po)) # Makefile:20: po/zh.po po/wd.po","s":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-2","p":994},{"i":1018,"t":"替换字符串，可以使用 % 通配符，支持模式替换。","s":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-3","p":994},{"i":1020,"t":"$(patsubst pattern,replacement,text)","s":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-2","p":994},{"i":1022,"t":"subst 仅支持完全匹配替换。 patsubst 支持模式匹配。","s":"区别：","u":"/en/docs/note/build/makefile_function","h":"#区别","p":994},{"i":1024,"t":"text := Hello, world! result := $(subst world,Makefile,$(text)) all: @echo $(result) # 输出: Hello, Makefile! files := src/foo.c src/bar.c src/baz.c objects := $(patsubst src/%.c,build/%.o,$(files)) all: @echo $(objects) # 输出: build/foo.o build/bar.o build/baz.o","s":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-3","p":994},{"i":1027,"t":"为每个文件名添加后缀。","s":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-4","p":994},{"i":1029,"t":"$(addsuffix suffix, names...)","s":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-3","p":994},{"i":1031,"t":"$(addsuffix .c,foo bar) 返回值：foo.c bar.c","s":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-4","p":994},{"i":1034,"t":"从文件名中提取前缀部分（即点号 . 之前的部分）。","s":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-5","p":994},{"i":1036,"t":"$(basename names...)","s":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-4","p":994},{"i":1038,"t":"$(basename src/foo.c src-1.0/bar.c /home/jack/.font.cache-1 hacks) 提取文件名和去掉后缀： filepath := src/foo.c # 提取文件名 filename := $(notdir $(filepath)) # 去掉后缀 name_without_ext := $(basename $(filename)) all: @echo \"Filename: $(filename)\" # 输出: foo.c @echo \"Name without extension: $(name_without_ext)\" # 输出: foo","s":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-5","p":994},{"i":1041,"t":"从字符串中提取第一个单词。","s":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-6","p":994},{"i":1043,"t":"$(firstword text)","s":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-5","p":994},{"i":1045,"t":"words := foo bar baz first := $(firstword $(words)) all: @echo $(first) # 输出: foo","s":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-6","p":994},{"i":1048,"t":"去除字符串开头和结尾的空格。","s":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-7","p":994},{"i":1050,"t":"$(strip text)","s":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-6","p":994},{"i":1052,"t":"text := foo bar baz stripped := $(strip $(text)) all: @echo \"$(stripped)\" # 输出: foo bar baz","s":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-7","p":994},{"i":1055,"t":"提取字符串中的第 N 个单词（单词以空格分隔）。","s":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-8","p":994},{"i":1057,"t":"$(word N,text)","s":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-7","p":994},{"i":1059,"t":"words := foo bar baz second_word := $(word 2,$(words)) all: @echo $(second_word) # 输出: bar","s":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-8","p":994},{"i":1061,"t":"microkernel（微内核）架构的核心思想是 核心功能最小化，其他功能以插件或服务的形式运行在用户态，通过 进程间通信（IPC） 与内核交互。","s":"microkernel 设计1","u":"/en/docs/note/design/microkernel/microkernel1","h":"","p":1060},{"i":1064,"t":"内核小、职责单一 内核只负责最基本的功能，比如线程调度、地址空间管理、IPC。 模块化、可扩展 文件系统、驱动程序等作为用户空间服务，易于替换和调试。 可靠性高 一个用户态服务崩溃不会影响整个系统。 通信开销大 模块间依赖消息传递，相比传统内核切换用户态和内核态的代价更大。","s":"1.1 特点","u":"/en/docs/note/design/microkernel/microkernel1","h":"#11-特点","p":1060},{"i":1066,"t":"Kernel（内核） 负责 服务注册、消息路由、生命周期管理。 Services（服务） 独立模块（如 LogService、StorageService），运行在用户态。 通信机制（IPC） 使用 Go 的 Channel 或 gRPC 进行通信。","s":"1.2 核心组件","u":"/en/docs/note/design/microkernel/microkernel1","h":"#12-核心组件","p":1060},{"i":1069,"t":"package kernel import ( \"context\" \"errors\" \"fmt\" \"sync\" ) // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string } // Kernel 微内核核心 type Kernel struct { // 注册的服务通道 services map[string]Service // 保护 services 的并发访问 mutex sync.RWMutex // 全局事件总线 eventCh chan Event } // Event 定义内核事件（用于服务间通信） type Event struct { From string Type string Content string } // NewKernel 创建微内核实例 func NewKernel() *Kernel { return &Kernel{ services: make(map[string]Service), eventCh: make(chan Event, 100), } } // RegisterService 注册服务 func (k *Kernel) RegisterService(s Service) error { k.mutex.Lock() defer k.mutex.Unlock() name := s.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = s return nil } // StartAll 启动所有服务 func (k *Kernel) StartAll() error { k.mutex.RLock() defer k.mutex.RUnlock() for _, s := range k.services { if err := s.Start(); err != nil { return err } } return nil } // StopAll 停止所有服务 func (k *Kernel) StopAll() error { k.mutex.RLock() defer k.mutex.RUnlock() var err error for _, s := range k.services { if e := s.Stop(); e != nil { err = e } } return err } // SendEvent 发送事件（模拟 IPC） func (k *Kernel) SendEvent(evt Event) { k.eventCh <- evt } // EventLoop 事件循环（处理服务间通信） func (k *Kernel) EventLoop(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: %s - %s\\n\", evt.From, evt.Type, evt.Content) } } }","s":"2.1 定义 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel1","h":"#21-定义-kernel核心","p":1060},{"i":1071,"t":"package service import ( \"fmt\" \"microkernel/kernel\" ) // LogService 日志服务 type LogService struct { name string kernel *kernel.Kernel logCh chan string stopCh chan struct{} } func NewLogService(name string, kernel *kernel.Kernel) *LogService { return &LogService{ name: name, kernel: kernel, logCh: make(chan string, 100), stopCh: make(chan struct{}), } } func (l *LogService) Start() error { fmt.Printf(\"[%s] starting...\\n\", l.name) go l.run() return nil } func (l *LogService) Stop() error { fmt.Printf(\"[%s] stopping...\\n\", l.name) close(l.stopCh) return nil } func (l *LogService) Name() string { return l.name } func (l *LogService) run() { for { select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 l.kernel.SendEvent(kernel.Event{ From: l.name, Type: \"log\", Content: log, }) } } } func (l *LogService) Log(msg string) { l.logCh <- msg }","s":"2.2 实现示例服务（LogService）","u":"/en/docs/note/design/microkernel/microkernel1","h":"#22-实现示例服务logservice","p":1060},{"i":1073,"t":"package main import ( \"context\" \"microkernel/kernel\" \"microkernel/service\" \"time\" ) func main() { // 1. 创建微内核 kernel := kernel.NewKernel() // 2. 注册服务 logSvc := service.NewLogService(\"logger\", kernel) if err := kernel.RegisterService(logSvc); err != nil { panic(err) } // 3. 启动所有服务 if err := kernel.StartAll(); err != nil { panic(err) } // 4. 启动事件循环 ctx, cancel := context.WithCancel(context.Background()) defer cancel() go kernel.EventLoop(ctx) // 5. 测试日志服务 logSvc.Log(\"Hello, Microkernel!\") time.Sleep(1 * time.Second) // 6. 停止所有服务 if err := kernel.StopAll(); err != nil { panic(err) } }","s":"2.3 主程序（运行微内核 + 服务）","u":"/en/docs/note/design/microkernel/microkernel1","h":"#23-主程序运行微内核--服务","p":1060},{"i":1075,"t":"[logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] stopping...","s":"2.4 运行结果","u":"/en/docs/note/design/microkernel/microkernel1","h":"#24-运行结果","p":1060},{"i":1077,"t":"使用 gRPC 替代 Channel（实现跨进程通信）。 动态加载服务（如插件化架构）。 增加服务发现机制（如 Consul/Etcd）。 支持更复杂的事件路由（如基于 Topic 的 Pub/Sub）。","s":"3. 扩展方向","u":"/en/docs/note/design/microkernel/microkernel1","h":"#3-扩展方向","p":1060},{"i":1079,"t":"微内核的核心：Kernel 只管理 Service 的生命周期和通信。 服务独立：每个 Service 运行在自己的 Goroutine 中，互不干扰。 通信方式： 简单场景：Channel（如示例）。 复杂场景：gRPC、NATS、WebSocket 等。 查看完整代码","s":"4. 总结","u":"/en/docs/note/design/microkernel/microkernel1","h":"#4-总结","p":1060},{"i":1082,"t":"在 Makefile 中，:（单冒号）和 ::（双冒号）都用于定义目标（target），但它们的行为存在关键区别。理解它们的用法可以帮助我们更好地组织 Makefile，提高可维护性和灵活性。","s":"1. 概述","u":"/en/docs/note/build/makefile:","h":"#1-概述","p":1080},{"i":1084,"t":"语法 行为 :（单冒号） 定义唯一规则，如果同一目标出现多次，后面的规则会覆盖前面的规则 ::（双冒号） 定义多个独立规则，同一目标可以有多个规则，所有规则都会被执行","s":"2. :（单冒号）与 ::（双冒号）的区别","u":"/en/docs/note/build/makefile:","h":"#2-单冒号与-双冒号的区别","p":1080},{"i":1087,"t":"all: build @echo \"Running build\" all: test @echo \"Running test\" 执行 make all 结果： Running test 解释： all: 目标被定义了两次。 后面的 all: test 覆盖 了前面的 all: build，因此只执行 test 相关的命令。","s":"3.1 基本示例","u":"/en/docs/note/build/makefile:","h":"#31-基本示例","p":1080},{"i":1089,"t":"all: build test: @echo \"Testing...\" all: test # 覆盖前面的规则 执行 make all 结果： Testing... 解释： all: build 先定义了 build 依赖。 all: test 覆盖了前面的 all: build，最终 all 只依赖 test。 适用场景： 适用于单一规则的目标，如 CC = gcc 这类变量定义。 确保不执行重复规则，仅保留最后一次的定义。","s":"3.2 依赖的覆盖","u":"/en/docs/note/build/makefile:","h":"#32-依赖的覆盖","p":1080},{"i":1092,"t":"all:: build @echo \"Running build\" all:: test @echo \"Running test\" 执行 make all 结果： Running build Running test 解释： all:: 目标被定义了两次，但不会相互覆盖。 make all 会依次执行所有 all:: 规则。","s":"4.1 基本示例","u":"/en/docs/note/build/makefile:","h":"#41-基本示例","p":1080},{"i":1094,"t":"test:: unit-test t@echo \"Integration testing...\" test:: integration-test t@echo \"Unit testing...\" 执行 make test 结果： Integration testing... Unit testing... 解释： test:: 目标多次定义，每个规则都会被执行。 适用场景： 适用于模块化规则，比如 make test 可能需要多个测试步骤。 扩展性更强，多个 Makefile 片段可以独立定义 test::，不会相互覆盖。","s":"4.2 组合依赖","u":"/en/docs/note/build/makefile:","h":"#42-组合依赖","p":1080},{"i":1096,"t":"适用场景 使用 :（单冒号） 使用 ::（双冒号） 唯一规则目标 ✅ ❌ 可累积执行的目标 ❌ ✅ 变量赋值（如 CC=gcc） ✅ ❌ 多 Makefile 规则合并 ❌ ✅ 防止规则覆盖 ❌ ✅","s":"5. : vs :: 适用场景总结","u":"/en/docs/note/build/makefile:","h":"#5--vs--适用场景总结","p":1080},{"i":1098,"t":":（单冒号） 适用于唯一规则，如果目标重复定义，后面的规则会覆盖前面的。 ::（双冒号） 允许多次定义相同目标，并且所有规则都会被执行。 如果 Makefile 可能被多个文件拆分并包含（include Makefile.common），推荐使用 :: 以避免目标覆盖。 🚀 掌握 : 和 :: 的区别，有助于编写更灵活和可维护的 Makefile！","s":"6. 结论","u":"/en/docs/note/build/makefile:","h":"#6-结论","p":1080},{"i":1100,"t":"microkernel 设计1 目前只支持服务发送消息，内核接受消息。 在本章节，我会增加内核发送消息到服务","s":"microkernel 设计2","u":"/en/docs/note/design/microkernel/microkernel2","h":"","p":1099},{"i":1102,"t":"内核发送消息到服务","s":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel2","h":"#1-目标","p":1099},{"i":1105,"t":"服务增加消息处理方法 // kernel/kernel.go type Service interface { Start() error Stop() error Name() string // 增加消息处理方法 Handle(msg string) string } 事件增加发送地址 // kernel/kernel.go // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string } 内核发送事件到服务 // kernel/kernel.go // HandleEvent 处理事件（模拟服务间通信） func (k *Kernel) HandleEvent(evt Event) (msg string) { k.mutex.RLock() defer k.mutex.RUnlock() if svc, ok := k.services[evt.To]; ok { return svc.Handle(evt.Content) } return \"service not found\" }","s":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel2","h":"#21-kernel核心","p":1099},{"i":1107,"t":"增加Handle方法实现 // service/log.go // service 增加Handle接口实现 func (l *LogService) Handle(msg string) string { fmt.Printf(\"[%s] LOG handle kernel event: %s\\n\", l.name, msg) return fmt.Sprintf(\"[%s] LOG Handle: %s\\n\", l.name, msg) }","s":"2.2 LogService","u":"/en/docs/note/design/microkernel/microkernel2","h":"#22-logservice","p":1099},{"i":1109,"t":"kernel发送消息到service // main.go // 6. microKernel 发送事件到指定服务 microKernel.HandleEvent(kernel.Event{ From: \"microKernel\", To: \"logger\", Type: \"log\", Content: \"Hello, Log!\", }) time.Sleep(1 * time.Millisecond)","s":"2.3 主程序（运行微内核 + 服务）","u":"/en/docs/note/design/microkernel/microkernel2","h":"#23-主程序运行微内核--服务","p":1099},{"i":1111,"t":"[logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... 查看完整代码","s":"2.4 运行结果","u":"/en/docs/note/design/microkernel/microkernel2","h":"#24-运行结果","p":1099},{"i":1113,"t":"HandleEvent 修改为 Send SendEvent 修改为 Push LoopEvent 修改为Listen mutex修改为 mu 查看完整代码","s":"2.5 优化函数和变量命名","u":"/en/docs/note/design/microkernel/microkernel2","h":"#25-优化函数和变量命名","p":1099},{"i":1117,"t":"服务 能读取 Kernel 的返回信息 实现方法参考链接： gitee weidongkl.github.io","s":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel3","h":"#1-目标","p":1115},{"i":1119,"t":"可以为每个 Service 提供一个专属的响应通道（channel），内核通过这个通道将处理结果或反馈信息“推送”回去。 每次发送消息附带一个 ReplyCh。 内核在收到消息后通过该通道写回响应。 Service 读取 ReplyCh 获取反馈。","s":"2. 代码改动","u":"/en/docs/note/design/microkernel/microkernel3","h":"#2-代码改动","p":1115},{"i":1121,"t":"事件增加读取返回的channel // kernel/kernel.go // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string // 增加响应通道 ReplyCh chan string } listen 增加返回值得写入 // kernel/kernel.go func (k *Kernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: %s - %s\\n\", evt.From, evt.Type, evt.Content) // 增加返回的写入 if evt.ReplyCh != nil { evt.ReplyCh <- fmt.Sprintf(\"ack: %s\", evt.Content) } } } }","s":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel3","h":"#21-kernel核心","p":1115},{"i":1123,"t":"服务增加返回的读取 func (l *LogService) run() { for { select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 replyCh := make(chan string, 1) l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", Content: log, ReplyCh: replyCh, }) // 等待内核回应 reply := <-replyCh fmt.Printf(\"[%s] got reply from kernel: %s\\n\", l.Name(), reply) } } }// service/log.go // service 增加Handle接口实现 func (l *LogService) Handle(msg string) string { fmt.Printf(\"[%s] LOG handle kernel event: %s\\n\", l.name, msg) return fmt.Sprintf(\"[%s] LOG Handle: %s\\n\", l.name, msg) }","s":"2.2 LogService","u":"/en/docs/note/design/microkernel/microkernel3","h":"#22-logservice","p":1115},{"i":1125,"t":"Registered: logger [logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] got reply from kernel: ack: Hello, Microkernel! [Kernel] Send Event to logger: Hello, Log! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... 查看完整代码","s":"2.3 运行结果","u":"/en/docs/note/design/microkernel/microkernel3","h":"#23-运行结果","p":1115},{"i":1127,"t":"在编程和系统设计中，Future-Proof 机制指的是通过合理的架构设计和技术选择，使代码或系统能够适应未来的需求变化、技术演进和规模扩展，而无需大规模重构或重写。其核心目标是降低长期维护成本，提高可扩展性。","s":"Future-Proof 机制","u":"/en/docs/note/design/future_proof","h":"","p":1126},{"i":1129,"t":"以下是实现 Future-Proof 代码的关键设计思想：","s":"1. Future-Proof 机制的关键原则","u":"/en/docs/note/design/future_proof","h":"","p":1126},{"i":1131,"t":"目标：模块间通过清晰的接口交互，而非直接依赖具体实现。使用接口（Go 的 interface）而非具体类型，依赖注入而非硬编码。 优点： 业务逻辑与具体实现解耦 易于扩展新的实现方式 便于单元测试（可以mock Notifier） 设计点： 面向接口编程：依赖抽象而非具体实现 依赖注入：通过构造函数或方法参数注入依赖 单一职责：每个组件只关注自己的核心功能 最小知识原则：组件只与直接相关的组件交互 松耦合示例： 定义接口 // Notifier 通知接口 type Notifier interface { Send(message string) error } 接口实现 // EmailNotifier 邮件通知实现 type EmailNotifier struct{} func (e EmailNotifier) Send(message string) error { fmt.Printf(\"发送邮件通知: %s\\n\", message) return nil } // SMSNotifier 短信通知实现 type SMSNotifier struct{} func (s SMSNotifier) Send(message string) error { fmt.Printf(\"发送短信通知: %s\\n\", message) return nil } 业务逻辑调用接口 // NotificationService 通知服务 type NotificationService struct { notifier Notifier } func NewNotificationService(notifier Notifier) *NotificationService { return &NotificationService{notifier: notifier} } func (s *NotificationService) ProcessOrder(orderID string) { // 处理订单逻辑... message := fmt.Sprintf(\"订单 %s 已处理\", orderID) _ = s.notifier.Send(message) } 主函数调用 func main() { // 可以轻松替换通知实现 emailNotifier := EmailNotifier{} service := NewNotificationService(emailNotifier) service.ProcessOrder(\"12345\") // 切换为短信通知不需要修改业务逻辑 smsNotifier := SMSNotifier{} service = NewNotificationService(smsNotifier) service.ProcessOrder(\"67890\") } 紧耦合示例： 使用具体类型 // EmailSender 邮件发送器 type EmailSender struct{} func (e EmailSender) SendEmail(message string) error { fmt.Printf(\"发送邮件: %s\\n\", message) return nil } 业务类型依赖具体类 // OrderProcessor 订单处理器 type OrderProcessor struct { emailSender EmailSender } func (p *OrderProcessor) ProcessOrder(orderID string) { // 处理订单逻辑... message := fmt.Sprintf(\"订单 %s 已处理\", orderID) _ = p.emailSender.SendEmail(message) } 主函数调用 func main() { processor := OrderProcessor{emailSender: EmailSender{}} processor.ProcessOrder(\"12345\") // 如果要改为短信通知，必须修改OrderProcessor结构体和所有相关代码 }","s":"1.1.  松耦合（Loose Coupling）","u":"/en/docs/note/design/future_proof","h":"#11--松耦合loose-coupling","p":1126},{"i":1133,"t":"目标：新增功能时无需修改现有代码。 示例：通过组合而非继承扩展行为（Go 的 embedding 或中间件模式）。 type LoggingAggregator struct { *EventAggregator // 嵌入原有功能 logger Logger } // 新增日志能力而不修改原始聚合器","s":"1.2. 可扩展性（Extensibility）","u":"/en/docs/note/design/future_proof","h":"#12-可扩展性extensibility","p":1126},{"i":1135,"t":"目标：将易变的参数（如超时时间、规则路径）外置为配置。 示例：通过环境变量或配置文件驱动行为： timeout := os.Getenv(\"AGGREGATOR_TIMEOUT\")","s":"1.3. 配置化而非硬编码","u":"/en/docs/note/design/future_proof","h":"#13-配置化而非硬编码","p":1126},{"i":1137,"t":"目标：数据交互格式（如 JSON、Protobuf）支持向后兼容。 示例：使用 Protocol Buffers 的字段编号机制，避免破坏旧版解析。","s":"1.4. 协议与数据格式的兼容性","u":"/en/docs/note/design/future_proof","h":"#14-协议与数据格式的兼容性","p":1126},{"i":1139,"t":"目标：并发模型能随规模调整（如 Goroutine 池 vs 固定 Worker）。 示例：在之前的聚合器代码中，通过 Channel 通信可轻松扩展为多 Worker： for i := 0; i < runtime.NumCPU(); i++ { go aggregator.processRequests() }","s":"1.5. 并发模型的可适应性","u":"/en/docs/note/design/future_proof","h":"#15-并发模型的可适应性","p":1126},{"i":1141,"t":"目标：内置日志、指标、链路追踪等，便于未来诊断问题。 示例：在 rulesUpdateRequest 中添加请求 ID 和计时： type rulesUpdateRequest struct { RequestID string // 用于追踪 StartTime time.Time // ...其他字段 }","s":"1.6. 可观测性（Observability）","u":"/en/docs/note/design/future_proof","h":"#16-可观测性observability","p":1126},{"i":1143,"t":"目标：处理边界条件（如 nil Channel、超时）。 示例：在 Channel 通信中添加超时： func (a *EventAggregator) UpdateRules(rules []string) error { req := &rulesUpdateRequest{..., response: make(chan error, 1)} select { case a.updateChannel <- req: return <-req.response case <-time.After(1 * time.Second): return errors.New(\"update timeout\") } }","s":"1.7. 防御性编程","u":"/en/docs/note/design/future_proof","h":"#17-防御性编程","p":1126},{"i":1145,"t":"package main import ( \"fmt\" \"time\" ) // EventAggregator manages a set of rules and processes updates through channels type EventAggregator struct { rules []string updateChannel chan *rulesUpdateRequest shutdownChan chan struct{} } // rulesUpdateRequest represents a request to update the rules type rulesUpdateRequest struct { newRules []string response chan error } // NewEventAggregator creates and starts a new EventAggregator func NewEventAggregator() *EventAggregator { agg := &EventAggregator{ rules: []string{}, updateChannel: make(chan *rulesUpdateRequest), shutdownChan: make(chan struct{}), } go agg.processRequests() return agg } // UpdateRules safely updates the rules by sending a request through the channel func (a *EventAggregator) UpdateRules(newRules []string) error { req := &rulesUpdateRequest{ newRules: newRules, response: make(chan error, 1), // Buffered to avoid blocking } a.updateChannel <- req return <-req.response } // Shutdown gracefully stops the aggregator func (a *EventAggregator) Shutdown() { close(a.shutdownChan) } // processRequests handles incoming requests in a thread-safe manner func (a *EventAggregator) processRequests() { for { select { case req := <-a.updateChannel: a.rules = req.newRules fmt.Println(\"Updated rules:\", a.rules) req.response <- nil case <-a.shutdownChan: fmt.Println(\"Shutting down aggregator\") return } } } func main() { // Create and start the aggregator aggregator := NewEventAggregator() defer aggregator.Shutdown() // Simulate some updates go func() { time.Sleep(500 * time.Millisecond) if err := aggregator.UpdateRules([]string{\"a\", \"b\", \"c\"}); err != nil { fmt.Println(\"Error updating rules:\", err) } }() go func() { time.Sleep(1 * time.Second) if err := aggregator.UpdateRules([]string{\"d\", \"e\", \"f\"}); err != nil { fmt.Println(\"Error updating rules:\", err) } }() // Give time for the updates to process time.Sleep(2 * time.Second) } 状态隔离：所有规则更新通过 Channel 串行化，避免竞态条件。 易于扩展：可新增 QueryRules() 方法而不影响现有逻辑。 并发友好：Channel 模型天然支持协程扩展。 关闭控制：通过 shutdownChan 实现优雅终止。 根据原则，执行部分优化 package main import ( \"context\" \"errors\" \"fmt\" \"sync\" \"time\" ) // RuleSet represents a collection of rules with metadata type RuleSet struct { Rules []string Version int // Track changes over time Modified time.Time // Last update timestamp } // SetRulesRequest encapsulates a rules update operation type SetRulesRequest struct { NewRules []string Response chan error RequestID string // For tracing Timestamp time.Time // For auditing } // AggregatorOptions configures aggregator behavior type AggregatorOptions struct { MaxPendingRequests int // Buffer size for requests RequestTimeout time.Duration // Timeout for rule updates EnableValidation bool // Future: validate rules before applying } // Aggregator manages rule sets with thread-safe operations type Aggregator struct { currentRuleSet RuleSet options AggregatorOptions requestChan chan *SetRulesRequest queryChan chan chan RuleSet // New channel for safe rule queries commandChan chan func() // Generic command channel for future extensions stopChan chan struct{} shutdownOnce sync.Once stopWg sync.WaitGroup } // NewAggregator creates a configured aggregator instance func NewAggregator(opts AggregatorOptions) *Aggregator { if opts.MaxPendingRequests <= 0 { opts.MaxPendingRequests = 10 } if opts.RequestTimeout <= 0 { opts.RequestTimeout = 2 * time.Second } return &Aggregator{ currentRuleSet: RuleSet{Version: 1}, options: opts, requestChan: make(chan *SetRulesRequest, opts.MaxPendingRequests), queryChan: make(chan chan RuleSet), commandChan: make(chan func()), stopChan: make(chan struct{}), } } // Run starts the aggregator's processing loop func (a *Aggregator) Run() { a.stopWg.Add(1) defer a.stopWg.Done() for { select { case req := <-a.requestChan: a.handleSetRules(req) case respChan := <-a.queryChan: a.handleGetRules(respChan) case cmd := <-a.commandChan: cmd() // Execute arbitrary commands case <-a.stopChan: return } } } func (a *Aggregator) handleSetRules(req *SetRulesRequest) { defer close(req.Response) // Future: could add validation here if a.options.EnableValidation { // Validate rules before applying } a.currentRuleSet = RuleSet{ Rules: req.NewRules, Version: a.currentRuleSet.Version + 1, Modified: time.Now(), } fmt.Printf(\"Updated rules (v%d): %v\\n\", a.currentRuleSet.Version, a.currentRuleSet.Rules) req.Response <- nil } func (a *Aggregator) handleGetRules(respChan chan RuleSet) { respChan <- a.currentRuleSet close(respChan) } // SetRules updates the rule set with timeout support func (a *Aggregator) SetRules(ctx context.Context, rules []string) error { req := &SetRulesRequest{ NewRules: rules, Response: make(chan error), RequestID: fmt.Sprintf(\"req-%d\", time.Now().UnixNano()), Timestamp: time.Now(), } select { case a.requestChan <- req: select { case err := <-req.Response: return err case <-ctx.Done(): return ctx.Err() } case <-a.stopChan: return errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return ctx.Err() } } // GetRules safely retrieves the current rule set func (a *Aggregator) GetRules(ctx context.Context) (RuleSet, error) { respChan := make(chan RuleSet) select { case a.queryChan <- respChan: select { case rules := <-respChan: return rules, nil case <-ctx.Done(): return RuleSet{}, ctx.Err() } case <-a.stopChan: return RuleSet{}, errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return RuleSet{}, ctx.Err() } } // Stop gracefully shuts down the aggregator func (a *Aggregator) Stop() { a.shutdownOnce.Do(func() { close(a.stopChan) a.stopWg.Wait() close(a.requestChan) close(a.queryChan) close(a.commandChan) fmt.Println(\"Aggregator stopped gracefully\") }) } // ExecuteCommand provides extension point for future operations func (a *Aggregator) ExecuteCommand(ctx context.Context, cmd func()) error { select { case a.commandChan <- cmd: return nil case <-a.stopChan: return errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return ctx.Err() } } func main() { // Configurable options opts := AggregatorOptions{ MaxPendingRequests: 20, RequestTimeout: 3 * time.Second, EnableValidation: false, // Could be enabled in future } aggregator := NewAggregator(opts) go aggregator.Run() // Example usage with context ctx, cancel := context.WithTimeout(context.Background(), 2*time.Second) defer cancel() // Set rules err := aggregator.SetRules(ctx, []string{\"a\", \"b\", \"c\"}) if err != nil { fmt.Println(\"Error setting rules:\", err) } // Get rules rules, err := aggregator.GetRules(ctx) if err != nil { fmt.Println(\"Error getting rules:\", err) } else { fmt.Printf(\"Current rules (v%d): %v\\n\", rules.Version, rules.Rules) } // Execute custom command aggregator.ExecuteCommand(ctx, func() { fmt.Println(\"Executing custom command\") }) aggregator.Stop() } Enhanced Rule Metadata: Added RuleSet struct with versioning and timestamps Supports audit trails and change tracking Configurable Options: AggregatorOptions allows tuning without code changes Supports future features like validation Multiple Communication Channels: Separate channels for commands (commandChan) and queries (queryChan) Prevents mixing of operation types Context Support: All operations respect context for timeouts/cancellation Better integration with modern Go applications Extension Points: ExecuteCommand method for adding future functionality Generic command channel pattern Improved Shutdown: sync.Once ensures safe single shutdown sync.WaitGroup for proper goroutine cleanup Thread-Safe Queries: Added safe GetRules method via channel No direct access to internal state Request Tracing: Added request IDs for debugging Timestamps for all operations 使用命令模式优化 package main import ( \"context\" \"errors\" \"fmt\" \"sync\" \"time\" ) // Command defines the interface all commands must implement type Command interface { Execute(ctx context.Context) error } // CommandHandler processes commands type CommandHandler struct { commands chan Command stopChan chan struct{} wg sync.WaitGroup } // NewCommandHandler creates a new handler with specified queue size func NewCommandHandler(queueSize int) *CommandHandler { return &CommandHandler{ commands: make(chan Command, queueSize), stopChan: make(chan struct{}), } } // Start begins processing commands func (h *CommandHandler) Start() { h.wg.Add(1) go func() { defer h.wg.Done() for { select { case cmd := <-h.commands: ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second) err := cmd.Execute(ctx) cancel() if err != nil { fmt.Printf(\"Command execution failed: %v\\n\", err) } case <-h.stopChan: return } } }() } // Submit sends a command for execution func (h *CommandHandler) Submit(ctx context.Context, cmd Command) error { select { case h.commands <- cmd: return nil case <-h.stopChan: return errors.New(\"handler is shutting down\") case <-ctx.Done(): return ctx.Err() } } // Stop gracefully shuts down the handler func (h *CommandHandler) Stop() { close(h.stopChan) h.wg.Wait() close(h.commands) } // --- Concrete Commands --- // SetRulesCommand implements Command for rule updates type SetRulesCommand struct { Aggregator *Aggregator NewRules []string } func (c *SetRulesCommand) Execute(ctx context.Context) error { return c.Aggregator.SetRules(ctx, c.NewRules) } // GetRulesCommand implements Command for rule queries type GetRulesCommand struct { Aggregator *Aggregator ResultChan chan<- RuleSet } func (c *GetRulesCommand) Execute(ctx context.Context) error { rules, err := c.Aggregator.GetRules(ctx) if err != nil { return err } c.ResultChan <- rules return nil } // --- Aggregator Implementation --- type RuleSet struct { Rules []string Version int Modified time.Time } type Aggregator struct { mu sync.Mutex currentRule RuleSet } func (a *Aggregator) SetRules(ctx context.Context, rules []string) error { a.mu.Lock() defer a.mu.Unlock() select { case <-ctx.Done(): return ctx.Err() default: a.currentRule = RuleSet{ Rules: rules, Version: a.currentRule.Version + 1, Modified: time.Now(), } fmt.Printf(\"Rules updated to version %d\\n\", a.currentRule.Version) return nil } } func (a *Aggregator) GetRules(ctx context.Context) (RuleSet, error) { a.mu.Lock() defer a.mu.Unlock() select { case <-ctx.Done(): return RuleSet{}, ctx.Err() default: return a.currentRule, nil } } // --- Usage Example --- func main() { // Create components handler := NewCommandHandler(10) aggregator := &Aggregator{ currentRule: RuleSet{Version: 0}, } // Start command processor handler.Start() defer handler.Stop() // Submit commands ctx := context.Background() // Set rules command setCmd := &SetRulesCommand{ Aggregator: aggregator, NewRules: []string{\"a\", \"b\", \"c\"}, } handler.Submit(ctx, setCmd) // Get rules command resultChan := make(chan RuleSet, 1) getCmd := &GetRulesCommand{ Aggregator: aggregator, ResultChan: resultChan, } handler.Submit(ctx, getCmd) // Wait for result select { case rules := <-resultChan: fmt.Printf(\"Current rules: %v\\n\", rules.Rules) case <-time.After(1 * time.Second): fmt.Println(\"Timeout waiting for rules\") } } The Command Handler pattern is a behavioral design pattern that encapsulates requests as objects, allowing for parameterization of clients with different requests, queuing of requests, and support for undoable operations. Here's how to implement it in your aggregator: Core Components Command Interface: Defines the execution contract Concrete Commands: Encapsulate specific actions and parameters Invoker: Receives and executes commands Receiver: Knows how to perform the operations Key Features Command Interface: type Command interface { Execute(ctx context.Context) error } Concrete Commands: Each command encapsulates all parameters needed for execution Commands can be serialized/deserialized for distributed systems Command Handler: Manages a queue of commands Processes commands sequentially in a goroutine Supports graceful shutdown Benefits: Decoupling: Separates command creation from execution Extensibility: Easy to add new command types Composability: Commands can be combined into macros Undo/Redo: Can be extended to support command history Advanced Extensions Command Middleware: type CommandMiddleware func(Command) Command func LoggingMiddleware(next Command) Command { return &loggedCommand{next} } Transaction Support: type TransactionCommand struct { Commands []Command } func (t *TransactionCommand) Execute(ctx context.Context) error { // Execute all or nothing } Priority Commands: type PriorityCommand struct { Command Priority int } // Use priority queue instead of channel","s":"2. 聚合器示例","u":"/en/docs/note/design/future_proof","h":"#2-聚合器示例","p":1126},{"i":1147,"t":"// 硬编码实现，未来难以修改 var globalRules []string func UpdateRules(rules []string) { globalRules = rules // 直接修改全局状态，线程不安全 }","s":"3. 反模式：非 Future-Proof 的设计","u":"/en/docs/note/design/future_proof","h":"#3-反模式非-future-proof-的设计","p":1126},{"i":1149,"t":"Future-Proof 不是过度设计，而是通过遵循 SOLID 原则和 并发安全实践，让代码具备： 适应变化的能力 平滑演进的路径 诊断问题的手段 在 Go 中，Channel 和 Interface 是构建 Future-Proof 系统的核心工具。","s":"4. 总结","u":"/en/docs/note/design/future_proof","h":"#4-总结","p":1126},{"i":1152,"t":"服务间通信（通过内核转发） 标准化消息协议结构 支持状态码、错误、数据负载。 异步+超时机制 服务发出请求时可以设置超时时间，避免长期阻塞。","s":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel4","h":"#1-目标","p":1150},{"i":1155,"t":"定义标准消息格式 Reply 包含code/message/Data Event ReplyCh 使用标准格式的Reply // kernel/kernel.go // Reply 定义内核事件回复 type Reply struct { Code int // 0 表示成功，非0表示错误码 Message string // 描述信息 Data string // 可选负载 } // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string // 增加响应通道,使用 chan Reply，提高回复的灵活性 ReplyCh chan Reply // 可选：超时时间 TimeoutMs int } 服务改造 handle 从处理字符串修改为处理事件，返回标准Reply // kernel/kernel.go // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string Handle(Event) Reply } Listen 路由和事件总线设计 // Listen 事件循环（处理服务间通信） // 监听事件，处理服务间通信 // 重命名 EventLoop 为 Listen func (k *Kernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: - %s\\n\", evt.From, evt.Content) // 发送给 Kernel 自己 if evt.To == \"\" { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 0, Message: \"Handled by kernel\", Data: \"ok\"} } continue } // 路由到目标服务 k.mu.RLock() svc, ok := k.services[evt.To] k.mu.RUnlock() if !ok { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 404, Message: \"Service not found\", Data: \"\"} } continue } // 调用目标服务处理，并返回 go func(s Service, m Event) { result := s.Handle(m) if m.ReplyCh != nil { select { case m.ReplyCh <- result: case <-time.After(time.Duration(m.TimeoutMs) * time.Millisecond): m.ReplyCh <- Reply{Code: 408, Message: \"timeout\", Data: \"\"} } } }(svc, evt) } } }","s":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel4","h":"#21-kernel核心","p":1150},{"i":1157,"t":"根据count随机分发（Push 指定了发送位置） func (l *LogService) run() { var count = 1 for { count++ select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 replyCh := make(chan kernel.Reply, 1) if count%2 == 0 { l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", Content: log, ReplyCh: replyCh, TimeoutMs: 1000, }) } else { l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", To: \"echo\", Content: log, ReplyCh: replyCh, TimeoutMs: 1000, }) } // 等待内核回应 reply := <-replyCh fmt.Printf(\"[%s] got reply from kernel: %s\\n\", l.Name(), reply.Message) } } }","s":"2.2 LogService","u":"/en/docs/note/design/microkernel/microkernel4","h":"#22-logservice","p":1150},{"i":1159,"t":"func (e *EchoService) Handle(evt kernel.Event) kernel.Reply { return kernel.Reply{Code: 0, Message: \"echo service handled\", Data: fmt.Sprintf(\"from %s: %s\", evt.From, evt.Content)} }","s":"2.3 增加另一个类似的EchoService","u":"/en/docs/note/design/microkernel/microkernel4","h":"#23-增加另一个类似的echoservice","p":1150},{"i":1161,"t":"Registered: logger # 注册另一个服务 Registered: echo [logger] starting... [echo] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [Kernel] Event from logger: - Hello, Echo! # 转发到echoService 处理 [logger] got reply from kernel: echo service handled [Kernel] Send Event to logger: Hello, Log! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... [echo] stopping... 查看完整代码","s":"2.4 运行结果","u":"/en/docs/note/design/microkernel/microkernel4","h":"#24-运行结果","p":1150},{"i":1164,"t":"服务状态管理 单独服务管理 优化项目结构","s":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel5","h":"#1-目标","p":1162},{"i":1167,"t":"定义服务状态和服务元数据 // kernel/service.go // ServiceState 定义微内核服务状态 type ServiceState int // 使用iota枚举类型，自动计算枚举值 const ( Created ServiceState = iota Running Stopped ) // ServiceState.String() func (s ServiceState) String() string { // 状态转换成字符串 // 其中[...]表示让编译器自动计算数组的长度 return [...]string{\"Created\", \"Running\", \"Stopped\"}[s] } // serviceMeta 定义微内核服务元数据 type serviceMeta struct { svc Service state ServiceState } 单个服务管理 // kernel/kernel.go func (k *MicroKernel) StartService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Running { return errors.New(\"service already started\") } if err := meta.svc.Start(); err != nil { return err } meta.state = Running fmt.Println(\"Started:\", meta.svc.Name()) return nil } func (k *MicroKernel) StopService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Stopped { return errors.New(\"service already stopped\") } if err := meta.svc.Stop(); err != nil { return err } meta.state = Stopped fmt.Println(\"Stopped:\", meta.svc.Name()) return nil } Listen 增加服务状态判断，未运行的服务，不再处理消息 // Listen 事件循环（处理服务间通信） // 监听事件，处理服务间通信 // 重命名 EventLoop 为 Listen func (k *MicroKernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[MicroKernel] Event from %s: - %s\\n\", evt.From, evt.Content) // 发送给 MicroKernel 自己 if evt.To == \"\" { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 0, Message: \"Handled by kernel\", Data: \"ok\"} } continue } // 路由到目标服务 k.mu.RLock() meta, ok := k.services[evt.To] k.mu.RUnlock() if !ok || meta.state != Running { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 404, Message: \"service unavailable\", Data: \"\"} } continue } // 调用目标服务处理，并返回 go func(s Service, m Event) { result := s.Handle(m) if m.ReplyCh != nil { select { case m.ReplyCh <- result: case <-time.After(time.Duration(m.TimeoutMs) * time.Millisecond): m.ReplyCh <- Reply{Code: 408, Message: \"timeout\", Data: \"\"} } } }(meta.svc, evt) } } }","s":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel5","h":"#21-kernel核心","p":1162},{"i":1169,"t":"Registered: logger Registered: echo Starting all services... [logger] starting... [echo] starting... [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } [logger] stopping... [echo] stopping... 查看完整代码","s":"2.2 运行结果","u":"/en/docs/note/design/microkernel/microkernel5","h":"#22-运行结果","p":1162},{"i":1172,"t":"支持服务依赖关系管理","s":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel6","h":"#1-目标","p":1170},{"i":1175,"t":"定义服务依赖关系。依赖的是服务名称 // kernel/service.go // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string Handle(Event) Reply // Dependencies 返回依赖服务名称 Dependencies() []string // 新增接口 } // serviceMeta 定义微内核服务元数据 type serviceMeta struct { svc Service state ServiceState // 存储依赖，也可以不使用，直接使用svc.Dependencies deps []string } 注册Register增加deps // kernel/kernel.go // Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() name := svc.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil } 启动服务和停止服务增加拓扑排序 // kernel/kernel.go func (k *MicroKernel) topoSort() ([]string, error) { k.mu.RLock() defer k.mu.RUnlock() visited := make(map[string]bool) temp := make(map[string]bool) result := []string{} var visit func(string) error visit = func(name string) error { if temp[name] { return fmt.Errorf(\"circular dependency at %s\", name) } if visited[name] { return nil } temp[name] = true meta, ok := k.services[name] if !ok { return fmt.Errorf(\"service %s not registered\", name) } for _, dep := range meta.deps { if err := visit(dep); err != nil { return err } } visited[name] = true temp[name] = false result = append(result, name) return nil } for name := range k.services { if !visited[name] { if err := visit(name); err != nil { return nil, err } } } return result, nil } func (k *MicroKernel) StartAll() error { sorted, err := k.topoSort() // ... for _, name := range sorted { if err := k.StartService(name); err != nil { // ... } } return nil }","s":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel6","h":"#21-kernel核心","p":1170},{"i":1177,"t":"服务增加依赖方法实现 func (l *LogService) Dependencies() []string { return []string{\"echo\"} }","s":"2.2 服务","u":"/en/docs/note/design/microkernel/microkernel6","h":"#22-服务","p":1170},{"i":1179,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } Stopping all services... [logger] stopping... Stopped: logger [echo] stopping... Stopped: echo 查看完整代码","s":"2.3 运行结果","u":"/en/docs/note/design/microkernel/microkernel6","h":"#23-运行结果","p":1170},{"i":1182,"t":"支持服务热更新 所有服务和内核通过统一接口打印日志 时间戳、服务名、级别（INFO/WARN/ERROR） 动态控制日志级别 输出到 stdout、文件、远程服务等 xxx","s":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel7","h":"#1-目标","p":1180},{"i":1185,"t":"新增ReplaceService 用于热替换服务 // kernel/kernel.go func (k *MicroKernel) ReplaceService(newSvc Service) error { k.mu.Lock() defer k.mu.Unlock() name := newSvc.Name() oldMeta, exists := k.services[name] if exists && oldMeta.state == Running { // 停止旧服务 oldMeta.svc.Stop() fmt.Printf(\"Stopped old version of %s\\n\", name) } // 替换服务实现，重建元信息 k.services[name] = &serviceMeta{ svc: newSvc, deps: newSvc.Dependencies(), state: Created, } // 重启服务（如旧服务在运行） if exists && oldMeta.state == Running { newSvc.Start() k.services[name].state = Running fmt.Printf(\"Started new version of %s\\n\", name) } else { fmt.Printf(\"Registered new version of %s (not started)\\n\", name) } return nil } 注册Register增加deps // kernel/kernel.go // Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() name := svc.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil } 启动服务和停止服务增加拓扑排序 // kernel/kernel.go func (k *MicroKernel) topoSort() ([]string, error) { k.mu.RLock() defer k.mu.RUnlock() visited := make(map[string]bool) temp := make(map[string]bool) result := []string{} var visit func(string) error visit = func(name string) error { if temp[name] { return fmt.Errorf(\"circular dependency at %s\", name) } if visited[name] { return nil } temp[name] = true meta, ok := k.services[name] if !ok { return fmt.Errorf(\"service %s not registered\", name) } for _, dep := range meta.deps { if err := visit(dep); err != nil { return err } } visited[name] = true temp[name] = false result = append(result, name) return nil } for name := range k.services { if !visited[name] { if err := visit(name); err != nil { return nil, err } } } return result, nil } func (k *MicroKernel) StartAll() error { sorted, err := k.topoSort() // ... for _, name := range sorted { if err := k.StartService(name); err != nil { // ... } } return nil }","s":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel7","h":"#21-kernel核心","p":1180},{"i":1187,"t":"日志服务设计 type LogLevel int const ( INFO LogLevel = iota WARN ERROR ) type Logger struct { mu sync.Mutex level LogLevel service string out io.Writer } 方法实现 func NewLogger(service string, level LogLevel, out io.Writer) *Logger { return &Logger{ service: service, level: level, out: out, } } func (l *Logger) logf(level LogLevel, format string, args ...any) { if level < l.level { return } l.mu.Lock() defer l.mu.Unlock() levelStr := [...]string{\"INFO\", \"WARN\", \"ERROR\"}[level] msg := fmt.Sprintf(format, args...) ts := time.Now().Format(\"2006-01-02 15:04:05.000\") fmt.Fprintf(l.out, \"[%s] [%s] [%s] %s\\n\", ts, levelStr, l.service, msg) } func (l *Logger) Infof(format string, args ...any) { l.logf(INFO, format, args...) } func (l *Logger) Warnf(format string, args ...any) { l.logf(WARN, format, args...) } func (l *Logger) Errorf(format string, args ...any) { l.logf(ERROR, format, args...) } 服务中使用 type EchoServiceV3 struct { log *Logger } func NewEchoServiceV3() *EchoServiceV3 { return &EchoServiceV3{ log: NewLogger(\"echo\", INFO, os.Stdout), } } //... func (e *EchoServiceV3) Start() { e.log.Infof(\"started\") }","s":"2.2 日志服务","u":"/en/docs/note/design/microkernel/microkernel7","h":"#22-日志服务","p":1180},{"i":1189,"t":"热替换服务 // 7. 热替换服务 // 热更新为 V2 _ = microKernel.ReplaceService(service.NewEchoServiceV2(microKernel)) // 测试 V2 行为 replyCh2 := make(chan microkernel.Reply, 1) microKernel.Push(microkernel.Event{ From: \"main\", Type: \"log\", Content: \"log\", ReplyCh: replyCh2, TimeoutMs: 1000, }) fmt.Println(\"v2 reply:\", <-replyCh2)","s":"2.3 main","u":"/en/docs/note/design/microkernel/microkernel7","h":"#23-main","p":1180},{"i":1191,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } [echo] stopping... Stopped old version of echo [2025-04-23 21:46:11.935] [INFO] [echo] [echov2] starting... Started new version of echo [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... [log] stopping Stopped: echo Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } Stopping all services... [logger] stopping... Stopped: logger [echo] stopping... Stopped: echo 查看完整代码","s":"2.4 运行结果","u":"/en/docs/note/design/microkernel/microkernel7","h":"#24-运行结果","p":1180},{"i":1194,"t":"服务热更新增加状态迁移 支持服务加密状态迁移","s":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel8","h":"#1-目标","p":1192},{"i":1197,"t":"新增状态接口 // 旧服务可选实现：导出状态 type Exportable interface { ExportState() any } // 新服务可选实现：导入状态 type Importable interface { ImportState(state any) error } 加密接口 type Crypter interface { Encrypt(data any) ([]byte, error) Decrypt(cipher []byte) (any, error) } 加密实现 使用aes type AESCrypter struct { key []byte // 16/24/32 字节 } func NewAESCrypter(key []byte) *AESCrypter { return &AESCrypter{key: key} } func (a *AESCrypter) Encrypt(data any) ([]byte, error) { plaintext, err := json.Marshal(data) if err != nil { return nil, err } block, err := aes.NewCipher(a.key) if err != nil { return nil, err } aesgcm, err := cipher.NewGCM(block) if err != nil { return nil, err } nonce := make([]byte, aesgcm.NonceSize()) if _, err := io.ReadFull(rand.Reader, nonce); err != nil { return nil, err } ciphertext := aesgcm.Seal(nonce, nonce, plaintext, nil) return ciphertext, nil } func (a *AESCrypter) Decrypt(ciphertext []byte) (any, error) { block, err := aes.NewCipher(a.key) if err != nil { return nil, err } aesgcm, err := cipher.NewGCM(block) if err != nil { return nil, err } nonceSize := aesgcm.NonceSize() if len(ciphertext) < nonceSize { return nil, fmt.Errorf(\"ciphertext too short\") } nonce := ciphertext[:nonceSize] cipherData := ciphertext[nonceSize:] plaintext, err := aesgcm.Open(nil, nonce, cipherData, nil) if err != nil { return nil, err } var result any if err := json.Unmarshal(plaintext, &result); err != nil { return nil, err } return result, nil } 替换服务 //func (k *MicroKernel) ReplaceService(newSvc Service) error { // k.mu.Lock() // defer k.mu.Unlock() // // name := newSvc.Name() // oldMeta, exists := k.services[name] // var state any // // if exists { // if exporter, ok := oldMeta.svc.(Exportable); ok { // state = exporter.ExportState() // } // oldMeta.svc.Stop() // fmt.Printf(\"Stopped old version of %s\\n\", name) // } // // // 状态迁移 // if importer, ok := newSvc.(Importable); ok && state != nil { // if err := importer.ImportState(state); err != nil { // return fmt.Errorf(\"state import failed: %w\\n\", err) // } // fmt.Printf(\"State migrated for service %s\\n\", name) // } // // // 替换服务元信息 // k.services[name] = &serviceMeta{ // svc: newSvc, // deps: newSvc.Dependencies(), // state: Created, // } // // // 重启服务 // if exists && oldMeta.state == Running { // newSvc.Start() // k.services[name].state = Running // fmt.Printf(\"Started new version of %s\", name) // } else { // fmt.Printf(\"Registered new version of %s (not started)\", name) // } // // return nil //} func (k *MicroKernel) ReplaceServiceEncrypted(newSvc Service, crypter Crypter) error { k.mu.Lock() defer k.mu.Unlock() name := newSvc.Name() oldMeta, exists := k.services[name] var encryptedState []byte if exists { if exporter, ok := oldMeta.svc.(Exportable); ok { rawState := exporter.ExportState() cipher, err := crypter.Encrypt(rawState) if err != nil { return fmt.Errorf(\"state encryption failed: %w\", err) } encryptedState = cipher } oldMeta.svc.Stop() fmt.Printf(\"Stopped old version of %s\\n\", name) } // 状态导入（解密） if importer, ok := newSvc.(Importable); ok && encryptedState != nil { decrypted, err := crypter.Decrypt(encryptedState) if err != nil { return fmt.Errorf(\"state decryption failed: %w\", err) } if err := importer.ImportState(decrypted); err != nil { return fmt.Errorf(\"state import failed: %w\", err) } fmt.Printf(\"Encrypted state migrated for service %s\\n\", name) } k.services[name] = &serviceMeta{ svc: newSvc, deps: newSvc.Dependencies(), state: Created, } if exists && oldMeta.state == Running { newSvc.Start() k.services[name].state = Running fmt.Printf(\"Started new version of %s\\n\", name) } else { fmt.Printf(\"Registered new version of %s (not started)\\n\", name) } return nil }","s":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel8","h":"#21-kernel核心","p":1192},{"i":1199,"t":"实现状态接口 func (e *EchoServiceV2) ImportState(state any) error { if val, ok := state.(int); ok { e.echoCount = val return nil } return fmt.Errorf(\"invalid state type\") } func (e *EchoService) ExportState() any { return e.echoCount }","s":"2.2 echo服务","u":"/en/docs/note/design/microkernel/microkernel8","h":"#22-echo服务","p":1192},{"i":1201,"t":"热替换服务 // 7. 热替换服务 // 热更新为 V2 aesKey := []byte(\"1234567890123456\") // 16 字节对称密钥 microKernel.ReplaceServiceEncrypted(service.NewEchoServiceV2(microKernel), microkernel.NewAESCrypter(aesKey))","s":"2.3 main","u":"/en/docs/note/design/microkernel/microkernel8","h":"#23-main","p":1192},{"i":1203,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to echo: Hello, Log! {0 echo service handled from microKernel: Hello, Log!} [echo] stopping... Stopped old version of echo State migrated for service echo [2025-04-24 21:28:38.032] [INFO] [echo] [echov2] starting... Started new version of echo[MicroKernel] Send Event to echo: Hello, Log! [echo] count is 10 {0 echo v2 service handled from microKernel: Hello, Log!} [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... Stopped: echo [log] stopping 查看完整代码","s":"2.4 运行结果","u":"/en/docs/note/design/microkernel/microkernel8","h":"#24-运行结果","p":1192},{"i":1205,"t":"服务状态持久化","s":"microkernel 设计9","u":"/en/docs/note/design/microkernel/microkernel9","h":"","p":1204},{"i":1207,"t":"服务状态在 Stop() 或热替换时 导出 + 加密 + 写入磁盘 注册服务时若检测到磁盘中有状态，则 读取 + 解密 + 导入 每个服务有自己的状态文件（支持多服务）","s":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel9","h":"#1-目标","p":1204},{"i":1210,"t":"存储目录：/var/lib/microkernel/state/（示例） 文件名：<service_name>.state 文件内容：已加密的字节流","s":"2.1 存储文件设计","u":"/en/docs/note/design/microkernel/microkernel9","h":"#21-存储文件设计","p":1204},{"i":1212,"t":"type StateStore struct { dir string crypter Crypter } func NewStateStore(dir string, crypter Crypter) *StateStore { return &StateStore{dir: dir, crypter: crypter} } func (s *StateStore) path(name string) string { return filepath.Join(s.dir, name+\".state\") } func (s *StateStore) Save(name string, state any) error { encrypted, err := s.crypter.Encrypt(state) if err != nil { return err } if err := os.MkdirAll(s.dir, 0755); err != nil { return err } return os.WriteFile(s.path(name), encrypted, 0600) } func (s *StateStore) Load(name string) (any, error) { data, err := os.ReadFile(s.path(name)) if err != nil { return nil, err } return s.crypter.Decrypt(data) } func (s *StateStore) Exists(name string) bool { _, err := os.Stat(s.path(name)) return err == nil }","s":"2.2 状态管理模块：StateStore","u":"/en/docs/note/design/microkernel/microkernel9","h":"#22-状态管理模块statestore","p":1204},{"i":1215,"t":"type MicroKernel struct { ... stateStore *StateStore } func NewMicroKernelWithState(store *StateStore) *MicroKernel { return &MicroKernel{ services: make(map[string]*serviceMeta), stateStore: store, logger: NewLogger(\"kernel\", INFO, os.Stdout), } }","s":"3.1 kernel 初始化集成StateStore","u":"/en/docs/note/design/microkernel/microkernel9","h":"#31-kernel-初始化集成statestore","p":1204},{"i":1217,"t":"// Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() // name 可以放在锁前面，优化性能 name := svc.Name() // 增加状态导入 // 如果使用的接口，这边就使用的接口方法 if k.stateStore != nil && k.stateStore.Exists(name) { // 查看服务是否支持状态导入 // 状态导入不要求每个服务必须实现 // 如果没有实现，就直接忽略 if importer, ok := svc.(Importable); ok { raw, err := k.stateStore.Load(name) if err != nil { return fmt.Errorf(\"state load failed: %w\\n\", err) } err = importer.ImportState(raw) if err != nil { return fmt.Errorf(\"state import failed: %w\\n\", err) } fmt.Printf(\"State migrated for service %s\\n\", name) } } if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil }","s":"3.2 注册服务时尝试自动加载状态","u":"/en/docs/note/design/microkernel/microkernel9","h":"#32-注册服务时尝试自动加载状态","p":1204},{"i":1219,"t":"func (k *MicroKernel) StopService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Stopped { return errors.New(\"service already stopped\") } // 增加状态导出判断 if exporter, ok := meta.svc.(Exportable); ok && k.stateStore != nil { if err := k.stateStore.Save(name, exporter.ExportState()); err == nil { fmt.Printf(\"State persisted for %s\\n\", name) } } if err := meta.svc.Stop(); err != nil { return err } meta.state = Stopped fmt.Println(\"Stopped:\", meta.svc.Name()) return nil }","s":"3.3 停止服务时，保存状态","u":"/en/docs/note/design/microkernel/microkernel9","h":"#33-停止服务时保存状态","p":1204},{"i":1221,"t":"func (k *MicroKernel) Listen(ctx context.Context) { // 间隔可以加在kernel的struct中，也可以使用方法来获取 ticker := time.NewTicker(2 * time.Second) for { select { case <-ctx.Done(): return case <-ticker.C: fmt.Println(\"Timed writing state\") if k.stateStore != nil { for name, meta := range k.services { if meta.state == Running { if exporter, ok := meta.svc.(Exportable); ok { if err := k.stateStore.Save(name, exporter.ExportState()); err == nil { fmt.Printf(\"State persisted for %s\\n\", name) } } } } }","s":"3.4 定时持久化状态","u":"/en/docs/note/design/microkernel/microkernel9","h":"#34-定时持久化状态","p":1204},{"i":1223,"t":"crypter := microkernel.NewAESCrypter([]byte(\"1234567890123456\")) store := microkernel.NewStateStore(\"./state\", crypter) // 1. 创建微内核 microKernel := microkernel.NewMicroKernel(store) // 增加加密存储","s":"4. main","u":"/en/docs/note/design/microkernel/microkernel9","h":"#4-main","p":1204},{"i":1225,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to echo: Hello, Log! {0 echo service handled from microKernel: Hello, Log!} [echo] stopping... Stopped old version of echo Encrypted state migrated for service echo [2025-04-26 19:47:00.801] [INFO] [echo] [echov2] starting... Started new version of echo [MicroKernel] Send Event to echo: Hello, Log! [echo] count is 10 {0 echo v2 service handled from microKernel: Hello, Log!} [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... Stopped: echo 查看完整代码","s":"4.1 运行结果","u":"/en/docs/note/design/microkernel/microkernel9","h":"#41-运行结果","p":1204},{"i":1227,"t":"面向对象编程(OOP)有几个核心设计原则，这些原则有助于创建灵活、可维护和可扩展的软件系统。以下是主要的OOP设计原则：","s":"面向对象编程中的设计原则","u":"/en/docs/note/design/oop_pinciple/principle","h":"","p":1226},{"i":1229,"t":"单一职责原则(SRP - Single Responsibility Principle) 一个类应该只有一个引起它变化的原因 每个类只负责一项职责 开闭原则(OCP - Open/Closed Principle) 软件实体(类、模块、函数等)应该对扩展开放，对修改关闭 通过抽象和继承实现新功能，而不是修改现有代码 里氏替换原则(LSP - Liskov Substitution Principle) 子类型必须能够替换它们的基类型 派生类不应改变基类的行为，只能扩展它 接口隔离原则(ISP - Interface Segregation Principle) 客户端不应被迫依赖它们不使用的接口 将大接口拆分为更小、更具体的接口 依赖倒置原则(DIP - Dependency Inversion Principle) 高层模块不应依赖低层模块，两者都应依赖抽象 抽象不应依赖细节，细节应依赖抽象","s":"SOLID原则","u":"/en/docs/note/design/oop_pinciple/principle","h":"#solid原则","p":1226},{"i":1231,"t":"组合优于继承原则 优先使用对象组合而不是类继承来重用功能 提高灵活性，减少类层次结构的复杂性 迪米特法则(最少知识原则 - Law of Demeter) 一个对象应该对其他对象有最少的了解 只与直接的朋友通信，减少类之间的耦合 DRY原则(Don't Repeat Yourself) 避免重复代码 将重复逻辑提取到公共方法或类中 KISS原则(Keep It Simple, Stupid) 保持设计简单直接 避免不必要的复杂性 YAGNI原则(You Aren't Gonna Need It) 不要添加当前不需要的功能 避免过度设计","s":"其他重要原则","u":"/en/docs/note/design/oop_pinciple/principle","h":"#其他重要原则","p":1226},{"i":1234,"t":"开闭原则(Open/Closed Principle, OCP) 是SOLID原则中的第二个原则，由Bertrand Meyer提出。其核心思想是： 软件实体（类、模块、函数等）应该对扩展开放，对修改关闭。 在Go语言中，这一原则主要通过**接口(interface)和组合(composition)**来实现。","s":"1. 开闭原则简介","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#1-开闭原则简介","p":1232},{"i":1236,"t":"对扩展开放：允许在不修改现有代码的情况下添加新功能 对修改关闭：现有代码应尽可能不被修改，以保持稳定性 抽象是关键：通过抽象建立灵活的基础结构","s":"2. OCP的核心概念","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#2-ocp的核心概念","p":1232},{"i":1239,"t":"// 支付方式接口 - 抽象层 type PaymentMethod interface { Pay(amount float64) error } // 信用卡支付实现 type CreditCardPayment struct{} func (c *CreditCardPayment) Pay(amount float64) error { fmt.Printf(\"支付 %.2f 元使用信用卡\\n\", amount) return nil } // 支付宝支付实现 type AlipayPayment struct{} func (a *AlipayPayment) Pay(amount float64) error { fmt.Printf(\"支付 %.2f 元使用支付宝\\n\", amount) return nil } // 支付处理器 - 对修改关闭 type PaymentProcessor struct { method PaymentMethod } func (p *PaymentProcessor) ProcessPayment(amount float64) error { return p.method.Pay(amount) }","s":"3.1 使用接口实现OCP","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#31-使用接口实现ocp","p":1232},{"i":1241,"t":"// 新增微信支付 - 扩展而非修改 type WeChatPayment struct{} func (w *WeChatPayment) Pay(amount float64) error { fmt.Printf(\"支付 %.2f 元使用微信支付\\n\", amount) return nil } // 使用方式 func main() { processor := &PaymentProcessor{method: &WeChatPayment{}} processor.ProcessPayment(100.50) }","s":"3.2 添加新支付方式（扩展）","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#32-添加新支付方式扩展","p":1232},{"i":1244,"t":"type PaymentType int const ( CreditCard PaymentType = iota Alipay ) // 直接依赖具体实现 func ProcessPayment(paymentType PaymentType, amount float64) error { switch paymentType { case CreditCard: fmt.Printf(\"支付 %.2f 元使用信用卡\\n\", amount) case Alipay: fmt.Printf(\"支付 %.2f 元使用支付宝\\n\", amount) default: return fmt.Errorf(\"不支持的支付方式\") } return nil } 问题：每次新增支付方式都需要修改ProcessPayment函数","s":"4.1 违反OCP的代码","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#41-违反ocp的代码","p":1232},{"i":1246,"t":"// 使用接口抽象 type PaymentMethod interface { Pay(amount float64) error } // 注册支付方式的处理器 type PaymentHandler struct { methods map[string]PaymentMethod } func (h *PaymentHandler) Register(name string, method PaymentMethod) { h.methods[name] = method } func (h *PaymentHandler) Process(name string, amount float64) error { if method, ok := h.methods[name]; ok { return method.Pay(amount) } return fmt.Errorf(\"支付方式未注册\") }","s":"4.2 重构为符合OCP的代码","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#42-重构为符合ocp的代码","p":1232},{"i":1249,"t":"type Server struct { host string port int timeout time.Duration } type Option func(*Server) func WithHost(host string) Option { return func(s *Server) { s.host = host } } func WithPort(port int) Option { return func(s *Server) { s.port = port } } func NewServer(opts ...Option) *Server { s := &Server{ host: \"localhost\", port: 8080, timeout: 30 * time.Second, } for _, opt := range opts { opt(s) } return s }","s":"5.1 函数选项模式(Functional Options)","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#51-函数选项模式functional-options","p":1232},{"i":1251,"t":"type Handler func(http.ResponseWriter, *http.Request) func LoggingMiddleware(next Handler) Handler { return func(w http.ResponseWriter, r *http.Request) { log.Printf(\"请求开始: %s %s\", r.Method, r.URL.Path) next(w, r) log.Printf(\"请求结束: %s %s\", r.Method, r.URL.Path) } } func AuthMiddleware(next Handler) Handler { return func(w http.ResponseWriter, r *http.Request) { if r.Header.Get(\"Authorization\") == \"\" { http.Error(w, \"未授权\", http.StatusUnauthorized) return } next(w, r) } }","s":"5.2 中间件模式","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#52-中间件模式","p":1232},{"i":1253,"t":"支付系统（如上面的示例） 日志系统（文件日志、控制台日志、网络日志等） 数据存储（MySQL、MongoDB、Redis等） 通知系统（邮件、短信、微信通知等） 中间件管道（Web中间件、RPC拦截器等）","s":"6. OCP的实际应用场景","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#6-ocp的实际应用场景","p":1232},{"i":1255,"t":"控制台输出 文件输出 未来可以轻松添加网络日志","s":"7. OCP的日志系统","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#7-ocp的日志系统","p":1232},{"i":1257,"t":"7.1.1 定义日志接口（抽象层）​ // Logger 日志接口 - 核心抽象 type Logger interface { Log(level string, message string) error Close() error } 7.1.2 实现具体日志输出​ 控制台日志输出 // ConsoleLogger 控制台日志实现 type ConsoleLogger struct { // 可以添加需要的字段，如是否彩色输出等 } func NewConsoleLogger() *ConsoleLogger { return &ConsoleLogger{} } func (c *ConsoleLogger) Log(level string, message string) error { _, err := fmt.Printf(\"[%s] %s\\n\", level, message) return err } func (c *ConsoleLogger) Close() error { // 控制台日志无需关闭资源 return nil } 文件日志输出 // FileLogger 文件日志实现 type FileLogger struct { file *os.File } func NewFileLogger(filename string) (*FileLogger, error) { file, err := os.OpenFile(filename, os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0644) if err != nil { return nil, err } return &FileLogger{file: file}, nil } func (f *FileLogger) Log(level string, message string) error { _, err := fmt.Fprintf(f.file, \"[%s] %s %s\\n\", time.Now().Format(\"2006-01-02 15:04:05\"), level, message) return err } func (f *FileLogger) Close() error { return f.file.Close() }","s":"7.1 基础设计","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#71-基础设计","p":1232},{"i":1259,"t":"// CompositeLogger 组合多个日志输出 type CompositeLogger struct { loggers []Logger } func NewCompositeLogger(loggers ...Logger) *CompositeLogger { return &CompositeLogger{loggers: loggers} } func (c *CompositeLogger) Log(level string, message string) error { for _, logger := range c.loggers { if err := logger.Log(level, message); err != nil { return err } } return nil } func (c *CompositeLogger) Close() error { for _, logger := range c.loggers { if err := logger.Close(); err != nil { return err } } return nil }","s":"7.2 组合日志器（支持多种输出）","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#72-组合日志器支持多种输出","p":1232},{"i":1261,"t":"// LoggerType 定义日志类型 type LoggerType string const ( LoggerConsole LoggerType = \"console\" LoggerFile LoggerType = \"file\" // 未来可以添加 LoggerNetwork ) // LoggerConfig 日志配置 type LoggerConfig struct { Type LoggerType FilePath string // 仅文件日志需要 } // NewLoggerFromConfig 根据配置创建日志器 func NewLoggerFromConfig(config LoggerConfig) (Logger, error) { switch config.Type { case LoggerConsole: return NewConsoleLogger(), nil case LoggerFile: return NewFileLogger(config.FilePath) default: return nil, fmt.Errorf(\"未知的日志类型: %s\", config.Type) } }","s":"7.3 使用工厂方法创建日志器","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#73-使用工厂方法创建日志器","p":1232},{"i":1263,"t":"未来需要添加网络日志时，只需新增实现，无需修改现有代码： // NetworkLogger 网络日志实现 type NetworkLogger struct { endpoint string client *http.Client } func NewNetworkLogger(endpoint string) *NetworkLogger { return &NetworkLogger{ endpoint: endpoint, client: &http.Client{Timeout: 5 * time.Second}, } } func (n *NetworkLogger) Log(level string, message string) error { data := map[string]string{ \"level\": level, \"message\": message, \"time\": time.Now().Format(time.RFC3339), } jsonData, _ := json.Marshal(data) resp, err := n.client.Post(n.endpoint, \"application/json\", bytes.NewBuffer(jsonData)) if err != nil { return err } defer resp.Body.Close() if resp.StatusCode >= 400 { return fmt.Errorf(\"日志服务器返回错误状态码: %d\", resp.StatusCode) } return nil } func (n *NetworkLogger) Close() error { // 可以在这里关闭长连接等资源 return nil }","s":"7.4 添加网络日志输出（扩展示例）","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#74-添加网络日志输出扩展示例","p":1232},{"i":1265,"t":"func main() { // 创建控制台日志器 consoleLogger := NewConsoleLogger() // 创建文件日志器 fileLogger, err := NewFileLogger(\"app.log\") if err != nil { panic(err) } // 创建组合日志器 compositeLogger := NewCompositeLogger(consoleLogger, fileLogger) // 使用日志 compositeLogger.Log(\"INFO\", \"应用程序启动\") compositeLogger.Log(\"WARN\", \"这是一个警告信息\") compositeLogger.Log(\"ERROR\", \"发生了一个错误\") // 关闭所有日志器 if err := compositeLogger.Close(); err != nil { fmt.Printf(\"关闭日志器时出错: %v\\n\", err) } // 未来添加网络日志 networkLogger := NewNetworkLogger(\"http://log-server.example.com/log\") extendedLogger := NewCompositeLogger(consoleLogger, fileLogger, networkLogger) extendedLogger.Log(\"INFO\", \"这条日志会输出到控制台、文件和网络\") extendedLogger.Close() }","s":"7.5 完整使用示例","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#75-完整使用示例","p":1232},{"i":1267,"t":"OCP的核心是通过抽象来隔离变化 在Go中主要使用接口和组合来实现OCP 函数选项模式和中间件模式是实践OCP的优雅方式 平衡原则：不要过度设计，只为预期的变化做抽象 好的设计应该像插件系统一样工作 - 通过添加新代码而非修改现有代码来扩展功能。","s":"8. 总结","u":"/en/docs/note/design/oop_pinciple/ocp","h":"#8-总结","p":1232},{"i":1270,"t":"使用channel 在 goroutine 间进行通信和同步操作 package main import ( \"fmt\" \"time\" ) // SetRulesRequest 表示设置规则的请求结构 type SetRulesRequest struct { NewRules []string Response chan error // 用于同步返回是否成功 } // Aggregator 用于管理规则并支持并发设置 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} } // SetRules 是向 aggregator 发送新规则的接口 func (a *Aggregator) SetRules(r []string) error { req := &SetRulesRequest{ NewRules: r, Response: make(chan error), } a.setRulesChan <- req return <-req.Response // 等待响应结束 } // Run 启动 aggregator 的工作协程 func (a *Aggregator) Run() { for { select { case req := <-a.setRulesChan: a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) req.Response <- nil // 成功响应 case <-a.stopChan: return } } } // Stop 关闭 aggregator 的后台协程 func (a *Aggregator) Stop() { close(a.stopChan) } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), } go aggregator.Run() // 模拟使用 time.Sleep(500 * time.Millisecond) aggregator.SetRules([]string{\"a\", \"b\", \"c\"}) aggregator.SetRules([]string{\"d\", \"e\", \"f\"}) // 停止后台协程 aggregator.Stop() } 🔍 说明重点： 通信模型：调用者通过 SetRules 向 Aggregator 的 channel 发送数据，然后通过一个 Response channel 同步等待执行结果。 响应式设计：Aggregator 处理请求后通过 channel 回复，避免竞态。 易扩展性：你可以将更多操作（如查询、追加等）封装成不同的 request 结构体，并通过不同 channel 或类型区分处理。","s":"1. channel 交互","u":"/en/docs/note/design/multi_goroutine","h":"#1-channel-交互","p":1268},{"i":1273,"t":"发送端（ch <- v）向已关闭 channel 发送数据： 会 panic！ 接收端（<-chan）读取已关闭 channel： 不会 panic， 立即返回零值 第二个返回值判断是否关闭。即：v, ok := <-ch，如果 ok == false，说明 channel 已关闭。 不判断。即: v := <-ch，立即返回零值，无法判断 channel 是否关闭。 即：v, ok := <-ch，如果 ok == false，说明 channel 已关闭。 举例 package main import ( \"log\" \"time\" ) func main() { //ch := make(chan int, 2) ch := make(chan int) go func() { ch <- 20 time.Sleep(1 * time.Second) defer close(ch) }() // 只接收数据，不检查通道状态 rules := <-ch log.Println(\"Rules:\", rules) // 输出：14:47:31 Rules: 20 rules = <-ch log.Println(\"Rules:\", rules) // 输出：14:47:32 Rules: 0 rules = <-ch log.Println(\"Rules:\", rules) // 输出：14:47:32 Rules: 0 // 读取时检查通道是否仍然开放 rules, open := <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:39 Rules: 20 Open: true rules, open = <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:40 Rules: 0 Open: false rules, open = <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:40 Rules: 0 Open: false }","s":"2.1. 理解 channel 行为","u":"/en/docs/note/design/multi_goroutine","h":"#21-理解-channel-行为","p":1268},{"i":1275,"t":"✅ 特性亮点： 安全关闭 goroutine： setRulesChan 和 stopChan 都支持关闭，防止死锁或 panic。 带 ok 判断防止接收已关闭的 channel 导致数据为 nil。 封装清晰： Run() 执行逻辑清晰，Stop() 方法负责安全退出和资源清理。 package main import ( \"fmt\" \"time\" ) // 请求结构体，设置规则并通过 Response 返回结果 type SetRulesRequest struct { NewRules []string Response chan error } // 聚合器结构 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} doneChan chan struct{} // 通知主线程已退出 } // Run 启动 Aggregator 的工作协程 func (a *Aggregator) Run() { defer close(a.doneChan) // 通知主线程：后台协程已退出 for { select { case req, ok := <-a.setRulesChan: if !ok { fmt.Println(\"setRulesChan closed, exiting Run()\") return } a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) // 响应调用者 req.Response <- nil case <-a.stopChan: fmt.Println(\"Received stop signal, exiting Run()\") return } } } // SetRules 发送规则请求 func (a *Aggregator) SetRules(r []string) error { req := &SetRulesRequest{ NewRules: r, Response: make(chan error), } select { case a.setRulesChan <- req: return <-req.Response case <-a.stopChan: return fmt.Errorf(\"aggregator is shutting down\") } } // Stop 关闭 aggregator，确保 goroutine 优雅退出 func (a *Aggregator) Stop() { close(a.stopChan) // 通知退出 close(a.setRulesChan) // 防止阻塞在 <-setRulesChan <-a.doneChan // 等待后台处理完成 fmt.Println(\"Aggregator stopped gracefully\") } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), doneChan: make(chan struct{}), } go aggregator.Run() time.Sleep(500 * time.Millisecond) aggregator.SetRules([]string{\"a\", \"b\", \"c\"}) aggregator.SetRules([]string{\"x\", \"y\", \"z\"}) aggregator.Stop() }","s":"2.2. 使用判断channel 优化示例","u":"/en/docs/note/design/multi_goroutine","h":"#22-使用判断channel-优化示例","p":1268},{"i":1277,"t":"🧠 为啥用 context.Context？ 防止调用者被永久阻塞：例如 aggregator goroutine 迟迟不响应。 可设置 timeout 或 cancel，适合服务端编程模型。 可组合多种取消方式（定时取消 + 主动取消）。 ✅ 增强功能： SetRules 支持超时 / 取消（避免卡死等待响应）。 context.Context 控制响应等待过程。 依然保留 graceful shutdown 支持（Stop()）。 package main import ( \"context\" \"fmt\" \"time\" ) // 请求结构体，设置规则并通过 Response 返回结果 type SetRulesRequest struct { NewRules []string Response chan error } // 聚合器结构体 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} doneChan chan struct{} } // Run 启动 aggregator 的工作协程 func (a *Aggregator) Run() { defer close(a.doneChan) for { select { case req, ok := <-a.setRulesChan: if !ok { fmt.Println(\"setRulesChan closed, exiting Run()\") return } a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) req.Response <- nil case <-a.stopChan: fmt.Println(\"Received stop signal, exiting Run()\") return } } } // SetRulesCtx 支持 context 超时 / 取消控制 func (a *Aggregator) SetRulesCtx(ctx context.Context, rules []string) error { req := &SetRulesRequest{ NewRules: rules, Response: make(chan error, 1), // 非阻塞回写 } // 模拟耗时操作 time.Sleep(2 * time.Millisecond) select { case a.setRulesChan <- req: // 等待响应 or context 超时 select { case err := <-req.Response: return err case <-ctx.Done(): return fmt.Errorf(\"set rules timeout or cancelled: %w\", ctx.Err()) } case <-a.stopChan: return fmt.Errorf(\"aggregator shutting down\") case <-ctx.Done(): return fmt.Errorf(\"send timeout or cancelled: %w\", ctx.Err()) } } // Stop 优雅关闭 func (a *Aggregator) Stop() { close(a.stopChan) close(a.setRulesChan) <-a.doneChan fmt.Println(\"Aggregator stopped gracefully\") } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), doneChan: make(chan struct{}), } go aggregator.Run() // 模拟正常调用 ctx := context.Background() aggregator.SetRulesCtx(ctx, []string{\"a\", \"b\", \"c\"}) // 模拟带 timeout 的调用（1ms 会超时） ctxTimeout, cancel := context.WithTimeout(context.Background(), 1*time.Millisecond) defer cancel() err := aggregator.SetRulesCtx(ctxTimeout, []string{\"should\", \"fail\", \"fast\"}) if err != nil { fmt.Println(\"Timeout err:\", err) } // 正常调用 ctx2, cancel2 := context.WithTimeout(context.Background(), 2*time.Second) defer cancel2() aggregator.SetRulesCtx(ctx2, []string{\"x\", \"y\", \"z\"}) aggregator.Stop() }","s":"3. 支持 context.Context","u":"/en/docs/note/design/multi_goroutine","h":"#3-支持-contextcontext","p":1268},{"i":1279,"t":"CommandHandler 模式是命令模式（Command Pattern）的一种实现方式，常用于将请求（命令）与处理逻辑解耦，从而提高系统的灵活性和可扩展性。它通过将命令封装为对象，并由专门的 CommandHandler 负责执行这些命令，使得系统能够更轻松地管理命令的生命周期、支持撤销/重做操作、实现事务管理或异步处理。 核心概念 Command（命令） 定义一个接口或抽象类，声明执行命令的方法（如 execute()）。 具体命令类实现该接口，封装请求的具体逻辑。 CommandHandler（命令处理器） 负责接收命令对象并调用其 execute() 方法。 可以扩展为支持命令的调度、排队、事务管理或异步执行。 Invoker（调用者） 触发命令的对象，通常持有对 CommandHandler 的引用。 Receiver（接收者） 执行命令实际逻辑的对象，命令对象通过依赖注入或组合的方式与接收者交互。 🎯 目标： 支持不同类型请求的统一处理通道 类似“命令模式”：将操作封装为一个结构体 可扩展、可测试、context 支持、graceful shutdown ✅ 架构设计： +--------------------+ | CommandHandler | |--------------------| | chan Command |<----------- Send() | goroutine: dispatch| (通用异步接口) +--------------------+ | V +--------------------+ | Command (接口) |<-- 多种请求实现： | Execute(context) | - SetRulesCommand +--------------------+ - GetRulesCommand - AppendRulesCommand ✨ 通用实现（含 SetRules 和 GetRules）： package main import ( \"context\" \"errors\" \"fmt\" ) // Command 是所有请求的接口 type Command interface { Execute(ctx context.Context, h *Handler) Done() <-chan struct{} Err() error } // Handler 管理状态和调度命令执行 type Handler struct { rules []string cmdChan chan Command stop chan struct{} done chan struct{} } // 基础命令结构 type baseCommand struct { err error done chan struct{} } func (c *baseCommand) Done() <-chan struct{} { return c.done } func (c *baseCommand) Err() error { return c.err } // SetRulesCommand 设置规则 type SetRulesCommand struct { baseCommand NewRules []string } func (c *SetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) h.rules = c.NewRules fmt.Println(\"SetRulesCommand executed:\", h.rules) } // GetRulesCommand 获取规则 type GetRulesCommand struct { baseCommand Result chan []string } func (c *GetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) c.Result <- h.rules close(c.Result) } func NewHandler() *Handler { return &Handler{ rules: []string{}, cmdChan: make(chan Command), stop: make(chan struct{}), done: make(chan struct{}), } } // Run 启动处理循环 func (h *Handler) Run() { defer close(h.done) for { select { case cmd := <-h.cmdChan: ctx := context.Background() // 可支持 ctx 控制 cmd.Execute(ctx, h) case <-h.stop: return } } } // Send 提交命令（带超时支持） func (h *Handler) Send(ctx context.Context, cmd Command) error { select { case h.cmdChan <- cmd: select { case <-cmd.Done(): return cmd.Err() case <-ctx.Done(): return ctx.Err() } case <-h.stop: return errors.New(\"handler is stopped\") case <-ctx.Done(): return ctx.Err() } } // Stop 优雅关闭 func (h *Handler) Stop() { close(h.stop) <-h.done } func main() { handler := NewHandler() go handler.Run() ctx := context.Background() setCmd := &SetRulesCommand{ baseCommand: baseCommand{done: make(chan struct{})}, NewRules: []string{\"a\", \"b\", \"c\"}, } handler.Send(ctx, setCmd) // 获取规则 getCmd := &GetRulesCommand{ baseCommand: baseCommand{done: make(chan struct{})}, Result: make(chan []string, 1), } handler.Send(ctx, getCmd) fmt.Println(\"Current rules:\", <-getCmd.Result) handler.Stop() } ✅ 泛型式响应的 ResultCommand[T] 设计 实现目标： 命令支持携带强类型返回值（例如：[]string、int、bool 等）； 支持 context 控制； 解耦命令发送与执行，类型安全 的异步响应； 易扩展、结构清晰。 package main import ( \"context\" \"errors\" \"fmt\" \"time\" ) // 通用 Command 接口 type Command interface { Execute(context.Context, *Handler) Done() <-chan struct{} Err() error } // Handler：命令处理器 type Handler struct { rules []string cmdChan chan Command stop chan struct{} done chan struct{} } func NewHandler() *Handler { return &Handler{ rules: []string{}, cmdChan: make(chan Command), stop: make(chan struct{}), done: make(chan struct{}), } } func (h *Handler) Run() { defer close(h.done) for { select { case cmd := <-h.cmdChan: cmd.Execute(context.Background(), h) case <-h.stop: return } } } func (h *Handler) Stop() { close(h.stop) <-h.done } // Send 支持泛型命令发送 func (h *Handler) Send(ctx context.Context, cmd Command) error { select { case h.cmdChan <- cmd: select { case <-cmd.Done(): return cmd.Err() case <-ctx.Done(): return ctx.Err() } case <-ctx.Done(): return ctx.Err() case <-h.stop: return errors.New(\"handler stopped\") } } // 泛型命令 ResultCommand[T] // -------------------------------- type ResultCommand[T any] struct { result T err error done chan struct{} resultC chan T } func NewResultCommand[T any]() *ResultCommand[T] { return &ResultCommand[T]{ done: make(chan struct{}), resultC: make(chan T, 1), // 非阻塞写入 } } func (c *ResultCommand[T]) Done() <-chan struct{} { return c.done } func (c *ResultCommand[T]) Err() error { return c.err } // Wait 等待结果 func (c *ResultCommand[T]) Wait(ctx context.Context) (T, error) { select { case <-ctx.Done(): var zero T return zero, ctx.Err() case res := <-c.resultC: return res, c.err } } // -------------------------------- // 示例命令：GetRulesCommand 返回 []string // -------------------------------- type GetRulesCommand struct { *ResultCommand[[]string] } func NewGetRulesCommand() *GetRulesCommand { return &GetRulesCommand{ ResultCommand: NewResultCommand[[]string](), } } func (c *GetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) c.result = h.rules c.resultC <- h.rules } // -------------------------------- // 示例命令：SetRulesCommand // -------------------------------- type SetRulesCommand struct { newRules []string done chan struct{} err error } func NewSetRulesCommand(rules []string) *SetRulesCommand { return &SetRulesCommand{ newRules: rules, done: make(chan struct{}), } } func (c *SetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) h.rules = c.newRules fmt.Println(\"Rules updated:\", h.rules) } func (c *SetRulesCommand) Done() <-chan struct{} { return c.done } func (c *SetRulesCommand) Err() error { return c.err } // 🧪 Main 演示：SetRules 和 GetRules 泛型返回 func main() { h := NewHandler() go h.Run() ctx := context.Background() // Set rules setCmd := NewSetRulesCommand([]string{\"x\", \"y\", \"z\"}) _ = h.Send(ctx, setCmd) // Get rules getCmd := NewGetRulesCommand() _ = h.Send(ctx, getCmd) rules, err := getCmd.Wait(ctx) if err != nil { fmt.Println(\"GetRules error:\", err) } else { fmt.Println(\"Got rules:\", rules) } // 超时测试 timeoutCtx, cancel := context.WithTimeout(ctx, 1*time.Millisecond) defer cancel() getCmd2 := NewGetRulesCommand() _ = h.Send(timeoutCtx, getCmd2) rules2, err := getCmd2.Wait(timeoutCtx) fmt.Println(\"With timeout:\", rules2, err) h.Stop() } 输出示例： Rules updated: [x y z] Got rules: [x y z] With timeout: [] context deadline exceeded 📦 可扩展示例命令 GetStatsCommand struct{ ResultCommand[map[string]int] } FlushToDiskCommand struct{ ResultCommand[bool] } LoadConfigCommand struct{ ResultCommand[Config] } AppendRulesCommand struct{ Rules []string }","s":"4. CommandHandler 模式","u":"/en/docs/note/design/multi_goroutine","h":"#4-commandhandler-模式","p":1268},{"i":1282,"t":"单一职责原则(Single Responsibility Principle, SRP) 是SOLID原则中的第一个原则，由Robert C. Martin提出。其核心思想是： 一个类或模块应该只有一个引起它变化的原因。换句话说，一个类或模块应该只负责一项职责。 在Go语言中，这一原则主要应用于struct和interface的设计。","s":"1. 概述","u":"/en/docs/note/design/oop_pinciple/srp","h":"#1-概述","p":1280},{"i":1285,"t":"提高可维护性：修改一个功能不会影响其他不相关的功能 降低复杂度：每个结构体/接口只做一件事，更易于理解 增强可测试性：单一职责的组件更容易测试 提高复用性：细粒度的组件可以在更多场景中被复用","s":"优点：","u":"/en/docs/note/design/oop_pinciple/srp","h":"#优点","p":1280},{"i":1287,"t":"代码难以理解和维护 修改一个功能可能意外破坏其他功能 测试困难 难以复用","s":"违反SRP的后果：","u":"/en/docs/note/design/oop_pinciple/srp","h":"#违反srp的后果","p":1280},{"i":1290,"t":"// 违反SRP的例子：UserManager承担了太多职责 type UserManager struct { db *sql.DB } func (um *UserManager) CreateUser(user User) error { // 创建用户逻辑 _, err := um.db.Exec(\"INSERT INTO users (...) VALUES (...)\") return err } func (um *UserManager) SendWelcomeEmail(user User) error { // 发送欢迎邮件逻辑 return sendEmail(user.Email, \"Welcome!\", \"Welcome to our platform!\") } func (um *UserManager) GenerateReport() ([]byte, error) { // 生成用户报告逻辑 rows, err := um.db.Query(\"SELECT * FROM users\") // ...处理rows生成报告 return reportData, nil } 问题分析： 用户管理 邮件发送 报告生成 这三个完全不相关的功能被耦合在同一个结构体中","s":"3.1 违反SRP的例子","u":"/en/docs/note/design/oop_pinciple/srp","h":"#31-违反srp的例子","p":1280},{"i":1292,"t":"// 用户存储职责 type UserRepository struct { db *sql.DB } func (ur *UserRepository) Create(user User) error { _, err := ur.db.Exec(\"INSERT INTO users (...) VALUES (...)\") return err } func (ur *UserRepository) GetAll() ([]User, error) { rows, err := ur.db.Query(\"SELECT * FROM users\") // ...处理rows返回用户列表 return users, nil } // 邮件服务职责 type EmailService struct { smtpServer string } func (es *EmailService) SendWelcomeEmail(user User) error { return sendEmail(user.Email, \"Welcome!\", \"Welcome to our platform!\") } // 报告生成职责 type ReportGenerator struct { userRepo *UserRepository } func (rg *ReportGenerator) GenerateUserReport() ([]byte, error) { users, err := rg.userRepo.GetAll() // ...基于用户数据生成报告 return reportData, nil } 改进点： 将原来的UserManager拆分为三个独立的组件 每个组件只负责一项明确的职责 组件之间通过依赖注入协作","s":"3.2 遵循SRP的改进版本","u":"/en/docs/note/design/oop_pinciple/srp","h":"#32-遵循srp的改进版本","p":1280},{"i":1295,"t":"// 小而专注的接口 type UserStorer interface { Create(user User) error GetByID(id int) (*User, error) } type EmailSender interface { Send(to, subject, body string) error }","s":"4.1 接口设计","u":"/en/docs/note/design/oop_pinciple/srp","h":"#41-接口设计","p":1280},{"i":1297,"t":"type UserService struct { repo UserRepository email EmailService report ReportGenerator } func (us *UserService) RegisterNewUser(user User) error { if err := us.repo.Create(user); err != nil { return err } return us.email.SendWelcomeEmail(user) }","s":"4.2 组合代替继承","u":"/en/docs/note/design/oop_pinciple/srp","h":"#42-组合代替继承","p":1280},{"i":1299,"t":"// 不好的例子：函数做太多事情 func processUserData(data []byte) (User, error) { // 1. 验证数据 // 2. 解析数据 // 3. 保存到数据库 // 4. 发送通知 } // 好的例子：拆分为多个单一职责的函数 func validateUserData(data []byte) error {} func parseUserData(data []byte) (User, error) {} func saveUser(user User) error {} func notifyUserCreated(user User) error {}","s":"4.3 函数职责单一","u":"/en/docs/note/design/oop_pinciple/srp","h":"#43-函数职责单一","p":1280},{"i":1302,"t":"当一个结构体/接口变得庞大时 当修改一个功能会影响不相关功能时 当难以给结构体起一个准确的名称时(如UserManagerAndReportGenerator)","s":"应该应用SRP的情况：","u":"/en/docs/note/design/oop_pinciple/srp","h":"#应该应用srp的情况","p":1280},{"i":1304,"t":"对于简单的小型项目 对于确实紧密相关的功能 当拆分会导致不必要的复杂性时","s":"不必过度应用：","u":"/en/docs/note/design/oop_pinciple/srp","h":"#不必过度应用","p":1280},{"i":1306,"t":"SRP是编写可维护、可扩展代码的基础 在Go中，通过小而专注的结构体和接口来实现SRP 组合优于继承，依赖注入是实现SRP的好帮手 合理应用SRP，但避免过度设计 记住：让一个结构体/接口只为一个改变的理由而存在。","s":"6. 总结","u":"/en/docs/note/design/oop_pinciple/srp","h":"#6-总结","p":1280},{"i":1309,"t":"报错如下：​ gnutls_handshake() failed: The TLS connection was non-properly terminated. 解决方法：​ 关闭代理设置 unset all_proxy unset http_proxy unset https_proxy 排查方法：​ 报错是tls相关，猜测原因如下： 证书问题：过期。。。 协议或加密套不匹配 网络问题 证书问题排查： 通过浏览器查看证书信息，看证书是否受信任。 使用openssl s_client -connect <server>:<port> -showcerts 查看证书信息 设置调试日志排查 启用GnuTLS 的调试日志，查看详细的握手过程： export GNUTLS_DEBUG_LEVEL=3 # 使用`gnutls-cli -p <port> <server> -V` 通过关闭ssl认证测试是否可以下载 GIT_SSL_NO_VERIFY=1 git clone http:gitrepo 通过关闭所有代理，测试是否是代理导致的网络问题 显示关闭代理可以下载。也可以通过ssh来下载。ssh可以规避该问题。","s":"1. tls 连接错误","u":"/en/docs/note/git/git_err","h":"#1-tls-连接错误","p":1307},{"i":1312,"t":"os/exec 包提供了运行外部命令的方法，允许 Go 程序执行系统命令并与之交互。","s":"1. os/exec 包简介","u":"/en/docs/note/golang/cmd","h":"#1-osexec-包简介","p":1310},{"i":1314,"t":"exec.Command 用于创建一个代表外部命令的 Cmd 结构。","s":"2. exec.Command 基本用法","u":"/en/docs/note/golang/cmd","h":"#2-execcommand-基本用法","p":1310},{"i":1316,"t":"package main import ( \"fmt\" \"os/exec\" ) func main() { cmd := exec.Command(\"ls\", \"-l\") // 在 Linux/macOS 上列出当前目录内容 // 获取正确和错误输出 output, err := cmd.CombinedOutput() if err != nil { fmt.Println(\"Error:\", err) return } fmt.Println(string(output)) }","s":"2.1 获取stdout和stderr","u":"/en/docs/note/golang/cmd","h":"#21-获取stdout和stderr","p":1310},{"i":1318,"t":"package main import ( \"fmt\" \"os/exec\" ) func main() { cmd := exec.Command(\"ls\", \"-l\") output, err := cmd.Output() if err != nil { fmt.Println(\"Error:\", err) return } fmt.Println(\"Output:\", string(output)) }","s":"2.2 只获取stdout","u":"/en/docs/note/golang/cmd","h":"#22-只获取stdout","p":1310},{"i":1321,"t":"package main import ( \"bytes\" \"fmt\" \"os/exec\" ) func main() { cmd := exec.Command(\"echo\", \"Hello, World!\") var out bytes.Buffer cmd.Stdout = &out if err := cmd.Run(); err != nil { fmt.Println(\"Error:\", err) } fmt.Println(\"Output:\", out.String()) }","s":"3.1 使用cmd.Stdout","u":"/en/docs/note/golang/cmd","h":"#31-使用cmdstdout","p":1310},{"i":1323,"t":"StdoutPipe 允许我们以流式方式读取命令的标准输出。 package main import ( \"bufio\" \"fmt\" \"os/exec\" ) func main() { cmd := exec.Command(\"ping\", \"baidu.com\", \"-c\", \"30\") stdout, err := cmd.StdoutPipe() if err != nil { fmt.Println(\"Error creating StdoutPipe:\", err) return } if err := cmd.Start(); err != nil { fmt.Println(\"Error starting command:\", err) return } scanner := bufio.NewScanner(stdout) for scanner.Scan() { fmt.Println(\"Output line:\", scanner.Text()) } if err := cmd.Wait(); err != nil { fmt.Println(\"Error waiting for command:\", err) } }","s":"3.2 使用 StdoutPipe","u":"/en/docs/note/golang/cmd","h":"#32-使用-stdoutpipe","p":1310},{"i":1325,"t":"package main import ( \"bytes\" \"fmt\" \"os/exec\" ) func main() { cmd := exec.Command(\"cat\") var out bytes.Buffer cmd.Stdout = &out cmd.Stdin = bytes.NewBufferString(\"Hello from stdin!\") if err := cmd.Run(); err != nil { fmt.Println(\"Error:\", err) } fmt.Println(\"Output:\", out.String()) }","s":"3.3 传递输入 (stdin)","u":"/en/docs/note/golang/cmd","h":"#33-传递输入-stdin","p":1310},{"i":1327,"t":"cmd := exec.Command(\"printenv\") cmd.Env = append(cmd.Env, \"MY_VAR=HelloWorld\")","s":"3.4 设置环境变量","u":"/en/docs/note/golang/cmd","h":"#34-设置环境变量","p":1310},{"i":1329,"t":"package main import ( \"context\" \"fmt\" \"os/exec\" \"time\" ) func main() { ctx, cancel := context.WithTimeout(context.Background(), 2*time.Second) defer cancel() cmd := exec.CommandContext(ctx, \"sleep\", \"5\") if err := cmd.Run(); err != nil { fmt.Println(\"Command timed out or failed:\", err) } }","s":"3.5 运行带超时的命令","u":"/en/docs/note/golang/cmd","h":"#35-运行带超时的命令","p":1310},{"i":1331,"t":"package utils import ( \"os\" \"os/exec\" \"strings\" ) // Run executes a shell command without capturing its output. func Run(command string) error { cmd := prepareCommand(command) return cmd.Run() } // RunWithOutput executes a shell command and returns its combined stdout and stderr output. func RunWithOutput(command string) ([]byte, error) { cmd := prepareCommand(command) return cmd.CombinedOutput() } // RunWithExitCode executes a shell command and returns its output along with the exit code. func RunWithExitCode(command string) ([]byte, int, error) { cmd := prepareCommand(command) output, err := cmd.CombinedOutput() if err != nil { if exitErr, ok := err.(*exec.ExitError); ok { return output, exitErr.ExitCode(), err } return output, -1, err } return output, 0, nil } // prepareCommand initializes an *exec.Cmd with environment variables. func prepareCommand(command string) *exec.Cmd { args := strings.Fields(command) if len(args) == 0 { return exec.Command(\"\") // 处理空字符串情况，避免 panic } cmd := exec.Command(args[0], args[1:]...) cmd.Env = append(os.Environ(), \"LC_ALL=C\", \"LANG=C\") return cmd }","s":"3.6 增加错误判断","u":"/en/docs/note/golang/cmd","h":"#36-增加错误判断","p":1310},{"i":1333,"t":"package main // echo \"hello world!\" | grep World import ( \"bytes\" \"fmt\" \"os/exec\" ) func main() { cmd1 := exec.Command(\"echo\", \"Hello, World!\") cmd2 := exec.Command(\"grep\", \"World\") // 创建管道 pipe, err := cmd1.StdoutPipe() if err != nil { fmt.Println(\"Error creating pipe:\", err) return } cmd2.Stdin = pipe var out bytes.Buffer cmd2.Stdout = &out // 启动第一个命令 if err := cmd1.Start(); err != nil { fmt.Println(\"Error starting cmd1:\", err) return } // 启动第二个命令 if err := cmd2.Start(); err != nil { fmt.Println(\"Error starting cmd2:\", err) return } // 等待所有命令完成 if err := cmd1.Wait(); err != nil { fmt.Println(\"Error waiting for cmd1:\", err) return } if err := cmd2.Wait(); err != nil { fmt.Println(\"Error waiting for cmd2:\", err) return } fmt.Println(\"Filtered Output:\", out.String()) }","s":"3.7 使用管道连接多个命令","u":"/en/docs/note/golang/cmd","h":"#37-使用管道连接多个命令","p":1310},{"i":1335,"t":"exec.Command 用于创建并运行外部命令。 Stdout 和 Stderr 可以用于捕获命令输出。 StdoutPipe 适用于流式读取命令输出。 Output() 仅获取标准输出，而 CombinedOutput() 同时获取标准输出和标准错误。 Stdin 可以用于传递输入数据。 exec.CommandContext 可用于超时控制。 os/exec 包适用于需要在 Go 代码中执行外部命令的场景，例如自动化任务、系统管理和数据处理。","s":"4. 结论","u":"/en/docs/note/golang/cmd","h":"#4-结论","p":1310},{"i":1338,"t":"bcrypt 是一种安全的密码哈希算法，适用于存储用户密码，防止明文泄露。Golang 提供 golang.org/x/crypto/bcrypt 包来简化 bcrypt 的使用。","s":"1. 概述","u":"/en/docs/note/golang/bcrypt","h":"#1-概述","p":1336},{"i":1340,"t":"bcrypt 属于 Go 的扩展库，需要手动安装： go get golang.org/x/crypto/bcrypt","s":"2. 安装","u":"/en/docs/note/golang/bcrypt","h":"#2-安装","p":1336},{"i":1343,"t":"package main import ( \"fmt\" \"golang.org/x/crypto/bcrypt\" ) func main() { password := \"my_secure_password\" // 生成 bcrypt 哈希 hashedPassword, err := bcrypt.GenerateFromPassword([]byte(password), bcrypt.DefaultCost) if err != nil { fmt.Println(\"Error generating hash:\", err) return } fmt.Println(\"Hashed Password:\", string(hashedPassword)) } 说明 bcrypt.GenerateFromPassword([]byte(password), bcrypt.DefaultCost) 生成哈希密码。 bcrypt.DefaultCost 是默认的计算成本（10），可以调整为 bcrypt.MinCost（较快）或 bcrypt.MaxCost（更安全但更慢）。 生成的哈希密码会自动包含 bcrypt 版本、成本因子和盐值。","s":"3.1 生成哈希密码","u":"/en/docs/note/golang/bcrypt","h":"#31-生成哈希密码","p":1336},{"i":1345,"t":"package main import ( \"fmt\" \"golang.org/x/crypto/bcrypt\" ) func main() { password := \"my_secure_password\" hashedPassword := \"$2a$10$P8HU5POQ9mC9dp5BqGkgYOdxz9b7zRbhq2bEn5B2c5rYrXsEoaQve\" // 之前存储的哈希 // 验证密码 err := bcrypt.CompareHashAndPassword([]byte(hashedPassword), []byte(password)) if err != nil { fmt.Println(\"Password incorrect\") } else { fmt.Println(\"Password correct\") } } 说明 bcrypt.CompareHashAndPassword(hashedPassword, password) 验证密码是否匹配哈希值。 如果密码匹配，返回 nil，否则返回 error。","s":"3.2 校验密码","u":"/en/docs/note/golang/bcrypt","h":"#32-校验密码","p":1336},{"i":1347,"t":"要修改密码，直接生成新哈希并存储： newPassword := \"new_secure_password\" newHashedPassword, _ := bcrypt.GenerateFromPassword([]byte(newPassword), bcrypt.DefaultCost) fmt.Println(\"Updated Hashed Password:\", string(newHashedPassword))","s":"3.3 修改密码","u":"/en/docs/note/golang/bcrypt","h":"#33-修改密码","p":1336},{"i":1349,"t":"如果哈希密码的成本过低，可以使用 bcrypt.Cost() 确定是否需要更新： cost, err := bcrypt.Cost([]byte(hashedPassword)) if err == nil && cost < bcrypt.DefaultCost { fmt.Println(\"Password hash is outdated, consider updating\") } 监测哈希成本并升级 如果 bcrypt.Cost 返回的值小于当前推荐值（如 12），则需要重新哈希密码： const recommendedCost = 12 func upgradePasswordHash(storedHash string, password string) string { cost, err := bcrypt.Cost([]byte(storedHash)) if err != nil { fmt.Println(\"Error getting cost:\", err) return storedHash } // 如果成本因子过低，则重新生成哈希 if cost < recommendedCost { newHash, err := bcrypt.GenerateFromPassword([]byte(password), recommendedCost) if err != nil { fmt.Println(\"Error upgrading hash:\", err) return storedHash } fmt.Println(\"Password hash upgraded.\") return string(newHash) } return storedHash }","s":"3.4 确定哈希是否需要更新","u":"/en/docs/note/golang/bcrypt","h":"#34-确定哈希是否需要更新","p":1336},{"i":1351,"t":"场景 说明 用户密码存储 安全存储用户密码，防止明文泄露 密码验证 在用户登录时进行哈希匹配 密码更新 检测哈希是否过时，并重新加密 防止暴力破解 bcrypt 计算开销高，能有效阻止暴力攻击","s":"4. 适用场景","u":"/en/docs/note/golang/bcrypt","h":"#4-适用场景","p":1336},{"i":1353,"t":"bcrypt.GenerateFromPassword() 生成哈希密码。 bcrypt.CompareHashAndPassword() 验证密码。 bcrypt.Cost() 检查哈希成本，确定是否需要升级。 Linux /etc/shadow 存储的是加密后的密码哈希，格式如下： $<加密算法>$<成本因子或迭代次数>$<salt+hash> 常见的加密算法： $1$ → MD5 $2a$ / $2b$ / $2y$ → bcrypt $5$ → SHA-256 $6$ → SHA-512 示例（bcrypt）： $2y$10$XGnVZqM9JpWcPKCqGRBBtuNA7E6x2ZK.7JsZh9y1X1Ij0wY2brJve $2y$ → 使用 bcrypt 加密 10 → 计算成本（cost factor） XGnVZqM9JpWcPKCqGRBBtu → 盐（salt） NA7E6x2ZK.7JsZh9y1X1Ij0wY2brJve → 哈希后的密码","s":"5. 总结","u":"/en/docs/note/golang/bcrypt","h":"#5-总结","p":1336},{"i":1355,"t":"在 Golang 中，多协程 goroutine之间的交互主要通过以下几种方式实现：","s":"Golang 并发编程","u":"/en/docs/note/golang/concurrency","h":"","p":1354},{"i":1357,"t":"Golang 提供了 channel 作为 goroutine 之间通信的主要方式。它是线程安全的，并且可以避免数据竞争。","s":"1. Channel（推荐方式）","u":"/en/docs/note/golang/concurrency","h":"#1-channel推荐方式","p":1354},{"i":1359,"t":"避免竞争：channel 通过消息传递，而不是共享变量，减少数据竞争的可能性。 更符合 Go 语言哲学。 代码更简洁：避免手动加锁和解锁。","s":"1.1 Channel 的特点","u":"/en/docs/note/golang/concurrency","h":"#11-channel-的特点","p":1354},{"i":1361,"t":"package main import ( \"fmt\" \"time\" ) func worker(ch chan string) { time.Sleep(2 * time.Second) ch <- \"任务完成\" } func main() { ch := make(chan string) // 创建一个无缓冲 channel go worker(ch) // 启动 goroutine fmt.Println(\"等待任务完成...\") msg := <-ch // 接收数据（阻塞） fmt.Println(\"收到消息:\", msg) } 解释： ch := make(chan string) 创建了一个无缓冲的 channel。 go worker(ch) 启动一个协程 worker，并通过 channel 发送消息。 msg := <-ch 在主线程阻塞等待，直到 worker 发送数据。","s":"1.2 基础示例：","u":"/en/docs/note/golang/concurrency","h":"#12-基础示例","p":1354},{"i":1363,"t":"select 语句允许从多个 channel 读取数据，或者在通道无数据时执行默认操作。 package main import ( \"fmt\" \"time\" ) func main() { ch1 := make(chan string) ch2 := make(chan string) // 启动 goroutine 向 ch1 发送数据 go func() { time.Sleep(2 * time.Second) ch1 <- \"Message from ch1\" }() // 启动 goroutine 向 ch2 发送数据 go func() { time.Sleep(1 * time.Second) ch2 <- \"Message from ch2\" }() // `select` 监听多个 `channel` select { case msg1 := <-ch1: fmt.Println(\"Received:\", msg1) case msg2 := <-ch2: fmt.Println(\"Received:\", msg2) case <-time.After(3 * time.Second): fmt.Println(\"Timeout: No message received\") } } 代码解析 select 监听 ch1 和 ch2，哪个 channel 先有数据，就会执行对应的 case。 如果 3 秒内没有消息到达，则 case <-time.After(3 * time.Second) 触发，防止永久阻塞。 使用场景 监听多个 channel，避免阻塞。 超时控制：如 time.After 结合 select 限制请求时间。","s":"1.3 select 结合 channel 用法","u":"/en/docs/note/golang/concurrency","h":"#13-select-结合-channel-用法","p":1354},{"i":1365,"t":"任务队列（生产者-消费者模型）。 多个 worker 处理任务，避免共享变量。 限制并发任务的数量。","s":"1.4 Channel 的适用场景","u":"/en/docs/note/golang/concurrency","h":"#14-channel-的适用场景","p":1354},{"i":1367,"t":"如果多个 goroutine 需要同步执行完毕后再继续，sync.WaitGroup 是一种简单的方法。 示例： package main import ( \"fmt\" \"sync\" \"time\" ) func worker(id int, wg *sync.WaitGroup) { defer wg.Done() // 执行完成后减少计数 fmt.Printf(\"Worker %d 开始工作...\\n\", id) time.Sleep(2 * time.Second) fmt.Printf(\"Worker %d 完成工作!\\n\", id) } func main() { var wg sync.WaitGroup for i := 1; i <= 3; i++ { wg.Add(1) // 增加计数 go worker(i, &wg) // 启动 goroutine } wg.Wait() // 等待所有任务完成 fmt.Println(\"所有任务完成\") } 解释： wg.Add(1) 增加计数，每个 goroutine 开始时调用一次。 defer wg.Done() 在 goroutine 结束时减少计数。 wg.Wait() 阻塞主线程，直到所有 wg.Done() 调用完毕。","s":"2. sync.WaitGroup`","u":"/en/docs/note/golang/concurrency","h":"#2-syncwaitgroup","p":1354},{"i":1369,"t":"当多个 goroutine 需要修改共享数据时，可以使用 sync.Mutex 防止竞态条件（race condition）。 示例： package main import ( \"fmt\" \"sync\" \"time\" ) var ( counter int mu sync.Mutex ) func worker(id int, wg *sync.WaitGroup) { defer wg.Done() mu.Lock() counter++ fmt.Printf(\"Worker %d 计数: %d\\n\", id, counter) mu.Unlock() } func main() { var wg sync.WaitGroup for i := 1; i <= 5; i++ { wg.Add(1) go worker(i, &wg) } wg.Wait() fmt.Println(\"最终计数:\", counter) } 解释： mu.Lock() 保护 counter，防止多个 goroutine 并发修改时发生竞态条件。 mu.Unlock() 释放锁，允许其他 goroutine 继续执行。","s":"3.  sync.Mutex","u":"/en/docs/note/golang/concurrency","h":"#3--syncmutex","p":1354},{"i":1371,"t":"sync.Cond 适用于等待某个条件满足后再执行的场景，例如多个线程等待某个事件触发。 示例： package main import ( \"fmt\" \"sync\" \"time\" ) var ( ready = false cond = sync.NewCond(&sync.Mutex{}) ) func worker(id int) { cond.L.Lock() for !ready { cond.Wait() // 等待条件变为 true } fmt.Printf(\"Worker %d 开始工作!\\n\", id) cond.L.Unlock() } func main() { var wg sync.WaitGroup for i := 1; i <= 3; i++ { wg.Add(1) go func(id int) { defer wg.Done() worker(id) }(i) } time.Sleep(2 * time.Second) // 触发事件 cond.L.Lock() ready = true cond.L.Unlock() cond.Broadcast() // 通知所有等待的 goroutine wg.Wait() } 解释： cond.Wait() 等待条件 ready == true。 cond.Broadcast() 唤醒所有等待的 goroutine。","s":"4.  sync.Cond 进行事件通知","u":"/en/docs/note/golang/concurrency","h":"#4--synccond-进行事件通知","p":1354},{"i":1373,"t":"sync.Once 确保某个操作在多个 goroutine 中只执行一次，例如初始化操作。 示例： package main import ( \"fmt\" \"sync\" ) var once sync.Once func initialize() { fmt.Println(\"初始化操作\") } func worker(wg *sync.WaitGroup) { defer wg.Done() once.Do(initialize) fmt.Println(\"Worker 执行\") } func main() { var wg sync.WaitGroup for i := 0; i < 5; i++ { wg.Add(1) go worker(&wg) } wg.Wait() } 解释： once.Do(initialize) 确保 initialize() 只执行一次，无论多少个 goroutine 访问它。","s":"5.  sync.Once","u":"/en/docs/note/golang/concurrency","h":"#5--synconce","p":1354},{"i":1375,"t":"对于简单的数值操作，可以使用 sync/atomic 提供的原子操作代替 sync.Mutex，提升性能。","s":"6.  atomic","u":"/en/docs/note/golang/concurrency","h":"#6--atomic","p":1354},{"i":1377,"t":"package main import ( \"fmt\" \"sync\" \"sync/atomic\" ) var counter int64 func worker(wg *sync.WaitGroup) { defer wg.Done() atomic.AddInt64(&counter, 1) // 原子递增 } func main() { var wg sync.WaitGroup for i := 0; i < 10; i++ { wg.Add(1) go worker(&wg) } wg.Wait() fmt.Println(\"最终计数:\", counter) } 解释： atomic.AddInt64(&counter, 1) 确保 counter 在多个 goroutine 中安全递增，无需使用 sync.Mutex。","s":"示例：","u":"/en/docs/note/golang/concurrency","h":"#示例","p":1354},{"i":1379,"t":"context.Context 适用于控制多个 goroutine 的生命周期，例如超时、取消任务等。","s":"7.  context","u":"/en/docs/note/golang/concurrency","h":"#7--context","p":1354},{"i":1381,"t":"package main import ( \"context\" \"fmt\" \"time\" ) func worker(ctx context.Context) { for { select { case <-ctx.Done(): fmt.Println(\"Worker 任务超时，退出\") return default: fmt.Println(\"Worker 正在工作...\") time.Sleep(500 * time.Millisecond) } } } func main() { ctx, cancel := context.WithTimeout(context.Background(), 2*time.Second) defer cancel() go worker(ctx) time.Sleep(3 * time.Second) // 主线程等待 fmt.Println(\"主线程退出\") } 解释： context.WithTimeout 2 秒后会自动取消 ctx，通知 worker 退出。","s":"示例：","u":"/en/docs/note/golang/concurrency","h":"#示例-1","p":1354},{"i":1383,"t":"方式 适用场景 Channel 安全的数据传递，避免竞态条件 WaitGroup 等待多个 goroutine 结束 Mutex 保护共享资源，防止竞态 Cond 事件触发，等待通知 Once 只执行一次（单例模式） Atomic 高效数值计算，无锁并发 Context 超时、取消任务 如果主要是 goroutine 之间的通信，使用 channel（更安全，避免锁竞争）。 如果是多个 goroutine 操作同一个变量，使用 mutex（更高效）。 如果要限制并发数，二者可以结合使用，如 channel 控制并发，mutex 保护数据。 select 适用于监听多个 channel 和超时控制。 推荐做法： 优先考虑 channel，符合 Go 语言风格。 如果性能瓶颈明显（高频数据访问），使用 sync.Mutex 进行优化。 如果有并发控制需求，可以结合 channel 和 mutex。 select 适用于监听多个 channel 和超时控制。","s":"总结","u":"/en/docs/note/golang/concurrency","h":"#总结","p":1354},{"i":1385,"t":"microkernel（微内核）架构的核心思想是 核心功能最小化，其他功能以插件或服务的形式运行在用户态，通过 进程间通信（IPC） 与内核交互。","s":"microkernel 设计1","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"","p":1384},{"i":1388,"t":"内核小、职责单一 内核只负责最基本的功能，比如线程调度、地址空间管理、IPC。 模块化、可扩展 文件系统、驱动程序等作为用户空间服务，易于替换和调试。 可靠性高 一个用户态服务崩溃不会影响整个系统。 通信开销大 模块间依赖消息传递，相比传统内核切换用户态和内核态的代价更大。","s":"1.1 特点","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#11-特点","p":1384},{"i":1390,"t":"Kernel（内核） 负责 服务注册、消息路由、生命周期管理。 Services（服务） 独立模块（如 LogService、StorageService），运行在用户态。 通信机制（IPC） 使用 Go 的 Channel 或 gRPC 进行通信。","s":"1.2 核心组件","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#12-核心组件","p":1384},{"i":1393,"t":"package kernel import ( \"context\" \"errors\" \"fmt\" \"sync\" ) // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string } // Kernel 微内核核心 type Kernel struct { // 注册的服务通道 services map[string]Service // 保护 services 的并发访问 mutex sync.RWMutex // 全局事件总线 eventCh chan Event } // Event 定义内核事件（用于服务间通信） type Event struct { From string Type string Content string } // NewKernel 创建微内核实例 func NewKernel() *Kernel { return &Kernel{ services: make(map[string]Service), eventCh: make(chan Event, 100), } } // RegisterService 注册服务 func (k *Kernel) RegisterService(s Service) error { k.mutex.Lock() defer k.mutex.Unlock() name := s.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = s return nil } // StartAll 启动所有服务 func (k *Kernel) StartAll() error { k.mutex.RLock() defer k.mutex.RUnlock() for _, s := range k.services { if err := s.Start(); err != nil { return err } } return nil } // StopAll 停止所有服务 func (k *Kernel) StopAll() error { k.mutex.RLock() defer k.mutex.RUnlock() var err error for _, s := range k.services { if e := s.Stop(); e != nil { err = e } } return err } // SendEvent 发送事件（模拟 IPC） func (k *Kernel) SendEvent(evt Event) { k.eventCh <- evt } // EventLoop 事件循环（处理服务间通信） func (k *Kernel) EventLoop(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: %s - %s\\n\", evt.From, evt.Type, evt.Content) } } }","s":"2.1 定义 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#21-定义-kernel核心","p":1384},{"i":1395,"t":"package service import ( \"fmt\" \"microkernel/kernel\" ) // LogService 日志服务 type LogService struct { name string kernel *kernel.Kernel logCh chan string stopCh chan struct{} } func NewLogService(name string, kernel *kernel.Kernel) *LogService { return &LogService{ name: name, kernel: kernel, logCh: make(chan string, 100), stopCh: make(chan struct{}), } } func (l *LogService) Start() error { fmt.Printf(\"[%s] starting...\\n\", l.name) go l.run() return nil } func (l *LogService) Stop() error { fmt.Printf(\"[%s] stopping...\\n\", l.name) close(l.stopCh) return nil } func (l *LogService) Name() string { return l.name } func (l *LogService) run() { for { select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 l.kernel.SendEvent(kernel.Event{ From: l.name, Type: \"log\", Content: log, }) } } } func (l *LogService) Log(msg string) { l.logCh <- msg }","s":"2.2 实现示例服务（LogService）","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#22-实现示例服务logservice","p":1384},{"i":1397,"t":"package main import ( \"context\" \"microkernel/kernel\" \"microkernel/service\" \"time\" ) func main() { // 1. 创建微内核 kernel := kernel.NewKernel() // 2. 注册服务 logSvc := service.NewLogService(\"logger\", kernel) if err := kernel.RegisterService(logSvc); err != nil { panic(err) } // 3. 启动所有服务 if err := kernel.StartAll(); err != nil { panic(err) } // 4. 启动事件循环 ctx, cancel := context.WithCancel(context.Background()) defer cancel() go kernel.EventLoop(ctx) // 5. 测试日志服务 logSvc.Log(\"Hello, Microkernel!\") time.Sleep(1 * time.Second) // 6. 停止所有服务 if err := kernel.StopAll(); err != nil { panic(err) } }","s":"2.3 主程序（运行微内核 + 服务）","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#23-主程序运行微内核--服务","p":1384},{"i":1399,"t":"[logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] stopping...","s":"2.4 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#24-运行结果","p":1384},{"i":1401,"t":"使用 gRPC 替代 Channel（实现跨进程通信）。 动态加载服务（如插件化架构）。 增加服务发现机制（如 Consul/Etcd）。 支持更复杂的事件路由（如基于 Topic 的 Pub/Sub）。","s":"3. 扩展方向","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#3-扩展方向","p":1384},{"i":1403,"t":"微内核的核心：Kernel 只管理 Service 的生命周期和通信。 服务独立：每个 Service 运行在自己的 Goroutine 中，互不干扰。 通信方式： 简单场景：Channel（如示例）。 复杂场景：gRPC、NATS、WebSocket 等。 查看完整代码","s":"4. 总结","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#4-总结","p":1384},{"i":1405,"t":"在编程和系统设计中，Future-Proof 机制指的是通过合理的架构设计和技术选择，使代码或系统能够适应未来的需求变化、技术演进和规模扩展，而无需大规模重构或重写。其核心目标是降低长期维护成本，提高可扩展性。","s":"Future-Proof 机制","u":"/en/docs/note/golang/design/future_proof","h":"","p":1404},{"i":1407,"t":"以下是实现 Future-Proof 代码的关键设计思想：","s":"1. Future-Proof 机制的关键原则","u":"/en/docs/note/golang/design/future_proof","h":"","p":1404},{"i":1409,"t":"目标：模块间通过清晰的接口交互，而非直接依赖具体实现。使用接口（Go 的 interface）而非具体类型，依赖注入而非硬编码。 优点： 业务逻辑与具体实现解耦 易于扩展新的实现方式 便于单元测试（可以mock Notifier） 设计点： 面向接口编程：依赖抽象而非具体实现 依赖注入：通过构造函数或方法参数注入依赖 单一职责：每个组件只关注自己的核心功能 最小知识原则：组件只与直接相关的组件交互 松耦合示例： 定义接口 // Notifier 通知接口 type Notifier interface { Send(message string) error } 接口实现 // EmailNotifier 邮件通知实现 type EmailNotifier struct{} func (e EmailNotifier) Send(message string) error { fmt.Printf(\"发送邮件通知: %s\\n\", message) return nil } // SMSNotifier 短信通知实现 type SMSNotifier struct{} func (s SMSNotifier) Send(message string) error { fmt.Printf(\"发送短信通知: %s\\n\", message) return nil } 业务逻辑调用接口 // NotificationService 通知服务 type NotificationService struct { notifier Notifier } func NewNotificationService(notifier Notifier) *NotificationService { return &NotificationService{notifier: notifier} } func (s *NotificationService) ProcessOrder(orderID string) { // 处理订单逻辑... message := fmt.Sprintf(\"订单 %s 已处理\", orderID) _ = s.notifier.Send(message) } 主函数调用 func main() { // 可以轻松替换通知实现 emailNotifier := EmailNotifier{} service := NewNotificationService(emailNotifier) service.ProcessOrder(\"12345\") // 切换为短信通知不需要修改业务逻辑 smsNotifier := SMSNotifier{} service = NewNotificationService(smsNotifier) service.ProcessOrder(\"67890\") } 紧耦合示例： 使用具体类型 // EmailSender 邮件发送器 type EmailSender struct{} func (e EmailSender) SendEmail(message string) error { fmt.Printf(\"发送邮件: %s\\n\", message) return nil } 业务类型依赖具体类 // OrderProcessor 订单处理器 type OrderProcessor struct { emailSender EmailSender } func (p *OrderProcessor) ProcessOrder(orderID string) { // 处理订单逻辑... message := fmt.Sprintf(\"订单 %s 已处理\", orderID) _ = p.emailSender.SendEmail(message) } 主函数调用 func main() { processor := OrderProcessor{emailSender: EmailSender{}} processor.ProcessOrder(\"12345\") // 如果要改为短信通知，必须修改OrderProcessor结构体和所有相关代码 }","s":"1.1.  松耦合（Loose Coupling）","u":"/en/docs/note/golang/design/future_proof","h":"#11--松耦合loose-coupling","p":1404},{"i":1411,"t":"目标：新增功能时无需修改现有代码。 示例：通过组合而非继承扩展行为（Go 的 embedding 或中间件模式）。 type LoggingAggregator struct { *EventAggregator // 嵌入原有功能 logger Logger } // 新增日志能力而不修改原始聚合器","s":"1.2. 可扩展性（Extensibility）","u":"/en/docs/note/golang/design/future_proof","h":"#12-可扩展性extensibility","p":1404},{"i":1413,"t":"目标：将易变的参数（如超时时间、规则路径）外置为配置。 示例：通过环境变量或配置文件驱动行为： timeout := os.Getenv(\"AGGREGATOR_TIMEOUT\")","s":"1.3. 配置化而非硬编码","u":"/en/docs/note/golang/design/future_proof","h":"#13-配置化而非硬编码","p":1404},{"i":1415,"t":"目标：数据交互格式（如 JSON、Protobuf）支持向后兼容。 示例：使用 Protocol Buffers 的字段编号机制，避免破坏旧版解析。","s":"1.4. 协议与数据格式的兼容性","u":"/en/docs/note/golang/design/future_proof","h":"#14-协议与数据格式的兼容性","p":1404},{"i":1417,"t":"目标：并发模型能随规模调整（如 Goroutine 池 vs 固定 Worker）。 示例：在之前的聚合器代码中，通过 Channel 通信可轻松扩展为多 Worker： for i := 0; i < runtime.NumCPU(); i++ { go aggregator.processRequests() }","s":"1.5. 并发模型的可适应性","u":"/en/docs/note/golang/design/future_proof","h":"#15-并发模型的可适应性","p":1404},{"i":1419,"t":"目标：内置日志、指标、链路追踪等，便于未来诊断问题。 示例：在 rulesUpdateRequest 中添加请求 ID 和计时： type rulesUpdateRequest struct { RequestID string // 用于追踪 StartTime time.Time // ...其他字段 }","s":"1.6. 可观测性（Observability）","u":"/en/docs/note/golang/design/future_proof","h":"#16-可观测性observability","p":1404},{"i":1421,"t":"目标：处理边界条件（如 nil Channel、超时）。 示例：在 Channel 通信中添加超时： func (a *EventAggregator) UpdateRules(rules []string) error { req := &rulesUpdateRequest{..., response: make(chan error, 1)} select { case a.updateChannel <- req: return <-req.response case <-time.After(1 * time.Second): return errors.New(\"update timeout\") } }","s":"1.7. 防御性编程","u":"/en/docs/note/golang/design/future_proof","h":"#17-防御性编程","p":1404},{"i":1423,"t":"package main import ( \"fmt\" \"time\" ) // EventAggregator manages a set of rules and processes updates through channels type EventAggregator struct { rules []string updateChannel chan *rulesUpdateRequest shutdownChan chan struct{} } // rulesUpdateRequest represents a request to update the rules type rulesUpdateRequest struct { newRules []string response chan error } // NewEventAggregator creates and starts a new EventAggregator func NewEventAggregator() *EventAggregator { agg := &EventAggregator{ rules: []string{}, updateChannel: make(chan *rulesUpdateRequest), shutdownChan: make(chan struct{}), } go agg.processRequests() return agg } // UpdateRules safely updates the rules by sending a request through the channel func (a *EventAggregator) UpdateRules(newRules []string) error { req := &rulesUpdateRequest{ newRules: newRules, response: make(chan error, 1), // Buffered to avoid blocking } a.updateChannel <- req return <-req.response } // Shutdown gracefully stops the aggregator func (a *EventAggregator) Shutdown() { close(a.shutdownChan) } // processRequests handles incoming requests in a thread-safe manner func (a *EventAggregator) processRequests() { for { select { case req := <-a.updateChannel: a.rules = req.newRules fmt.Println(\"Updated rules:\", a.rules) req.response <- nil case <-a.shutdownChan: fmt.Println(\"Shutting down aggregator\") return } } } func main() { // Create and start the aggregator aggregator := NewEventAggregator() defer aggregator.Shutdown() // Simulate some updates go func() { time.Sleep(500 * time.Millisecond) if err := aggregator.UpdateRules([]string{\"a\", \"b\", \"c\"}); err != nil { fmt.Println(\"Error updating rules:\", err) } }() go func() { time.Sleep(1 * time.Second) if err := aggregator.UpdateRules([]string{\"d\", \"e\", \"f\"}); err != nil { fmt.Println(\"Error updating rules:\", err) } }() // Give time for the updates to process time.Sleep(2 * time.Second) } 状态隔离：所有规则更新通过 Channel 串行化，避免竞态条件。 易于扩展：可新增 QueryRules() 方法而不影响现有逻辑。 并发友好：Channel 模型天然支持协程扩展。 关闭控制：通过 shutdownChan 实现优雅终止。 根据原则，执行部分优化 package main import ( \"context\" \"errors\" \"fmt\" \"sync\" \"time\" ) // RuleSet represents a collection of rules with metadata type RuleSet struct { Rules []string Version int // Track changes over time Modified time.Time // Last update timestamp } // SetRulesRequest encapsulates a rules update operation type SetRulesRequest struct { NewRules []string Response chan error RequestID string // For tracing Timestamp time.Time // For auditing } // AggregatorOptions configures aggregator behavior type AggregatorOptions struct { MaxPendingRequests int // Buffer size for requests RequestTimeout time.Duration // Timeout for rule updates EnableValidation bool // Future: validate rules before applying } // Aggregator manages rule sets with thread-safe operations type Aggregator struct { currentRuleSet RuleSet options AggregatorOptions requestChan chan *SetRulesRequest queryChan chan chan RuleSet // New channel for safe rule queries commandChan chan func() // Generic command channel for future extensions stopChan chan struct{} shutdownOnce sync.Once stopWg sync.WaitGroup } // NewAggregator creates a configured aggregator instance func NewAggregator(opts AggregatorOptions) *Aggregator { if opts.MaxPendingRequests <= 0 { opts.MaxPendingRequests = 10 } if opts.RequestTimeout <= 0 { opts.RequestTimeout = 2 * time.Second } return &Aggregator{ currentRuleSet: RuleSet{Version: 1}, options: opts, requestChan: make(chan *SetRulesRequest, opts.MaxPendingRequests), queryChan: make(chan chan RuleSet), commandChan: make(chan func()), stopChan: make(chan struct{}), } } // Run starts the aggregator's processing loop func (a *Aggregator) Run() { a.stopWg.Add(1) defer a.stopWg.Done() for { select { case req := <-a.requestChan: a.handleSetRules(req) case respChan := <-a.queryChan: a.handleGetRules(respChan) case cmd := <-a.commandChan: cmd() // Execute arbitrary commands case <-a.stopChan: return } } } func (a *Aggregator) handleSetRules(req *SetRulesRequest) { defer close(req.Response) // Future: could add validation here if a.options.EnableValidation { // Validate rules before applying } a.currentRuleSet = RuleSet{ Rules: req.NewRules, Version: a.currentRuleSet.Version + 1, Modified: time.Now(), } fmt.Printf(\"Updated rules (v%d): %v\\n\", a.currentRuleSet.Version, a.currentRuleSet.Rules) req.Response <- nil } func (a *Aggregator) handleGetRules(respChan chan RuleSet) { respChan <- a.currentRuleSet close(respChan) } // SetRules updates the rule set with timeout support func (a *Aggregator) SetRules(ctx context.Context, rules []string) error { req := &SetRulesRequest{ NewRules: rules, Response: make(chan error), RequestID: fmt.Sprintf(\"req-%d\", time.Now().UnixNano()), Timestamp: time.Now(), } select { case a.requestChan <- req: select { case err := <-req.Response: return err case <-ctx.Done(): return ctx.Err() } case <-a.stopChan: return errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return ctx.Err() } } // GetRules safely retrieves the current rule set func (a *Aggregator) GetRules(ctx context.Context) (RuleSet, error) { respChan := make(chan RuleSet) select { case a.queryChan <- respChan: select { case rules := <-respChan: return rules, nil case <-ctx.Done(): return RuleSet{}, ctx.Err() } case <-a.stopChan: return RuleSet{}, errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return RuleSet{}, ctx.Err() } } // Stop gracefully shuts down the aggregator func (a *Aggregator) Stop() { a.shutdownOnce.Do(func() { close(a.stopChan) a.stopWg.Wait() close(a.requestChan) close(a.queryChan) close(a.commandChan) fmt.Println(\"Aggregator stopped gracefully\") }) } // ExecuteCommand provides extension point for future operations func (a *Aggregator) ExecuteCommand(ctx context.Context, cmd func()) error { select { case a.commandChan <- cmd: return nil case <-a.stopChan: return errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return ctx.Err() } } func main() { // Configurable options opts := AggregatorOptions{ MaxPendingRequests: 20, RequestTimeout: 3 * time.Second, EnableValidation: false, // Could be enabled in future } aggregator := NewAggregator(opts) go aggregator.Run() // Example usage with context ctx, cancel := context.WithTimeout(context.Background(), 2*time.Second) defer cancel() // Set rules err := aggregator.SetRules(ctx, []string{\"a\", \"b\", \"c\"}) if err != nil { fmt.Println(\"Error setting rules:\", err) } // Get rules rules, err := aggregator.GetRules(ctx) if err != nil { fmt.Println(\"Error getting rules:\", err) } else { fmt.Printf(\"Current rules (v%d): %v\\n\", rules.Version, rules.Rules) } // Execute custom command aggregator.ExecuteCommand(ctx, func() { fmt.Println(\"Executing custom command\") }) aggregator.Stop() } Enhanced Rule Metadata: Added RuleSet struct with versioning and timestamps Supports audit trails and change tracking Configurable Options: AggregatorOptions allows tuning without code changes Supports future features like validation Multiple Communication Channels: Separate channels for commands (commandChan) and queries (queryChan) Prevents mixing of operation types Context Support: All operations respect context for timeouts/cancellation Better integration with modern Go applications Extension Points: ExecuteCommand method for adding future functionality Generic command channel pattern Improved Shutdown: sync.Once ensures safe single shutdown sync.WaitGroup for proper goroutine cleanup Thread-Safe Queries: Added safe GetRules method via channel No direct access to internal state Request Tracing: Added request IDs for debugging Timestamps for all operations 使用命令模式优化 package main import ( \"context\" \"errors\" \"fmt\" \"sync\" \"time\" ) // Command defines the interface all commands must implement type Command interface { Execute(ctx context.Context) error } // CommandHandler processes commands type CommandHandler struct { commands chan Command stopChan chan struct{} wg sync.WaitGroup } // NewCommandHandler creates a new handler with specified queue size func NewCommandHandler(queueSize int) *CommandHandler { return &CommandHandler{ commands: make(chan Command, queueSize), stopChan: make(chan struct{}), } } // Start begins processing commands func (h *CommandHandler) Start() { h.wg.Add(1) go func() { defer h.wg.Done() for { select { case cmd := <-h.commands: ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second) err := cmd.Execute(ctx) cancel() if err != nil { fmt.Printf(\"Command execution failed: %v\\n\", err) } case <-h.stopChan: return } } }() } // Submit sends a command for execution func (h *CommandHandler) Submit(ctx context.Context, cmd Command) error { select { case h.commands <- cmd: return nil case <-h.stopChan: return errors.New(\"handler is shutting down\") case <-ctx.Done(): return ctx.Err() } } // Stop gracefully shuts down the handler func (h *CommandHandler) Stop() { close(h.stopChan) h.wg.Wait() close(h.commands) } // --- Concrete Commands --- // SetRulesCommand implements Command for rule updates type SetRulesCommand struct { Aggregator *Aggregator NewRules []string } func (c *SetRulesCommand) Execute(ctx context.Context) error { return c.Aggregator.SetRules(ctx, c.NewRules) } // GetRulesCommand implements Command for rule queries type GetRulesCommand struct { Aggregator *Aggregator ResultChan chan<- RuleSet } func (c *GetRulesCommand) Execute(ctx context.Context) error { rules, err := c.Aggregator.GetRules(ctx) if err != nil { return err } c.ResultChan <- rules return nil } // --- Aggregator Implementation --- type RuleSet struct { Rules []string Version int Modified time.Time } type Aggregator struct { mu sync.Mutex currentRule RuleSet } func (a *Aggregator) SetRules(ctx context.Context, rules []string) error { a.mu.Lock() defer a.mu.Unlock() select { case <-ctx.Done(): return ctx.Err() default: a.currentRule = RuleSet{ Rules: rules, Version: a.currentRule.Version + 1, Modified: time.Now(), } fmt.Printf(\"Rules updated to version %d\\n\", a.currentRule.Version) return nil } } func (a *Aggregator) GetRules(ctx context.Context) (RuleSet, error) { a.mu.Lock() defer a.mu.Unlock() select { case <-ctx.Done(): return RuleSet{}, ctx.Err() default: return a.currentRule, nil } } // --- Usage Example --- func main() { // Create components handler := NewCommandHandler(10) aggregator := &Aggregator{ currentRule: RuleSet{Version: 0}, } // Start command processor handler.Start() defer handler.Stop() // Submit commands ctx := context.Background() // Set rules command setCmd := &SetRulesCommand{ Aggregator: aggregator, NewRules: []string{\"a\", \"b\", \"c\"}, } handler.Submit(ctx, setCmd) // Get rules command resultChan := make(chan RuleSet, 1) getCmd := &GetRulesCommand{ Aggregator: aggregator, ResultChan: resultChan, } handler.Submit(ctx, getCmd) // Wait for result select { case rules := <-resultChan: fmt.Printf(\"Current rules: %v\\n\", rules.Rules) case <-time.After(1 * time.Second): fmt.Println(\"Timeout waiting for rules\") } } The Command Handler pattern is a behavioral design pattern that encapsulates requests as objects, allowing for parameterization of clients with different requests, queuing of requests, and support for undoable operations. Here's how to implement it in your aggregator: Core Components Command Interface: Defines the execution contract Concrete Commands: Encapsulate specific actions and parameters Invoker: Receives and executes commands Receiver: Knows how to perform the operations Key Features Command Interface: type Command interface { Execute(ctx context.Context) error } Concrete Commands: Each command encapsulates all parameters needed for execution Commands can be serialized/deserialized for distributed systems Command Handler: Manages a queue of commands Processes commands sequentially in a goroutine Supports graceful shutdown Benefits: Decoupling: Separates command creation from execution Extensibility: Easy to add new command types Composability: Commands can be combined into macros Undo/Redo: Can be extended to support command history Advanced Extensions Command Middleware: type CommandMiddleware func(Command) Command func LoggingMiddleware(next Command) Command { return &loggedCommand{next} } Transaction Support: type TransactionCommand struct { Commands []Command } func (t *TransactionCommand) Execute(ctx context.Context) error { // Execute all or nothing } Priority Commands: type PriorityCommand struct { Command Priority int } // Use priority queue instead of channel","s":"2. 聚合器示例","u":"/en/docs/note/golang/design/future_proof","h":"#2-聚合器示例","p":1404},{"i":1425,"t":"// 硬编码实现，未来难以修改 var globalRules []string func UpdateRules(rules []string) { globalRules = rules // 直接修改全局状态，线程不安全 }","s":"3. 反模式：非 Future-Proof 的设计","u":"/en/docs/note/golang/design/future_proof","h":"#3-反模式非-future-proof-的设计","p":1404},{"i":1427,"t":"Future-Proof 不是过度设计，而是通过遵循 SOLID 原则和 并发安全实践，让代码具备： 适应变化的能力 平滑演进的路径 诊断问题的手段 在 Go 中，Channel 和 Interface 是构建 Future-Proof 系统的核心工具。","s":"4. 总结","u":"/en/docs/note/golang/design/future_proof","h":"#4-总结","p":1404},{"i":1429,"t":"runtime/debug 是 Go 标准库中用于调试和运行时信息收集的重要包，提供了多种实用功能。下面我将详细介绍其主要功能和用法：","s":"Golang runtime/debug 用法","u":"/en/docs/note/golang/debug","h":"","p":1428},{"i":1431,"t":"强制垃圾回收 debug.GC() // 显式触发一次垃圾回收 强制将未使用的内存返回给操作系统。 注意：Go 会自动做内存管理，这个函数一般用于调试或特殊情况。 debug.FreeOSMemory() // 将未使用的内存返回给操作系统 设置垃圾回收器的触发频率。 默认值是 100，表示内存分配增长 100% 就触发 GC。 设置为负数会关闭 GC。 // 设置GC目标百分比（默认100） // 值越大GC越不频繁，但内存使用更多 debug.SetGCPercent(200) // Go 1.19+ 设置内存软限制 debug.SetMemoryLimit(512 * 1024 * 1024) // 512MB 读取GC统计信息 var stats debug.GCStats debug.ReadGCStats(&stats) fmt.Printf(\"上次GC时间: %v\\n\", stats.LastGC) fmt.Printf(\"GC总次数: %d\\n\", stats.NumGC) fmt.Printf(\"GC总暂停时间: %v\\n\", stats.PauseTotal) fmt.Printf(\"最近GC暂停时间: %v\\n\", stats.Pause) 生成堆转储 func writeHeapDump(filename string) error { f, err := os.Create(filename) if err != nil { return err } defer f.Close() return debug.WriteHeapDump(f.Fd()) // 需要文件描述符 }","s":"1. 内存和垃圾回收相关操作","u":"/en/docs/note/golang/debug","h":"#1-内存和垃圾回收相关操作","p":1428},{"i":1433,"t":"获取当前调用栈 stack := debug.Stack() // 返回[]byte fmt.Printf(\"%s\\n\", stack) 打印当前的堆栈信息（stack trace），常用于调试 panic 或 goroutine 调度问题。 // 打印对应goroutine 堆栈 debug.PrintStack() 设置最大堆栈深度 设置每个 goroutine 的最大堆栈大小。一般调试 goroutine stack 溢出问题才用。 debug.SetMaxStack(64 * 1024 * 1024) // 64MB 示例： package main import ( \"fmt\" \"runtime/debug\" \"time\" ) func main() { fmt.Println(\"Start\") go func() { defer func() { fmt.Println(\"Recovered\") }() fmt.Println(\"Hello World\") debug.PrintStack() }() time.Sleep(1 * time.Second) debug.PrintStack() fmt.Println(\"End\") } 设置panic堆栈跟踪级别 // 可选值: \"none\", \"single\", \"all\", \"system\", \"crash\" debug.SetTraceback(\"all\") // 显示所有goroutine的堆栈","s":"2. 堆栈信息操作","u":"/en/docs/note/golang/debug","h":"#2-堆栈信息操作","p":1428},{"i":1435,"t":"读取模块构建信息 package main import ( \"fmt\" \"github.com/sirupsen/logrus\" \"runtime/debug\" ) func main() { logrus.Info(\"Hello World\") bi, ok := debug.ReadBuildInfo() if ok { fmt.Printf(\"Go Version: %s\\n\", bi.GoVersion) fmt.Printf(\"Main Module: %s@%s\\n\", bi.Main.Path, bi.Main.Version) for _, dep := range bi.Deps { fmt.Printf(\"Dependency: %s@%s\\n\", dep.Path, dep.Version) } for _, set := range bi.Settings { fmt.Printf(\"Settings: %s@%s\\n\", set.Key, set.Value) } } } 打印如下： INFO[0000] Hello World Go Version: go1.20.4 Main Module: demo@(devel) Dependency: github.com/sirupsen/logrus@v1.9.3 Dependency: golang.org/x/sys@v0.29.0 Settings: -buildmode@exe Settings: -compiler@gc Settings: CGO_ENABLED@1 Settings: CGO_CFLAGS@ Settings: CGO_CPPFLAGS@ Settings: CGO_CXXFLAGS@ Settings: CGO_LDFLAGS@ Settings: GOARCH@amd64 Settings: GOOS@linux Settings: GOAMD64@v1 Settings: vcs@git Settings: vcs.revision@47a4d73f30696cd2bf2ec09a16f6d3ba7ae563e6 Settings: vcs.time@2025-04-07T09:35:26Z Settings: vcs.modified@false $ git log commit 47a4d73f30696cd2bf2ec09a16f6d3ba7ae563e6 (HEAD -> master) Author: Your Name <you@example.com> Date: Mon Apr 7 17:35:26 2025 +0800 1","s":"3. 构建信息读取","u":"/en/docs/note/golang/debug","h":"#3-构建信息读取","p":1428},{"i":1438,"t":"func monitorMemory(threshold uint64) { for { var m runtime.MemStats runtime.ReadMemStats(&m) if m.Alloc > threshold { debug.FreeOSMemory() debug.GC() f, _ := os.Create(\"heapdump.out\") debug.WriteHeapDump(f.Fd()) f.Close() return } time.Sleep(5 * time.Second) } }","s":"4.1. 内存监控工具","u":"/en/docs/note/golang/debug","h":"#41-内存监控工具","p":1428},{"i":1440,"t":"func setupPanicRecovery() { defer func() { if r := recover(); r != nil { fmt.Fprintf(os.Stderr, \"Panic: %v\\n\", r) debug.PrintStack() // 保存堆栈到文件 stack := debug.Stack() os.WriteFile(\"panic.log\", stack, 0644) os.Exit(1) } }() // 应用主逻辑 runApplication() }","s":"4.2. 增强的panic处理","u":"/en/docs/note/golang/debug","h":"#42-增强的panic处理","p":1428},{"i":1442,"t":"func showVersion() { bi, ok := debug.ReadBuildInfo() if !ok { fmt.Println(\"无法获取构建信息\") return } fmt.Printf(\"应用: %s\\n版本: %s\\nGo版本: %s\\n\", bi.Main.Path, bi.Main.Version, bi.GoVersion) fmt.Println(\"\\n依赖项:\") for _, dep := range bi.Deps { fmt.Printf(\"- %s@%s\\n\", dep.Path, dep.Version) } }","s":"4.3. 构建信息展示","u":"/en/docs/note/golang/debug","h":"#43-构建信息展示","p":1428},{"i":1444,"t":"WriteHeapDump 功能在不同平台上表现可能不同 设置过高的 SetGCPercent 可能导致内存使用过多 SetMemoryLimit 仅在 Go 1.19+ 可用 生产环境中谨慎使用 FreeOSMemory，可能导致性能下降 runtime/debug 包是 Go 开发者工具箱中的重要组成部分，特别适用于： 内存泄漏调试 性能问题诊断 构建版本管理 生产环境问题排查 自定义错误处理机制 通过合理使用这些功能，可以显著提升 Go 应用程序的可调试性和可靠性。","s":"5. 注意事项","u":"/en/docs/note/golang/debug","h":"#5-注意事项","p":1428},{"i":1447,"t":"服务 能读取 Kernel 的返回信息 实现方法参考链接： gitee weidongkl.github.io","s":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel3","h":"#1-目标","p":1445},{"i":1449,"t":"可以为每个 Service 提供一个专属的响应通道（channel），内核通过这个通道将处理结果或反馈信息“推送”回去。 每次发送消息附带一个 ReplyCh。 内核在收到消息后通过该通道写回响应。 Service 读取 ReplyCh 获取反馈。","s":"2. 代码改动","u":"/en/docs/note/golang/design/microkernel/microkernel3","h":"#2-代码改动","p":1445},{"i":1451,"t":"事件增加读取返回的channel // kernel/kernel.go // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string // 增加响应通道 ReplyCh chan string } listen 增加返回值得写入 // kernel/kernel.go func (k *Kernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: %s - %s\\n\", evt.From, evt.Type, evt.Content) // 增加返回的写入 if evt.ReplyCh != nil { evt.ReplyCh <- fmt.Sprintf(\"ack: %s\", evt.Content) } } } }","s":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel3","h":"#21-kernel核心","p":1445},{"i":1453,"t":"服务增加返回的读取 func (l *LogService) run() { for { select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 replyCh := make(chan string, 1) l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", Content: log, ReplyCh: replyCh, }) // 等待内核回应 reply := <-replyCh fmt.Printf(\"[%s] got reply from kernel: %s\\n\", l.Name(), reply) } } }// service/log.go // service 增加Handle接口实现 func (l *LogService) Handle(msg string) string { fmt.Printf(\"[%s] LOG handle kernel event: %s\\n\", l.name, msg) return fmt.Sprintf(\"[%s] LOG Handle: %s\\n\", l.name, msg) }","s":"2.2 LogService","u":"/en/docs/note/golang/design/microkernel/microkernel3","h":"#22-logservice","p":1445},{"i":1455,"t":"Registered: logger [logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] got reply from kernel: ack: Hello, Microkernel! [Kernel] Send Event to logger: Hello, Log! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... 查看完整代码","s":"2.3 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel3","h":"#23-运行结果","p":1445},{"i":1457,"t":"microkernel 设计1 目前只支持服务发送消息，内核接受消息。 在本章节，我会增加内核发送消息到服务","s":"microkernel 设计2","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"","p":1456},{"i":1459,"t":"内核发送消息到服务","s":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#1-目标","p":1456},{"i":1462,"t":"服务增加消息处理方法 // kernel/kernel.go type Service interface { Start() error Stop() error Name() string // 增加消息处理方法 Handle(msg string) string } 事件增加发送地址 // kernel/kernel.go // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string } 内核发送事件到服务 // kernel/kernel.go // HandleEvent 处理事件（模拟服务间通信） func (k *Kernel) HandleEvent(evt Event) (msg string) { k.mutex.RLock() defer k.mutex.RUnlock() if svc, ok := k.services[evt.To]; ok { return svc.Handle(evt.Content) } return \"service not found\" }","s":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#21-kernel核心","p":1456},{"i":1464,"t":"增加Handle方法实现 // service/log.go // service 增加Handle接口实现 func (l *LogService) Handle(msg string) string { fmt.Printf(\"[%s] LOG handle kernel event: %s\\n\", l.name, msg) return fmt.Sprintf(\"[%s] LOG Handle: %s\\n\", l.name, msg) }","s":"2.2 LogService","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#22-logservice","p":1456},{"i":1466,"t":"kernel发送消息到service // main.go // 6. microKernel 发送事件到指定服务 microKernel.HandleEvent(kernel.Event{ From: \"microKernel\", To: \"logger\", Type: \"log\", Content: \"Hello, Log!\", }) time.Sleep(1 * time.Millisecond)","s":"2.3 主程序（运行微内核 + 服务）","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#23-主程序运行微内核--服务","p":1456},{"i":1468,"t":"[logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... 查看完整代码","s":"2.4 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#24-运行结果","p":1456},{"i":1470,"t":"HandleEvent 修改为 Send SendEvent 修改为 Push LoopEvent 修改为Listen mutex修改为 mu 查看完整代码","s":"2.5 优化函数和变量命名","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#25-优化函数和变量命名","p":1456},{"i":1474,"t":"服务状态管理 单独服务管理 优化项目结构","s":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel5","h":"#1-目标","p":1472},{"i":1477,"t":"定义服务状态和服务元数据 // kernel/service.go // ServiceState 定义微内核服务状态 type ServiceState int // 使用iota枚举类型，自动计算枚举值 const ( Created ServiceState = iota Running Stopped ) // ServiceState.String() func (s ServiceState) String() string { // 状态转换成字符串 // 其中[...]表示让编译器自动计算数组的长度 return [...]string{\"Created\", \"Running\", \"Stopped\"}[s] } // serviceMeta 定义微内核服务元数据 type serviceMeta struct { svc Service state ServiceState } 单个服务管理 // kernel/kernel.go func (k *MicroKernel) StartService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Running { return errors.New(\"service already started\") } if err := meta.svc.Start(); err != nil { return err } meta.state = Running fmt.Println(\"Started:\", meta.svc.Name()) return nil } func (k *MicroKernel) StopService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Stopped { return errors.New(\"service already stopped\") } if err := meta.svc.Stop(); err != nil { return err } meta.state = Stopped fmt.Println(\"Stopped:\", meta.svc.Name()) return nil } Listen 增加服务状态判断，未运行的服务，不再处理消息 // Listen 事件循环（处理服务间通信） // 监听事件，处理服务间通信 // 重命名 EventLoop 为 Listen func (k *MicroKernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[MicroKernel] Event from %s: - %s\\n\", evt.From, evt.Content) // 发送给 MicroKernel 自己 if evt.To == \"\" { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 0, Message: \"Handled by kernel\", Data: \"ok\"} } continue } // 路由到目标服务 k.mu.RLock() meta, ok := k.services[evt.To] k.mu.RUnlock() if !ok || meta.state != Running { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 404, Message: \"service unavailable\", Data: \"\"} } continue } // 调用目标服务处理，并返回 go func(s Service, m Event) { result := s.Handle(m) if m.ReplyCh != nil { select { case m.ReplyCh <- result: case <-time.After(time.Duration(m.TimeoutMs) * time.Millisecond): m.ReplyCh <- Reply{Code: 408, Message: \"timeout\", Data: \"\"} } } }(meta.svc, evt) } } }","s":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel5","h":"#21-kernel核心","p":1472},{"i":1479,"t":"Registered: logger Registered: echo Starting all services... [logger] starting... [echo] starting... [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } [logger] stopping... [echo] stopping... 查看完整代码","s":"2.2 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel5","h":"#22-运行结果","p":1472},{"i":1482,"t":"支持服务依赖关系管理","s":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel6","h":"#1-目标","p":1480},{"i":1485,"t":"定义服务依赖关系。依赖的是服务名称 // kernel/service.go // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string Handle(Event) Reply // Dependencies 返回依赖服务名称 Dependencies() []string // 新增接口 } // serviceMeta 定义微内核服务元数据 type serviceMeta struct { svc Service state ServiceState // 存储依赖，也可以不使用，直接使用svc.Dependencies deps []string } 注册Register增加deps // kernel/kernel.go // Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() name := svc.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil } 启动服务和停止服务增加拓扑排序 // kernel/kernel.go func (k *MicroKernel) topoSort() ([]string, error) { k.mu.RLock() defer k.mu.RUnlock() visited := make(map[string]bool) temp := make(map[string]bool) result := []string{} var visit func(string) error visit = func(name string) error { if temp[name] { return fmt.Errorf(\"circular dependency at %s\", name) } if visited[name] { return nil } temp[name] = true meta, ok := k.services[name] if !ok { return fmt.Errorf(\"service %s not registered\", name) } for _, dep := range meta.deps { if err := visit(dep); err != nil { return err } } visited[name] = true temp[name] = false result = append(result, name) return nil } for name := range k.services { if !visited[name] { if err := visit(name); err != nil { return nil, err } } } return result, nil } func (k *MicroKernel) StartAll() error { sorted, err := k.topoSort() // ... for _, name := range sorted { if err := k.StartService(name); err != nil { // ... } } return nil }","s":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel6","h":"#21-kernel核心","p":1480},{"i":1487,"t":"服务增加依赖方法实现 func (l *LogService) Dependencies() []string { return []string{\"echo\"} }","s":"2.2 服务","u":"/en/docs/note/golang/design/microkernel/microkernel6","h":"#22-服务","p":1480},{"i":1489,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } Stopping all services... [logger] stopping... Stopped: logger [echo] stopping... Stopped: echo 查看完整代码","s":"2.3 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel6","h":"#23-运行结果","p":1480},{"i":1492,"t":"服务间通信（通过内核转发） 标准化消息协议结构 支持状态码、错误、数据负载。 异步+超时机制 服务发出请求时可以设置超时时间，避免长期阻塞。","s":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel4","h":"#1-目标","p":1490},{"i":1495,"t":"定义标准消息格式 Reply 包含code/message/Data Event ReplyCh 使用标准格式的Reply // kernel/kernel.go // Reply 定义内核事件回复 type Reply struct { Code int // 0 表示成功，非0表示错误码 Message string // 描述信息 Data string // 可选负载 } // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string // 增加响应通道,使用 chan Reply，提高回复的灵活性 ReplyCh chan Reply // 可选：超时时间 TimeoutMs int } 服务改造 handle 从处理字符串修改为处理事件，返回标准Reply // kernel/kernel.go // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string Handle(Event) Reply } Listen 路由和事件总线设计 // Listen 事件循环（处理服务间通信） // 监听事件，处理服务间通信 // 重命名 EventLoop 为 Listen func (k *Kernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: - %s\\n\", evt.From, evt.Content) // 发送给 Kernel 自己 if evt.To == \"\" { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 0, Message: \"Handled by kernel\", Data: \"ok\"} } continue } // 路由到目标服务 k.mu.RLock() svc, ok := k.services[evt.To] k.mu.RUnlock() if !ok { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 404, Message: \"Service not found\", Data: \"\"} } continue } // 调用目标服务处理，并返回 go func(s Service, m Event) { result := s.Handle(m) if m.ReplyCh != nil { select { case m.ReplyCh <- result: case <-time.After(time.Duration(m.TimeoutMs) * time.Millisecond): m.ReplyCh <- Reply{Code: 408, Message: \"timeout\", Data: \"\"} } } }(svc, evt) } } }","s":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel4","h":"#21-kernel核心","p":1490},{"i":1497,"t":"根据count随机分发（Push 指定了发送位置） func (l *LogService) run() { var count = 1 for { count++ select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 replyCh := make(chan kernel.Reply, 1) if count%2 == 0 { l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", Content: log, ReplyCh: replyCh, TimeoutMs: 1000, }) } else { l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", To: \"echo\", Content: log, ReplyCh: replyCh, TimeoutMs: 1000, }) } // 等待内核回应 reply := <-replyCh fmt.Printf(\"[%s] got reply from kernel: %s\\n\", l.Name(), reply.Message) } } }","s":"2.2 LogService","u":"/en/docs/note/golang/design/microkernel/microkernel4","h":"#22-logservice","p":1490},{"i":1499,"t":"func (e *EchoService) Handle(evt kernel.Event) kernel.Reply { return kernel.Reply{Code: 0, Message: \"echo service handled\", Data: fmt.Sprintf(\"from %s: %s\", evt.From, evt.Content)} }","s":"2.3 增加另一个类似的EchoService","u":"/en/docs/note/golang/design/microkernel/microkernel4","h":"#23-增加另一个类似的echoservice","p":1490},{"i":1501,"t":"Registered: logger # 注册另一个服务 Registered: echo [logger] starting... [echo] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [Kernel] Event from logger: - Hello, Echo! # 转发到echoService 处理 [logger] got reply from kernel: echo service handled [Kernel] Send Event to logger: Hello, Log! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... [echo] stopping... 查看完整代码","s":"2.4 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel4","h":"#24-运行结果","p":1490},{"i":1504,"t":"支持服务热更新 所有服务和内核通过统一接口打印日志 时间戳、服务名、级别（INFO/WARN/ERROR） 动态控制日志级别 输出到 stdout、文件、远程服务等 xxx","s":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel7","h":"#1-目标","p":1502},{"i":1507,"t":"新增ReplaceService 用于热替换服务 // kernel/kernel.go func (k *MicroKernel) ReplaceService(newSvc Service) error { k.mu.Lock() defer k.mu.Unlock() name := newSvc.Name() oldMeta, exists := k.services[name] if exists && oldMeta.state == Running { // 停止旧服务 oldMeta.svc.Stop() fmt.Printf(\"Stopped old version of %s\\n\", name) } // 替换服务实现，重建元信息 k.services[name] = &serviceMeta{ svc: newSvc, deps: newSvc.Dependencies(), state: Created, } // 重启服务（如旧服务在运行） if exists && oldMeta.state == Running { newSvc.Start() k.services[name].state = Running fmt.Printf(\"Started new version of %s\\n\", name) } else { fmt.Printf(\"Registered new version of %s (not started)\\n\", name) } return nil } 注册Register增加deps // kernel/kernel.go // Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() name := svc.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil } 启动服务和停止服务增加拓扑排序 // kernel/kernel.go func (k *MicroKernel) topoSort() ([]string, error) { k.mu.RLock() defer k.mu.RUnlock() visited := make(map[string]bool) temp := make(map[string]bool) result := []string{} var visit func(string) error visit = func(name string) error { if temp[name] { return fmt.Errorf(\"circular dependency at %s\", name) } if visited[name] { return nil } temp[name] = true meta, ok := k.services[name] if !ok { return fmt.Errorf(\"service %s not registered\", name) } for _, dep := range meta.deps { if err := visit(dep); err != nil { return err } } visited[name] = true temp[name] = false result = append(result, name) return nil } for name := range k.services { if !visited[name] { if err := visit(name); err != nil { return nil, err } } } return result, nil } func (k *MicroKernel) StartAll() error { sorted, err := k.topoSort() // ... for _, name := range sorted { if err := k.StartService(name); err != nil { // ... } } return nil }","s":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel7","h":"#21-kernel核心","p":1502},{"i":1509,"t":"日志服务设计 type LogLevel int const ( INFO LogLevel = iota WARN ERROR ) type Logger struct { mu sync.Mutex level LogLevel service string out io.Writer } 方法实现 func NewLogger(service string, level LogLevel, out io.Writer) *Logger { return &Logger{ service: service, level: level, out: out, } } func (l *Logger) logf(level LogLevel, format string, args ...any) { if level < l.level { return } l.mu.Lock() defer l.mu.Unlock() levelStr := [...]string{\"INFO\", \"WARN\", \"ERROR\"}[level] msg := fmt.Sprintf(format, args...) ts := time.Now().Format(\"2006-01-02 15:04:05.000\") fmt.Fprintf(l.out, \"[%s] [%s] [%s] %s\\n\", ts, levelStr, l.service, msg) } func (l *Logger) Infof(format string, args ...any) { l.logf(INFO, format, args...) } func (l *Logger) Warnf(format string, args ...any) { l.logf(WARN, format, args...) } func (l *Logger) Errorf(format string, args ...any) { l.logf(ERROR, format, args...) } 服务中使用 type EchoServiceV3 struct { log *Logger } func NewEchoServiceV3() *EchoServiceV3 { return &EchoServiceV3{ log: NewLogger(\"echo\", INFO, os.Stdout), } } //... func (e *EchoServiceV3) Start() { e.log.Infof(\"started\") }","s":"2.2 日志服务","u":"/en/docs/note/golang/design/microkernel/microkernel7","h":"#22-日志服务","p":1502},{"i":1511,"t":"热替换服务 // 7. 热替换服务 // 热更新为 V2 _ = microKernel.ReplaceService(service.NewEchoServiceV2(microKernel)) // 测试 V2 行为 replyCh2 := make(chan microkernel.Reply, 1) microKernel.Push(microkernel.Event{ From: \"main\", Type: \"log\", Content: \"log\", ReplyCh: replyCh2, TimeoutMs: 1000, }) fmt.Println(\"v2 reply:\", <-replyCh2)","s":"2.3 main","u":"/en/docs/note/golang/design/microkernel/microkernel7","h":"#23-main","p":1502},{"i":1513,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } [echo] stopping... Stopped old version of echo [2025-04-23 21:46:11.935] [INFO] [echo] [echov2] starting... Started new version of echo [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... [log] stopping Stopped: echo Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } Stopping all services... [logger] stopping... Stopped: logger [echo] stopping... Stopped: echo 查看完整代码","s":"2.4 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel7","h":"#24-运行结果","p":1502},{"i":1516,"t":"服务热更新增加状态迁移 支持服务加密状态迁移","s":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel8","h":"#1-目标","p":1514},{"i":1519,"t":"新增状态接口 // 旧服务可选实现：导出状态 type Exportable interface { ExportState() any } // 新服务可选实现：导入状态 type Importable interface { ImportState(state any) error } 加密接口 type Crypter interface { Encrypt(data any) ([]byte, error) Decrypt(cipher []byte) (any, error) } 加密实现 使用aes type AESCrypter struct { key []byte // 16/24/32 字节 } func NewAESCrypter(key []byte) *AESCrypter { return &AESCrypter{key: key} } func (a *AESCrypter) Encrypt(data any) ([]byte, error) { plaintext, err := json.Marshal(data) if err != nil { return nil, err } block, err := aes.NewCipher(a.key) if err != nil { return nil, err } aesgcm, err := cipher.NewGCM(block) if err != nil { return nil, err } nonce := make([]byte, aesgcm.NonceSize()) if _, err := io.ReadFull(rand.Reader, nonce); err != nil { return nil, err } ciphertext := aesgcm.Seal(nonce, nonce, plaintext, nil) return ciphertext, nil } func (a *AESCrypter) Decrypt(ciphertext []byte) (any, error) { block, err := aes.NewCipher(a.key) if err != nil { return nil, err } aesgcm, err := cipher.NewGCM(block) if err != nil { return nil, err } nonceSize := aesgcm.NonceSize() if len(ciphertext) < nonceSize { return nil, fmt.Errorf(\"ciphertext too short\") } nonce := ciphertext[:nonceSize] cipherData := ciphertext[nonceSize:] plaintext, err := aesgcm.Open(nil, nonce, cipherData, nil) if err != nil { return nil, err } var result any if err := json.Unmarshal(plaintext, &result); err != nil { return nil, err } return result, nil } 替换服务 //func (k *MicroKernel) ReplaceService(newSvc Service) error { // k.mu.Lock() // defer k.mu.Unlock() // // name := newSvc.Name() // oldMeta, exists := k.services[name] // var state any // // if exists { // if exporter, ok := oldMeta.svc.(Exportable); ok { // state = exporter.ExportState() // } // oldMeta.svc.Stop() // fmt.Printf(\"Stopped old version of %s\\n\", name) // } // // // 状态迁移 // if importer, ok := newSvc.(Importable); ok && state != nil { // if err := importer.ImportState(state); err != nil { // return fmt.Errorf(\"state import failed: %w\\n\", err) // } // fmt.Printf(\"State migrated for service %s\\n\", name) // } // // // 替换服务元信息 // k.services[name] = &serviceMeta{ // svc: newSvc, // deps: newSvc.Dependencies(), // state: Created, // } // // // 重启服务 // if exists && oldMeta.state == Running { // newSvc.Start() // k.services[name].state = Running // fmt.Printf(\"Started new version of %s\", name) // } else { // fmt.Printf(\"Registered new version of %s (not started)\", name) // } // // return nil //} func (k *MicroKernel) ReplaceServiceEncrypted(newSvc Service, crypter Crypter) error { k.mu.Lock() defer k.mu.Unlock() name := newSvc.Name() oldMeta, exists := k.services[name] var encryptedState []byte if exists { if exporter, ok := oldMeta.svc.(Exportable); ok { rawState := exporter.ExportState() cipher, err := crypter.Encrypt(rawState) if err != nil { return fmt.Errorf(\"state encryption failed: %w\", err) } encryptedState = cipher } oldMeta.svc.Stop() fmt.Printf(\"Stopped old version of %s\\n\", name) } // 状态导入（解密） if importer, ok := newSvc.(Importable); ok && encryptedState != nil { decrypted, err := crypter.Decrypt(encryptedState) if err != nil { return fmt.Errorf(\"state decryption failed: %w\", err) } if err := importer.ImportState(decrypted); err != nil { return fmt.Errorf(\"state import failed: %w\", err) } fmt.Printf(\"Encrypted state migrated for service %s\\n\", name) } k.services[name] = &serviceMeta{ svc: newSvc, deps: newSvc.Dependencies(), state: Created, } if exists && oldMeta.state == Running { newSvc.Start() k.services[name].state = Running fmt.Printf(\"Started new version of %s\\n\", name) } else { fmt.Printf(\"Registered new version of %s (not started)\\n\", name) } return nil }","s":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel8","h":"#21-kernel核心","p":1514},{"i":1521,"t":"实现状态接口 func (e *EchoServiceV2) ImportState(state any) error { if val, ok := state.(int); ok { e.echoCount = val return nil } return fmt.Errorf(\"invalid state type\") } func (e *EchoService) ExportState() any { return e.echoCount }","s":"2.2 echo服务","u":"/en/docs/note/golang/design/microkernel/microkernel8","h":"#22-echo服务","p":1514},{"i":1523,"t":"热替换服务 // 7. 热替换服务 // 热更新为 V2 aesKey := []byte(\"1234567890123456\") // 16 字节对称密钥 microKernel.ReplaceServiceEncrypted(service.NewEchoServiceV2(microKernel), microkernel.NewAESCrypter(aesKey))","s":"2.3 main","u":"/en/docs/note/golang/design/microkernel/microkernel8","h":"#23-main","p":1514},{"i":1525,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to echo: Hello, Log! {0 echo service handled from microKernel: Hello, Log!} [echo] stopping... Stopped old version of echo State migrated for service echo [2025-04-24 21:28:38.032] [INFO] [echo] [echov2] starting... Started new version of echo[MicroKernel] Send Event to echo: Hello, Log! [echo] count is 10 {0 echo v2 service handled from microKernel: Hello, Log!} [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... Stopped: echo [log] stopping 查看完整代码","s":"2.4 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel8","h":"#24-运行结果","p":1514},{"i":1527,"t":"服务状态持久化","s":"microkernel 设计9","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"","p":1526},{"i":1529,"t":"服务状态在 Stop() 或热替换时 导出 + 加密 + 写入磁盘 注册服务时若检测到磁盘中有状态，则 读取 + 解密 + 导入 每个服务有自己的状态文件（支持多服务）","s":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#1-目标","p":1526},{"i":1532,"t":"存储目录：/var/lib/microkernel/state/（示例） 文件名：<service_name>.state 文件内容：已加密的字节流","s":"2.1 存储文件设计","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#21-存储文件设计","p":1526},{"i":1534,"t":"type StateStore struct { dir string crypter Crypter } func NewStateStore(dir string, crypter Crypter) *StateStore { return &StateStore{dir: dir, crypter: crypter} } func (s *StateStore) path(name string) string { return filepath.Join(s.dir, name+\".state\") } func (s *StateStore) Save(name string, state any) error { encrypted, err := s.crypter.Encrypt(state) if err != nil { return err } if err := os.MkdirAll(s.dir, 0755); err != nil { return err } return os.WriteFile(s.path(name), encrypted, 0600) } func (s *StateStore) Load(name string) (any, error) { data, err := os.ReadFile(s.path(name)) if err != nil { return nil, err } return s.crypter.Decrypt(data) } func (s *StateStore) Exists(name string) bool { _, err := os.Stat(s.path(name)) return err == nil }","s":"2.2 状态管理模块：StateStore","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#22-状态管理模块statestore","p":1526},{"i":1537,"t":"type MicroKernel struct { ... stateStore *StateStore } func NewMicroKernelWithState(store *StateStore) *MicroKernel { return &MicroKernel{ services: make(map[string]*serviceMeta), stateStore: store, logger: NewLogger(\"kernel\", INFO, os.Stdout), } }","s":"3.1 kernel 初始化集成StateStore","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#31-kernel-初始化集成statestore","p":1526},{"i":1539,"t":"// Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() // name 可以放在锁前面，优化性能 name := svc.Name() // 增加状态导入 // 如果使用的接口，这边就使用的接口方法 if k.stateStore != nil && k.stateStore.Exists(name) { // 查看服务是否支持状态导入 // 状态导入不要求每个服务必须实现 // 如果没有实现，就直接忽略 if importer, ok := svc.(Importable); ok { raw, err := k.stateStore.Load(name) if err != nil { return fmt.Errorf(\"state load failed: %w\\n\", err) } err = importer.ImportState(raw) if err != nil { return fmt.Errorf(\"state import failed: %w\\n\", err) } fmt.Printf(\"State migrated for service %s\\n\", name) } } if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil }","s":"3.2 注册服务时尝试自动加载状态","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#32-注册服务时尝试自动加载状态","p":1526},{"i":1541,"t":"func (k *MicroKernel) StopService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Stopped { return errors.New(\"service already stopped\") } // 增加状态导出判断 if exporter, ok := meta.svc.(Exportable); ok && k.stateStore != nil { if err := k.stateStore.Save(name, exporter.ExportState()); err == nil { fmt.Printf(\"State persisted for %s\\n\", name) } } if err := meta.svc.Stop(); err != nil { return err } meta.state = Stopped fmt.Println(\"Stopped:\", meta.svc.Name()) return nil }","s":"3.3 停止服务时，保存状态","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#33-停止服务时保存状态","p":1526},{"i":1543,"t":"func (k *MicroKernel) Listen(ctx context.Context) { // 间隔可以加在kernel的struct中，也可以使用方法来获取 ticker := time.NewTicker(2 * time.Second) for { select { case <-ctx.Done(): return case <-ticker.C: fmt.Println(\"Timed writing state\") if k.stateStore != nil { for name, meta := range k.services { if meta.state == Running { if exporter, ok := meta.svc.(Exportable); ok { if err := k.stateStore.Save(name, exporter.ExportState()); err == nil { fmt.Printf(\"State persisted for %s\\n\", name) } } } } }","s":"3.4 定时持久化状态","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#34-定时持久化状态","p":1526},{"i":1545,"t":"crypter := microkernel.NewAESCrypter([]byte(\"1234567890123456\")) store := microkernel.NewStateStore(\"./state\", crypter) // 1. 创建微内核 microKernel := microkernel.NewMicroKernel(store) // 增加加密存储","s":"4. main","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#4-main","p":1526},{"i":1547,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to echo: Hello, Log! {0 echo service handled from microKernel: Hello, Log!} [echo] stopping... Stopped old version of echo Encrypted state migrated for service echo [2025-04-26 19:47:00.801] [INFO] [echo] [echov2] starting... Started new version of echo [MicroKernel] Send Event to echo: Hello, Log! [echo] count is 10 {0 echo v2 service handled from microKernel: Hello, Log!} [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... Stopped: echo 查看完整代码","s":"4.1 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#41-运行结果","p":1526},{"i":1549,"t":"面向对象编程(OOP)有几个核心设计原则，这些原则有助于创建灵活、可维护和可扩展的软件系统。以下是主要的OOP设计原则：","s":"面向对象编程中的设计原则","u":"/en/docs/note/golang/design/oop_pinciple/principle","h":"","p":1548},{"i":1551,"t":"单一职责原则(SRP - Single Responsibility Principle) 一个类应该只有一个引起它变化的原因 每个类只负责一项职责 开闭原则(OCP - Open/Closed Principle) 软件实体(类、模块、函数等)应该对扩展开放，对修改关闭 通过抽象和继承实现新功能，而不是修改现有代码 里氏替换原则(LSP - Liskov Substitution Principle) 子类型必须能够替换它们的基类型 派生类不应改变基类的行为，只能扩展它 接口隔离原则(ISP - Interface Segregation Principle) 客户端不应被迫依赖它们不使用的接口 将大接口拆分为更小、更具体的接口 依赖倒置原则(DIP - Dependency Inversion Principle) 高层模块不应依赖低层模块，两者都应依赖抽象 抽象不应依赖细节，细节应依赖抽象","s":"SOLID原则","u":"/en/docs/note/golang/design/oop_pinciple/principle","h":"#solid原则","p":1548},{"i":1553,"t":"组合优于继承原则 优先使用对象组合而不是类继承来重用功能 提高灵活性，减少类层次结构的复杂性 迪米特法则(最少知识原则 - Law of Demeter) 一个对象应该对其他对象有最少的了解 只与直接的朋友通信，减少类之间的耦合 DRY原则(Don't Repeat Yourself) 避免重复代码 将重复逻辑提取到公共方法或类中 KISS原则(Keep It Simple, Stupid) 保持设计简单直接 避免不必要的复杂性 YAGNI原则(You Aren't Gonna Need It) 不要添加当前不需要的功能 避免过度设计","s":"其他重要原则","u":"/en/docs/note/golang/design/oop_pinciple/principle","h":"#其他重要原则","p":1548},{"i":1556,"t":"单一职责原则(Single Responsibility Principle, SRP) 是SOLID原则中的第一个原则，由Robert C. Martin提出。其核心思想是： 一个类或模块应该只有一个引起它变化的原因。换句话说，一个类或模块应该只负责一项职责。 在Go语言中，这一原则主要应用于struct和interface的设计。","s":"1. 概述","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#1-概述","p":1554},{"i":1559,"t":"提高可维护性：修改一个功能不会影响其他不相关的功能 降低复杂度：每个结构体/接口只做一件事，更易于理解 增强可测试性：单一职责的组件更容易测试 提高复用性：细粒度的组件可以在更多场景中被复用","s":"优点：","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#优点","p":1554},{"i":1561,"t":"代码难以理解和维护 修改一个功能可能意外破坏其他功能 测试困难 难以复用","s":"违反SRP的后果：","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#违反srp的后果","p":1554},{"i":1564,"t":"// 违反SRP的例子：UserManager承担了太多职责 type UserManager struct { db *sql.DB } func (um *UserManager) CreateUser(user User) error { // 创建用户逻辑 _, err := um.db.Exec(\"INSERT INTO users (...) VALUES (...)\") return err } func (um *UserManager) SendWelcomeEmail(user User) error { // 发送欢迎邮件逻辑 return sendEmail(user.Email, \"Welcome!\", \"Welcome to our platform!\") } func (um *UserManager) GenerateReport() ([]byte, error) { // 生成用户报告逻辑 rows, err := um.db.Query(\"SELECT * FROM users\") // ...处理rows生成报告 return reportData, nil } 问题分析： 用户管理 邮件发送 报告生成 这三个完全不相关的功能被耦合在同一个结构体中","s":"3.1 违反SRP的例子","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#31-违反srp的例子","p":1554},{"i":1566,"t":"// 用户存储职责 type UserRepository struct { db *sql.DB } func (ur *UserRepository) Create(user User) error { _, err := ur.db.Exec(\"INSERT INTO users (...) VALUES (...)\") return err } func (ur *UserRepository) GetAll() ([]User, error) { rows, err := ur.db.Query(\"SELECT * FROM users\") // ...处理rows返回用户列表 return users, nil } // 邮件服务职责 type EmailService struct { smtpServer string } func (es *EmailService) SendWelcomeEmail(user User) error { return sendEmail(user.Email, \"Welcome!\", \"Welcome to our platform!\") } // 报告生成职责 type ReportGenerator struct { userRepo *UserRepository } func (rg *ReportGenerator) GenerateUserReport() ([]byte, error) { users, err := rg.userRepo.GetAll() // ...基于用户数据生成报告 return reportData, nil } 改进点： 将原来的UserManager拆分为三个独立的组件 每个组件只负责一项明确的职责 组件之间通过依赖注入协作","s":"3.2 遵循SRP的改进版本","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#32-遵循srp的改进版本","p":1554},{"i":1569,"t":"// 小而专注的接口 type UserStorer interface { Create(user User) error GetByID(id int) (*User, error) } type EmailSender interface { Send(to, subject, body string) error }","s":"4.1 接口设计","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#41-接口设计","p":1554},{"i":1571,"t":"type UserService struct { repo UserRepository email EmailService report ReportGenerator } func (us *UserService) RegisterNewUser(user User) error { if err := us.repo.Create(user); err != nil { return err } return us.email.SendWelcomeEmail(user) }","s":"4.2 组合代替继承","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#42-组合代替继承","p":1554},{"i":1573,"t":"// 不好的例子：函数做太多事情 func processUserData(data []byte) (User, error) { // 1. 验证数据 // 2. 解析数据 // 3. 保存到数据库 // 4. 发送通知 } // 好的例子：拆分为多个单一职责的函数 func validateUserData(data []byte) error {} func parseUserData(data []byte) (User, error) {} func saveUser(user User) error {} func notifyUserCreated(user User) error {}","s":"4.3 函数职责单一","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#43-函数职责单一","p":1554},{"i":1576,"t":"当一个结构体/接口变得庞大时 当修改一个功能会影响不相关功能时 当难以给结构体起一个准确的名称时(如UserManagerAndReportGenerator)","s":"应该应用SRP的情况：","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#应该应用srp的情况","p":1554},{"i":1578,"t":"对于简单的小型项目 对于确实紧密相关的功能 当拆分会导致不必要的复杂性时","s":"不必过度应用：","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#不必过度应用","p":1554},{"i":1580,"t":"SRP是编写可维护、可扩展代码的基础 在Go中，通过小而专注的结构体和接口来实现SRP 组合优于继承，依赖注入是实现SRP的好帮手 合理应用SRP，但避免过度设计 记住：让一个结构体/接口只为一个改变的理由而存在。","s":"6. 总结","u":"/en/docs/note/golang/design/oop_pinciple/srp","h":"#6-总结","p":1554},{"i":1583,"t":"开闭原则(Open/Closed Principle, OCP) 是SOLID原则中的第二个原则，由Bertrand Meyer提出。其核心思想是： 软件实体（类、模块、函数等）应该对扩展开放，对修改关闭。 在Go语言中，这一原则主要通过**接口(interface)和组合(composition)**来实现。","s":"1. 开闭原则简介","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#1-开闭原则简介","p":1581},{"i":1585,"t":"对扩展开放：允许在不修改现有代码的情况下添加新功能 对修改关闭：现有代码应尽可能不被修改，以保持稳定性 抽象是关键：通过抽象建立灵活的基础结构","s":"2. OCP的核心概念","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#2-ocp的核心概念","p":1581},{"i":1588,"t":"// 支付方式接口 - 抽象层 type PaymentMethod interface { Pay(amount float64) error } // 信用卡支付实现 type CreditCardPayment struct{} func (c *CreditCardPayment) Pay(amount float64) error { fmt.Printf(\"支付 %.2f 元使用信用卡\\n\", amount) return nil } // 支付宝支付实现 type AlipayPayment struct{} func (a *AlipayPayment) Pay(amount float64) error { fmt.Printf(\"支付 %.2f 元使用支付宝\\n\", amount) return nil } // 支付处理器 - 对修改关闭 type PaymentProcessor struct { method PaymentMethod } func (p *PaymentProcessor) ProcessPayment(amount float64) error { return p.method.Pay(amount) }","s":"3.1 使用接口实现OCP","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#31-使用接口实现ocp","p":1581},{"i":1590,"t":"// 新增微信支付 - 扩展而非修改 type WeChatPayment struct{} func (w *WeChatPayment) Pay(amount float64) error { fmt.Printf(\"支付 %.2f 元使用微信支付\\n\", amount) return nil } // 使用方式 func main() { processor := &PaymentProcessor{method: &WeChatPayment{}} processor.ProcessPayment(100.50) }","s":"3.2 添加新支付方式（扩展）","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#32-添加新支付方式扩展","p":1581},{"i":1593,"t":"type PaymentType int const ( CreditCard PaymentType = iota Alipay ) // 直接依赖具体实现 func ProcessPayment(paymentType PaymentType, amount float64) error { switch paymentType { case CreditCard: fmt.Printf(\"支付 %.2f 元使用信用卡\\n\", amount) case Alipay: fmt.Printf(\"支付 %.2f 元使用支付宝\\n\", amount) default: return fmt.Errorf(\"不支持的支付方式\") } return nil } 问题：每次新增支付方式都需要修改ProcessPayment函数","s":"4.1 违反OCP的代码","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#41-违反ocp的代码","p":1581},{"i":1595,"t":"// 使用接口抽象 type PaymentMethod interface { Pay(amount float64) error } // 注册支付方式的处理器 type PaymentHandler struct { methods map[string]PaymentMethod } func (h *PaymentHandler) Register(name string, method PaymentMethod) { h.methods[name] = method } func (h *PaymentHandler) Process(name string, amount float64) error { if method, ok := h.methods[name]; ok { return method.Pay(amount) } return fmt.Errorf(\"支付方式未注册\") }","s":"4.2 重构为符合OCP的代码","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#42-重构为符合ocp的代码","p":1581},{"i":1598,"t":"type Server struct { host string port int timeout time.Duration } type Option func(*Server) func WithHost(host string) Option { return func(s *Server) { s.host = host } } func WithPort(port int) Option { return func(s *Server) { s.port = port } } func NewServer(opts ...Option) *Server { s := &Server{ host: \"localhost\", port: 8080, timeout: 30 * time.Second, } for _, opt := range opts { opt(s) } return s }","s":"5.1 函数选项模式(Functional Options)","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#51-函数选项模式functional-options","p":1581},{"i":1600,"t":"type Handler func(http.ResponseWriter, *http.Request) func LoggingMiddleware(next Handler) Handler { return func(w http.ResponseWriter, r *http.Request) { log.Printf(\"请求开始: %s %s\", r.Method, r.URL.Path) next(w, r) log.Printf(\"请求结束: %s %s\", r.Method, r.URL.Path) } } func AuthMiddleware(next Handler) Handler { return func(w http.ResponseWriter, r *http.Request) { if r.Header.Get(\"Authorization\") == \"\" { http.Error(w, \"未授权\", http.StatusUnauthorized) return } next(w, r) } }","s":"5.2 中间件模式","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#52-中间件模式","p":1581},{"i":1602,"t":"支付系统（如上面的示例） 日志系统（文件日志、控制台日志、网络日志等） 数据存储（MySQL、MongoDB、Redis等） 通知系统（邮件、短信、微信通知等） 中间件管道（Web中间件、RPC拦截器等）","s":"6. OCP的实际应用场景","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#6-ocp的实际应用场景","p":1581},{"i":1604,"t":"控制台输出 文件输出 未来可以轻松添加网络日志","s":"7. OCP的日志系统","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#7-ocp的日志系统","p":1581},{"i":1606,"t":"7.1.1 定义日志接口（抽象层）​ // Logger 日志接口 - 核心抽象 type Logger interface { Log(level string, message string) error Close() error } 7.1.2 实现具体日志输出​ 控制台日志输出 // ConsoleLogger 控制台日志实现 type ConsoleLogger struct { // 可以添加需要的字段，如是否彩色输出等 } func NewConsoleLogger() *ConsoleLogger { return &ConsoleLogger{} } func (c *ConsoleLogger) Log(level string, message string) error { _, err := fmt.Printf(\"[%s] %s\\n\", level, message) return err } func (c *ConsoleLogger) Close() error { // 控制台日志无需关闭资源 return nil } 文件日志输出 // FileLogger 文件日志实现 type FileLogger struct { file *os.File } func NewFileLogger(filename string) (*FileLogger, error) { file, err := os.OpenFile(filename, os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0644) if err != nil { return nil, err } return &FileLogger{file: file}, nil } func (f *FileLogger) Log(level string, message string) error { _, err := fmt.Fprintf(f.file, \"[%s] %s %s\\n\", time.Now().Format(\"2006-01-02 15:04:05\"), level, message) return err } func (f *FileLogger) Close() error { return f.file.Close() }","s":"7.1 基础设计","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#71-基础设计","p":1581},{"i":1608,"t":"// CompositeLogger 组合多个日志输出 type CompositeLogger struct { loggers []Logger } func NewCompositeLogger(loggers ...Logger) *CompositeLogger { return &CompositeLogger{loggers: loggers} } func (c *CompositeLogger) Log(level string, message string) error { for _, logger := range c.loggers { if err := logger.Log(level, message); err != nil { return err } } return nil } func (c *CompositeLogger) Close() error { for _, logger := range c.loggers { if err := logger.Close(); err != nil { return err } } return nil }","s":"7.2 组合日志器（支持多种输出）","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#72-组合日志器支持多种输出","p":1581},{"i":1610,"t":"// LoggerType 定义日志类型 type LoggerType string const ( LoggerConsole LoggerType = \"console\" LoggerFile LoggerType = \"file\" // 未来可以添加 LoggerNetwork ) // LoggerConfig 日志配置 type LoggerConfig struct { Type LoggerType FilePath string // 仅文件日志需要 } // NewLoggerFromConfig 根据配置创建日志器 func NewLoggerFromConfig(config LoggerConfig) (Logger, error) { switch config.Type { case LoggerConsole: return NewConsoleLogger(), nil case LoggerFile: return NewFileLogger(config.FilePath) default: return nil, fmt.Errorf(\"未知的日志类型: %s\", config.Type) } }","s":"7.3 使用工厂方法创建日志器","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#73-使用工厂方法创建日志器","p":1581},{"i":1612,"t":"未来需要添加网络日志时，只需新增实现，无需修改现有代码： // NetworkLogger 网络日志实现 type NetworkLogger struct { endpoint string client *http.Client } func NewNetworkLogger(endpoint string) *NetworkLogger { return &NetworkLogger{ endpoint: endpoint, client: &http.Client{Timeout: 5 * time.Second}, } } func (n *NetworkLogger) Log(level string, message string) error { data := map[string]string{ \"level\": level, \"message\": message, \"time\": time.Now().Format(time.RFC3339), } jsonData, _ := json.Marshal(data) resp, err := n.client.Post(n.endpoint, \"application/json\", bytes.NewBuffer(jsonData)) if err != nil { return err } defer resp.Body.Close() if resp.StatusCode >= 400 { return fmt.Errorf(\"日志服务器返回错误状态码: %d\", resp.StatusCode) } return nil } func (n *NetworkLogger) Close() error { // 可以在这里关闭长连接等资源 return nil }","s":"7.4 添加网络日志输出（扩展示例）","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#74-添加网络日志输出扩展示例","p":1581},{"i":1614,"t":"func main() { // 创建控制台日志器 consoleLogger := NewConsoleLogger() // 创建文件日志器 fileLogger, err := NewFileLogger(\"app.log\") if err != nil { panic(err) } // 创建组合日志器 compositeLogger := NewCompositeLogger(consoleLogger, fileLogger) // 使用日志 compositeLogger.Log(\"INFO\", \"应用程序启动\") compositeLogger.Log(\"WARN\", \"这是一个警告信息\") compositeLogger.Log(\"ERROR\", \"发生了一个错误\") // 关闭所有日志器 if err := compositeLogger.Close(); err != nil { fmt.Printf(\"关闭日志器时出错: %v\\n\", err) } // 未来添加网络日志 networkLogger := NewNetworkLogger(\"http://log-server.example.com/log\") extendedLogger := NewCompositeLogger(consoleLogger, fileLogger, networkLogger) extendedLogger.Log(\"INFO\", \"这条日志会输出到控制台、文件和网络\") extendedLogger.Close() }","s":"7.5 完整使用示例","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#75-完整使用示例","p":1581},{"i":1616,"t":"OCP的核心是通过抽象来隔离变化 在Go中主要使用接口和组合来实现OCP 函数选项模式和中间件模式是实践OCP的优雅方式 平衡原则：不要过度设计，只为预期的变化做抽象 好的设计应该像插件系统一样工作 - 通过添加新代码而非修改现有代码来扩展功能。","s":"8. 总结","u":"/en/docs/note/golang/design/oop_pinciple/ocp","h":"#8-总结","p":1581},{"i":1619,"t":"ide 警告找不到方法，但是又可以通过跳转找到对应的方法。在ide运行，手动运行也正常。 问题原因 识别到的库版本出现了差异，出现了版本不兼容的问题。 可以通过 go.mod 强行指定版本。 清理goland缓存。 有可能是ide的索引损坏了。可以通过点击菜单栏File -> Invalidate Caches / Restart...，选择 Invalidate and Restart重新生成索引。","s":"1. ide 警告找不到方法","u":"/en/docs/note/golang/goland","h":"#1-ide-警告找不到方法","p":1617},{"i":1622,"t":"在 Go 中，错误处理通常有两种方式：","s":"错误处理","u":"/en/docs/note/golang/jotting","h":"#错误处理","p":1620},{"i":1624,"t":"使用返回值返回一个 error 类型： func doSomething() (Result, error) { // ... }","s":"普通函数","u":"/en/docs/note/golang/jotting","h":"#普通函数","p":1620},{"i":1626,"t":"一种方式是像普通函数一样，直接返回一个 error。 另一种做法是，在结构体中增加一个 error 字段，在方法中设置这个字段的值。 type MyService struct { err error } func (s *MyService) Do() { // ... s.err = errors.New(\"something went wrong\") }","s":"结构体方法","u":"/en/docs/note/golang/jotting","h":"#结构体方法","p":1620},{"i":1628,"t":"在 Go 中，chan 是处理并发的核心工具之一，但并不是所有场景都适合使用它。以下是使用 chan 的建议与注意事项：","s":"Go 中何时使用 chan","u":"/en/docs/note/golang/jotting","h":"#go-中何时使用-chan","p":1620},{"i":1630,"t":"1. 异步操作 / 并发任务​ 函数中开启 goroutine 异步执行任务，通过返回的 chan 返回结果： func asyncAdd(a, b int) <-chan int { result := make(chan int) go func() { result <- a + b close(result) }() return result } 2. 流式数据传递​ 当函数生成一系列数据（如读取文件、流数据、分页 API 等），使用 chan 可以边生成边消费： func generate(n int) <-chan int { out := make(chan int) go func() { for i := 0; i < n; i++ { out <- i } close(out) }() return out } 3. 信号同步​ 当只需传递一个“完成”或“信号”，可以使用 chan struct{}： done := make(chan struct{}) go func() { // 做一些事 done <- struct{}{} }() <-done","s":"✅ 推荐使用的场景","u":"/en/docs/note/golang/jotting","h":"#-推荐使用的场景","p":1620},{"i":1632,"t":"只为传递一个返回值时：返回值即可，无需增加复杂度。 同步计算场景：没必要用 chan 包装同步调用。 为“函数式编程”风格强行引入 chan：Go 强调简洁，不宜滥用。","s":"❌ 不推荐的场景","u":"/en/docs/note/golang/jotting","h":"#-不推荐的场景","p":1620},{"i":1634,"t":"当你遇到如下报错： verifying module: invalid GOSUMDB: malformed verifier id 可能是 go.sum 校验失败。检查环境变量如下： $ go env GOSUMDB sum.golang.org $ go env GOPROXY https://goproxy.cn,direct 可尝试： 清空 go.sum 后重新运行 go mod tidy 切换 GOPROXY 为官方代理或关闭校验：GOSUMDB=off","s":"go mod tidy 报错 GOSUMDB","u":"/en/docs/note/golang/jotting","h":"#go-mod-tidy-报错-gosumdb","p":1620},{"i":1636,"t":"在 Go 中，空接口 interface{} 表示任意类型，类似于 Java 的 Object，但更加简洁高效。","s":"空接口 interface{} 与任意类型","u":"/en/docs/note/golang/jotting","h":"#空接口-interface-与任意类型","p":1620},{"i":1638,"t":"var arr = [3]int{1, 2, 3} value, ok := interface{}(arr).([3]int) ok 为 true 表示类型断言成功，value 即具体类型。 否则 ok 为 false。","s":"类型断言与转换","u":"/en/docs/note/golang/jotting","h":"#类型断言与转换","p":1620},{"i":1640,"t":"不占内存空间 在并发中常用于信号传递 ch := make(chan struct{}) ch <- struct{}{}","s":"空结构体 struct{}","u":"/en/docs/note/golang/jotting","h":"#空结构体-struct","p":1620},{"i":1642,"t":"Go 支持在 if 条件前定义变量： if n := \"abc\"; x < 0 { println(n[1]) } 等价于： n := \"abc\" if x < 0 { println(n[1]) } 注意：else if 与 else 的左大括号应与条件语句在同一行。","s":"if 判断语法简化","u":"/en/docs/note/golang/jotting","h":"#if-判断语法简化","p":1620},{"i":1645,"t":"使用channel 在 goroutine 间进行通信和同步操作 package main import ( \"fmt\" \"time\" ) // SetRulesRequest 表示设置规则的请求结构 type SetRulesRequest struct { NewRules []string Response chan error // 用于同步返回是否成功 } // Aggregator 用于管理规则并支持并发设置 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} } // SetRules 是向 aggregator 发送新规则的接口 func (a *Aggregator) SetRules(r []string) error { req := &SetRulesRequest{ NewRules: r, Response: make(chan error), } a.setRulesChan <- req return <-req.Response // 等待响应结束 } // Run 启动 aggregator 的工作协程 func (a *Aggregator) Run() { for { select { case req := <-a.setRulesChan: a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) req.Response <- nil // 成功响应 case <-a.stopChan: return } } } // Stop 关闭 aggregator 的后台协程 func (a *Aggregator) Stop() { close(a.stopChan) } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), } go aggregator.Run() // 模拟使用 time.Sleep(500 * time.Millisecond) aggregator.SetRules([]string{\"a\", \"b\", \"c\"}) aggregator.SetRules([]string{\"d\", \"e\", \"f\"}) // 停止后台协程 aggregator.Stop() } 🔍 说明重点： 通信模型：调用者通过 SetRules 向 Aggregator 的 channel 发送数据，然后通过一个 Response channel 同步等待执行结果。 响应式设计：Aggregator 处理请求后通过 channel 回复，避免竞态。 易扩展性：你可以将更多操作（如查询、追加等）封装成不同的 request 结构体，并通过不同 channel 或类型区分处理。","s":"1. channel 交互","u":"/en/docs/note/golang/design/multi_goroutine","h":"#1-channel-交互","p":1643},{"i":1648,"t":"发送端（ch <- v）向已关闭 channel 发送数据： 会 panic！ 接收端（<-chan）读取已关闭 channel： 不会 panic， 立即返回零值 第二个返回值判断是否关闭。即：v, ok := <-ch，如果 ok == false，说明 channel 已关闭。 不判断。即: v := <-ch，立即返回零值，无法判断 channel 是否关闭。 即：v, ok := <-ch，如果 ok == false，说明 channel 已关闭。 举例 package main import ( \"log\" \"time\" ) func main() { //ch := make(chan int, 2) ch := make(chan int) go func() { ch <- 20 time.Sleep(1 * time.Second) defer close(ch) }() // 只接收数据，不检查通道状态 rules := <-ch log.Println(\"Rules:\", rules) // 输出：14:47:31 Rules: 20 rules = <-ch log.Println(\"Rules:\", rules) // 输出：14:47:32 Rules: 0 rules = <-ch log.Println(\"Rules:\", rules) // 输出：14:47:32 Rules: 0 // 读取时检查通道是否仍然开放 rules, open := <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:39 Rules: 20 Open: true rules, open = <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:40 Rules: 0 Open: false rules, open = <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:40 Rules: 0 Open: false }","s":"2.1. 理解 channel 行为","u":"/en/docs/note/golang/design/multi_goroutine","h":"#21-理解-channel-行为","p":1643},{"i":1650,"t":"✅ 特性亮点： 安全关闭 goroutine： setRulesChan 和 stopChan 都支持关闭，防止死锁或 panic。 带 ok 判断防止接收已关闭的 channel 导致数据为 nil。 封装清晰： Run() 执行逻辑清晰，Stop() 方法负责安全退出和资源清理。 package main import ( \"fmt\" \"time\" ) // 请求结构体，设置规则并通过 Response 返回结果 type SetRulesRequest struct { NewRules []string Response chan error } // 聚合器结构 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} doneChan chan struct{} // 通知主线程已退出 } // Run 启动 Aggregator 的工作协程 func (a *Aggregator) Run() { defer close(a.doneChan) // 通知主线程：后台协程已退出 for { select { case req, ok := <-a.setRulesChan: if !ok { fmt.Println(\"setRulesChan closed, exiting Run()\") return } a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) // 响应调用者 req.Response <- nil case <-a.stopChan: fmt.Println(\"Received stop signal, exiting Run()\") return } } } // SetRules 发送规则请求 func (a *Aggregator) SetRules(r []string) error { req := &SetRulesRequest{ NewRules: r, Response: make(chan error), } select { case a.setRulesChan <- req: return <-req.Response case <-a.stopChan: return fmt.Errorf(\"aggregator is shutting down\") } } // Stop 关闭 aggregator，确保 goroutine 优雅退出 func (a *Aggregator) Stop() { close(a.stopChan) // 通知退出 close(a.setRulesChan) // 防止阻塞在 <-setRulesChan <-a.doneChan // 等待后台处理完成 fmt.Println(\"Aggregator stopped gracefully\") } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), doneChan: make(chan struct{}), } go aggregator.Run() time.Sleep(500 * time.Millisecond) aggregator.SetRules([]string{\"a\", \"b\", \"c\"}) aggregator.SetRules([]string{\"x\", \"y\", \"z\"}) aggregator.Stop() }","s":"2.2. 使用判断channel 优化示例","u":"/en/docs/note/golang/design/multi_goroutine","h":"#22-使用判断channel-优化示例","p":1643},{"i":1652,"t":"🧠 为啥用 context.Context？ 防止调用者被永久阻塞：例如 aggregator goroutine 迟迟不响应。 可设置 timeout 或 cancel，适合服务端编程模型。 可组合多种取消方式（定时取消 + 主动取消）。 ✅ 增强功能： SetRules 支持超时 / 取消（避免卡死等待响应）。 context.Context 控制响应等待过程。 依然保留 graceful shutdown 支持（Stop()）。 package main import ( \"context\" \"fmt\" \"time\" ) // 请求结构体，设置规则并通过 Response 返回结果 type SetRulesRequest struct { NewRules []string Response chan error } // 聚合器结构体 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} doneChan chan struct{} } // Run 启动 aggregator 的工作协程 func (a *Aggregator) Run() { defer close(a.doneChan) for { select { case req, ok := <-a.setRulesChan: if !ok { fmt.Println(\"setRulesChan closed, exiting Run()\") return } a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) req.Response <- nil case <-a.stopChan: fmt.Println(\"Received stop signal, exiting Run()\") return } } } // SetRulesCtx 支持 context 超时 / 取消控制 func (a *Aggregator) SetRulesCtx(ctx context.Context, rules []string) error { req := &SetRulesRequest{ NewRules: rules, Response: make(chan error, 1), // 非阻塞回写 } // 模拟耗时操作 time.Sleep(2 * time.Millisecond) select { case a.setRulesChan <- req: // 等待响应 or context 超时 select { case err := <-req.Response: return err case <-ctx.Done(): return fmt.Errorf(\"set rules timeout or cancelled: %w\", ctx.Err()) } case <-a.stopChan: return fmt.Errorf(\"aggregator shutting down\") case <-ctx.Done(): return fmt.Errorf(\"send timeout or cancelled: %w\", ctx.Err()) } } // Stop 优雅关闭 func (a *Aggregator) Stop() { close(a.stopChan) close(a.setRulesChan) <-a.doneChan fmt.Println(\"Aggregator stopped gracefully\") } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), doneChan: make(chan struct{}), } go aggregator.Run() // 模拟正常调用 ctx := context.Background() aggregator.SetRulesCtx(ctx, []string{\"a\", \"b\", \"c\"}) // 模拟带 timeout 的调用（1ms 会超时） ctxTimeout, cancel := context.WithTimeout(context.Background(), 1*time.Millisecond) defer cancel() err := aggregator.SetRulesCtx(ctxTimeout, []string{\"should\", \"fail\", \"fast\"}) if err != nil { fmt.Println(\"Timeout err:\", err) } // 正常调用 ctx2, cancel2 := context.WithTimeout(context.Background(), 2*time.Second) defer cancel2() aggregator.SetRulesCtx(ctx2, []string{\"x\", \"y\", \"z\"}) aggregator.Stop() }","s":"3. 支持 context.Context","u":"/en/docs/note/golang/design/multi_goroutine","h":"#3-支持-contextcontext","p":1643},{"i":1654,"t":"CommandHandler 模式是命令模式（Command Pattern）的一种实现方式，常用于将请求（命令）与处理逻辑解耦，从而提高系统的灵活性和可扩展性。它通过将命令封装为对象，并由专门的 CommandHandler 负责执行这些命令，使得系统能够更轻松地管理命令的生命周期、支持撤销/重做操作、实现事务管理或异步处理。 核心概念 Command（命令） 定义一个接口或抽象类，声明执行命令的方法（如 execute()）。 具体命令类实现该接口，封装请求的具体逻辑。 CommandHandler（命令处理器） 负责接收命令对象并调用其 execute() 方法。 可以扩展为支持命令的调度、排队、事务管理或异步执行。 Invoker（调用者） 触发命令的对象，通常持有对 CommandHandler 的引用。 Receiver（接收者） 执行命令实际逻辑的对象，命令对象通过依赖注入或组合的方式与接收者交互。 🎯 目标： 支持不同类型请求的统一处理通道 类似“命令模式”：将操作封装为一个结构体 可扩展、可测试、context 支持、graceful shutdown ✅ 架构设计： +--------------------+ | CommandHandler | |--------------------| | chan Command |<----------- Send() | goroutine: dispatch| (通用异步接口) +--------------------+ | V +--------------------+ | Command (接口) |<-- 多种请求实现： | Execute(context) | - SetRulesCommand +--------------------+ - GetRulesCommand - AppendRulesCommand ✨ 通用实现（含 SetRules 和 GetRules）： package main import ( \"context\" \"errors\" \"fmt\" ) // Command 是所有请求的接口 type Command interface { Execute(ctx context.Context, h *Handler) Done() <-chan struct{} Err() error } // Handler 管理状态和调度命令执行 type Handler struct { rules []string cmdChan chan Command stop chan struct{} done chan struct{} } // 基础命令结构 type baseCommand struct { err error done chan struct{} } func (c *baseCommand) Done() <-chan struct{} { return c.done } func (c *baseCommand) Err() error { return c.err } // SetRulesCommand 设置规则 type SetRulesCommand struct { baseCommand NewRules []string } func (c *SetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) h.rules = c.NewRules fmt.Println(\"SetRulesCommand executed:\", h.rules) } // GetRulesCommand 获取规则 type GetRulesCommand struct { baseCommand Result chan []string } func (c *GetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) c.Result <- h.rules close(c.Result) } func NewHandler() *Handler { return &Handler{ rules: []string{}, cmdChan: make(chan Command), stop: make(chan struct{}), done: make(chan struct{}), } } // Run 启动处理循环 func (h *Handler) Run() { defer close(h.done) for { select { case cmd := <-h.cmdChan: ctx := context.Background() // 可支持 ctx 控制 cmd.Execute(ctx, h) case <-h.stop: return } } } // Send 提交命令（带超时支持） func (h *Handler) Send(ctx context.Context, cmd Command) error { select { case h.cmdChan <- cmd: select { case <-cmd.Done(): return cmd.Err() case <-ctx.Done(): return ctx.Err() } case <-h.stop: return errors.New(\"handler is stopped\") case <-ctx.Done(): return ctx.Err() } } // Stop 优雅关闭 func (h *Handler) Stop() { close(h.stop) <-h.done } func main() { handler := NewHandler() go handler.Run() ctx := context.Background() setCmd := &SetRulesCommand{ baseCommand: baseCommand{done: make(chan struct{})}, NewRules: []string{\"a\", \"b\", \"c\"}, } handler.Send(ctx, setCmd) // 获取规则 getCmd := &GetRulesCommand{ baseCommand: baseCommand{done: make(chan struct{})}, Result: make(chan []string, 1), } handler.Send(ctx, getCmd) fmt.Println(\"Current rules:\", <-getCmd.Result) handler.Stop() } ✅ 泛型式响应的 ResultCommand[T] 设计 实现目标： 命令支持携带强类型返回值（例如：[]string、int、bool 等）； 支持 context 控制； 解耦命令发送与执行，类型安全 的异步响应； 易扩展、结构清晰。 package main import ( \"context\" \"errors\" \"fmt\" \"time\" ) // 通用 Command 接口 type Command interface { Execute(context.Context, *Handler) Done() <-chan struct{} Err() error } // Handler：命令处理器 type Handler struct { rules []string cmdChan chan Command stop chan struct{} done chan struct{} } func NewHandler() *Handler { return &Handler{ rules: []string{}, cmdChan: make(chan Command), stop: make(chan struct{}), done: make(chan struct{}), } } func (h *Handler) Run() { defer close(h.done) for { select { case cmd := <-h.cmdChan: cmd.Execute(context.Background(), h) case <-h.stop: return } } } func (h *Handler) Stop() { close(h.stop) <-h.done } // Send 支持泛型命令发送 func (h *Handler) Send(ctx context.Context, cmd Command) error { select { case h.cmdChan <- cmd: select { case <-cmd.Done(): return cmd.Err() case <-ctx.Done(): return ctx.Err() } case <-ctx.Done(): return ctx.Err() case <-h.stop: return errors.New(\"handler stopped\") } } // 泛型命令 ResultCommand[T] // -------------------------------- type ResultCommand[T any] struct { result T err error done chan struct{} resultC chan T } func NewResultCommand[T any]() *ResultCommand[T] { return &ResultCommand[T]{ done: make(chan struct{}), resultC: make(chan T, 1), // 非阻塞写入 } } func (c *ResultCommand[T]) Done() <-chan struct{} { return c.done } func (c *ResultCommand[T]) Err() error { return c.err } // Wait 等待结果 func (c *ResultCommand[T]) Wait(ctx context.Context) (T, error) { select { case <-ctx.Done(): var zero T return zero, ctx.Err() case res := <-c.resultC: return res, c.err } } // -------------------------------- // 示例命令：GetRulesCommand 返回 []string // -------------------------------- type GetRulesCommand struct { *ResultCommand[[]string] } func NewGetRulesCommand() *GetRulesCommand { return &GetRulesCommand{ ResultCommand: NewResultCommand[[]string](), } } func (c *GetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) c.result = h.rules c.resultC <- h.rules } // -------------------------------- // 示例命令：SetRulesCommand // -------------------------------- type SetRulesCommand struct { newRules []string done chan struct{} err error } func NewSetRulesCommand(rules []string) *SetRulesCommand { return &SetRulesCommand{ newRules: rules, done: make(chan struct{}), } } func (c *SetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) h.rules = c.newRules fmt.Println(\"Rules updated:\", h.rules) } func (c *SetRulesCommand) Done() <-chan struct{} { return c.done } func (c *SetRulesCommand) Err() error { return c.err } // 🧪 Main 演示：SetRules 和 GetRules 泛型返回 func main() { h := NewHandler() go h.Run() ctx := context.Background() // Set rules setCmd := NewSetRulesCommand([]string{\"x\", \"y\", \"z\"}) _ = h.Send(ctx, setCmd) // Get rules getCmd := NewGetRulesCommand() _ = h.Send(ctx, getCmd) rules, err := getCmd.Wait(ctx) if err != nil { fmt.Println(\"GetRules error:\", err) } else { fmt.Println(\"Got rules:\", rules) } // 超时测试 timeoutCtx, cancel := context.WithTimeout(ctx, 1*time.Millisecond) defer cancel() getCmd2 := NewGetRulesCommand() _ = h.Send(timeoutCtx, getCmd2) rules2, err := getCmd2.Wait(timeoutCtx) fmt.Println(\"With timeout:\", rules2, err) h.Stop() } 输出示例： Rules updated: [x y z] Got rules: [x y z] With timeout: [] context deadline exceeded 📦 可扩展示例命令 GetStatsCommand struct{ ResultCommand[map[string]int] } FlushToDiskCommand struct{ ResultCommand[bool] } LoadConfigCommand struct{ ResultCommand[Config] } AppendRulesCommand struct{ Rules []string }","s":"4. CommandHandler 模式","u":"/en/docs/note/golang/design/multi_goroutine","h":"#4-commandhandler-模式","p":1643},{"i":1657,"t":"kingpin 是一个用于解析命令行参数的 Golang 库，提供类似 flag 但更强大和直观的 API，支持子命令、默认值、环境变量等。","s":"1. 简介","u":"/en/docs/note/golang/kingpin","h":"#1-简介","p":1655},{"i":1659,"t":"go get github.com/alecthomas/kingpin","s":"2. 安装","u":"/en/docs/note/golang/kingpin","h":"#2-安装","p":1655},{"i":1662,"t":"kingpin 提供了默认的 kingpin.CommandLine，可以直接使用全局方法定义参数。 package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) var ( name = kingpin.Flag(\"name\", \"输入你的名字。\").Short('n').Default(\"World\").String() age = kingpin.Flag(\"age\", \"输入你的年龄。\").Int() ) func main() { kingpin.Parse() fmt.Printf(\"Hello %s! You are %d years old.\\n\", *name, *age) } 运行示例： ./example --name=Alice --age=30","s":"3.1 使用默认 App","u":"/en/docs/note/golang/kingpin","h":"#31-使用默认-app","p":1655},{"i":1664,"t":"package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"example\", \"示例应用程序。\") name := app.Flag(\"name\", \"输入你的名字。\").Short('n').Default(\"World\").String() age := app.Flag(\"age\", \"输入你的年龄。\").Int() kingpin.MustParse(app.Parse(os.Args[1:])) fmt.Printf(\"Hello %s! You are %d years old.\\n\", *name, *age) } 运行示例： ./example --name=Alice --age=30","s":"3.2 定义命令行参数（使用 New 方法）","u":"/en/docs/note/golang/kingpin","h":"#32-定义命令行参数使用-new-方法","p":1655},{"i":1666,"t":"package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"app\", \"一个支持子命令的示例。\") // 定义子命令 `greet` greetCmd := app.Command(\"greet\", \"打招呼。\") name := greetCmd.Flag(\"name\", \"你的名字。\").Default(\"World\").String() // 定义子命令 `bye` byeCmd := app.Command(\"bye\", \"告别。\") goodbye := byeCmd.Flag(\"message\", \"告别消息。\").Default(\"Goodbye!\").String() switch kingpin.MustParse(app.Parse(os.Args[1:])) { case greetCmd.FullCommand(): fmt.Printf(\"Hello, %s!\\n\", *name) case byeCmd.FullCommand(): fmt.Println(*goodbye) } } 运行示例： ./app greet --name=Bob ./app bye --message=\"See you!\"","s":"3.3 使用子命令","u":"/en/docs/note/golang/kingpin","h":"#33-使用子命令","p":1655},{"i":1668,"t":"package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"env-example\", \"示例环境变量支持。\") name := app.Flag(\"name\", \"你的名字。\").Envar(\"USER_NAME\").Default(\"Anonymous\").String() kingpin.MustParse(app.Parse(os.Args[1:])) fmt.Println(\"Hello,\", *name) } 运行示例： export USER_NAME=Charlie ./env-example","s":"3.4 绑定环境变量","u":"/en/docs/note/golang/kingpin","h":"#34-绑定环境变量","p":1655},{"i":1670,"t":"package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"bool-flag\", \"布尔标志示例。\") verbose := app.Flag(\"verbose\", \"开启详细模式。\").Short('v').Bool() kingpin.MustParse(app.Parse(os.Args[1:])) if *verbose { fmt.Println(\"Verbose mode enabled\") } else { fmt.Println(\"Verbose mode disabled\") } } 运行示例： ./bool-flag --verbose ./bool-flag -v","s":"3.5 处理布尔标志","u":"/en/docs/note/golang/kingpin","h":"#35-处理布尔标志","p":1655},{"i":1672,"t":"package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"list-example\", \"解析列表参数示例。\") items := app.Flag(\"items\", \"输入多个项。\").Strings() kingpin.MustParse(app.Parse(os.Args[1:])) fmt.Println(\"Items:\", *items) } 运行示例： ./list-example --items=apple --items=banana --items=cherry","s":"3.6 解析列表参数","u":"/en/docs/note/golang/kingpin","h":"#36-解析列表参数","p":1655},{"i":1675,"t":"可以使用 kingpin.Action() 在解析参数后执行特定逻辑。 package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"custom-action\", \"示例：使用自定义解析逻辑。\") name := app.Flag(\"name\", \"输入你的名字。\").String() app.Action(func(c *kingpin.ParseContext) error { fmt.Println(\"解析完成，欢迎\", *name) return nil }) kingpin.MustParse(app.Parse(os.Args[1:])) }","s":"4.1 自定义解析器","u":"/en/docs/note/golang/kingpin","h":"#41-自定义解析器","p":1655},{"i":1677,"t":"kingpin 提供了一种简单易用且功能强大的命令行解析方式，适用于各种 CLI 应用。","s":"5. 总结","u":"/en/docs/note/golang/kingpin","h":"#5-总结","p":1655},{"i":1679,"t":"✅ 支持子命令 ✅ 支持环境变量 ✅ 友好的 API 设计 ✅ 丰富的参数类型支持 ✅ 自动生成帮助文档 如果需要构建复杂的命令行工具，kingpin 是一个值得推荐的选择。","s":"特点总结","u":"/en/docs/note/golang/kingpin","h":"#特点总结","p":1655},{"i":1682,"t":"Golang 标准库提供 encoding/json 包，可用于解析和生成 JSON 数据。 示例：解析 JSON 到 map[string]interface{} package main import ( \"encoding/json\" \"fmt\" ) func main() { jsonData := `{\"name\": \"Alice\", \"age\": 25}` var result map[string]interface{} err := json.Unmarshal([]byte(jsonData), &result) if err != nil { fmt.Println(\"Error:\", err) return } fmt.Println(\"Name:\", result[\"name\"].(string)) fmt.Println(\"Age:\", result[\"age\"].(float64)) } 优缺点对比 优点 缺点 官方库，稳定可靠 需要手动类型断言 无需额外依赖 性能相对较低 适用于简单 JSON 解析 解析大 JSON 结构时性能不足","s":"1. Golang 默认 JSON 解析 (encoding/json)","u":"/en/docs/note/golang/json","h":"#1-golang-默认-json-解析-encodingjson","p":1680},{"i":1685,"t":"安装： go get github.com/tidwall/gjson 示例： package main import ( \"fmt\" \"github.com/tidwall/gjson\" ) func main() { jsonData := `{\"name\": \"Alice\", \"age\": 25}` if !gjson.Valid(jsonData) { fmt.Println(\"Invalid JSON data\") return } if gjson.Get(jsonData, \"name\").Exists() { fmt.Println(\"Name field exists\") } else { fmt.Println(\"Name field does not exist\") } name := gjson.Get(jsonData, \"name\") age := gjson.Get(jsonData, \"age\").Int() fmt.Println(\"Name:\", name.String()) fmt.Println(\"Age:\", age) }","s":"2.1 github.com/tidwall/gjson（高效 JSON 读取）","u":"/en/docs/note/golang/json","h":"#21-githubcomtidwallgjson高效-json-读取","p":1680},{"i":1687,"t":"优点 缺点 解析速度快 不能修改 JSON 支持 JSONPath 查询 适用于只读场景 代码简洁 -","s":"优缺点对比","u":"/en/docs/note/golang/json","h":"#优缺点对比","p":1680},{"i":1689,"t":"安装： go get github.com/json-iterator/go 示例： package main import ( \"fmt\" jsoniter \"github.com/json-iterator/go\" ) func main() { var json = jsoniter.ConfigCompatibleWithStandardLibrary jsonData := `{\"name\": \"Alice\", \"age\": 25}` var result map[string]interface{} json.Unmarshal([]byte(jsonData), &result) fmt.Println(\"Name:\", result[\"name\"]) fmt.Println(\"Age:\", result[\"age\"]) }","s":"2.2 github.com/json-iterator/go（高性能 JSON 解析）","u":"/en/docs/note/golang/json","h":"#22-githubcomjson-iteratorgo高性能-json-解析","p":1680},{"i":1691,"t":"优点 缺点 兼容 encoding/json，可直接替换 解析 JSON 数组不如 gjson 简洁 性能比 encoding/json 高 -","s":"优缺点对比","u":"/en/docs/note/golang/json","h":"#优缺点对比-1","p":1680},{"i":1693,"t":"安装： go get github.com/buger/jsonparser 示例： package main import ( \"fmt\" \"github.com/buger/jsonparser\" ) func main() { jsonData := []byte(`{\"name\": \"Alice\", \"age\": 25}`) name, _ := jsonparser.GetString(jsonData, \"name\") age, _ := jsonparser.GetInt(jsonData, \"age\") fmt.Println(\"Name:\", name) fmt.Println(\"Age:\", age) }","s":"2.3 github.com/buger/jsonparser（流式 JSON 解析）","u":"/en/docs/note/golang/json","h":"#23-githubcombugerjsonparser流式-json-解析","p":1680},{"i":1695,"t":"优点 缺点 适用于大 JSON 文件解析 不能修改 JSON 直接操作 []byte，性能高 代码较 gjson 复杂","s":"优缺点对比","u":"/en/docs/note/golang/json","h":"#优缺点对比-2","p":1680},{"i":1697,"t":"库 适用场景 优势 劣势 encoding/json 普通 JSON 解析 官方库，稳定 解析速度较慢，需要类型断言 gjson 只读 JSON 数据 语法简洁，性能高 不能修改 JSON json-iterator/go 高性能 JSON 解析 可直接替换标准库 解析 JSON 数组较繁琐 buger/jsonparser 解析大 JSON 直接操作 []byte，流式解析 代码较复杂","s":"3. JSON 解析库对比","u":"/en/docs/note/golang/json","h":"#3-json-解析库对比","p":1680},{"i":1699,"t":"只读取 JSON 数据（不修改）：✅ gjson 需要高性能 JSON 解析：✅ json-iterator/go 解析大 JSON 文件（如日志）：✅ buger/jsonparser 通用解析（兼容性好）：✅ encoding/json 根据具体需求选择合适的库，以提高 JSON 处理效率。","s":"总结与推荐","u":"/en/docs/note/golang/json","h":"#总结与推荐","p":1680},{"i":1702,"t":"反射是 Go 语言中的一个强大特性，允许程序在运行时检查和操作变量的类型和值。 reflect 包提供了一系列 API，使得开发者可以动态获取变量的信息、修改变量的值，并在一定程度上实现动态调用。 适用场景： 处理接口类型的变量 解析结构体标签（struct tag） 生成通用工具，如序列化、反序列化、ORM 框架等 reflect 包的核心功能： 类型检查：获取变量的类型信息。 值操作：获取和修改变量的值。 方法调用：动态调用结构体的方法。 字段操作：动态访问和修改结构体的字段。 创建实例：通过反射创建新的变量实例。","s":"1. 反射（Reflect）概述","u":"/en/docs/note/golang/reflect","h":"#1-反射reflect概述","p":1700},{"i":1704,"t":"在 reflect 包中，主要有两个核心类型： reflect.Type：表示变量的类型（TypeOf 获取） reflect.Value：表示变量的值（ValueOf 获取）","s":"2. 反射的基本类型","u":"/en/docs/note/golang/reflect","h":"#2-反射的基本类型","p":1700},{"i":1706,"t":"package main import ( \"fmt\" \"reflect\" ) func main() { var num int = 42 typeInfo := reflect.TypeOf(num) valueInfo := reflect.ValueOf(num) fmt.Println(\"Type:\", typeInfo) // int fmt.Println(\"Value:\", valueInfo) // 42 typeInfo = reflect.TypeOf(&num) valueInfo = reflect.ValueOf(&num) fmt.Println(\"Point Type:\", typeInfo) // *int fmt.Println(\"Point Value:\", valueInfo) // 0xc00010a000 }","s":"2.1 获取变量的类型和值","u":"/en/docs/note/golang/reflect","h":"#21-获取变量的类型和值","p":1700},{"i":1708,"t":"反射可以修改变量的值，但前提是 reflect.Value 必须是可设置的（CanSet() 方法返回 true）。 package main import ( \"fmt\" \"reflect\" ) func main() { var num int = 42 // 传递指针才能修改原值 // 此时的valueInfo是一个reflect.Value类型。代表num指针 valueInfo := reflect.ValueOf(&num) // 此时的valueElem是一个reflect.Value类型。代表num的值 valueElem := valueInfo.Elem() /* * 当你需要通过指针修改原始变量的值时，你需要先获取指针的 reflect.Value， * 然后通过 .Elem() 方法获取到实际的值并进行操作。 */ if valueElem.CanSet() { valueElem.SetInt(100) } fmt.Println(\"Modified value:\", num) // 100 }","s":"3. 反射修改变量值","u":"/en/docs/note/golang/reflect","h":"#3-反射修改变量值","p":1700},{"i":1711,"t":"package main import ( \"fmt\" \"reflect\" ) type Person struct { Name string Age int } func main() { p := Person{Name: \"Alice\", Age: 30} typeInfo := reflect.TypeOf(p) // NumField returns the number of fields in the struct. // It panics if the type of v is not a struct. for i := 0; i < typeInfo.NumField(); i++ { field := typeInfo.Field(i) fmt.Printf(\"Field Name: %s, Type: %s\\n\", field.Name, field.Type) } }","s":"4.1 获取结构体字段信息","u":"/en/docs/note/golang/reflect","h":"#41-获取结构体字段信息","p":1700},{"i":1713,"t":"结构体字段可以带有标签，用于元数据存储，如 JSON、数据库映射等。 package main import ( \"fmt\" \"reflect\" ) type User struct { ID int `json:\"id\" yaml:\"id\"` Name string `json:\"name\"` } func main() { typeInfo := reflect.TypeOf(User{}) for i := 0; i < typeInfo.NumField(); i++ { field := typeInfo.Field(i) // 打印字段标签 fmt.Printf(\"Field Tag: %s\\n\", field.Tag) tag := field.Tag.Get(\"json\") fmt.Printf(\"Field: %s, JSON Tag: %s\\n\", field.Name, tag) } }","s":"4.2 解析结构体标签（Tag）","u":"/en/docs/note/golang/reflect","h":"#42-解析结构体标签tag","p":1700},{"i":1715,"t":"有参数调用 package main import ( \"fmt\" \"reflect\" ) type Calculator struct{} func (c Calculator) Add(a, b int) int { return a + b } func main() { calc := Calculator{} method := reflect.ValueOf(calc).MethodByName(\"Add\") args := []reflect.Value{reflect.ValueOf(10), reflect.ValueOf(20)} result := method.Call(args) fmt.Println(\"Result:\", result[0].Int()) // 30 } 无参数调用 package main import ( \"fmt\" \"reflect\" ) type User struct { Name string } func (u User) SayHello() { fmt.Println(\"Hello,\", u.Name) } func main() { u := User{Name: \"Alice\"} v := reflect.ValueOf(u) method := v.MethodByName(\"SayHello\") method.Call(nil) // 输出: Hello, Alice }","s":"5. 反射调用方法","u":"/en/docs/note/golang/reflect","h":"#5-反射调用方法","p":1700},{"i":1717,"t":"代码可读性降低，调试难度增大 性能损耗，相比普通方法调用慢10倍以上","s":"6. 反射的局限性","u":"/en/docs/note/golang/reflect","h":"#6-反射的局限性","p":1700},{"i":1719,"t":"只有在动态需求时使用反射，避免滥用 使用 interface{} 和 switch 语句作为反射的替代方案 结合 json、protobuf 等库时，合理利用 reflect 提取字段信息","s":"7. 反射最佳实践","u":"/en/docs/note/golang/reflect","h":"#7-反射最佳实践","p":1700},{"i":1722,"t":"validator 是 Go 语言中一个强大的数据验证库，它提供结构体字段标签验证功能，并支持自定义验证规则。","s":"1. 简介","u":"/en/docs/note/golang/validator","h":"#1-简介","p":1720},{"i":1724,"t":"go get github.com/go-playground/validator/v10","s":"2. 安装","u":"/en/docs/note/golang/validator","h":"#2-安装","p":1720},{"i":1726,"t":"package main import ( \"fmt\" \"github.com/go-playground/validator/v10\" ) type User struct { Name string `validate:\"required\"` Age int `validate:\"gte=18,lte=65\"` Email string `validate:\"required,email\"` } func main() { validate := validator.New() user := User{ Name: \"\", Age: 17, Email: \"invalid-email\", } err := validate.Struct(user) if err != nil { for _, err := range err.(validator.ValidationErrors) { fmt.Println(\"Validation error:\", err) } } else { fmt.Println(\"Validation passed\") } }","s":"3. 基本使用","u":"/en/docs/note/golang/validator","h":"#3-基本使用","p":1720},{"i":1728,"t":"标签 描述 required 必填字段 email 必须是合法的邮箱格式 gte=X 大于等于 X lte=X 小于等于 X min=X 字符串、切片、映射的最小长度 max=X 字符串、切片、映射的最大长度 len=X 长度必须等于 X url 必须是合法的 URL numeric 必须是数字 alphanum 仅允许字母和数字 alpha 仅允许字母 contains=X 必须包含 X 子串 startswith=X 必须以 X 开头 endswith=X 必须以 X 结尾 lowercase 必须为小写 uppercase 必须为大写 ipv4 必须是合法的 IPv4 地址 ipv6 必须是合法的 IPv6 地址 boolean 必须是布尔值 datetime=layout 必须是指定格式的日期时间 base64 必须是 Base64 编码格式 hexcolor 必须是十六进制颜色代码 uuid 必须是合法的 UUID json 必须是合法的 JSON 字符串 ascii 仅允许 ASCII 字符 printascii 仅允许可打印 ASCII 字符 multibyte 允许多字节字符 containsany=chars 必须包含 chars 中的至少一个字符 excludesall=chars 不能包含 chars 中的任何字符 excludes=X 不能包含 X 子串 isdefault 必须是字段类型的默认值 dive 用于切片或者map的验证","s":"4. 常见的内置验证标签","u":"/en/docs/note/golang/validator","h":"#4-常见的内置验证标签","p":1720},{"i":1730,"t":"可以自定义验证规则，例如验证字符串是否为 \"hello\": func helloValidator(fl validator.FieldLevel) bool { return fl.Field().String() == \"hello\" } func main() { validate := validator.New() validate.RegisterValidation(\"hello\", helloValidator) type Test struct { Msg string `validate:\"hello\"` } t := Test{Msg: \"world\"} err := validate.Struct(t) if err != nil { fmt.Println(\"Validation failed:\", err) } else { fmt.Println(\"Validation passed\") } }","s":"5. 自定义验证","u":"/en/docs/note/golang/validator","h":"#5-自定义验证","p":1720},{"i":1732,"t":"type Address struct { City string `validate:\"required\"` ZipCode string `validate:\"numeric\"` } type Person struct { Name string `validate:\"required\"` Age int `validate:\"gte=18\"` Address Address `validate:\"required\"` } required 关键字表示深入到嵌套结构体中进行验证。","s":"6. 结构体嵌套验证","u":"/en/docs/note/golang/validator","h":"#6-结构体嵌套验证","p":1720},{"i":1734,"t":"if err != nil { for _, e := range err.(validator.ValidationErrors) { fmt.Printf(\"Field %s failed on '%s' tag\\n\", e.Field(), e.Tag()) } }","s":"7. 处理错误信息","u":"/en/docs/note/golang/validator","h":"#7-处理错误信息","p":1720},{"i":1736,"t":"validator 提供了丰富的验证功能，适用于 Go 项目中的输入校验场景，可以结合 gin 或其他 Web 框架进行 API 参数验证，提高数据的可靠性。","s":"8. 结论","u":"/en/docs/note/golang/validator","h":"#8-结论","p":1720},{"i":1739,"t":"在 Golang 中，序列化（Serialization）和反序列化（Deserialization）是数据持久化和网络传输的关键技术。默认情况下，encoding/json 标准库可以处理大部分常见的 JSON 数据格式。但在复杂业务场景中，我们可能需要对数据格式、字段校验、嵌套类型等进行定制化处理。 本培训文档旨在介绍如何通过实现 json.Marshaler 和 json.Unmarshaler 接口，实现对自定义类型的灵活处理，涵盖常见及进阶场景。","s":"1. 引言","u":"/en/docs/note/golang/serialization","h":"#1-引言","p":1737},{"i":1742,"t":"import \"encoding/json\" func main() { p := Person{\"Alice\", 30} // 序列化 data, err := json.Marshal(p) // 反序列化 var p2 Person err = json.Unmarshal(data, &p2) }","s":"2.1 JSON序列化","u":"/en/docs/note/golang/serialization","h":"#21-json序列化","p":1737},{"i":1744,"t":"type Product struct { ID int `json:\"id\"` Name string `json:\"name\"` CreatedAt time.Time `json:\"created_at,omitempty\"` }","s":"2.2 结构体标签","u":"/en/docs/note/golang/serialization","h":"#22-结构体标签","p":1737},{"i":1746,"t":"通过实现 json.Marshaler 接口，可以自定义对象转换为 JSON 的逻辑。类似的，通过实现yaml.Marshaler接口，可以自定义对象转化为 yaml的逻辑。 接口实现中，还可以增加校验规则，实现类似validate的效果 type Person struct { Name string Age int } // 自定义反序列化，加入数据校验 func (p *Person) UnmarshalJSON(data []byte) error { var temp struct { FullName string `json:\"full_name\"` Age int `json:\"age\"` } if err := json.Unmarshal(data, &temp); err != nil { return err } if temp.Age < 0 || temp.Age > 150 { return errors.New(\"age must be between 0 and 150\") }","s":"3. 自定义类型序列化","u":"/en/docs/note/golang/serialization","h":"#3-自定义类型序列化","p":1737},{"i":1748,"t":"type CustomDate time.Time func (cd CustomDate) MarshalJSON() ([]byte, error) { return json.Marshal(time.Time(cd).Format(\"2006-01-02\")) }","s":"3.1 实现Marshaler接口","u":"/en/docs/note/golang/serialization","h":"#31-实现marshaler接口","p":1737},{"i":1750,"t":"func (cd *CustomDate) UnmarshalJSON(data []byte) error { var s string if err := json.Unmarshal(data, &s); err != nil { return err } t, err := time.Parse(\"2006-01-02\", s) if err != nil { return err } *cd = CustomDate(t) return nil }","s":"3.2 实现Unmarshaler接口","u":"/en/docs/note/golang/serialization","h":"#32-实现unmarshaler接口","p":1737},{"i":1753,"t":"type Order struct { ID int `json:\"id\"` Products []Product `json:\"products\"` Date CustomDate `json:\"date\"` }","s":"4.1 嵌套结构体","u":"/en/docs/note/golang/serialization","h":"#41-嵌套结构体","p":1737},{"i":1755,"t":"type Shape interface { Area() float64 } type Circle struct { Radius float64 `json:\"radius\"` } func (c Circle) Area() float64 { return math.Pi * c.Radius * c.Radius } // 自定义序列化逻辑 func (c *Circle) MarshalJSON() ([]byte, error) { type Alias Circle return json.Marshal(&struct { Type string `json:\"type\"` *Alias }{ Type: \"circle\", Alias: (*Alias)(c), }) }","s":"4.2 接口类型处理","u":"/en/docs/note/golang/serialization","h":"#42-接口类型处理","p":1737},{"i":1758,"t":"var bufferPool = sync.Pool{ New: func() interface{} { return new(bytes.Buffer) }, } func MarshalWithPool(v interface{}) ([]byte, error) { buf := bufferPool.Get().(*bytes.Buffer) defer bufferPool.Put(buf) buf.Reset() encoder := json.NewEncoder(buf) if err := encoder.Encode(v); err != nil { return nil, err } return buf.Bytes(), nil }","s":"5.1 使用缓冲池","u":"/en/docs/note/golang/serialization","h":"#51-使用缓冲池","p":1737},{"i":1760,"t":"json-iterator: 兼容标准库的高性能实现 easyjson: 代码生成方案 protobuf: 二进制序列化方案","s":"5.2 使用第三方库","u":"/en/docs/note/golang/serialization","h":"#52-使用第三方库","p":1737},{"i":1763,"t":"type Node struct { Value int `json:\"value\"` Next *Node `json:\"next,omitempty\"` // 使用omitempty避免无限递归 }","s":"6.1 循环引用问题","u":"/en/docs/note/golang/serialization","h":"#61-循环引用问题","p":1737},{"i":1765,"t":"type Timestamp time.Time func (t *Timestamp) UnmarshalJSON(b []byte) error { s := strings.Trim(string(b), \"\\\"\") tm, err := time.Parse(time.RFC3339, s) if err != nil { return err } *t = Timestamp(tm) return nil }","s":"6.2 时间格式处理","u":"/en/docs/note/golang/serialization","h":"#62-时间格式处理","p":1737},{"i":1768,"t":"func TestCustomDate_MarshalJSON(t *testing.T) { cd := CustomDate(time.Date(2023, 1, 1, 0, 0, 0, 0, time.UTC)) data, err := json.Marshal(cd) assert.Nil(t, err) assert.Equal(t, `\"2023-01-01\"`, string(data)) } func TestCustomDate_UnmarshalJSON(t *testing.T) { var cd CustomDate err := json.Unmarshal([]byte(`\"2023-01-01\"`), &cd) assert.Nil(t, err) assert.Equal(t, 2023, time.Time(cd).Year()) }","s":"7.1 单元测试示例","u":"/en/docs/note/golang/serialization","h":"#71-单元测试示例","p":1737},{"i":1770,"t":"始终处理错误返回值 对敏感字段使用json:\"-\" 使用omitempty处理可选字段 对大对象使用流式处理（json.Decoder） 避免在Marshal/Unmarshal方法中修改共享状态","s":"8. 最佳实践","u":"/en/docs/note/golang/serialization","h":"#8-最佳实践","p":1737},{"i":1772,"t":"package main import ( \"encoding/json\" \"fmt\" \"time\" ) type CustomDate time.Time func (cd CustomDate) MarshalJSON() ([]byte, error) { return json.Marshal(time.Time(cd).Format(\"2006-01-02\")) } func (cd *CustomDate) UnmarshalJSON(data []byte) error { var s string if err := json.Unmarshal(data, &s); err != nil { return err } t, err := time.Parse(\"2006-01-02\", s) if err != nil { return err } *cd = CustomDate(t) return nil } type Event struct { Name string `json:\"name\"` EventDate CustomDate `json:\"event_date\"` } func main() { event := Event{ Name: \"Go Conference\", EventDate: CustomDate(time.Now()), } data, _ := json.Marshal(event) fmt.Println(string(data)) // {\"name\":\"Go Conference\",\"event_date\":\"2023-07-20\"} var newEvent Event _ = json.Unmarshal(data, &newEvent) fmt.Printf(\"%+v\\n\", newEvent) // {Name:Go Conference EventDate:2023-07-20 00:00:00 +0000 UTC} } secret 密码示例: package web import ( \"encoding/json\" \"errors\" ) /* * Secret 用于存储敏感信息的结构体，实现 yaml.Marshaler、json.Marshaler、yaml.Unmarshaler、json.Unmarshaler 接口， * 用于在 YAML 和 JSON 文件中隐藏敏感信息，并实现加密和解密功能。 * 我们在开发中，对需要yaml，和json处理的数据，可以采用类似的方法 */ // Secret 用于存储敏感信息的结构体 type Secret struct { value string } // NewSecret 创建新的 Secret func NewSecret(val string) Secret { return Secret{value: val} } // MarshalYAML 实现 yaml.Marshaler 接口 func (s Secret) MarshalYAML() (interface{}, error) { //if s.value != \"\" { // return \"<secret>\", nil //} //return nil, nil return \"<secret>\", nil } // MarshalJSON 实现 json.Marshaler 接口 func (s Secret) MarshalJSON() ([]byte, error) { return []byte(\"<secret>\"), nil } // UnmarshalYAML 实现 yaml.Unmarshaler 接口 func (s *Secret) UnmarshalYAML(unmarshal func(interface{}) error) error { if s == nil { return errors.New(\"cannot unmarshal into nil Secret\") } // 可以通过定义一个中间类型，如 plain，来避免递归调用 //type plain Secret // 定义 plain 为 Secret 的别名 //return unmarshal((*plain)(s)) // 将 s 转换为 *plain 类型，避免递归调用 // 也可以直接定义一个string变量，然后通过json.Unmarshal()方法将数据解析到该变量中 // 这样相当于调用的是string 的unmarshal方法,避免了递归调用 var raw string if err := unmarshal(&raw); err != nil { return err } s.value = raw return nil } // UnmarshalJSON 实现 json.Unmarshaler 接口 func (s *Secret) UnmarshalJSON(data []byte) error { if s == nil { return errors.New(\"cannot unmarshal into nil Secret\") } var raw string if err := json.Unmarshal(data, &raw); err != nil { return err } s.value = raw return nil } // Get 返回实际值，减少直接暴露 func (s Secret) Get() string { return s.value }","s":"附录：完整示例","u":"/en/docs/note/golang/serialization","h":"#附录完整示例","p":1737},{"i":1775,"t":"chroot 是一个 Linux 命令，用于将进程和其子进程的根目录（/）更改为指定的目录。换句话说，它改变了程序的根目录路径，使得程序无法访问更高层级的文件系统。常用于隔离环境、创建沙箱、进行系统恢复等场景。","s":"1. 概述","u":"/en/docs/note/os/chroot","h":"#1-概述","p":1773},{"i":1777,"t":"使用 chroot 命令时，指定的路径将成为新的根目录。进程运行时，文件系统的访问将相对于新根目录（chroot 目录）进行，系统的其他部分不可见。 chroot <new_root> [command] <new_root>：指定新的根目录。 [command]：可选的命令，表示在新的根目录环境中执行的命令。如果没有指定命令，则默认将会启动一个交互式 shell。","s":"2. 工作原理","u":"/en/docs/note/os/chroot","h":"#2-工作原理","p":1773},{"i":1780,"t":"sudo chroot /path/to/new_root 此命令将切换根目录到 /path/to/new_root，并启动一个交互式 shell。","s":"3.1. 进入 chroot 环境","u":"/en/docs/note/os/chroot","h":"#31-进入-chroot-环境","p":1773},{"i":1782,"t":"sudo chroot /path/to/new_root /bin/bash 在 /path/to/new_root 目录中执行 /bin/bash，并进入一个新的环境。","s":"3.2. 在 chroot 环境中执行命令","u":"/en/docs/note/os/chroot","h":"#32-在-chroot-环境中执行命令","p":1773},{"i":1784,"t":"创建新的根目录 sudo mkdir -p /path/to/new_root 挂载必要的虚拟文件系统 有些系统文件，如 /proc，需要在 chroot 环境中挂载。 sudo mount -t proc /proc /path/to/new_root/proc sudo mount -t sysfs /sys /path/to/new_root/sys sudo mount -o bind /dev /path/to/new_root/dev sudo mount -o bind /dev/pts /path/to/new_root/dev/pts 挂载 /proc、/sys、/dev 和 /dev/pts 等目录是为了确保进程能够正确访问和使用这些虚拟文件系统，它们提供了重要的系统信息和设备接口。如果没有这些挂载，某些程序或命令可能会失效，因为它们依赖于这些目录中的文件来获取系统状态或与硬件交互。 /proc 是一个虚拟文件系统，提供有关系统进程、内核信息以及其他运行时信息的数据。在 chroot 环境中，如果没有挂载 /proc，很多程序和命令（如 ps、top、free 等）就无法正常工作，因为它们依赖于 /proc 中的信息来获取关于当前系统和进程的状态。 /sys 也是一个虚拟文件系统，它提供了关于系统硬件、内核参数、设备状态等的动态信息。许多设备驱动程序和系统服务依赖于 /sys 中的文件来进行硬件管理和系统配置。没有挂载 /sys，某些程序可能无法获取硬件信息或无法与设备进行交互。 例如： 系统的 CPU 核心数 网络接口的配置 电池状态（在笔记本电脑上） /dev 目录包含了所有设备文件（如硬盘、终端、USB 设备等）。这些设备文件是用户空间程序与硬件设备交互的接口。对于在 chroot 环境中运行的程序来说，访问设备文件是必需的。 例如： /dev/sda：硬盘设备文件 /dev/null：丢弃数据的设备 /dev/tty：终端设备 如果没有挂载 /dev，程序就无法访问硬件设备，也无法与终端、网络接口等进行交互。 /dev/pts 目录是用于管理伪终端设备（pty）。它存储了与终端相关的设备文件，如 /dev/pts/0 等。这对于支持多用户、多终端系统非常重要，尤其是对于运行交互式 shell 和命令行程序的环境。 例如，当你使用 ssh 或 tmux 登录到系统时，终端设备通常是通过 /dev/pts 来表示的。如果没有挂载 /dev/pts，你将无法启动或使用交互式终端（比如在 chroot 环境中执行 bash 或 sh 命令时）。 安装必要的库和命令 确保在新的根目录中安装了所需的库和程序。你可能需要复制或挂载一些文件，来使 chroot 环境能够正常运行。 sudo cp /bin/bash /path/to/new_root/bin/ sudo cp /lib/x86_64-linux-gnu/libtinfo.so.6 /path/to/new_root/lib/x86_64-linux-gnu/ sudo cp /lib/x86_64-linux-gnu/libc.so.6 /path/to/new_root/lib/x86_64-linux-gnu/ 进入 chroot 环境 sudo chroot /path/to/new_root /bin/bash 此时你已经进入了一个新的 chroot 环境，根目录为 /path/to/new_root。","s":"4. 创建一个基本的 chroot 环境","u":"/en/docs/note/os/chroot","h":"#4-创建一个基本的-chroot-环境","p":1773},{"i":1787,"t":"当系统无法启动或损坏时，可以使用 chroot 来进入系统并修复问题。例如，通过 chroot 进入系统的根文件系统，重新安装引导程序或修复损坏的文件。 sudo mount /dev/sda1 /mnt sudo mount --bind /dev /mnt/dev sudo mount --bind /proc /mnt/proc sudo mount --bind /sys /mnt/sys sudo chroot /mnt","s":"5.1. 系统恢复","u":"/en/docs/note/os/chroot","h":"#51-系统恢复","p":1773},{"i":1789,"t":"chroot 可以用来创建一个受限的环境，限制某个进程只能访问特定目录。它常用于容器化技术的基础实现，尽管现代容器使用更强大的工具（如 Docker）来提供隔离。","s":"5.2. 隔离环境（Sandbox）","u":"/en/docs/note/os/chroot","h":"#52-隔离环境sandbox","p":1773},{"i":1791,"t":"在构建特定版本的程序或测试时，可以创建一个干净的环境，避免系统中现有软件包的影响。","s":"5.3. 软件包编译","u":"/en/docs/note/os/chroot","h":"#53-软件包编译","p":1773},{"i":1793,"t":"如果需要运行一个特定版本的程序，可以使用 chroot 来隔离旧版本的库和二进制文件。","s":"5.4. 运行特定版本的应用程序","u":"/en/docs/note/os/chroot","h":"#54-运行特定版本的应用程序","p":1773},{"i":1795,"t":"权限问题 chroot 需要具有足够的权限，通常只有 root 用户才能执行此操作。 安全性 chroot 只是提供了一种简单的隔离方式，并不能完全防止进程逃逸或访问敏感信息。更强的安全措施（如使用 namespaces 或 containers）应该用于高安全性需求的环境。 文件系统依赖 某些进程需要特定的系统文件（如 /dev, /proc, /sys 等）。如果没有挂载这些虚拟文件系统，程序可能会崩溃或无法正常工作。 无法逃逸 chroot 本身并不能防止进程从 chroot 环境中逃逸，因此对于高安全性要求的场景（如沙箱、容器）不推荐单独依赖 chroot。","s":"6. 注意事项","u":"/en/docs/note/os/chroot","h":"#6-注意事项","p":1773},{"i":1797,"t":"chroot 是一个强大的工具，用于将进程隔离在特定的目录树中。它在系统恢复、隔离测试、构建环境等方面非常有用。然而，它并不是一个完美的安全隔离工具，现代容器化技术提供了更强的隔离和安全性。 你可以根据需求扩展文档的内容，如添加更详细的安全性讨论、使用示例等。","s":"7. 总结","u":"/en/docs/note/os/chroot","h":"#7-总结","p":1773},{"i":1800,"t":"Unix Domain Socket (UDS) 是一种进程间通信(IPC)机制，特点： 仅限同一主机上的进程通信 通过文件系统路径标识 比TCP本地环回更快(绕过网络协议栈) 通过文件权限控制访问 优势： 高性能：比localhost TCP快约2倍 安全性：文件系统权限控制 资源占用少：无端口冲突问题","s":"1. Unix Socket 简介","u":"/en/docs/note/golang/web_server_unix","h":"#1-unix-socket-简介","p":1798},{"i":1803,"t":"package main import ( \"fmt\" \"log\" \"net\" \"net/http\" \"os\" \"os/signal\" \"syscall\" ) func main() { // 配置 socketPath := \"/tmp/http.sock\" // 清理旧socket if err := os.RemoveAll(socketPath); err != nil { log.Fatalf(\"清理socket失败: %v\", err) } // 创建监听器 listener, err := net.Listen(\"unix\", socketPath) if err != nil { log.Fatalf(\"监听失败: %v\", err) } defer func() { listener.Close() os.Remove(socketPath) }() // 设置文件权限(可选) if err := os.Chmod(socketPath, 0770); err != nil { log.Printf(\"设置权限失败: %v\", err) } // 注册路由 mux := http.NewServeMux() mux.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) { fmt.Fprintf(w, \"Hello from Unix Socket HTTP Server!\\n\") }) mux.HandleFunc(\"/health\", func(w http.ResponseWriter, r *http.Request) { w.WriteHeader(http.StatusOK) w.Write([]byte(\"OK\")) }) // 配置服务器 server := &http.Server{ Handler: mux, } // 优雅关闭 setupGracefulShutdown(server) // 启动服务 log.Printf(\"Server listening on unix socket: %s\", socketPath) if err := server.Serve(listener); err != nil && err != http.ErrServerClosed { log.Fatalf(\"服务异常: %v\", err) } } func setupGracefulShutdown(server *http.Server) { sigChan := make(chan os.Signal, 1) signal.Notify(sigChan, os.Interrupt, syscall.SIGTERM) go func() { <-sigChan log.Println(\"接收到终止信号，关闭服务器...\") if err := server.Close(); err != nil { log.Printf(\"服务器关闭错误: %v\", err) } }() }","s":"2.1 基础实现","u":"/en/docs/note/golang/web_server_unix","h":"#21-基础实现","p":1798},{"i":1805,"t":"// 在http.Server配置中添加 server := &http.Server{ Handler: mux, ReadTimeout: 10 * time.Second, WriteTimeout: 10 * time.Second, IdleTimeout: 60 * time.Second, }","s":"2.2 高级配置","u":"/en/docs/note/golang/web_server_unix","h":"#22-高级配置","p":1798},{"i":1808,"t":"package main import ( \"log\" \"net\" \"net/http\" \"os\" \"os/signal\" \"syscall\" \"time\" \"github.com/gin-gonic/gin\" ) func main() { // 配置 socketPath := \"/tmp/gin.sock\" // 清理旧socket if err := os.RemoveAll(socketPath); err != nil { log.Fatalf(\"清理socket失败: %v\", err) } // 创建监听器 listener, err := net.Listen(\"unix\", socketPath) if err != nil { log.Fatalf(\"监听失败: %v\", err) } defer func() { listener.Close() os.Remove(socketPath) }() // 设置文件权限 if err := os.Chmod(socketPath, 0770); err != nil { log.Printf(\"设置权限失败: %v\", err) } // 初始化Gin router := gin.New() // 中间件 router.Use(gin.Logger()) router.Use(gin.Recovery()) // 路由 router.GET(\"/\", func(c *gin.Context) { c.String(http.StatusOK, \"Hello from Gin Unix Socket Server!\") }) router.GET(\"/api/data\", func(c *gin.Context) { c.JSON(http.StatusOK, gin.H{ \"status\": \"success\", \"message\": \"Data retrieved\", \"data\": []string{\"item1\", \"item2\", \"item3\"}, }) }) // 配置服务器 server := &http.Server{ Handler: router, ReadTimeout: 10 * time.Second, WriteTimeout: 10 * time.Second, } // 优雅关闭 setupGracefulShutdown(server) // 启动服务 log.Printf(\"Gin server listening on unix socket: %s\", socketPath) if err := server.Serve(listener); err != nil && err != http.ErrServerClosed { log.Fatalf(\"服务异常: %v\", err) } }","s":"3.1 基础实现","u":"/en/docs/note/golang/web_server_unix","h":"#31-基础实现","p":1798},{"i":1810,"t":"// 在生产环境中使用ReleaseMode gin.SetMode(gin.ReleaseMode) // 添加健康检查端点 router.GET(\"/health\", func(c *gin.Context) { c.JSON(http.StatusOK, gin.H{\"status\": \"healthy\"}) }) // 添加监控中间件 router.Use(monitoringMiddleware()) func monitoringMiddleware() gin.HandlerFunc { return func(c *gin.Context) { start := time.Now() c.Next() duration := time.Since(start) log.Printf(\"请求 %s 耗时 %v\", c.Request.URL.Path, duration) } }","s":"3.2 生产环境建议","u":"/en/docs/note/golang/web_server_unix","h":"#32-生产环境建议","p":1798},{"i":1813,"t":"func main() { transport := &http.Transport{ Dial: func(_, _ string) (net.Conn, error) { return net.Dial(\"unix\", \"/tmp/http.sock\") }, } client := &http.Client{ Transport: transport, Timeout: 5 * time.Second, } resp, err := client.Get(\"http://unix/health\") if err != nil { log.Fatal(err) } defer resp.Body.Close() body, _ := io.ReadAll(resp.Body) fmt.Println(\"响应:\", string(body)) }","s":"4.1 标准HTTP客户端","u":"/en/docs/note/golang/web_server_unix","h":"#41-标准http客户端","p":1798},{"i":1815,"t":"func main() { conn, err := net.Dial(\"unix\", \"/tmp/http.sock\") if err != nil { log.Fatal(err) } defer conn.Close() // 构造HTTP请求 request := \"GET / HTTP/1.1\\r\\nHost: unix\\r\\n\\r\\n\" _, err = conn.Write([]byte(request)) if err != nil { log.Fatal(err) } // 读取响应 response, err := io.ReadAll(conn) if err != nil { log.Fatal(err) } fmt.Println(\"响应:\", string(response)) }","s":"4.2 通用Socket客户端","u":"/en/docs/note/golang/web_server_unix","h":"#42-通用socket客户端","p":1798},{"i":1817,"t":"连接池配置： transport := &http.Transport{ Dial: func(_, _ string) (net.Conn, error) { return net.Dial(\"unix\", socketPath) }, MaxIdleConns: 100, IdleConnTimeout: 90 * time.Second, TLSHandshakeTimeout: 10 * time.Second, } Gin性能优化： 使用gin.SetMode(gin.ReleaseMode) 避免在热路径中使用反射 使用c.AbortWithStatus()而不是return来终止请求 服务器配置： 适当调整ReadTimeout和WriteTimeout 考虑使用http.TimeoutHandler添加全局超时 监控指标： 添加Prometheus或OpenTelemetry监控 记录请求延迟和错误率","s":"5. 性能优化建议","u":"/en/docs/note/golang/web_server_unix","h":"#5-性能优化建议","p":1798},{"i":1819,"t":"Q1: 如何调试Unix Socket通信问题？ A1: 使用nc -U /tmp/your.sock测试基本连接 检查socket文件权限ls -l /tmp/your.sock 使用strace跟踪系统调用 Q2: 如何处理\"address already in use\"错误？ A2: 确保程序退出时删除socket文件 添加错误处理自动清理旧socket 使用lsof -U | grep your.sock查找占用进程 Q3: 如何限制客户端访问？ A3: 设置严格的文件权限(如0700) 使用系统组权限控制 在应用层添加认证 Q4: Unix Socket与TCP性能对比如何？ A4: 延迟降低约30-50% 吞吐量提高约20-30% CPU使用率降低约10-20%","s":"6. 常见问题解答","u":"/en/docs/note/golang/web_server_unix","h":"#6-常见问题解答","p":1798},{"i":1821,"t":"容器间通信： Docker/Kubernetes环境中容器间高效通信 通过共享volume挂载socket文件 反向代理集成： server { listen 8080; location / { proxy_pass http://unix:/tmp/http.sock; } } 微服务架构： 同一主机上的服务间通信 替代gRPC的TCP传输 特权服务： 仅限本机访问的管理接口 高安全性要求的内部通信 高性能API网关： 网关与后端服务间的高速通道 减少网络协议栈开销","s":"7. 实际应用场景","u":"/en/docs/note/golang/web_server_unix","h":"#7-实际应用场景","p":1798},{"i":1823,"t":"Unix Socket为Golang服务提供了高性能的本地通信方案。无论是使用标准库还是Gin框架，实现起来都相对简单。关键注意点包括： 妥善管理socket文件生命周期 设置适当的文件权限 客户端使用正确的连接方式 生产环境添加适当的监控和日志 通过本培训文档，您应该能够： 理解Unix Socket的工作原理 实现基于Unix Socket的HTTP服务 编写对应的客户端代码 部署生产级Unix Socket服务 诊断常见问题","s":"总结","u":"/en/docs/note/golang/web_server_unix","h":"#总结","p":1798},{"i":1826,"t":"GDB（GNU Debugger）是一个强大的调试工具，广泛用于调试C、C++、Fortran等编程语言编写的程序。GDB可以在程序运行时执行控制，帮助开发人员诊断程序中的错误。","s":"1. GDB 概述","u":"/en/docs/note/os/debug/gdb","h":"#1-gdb-概述","p":1824},{"i":1828,"t":"GDB 是由 Free Software Foundation 开发和维护的，最早由 Richard Stallman 和 Roland H. Pesch 在 1986 年开始设计。如今，GDB已经成为Linux及其他操作系统上最广泛使用的调试工具。","s":"1.1 GDB的历史和发展","u":"/en/docs/note/os/debug/gdb","h":"#11-gdb的历史和发展","p":1824},{"i":1830,"t":"软件开发：用于程序调试和性能优化 嵌入式开发：调试在嵌入式系统上运行的应用程序 远程调试：通过网络调试远程机器上的程序 多线程调试：在多线程环境下调试并发问题","s":"1.2 GDB应用场景","u":"/en/docs/note/os/debug/gdb","h":"#12-gdb应用场景","p":1824},{"i":1833,"t":"yum install gdb","s":"2.1 使用包管理器安装","u":"/en/docs/note/os/debug/gdb","h":"#21-使用包管理器安装","p":1824},{"i":1835,"t":"（TODO：添加源码编译详细步骤）","s":"2.2 源码编译安装","u":"/en/docs/note/os/debug/gdb","h":"#22-源码编译安装","p":1824},{"i":1838,"t":"# 启动 GDB 调试指定程序 $ gdb <your_program> # 启动程序执行 `run`后面的参数会像进程正常执行一样传递给进程。通常，我们会在设置好断点之后。执行此命令 (gdb) run","s":"3.1 启动GDB","u":"/en/docs/note/os/debug/gdb","h":"#31-启动gdb","p":1824},{"i":1840,"t":"# 方法1：直接传参 (gdb) run arg1 arg2 arg3 # 方法2：预设参数 (gdb) set args arg1 arg2 arg3 (gdb) run # 方法3：修改参数 (gdb) set args new_arg1 new_arg2","s":"3.2 调试带参数的程序","u":"/en/docs/note/os/debug/gdb","h":"#32-调试带参数的程序","p":1824},{"i":1842,"t":"# 可以直接-p 指定pid $ gdb -p pid # 也可以启动gdb 后，attach pid $ gdb -q (gdb) <pid>","s":"3.3 调试运行中的进程","u":"/en/docs/note/os/debug/gdb","h":"#33-调试运行中的进程","p":1824},{"i":1844,"t":"命令 功能描述 b/break 设置断点 r/run 开始程序运行 start 在main函数开始前停止 c/continue 继续执行直到下一个断点 n/next 单步执行(不进入函数) s/step 单步执行(进入函数) p/print 打印变量的值 l/list 查看源代码 bt/backtrace 显示调用栈 until location 执行到指定位置 fini/finish 执行完成当前函数 q/quit 退出gdb","s":"3.4 基本调试命令","u":"/en/docs/note/os/debug/gdb","h":"#34-基本调试命令","p":1824},{"i":1846,"t":"通过 break 命令在特定位置设置断点（如函数或代码行）。 (gdb) break func_name # 设置函数断点 (gdb) break file.c:line # 设置文件行断点 (gdb) break file:line if condition # 条件断点 (gdb) info breakpoints # 查看断点信息 (gdb) delete <num> # 删除指定断点","s":"3.5 断点管理","u":"/en/docs/note/os/debug/gdb","h":"#35-断点管理","p":1824},{"i":1848,"t":"(gdb) print var # 打印变量 (gdb) info locals # 显示局部变量 (gdb) info args # 显示函数参数 (gdb) set var = value # 修改变量值 (gdb) x/10x <addr> # 查看内存内容（16进制）","s":"3.6 变量与内存操作","u":"/en/docs/note/os/debug/gdb","h":"#36-变量与内存操作","p":1824},{"i":1850,"t":"(gdb) info registers # 查看所有寄存器的值 (gdb) print $eax # 查看特定寄存器（如 x86 架构） (gdb) p/x $eax # 十六进制显示寄存器值 (gdb) set $eax = 0x10 # 修改寄存器值 # 特殊寄存器 (gdb) info registers float # 浮点寄存器 (gdb) info registers vector # 向量寄存器 (gdb) info registers eflags # 标志寄存器 (gdb) x/i $pc # 查看栈指针指向的内存 (gdb) x/i $pc # 反汇编当前指令 (gdb) stepi # 单步执行一条汇编指令 使用 $<寄存器名> 可以访问 CPU 寄存器；$pc 表示程序计数器，$sp 表示栈指针，$fp 为帧指针。 在GDB内部，$pc 实际上是一个宏，会根据当前调试目标的架构自动映射到正确的寄存器： x86-64 → 映射到 $rip ARM → 映射到 $r15 或 $pc MIPS → 映射到 $pc 示例 $ # gdb -q ./a.out Reading symbols from ./a.out... (gdb) l 1 #include <signal.h> 2 #include <stdlib.h> 3 #include <stdio.h> 4 5 int main() { 6 int a; 7 a=10; 8 printf(\"Hello World\\n\"); 9 printf(\"%d\\n\",a); 10 return 0; (gdb) b 8 Breakpoint 1 at 0x401145: file main.c, line 8. (gdb) r Starting program: /home/a.out [Thread debugging using libthread_db enabled] Breakpoint 1, main () at main.c:8 8 printf(\"Hello World\\n\"); (gdb) p a $1 = 10 (gdb) info locals a = 10 (gdb) set var a=11 (gdb) p a $2 = 11 (gdb) p &a $3 = (int *) 0x7fffffffe23c (gdb) x 0x7fffffffe23c 0x7fffffffe23c: 0x0000000b (gdb) x/10x 0x7fffffffe23c 0x7fffffffe23c: 0x0000000b 0x00000001 0x00000000 0xf7c29590 0x7fffffffe24c: 0x00007fff 0x00000000 0x00000000 0x00401136 0x7fffffffe25c: 0x00000000 0x00000000 (gdb) n Hello World 9 printf(\"%d\\n\",a); (gdb) 11 10 return 0; (gdb)","s":"3.7 寄存器操作","u":"/en/docs/note/os/debug/gdb","h":"#37-寄存器操作","p":1824},{"i":1853,"t":"# 使用 `info inferior` 命令查看当前程序中的所有进程。 (gdb) info inferior # 使用 `inferior` 命令切换不同进程进行调试 (gdb) inferior <process_id> # `follow-fork-mode` 参数用来设置gdb跟踪父进程还是子进程 # `set follow-fork-mode parent` 在fork之后，调试父进程，这也是gdb的默认值 (gdb) set follow-fork-mode child/parent # gdb是否控制未调试的进程 # `set detach-on-fork on` gdb默认值，gdb不控制未调试的进 (gdb) set detach-on-fork on/off gdb 默认只会跟踪父进程。当断点处在子进程路径时，程序可能会直接执行结束退出。 此时，可以通过设置 set follow-fork-mode child 再执行 run运行调试。 也可以 break fork 断点到fork时。","s":"4.1 多进程调试","u":"/en/docs/note/os/debug/gdb","h":"#41-多进程调试","p":1824},{"i":1855,"t":"# 使用 `info threads` 命令查看当前程序中的所有线程。 (gdb) info threads # 使用 `thread` 命令切换到特定线程。 (gdb) thread thread_id (gdb) break location thread thread_id","s":"4.2 多线程调试","u":"/en/docs/note/os/debug/gdb","h":"#42-多线程调试","p":1824},{"i":1857,"t":"# 标记观察断点，监控数值更改（wirte） (gdb) watch expression or variable # 标记观察断点，监控数值读取（read） (gdb) rwatch expression or variable # 标记观察断点。同时监控数据读取与更改（read and write） (gdb) awatch expression or variable 示例 $ gdb -q a.out Reading symbols from a.out...done. (gdb) l 1 #include <stdio.h> 2 3 int get_sum(int n) { 4 int sum = 0, i; 5 for (i = 0; i < n; i++) { 6 sum += i; 7 } 8 return sum; 9 } 10 (gdb) b 6 Breakpoint 1 at 0x4005ad: file main.c, line 6. (gdb) r Starting program: /tmp/a.out Missing separate debuginfos, use: yum debuginfo-install glibc-2.28-164.el8.x86_64 Breakpoint 1, get_sum (n=100) at main.c:6 6 sum += i; (gdb) watch i==99 Hardware watchpoint 2: i==99 (gdb) clear 6 Deleted breakpoint 1 (gdb) c Continuing. Hardware watchpoint 2: i==99 Old value = 0 New value = 1 0x00000000004005b7 in get_sum (n=100) at main.c:5 5 for (i = 0; i < n; i++) { (gdb) p i $1 = 99 (gdb) p sum $2 = 4851","s":"4.3 观察点(Watchpoints)","u":"/en/docs/note/os/debug/gdb","h":"#43-观察点watchpoints","p":1824},{"i":1859,"t":"参考链接 # 用捕捉断点监控某一事件的发生，等同于在程序中该事件发生的位置打普通断点。 (gdb) catch event 普通断点作用于程序中的某一行，当程序运行至此行时停止执行，观察断点作用于某一变量或表达式，当该变量（表达式）的值发生改变时，程序暂停。而捕捉断点的作用是，监控程序中某一事件的发生，例如程序发生某种异常时、某一动态库被加载时等等，一旦目标时间发生，则程序停止执行。","s":"4.4 捕获点(Catchpoints)","u":"/en/docs/note/os/debug/gdb","h":"#44-捕获点catchpoints","p":1824},{"i":1861,"t":"# 使用 `source` 命令执行 GDB 脚本，实现自动化调试。 (gdb) source <script_file>","s":"4.5 自动化调试","u":"/en/docs/note/os/debug/gdb","h":"#45-自动化调试","p":1824},{"i":1863,"t":"# GDB支持与远程系统调试，使用 `target remote` 命令连接远程程序。 (gdb) target remote <hostname>:<port>","s":"4.6 远程调试","u":"/en/docs/note/os/debug/gdb","h":"#46-远程调试","p":1824},{"i":1865,"t":"f 切换 (gdb) bt #0 add (low=1, high=10) at test1.c:5 #1 0x00000000004005e6 in main (argc=1, argv=0x7fffffffe408) at test1.c:12 (gdb) frame 1 #1 0x00000000004005e6 in main (argc=1, argv=0x7fffffffe408) at test1.c:12 12 result[0] = add(1,10); (gdb) f 1 #1 0x00000000004005e6 in main (argc=1, argv=0x7fffffffe408) at test1.c:12 12 result[0] = add(1,10); (gdb) i locals result = {-134224088, 32767, 0, 0}","s":"4.7 切换栈帧","u":"/en/docs/note/os/debug/gdb","h":"#47-切换栈帧","p":1824},{"i":1868,"t":"# -O0禁用优化，可以帮助调试代码 gcc -O0 -g program.c -o program","s":"5.1 编译时添加调试信息","u":"/en/docs/note/os/debug/gdb","h":"#51-编译时添加调试信息","p":1824},{"i":1870,"t":"# 拷贝elf中的调试信息到debug文件 objcopy --only-keep-debug program program.debug # 瘦身二进制程序 strip --strip-debug program","s":"5.2 分离调试信息","u":"/en/docs/note/os/debug/gdb","h":"#52-分离调试信息","p":1824},{"i":1872,"t":"运行时加载 (gdb) symbol-file program.debug 提前做好关联，无需运行时加载 $ objcopy --add-gnu-debuglink=program.debug program $ objdump -s -j .gnu_debuglink program program: file format elf64-x86-64 Contents of section .gnu_debuglink: 0000 70726f67 72616d2e 64656275 67000000 program.debug... 0010 cb07fc34","s":"5.3 加载调试信息","u":"/en/docs/note/os/debug/gdb","h":"#53-加载调试信息","p":1824},{"i":1875,"t":"(gdb) run (gdb) bt","s":"6.1 段错误调试","u":"/en/docs/note/os/debug/gdb","h":"#61-段错误调试","p":1824},{"i":1877,"t":"（结合valgrind使用）","s":"6.2 内存泄漏检查","u":"/en/docs/note/os/debug/gdb","h":"#62-内存泄漏检查","p":1824},{"i":1879,"t":"（多线程调试示例）","s":"6.3 死锁检测","u":"/en/docs/note/os/debug/gdb","h":"#63-死锁检测","p":1824},{"i":1882,"t":"GDB通过ptrace系统调用实现进程控制： long ptrace(enum __ptrace_request request, pid_t pid, void *addr, void *data);","s":"7.1 ptrace系统调用","u":"/en/docs/note/os/debug/gdb","h":"#71-ptrace系统调用","p":1824},{"i":1884,"t":"将断点处指令替换为int 3 保存原始指令 触发SIGTRAP信号","s":"7.2 断点实现原理","u":"/en/docs/note/os/debug/gdb","h":"#72-断点实现原理","p":1824},{"i":1886,"t":"GNU GDB官方文档 《The Art of Debugging with GDB, DDD, and Eclipse》 GDB Cheat Sheet","s":"8. 参考资源","u":"/en/docs/note/os/debug/gdb","h":"#8-参考资源","p":1824},{"i":1889,"t":"golang.org/x/sys/unix 是 Go 官方提供的一个扩展包，专门用于执行 Unix/Linux 相关的系统调用。它是 syscall 包的替代方案，提供更丰富的功能，并保持持续维护和更新。","s":"1. 简介","u":"/en/docs/note/golang/syscall","h":"#1-简介","p":1887},{"i":1891,"t":"sys 不是 Go 标准库的一部分，需要手动安装： go get golang.org/x/sys/unix","s":"2. 安装","u":"/en/docs/note/golang/syscall","h":"#2-安装","p":1887},{"i":1894,"t":"golang.org/x/sys/unix 是 Go 官方提供的一个扩展包，专门用于执行 Unix/Linux 相关的系统调用。它是 syscall 包的替代方案，提供更丰富的功能，并保持持续维护和更新。","s":"1. 简介","u":"/en/docs/note/golang/syscall","h":"#1-简介-1","p":1887},{"i":1896,"t":"sys 不是 Go 标准库的一部分，需要手动安装： go get golang.org/x/sys/unix","s":"2. 安装","u":"/en/docs/note/golang/syscall","h":"#2-安装-1","p":1887},{"i":1899,"t":"package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { pid := unix.Getpid() fmt.Println(\"当前进程 ID:\", pid) ppid := unix.Getppid() fmt.Println(\"父进程 ID:\", ppid) }","s":"3.1 获取进程 ID","u":"/en/docs/note/golang/syscall","h":"#31-获取进程-id","p":1887},{"i":1901,"t":"3.2.1 使用 unix.Open 读取文件​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { fd, err := unix.Open(\"test.txt\", unix.O_RDONLY, 0) if err != nil { fmt.Println(\"打开文件失败:\", err) return } defer unix.Close(fd) var buf [100]byte n, err := unix.Read(fd, buf[:]) if err != nil { fmt.Println(\"读取文件失败:\", err) return } fmt.Println(\"文件内容:\", string(buf[:n])) }","s":"3.2 文件操作","u":"/en/docs/note/golang/syscall","h":"#32-文件操作","p":1887},{"i":1903,"t":"3.3.1 创建子进程​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { binary := \"/bin/ls\" args := []string{\"ls\", \"-l\"} err := unix.Exec(binary, args, nil) if err != nil { fmt.Println(\"执行失败:\", err) } }","s":"3.3 进程控制","u":"/en/docs/note/golang/syscall","h":"#33-进程控制","p":1887},{"i":1905,"t":"3.4.1 发送信号​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" \"time\" ) func main() { pid := unix.Getpid() fmt.Println(\"当前进程 ID:\", pid) go func() { time.Sleep(2 * time.Second) unix.Kill(pid, unix.SIGTERM) }() }","s":"3.4 信号处理","u":"/en/docs/note/golang/syscall","h":"#34-信号处理","p":1887},{"i":1907,"t":"3.5.1 mmap 映射文件​ package main import ( \"fmt\" \"os\" \"golang.org/x/sys/unix\" \"unsafe\" ) func main() { file, err := os.OpenFile(\"test.txt\", os.O_RDWR, 0666) if err != nil { fmt.Println(\"打开文件失败:\", err) return } defer file.Close() fi, _ := file.Stat() size := fi.Size() data, err := unix.Mmap(int(file.Fd()), 0, int(size), unix.PROT_READ, unix.MAP_SHARED) if err != nil { fmt.Println(\"mmap 失败:\", err) return } fmt.Println(\"文件内容:\", *(*string)(unsafe.Pointer(&data))) }","s":"3.5 内存管理","u":"/en/docs/note/golang/syscall","h":"#35-内存管理","p":1887},{"i":1909,"t":"功能 syscall (已废弃) x/sys/unix (推荐) 进程管理 ✅ ✅ 文件操作 ✅ ✅ 信号处理 ✅ ✅ 兼容性 ❌ 仅限 Linux/macOS/Windows ✅ 跨平台更好 未来维护 ❌ 停止维护 ✅ 推荐使用 示例（x/sys/unix 替代 syscall）： import \"golang.org/x/sys/unix\" func main() { unix.Getpid() // 替代 syscall.Getpid() }","s":"4. unix 作为 syscall 的替代方案","u":"/en/docs/note/golang/syscall","h":"#4-unix-作为-syscall-的替代方案","p":1887},{"i":1911,"t":"syscall 适用于低级系统调用，但已被废弃。 建议使用 golang.org/x/sys/unix，因为 syscall 不再维护。 适用于需要直接操作系统资源（如 mmap、fork、exec、signal）。 不适用于一般应用开发，Go 提供的标准库 os、io、net 足够大多数场景。","s":"5. 结论","u":"/en/docs/note/golang/syscall","h":"#5-结论","p":1887},{"i":1913,"t":"官方文档 GitHub 代码库","s":"6. 参考","u":"/en/docs/note/golang/syscall","h":"#6-参考","p":1887},{"i":1916,"t":"package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { pid := unix.Getpid() fmt.Println(\"当前进程 ID:\", pid) ppid := unix.Getppid() fmt.Println(\"父进程 ID:\", ppid) }","s":"3.1 获取进程 ID","u":"/en/docs/note/golang/syscall","h":"#31-获取进程-id-1","p":1887},{"i":1918,"t":"3.2.1 使用 unix.Open 读取文件​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { fd, err := unix.Open(\"test.txt\", unix.O_RDONLY, 0) if err != nil { fmt.Println(\"打开文件失败:\", err) return } defer unix.Close(fd) var buf [100]byte n, err := unix.Read(fd, buf[:]) if err != nil { fmt.Println(\"读取文件失败:\", err) return } fmt.Println(\"文件内容:\", string(buf[:n])) }","s":"3.2 文件操作","u":"/en/docs/note/golang/syscall","h":"#32-文件操作-1","p":1887},{"i":1920,"t":"3.3.1 创建子进程​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { binary := \"/bin/ls\" args := []string{\"ls\", \"-l\"} err := unix.Exec(binary, args, nil) if err != nil { fmt.Println(\"执行失败:\", err) } }","s":"3.3 进程控制","u":"/en/docs/note/golang/syscall","h":"#33-进程控制-1","p":1887},{"i":1922,"t":"3.4.1 发送信号​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" \"time\" ) func main() { pid := unix.Getpid() fmt.Println(\"当前进程 ID:\", pid) go func() { time.Sleep(2 * time.Second) unix.Kill(pid, unix.SIGTERM) }() }","s":"3.4 信号处理","u":"/en/docs/note/golang/syscall","h":"#34-信号处理-1","p":1887},{"i":1924,"t":"3.5.1 mmap 映射文件​ package main import ( \"fmt\" \"os\" \"golang.org/x/sys/unix\" \"unsafe\" ) func main() { file, err := os.OpenFile(\"test.txt\", os.O_RDWR, 0666) if err != nil { fmt.Println(\"打开文件失败:\", err) return } defer file.Close() fi, _ := file.Stat() size := fi.Size() data, err := unix.Mmap(int(file.Fd()), 0, int(size), unix.PROT_READ, unix.MAP_SHARED) if err != nil { fmt.Println(\"mmap 失败:\", err) return } fmt.Println(\"文件内容:\", *(*string)(unsafe.Pointer(&data))) }","s":"3.5 内存管理","u":"/en/docs/note/golang/syscall","h":"#35-内存管理-1","p":1887},{"i":1926,"t":"功能 syscall (已废弃) x/sys/unix (推荐) 进程管理 ✅ ✅ 文件操作 ✅ ✅ 信号处理 ✅ ✅ 兼容性 ❌ 仅限 Linux/macOS/Windows ✅ 跨平台更好 未来维护 ❌ 停止维护 ✅ 推荐使用 示例（x/sys/unix 替代 syscall）： import \"golang.org/x/sys/unix\" func main() { unix.Getpid() // 替代 syscall.Getpid() }","s":"4. unix 作为 syscall 的替代方案","u":"/en/docs/note/golang/syscall","h":"#4-unix-作为-syscall-的替代方案-1","p":1887},{"i":1928,"t":"syscall 适用于低级系统调用，但已被废弃。 建议使用 golang.org/x/sys/unix，因为 syscall 不再维护。 适用于需要直接操作系统资源（如 mmap、fork、exec、signal）。 不适用于一般应用开发，Go 提供的标准库 os、io、net 足够大多数场景。","s":"5. 结论","u":"/en/docs/note/golang/syscall","h":"#5-结论-1","p":1887},{"i":1930,"t":"官方文档 GitHub 代码库","s":"6. 参考","u":"/en/docs/note/golang/syscall","h":"#6-参考-1","p":1887},{"i":1932,"t":"孤儿进程： 父亲先死，儿子被1号收养。 僵尸进程：儿子先死，父亲不管不顾。","s":"僵尸进程","u":"/en/docs/note/os/zombie","h":"","p":1931},{"i":1934,"t":"top查看是否有僵尸进程 通过命令查询僵尸进程在哪 ps -A -ostat,ppid,pid,cmd | grep -e '^[Zz]' # 命令注解： # -A 参数列出所有进程 # -o 自定义输出字段 我们设定显示字段为 stat（状态）, ppid（进程父id）, pid(进程id)，cmd（命令）这四个参数 # 因为状态为 z或者Z的进程为僵尸进程，所以我们使用grep抓取stat状态为zZ进程","s":"查杀僵尸进程","u":"/en/docs/note/os/zombie","h":"#查杀僵尸进程","p":1931},{"i":1937,"t":"通过sleep时间，控制父亲先死，此时儿子被1号孤儿院收养。可以通过 ps查看，a.out的父进程变成了 1 #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <sys/wait.h> int main() { pid_t pid = fork(); // 创建子进程 if (pid < 0) { // fork失败 perror(\"fork failed\"); exit(EXIT_FAILURE); } else if (pid == 0) { // 子进程 printf(\"I am the child process with PID %d\\n\", getpid()); sleep(2000); // 让子进程运行一段时间 ，此时父亲已死。 printf(\"Child process exiting...\\n\"); exit(EXIT_SUCCESS); // 子进程退出 } else { // 父进程直接退出 printf(\"I am the parent process with PID %d and my child has PID %d\\n\", getpid(), pid); } return 0; }","s":"孤儿进程","u":"/en/docs/note/os/zombie","h":"#孤儿进程","p":1931},{"i":1938,"t":"通过sleep时间，控制子进程先死。但是，父进程不回收子进程。 #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <sys/wait.h> int main() { pid_t pid = fork(); // 创建子进程 if (pid < 0) { // fork失败 perror(\"fork failed\"); exit(EXIT_FAILURE); } else if (pid == 0) { // 子进程 printf(\"I am the child process with PID %d\\n\", getpid()); sleep(2); // 让子进程运行一段时间 printf(\"Child process exiting...\\n\"); exit(EXIT_SUCCESS); // 子进程退出 } else { // 父进程 printf(\"I am the parent process with PID %d and my child has PID %d\\n\", getpid(), pid); // 注意：这里父进程没有调用wait()或waitpid()，所以子进程会变成僵尸进程 sleep(10000); } return 0; } 查询僵尸进程 $ ps -A -ostat,ppid,pid,cmd | grep -e '^[Zz]' Z+ 933981 933982 [a.out] <defunct> $ ps -ef | grep a.out root 933981 933844 0 11:11 pts/4 00:00:00 ./a.out root 933982 933981 0 11:11 pts/4 00:00:00 [a.out] <defunct> root 934096 933897 0 11:13 pts/5 00:00:00 grep --color=auto a.out","s":"僵尸进程","u":"/en/docs/note/os/zombie","h":"#僵尸进程-1","p":1931},{"i":1940,"t":"#include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <signal.h> #include <sys/wait.h> // SIGCHLD 信号处理函数 void sigchld_handler(int signum) { // 使用 waitpid 非阻塞回收所有已终止的子进程 while (waitpid(-1, NULL, WNOHANG) > 0); } int main() { // 设置 SIGCHLD 信号处理函数 struct sigaction sa; sa.sa_handler = sigchld_handler; sigemptyset(&sa.sa_mask); sa.sa_flags = SA_RESTART; // 自动重启被中断的系统调用 if (sigaction(SIGCHLD, &sa, NULL) == -1) { perror(\"sigaction\"); exit(EXIT_FAILURE); } // 创建子进程 pid_t pid = fork(); if (pid < 0) { perror(\"fork\"); exit(EXIT_FAILURE); } if (pid == 0) { // 子进程 printf(\"子进程: PID = %d\\n\", getpid()); sleep(10); // 模拟子进程执行一些任务 printf(\"子进程结束: PID = %d\\n\", getpid()); exit(EXIT_SUCCESS); } else { // 父进程 printf(\"父进程: PID = %d, 子进程 PID = %d\\n\", getpid(), pid); // 父进程继续执行其他任务 for (int i = 0; i < 5; ++i) { printf(\"父进程正在工作...\\n\"); sleep(10000) } // 父进程结束前的收尾工作 printf(\"父进程结束: PID = %d\\n\", getpid()); } return 0; }","s":"回收儿子","u":"/en/docs/note/os/zombie","h":"#回收儿子","p":1931}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/975",[0,0.199]],["t/977",[0,0.199]],["t/979",[0,0.199]],["t/981",[1,7.987,2,8.234,3,8.234,4,7.491,5,8.234,6,8.428,7,3.63,8,8.234,9,8.234,10,8.234,11,7.491,12,7.491,13,5.892,14,4.111,15,8.234,16,8.234]],["t/983",[6,4.555,14,2.675,17,3.349,18,5.357,19,4.873,20,4.555,21,5.357,22,5.357,23,5.357,24,5.357,25,5.357,26,4.127,27,5.357,28,8.637,29,5.357,30,4.555,31,1.921,32,5.357,33,4.873,34,5.357,35,5.357,36,4.127,37,4.873,38,5.357,39,4.873,40,5.357,41,5.357,42,5.357,43,6.369,44,5.357,45,4.555,46,5.357,47,3.833,48,4.873,49,4.873,50,5.357,51,5.357,52,2.505,53,3.715,54,3.087,55,4.317,56,5.357,57,4.317,58,4.873,59,5.357,60,8.637,61,8.637,62,4.317,63,5.357,64,7.49,65,4.127,66,5.357,67,5.357,68,4.873,69,1.905,70,3.609,71,2.929,72,4.127,73,5.357,74,3.833,75,2.929,76,5.357,77,3.209,78,5.357,79,4.873,80,5.357,81,2.569,82,5.357,83,4.555,84,5.357,85,1.622,86,5.357,87,5.357,88,4.555,89,3.087,90,5.357,91,4.317,92,4.873,93,5.357]],["t/985",[1,7.883,4,9.733,26,5.276,71,3.744,85,2.074,94,6.848,95,6.23,96,5.823,97,6.848,98,3.019,99,6.848,100,4.493,101,5.518,102,6.23,103,6.848,104,6.848,105,6.848,106,6.848,107,6.848,108,6.848,109,6.848,110,6.999,111,6.23,112,6.848,113,5.276,114,6.848,115,6.848,116,6.23,117,6.848,118,6.23,119,6.848,120,6.23,121,6.848,122,6.848,123,6.23,124,6.848]],["t/987",[1,2.541,6,2.681,17,1.972,26,3.876,33,2.868,37,2.868,43,2.681,45,4.278,48,6.52,49,6.52,52,2.353,58,4.577,71,2.751,79,2.868,81,3.011,85,0.955,92,2.868,95,2.868,101,2.541,118,4.577,120,2.868,125,2.681,126,3.153,127,8.347,128,7.167,129,2.681,130,3.153,131,6.52,132,2.868,133,3.153,134,3.153,135,3.153,136,3.153,137,3.153,138,3.153,139,3.153,140,3.153,141,2.429,142,3.153,143,3.153,144,3.153,145,4.577,146,3.153,147,3.153,148,3.153,149,2.256,150,3.153,151,3.153,152,3.153,153,3.153,154,3.153,155,3.153,156,3.153,157,2.681,158,3.153,159,3.153,160,3.153,161,3.153,162,5.032,163,2.681,164,2.681,165,3.153,166,3.153,167,3.153,168,3.153,169,3.153,170,2.429,171,3.153,172,3.153,173,3.153,174,2.429,175,3.153,176,3.153,177,3.153,178,5.032,179,6.279,180,3.153,181,2.681,182,2.681,183,5.032,184,2.847,185,2.681,186,2.868,187,3.153,188,3.153,189,3.153,190,2.187,191,3.153,192,3.153,193,5.032,194,3.153,195,5.032,196,2.125,197,3.153,198,3.153,199,3.153,200,3.153,201,3.876,202,3.153,203,3.153,204,2.187,205,3.153,206,3.153,207,3.153,208,5.032,209,2.868,210,3.153,211,3.153,212,2.429,213,2.681,214,4.577,215,5.712,216,3.153,217,3.153,218,3.153,219,3.153,220,3.153,221,3.153,222,2.256,223,3.153,224,5.032,225,2.681,226,3.153,227,3.153,228,3.153,229,5.032,230,3.153,231,3.153,232,3.153,233,3.153,234,2.069,235,3.153,236,3.153,237,2.336,238,3.153,239,3.153,240,2.681,241,2.868,242,3.153,243,4.278,244,2.868,245,2.681,246,3.153,247,3.153,248,3.153,249,5.032,250,3.153,251,2.868,252,2.429,253,3.153,254,3.153,255,3.153,256,3.153,257,3.153,258,4.577,259,3.153,260,2.541,261,3.153,262,2.868,263,1.784,264,3.153,265,3.153,266,3.153,267,4.278,268,3.153,269,3.153,270,3.153,271,3.153,272,1.39,273,3.153,274,2.681,275,3.153,276,3.153,277,3.153,278,3.153,279,3.153,280,2.868,281,2.868,282,2.429,283,3.153]],["t/989",[26,4.809,43,5.307,52,2.919,53,4.328,71,3.412,81,2.994,131,8.505,237,4.624,284,6.242,285,6.242,286,4.206,287,6.242,288,8.315,289,6.242,290,9.349,291,6.242,292,6.242,293,6.242,294,6.242,295,9.97,296,5.321,297,6.242,298,4.328,299,8.315,300,6.242,301,6.242,302,6.242,303,5.678,304,4.624,305,6.242,306,4.095,307,3.357,308,6.242,309,6.242,310,5.678,311,6.242,312,6.242,313,6.242,314,6.242,315,5.03,316,5.678,317,6.242,318,2.721,319,3.074,320,6.242,321,6.242,322,6.242,323,6.242,324,6.242]],["t/991",[1,3.92,19,6.363,31,1.745,45,4.136,52,2.275,55,3.92,65,3.747,77,2.914,85,2.118,102,4.425,110,3.481,111,4.425,132,8.148,145,6.363,186,4.425,241,4.425,244,4.425,258,4.425,307,2.616,319,4.034,325,4.864,326,4.864,327,4.864,328,4.864,329,4.864,330,3.191,331,4.864,332,4.864,333,4.864,334,4.864,335,4.864,336,4.864,337,4.864,338,4.864,339,4.864,340,4.864,341,4.864,342,4.864,343,4.864,344,4.864,345,6.995,346,4.864,347,1.631,348,4.864,349,9.489,350,4.864,351,4.864,352,4.864,353,4.864,354,4.864,355,4.864,356,4.864,357,6.363,358,3.747,359,4.864,360,4.864,361,4.136,362,3.481,363,4.864,364,3.041,365,4.864,366,4.864,367,4.864,368,3.481,369,3.481,370,3.193,371,6.995,372,4.864,373,4.864,374,4.864,375,5.182,376,4.864,377,4.864,378,4.425,379,4.864,380,4.864,381,4.864,382,4.864,383,4.864,384,4.864,385,3.041,386,3.92,387,4.864,388,2.575,389,4.864,390,4.864,391,4.864,392,4.864,393,4.425,394,4.864]],["t/993",[53,7.211,282,8.011,395,10.399,396,10.399]],["t/997",[0,0.17,397,3.796,398,7.145,399,7.922,400,6.724,401,8.708,402,8.708]],["t/999",[0,0.171,57,7.076,347,2.944,398,5.761,403,2.368,404,4.446,405,3.628,406,6.764,407,4.723]],["t/1001",[0,0.201,408,8.893]],["t/1004",[0,0.17,85,2.637,319,4.289,405,3.598,409,10.248,410,5.343,411,4.023,412,7.404]],["t/1006",[0,0.19]],["t/1008",[0,0.198,413,4.312]],["t/1011",[0,0.172,204,6.192,414,2.922,415,8.123,416,3.981,417,3.652,418,7.195]],["t/1013",[0,0.178]],["t/1015",[0,0.199,411,3.774,417,3.342,419,4.798,420,5.505,421,6.947]],["t/1018",[347,2.994,403,2.408,410,5.422,415,8.123,422,5.715,423,3.69,424,5.715]],["t/1020",[0,0.19]],["t/1022",[0,0.172,410,4.617,423,4.276,425,6.336,426,7.135,427,7.135,428,8.854]],["t/1024",[0,0.202,413,4.411]],["t/1027",[388,4.893,429,7.119,430,4.432,431,8.407]],["t/1029",[0,0.186]],["t/1031",[0,0.196,432,6.14]],["t/1034",[72,7.972,85,2.681,429,6.821,433,6.336,434,8.854,435,6.56,436,7.528,437,7.135]],["t/1036",[0,0.178]],["t/1038",[0,0.202,413,4.252,429,6.56,431,7.747,433,6.093,438,8.515]],["t/1041",[85,2.774,422,5.863,433,6.555,439,7.382,440,8.334]],["t/1043",[0,0.178]],["t/1045",[0,0.198,413,4.312]],["t/1048",[421,7.789,422,5.863,441,9.161,442,8.334,443,8.334]],["t/1050",[0,0.178]],["t/1052",[0,0.199,413,4.243]],["t/1055",[0,0.147,85,2.681,422,5.667,433,6.336,440,9.414,443,8.055,444,8.854,445,8.854]],["t/1057",[0,0.186]],["t/1059",[0,0.2,413,4.143]],["t/1061",[0,0.162,414,2.633,446,4.636,447,5.961,448,5.961,449,4.074,450,4.124,451,7.32,452,4.725,453,5.961,454,2.474,455,7.32,456,3.763,457,4.922,458,5.031,459,3.859,460,4.636,461,3.717,462,5.15]],["t/1064",[0,0.106,7,2.818,17,5.282,31,2.293,52,2.989,62,5.152,190,4.433,234,4.194,306,4.194,407,3.438,410,3.333,450,2.697,454,2.597,457,5.787,458,5.916,461,4.649,463,3.684,464,3.91,465,3.83,466,5.152,467,4.574,468,4.925,469,4.925,470,7.182,471,3.192,472,5.435,473,2.918,474,4.433,475,5.435,476,5.152,477,4.433,478,5.152,479,5.435,480,4.433,481,5.816,482,3.106,483,3.333,484,5.152,485,3.91,486,3.237,487,5.435,488,5.435,489,5.816,490,4.307,491,5.816]],["t/1066",[0,0.192,403,2.075,454,2.924,456,3.598,457,4.707,458,4.811,461,3.555,465,4.61,471,3.842,483,4.959,485,4.707,492,4.207,493,4.074,494,5.049,495,5.336,496,5.336,497,4.811,498,4.61]],["t/1069",[0,0.203,36,2.273,98,1.301,370,2.177,397,1.286,403,0.796,411,2.204,446,3.46,449,1.494,454,2.622,460,2.749,461,1.363,492,2.608,499,1.117,500,2.186,501,2.112,502,2.046,503,2.046,504,1.845,505,1.768,506,1.67,507,1.805,508,2.186,509,3.444,510,2.378,511,1.363,512,2.509,513,1.38,514,1.768,515,1.301,516,1.733,517,1.936,518,1.331]],["t/1071",[0,0.203,454,1.32,461,1.983,509,2.143,515,1.892,516,2.52,519,2.143]],["t/1073",[0,0.203,411,3.472,446,3.102,454,2.882,492,2.943,509,2.688,511,2.487,513,3.515,514,3.225,517,3.532,520,4.898]],["t/1075",[0,0.2]],["t/1077",[0,0.189,52,3.547,69,2.697,272,3.343,286,5.11,403,2.045,423,3.134,447,5.619,453,5.619,454,2.898,459,3.638,483,3.955,494,4.976,497,4.742,509,3.787,521,5.259,522,6.9,523,5.619,524,6.112,525,5.427,526,6.9,527,5.843]],["t/1079",[0,0.19,7,3.273,85,2.248,286,5.003,296,4.752,388,3.931,446,4.278,449,3.76,454,2.283,456,3.472,471,3.707,483,4.85,495,5.149,496,5.149,528,6.754,529,6.754,530,3.608,531,4.643,532,4.778,533,2.919,534,3.43,535,3.993,536,2.617]],["t/1082",[0,0.17,13,5.427,65,5.843,77,4.544,85,2.297,91,6.112,347,2.543,368,5.427,370,3.462,397,3.306,406,5.843,537,5.843,538,7.596,539,6.112,540,3.421,541,7.596,542,4.976,543,5.619,544,6.9,545,6.9,546,6.449,547,7.584,548,4.544,549,6.449,550,5.427]],["t/1084",[75,4.003,77,4.386,81,4.422,260,5.9,347,2.455,370,4.208,405,3.026,411,3.382,412,6.226,496,5.077,537,5.641,538,7.43,539,5.9,540,4.159,542,4.804,551,6.661,552,5.902,553,7.43,554,6.226,555,5.9,556,5.239,557,5.425,558,5.217]],["t/1087",[0,0.199,83,6.269,370,3.365,404,3.733,405,3.827,540,3.326,555,5.941,556,5.276,557,5.462,559,4.51,560,4.719,561,6.707,562,4.33]],["t/1089",[0,0.198,370,4.357,405,3.533,425,4.659,464,3.983,486,4.329,532,3.345,540,2.937,552,5.054,556,6.118,557,6.334,559,3.983,560,4.167,563,4.824,564,5.536,565,4.674,566,3.983,567,3.983,568,4.659,569,5.247,570,5.536,571,6.511,572,5.016]],["t/1092",[0,0.199,81,3.512,370,3.342,405,3.81,411,3.382,480,5.077,540,3.303,552,3.877,556,5.239,559,4.479,560,4.686,561,6.661,573,6.661,574,7.322]],["t/1094",[0,0.199,52,2.954,77,3.784,81,3.029,347,2.118,364,3.95,370,3.825,388,3.344,405,3.463,466,5.09,472,5.371,480,4.38,496,4.38,532,3.245,540,2.849,552,4.437,554,5.371,556,4.52,558,4.742,559,3.864,560,4.043,565,4.582,573,5.746,575,2.816,576,6.316,577,5.371,578,4.866,579,6.316]],["t/1096",[0,0.172,260,6.292,307,4.2,403,2.588,405,3.227,532,4.011,537,6.015,538,7.734,539,6.292,540,4.329,552,5.501,556,5.587,565,4.269,567,4.776,580,7.808,581,7.808,582,7.808,583,4.998]],["t/1098",[0,0.175,52,3.083,75,4.712,77,3.949,81,4.134,260,5.312,310,5.997,364,4.122,370,3.934,403,1.778,405,2.724,411,3.045,417,2.696,537,5.078,538,6.946,539,5.312,540,4.332,544,5.997,552,5.085,554,5.605,555,5.312,556,6.168,557,4.884,558,3.73,565,3.604,569,5.312,584,4.442,585,6.592,586,5.997,587,5.605,588,4.884,589,4.884,590,3.203,591,5.605,592,5.078,593,5.078,594,3.798]],["t/1100",[0,0.164,98,3.602,272,3.602,423,3.376,454,3.033,461,4.557,493,5.611,515,4.349,595,7.433,596,7.433,597,6.294,598,7.433,599,7.433]],["t/1102",[454,2.841,461,4.269,493,4.893,515,4.074]],["t/1105",[0,0.202,272,3.736,370,2.361,397,2.255,454,2.832,460,4.212,461,3.376,469,3.985,493,3.87,509,4.232,515,3.222,516,3.038,518,3.297,600,3.186,601,4.169]],["t/1107",[0,0.202,69,3.168,272,3.928,499,2.626,600,3.024]],["t/1109",[0,0.201,454,2.315,493,3.987,509,3.76,515,4.137,602,4.709]],["t/1111",[0,0.201,534,3.607,535,4.2,536,2.753]],["t/1113",[0,0.195,534,3.895,535,4.535,536,2.972,603,4.459]],["t/1117",[0,0.189,53,5.893,69,3.022,416,3.789,454,2.613,600,3.705,604,4.431,605,4.303,606,7.226,607,7.226]],["t/1119",[0,0.18,14,3.557,31,3.251,252,5.489,319,3.509,347,2.389,388,3.772,414,2.966,419,4.184,461,4.186,493,4.798,505,5.97,515,3.141,604,3.715,605,3.608,608,6.481,609,5.222,610,6.481,611,8.244,612,6.481,613,6.481,614,5.741,615,6.481,616,6.058,617,5.741,618,5.489]],["t/1121",[0,0.202,272,4.123,370,2.445,386,4.317,397,2.335,416,3.851,454,1.647,460,3.087,461,2.474,505,3.209,509,3.74,604,2.793,609,3.087,619,5.549]],["t/1123",[0,0.203,69,1.746,272,3.104,416,2.189,454,1.509,461,3.253,499,1.858,509,2.451,515,2.164,516,2.883,604,2.56,620,2.73,621,3.956]],["t/1125",[0,0.202,534,3.205,535,3.732,536,2.446]],["t/1127",[0,0.152,85,2.187,98,3.184,163,6.141,184,4.086,201,7.042,414,2.363,449,3.657,473,3.296,482,4.442,497,4.516,536,2.546,540,3.258,548,4.326,594,4.161,622,5.168,623,5.35,624,5.82,625,5.564,626,5.008,627,5.82,628,5.168,629,4.738,630,5.82,631,5.82,632,4.516,633,6.57,634,6.57,635,6.57,636,5.35,637,5.82,638,5.564,639,5.82]],["t/1129",[0,0.172,69,3.175,98,3.936,536,3.148,543,6.615,640,6.615,641,8.123]],["t/1131",[0,0.201,69,2.993,70,1.736,75,1.409,89,3.664,98,1.136,190,1.787,263,3.988,296,1.649,347,1.432,370,1.176,388,1.364,403,1.151,410,1.344,411,1.19,414,1.397,435,1.909,449,1.305,450,1.087,454,0.792,462,2.733,463,1.485,464,1.576,473,1.176,477,1.787,485,1.576,486,3.847,490,1.736,499,3.045,504,2.67,515,2.41,518,2.868,530,1.252,533,1.679,536,0.908,540,1.162,562,2.508,566,1.576,575,1.149,600,1.123,603,1.712,622,1.844,642,1.909,643,2.132,644,4.751,645,2.768,646,3.791,647,2.077,648,1.985,649,1.909,650,5.407,651,2.077,652,2.077,653,1.433,654,2.077,655,2.344,656,2.344,657,1.544,658,2.344,659,1.485,660,4.05,661,2.344,662,2.191,663,2.077,664,1.433,665,2.344,666,5.589,667,4.409,668,5.124,669,1.269,670,6.412,671,3.631,672,3.885,673,1.787,674,2.344,675,2.344,676,1.787,677,2.077,678,2.191,679,1.176,680,1.305]],["t/1133",[0,0.189,89,4.19,141,5.602,318,3.17,414,2.38,424,4.654,450,3.874,473,3.319,519,3.631,533,2.859,536,2.564,540,3.28,542,4.771,603,3.68,632,4.547,681,5.29,682,4.448,683,4.043,684,5.042,685,5.042,686,6.615,687,6.615,688,5.86,689,5.042,690,4.448]],["t/1135",[0,0.189,274,6.79,319,3.933,414,2.613,533,3.139,540,3.602,542,5.239,552,4.228,659,4.601,691,7.264,692,4.44,693,4.784,694,5.38,695,7.264,696,5.38,697,5.916,698,7.264]],["t/1137",[0,0.182,403,2.186,423,3.35,462,5.189,497,5.07,533,3.187,540,3.657,590,3.94,699,3.615,700,6.007,701,6.246,702,4.761,703,4.761,704,7.376,705,6.534,706,7.376,707,4.587]],["t/1139",[0,0.197,53,5.077,85,2.217,307,3.938,414,2.396,437,5.9,473,3.342,483,3.818,502,5.077,506,4.143,533,2.878,536,2.581,540,3.303,631,5.9,673,5.077,689,5.077,690,4.479,708,5.239,709,5.9,710,6.661]],["t/1141",[0,0.193,7,3.296,85,2.264,184,4.231,397,3.259,430,3.586,452,4.391,519,3.733,533,2.939,540,3.373,654,6.025,702,4.391,703,4.391,711,6.802,712,6.358,713,6.802,714,8.499,715,5.35,716,4.231,717,4.309,718,6.802]],["t/1143",[0,0.202,85,2.06,430,3.263,483,3.548,518,3.069,533,2.675,540,3.069,692,4.892,719,6.19]],["t/1145",[0,0.204,69,0.218,72,0.472,263,0.347,306,0.402,403,0.165,404,0.31,405,0.253,411,0.283,414,0.382,423,0.253,424,0.392,458,0.383,473,0.533,477,0.425,506,0.347,552,0.325,590,0.298,600,0.267,664,0.341,681,0.353,682,0.375,708,0.439,720,0.277,721,0.413,722,0.367,723,0.558,724,0.454,725,0.439,726,0.521,727,0.558,728,0.402,729,0.383,730,0.283,731,0.347,732,0.383,733,0.472,734,0.413,735,0.767]],["t/1147",[0,0.195,54,4.636,69,2.861,184,4.553,467,5.757,508,5.961,603,3.918,643,4.017,647,6.484,648,6.198,720,3.629,736,5.961]],["t/1149",[0,0.19,54,4.219,85,2.217,98,3.228,100,4.804,101,5.9,414,2.396,449,3.708,482,3.558,506,4.143,536,2.581,627,5.9,629,4.804,630,5.9,664,4.071,688,5.9,694,4.933,715,5.239,716,4.143,737,4.578,738,5.077,739,6.661,740,5.9,741,6.661,742,6.661,743,6.661,744,5.077]],["t/1152",[318,3.33,347,2.561,414,2.5,423,3.157,454,2.911,460,4.402,461,3.529,493,4.045,497,4.777,590,3.712,637,6.156,679,3.487,692,5.264,693,4.576,699,3.406,720,3.446,745,6.156,746,6.95,747,6.495,748,6.156,749,4.889,750,6.156,751,5.885,752,6.95,753,3.814,754,4.777]],["t/1155",[0,0.203,89,1.641,98,2.043,110,2.038,272,1.255,296,1.822,370,3.083,397,1.241,403,1.581,416,2.067,422,1.822,446,1.641,454,2.583,460,3.377,461,2.141,493,1.508,494,3.041,499,1.078,500,2.11,501,2.038,502,1.975,503,1.975,504,1.781,505,1.706,509,3.712,510,2.295,517,1.868,518,3.047,540,2.091,548,1.706,550,2.038,588,2.11,601,2.295,603,1.142,605,1.442,609,1.641,669,1.402,692,1.583,693,1.706,700,3.434,750,2.295,755,3.511,756,3.735,757,2.777,758,2.59,759,2.295,760,3.317,761,2.59,762,1.975,763,1.868,764,2.295]],["t/1157",[0,0.203,461,3.286,509,2.486,515,3.135,516,2.924,602,3.113,620,2.768,621,4.012,734,3.354,765,4.529,766,4.529,767,3.835]],["t/1159",[0,0.202]],["t/1161",[0,0.203,31,2.091,454,1.792,492,3.187,518,2.629,534,2.693,535,3.135,536,2.055,745,4.697]],["t/1164",[454,3.182,471,5.167,679,4.041,720,3.994,735,5.809,768,7.528,769,6.821]],["t/1167",[0,0.203,30,1.992,272,1.033,296,1.5,370,2.331,403,0.632,416,1.045,422,1.5,446,2.272,454,2.749,456,1.096,460,2.272,471,1.17,493,1.24,494,1.537,509,1.969,517,1.537,518,2.702,540,1.779,645,1.186,669,1.154,699,1.758,720,2.702,757,1.404,762,1.625,763,1.537,764,1.888,770,2.316,771,3.588,772,2.657,773,3.038,774,1.326,775,2.131,776,2.131,777,1.888,778,1.992,779,2.131,780,1.625,781,1.736,782,1.888]],["t/1169",[0,0.203,534,2.785,535,3.242,536,2.125]],["t/1172",[237,6.787,423,3.785,454,2.817,471,4.574,486,4.639]],["t/1175",[0,0.203,98,1.207,237,2.028,272,1.978,347,0.918,370,2.603,403,1.538,416,1.22,446,2.586,454,2.651,486,3.34,492,2.453,499,1.699,500,2.028,501,1.959,502,1.898,503,1.898,504,1.711,513,1.28,514,1.64,643,1.367,681,1.577,699,1.22,763,1.796,770,1.607,783,3.616,784,1.549,785,2.206,786,2.206]],["t/1177",[0,0.195,69,3.046,272,3.777,454,2.634,486,4.338,600,3.735]],["t/1179",[0,0.203,534,2.579,535,3.003,536,1.968]],["t/1182",[0,0.183,7,3.32,398,4.941,411,3.479,413,3.76,414,2.464,417,3.08,423,3.112,454,3.29,461,3.479,499,2.85,519,4.685,693,4.511,722,4.511,787,4.606,788,6.068,789,6.851,790,6.403,791,7.979,792,6.851,793,6.068]],["t/1185",[0,0.203,69,0.88,272,1.82,397,1.079,410,2.153,454,2.545,456,1.157,492,2.257,513,1.157,514,2.473,605,1.253,681,1.426,763,1.624,770,1.453,785,1.994,786,1.994,787,1.514,794,2.954,795,2.251,796,1.906]],["t/1187",[0,0.203,69,1.346,85,1.146,98,1.668,403,1.021,454,1.785,519,1.89,600,1.65]],["t/1189",[0,0.202,410,4.607,454,2.716,542,4.493,722,4.102,787,5.983,797,4.282]],["t/1191",[0,0.204,534,1.615,535,1.881,536,1.233]],["t/1194",[272,3.839,423,3.598,454,3.151,720,4.622,722,5.217,787,5.327,798,8.258,799,5.217]],["t/1197",[0,0.204,69,1.412,403,0.453,410,1.544,454,1.677,499,1.121,605,0.851,653,0.934,681,0.968,720,2.461,760,2.119,770,0.987,794,1.202,796,1.295,798,1.354,799,1.774,800,1.245,801,2.194,802,1.202,803,1.295]],["t/1199",[0,0.202,69,2.586,499,2.752,720,3.28]],["t/1201",[0,0.198,410,5.004,454,2.951,722,4.678,787,6.356,802,5.587,804,7.104,805,7.104]],["t/1203",[0,0.203,534,1.913,535,2.227,536,1.46]],["t/1205",[454,2.841,525,6.613,720,4.168,806,7.857]],["t/1207",[0,0.127,85,2.313,296,4.889,307,4.109,318,4.127,388,4.045,410,3.983,417,3.124,423,3.157,454,3.307,492,4.176,604,3.983,619,5.66,720,4.641,787,4.673,799,4.576,800,5.66,801,5.66,803,5.885,807,8.613,808,6.495]],["t/1210",[0,0.194,400,5.445,417,3.394,420,5.591,429,6.393,533,3.262,784,4.695,799,4.971,802,5.938,809,7.056]],["t/1212",[0,0.203]],["t/1215",[0,0.202]],["t/1217",[0,0.203,69,2.19,70,2.757,75,3.368,272,1.804,298,2.838,347,1.372,361,3.48,388,2.167,403,1.661,423,1.691,454,2.277,492,2.237,499,2.332,534,1.89,557,3.032,600,1.784,643,2.043,720,3.341,735,2.685,763,2.685,801,5.488,810,3.298,811,2.559,812,3.723,813,4.745,814,2.358,815,3.298,816,3.723]],["t/1219",[0,0.203,272,2.338,720,2.392,780,3.677,800,3.929]],["t/1221",[0,0.203,85,1.718,347,2.613,403,1.53,419,3.331,600,2.473,817,5.161,818,5.161]],["t/1223",[0,0.199,272,3.574,446,4.672,511,3.745,784,4.587,799,4.857]],["t/1225",[0,0.203,534,1.92,535,2.236,536,1.465]],["t/1227",[0,0.164,98,4.349,449,4.137,473,3.729,511,3.774,591,6.947,593,6.294,594,4.708,640,6.053,664,5.893,819,7.433,820,7.433,821,5.846,822,7.433,823,4.998]],["t/1229",[0,0.19,7,2.032,17,2.882,31,2.413,52,3.146,69,1.639,70,3.106,71,3.678,77,2.761,174,3.551,222,3.299,240,3.919,319,2.27,375,7.186,388,2.441,403,1.243,410,3.508,414,1.509,450,1.945,463,3.877,464,2.82,465,2.761,473,3.071,485,4.86,486,4.911,499,3.007,536,1.625,541,5.422,542,3.024,566,4.86,603,2.697,626,3.197,629,3.024,644,2.882,645,3.407,653,2.563,657,5.233,664,5.165,682,2.82,684,3.197,730,2.129,737,2.882,824,4.207,825,3.715,826,3.415,827,3.415,828,3.715,829,3.715,830,2.608,831,3.197,832,4.194,833,2.95,834,4.194,835,4.194,836,3.415,837,4.194,838,3.919,839,4.194,840,3.715,841,4.194,842,3.415,843,3.415,844,4.194,845,3.919,846,4.194,847,6.121]],["t/1231",[0,0.193,31,1.902,71,2.899,85,1.606,98,3.279,263,3.001,319,2.612,403,1.43,430,2.543,433,3.795,450,3.138,452,3.114,483,2.765,504,3.316,531,3.316,536,1.87,548,3.177,550,3.795,566,5.696,569,5.994,575,2.364,590,4.174,600,2.312,643,3.713,663,4.273,664,5.452,683,4.135,684,5.158,737,3.316,738,3.677,824,3.316,848,4.273,849,4.509,850,6.364,851,4.824,852,5.51,853,4.824,854,5.994,855,4.824,856,4.824,857,4.824,858,6.766,859,4.824,860,4.824,861,3.795,862,4.824,863,3.929,864,4.273,865,4.273,866,3.244]],["t/1234",[0,0.192,7,3.12,69,2.516,71,4.933,85,2.733,174,5.452,414,2.316,448,5.243,473,3.23,485,4.329,499,2.679,566,4.329,603,2.837,664,5.817,683,3.935,730,3.269,823,4.329,824,4.425,828,5.703,829,5.703,830,4.004,831,4.908,867,5.452,868,5.703,869,4.908]],["t/1236",[71,5.153,182,6.449,304,5.619,375,5.619,414,2.482,430,3.638,450,3.2,473,3.462,536,3.323,543,5.619,584,5.11,593,5.843,603,4.111,653,4.217,657,5.647,679,3.462,682,5.766,730,3.504,831,5.259,863,5.619,870,6.9,871,6.9,872,5.427]],["t/1239",[0,0.202,69,2.711,71,3.005,403,2.056,499,2.08,530,2.671,603,2.203,657,3.292,676,3.811,730,2.539,770,4.478,873,6.745,874,4.429,875,6.145,876,6.145]],["t/1241",[0,0.2,89,3.998,403,2.403,473,3.167,530,3.371,603,2.781,681,3.998,770,4.074,873,6.458,877,6.864,878,7.18]],["t/1244",[0,0.201,69,2.181,77,3.674,403,2.216,423,2.534,486,3.106,530,3.993,575,2.735,603,2.459,614,4.942,643,3.062,644,3.835,681,3.534,716,3.47,770,4.826,830,3.47,873,6.495,875,4.942,876,4.942]],["t/1246",[0,0.202,403,1.683,492,3.412,499,2.363,530,4.04,657,3.739,676,4.328,873,5.455,879,5.678]],["t/1249",[0,0.203]],["t/1251",[0,0.203,149,4.103,717,4.524,781,4.248,880,3.976,881,5.217]],["t/1253",[0,0.181,7,4.682,417,3.016,482,4.92,519,5.055,533,2.898,666,5.927,667,5.113,668,5.941,685,6.422,699,3.287,784,4.172,873,4.837,877,5.68,878,5.941,882,6.707,883,5.113,884,5.113,885,6.269,886,6.707]],["t/1255",[184,5.01,347,2.969,413,5.167,417,3.621,430,4.247,673,6.14,883,6.14,884,6.14]],["t/1257",[0,0.203,7,1.628,69,2.472,347,1.238,370,1.685,413,3.902,417,2.33,430,1.771,449,1.87,499,2.156,519,4.794,575,1.646,632,2.309,644,2.309,657,3.412,702,2.168,703,2.168,730,1.706,814,2.128,874,2.976,883,4.821,887,3.359,888,2.488]],["t/1259",[0,0.203,413,2.976,519,2.976,558,3.373,683,3.314]],["t/1261",[0,0.202,184,3.335,347,1.976,370,2.69,417,2.411,425,4.218,430,2.827,511,2.723,519,5.084,575,2.628,645,4.051,690,3.605,696,5.39,734,3.971,889,5.362]],["t/1263",[0,0.203,7,2.032,69,2.392,184,2.608,318,2.009,347,1.546,430,2.211,519,2.302,536,1.625,575,2.055,603,1.848,632,2.882,681,2.656,682,2.82,720,2.079,730,2.129,748,3.715,749,2.95,884,4.665,888,3.106,890,3.715,891,4.194,892,3.919,893,4.194,894,3.551]],["t/1265",[0,0.201,31,2.595,81,2.445,184,2.885,318,2.222,403,1.375,411,2.355,413,2.546,417,2.959,430,2.445,511,3.884,513,2.384,519,5.154,605,2.582,683,2.835,690,5.91,730,3.342,749,3.263,883,5.016,884,3.536,895,3.928,896,4.335,897,4.109,898,4.638,899,4.638,900,3.928]],["t/1267",[0,0.169,69,2.359,85,2.009,88,5.64,89,3.822,98,3.815,113,5.11,213,5.64,403,1.789,414,2.832,424,5.539,430,3.181,449,3.359,450,2.799,453,4.914,473,3.028,482,3.223,499,2.511,530,3.223,536,3.051,603,2.659,629,5.678,653,3.688,657,5.185,664,3.688,682,4.057,683,3.688,685,4.6,721,4.469,732,4.148,738,4.6,740,5.345,823,4.057,824,4.148,830,3.753,865,5.345,901,6.034,902,4.352,903,5.345,904,3.895]],["t/1270",[0,0.202,7,1.407,31,1.145,52,1.492,98,1.407,110,3.635,190,2.213,307,1.716,319,1.572,347,1.07,362,3.635,397,2.214,403,1.37,405,1.319,414,2.361,416,1.423,423,1.319,458,1.995,471,1.593,483,1.664,498,1.912,499,1.208,506,1.806,513,1.492,514,1.912,515,1.407,516,1.874,518,2.291,552,3.351,559,1.952,577,2.713,590,1.551,609,3.647,620,2.825,645,1.616,653,1.774,679,2.319,680,1.616,717,2.927,724,2.364,728,4.152,729,3.957,730,1.474,753,2.536,756,2.572,757,1.912,814,1.839,880,2.213,904,1.874,905,2.903,906,3.914,907,4.094,908,2.283,909,2.903,910,2.903,911,2.213,912,2.364,913,2.572,914,2.572,915,2.572,916,1.774,917,2.458,918,2.903,919,2.364,920,2.903,921,2.903]],["t/1273",[0,0.203,75,3.064,81,1.735,318,1.577,413,4.417,416,2.499,432,2.508,480,2.508,505,3.358,515,1.594,604,2.922,720,1.631,730,4.087,774,3.171,780,4.759,814,3.954,831,2.508,867,2.786,908,4.011,912,2.679,922,3.075,923,3.29,924,5.099,925,5.099,926,2.679,927,3.29,928,3.075,929,4.152,930,3.29]],["t/1275",[0,0.203,47,2.088,54,2.724,77,1.748,263,1.651,405,1.206,414,0.955,416,1.301,423,1.206,465,1.748,513,1.365,515,1.286,518,1.316,552,2.503,559,1.785,568,2.088,583,3.815,600,1.272,609,1.682,620,1.623,642,3.503,666,3.815,679,2.158,680,1.478,689,2.024,690,1.785,699,1.301,717,2.724,728,3.102,729,4.285,730,3.166,732,1.825,753,1.457,754,1.825,780,2.024,888,1.966,904,1.714,907,3.81,911,2.024,919,2.162,931,2.481,932,2.655,933,2.655,934,2.162,935,2.248,936,5.222,937,2.162,938,3.642,939,2.024]],["t/1277",[0,0.203,81,1.116,89,1.341,414,0.762,416,1.038,423,2.1,450,0.982,513,1.088,516,2.985,530,1.131,552,1.232,559,1.424,570,1.979,583,1.49,590,1.131,609,3.437,617,1.876,618,1.793,620,2.826,622,1.665,669,2.503,679,1.79,680,1.986,683,1.294,689,1.614,690,1.424,692,3.316,708,1.665,717,1.341,728,1.527,729,1.455,730,1.075,731,2.219,732,1.455,753,1.958,754,2.452,904,1.367,911,1.614,916,1.294,934,1.724,940,2.117,941,1.979,942,1.455,943,2.117,944,1.979,945,2.117,946,1.793,947,5.129,948,2.117,949,2.117,950,1.876,951,2.117,952,1.979,953,2.117,954,1.979,955,2.905]],["t/1279",[0,0.203,7,0.435,31,0.656,52,0.461,54,0.568,57,0.795,69,1.332,71,0.539,89,0.568,91,0.795,98,0.435,170,0.76,196,0.665,204,0.684,263,1.445,319,1.258,347,0.331,362,0.706,369,0.706,370,0.45,404,4.247,405,1.317,411,0.456,413,0.492,414,0.598,416,0.815,419,1.073,423,2.245,424,1.635,432,0.684,449,0.499,462,0.631,465,1.095,468,1.408,471,0.913,473,1.455,482,0.888,486,0.499,495,0.684,499,1.604,505,0.591,513,0.461,515,0.806,517,0.647,518,1.438,530,0.888,533,1.253,540,0.445,548,0.591,550,0.706,552,1.352,559,0.603,566,0.603,578,0.76,600,0.797,609,1.053,619,0.731,620,0.548,624,0.795,626,0.684,639,0.795,642,0.731,644,1.143,645,1.293,646,0.684,651,1.473,652,1.473,669,0.486,673,0.684,676,1.267,679,1.166,680,0.499,683,0.548,692,1.016,717,2.158,720,0.445,730,0.456,731,1.034,732,0.617,751,2.456,753,0.492,754,0.617,788,0.795,797,1.143,821,0.706,850,2.774,872,0.706,902,0.647,911,0.684,915,0.795,916,1.016,919,1.892,934,0.731,935,0.76,942,0.617,946,0.76,956,0.76,957,0.795,958,0.795,959,0.897,960,0.897,961,1.663,962,0.897,963,0.897,964,0.897,965,1.663,966,0.897,967,0.706,968,0.897,969,0.897,970,1.663,971,2.058,972,0.897,973,0.897,974,2.9,975,0.897,976,0.897,977,0.897,978,2.324,979,0.897]],["t/1282",[0,0.192,31,3.519,85,2.687,98,3.038,222,4.932,439,5.554,448,5.106,463,5.112,464,4.216,465,4.129,485,5.427,566,5.427,629,4.522,664,5.76,823,4.216,824,5.548,825,5.554,826,5.106,827,5.106,868,5.554,869,4.78,980,5.86,981,4.644]],["t/1285",[13,4.964,31,2.488,52,4.603,85,2.101,306,4.552,307,3.732,347,2.326,388,3.673,450,3.759,452,4.074,463,3.998,464,4.244,477,4.811,480,4.811,499,2.626,532,3.564,548,5.337,549,5.899,562,4.074,603,2.781,636,5.14,660,6.601,679,3.167,680,3.513,797,5.571,902,4.552,950,5.591,982,5.899,983,6.311,984,5.899,985,7.576,986,6.311,987,7.18,988,6.311]],["t/1287",[13,5.985,31,3,364,5.23,450,4.222,452,4.912,536,2.949,594,4.82,603,3.353,705,6.74,736,7.413,797,5.23,987,6.74,989,7.609,990,7.609]],["t/1290",[0,0.202,85,1.544,263,4.757,307,2.742,426,4.109,450,2.151,457,5.143,463,2.938,471,2.546,504,3.188,511,2.355,515,3.189,518,2.3,562,2.994,667,5.016,679,2.327,680,2.582,716,2.885,991,4.638,992,4.109,993,4.638,994,4.109,995,4.335,996,5.037,997,6.776,998,4.638,999,4.109,1000,4.335]],["t/1292",[0,0.202,319,2.241,388,2.409,414,1.489,416,2.029,418,3.667,435,3.371,454,1.399,457,4.824,463,5.002,465,2.726,486,2.304,496,3.155,518,2.052,527,3.505,646,3.155,660,5.842,667,3.155,699,2.029,784,2.575,827,3.371,842,3.371,843,3.371,861,3.256,996,3.992,997,5.37,999,3.667,1001,4.139,1002,4.139,1003,4.139,1004,4.139]],["t/1295",[0,0.201,499,3,1005,6.387]],["t/1297",[0,0.202]],["t/1299",[0,0.2,307,3.48,463,3.729,464,3.958,515,2.852,558,3.661,666,4.142,699,3.797,707,3.661,830,4.818,842,4.794,843,4.794,902,4.246,992,6.862,994,5.215,1006,5.887,1007,5.887,1008,4.246,1009,5.215,1010,5.502]],["t/1302",[0,0.131,31,3.751,81,3.801,306,5.2,318,4.559,450,4.086,499,3,562,4.654,603,3.177,679,4.42,680,4.904,736,5.872,783,6.387,1011,7.21,1012,7.21,1013,7.21]],["t/1304",[47,6.033,81,4.044,129,7.168,318,3.675,450,3.557,531,5.272,562,4.951,587,7.168,769,6.495,854,6.794,864,6.794,1014,7.745,1015,7.67,1016,7.67]],["t/1306",[0,0.18,31,3.251,65,5.489,69,3.222,85,2.158,98,3.141,414,2.332,473,3.252,486,3.608,499,3.43,536,2.512,590,3.462,592,5.489,594,4.105,623,5.278,646,4.941,679,4.136,680,4.589,683,3.961,684,4.941,738,4.941,836,5.278,848,5.741,872,5.098,981,4.801,1005,5.741,1017,6.481,1018,6.481,1019,6.481]],["t/1309",[0,0.2,47,3.059,347,2.824,403,1.716,407,3.423,411,1.975,414,2.756,427,3.445,519,3.177,534,3.512,562,2.51,600,2.774,605,3.222,716,5.095,730,3.89,747,3.634,753,3.177,797,3.979,799,2.561,814,3.667,826,3.167,900,4.902,952,3.634,1020,5.789,1021,5.128,1022,4.274,1023,7.161,1024,6.916,1025,4.274,1026,9.004,1027,4.274,1028,4.274,1029,4.274,1030,4.274,1031,4.274,1032,4.274,1033,3.293,1034,4.274,1035,3.889,1036,7.602,1037,4.274,1038,3.167,1039,4.274]],["t/1312",[0,0.18,14,4.312,456,4.039,462,5.528,584,5.82,600,3.765,1040,5.667,1041,7.344,1042,7.858,1043,8.637]],["t/1314",[0,0.182,31,3.176,397,3.86,511,4.09,679,4.041,1041,7.528,1044,8.055]],["t/1316",[0,0.202,400,4.675,413,3.557,419,4.184,749,4.56,1045,6.481,1046,7.125,1047,5.741]],["t/1318",[0,0.202]],["t/1321",[0,0.202]],["t/1323",[0,0.203,368,3.995,404,2.827,413,2.787,530,2.713,584,3.762,604,2.911,755,3.344,1048,4.301]],["t/1325",[0,0.203]],["t/1327",[0,0.199]],["t/1329",[0,0.202]],["t/1331",[0,0.203,304,2.963,422,2.56,518,1.804,590,1.944,1049,3.639]],["t/1333",[0,0.203,404,4.003,411,2.111,439,3.683,511,2.111,513,3.126,620,2.541,867,3.521,885,3.886,939,3.169]],["t/1335",[0,0.192,85,1.901,181,5.339,347,2.799,397,4.356,404,4.227,405,2.595,413,4.99,419,4.902,425,4.493,456,2.936,511,2.9,532,3.226,536,2.214,565,4.563,575,2.8,604,3.274,692,3.491,699,2.8,731,3.553,749,4.019,755,5.617,942,3.926,1040,4.12,1041,7.097,1048,4.837,1050,6.279,1051,4.493,1052,4.652,1053,5.712,1054,4.231,1055,6.279,1056,6.279]],["t/1338",[0,0.193,14,3.957,54,4.567,196,5.34,403,2.137,565,4.333,583,5.072,1040,5.2,1057,6.716,1058,5.671,1059,7.925,1060,7.21,1061,7.21,1062,7.21,1063,7.925]],["t/1340",[0,0.196,473,3.848,575,3.759,1064,8.431,1065,4.464,1066,6.246,1067,6.033]],["t/1343",[0,0.202,52,2.584,54,3.183,81,2.65,347,1.852,588,4.093,638,4.256,709,4.452,772,3.722,774,3.126,908,3.953,996,5.26,1057,5.307,1058,6.283,1068,3.953,1069,5.026,1070,4.452,1071,4.697,1072,5.525,1073,4.093,1074,4.697,1075,5.026]],["t/1345",[0,0.202,75,3.334,416,3.65,427,6.597,437,4.914,774,3.45,784,3.45,814,3.514,908,4.363,1008,5.371,1057,6.408,1058,5.858,1076,5.547]],["t/1347",[0,0.2,603,3.062,643,3.814,653,4.247,677,6.156,784,4.322,996,4.576,1057,5.297,1058,5.466]],["t/1349",[0,0.202,75,4.365,245,5.757,347,1.559,403,1.254,416,2.073,503,4.695,575,3.019,638,6.151,722,2.786,774,2.631,814,2.68,866,2.844,996,2.786,1057,4.695,1058,6.276,1074,3.954,1077,4.23,1078,4.65,1079,4.23,1080,4.23,1081,4.65,1082,5.456]],["t/1351",[0,0.118,53,4.941,54,4.105,234,4.675,318,3.106,427,5.741,457,5.543,484,5.741,498,4.268,532,3.66,583,5.8,722,4.268,773,5.489,784,4.031,799,4.268,808,6.058,814,4.105,908,5.098,1008,4.675,1057,7.273,1058,6.485,1060,6.481,1061,6.481,1062,6.481,1082,5.741,1083,6.481,1084,7.125,1085,7.125,1086,7.125,1087,7.125,1088,7.125,1089,7.125]],["t/1353",[0,0.2,403,1.589,533,2.317,575,2.628,638,6.163,700,4.367,784,3.335,799,4.793,814,3.396,929,4.367,996,3.531,1008,3.867,1021,4.75,1057,6.754,1058,6.97,1069,5.362,1074,5.011,1075,5.362,1077,5.362,1079,5.362,1090,8,1091,5.894,1092,5.362,1093,5.362]],["t/1355",[0,0.167,69,3.022,85,2.574,307,4.571,414,2.781,462,5.439,530,4.13,640,6.296,728,5.576,729,5.314,823,5.198,861,6.081,1094,8.499]],["t/1357",[0,0.177,14,4.176,54,4.82,347,2.804,467,5.985,476,6.74,483,4.361,530,4.064,586,7.609,590,4.064,699,3.729,823,5.116,861,5.985,1095,7.112]],["t/1359",[0,0.16,52,4.508,414,2.574,487,6.689,536,2.773,567,4.812,590,4.685,699,3.507,737,4.919,852,5.828,869,5.455,1066,5.828,1095,8.197,1096,6.06,1097,7.867,1098,7.156,1099,7.867,1100,5.828,1101,7.867,1102,7.867]],["t/1361",[0,0.201,31,3.185,414,1.846,493,4.111,511,3.587,513,3.631,515,2.487,560,3.611,616,4.798,620,4.317,728,3.702,729,4.855,754,4.855,912,4.18,928,4.798,938,4.347,939,5.385,1054,5.232,1103,7.765,1104,4.798]],["t/1363",[0,0.202,74,3.059,75,2.337,81,2.05,298,2.964,318,1.863,403,1.153,405,2.63,493,2.263,505,2.561,513,2.976,532,2.196,536,1.507,558,4.302,563,3.167,583,2.736,584,2.88,590,2.077,692,2.377,693,2.561,699,2.837,707,2.419,717,2.463,731,2.419,754,3.979,762,5.272,813,3.293,912,4.715,916,2.377,941,3.634,967,3.059,1068,3.059,1105,3.634,1106,4.274,1107,3.634,1108,4.274,1109,3.445,1110,3.889,1111,4.274,1112,4.274,1113,3.293]],["t/1365",[0,0.139,74,5.985,506,4.733,518,3.773,558,4.733,567,5.116,590,4.064,708,5.985,1054,7.213,1096,6.444,1114,8.364,1115,8.364,1116,8.364,1117,8.364]],["t/1367",[0,0.202,75,2.509,149,4.799,196,3.092,272,2.956,318,2.923,388,2.43,405,2.771,411,3.661,513,2.146,531,2.87,533,1.804,558,2.597,560,2.938,572,3.536,575,2.046,600,2.001,620,2.552,669,3.303,729,2.87,754,2.87,852,4.969,880,3.183,904,3.939,906,3.536,938,3.536,939,6.045,1054,4.519,1104,3.902,1118,6.707,1119,4.59,1120,7.412]],["t/1369",[0,0.202,36,3.817,318,3.09,347,1.661,403,1.336,452,2.91,458,4.432,506,2.804,533,1.948,558,4.011,560,3.171,564,4.213,575,2.209,583,4.537,584,3.339,603,2.842,699,2.209,724,5.252,725,5.072,810,3.993,897,3.993,1096,3.817,1120,6.027,1121,4.955,1122,4.213]],["t/1371",[0,0.202,149,3.313,405,1.913,411,3.118,467,3.313,509,3.37,532,2.378,533,1.82,558,2.62,560,2.963,565,2.531,620,5.401,666,2.963,725,5.699,904,2.719,942,2.895,967,4.83,1123,5.739,1124,4.63,1125,4.63,1126,4.63]],["t/1373",[0,0.202,85,1.718,393,5.161,405,3.679,507,3.47,533,2.23,558,3.21,560,3.631,568,5.577,572,6.004,916,4.95,942,3.547,1123,4.823,1127,7.09,1128,5.673]],["t/1375",[0,0.184,14,4.176,157,7.112,347,2.804,403,2.255,501,5.985,531,5.23,811,5.23,916,5.563,1014,6.444,1129,7.112,1130,7.609]],["t/1377",[0,0.202,54,3.474,85,1.826,403,1.626,558,3.411,560,3.858,564,5.126,568,4.314,632,3.769,1120,5.126,1130,5.484,1131,8.123]],["t/1379",[0,0.18,7,3.807,495,5.989,558,4.887,565,4.722,692,4.802,731,4.887,942,5.401,947,6.654,1054,5.82]],["t/1381",[0,0.202,81,2.735,560,3.65,620,3.171,666,3.65,692,3.171,729,4.891,772,3.843,904,3.349,936,6.191,938,6.026,947,4.394,1054,3.843,1110,5.188,1132,5.188]],["t/1383",[0,0.192,36,5.118,52,3.107,54,3.828,74,3.242,75,5.043,347,2.227,403,2.336,405,1.872,424,2.9,458,4.154,483,2.362,498,2.714,506,4.902,507,2.771,509,2.262,530,2.202,532,2.328,537,3.49,558,4.902,565,4.3,567,2.771,572,3.49,583,2.9,589,3.357,590,3.228,620,3.694,628,3.242,666,2.9,677,3.651,692,4.374,699,3.507,724,4.922,725,3.242,731,4.902,735,2.973,762,4.607,773,3.49,810,5.354,811,2.833,823,2.771,849,3.852,861,3.242,869,3.142,880,3.142,916,2.519,947,3.49,967,3.242,1000,3.852,1051,3.242,1054,3.053,1095,3.852,1098,4.122,1113,5.118,1129,3.852,1133,4.531,1134,4.531,1135,5.649,1136,4.122,1137,4.531,1138,4.122,1139,4.122,1140,4.122,1141,4.531,1142,4.531,1143,4.531]],["t/1385",[0,0.162,414,2.633,446,4.636,447,5.961,448,5.961,449,4.074,450,4.124,451,7.32,452,4.725,453,5.961,454,2.474,455,7.32,456,3.763,457,4.922,458,5.031,459,3.859,460,4.636,461,3.717,462,5.15]],["t/1388",[0,0.106,7,2.818,17,5.282,31,2.293,52,2.989,62,5.152,190,4.433,234,4.194,306,4.194,407,3.438,410,3.333,450,2.697,454,2.597,457,5.787,458,5.916,461,4.649,463,3.684,464,3.91,465,3.83,466,5.152,467,4.574,468,4.925,469,4.925,470,7.182,471,3.192,472,5.435,473,2.918,474,4.433,475,5.435,476,5.152,477,4.433,478,5.152,479,5.435,480,4.433,481,5.816,482,3.106,483,3.333,484,5.152,485,3.91,486,3.237,487,5.435,488,5.435,489,5.816,490,4.307,491,5.816]],["t/1390",[0,0.192,403,2.075,454,2.924,456,3.598,457,4.707,458,4.811,461,3.555,465,4.61,471,3.842,483,4.959,485,4.707,492,4.207,493,4.074,494,5.049,495,5.336,496,5.336,497,4.811,498,4.61]],["t/1393",[0,0.203,36,2.273,98,1.301,370,2.177,397,1.286,403,0.796,411,2.204,446,3.46,449,1.494,454,2.622,460,2.749,461,1.363,492,2.608,499,1.117,500,2.186,501,2.112,502,2.046,503,2.046,504,1.845,505,1.768,506,1.67,507,1.805,508,2.186,509,3.444,510,2.378,511,1.363,512,2.509,513,1.38,514,1.768,515,1.301,516,1.733,517,1.936,518,1.331]],["t/1395",[0,0.203,454,1.32,461,1.983,509,2.143,515,1.892,516,2.52,519,2.143]],["t/1397",[0,0.203,411,3.472,446,3.102,454,2.882,492,2.943,509,2.688,511,2.487,513,3.515,514,3.225,517,3.532,520,4.898]],["t/1399",[0,0.2]],["t/1401",[0,0.189,52,3.547,69,2.697,272,3.343,286,5.11,403,2.045,423,3.134,447,5.619,453,5.619,454,2.898,459,3.638,483,3.955,494,4.976,497,4.742,509,3.787,521,5.259,522,6.9,523,5.619,524,6.112,525,5.427,526,6.9,527,5.843]],["t/1403",[0,0.19,7,3.273,85,2.248,286,5.003,296,4.752,388,3.931,446,4.278,449,3.76,454,2.283,456,3.472,471,3.707,483,4.85,495,5.149,496,5.149,528,6.754,529,6.754,530,3.608,531,4.643,532,4.778,533,2.919,534,3.43,535,3.993,536,2.617]],["t/1405",[0,0.152,85,2.187,98,3.184,163,6.141,184,4.086,201,7.042,414,2.363,449,3.657,473,3.296,482,4.442,497,4.516,536,2.546,540,3.258,548,4.326,594,4.161,622,5.168,623,5.35,624,5.82,625,5.564,626,5.008,627,5.82,628,5.168,629,4.738,630,5.82,631,5.82,632,4.516,633,6.57,634,6.57,635,6.57,636,5.35,637,5.82,638,5.564,639,5.82]],["t/1407",[0,0.172,69,3.175,98,3.936,536,3.148,543,6.615,640,6.615,641,8.123]],["t/1409",[0,0.201,69,2.993,70,1.736,75,1.409,89,3.664,98,1.136,190,1.787,263,3.988,296,1.649,347,1.432,370,1.176,388,1.364,403,1.151,410,1.344,411,1.19,414,1.397,435,1.909,449,1.305,450,1.087,454,0.792,462,2.733,463,1.485,464,1.576,473,1.176,477,1.787,485,1.576,486,3.847,490,1.736,499,3.045,504,2.67,515,2.41,518,2.868,530,1.252,533,1.679,536,0.908,540,1.162,562,2.508,566,1.576,575,1.149,600,1.123,603,1.712,622,1.844,642,1.909,643,2.132,644,4.751,645,2.768,646,3.791,647,2.077,648,1.985,649,1.909,650,5.407,651,2.077,652,2.077,653,1.433,654,2.077,655,2.344,656,2.344,657,1.544,658,2.344,659,1.485,660,4.05,661,2.344,662,2.191,663,2.077,664,1.433,665,2.344,666,5.589,667,4.409,668,5.124,669,1.269,670,6.412,671,3.631,672,3.885,673,1.787,674,2.344,675,2.344,676,1.787,677,2.077,678,2.191,679,1.176,680,1.305]],["t/1411",[0,0.189,89,4.19,141,5.602,318,3.17,414,2.38,424,4.654,450,3.874,473,3.319,519,3.631,533,2.859,536,2.564,540,3.28,542,4.771,603,3.68,632,4.547,681,5.29,682,4.448,683,4.043,684,5.042,685,5.042,686,6.615,687,6.615,688,5.86,689,5.042,690,4.448]],["t/1413",[0,0.189,274,6.79,319,3.933,414,2.613,533,3.139,540,3.602,542,5.239,552,4.228,659,4.601,691,7.264,692,4.44,693,4.784,694,5.38,695,7.264,696,5.38,697,5.916,698,7.264]],["t/1415",[0,0.182,403,2.186,423,3.35,462,5.189,497,5.07,533,3.187,540,3.657,590,3.94,699,3.615,700,6.007,701,6.246,702,4.761,703,4.761,704,7.376,705,6.534,706,7.376,707,4.587]],["t/1417",[0,0.197,53,5.077,85,2.217,307,3.938,414,2.396,437,5.9,473,3.342,483,3.818,502,5.077,506,4.143,533,2.878,536,2.581,540,3.303,631,5.9,673,5.077,689,5.077,690,4.479,708,5.239,709,5.9,710,6.661]],["t/1419",[0,0.193,7,3.296,85,2.264,184,4.231,397,3.259,430,3.586,452,4.391,519,3.733,533,2.939,540,3.373,654,6.025,702,4.391,703,4.391,711,6.802,712,6.358,713,6.802,714,8.499,715,5.35,716,4.231,717,4.309,718,6.802]],["t/1421",[0,0.202,85,2.06,430,3.263,483,3.548,518,3.069,533,2.675,540,3.069,692,4.892,719,6.19]],["t/1423",[0,0.204,69,0.218,72,0.472,263,0.347,306,0.402,403,0.165,404,0.31,405,0.253,411,0.283,414,0.382,423,0.253,424,0.392,458,0.383,473,0.533,477,0.425,506,0.347,552,0.325,590,0.298,600,0.267,664,0.341,681,0.353,682,0.375,708,0.439,720,0.277,721,0.413,722,0.367,723,0.558,724,0.454,725,0.439,726,0.521,727,0.558,728,0.402,729,0.383,730,0.283,731,0.347,732,0.383,733,0.472,734,0.413,735,0.767]],["t/1425",[0,0.195,54,4.636,69,2.861,184,4.553,467,5.757,508,5.961,603,3.918,643,4.017,647,6.484,648,6.198,720,3.629,736,5.961]],["t/1427",[0,0.19,54,4.219,85,2.217,98,3.228,100,4.804,101,5.9,414,2.396,449,3.708,482,3.558,506,4.143,536,2.581,627,5.9,629,4.804,630,5.9,664,4.071,688,5.9,694,4.933,715,5.239,716,4.143,737,4.578,738,5.077,739,6.661,740,5.9,741,6.661,742,6.661,743,6.661,744,5.077]],["t/1429",[0,0.173,14,3.928,85,2.382,282,6.06,318,3.429,319,3.874,397,3.429,407,4.231,450,3.319,456,3.679,545,7.156,605,3.983,755,4.712,823,4.812,946,6.06,1033,6.06,1040,5.161,1065,4.165,1144,7.867,1145,7.867,1146,7.867,1147,7.156]],["t/1431",[0,0.201,17,2.35,52,1.757,74,2.689,81,2.769,215,3.419,252,2.895,304,2.784,307,2.021,319,2.843,397,1.638,403,1.896,407,2.021,416,2.574,417,1.537,471,1.876,540,1.695,572,2.895,575,1.676,604,1.959,605,1.903,690,2.299,693,4.211,730,1.736,753,3.938,757,2.251,772,2.532,774,2.126,781,4.277,813,2.895,830,2.126,902,2.466,914,3.028,967,5.03,996,2.251,1068,2.689,1092,3.419,1148,5.773,1149,7.03,1150,5.977,1151,3.758,1152,7.241,1153,4.652,1154,3.028,1155,3.028,1156,3.419,1157,3.758,1158,3.028,1159,3.758,1160,3.758,1161,3.758,1162,5.773,1163,3.758,1164,3.758,1165,3.758,1166,3.758,1167,5.773,1168,5.252,1169,3.758,1170,3.758,1171,3.758,1172,3.758]],["t/1433",[0,0.202,11,4.365,209,4.365,388,2.54,398,4.544,407,3.725,411,2.216,416,2.139,419,2.818,468,3.696,533,1.886,605,2.429,669,2.363,716,3.919,753,4.058,760,3.433,774,2.715,791,4.079,866,4.237,956,3.696,1038,3.555,1109,3.866,1155,3.866,1173,3.696,1174,8.947,1175,6.301,1176,4.798,1177,4.798,1178,4.079]],["t/1435",[0,0.204,398,2.333,485,2.175,604,1.854,605,1.801,744,2.466,1021,2.866]],["t/1438",[0,0.202]],["t/1440",[0,0.202,263,4.031,417,2.914,671,6.058,981,4.801,1009,5.741,1174,6.481]],["t/1442",[0,0.202,419,3.777,486,3.257,605,3.257,744,4.46,926,4.765,981,4.334,1073,6.283,1179,5.851]],["t/1444",[0,0.187,47,5.639,85,2.387,157,4.902,234,3.783,245,6.701,282,4.442,307,3.101,347,1.933,362,5.639,364,5.614,403,2.421,407,4.239,414,1.887,425,4.126,450,3.325,471,2.879,478,4.646,497,3.605,565,3.152,623,4.271,715,4.126,716,4.459,744,3.998,753,2.879,811,4.928,821,4.126,895,4.442,985,4.902,1024,5.245,1040,3.783,1073,4.271,1152,6.351,1180,5.766,1181,5.766,1182,5.766,1183,6.701,1184,4.821,1185,5.766,1186,5.766,1187,5.245,1188,5.766,1189,5.766,1190,5.766,1191,5.766,1192,3.998,1193,4.902,1194,5.766]],["t/1447",[0,0.189,53,5.893,69,3.022,416,3.789,454,2.613,600,3.705,604,4.431,605,4.303,606,7.226,607,7.226]],["t/1449",[0,0.18,14,3.557,31,3.251,252,5.489,319,3.509,347,2.389,388,3.772,414,2.966,419,4.184,461,4.186,493,4.798,505,5.97,515,3.141,604,3.715,605,3.608,608,6.481,609,5.222,610,6.481,611,8.244,612,6.481,613,6.481,614,5.741,615,6.481,616,6.058,617,5.741,618,5.489]],["t/1451",[0,0.202,272,4.123,370,2.445,386,4.317,397,2.335,416,3.851,454,1.647,460,3.087,461,2.474,505,3.209,509,3.74,604,2.793,609,3.087,619,5.549]],["t/1453",[0,0.203,69,1.746,272,3.104,416,2.189,454,1.509,461,3.253,499,1.858,509,2.451,515,2.164,516,2.883,604,2.56,620,2.73,621,3.956]],["t/1455",[0,0.202,534,3.205,535,3.732,536,2.446]],["t/1457",[0,0.164,98,3.602,272,3.602,423,3.376,454,3.033,461,4.557,493,5.611,515,4.349,595,7.433,596,7.433,597,6.294,598,7.433,599,7.433]],["t/1459",[454,2.841,461,4.269,493,4.893,515,4.074]],["t/1462",[0,0.202,272,3.736,370,2.361,397,2.255,454,2.832,460,4.212,461,3.376,469,3.985,493,3.87,509,4.232,515,3.222,516,3.038,518,3.297,600,3.186,601,4.169]],["t/1464",[0,0.202,69,3.168,272,3.928,499,2.626,600,3.024]],["t/1466",[0,0.201,454,2.315,493,3.987,509,3.76,515,4.137,602,4.709]],["t/1468",[0,0.201,534,3.607,535,4.2,536,2.753]],["t/1470",[0,0.195,534,3.895,535,4.535,536,2.972,603,4.459]],["t/1474",[454,3.182,471,5.167,679,4.041,720,3.994,735,5.809,768,7.528,769,6.821]],["t/1477",[0,0.203,30,1.992,272,1.033,296,1.5,370,2.331,403,0.632,416,1.045,422,1.5,446,2.272,454,2.749,456,1.096,460,2.272,471,1.17,493,1.24,494,1.537,509,1.969,517,1.537,518,2.702,540,1.779,645,1.186,669,1.154,699,1.758,720,2.702,757,1.404,762,1.625,763,1.537,764,1.888,770,2.316,771,3.588,772,2.657,773,3.038,774,1.326,775,2.131,776,2.131,777,1.888,778,1.992,779,2.131,780,1.625,781,1.736,782,1.888]],["t/1479",[0,0.203,534,2.785,535,3.242,536,2.125]],["t/1482",[237,6.787,423,3.785,454,2.817,471,4.574,486,4.639]],["t/1485",[0,0.203,98,1.207,237,2.028,272,1.978,347,0.918,370,2.603,403,1.538,416,1.22,446,2.586,454,2.651,486,3.34,492,2.453,499,1.699,500,2.028,501,1.959,502,1.898,503,1.898,504,1.711,513,1.28,514,1.64,643,1.367,681,1.577,699,1.22,763,1.796,770,1.607,783,3.616,784,1.549,785,2.206,786,2.206]],["t/1487",[0,0.195,69,3.046,272,3.777,454,2.634,486,4.338,600,3.735]],["t/1489",[0,0.203,534,2.579,535,3.003,536,1.968]],["t/1492",[318,3.33,347,2.561,414,2.5,423,3.157,454,2.911,460,4.402,461,3.529,493,4.045,497,4.777,590,3.712,637,6.156,679,3.487,692,5.264,693,4.576,699,3.406,720,3.446,745,6.156,746,6.95,747,6.495,748,6.156,749,4.889,750,6.156,751,5.885,752,6.95,753,3.814,754,4.777]],["t/1495",[0,0.203,89,1.641,98,2.043,110,2.038,272,1.255,296,1.822,370,3.083,397,1.241,403,1.581,416,2.067,422,1.822,446,1.641,454,2.583,460,3.377,461,2.141,493,1.508,494,3.041,499,1.078,500,2.11,501,2.038,502,1.975,503,1.975,504,1.781,505,1.706,509,3.712,510,2.295,517,1.868,518,3.047,540,2.091,548,1.706,550,2.038,588,2.11,601,2.295,603,1.142,605,1.442,609,1.641,669,1.402,692,1.583,693,1.706,700,3.434,750,2.295,755,3.511,756,3.735,757,2.777,758,2.59,759,2.295,760,3.317,761,2.59,762,1.975,763,1.868,764,2.295]],["t/1497",[0,0.203,461,3.286,509,2.486,515,3.135,516,2.924,602,3.113,620,2.768,621,4.012,734,3.354,765,4.529,766,4.529,767,3.835]],["t/1499",[0,0.202]],["t/1501",[0,0.203,31,2.091,454,1.792,492,3.187,518,2.629,534,2.693,535,3.135,536,2.055,745,4.697]],["t/1504",[0,0.183,7,3.32,398,4.941,411,3.479,413,3.76,414,2.464,417,3.08,423,3.112,454,3.29,461,3.479,499,2.85,519,4.685,693,4.511,722,4.511,787,4.606,788,6.068,789,6.851,790,6.403,791,7.979,792,6.851,793,6.068]],["t/1507",[0,0.203,69,0.88,272,1.82,397,1.079,410,2.153,454,2.545,456,1.157,492,2.257,513,1.157,514,2.473,605,1.253,681,1.426,763,1.624,770,1.453,785,1.994,786,1.994,787,1.514,794,2.954,795,2.251,796,1.906]],["t/1509",[0,0.203,69,1.346,85,1.146,98,1.668,403,1.021,454,1.785,519,1.89,600,1.65]],["t/1511",[0,0.202,410,4.607,454,2.716,542,4.493,722,4.102,787,5.983,797,4.282]],["t/1513",[0,0.204,534,1.615,535,1.881,536,1.233]],["t/1516",[272,3.839,423,3.598,454,3.151,720,4.622,722,5.217,787,5.327,798,8.258,799,5.217]],["t/1519",[0,0.204,69,1.412,403,0.453,410,1.544,454,1.677,499,1.121,605,0.851,653,0.934,681,0.968,720,2.461,760,2.119,770,0.987,794,1.202,796,1.295,798,1.354,799,1.774,800,1.245,801,2.194,802,1.202,803,1.295]],["t/1521",[0,0.202,69,2.586,499,2.752,720,3.28]],["t/1523",[0,0.198,410,5.004,454,2.951,722,4.678,787,6.356,802,5.587,804,7.104,805,7.104]],["t/1525",[0,0.203,534,1.913,535,2.227,536,1.46]],["t/1527",[454,2.841,525,6.613,720,4.168,806,7.857]],["t/1529",[0,0.127,85,2.313,296,4.889,307,4.109,318,4.127,388,4.045,410,3.983,417,3.124,423,3.157,454,3.307,492,4.176,604,3.983,619,5.66,720,4.641,787,4.673,799,4.576,800,5.66,801,5.66,803,5.885,807,8.613,808,6.495]],["t/1532",[0,0.194,400,5.445,417,3.394,420,5.591,429,6.393,533,3.262,784,4.695,799,4.971,802,5.938,809,7.056]],["t/1534",[0,0.203]],["t/1537",[0,0.202]],["t/1539",[0,0.203,69,2.19,70,2.757,75,3.368,272,1.804,298,2.838,347,1.372,361,3.48,388,2.167,403,1.661,423,1.691,454,2.277,492,2.237,499,2.332,534,1.89,557,3.032,600,1.784,643,2.043,720,3.341,735,2.685,763,2.685,801,5.488,810,3.298,811,2.559,812,3.723,813,4.745,814,2.358,815,3.298,816,3.723]],["t/1541",[0,0.203,272,2.338,720,2.392,780,3.677,800,3.929]],["t/1543",[0,0.203,85,1.718,347,2.613,403,1.53,419,3.331,600,2.473,817,5.161,818,5.161]],["t/1545",[0,0.199,272,3.574,446,4.672,511,3.745,784,4.587,799,4.857]],["t/1547",[0,0.203,534,1.92,535,2.236,536,1.465]],["t/1549",[0,0.164,98,4.349,449,4.137,473,3.729,511,3.774,591,6.947,593,6.294,594,4.708,640,6.053,664,5.893,819,7.433,820,7.433,821,5.846,822,7.433,823,4.998]],["t/1551",[0,0.19,7,2.032,17,2.882,31,2.413,52,3.146,69,1.639,70,3.106,71,3.678,77,2.761,174,3.551,222,3.299,240,3.919,319,2.27,375,7.186,388,2.441,403,1.243,410,3.508,414,1.509,450,1.945,463,3.877,464,2.82,465,2.761,473,3.071,485,4.86,486,4.911,499,3.007,536,1.625,541,5.422,542,3.024,566,4.86,603,2.697,626,3.197,629,3.024,644,2.882,645,3.407,653,2.563,657,5.233,664,5.165,682,2.82,684,3.197,730,2.129,737,2.882,824,4.207,825,3.715,826,3.415,827,3.415,828,3.715,829,3.715,830,2.608,831,3.197,832,4.194,833,2.95,834,4.194,835,4.194,836,3.415,837,4.194,838,3.919,839,4.194,840,3.715,841,4.194,842,3.415,843,3.415,844,4.194,845,3.919,846,4.194,847,6.121]],["t/1553",[0,0.193,31,1.902,71,2.899,85,1.606,98,3.279,263,3.001,319,2.612,403,1.43,430,2.543,433,3.795,450,3.138,452,3.114,483,2.765,504,3.316,531,3.316,536,1.87,548,3.177,550,3.795,566,5.696,569,5.994,575,2.364,590,4.174,600,2.312,643,3.713,663,4.273,664,5.452,683,4.135,684,5.158,737,3.316,738,3.677,824,3.316,848,4.273,849,4.509,850,6.364,851,4.824,852,5.51,853,4.824,854,5.994,855,4.824,856,4.824,857,4.824,858,6.766,859,4.824,860,4.824,861,3.795,862,4.824,863,3.929,864,4.273,865,4.273,866,3.244]],["t/1556",[0,0.192,31,3.519,85,2.687,98,3.038,222,4.932,439,5.554,448,5.106,463,5.112,464,4.216,465,4.129,485,5.427,566,5.427,629,4.522,664,5.76,823,4.216,824,5.548,825,5.554,826,5.106,827,5.106,868,5.554,869,4.78,980,5.86,981,4.644]],["t/1559",[13,4.964,31,2.488,52,4.603,85,2.101,306,4.552,307,3.732,347,2.326,388,3.673,450,3.759,452,4.074,463,3.998,464,4.244,477,4.811,480,4.811,499,2.626,532,3.564,548,5.337,549,5.899,562,4.074,603,2.781,636,5.14,660,6.601,679,3.167,680,3.513,797,5.571,902,4.552,950,5.591,982,5.899,983,6.311,984,5.899,985,7.576,986,6.311,987,7.18,988,6.311]],["t/1561",[13,5.985,31,3,364,5.23,450,4.222,452,4.912,536,2.949,594,4.82,603,3.353,705,6.74,736,7.413,797,5.23,987,6.74,989,7.609,990,7.609]],["t/1564",[0,0.202,85,1.544,263,4.757,307,2.742,426,4.109,450,2.151,457,5.143,463,2.938,471,2.546,504,3.188,511,2.355,515,3.189,518,2.3,562,2.994,667,5.016,679,2.327,680,2.582,716,2.885,991,4.638,992,4.109,993,4.638,994,4.109,995,4.335,996,5.037,997,6.776,998,4.638,999,4.109,1000,4.335]],["t/1566",[0,0.202,319,2.241,388,2.409,414,1.489,416,2.029,418,3.667,435,3.371,454,1.399,457,4.824,463,5.002,465,2.726,486,2.304,496,3.155,518,2.052,527,3.505,646,3.155,660,5.842,667,3.155,699,2.029,784,2.575,827,3.371,842,3.371,843,3.371,861,3.256,996,3.992,997,5.37,999,3.667,1001,4.139,1002,4.139,1003,4.139,1004,4.139]],["t/1569",[0,0.201,499,3,1005,6.387]],["t/1571",[0,0.202]],["t/1573",[0,0.2,307,3.48,463,3.729,464,3.958,515,2.852,558,3.661,666,4.142,699,3.797,707,3.661,830,4.818,842,4.794,843,4.794,902,4.246,992,6.862,994,5.215,1006,5.887,1007,5.887,1008,4.246,1009,5.215,1010,5.502]],["t/1576",[0,0.131,31,3.751,81,3.801,306,5.2,318,4.559,450,4.086,499,3,562,4.654,603,3.177,679,4.42,680,4.904,736,5.872,783,6.387,1011,7.21,1012,7.21,1013,7.21]],["t/1578",[47,6.033,81,4.044,129,7.168,318,3.675,450,3.557,531,5.272,562,4.951,587,7.168,769,6.495,854,6.794,864,6.794,1014,7.745,1015,7.67,1016,7.67]],["t/1580",[0,0.18,31,3.251,65,5.489,69,3.222,85,2.158,98,3.141,414,2.332,473,3.252,486,3.608,499,3.43,536,2.512,590,3.462,592,5.489,594,4.105,623,5.278,646,4.941,679,4.136,680,4.589,683,3.961,684,4.941,738,4.941,836,5.278,848,5.741,872,5.098,981,4.801,1005,5.741,1017,6.481,1018,6.481,1019,6.481]],["t/1583",[0,0.192,7,3.12,69,2.516,71,4.933,85,2.733,174,5.452,414,2.316,448,5.243,473,3.23,485,4.329,499,2.679,566,4.329,603,2.837,664,5.817,683,3.935,730,3.269,823,4.329,824,4.425,828,5.703,829,5.703,830,4.004,831,4.908,867,5.452,868,5.703,869,4.908]],["t/1585",[71,5.153,182,6.449,304,5.619,375,5.619,414,2.482,430,3.638,450,3.2,473,3.462,536,3.323,543,5.619,584,5.11,593,5.843,603,4.111,653,4.217,657,5.647,679,3.462,682,5.766,730,3.504,831,5.259,863,5.619,870,6.9,871,6.9,872,5.427]],["t/1588",[0,0.202,69,2.711,71,3.005,403,2.056,499,2.08,530,2.671,603,2.203,657,3.292,676,3.811,730,2.539,770,4.478,873,6.745,874,4.429,875,6.145,876,6.145]],["t/1590",[0,0.2,89,3.998,403,2.403,473,3.167,530,3.371,603,2.781,681,3.998,770,4.074,873,6.458,877,6.864,878,7.18]],["t/1593",[0,0.201,69,2.181,77,3.674,403,2.216,423,2.534,486,3.106,530,3.993,575,2.735,603,2.459,614,4.942,643,3.062,644,3.835,681,3.534,716,3.47,770,4.826,830,3.47,873,6.495,875,4.942,876,4.942]],["t/1595",[0,0.202,403,1.683,492,3.412,499,2.363,530,4.04,657,3.739,676,4.328,873,5.455,879,5.678]],["t/1598",[0,0.203]],["t/1600",[0,0.203,149,4.103,717,4.524,781,4.248,880,3.976,881,5.217]],["t/1602",[0,0.181,7,4.682,417,3.016,482,4.92,519,5.055,533,2.898,666,5.927,667,5.113,668,5.941,685,6.422,699,3.287,784,4.172,873,4.837,877,5.68,878,5.941,882,6.707,883,5.113,884,5.113,885,6.269,886,6.707]],["t/1604",[184,5.01,347,2.969,413,5.167,417,3.621,430,4.247,673,6.14,883,6.14,884,6.14]],["t/1606",[0,0.203,7,1.628,69,2.472,347,1.238,370,1.685,413,3.902,417,2.33,430,1.771,449,1.87,499,2.156,519,4.794,575,1.646,632,2.309,644,2.309,657,3.412,702,2.168,703,2.168,730,1.706,814,2.128,874,2.976,883,4.821,887,3.359,888,2.488]],["t/1608",[0,0.203,413,2.976,519,2.976,558,3.373,683,3.314]],["t/1610",[0,0.202,184,3.335,347,1.976,370,2.69,417,2.411,425,4.218,430,2.827,511,2.723,519,5.084,575,2.628,645,4.051,690,3.605,696,5.39,734,3.971,889,5.362]],["t/1612",[0,0.203,7,2.032,69,2.392,184,2.608,318,2.009,347,1.546,430,2.211,519,2.302,536,1.625,575,2.055,603,1.848,632,2.882,681,2.656,682,2.82,720,2.079,730,2.129,748,3.715,749,2.95,884,4.665,888,3.106,890,3.715,891,4.194,892,3.919,893,4.194,894,3.551]],["t/1614",[0,0.201,31,2.595,81,2.445,184,2.885,318,2.222,403,1.375,411,2.355,413,2.546,417,2.959,430,2.445,511,3.884,513,2.384,519,5.154,605,2.582,683,2.835,690,5.91,730,3.342,749,3.263,883,5.016,884,3.536,895,3.928,896,4.335,897,4.109,898,4.638,899,4.638,900,3.928]],["t/1616",[0,0.169,69,2.359,85,2.009,88,5.64,89,3.822,98,3.815,113,5.11,213,5.64,403,1.789,414,2.832,424,5.539,430,3.181,449,3.359,450,2.799,453,4.914,473,3.028,482,3.223,499,2.511,530,3.223,536,3.051,603,2.659,629,5.678,653,3.688,657,5.185,664,3.688,682,4.057,683,3.688,685,4.6,721,4.469,732,4.148,738,4.6,740,5.345,823,4.057,824,4.148,830,3.753,865,5.345,901,6.034,902,4.352,903,5.345,904,3.895]],["t/1619",[0,0.192,347,3.153,364,3.95,412,7.126,414,3.078,456,3.919,600,3.653,602,3.95,625,4.866,701,4.866,716,4.742,826,4.679,896,5.371,937,4.679,955,4.679,996,3.784,1065,3.344,1066,4.679,1073,6.968,1082,5.09,1109,5.09,1195,6.316,1196,6.316,1197,5.746,1198,6.316,1199,6.316,1200,6.316,1201,6.316,1202,5.746,1203,6.316,1204,8.38,1205,5.746,1206,6.316,1207,6.316]],["t/1622",[0,0.151,85,2.75,369,6.499,530,4.413,1193,7.722,1208,9.082]],["t/1624",[0,0.19,31,3.15,403,2.368,416,3.915,432,6.089,645,4.446]],["t/1626",[0,0.198,31,3.182,85,2.687,113,5.31,196,5.978,252,5.31,272,3.038,358,5.31,416,3.073,530,3.349,600,3.004,643,3.441,679,3.146,680,3.49,702,5.211,703,5.211,753,3.441,774,3.9,830,3.9,903,5.554,1138,6.27]],["t/1628",[0,0.176,77,4.894,85,2.474,100,5.361,251,7.433,315,6.584,403,2.66,411,3.774,449,4.137,506,4.623,518,3.685,532,4.197,640,6.053,737,5.109,944,6.947,1209,8.17]],["t/1630",[0,0.201,7,2.144,20,4.136,31,1.745,85,1.473,347,2.345,403,1.886,405,2.01,414,1.592,416,3.119,417,1.989,506,2.752,559,2.975,604,2.536,699,3.652,751,5.389,809,4.136,830,3.958,890,3.92,902,3.191,906,3.747,916,2.704,939,3.373,984,4.136,996,4.19,1048,3.747,1051,5.005,1054,4.713,1210,4.425,1211,4.864,1212,6.995,1213,4.864,1214,5.182,1215,4.136]],["t/1632",[0,0.169,31,2.701,272,3.32,318,3.283,432,6.507,532,3.869,622,5.389,632,4.709,669,3.709,773,5.801,830,4.261,906,7.229,914,6.068,982,6.403,1051,5.389,1100,5.579,1140,6.851,1202,6.851,1216,7.53,1217,7.53,1218,6.851,1219,7.53,1220,7.53,1221,7.53,1222,7.53,1223,6.851]],["t/1634",[0,0.201,316,6.072,364,4.174,385,4.174,456,3.122,490,4.498,697,4.945,730,3.083,929,4.945,1020,6.072,1021,7.003,1023,5.676,1082,5.379,1224,7.003,1225,6.675,1226,6.675,1227,4.629]],["t/1636",[0,0.185,85,2.574,204,5.893,378,7.731,499,3.217,645,4.303,757,5.091,1049,7.731,1100,6.296,1135,7.226,1228,8.499]],["t/1638",[0,0.2,110,5.587,644,4.882,645,4.859,757,4.678,1076,7.104,1229,6.639]],["t/1640",[0,0.192,397,3.735,506,4.848,1051,6.13,1214,6.347,1230,8.567,1231,8.567,1232,8.567]],["t/1642",[0,0.2,370,3.319,375,5.387,408,6.183,423,3.005,553,5.86,567,4.448,725,6.569,1105,6.183,1154,5.86,1233,6.183,1234,7.272,1235,7.272,1236,7.272]],["t/1645",[0,0.202,7,1.407,31,1.145,52,1.492,98,1.407,110,3.635,190,2.213,307,1.716,319,1.572,347,1.07,362,3.635,397,2.214,403,1.37,405,1.319,414,2.361,416,1.423,423,1.319,458,1.995,471,1.593,483,1.664,498,1.912,499,1.208,506,1.806,513,1.492,514,1.912,515,1.407,516,1.874,518,2.291,552,3.351,559,1.952,577,2.713,590,1.551,609,3.647,620,2.825,645,1.616,653,1.774,679,2.319,680,1.616,717,2.927,724,2.364,728,4.152,729,3.957,730,1.474,753,2.536,756,2.572,757,1.912,814,1.839,880,2.213,904,1.874,905,2.903,906,3.914,907,4.094,908,2.283,909,2.903,910,2.903,911,2.213,912,2.364,913,2.572,914,2.572,915,2.572,916,1.774,917,2.458,918,2.903,919,2.364,920,2.903,921,2.903]],["t/1648",[0,0.203,75,3.064,81,1.735,318,1.577,413,4.417,416,2.499,432,2.508,480,2.508,505,3.358,515,1.594,604,2.922,720,1.631,730,4.087,774,3.171,780,4.759,814,3.954,831,2.508,867,2.786,908,4.011,912,2.679,922,3.075,923,3.29,924,5.099,925,5.099,926,2.679,927,3.29,928,3.075,929,4.152,930,3.29]],["t/1650",[0,0.203,47,2.088,54,2.724,77,1.748,263,1.651,405,1.206,414,0.955,416,1.301,423,1.206,465,1.748,513,1.365,515,1.286,518,1.316,552,2.503,559,1.785,568,2.088,583,3.815,600,1.272,609,1.682,620,1.623,642,3.503,666,3.815,679,2.158,680,1.478,689,2.024,690,1.785,699,1.301,717,2.724,728,3.102,729,4.285,730,3.166,732,1.825,753,1.457,754,1.825,780,2.024,888,1.966,904,1.714,907,3.81,911,2.024,919,2.162,931,2.481,932,2.655,933,2.655,934,2.162,935,2.248,936,5.222,937,2.162,938,3.642,939,2.024]],["t/1652",[0,0.203,81,1.116,89,1.341,414,0.762,416,1.038,423,2.1,450,0.982,513,1.088,516,2.985,530,1.131,552,1.232,559,1.424,570,1.979,583,1.49,590,1.131,609,3.437,617,1.876,618,1.793,620,2.826,622,1.665,669,2.503,679,1.79,680,1.986,683,1.294,689,1.614,690,1.424,692,3.316,708,1.665,717,1.341,728,1.527,729,1.455,730,1.075,731,2.219,732,1.455,753,1.958,754,2.452,904,1.367,911,1.614,916,1.294,934,1.724,940,2.117,941,1.979,942,1.455,943,2.117,944,1.979,945,2.117,946,1.793,947,5.129,948,2.117,949,2.117,950,1.876,951,2.117,952,1.979,953,2.117,954,1.979,955,2.905]],["t/1654",[0,0.203,7,0.435,31,0.656,52,0.461,54,0.568,57,0.795,69,1.332,71,0.539,89,0.568,91,0.795,98,0.435,170,0.76,196,0.665,204,0.684,263,1.445,319,1.258,347,0.331,362,0.706,369,0.706,370,0.45,404,4.247,405,1.317,411,0.456,413,0.492,414,0.598,416,0.815,419,1.073,423,2.245,424,1.635,432,0.684,449,0.499,462,0.631,465,1.095,468,1.408,471,0.913,473,1.455,482,0.888,486,0.499,495,0.684,499,1.604,505,0.591,513,0.461,515,0.806,517,0.647,518,1.438,530,0.888,533,1.253,540,0.445,548,0.591,550,0.706,552,1.352,559,0.603,566,0.603,578,0.76,600,0.797,609,1.053,619,0.731,620,0.548,624,0.795,626,0.684,639,0.795,642,0.731,644,1.143,645,1.293,646,0.684,651,1.473,652,1.473,669,0.486,673,0.684,676,1.267,679,1.166,680,0.499,683,0.548,692,1.016,717,2.158,720,0.445,730,0.456,731,1.034,732,0.617,751,2.456,753,0.492,754,0.617,788,0.795,797,1.143,821,0.706,850,2.774,872,0.706,902,0.647,911,0.684,915,0.795,916,1.016,919,1.892,934,0.731,935,0.76,942,0.617,946,0.76,956,0.76,957,0.795,958,0.795,959,0.897,960,0.897,961,1.663,962,0.897,963,0.897,964,0.897,965,1.663,966,0.897,967,0.706,968,0.897,969,0.897,970,1.663,971,2.058,972,0.897,973,0.897,974,2.9,975,0.897,976,0.897,977,0.897,978,2.324,979,0.897]],["t/1657",[0,0.182,7,3.547,14,4.017,31,2.886,52,3.763,204,5.579,397,3.507,404,4.074,423,3.325,659,4.636,697,5.961,707,4.553,833,5.15,1065,4.26,1158,6.484,1237,6.484,1238,5.961,1239,8.046]],["t/1659",[0,0.194]],["t/1662",[0,0.202,14,3.045,347,2.044,370,2.783,403,1.644,456,2.852,508,4.518,533,2.397,600,2.658,643,3.045,659,3.514,1052,6.065,1068,4.363,1240,4.698,1241,5.547]],["t/1664",[0,0.202,456,2.885,533,3.243,895,4.752,1052,6.112,1240,4.752,1241,5.612]],["t/1666",[0,0.203,31,1.902,370,3.395,404,4.35,423,2.191,456,2.48,493,2.808,533,2.924,833,5.498,1240,4.085,1242,5.303,1243,7.438]],["t/1668",[0,0.202,423,2.707,456,3.064,533,3.375,697,4.853,1240,5.047]],["t/1670",[0,0.202,20,5.371,424,4.043,456,2.954,533,3.294,1033,4.866,1244,6.316,1245,5.746]],["t/1672",[0,0.202,418,5.345,456,3.102,533,3.402,558,3.753,659,3.822,707,3.753,1052,4.914,1179,6.034]],["t/1675",[0,0.202,263,4.705,330,4.095,347,2.093,403,2.242,405,2.579,533,2.454,659,3.597,707,5.29,939,4.328,995,5.307,1052,4.624,1192,4.328,1240,4.809]],["t/1677",[0,0.168,14,4.278,196,5.773,530,4.163,531,5.357,565,4.684,707,4.848,981,5.773,1237,6.904,1246,8.567,1247,8.567,1248,8.567]],["t/1679",[0,0.158,31,2.76,75,4.207,98,3.392,100,5.049,286,5.185,386,6.201,404,3.896,406,5.928,423,4.265,575,3.431,589,5.701,625,5.928,645,3.896,659,4.434,697,5.701,726,6.543,744,5.336,772,5.185,833,4.925,996,4.61,1237,6.201,1249,6.201,1250,5.506]],["t/1682",[0,0.201,12,4.753,14,2.608,17,3.267,55,4.21,318,2.277,397,2.277,486,2.645,503,3.623,531,3.267,533,2.054,565,2.856,575,2.329,632,3.267,645,2.645,649,3.871,679,2.385,699,2.329,707,5.234,755,3.13,811,4.602,996,3.13,1040,3.428,1065,3.897,1066,3.871,1070,4.21,1227,3.623,1229,4.442,1251,5.224,1252,4.753,1253,4.21,1254,5.224,1255,5.224,1256,4.442]],["t/1685",[0,0.203,533,2.279,1067,4.148]],["t/1687",[0,0.166,423,3.456,532,4.297,536,2.949,565,4.573,603,3.353,649,6.197,707,4.733,917,6.444,1071,7.112,1100,6.197,1253,6.74,1257,7.609,1258,6.444,1259,7.609]],["t/1689",[0,0.203,533,2.591,1067,4.717]],["t/1691",[0,0.19,234,5.445,410,4.327,643,4.143,649,6.148,701,6.393,707,4.695,777,6.687,1100,6.148,1253,6.687,1260,8.299,1261,8.299]],["t/1693",[0,0.202,533,2.692,1067,4.9]],["t/1695",[0,0.182,17,5.109,234,5.361,286,5.505,417,3.342,536,2.88,565,4.467,603,3.275,643,4.079,649,6.053,707,4.623,811,5.109,916,4.543,1070,6.584,1253,6.584,1258,6.294]],["t/1697",[0,0.194,17,3.926,55,5.06,234,4.12,286,4.231,358,4.837,410,3.274,532,3.226,536,2.214,551,5.712,565,3.433,575,2.8,603,2.517,643,4.168,645,3.179,699,2.8,707,6.052,755,3.761,777,5.06,811,3.926,916,3.491,1048,4.837,1065,4.965,1070,6.727,1100,4.652,1227,4.354,1229,5.339,1257,5.712,1258,4.837,1259,5.712,1262,5.712,1263,6.279,1264,6.279,1265,4.652,1266,6.279]],["t/1699",[0,0.195,17,4.578,417,2.995,518,3.303,519,3.656,548,4.386,575,3.265,603,2.935,604,3.818,625,5.641,628,5.239,644,4.578,699,3.265,707,5.711,734,4.933,971,5.9,1065,3.877,1265,5.425,1267,6.226,1268,7.322,1269,7.322]],["t/1702",[0,0.171,7,2.258,14,2.558,31,1.838,69,1.822,85,1.551,100,3.361,280,4.661,281,4.661,318,2.233,347,1.718,414,1.677,419,4.951,449,2.594,450,2.162,456,2.396,507,3.134,511,3.353,512,6.172,518,2.311,523,6.794,532,2.632,565,2.801,567,6.323,584,3.452,600,3.164,603,3.38,605,2.594,645,3.676,653,2.849,669,4.152,679,3.848,680,4.269,702,4.263,703,4.263,707,2.899,774,5.189,869,3.553,916,4.687,929,3.796,931,4.356,958,4.129,971,4.129,996,3.069,1040,4.763,1187,4.661,1210,4.661,1238,3.796,1270,5.85,1271,2.899,1272,5.123,1273,5.123,1274,4.129,1275,5.378,1276,4.129,1277,4.356,1278,5.123]],["t/1704",[0,0.191,85,2.437,419,5.74,449,4.074,567,5.979,645,4.949,757,5.855,774,4.553,823,4.922,1040,5.279,1279,8.046]],["t/1706",[0,0.203]],["t/1708",[0,0.2,31,2.658,70,3.555,141,4.065,170,4.065,225,4.486,318,2.3,347,1.769,414,2.425,416,2.353,419,4.353,498,3.161,563,3.909,567,4.534,575,3.305,600,3.231,603,3.434,645,3.753,753,2.635,774,5.257,913,4.252,916,2.934,1044,6.742,1051,3.776,1270,4.252,1280,5.277,1281,8.452,1282,5.277,1283,5.973]],["t/1711",[0,0.203]],["t/1713",[0,0.202,7,2.474,347,1.882,397,2.447,398,3.682,679,2.562,680,2.842,699,2.502,702,4.544,703,4.544,770,3.296,784,3.176,1010,4.772,1274,6.235,1284,5.613,1285,4.324]],["t/1715",[0,0.203,413,2.608,659,4.241,669,3.625]],["t/1717",[0,0.139,358,6.444,407,4.499,488,7.112,536,2.949,600,3.646,636,6.197,669,4.119,811,5.23,1286,8.364,1287,8.364,1288,8.364,1289,8.364,1290,8.364,1291,7.609,1292,8.364]],["t/1719",[0,0.183,7,3.343,222,5.427,318,4.109,403,2.542,433,5.427,476,6.112,521,5.259,523,5.619,590,3.686,605,3.84,623,5.619,628,5.427,702,4.454,703,4.454,1065,4.016,1105,6.449,1113,5.843,1223,6.9,1270,7.596,1293,5.843,1294,7.584]],["t/1722",[0,0.162,14,4.017,31,2.886,85,2.437,423,3.325,450,3.395,552,4.26,679,3.672,680,4.074,699,3.587,702,4.725,703,4.725,869,5.579,1008,6.908,1065,4.26,1192,5.579,1238,5.961,1274,6.484]],["t/1724",[0,0.197]],["t/1726",[0,0.203]],["t/1728",[0,0.199,31,1.362,70,7.49,85,1.763,123,6.438,307,2.043,397,1.656,398,2.492,421,3.23,422,4.529,425,5.676,442,3.456,469,4.484,584,5.763,588,5.877,602,2.375,645,1.923,648,2.926,662,3.23,693,2.276,700,5.243,702,3.418,703,3.418,759,3.061,778,6.017,802,2.718,1008,2.492,1080,3.456,1107,3.23,1158,3.061,1175,3.456,1258,4.484,1274,3.061,1285,4.484,1295,3.799,1296,9.024,1297,3.799,1298,3.799,1299,7.077,1300,5.821,1301,5.821,1302,5.821,1303,3.799,1304,3.799,1305,3.799,1306,3.799,1307,3.456,1308,3.799,1309,8.553,1310,3.799,1311,3.799]],["t/1730",[0,0.202,347,2.118,422,4.043,552,3.344,814,3.64,942,3.95,1008,5.498,1192,4.38]],["t/1732",[0,0.201,85,2.172,498,4.297,679,3.274,680,3.632,757,4.297,1008,4.706,1312,7.173,1313,7.173,1314,6.525]],["t/1734",[0,0.201]],["t/1736",[0,0.184,14,3.899,85,2.365,347,2.618,450,3.295,452,4.586,478,6.292,498,4.678,532,4.011,548,4.678,565,4.269,659,4.499,699,3.481,769,6.015,1008,6.297,1052,5.785,1113,6.015,1224,6.292,1249,6.292,1277,6.639]],["t/1739",[0,0.186,7,2.642,69,2.877,71,4.424,85,2.45,286,4.039,304,4.441,347,2.01,364,3.748,368,4.289,414,1.962,498,3.591,499,2.269,518,3.65,525,5.79,532,4.157,575,2.673,597,4.618,645,4.097,650,5.097,699,2.673,702,3.52,703,3.52,755,3.591,806,5.097,900,4.618,1065,3.174,1068,4.289,1093,7.361,1147,5.453,1192,4.157,1224,4.83,1250,4.289,1275,5.995,1276,4.83,1314,5.453,1315,5.453,1316,5.994,1317,5.994,1318,8.092,1319,5.994,1320,5.453,1321,5.994,1322,5.453,1323,5.994,1324,5.994,1325,5.994]],["t/1742",[0,0.201,1275,7.11,1276,6.292]],["t/1744",[0,0.201]],["t/1746",[0,0.202,69,3.275,85,1.567,204,5.068,263,4.136,272,2.28,347,2.842,414,2.392,499,3.208,552,2.739,699,2.307,850,5.415,1192,5.877,1224,5.89,1275,3.833,1276,4.169,1326,4.706,1327,5.173,1328,5.173,1329,5.173]],["t/1748",[0,0.201]],["t/1750",[0,0.202]],["t/1753",[0,0.2]],["t/1755",[0,0.203,263,3.73,1192,4.571,1275,4.884]],["t/1758",[0,0.203]],["t/1760",[0,0.185,69,3.022,701,6.547,755,5.091,1065,4.499,1265,6.296,1275,6.296,1293,7.782,1330,8.499,1331,7.226]],["t/1763",[0,0.199,403,2.238,590,4.033,1332,8.299,1333,7.549]],["t/1765",[0,0.202]],["t/1768",[0,0.203]],["t/1770",[0,0.186,17,4.709,71,5.13,85,2.28,403,2.757,432,5.222,518,4.233,590,3.659,600,3.283,603,3.019,702,4.422,703,5.511,720,3.397,850,5.579,1048,5.801,1096,5.801,1334,7.53,1335,7.53,1336,6.403,1337,7.53]],["t/1772",[0,0.203,31,1.281,69,2.421,71,1.14,85,1.419,170,1.606,204,1.445,262,1.896,319,1.759,347,1.571,368,1.492,370,2.138,397,2.042,414,1.169,416,0.929,417,0.853,450,0.88,499,2.363,511,0.963,518,0.94,533,0.819,567,2.184,575,0.929,590,2.276,600,2.042,605,2.372,643,1.783,645,1.808,653,1.159,669,2.733,679,1.63,680,1.808,699,1.592,707,1.179,774,1.179,784,2.02,799,1.249,803,1.606,852,1.544,913,1.68,1057,1.445,1326,1.896,1333,4.262,1336,3.983,1338,2.084,1339,1.606,1340,2.084,1341,2.084,1342,2.084,1343,2.084,1344,2.084]],["t/1775",[0,0.152,7,3.184,31,2.59,52,4.275,319,3.557,397,3.148,404,3.657,420,4.866,459,4.384,474,5.008,482,3.509,498,4.326,511,3.336,532,3.71,602,4.516,678,6.141,694,4.866,721,4.866,836,5.35,845,6.141,956,5.564,958,5.82,980,6.141,1184,4.418,1271,5.172,1345,7.222,1346,7.366,1347,6.57,1348,6.57,1349,6.57,1350,6.57]],["t/1777",[0,0.191,31,2.252,72,4.837,75,3.433,81,3.012,85,1.901,267,5.339,298,4.354,318,3.639,319,4.618,403,1.693,404,5.06,405,2.595,420,4.231,452,3.687,456,2.936,459,3.012,474,4.354,482,3.051,498,3.761,507,3.841,513,2.936,602,5.863,653,5.556,694,4.231,757,3.761,760,4.493,1068,4.493,1184,3.841,1256,5.339,1346,8.053,1351,6.279,1352,5.339]],["t/1780",[0,0.198,31,2.908,319,3.993,404,4.105,490,5.463,513,3.791,1346,6.534,1352,6.894]],["t/1782",[0,0.199,31,2.843,85,2.4,212,6.106,405,3.275,420,5.34,653,4.407,1184,4.848]],["t/1784",[0,0.2,7,2.865,14,2.196,31,1.578,39,1.745,68,1.745,75,2.868,81,0.92,85,2.113,96,2.826,116,1.745,164,4.461,212,2.561,282,2.561,298,4.115,307,1.032,318,1.917,319,0.945,364,2.75,369,1.373,397,0.836,403,1.186,404,2.657,405,0.793,411,0.886,414,0.628,417,3.019,419,2.583,420,3.535,423,0.793,449,0.971,452,1.126,454,0.59,456,2.057,457,1.173,459,2.11,461,1.535,462,3.358,466,1.546,470,1.631,471,1.66,474,3.638,475,1.631,482,3.757,498,2.635,499,1.258,507,2.033,511,0.886,513,0.897,523,1.421,541,3.545,562,1.126,568,2.379,575,1.482,588,1.421,605,3.292,626,2.305,653,2.446,659,1.105,696,1.292,699,1.482,720,2.367,757,1.149,784,1.085,813,2.561,821,3.755,866,1.173,890,1.546,904,1.126,926,4.396,942,2.75,955,2.463,1014,3.389,1047,1.546,1065,1.76,1067,2.379,1083,1.745,1136,1.745,1184,4.268,1215,1.631,1218,3.024,1237,1.546,1271,4.177,1283,1.546,1346,3.545,1347,1.745,1352,2.826,1353,6.574,1354,1.918,1355,1.745,1356,8.752,1357,1.918,1358,2.679,1359,4.399,1360,6.5,1361,1.918,1362,1.918,1363,1.918,1364,3.324,1365,1.918,1366,1.918,1367,3.324,1368,1.918,1369,1.918,1370,3.324,1371,5.933,1372,1.918,1373,1.918,1374,1.918,1375,1.918,1376,4.399,1377,1.918,1378,1.918,1379,1.745,1380,1.745]],["t/1787",[0,0.2,212,6.613,318,2.856,347,2.196,403,1.767,414,2.144,417,2.679,474,4.543,482,4.653,513,3.064,716,3.707,926,4.853,942,4.096,1205,7.809,1271,3.707,1381,8.584,1382,6.551,1383,6.551,1384,6.551]],["t/1789",[0,0.156,14,3.76,31,2.701,52,3.522,69,2.678,74,5.389,100,4.941,201,5.801,243,6.403,330,4.941,347,2.525,403,2.031,420,5.074,459,3.612,507,4.606,511,3.479,525,5.389,721,5.074,838,6.403,872,5.389,956,5.801,1123,6.403,1184,4.606,1238,5.579,1385,6.851,1386,7.53,1387,7.562,1388,7.53]],["t/1791",[31,2.977,85,2.513,306,5.445,318,3.617,330,5.445,347,2.782,482,4.033,511,3.833,590,4.033,682,5.076,744,5.755,797,5.189,1073,6.148,1184,5.076,1271,4.695,1389,8.299,1390,8.299]],["t/1793",[0,0.14,31,3.024,75,4.609,330,5.531,347,2.827,403,2.273,417,3.448,456,3.943,575,3.759,721,5.681,1065,4.464,1073,6.246,1271,4.77,1331,7.168,1391,8.431]],["t/1795",[0,0.184,7,2.338,14,2.648,52,2.48,75,2.899,81,2.543,83,4.509,85,1.606,96,4.509,164,4.509,196,3.573,222,3.795,225,4.509,234,4.88,298,3.677,330,3.479,357,4.824,364,3.316,369,3.795,397,2.312,403,1.43,405,2.191,426,4.273,457,3.244,459,4.12,474,5.158,479,4.509,486,3.766,507,3.244,530,2.577,531,3.316,532,2.724,575,3.316,578,4.085,583,4.76,589,3.929,605,2.685,628,3.795,716,3.001,721,3.573,768,4.509,815,4.273,821,3.795,824,3.316,904,3.114,916,2.948,926,5.51,955,3.929,1014,4.085,1184,4.549,1258,5.73,1271,3.001,1336,4.509,1349,4.824,1353,4.509,1355,4.824,1387,4.273,1392,5.51,1393,5.303,1394,4.509,1395,6.922,1396,8.59,1397,5.303,1398,5.303]],["t/1797",[0,0.108,7,3.769,14,3.251,26,5.016,31,3.067,52,3.998,54,3.752,85,1.972,100,5.609,201,5.016,243,5.536,319,3.206,330,4.272,347,2.183,397,2.838,400,4.272,403,1.756,420,4.387,430,3.123,459,3.123,473,2.972,482,3.164,525,4.659,533,2.559,578,5.016,628,4.659,721,6.83,734,4.387,737,4.071,744,4.515,797,4.071,1033,5.016,1184,3.983,1238,4.824,1250,4.659,1350,5.923,1379,5.923,1387,5.247,1395,6.89,1399,6.511,1400,6.511,1401,6.511,1402,6.511,1403,6.511]],["t/1800",[0,0.188,52,3.064,196,4.414,414,2.809,417,2.679,459,4.117,460,3.775,474,5.953,483,3.416,497,4.096,507,4.007,553,5.279,618,5.047,694,4.414,716,3.707,731,4.857,888,4.414,1071,7.299,1173,5.047,1262,5.96,1265,4.853,1291,5.96,1392,6.36,1395,5.279,1404,6.551,1405,5.279,1406,5.96,1407,6.551,1408,5.96,1409,6.551,1410,6.551,1411,5.96,1412,5.96,1413,5.96,1414,6.551,1415,6.551,1416,6.551]],["t/1803",[0,0.203,385,4.13,417,1.393,454,1.645,492,1.863,494,2.235,511,1.574,513,1.593,696,3.605,730,3.051,732,2.13,733,2.625,749,2.181,753,2.671,760,2.438,762,2.363,794,2.438,935,2.625,937,3.963,1214,2.524,1392,3.963,1417,3.099,1418,5.616,1419,2.897]],["t/1805",[0,0.2,85,2.418,430,3.83,696,5.38]],["t/1808",[0,0.203,385,4.263,417,1.464,454,1.71,494,2.349,511,1.654,513,1.674,685,2.483,696,3.747,730,1.654,732,2.239,753,2.776,762,2.483,794,2.562,937,4.12,1127,3.257,1392,4.12,1417,3.257,1418,3.044,1419,3.044]],["t/1810",[0,0.202,85,1.857,403,1.654,430,3.941,685,4.253,717,3.534,954,5.215,1183,5.215,1184,3.752,1420,6.133,1421,6.133,1422,4.725]],["t/1813",[0,0.203,609,3.64]],["t/1815",[0,0.203,604,3.161,609,4.699,717,3.494,1423,6.063]],["t/1817",[0,0.201,85,1.756,403,2.609,430,3.794,508,4.295,590,2.817,692,3.223,694,3.906,696,5.33,709,4.672,712,4.929,717,4.558,733,4.466,735,3.803,737,3.625,787,3.546,811,3.625,1139,5.274,1270,4.672,1418,4.929,1422,6.094,1424,5.797,1425,5.274,1426,5.797,1427,5.274,1428,5.797]],["t/1819",[0,0.199,62,3.956,74,3.513,318,2.14,403,2.426,407,2.64,417,3.368,430,3.377,459,2.355,482,3.422,483,2.56,507,3.003,518,2.214,548,2.941,568,3.513,636,5.217,669,2.418,716,2.778,731,2.778,749,3.142,753,2.451,772,3.308,794,3.513,797,3.07,811,3.07,840,3.956,894,3.782,929,3.637,936,3.404,937,3.637,1035,4.466,1178,4.174,1193,4.174,1252,4.466,1271,2.778,1322,8.183,1392,6.1,1412,7.49,1413,4.466,1427,4.466,1429,4.466,1430,4.909,1431,4.909,1432,4.909,1433,4.909,1434,4.909,1435,4.909]],["t/1821",[0,0.195,85,1.795,190,5.569,214,5.392,234,3.889,414,1.94,417,2.424,447,4.391,454,3.002,460,4.627,471,2.959,483,4.187,484,4.776,499,2.244,505,3.551,507,3.625,521,4.11,553,4.776,597,4.566,815,4.776,852,4.391,877,4.566,922,5.04,1023,5.04,1096,4.566,1135,5.04,1173,4.566,1184,3.625,1265,4.391,1315,5.392,1353,5.04,1387,6.471,1395,4.776,1405,4.776,1406,5.392,1411,5.392,1436,5.927,1437,5.927,1438,5.927,1439,5.927,1440,5.392,1441,8.031]],["t/1823",[0,0.188,13,4.103,14,2.863,69,2.792,77,3.435,403,2.117,414,1.877,417,3.211,430,2.75,435,4.248,454,2.753,471,2.863,483,2.99,495,3.976,519,2.863,527,4.418,530,2.786,531,3.586,536,2.022,543,4.248,592,4.418,597,4.418,626,3.976,715,4.103,753,2.863,755,3.435,824,3.586,840,6.327,894,4.418,904,3.368,1047,4.621,1065,3.036,1109,4.621,1154,4.621,1183,6.676,1184,3.508,1250,4.103,1256,4.876,1265,4.248,1277,4.876,1293,4.418,1320,5.217,1348,5.217,1392,4.248,1408,5.217,1422,4.418,1425,7.143,1442,5.734,1443,5.217,1444,5.734,1445,5.734,1446,5.734,1447,5.734,1448,5.734,1449,5.734]],["t/1826",[0,0.189,7,3.343,31,2.72,85,2.297,100,4.976,318,3.306,347,2.543,397,3.306,405,3.134,406,5.843,407,5.07,592,5.843,715,5.427,731,4.291,749,4.854,1238,5.619,1271,5.333,1450,6.9,1451,7.584,1452,6.449,1453,7.584]],["t/1828",[0,0.196,98,3.392,100,5.049,149,5.506,267,6.543,303,7,403,2.075,407,4.139,594,4.434,1153,6.201,1339,5.928,1380,7,1450,7,1454,7.695,1455,7.695,1456,7.695]],["t/1830",[397,3.354,407,5.959,414,2.518,456,3.598,482,3.739,506,4.354,716,4.354,735,5.049,793,7.664,811,4.811,895,5.928,900,5.928,1184,4.707,1271,4.354,1339,5.928,1457,7.695,1458,7.695,1459,9.511,1460,7.695,1461,8.652]],["t/1833",[0,0.186]],["t/1835",[0,0.151,430,4.356,1033,6.997,1462,9.082,1463,9.082,1464,9.082]],["t/1838",[0,0.19,81,4.461,113,5.72,368,5.313,369,5.313,404,3.76,405,3.844,407,3.993,459,4.461,513,4.35,555,5.983,602,4.643,659,4.278,753,3.707,903,5.983,955,5.501,1042,6.754,1051,5.313,1271,4.201,1465,5.313,1466,6.754]],["t/1840",[0,0.201,600,4.386,603,2.915,643,3.631,659,5.29,1467,7.272,1468,7.272,1469,7.272]],["t/1842",[0,0.198,347,3.339,513,3.881,602,5.189,643,4.143]],["t/1844",[0,0.198,31,2.175,149,5.835,212,6.282,398,3.978,404,3.07,405,4.072,450,2.558,514,3.632,534,2.801,567,3.709,602,3.791,669,2.986,753,3.027,759,4.886,767,4.671,774,3.431,830,5.575,866,3.709,936,4.204,939,4.204,1038,4.492,1104,5.155,1122,5.155,1173,4.671,1233,5.155,1452,5.155,1465,5.835,1470,7.418,1471,6.063]],["t/1846",[0,0.199,330,4.407,404,3.401,408,7.419,414,2.198,417,2.747,534,3.103,536,2.368,602,4.2,605,3.401,725,4.807,753,4.839,767,5.175,830,4.937,1429,6.111,1465,7.799]],["t/1848",[0,0.199,398,4.941,400,4.941,534,3.479,567,4.606,603,3.019,1038,6.952,1152,6.068,1472,7.53,1473,7.53,1474,7.53,1475,7.53]],["t/1850",[0,0.203,31,1.008,81,1.348,330,1.843,347,0.942,403,0.758,405,1.161,407,1.511,411,1.298,447,3.397,507,1.719,533,1.105,534,2.683,540,1.267,603,1.126,734,1.893,757,2.746,772,1.893,774,3.286,790,2.389,866,2.804,1038,2.082,1047,2.264,1152,2.264,1156,2.556,1173,3.532,1245,2.556,1271,1.59,1281,5.283,1285,5.163,1307,2.556,1440,2.556,1470,2.556,1476,9.489,1477,2.81,1478,2.81,1479,2.81,1480,2.81,1481,4.171,1482,2.81,1483,2.81,1484,2.81,1485,2.81,1486,2.81,1487,2.81]],["t/1853",[0,0.2,81,3.207,85,1.384,318,2.914,347,2.242,362,3.27,364,2.857,403,1.803,404,3.385,405,2.763,407,4.979,411,2.111,414,1.495,456,2.137,459,4.912,490,3.079,498,2.738,534,2.111,643,2.282,659,2.633,694,3.079,731,3.783,753,3.338,781,4.953,814,2.633,833,4.279,866,2.795,880,3.169,936,3.169,1068,3.27,1158,5.387,1178,5.684,1271,3.783,1283,3.683,1385,4.157,1443,4.157,1465,4.784,1466,4.157,1488,5.657,1489,4.57,1490,4.57]],["t/1855",[0,0.199,85,2.264,330,4.906,403,2.519,404,4.731,411,3.454,467,6.685,490,5.038,534,3.454,866,4.574,1271,4.231]],["t/1857",[0,0.203,181,2.983,533,1.379,604,2.854,699,1.564,1129,4.655,1422,5.186,1465,4.817,1491,6.732,1492,6.124,1493,5.474]],["t/1859",[0,0.151,85,2.758,318,3.97,358,6.187,405,3.318,509,4.547,514,4.811,523,4.391,524,4.776,540,2.673,567,4.912,606,5.04,607,5.04,693,3.551,767,4.566,774,3.354,836,4.391,897,8.477,942,3.706,1065,3.138,1168,5.392,1271,5.952,1419,5.04,1422,6.187,1452,5.04,1465,7.301,1492,5.392,1494,8.031,1495,5.927,1496,9.108,1497,5.927,1498,5.927,1499,5.927,1500,8.031,1501,5.927,1502,5.927,1503,5.927]],["t/1861",[0,0.194,69,3.022,403,2.292,404,4.303,405,3.512,407,4.571,1053,7.731,1504,8.499]],["t/1863",[0,0.194,403,2.238,404,4.202,407,4.463,423,3.429,482,4.033,793,8.025,894,6.393,1271,4.695]],["t/1865",[0,0.203,490,3.822]],["t/1868",[0,0.195,347,2.849,406,6.547,407,4.571,536,2.996,735,5.576,1505,8.499]],["t/1870",[0,0.198,85,2.455,399,7.376,417,3.316,1271,4.587,1331,6.894,1506,8.108,1507,8.108]],["t/1872",[0,0.202,318,3.757,456,4.031,524,6.946,632,4.122,1508,6.592,1509,6.592,1510,6.592]],["t/1875",[0,0.19]],["t/1877",[0,0.155,403,2.514,1113,7.182]],["t/1879",[407,5.014,533,3.665,1461,8.481]],["t/1882",[0,0.2,69,2.818,414,2.594,459,3.801,482,3.851,669,3.903,731,4.484]],["t/1884",[0,0.179,141,6.6,319,4.219,410,4.467,967,6.13,1009,6.904,1214,6.347,1465,6.13,1481,9.233,1511,8.567]],["t/1886",[0,0.199,1227,5.8,1250,5.985]],["t/1889",[0,0.192,14,4.665,31,2.682,52,3.497,185,6.358,397,3.259,405,3.09,450,3.155,473,3.413,482,3.633,521,5.185,562,4.391,594,4.309,669,3.682,722,4.479,863,5.54,957,6.025,1040,6.13,1227,5.185,1249,6.025,1293,5.76]],["t/1891",[0,0.196,575,3.729,737,5.23,755,5.011,1065,4.428,1066,6.197,1067,5.985,1512,7.609]],["t/1894",[0,0.192,14,4.665,31,2.682,52,3.497,185,6.358,397,3.259,405,3.09,450,3.155,473,3.413,482,3.633,521,5.185,562,4.391,594,4.309,669,3.682,722,4.479,863,5.54,957,6.025,1040,6.13,1227,5.185,1249,6.025,1293,5.76]],["t/1896",[0,0.196,575,3.729,737,5.23,755,5.011,1065,4.428,1066,6.197,1067,5.985,1512,7.609]],["t/1899",[0,0.201,459,4.521,866,4.639,1488,5.427]],["t/1901",[0,0.203,385,4.965,400,3.824,403,1.572,417,3.966,604,4.14,1513,4.697]],["t/1903",[0,0.202,385,4.455,405,2.944,459,3.417,511,3.291,833,4.56]],["t/1905",[0,0.202,459,3.417,515,3.141,866,4.358,1214,5.278]],["t/1907",[0,0.203,385,4.717,400,3.551,417,3.552,1285,4.169,1513,4.361]],["t/1909",[0,0.199,184,3.875,403,1.847,417,2.801,450,2.889,459,3.284,471,3.419,514,4.102,521,6.127,533,2.692,546,5.823,589,6.546,594,5.091,916,3.807,1267,5.823,1405,5.518,1514,5.518,1515,5.823,1516,6.23]],["t/1911",[0,0.196,14,3.487,125,5.938,315,5.628,397,3.044,403,1.883,482,3.394,532,3.588,565,4.892,575,3.114,594,4.024,643,3.487,669,3.439,755,4.184,782,5.628,888,4.705,981,4.705,1065,3.697,1153,5.628,1155,5.628,1339,5.38,1358,5.628,1394,5.938,1514,5.628,1517,6.353,1518,6.353]],["t/1913",[0,0.152,536,3.23,1065,4.85,1227,6.353,1250,6.555]],["t/1916",[0,0.201,459,4.521,866,4.639,1488,5.427]],["t/1918",[0,0.203,385,4.965,400,3.824,403,1.572,417,3.966,604,4.14,1513,4.697]],["t/1920",[0,0.202,385,4.455,405,2.944,459,3.417,511,3.291,833,4.56]],["t/1922",[0,0.202,459,3.417,515,3.141,866,4.358,1214,5.278]],["t/1924",[0,0.203,385,4.717,400,3.551,417,3.552,1285,4.169,1513,4.361]],["t/1926",[0,0.199,184,3.875,403,1.847,417,2.801,450,2.889,459,3.284,471,3.419,514,4.102,521,6.127,533,2.692,546,5.823,589,6.546,594,5.091,916,3.807,1267,5.823,1405,5.518,1514,5.518,1515,5.823,1516,6.23]],["t/1928",[0,0.196,14,3.487,125,5.938,315,5.628,397,3.044,403,1.883,482,3.394,532,3.588,565,4.892,575,3.114,594,4.024,643,3.487,669,3.439,755,4.184,782,5.628,888,4.705,981,4.705,1065,3.697,1153,5.628,1155,5.628,1339,5.38,1358,5.628,1394,5.938,1514,5.628,1517,6.353,1518,6.353]],["t/1930",[0,0.152,536,3.23,1065,4.85,1227,6.353,1250,6.555]],["t/1932",[0,0.139,436,7.112,459,4.799,563,7.413,1519,8.364,1520,9.102,1521,8.507,1522,9.102,1523,7.609,1524,7.112,1525,8.364]],["t/1934",[0,0.197,368,5.79,403,1.616,404,4.638,411,2.769,413,2.993,414,1.962,459,5.262,534,2.769,659,4.663,702,4.752,703,4.752,720,4.132,814,3.454,917,4.618,1038,4.441,1045,5.453,1107,5.097,1192,4.157,1358,4.83,1488,4.289,1524,7.789,1526,5.994,1527,5.994,1528,5.994,1529,5.453,1530,5.994]],["t/1937",[0,0.202,347,1.532,385,2.857,414,2.188,436,3.886,456,2.137,459,4.638,511,2.111,534,2.111,563,3.386,643,2.282,693,2.738,731,2.586,833,5.568,936,4.636,1283,5.387,1488,4.784,1520,6.082,1521,5.684,1522,4.157,1523,4.157,1531,4.57,1532,4.157,1533,4.157]],["t/1938",[0,0.203,81,1.688,298,2.441,385,2.201,414,1.152,456,1.646,459,4.929,511,1.626,563,2.608,669,1.734,693,2.109,731,1.992,833,5.848,892,2.993,917,2.712,936,2.441,1150,2.993,1154,2.837,1197,3.203,1488,4.827,1521,2.993,1524,4.667,1529,3.203,1532,3.203,1533,3.203]],["t/1940",[0,0.202,89,2.063,403,0.965,405,1.479,411,1.654,452,2.102,459,5.015,482,1.74,511,1.654,516,2.102,669,1.763,733,2.758,753,1.787,754,2.239,772,2.412,796,2.758,830,3.146,833,5.885,880,4.728,904,3.266,1054,3.747,1122,3.044,1132,3.257,1150,3.044,1215,3.044,1233,3.044,1488,6.305,1515,4.728,1534,3.58,1535,3.58]]],"invertedIndex":[["",{"_index":0,"t":{"975":{"position":[[0,5],[6,2],[10,4],[17,1],[19,3],[23,4],[28,9],[38,1],[40,3],[44,3],[48,4],[53,5]]},"977":{"position":[[0,8],[9,2],[13,4],[20,1],[22,3],[26,4],[31,9],[41,1],[43,3],[47,3],[51,4],[56,5]]},"979":{"position":[[0,8],[9,2],[13,4],[20,3],[24,3],[28,4],[33,9],[43,1],[45,3],[49,3],[53,4],[58,5]]},"997":{"position":[[10,4],[20,7]]},"999":{"position":[[5,4],[11,1]]},"1001":{"position":[[2,7],[12,9],[26,2],[32,4],[39,9],[53,2],[59,7],[67,3],[74,2],[80,4],[86,1],[88,8],[97,2],[101,2],[104,2],[107,2],[110,2],[113,8],[122,2],[126,3]]},"1004":{"position":[[17,4],[26,2]]},"1006":{"position":[[2,5],[8,4],[13,2],[16,4]]},"1008":{"position":[[2,5],[8,2],[11,2],[14,4],[19,2],[22,3],[26,6],[37,4],[42,2],[45,3],[49,6]]},"1011":{"position":[[16,6],[25,4]]},"1013":{"position":[[2,8],[11,7]]},"1015":{"position":[[3,2],[14,2],[26,7],[36,8],[45,2],[50,2],[57,8],[66,2],[70,2],[73,2],[76,2],[79,2],[82,2],[85,2]]},"1020":{"position":[[2,8],[11,7],[19,11],[31,4]]},"1022":{"position":[[0,5],[17,8]]},"1024":{"position":[[0,4],[8,5],[15,5],[22,6],[34,5],[40,5],[46,8],[57,4],[64,3],[70,4],[77,6],[91,5],[98,8],[108,5],[117,3],[121,3],[125,1],[127,3],[131,3],[135,1],[137,3],[141,3],[145,1],[147,7],[160,8],[169,3],[175,1],[177,5],[185,1],[189,5],[197,3],[203,4],[210,7],[225,5],[231,3],[235,1],[237,5],[243,3],[247,1],[249,5],[255,3],[259,1]]},"1029":{"position":[[2,9],[12,6],[20,5]]},"1031":{"position":[[2,9],[13,1],[15,3],[19,3],[28,3],[32,1],[34,3],[38,1]]},"1036":{"position":[[2,8],[11,5]]},"1038":{"position":[[2,8],[11,3],[15,3],[19,1],[21,3],[25,1],[27,1],[29,3],[33,1],[36,4],[41,4],[47,4],[52,5],[58,1],[60,5],[79,8],[91,3],[95,3],[99,1],[109,8],[123,6],[132,8],[150,16],[150,4],[155,7],[163,3],[172,8],[183,8],[194,3],[200,4],[206,8],[218,8],[235,3],[239,1],[242,4],[248,4],[253,7],[261,9],[274,16],[274,4],[279,7],[287,3],[299,3]]},"1043":{"position":[[2,9],[12,4]]},"1045":{"position":[[0,5],[9,3],[13,3],[17,3],[21,5],[32,9],[44,5],[52,3],[58,4],[65,5],[78,3]]},"1050":{"position":[[2,5],[8,4]]},"1052":{"position":[[0,4],[8,3],[12,3],[16,3],[20,8],[34,5],[42,4],[49,3],[55,4],[63,8],[80,3],[84,3],[88,3]]},"1055":{"position":[[9,1]]},"1057":{"position":[[2,4],[7,1],[9,4]]},"1059":{"position":[[0,5],[9,3],[13,3],[17,3],[21,11],[21,6],[28,4],[38,4],[43,1],[47,5],[55,3],[61,4],[68,11],[68,6],[75,4],[87,3]]},"1061":{"position":[[0,11],[62,3]]},"1064":{"position":[[35,3]]},"1066":{"position":[[0,6],[32,8],[52,10],[63,14],[92,3],[100,2],[105,7],[115,4]]},"1069":{"position":[[0,7],[8,6],[15,6],[25,7],[35,6],[44,3],[50,4],[61,7],[94,6],[108,4],[113,7],[121,9],[133,5],[141,5],[147,4],[154,5],[160,4],[167,6],[179,6],[192,4],[197,6],[204,6],[224,8],[233,3],[237,6],[244,7],[258,8],[273,5],[279,4],[284,7],[302,7],[310,4],[315,5],[326,5],[348,4],[353,5],[359,6],[368,4],[373,6],[380,4],[385,6],[392,7],[400,6],[412,9],[430,4],[435,9],[448,6],[457,6],[465,6],[473,8],[483,4],[488,3],[492,6],[499,7],[509,7],[518,4],[523,4],[528,5],[535,3],[548,15],[569,4],[575,1],[578,6],[586,15],[602,1],[604,7],[613,5],[621,1],[623,5],[629,4],[636,5],[642,1],[644,5],[650,6],[659,4],[667,1],[669,4],[676,2],[679,1],[682,2],[688,1],[690,8],[699,4],[706,2],[711,6],[718,6],[725,3],[730,7],[738,7],[746,10],[761,1],[763,8],[772,4],[780,1],[782,6],[789,3],[798,8],[814,4],[820,1],[823,6],[831,8],[842,5],[850,1],[852,5],[858,5],[866,5],[872,1],[874,5],[880,7],[890,3],[894,1],[897,1],[902,5],[908,1],[910,8],[921,2],[924,3],[931,1],[933,5],[942,3],[949,3],[955,6],[962,3],[970,6],[977,3],[986,7],[1001,4],[1007,1],[1010,6],[1018,7],[1028,5],[1036,1],[1038,5],[1044,5],[1052,5],[1058,1],[1060,5],[1066,7],[1076,3],[1080,3],[1084,5],[1090,3],[1094,1],[1097,1],[1102,5],[1108,1],[1110,8],[1121,2],[1124,1],[1129,1],[1131,4],[1139,1],[1144,3],[1150,3],[1156,1],[1162,6],[1169,3],[1178,9],[1196,3],[1201,4],[1207,1],[1210,6],[1218,9],[1228,3],[1232,5],[1241,1],[1243,7],[1254,3],[1263,9],[1287,4],[1293,1],[1296,6],[1304,9],[1314,3],[1318,7],[1326,7],[1337,3],[1343,6],[1352,4],[1359,3],[1363,4],[1371,6],[1378,4],[1383,3],[1392,1],[1394,7],[1403,3],[1407,6],[1416,6],[1424,5],[1430,4],[1436,1],[1440,1],[1445,1],[1447,1],[1451,3],[1455,4],[1461,3],[1465,4],[1471,3],[1475,7]]},"1071":{"position":[[0,7],[8,7],[16,6],[26,3],[32,11],[44,6],[57,10],[73,4],[78,10],[89,6],[98,4],[103,6],[110,6],[118,6],[125,6],[132,5],[138,4],[143,6],[150,6],[157,4],[162,6],[173,4],[178,13],[192,4],[197,6],[205,6],[213,6],[220,6],[229,10],[242,6],[250,10],[262,4],[268,4],[274,6],[282,6],[290,5],[297,4],[302,4],[307,6],[315,3],[321,6],[329,4],[334,4],[339,6],[354,4],[360,1],[363,10],[375,5],[383,5],[391,3],[395,6],[405,1],[408,8],[420,1],[424,1],[426,4],[432,2],[435,1],[437,3],[443,6],[450,3],[456,4],[462,1],[465,10],[477,4],[484,5],[492,3],[496,6],[506,1],[509,8],[521,1],[525,1],[527,4],[533,5],[539,1],[541,6],[549,6],[556,3],[562,4],[568,1],[571,10],[583,4],[590,6],[599,6],[606,1],[608,4],[615,4],[621,1],[624,10],[636,3],[644,3],[650,6],[659,4],[666,1],[668,6],[676,6],[683,4],[688,3],[697,1],[699,5],[706,3],[710,6],[720,1],[723,3],[729,1],[731,1],[735,1],[737,4],[743,3],[761,1],[763,6],[770,9],[780,6],[787,5],[794,4],[800,1],[802,4],[808,4],[815,3],[821,7],[830,3],[844,4],[850,1],[853,10],[865,3],[869,3],[873,6],[883,1],[885,5],[894,3]]},"1073":{"position":[[0,7],[8,4],[13,6],[23,7],[33,11],[45,6],[54,11],[66,7],[76,4],[84,4],[89,4],[101,1],[110,6],[120,6],[127,9],[142,1],[150,6],[160,7],[168,13],[183,6],[192,6],[200,2],[203,3],[210,6],[217,15],[233,6],[242,3],[249,3],[255,5],[261,3],[271,1],[281,2],[284,3],[291,6],[298,8],[310,3],[317,3],[323,5],[329,3],[339,1],[349,3],[354,6],[364,7],[372,10],[383,7],[391,10],[405,5],[411,6],[420,2],[423,6],[430,9],[440,3],[448,1],[458,6],[465,3],[470,5],[477,11],[492,4],[497,5],[503,1],[507,4],[512,6],[523,1],[533,2],[536,3],[543,6],[550,7],[561,3],[568,3],[574,5],[580,3]]},"1075":{"position":[[1,6],[9,8],[22,6],[30,3],[35,5],[42,11],[56,6],[64,5],[70,4],[75,6],[83,3],[89,5],[96,11],[110,6],[118,8]]},"1077":{"position":[[3,4],[11,7],[56,6],[63,4],[85,5],[93,3],[97,3]]},"1079":{"position":[[7,6],[18,7],[44,7],[59,9],[88,7],[107,4],[112,4],[117,9]]},"1082":{"position":[[2,8],[36,6],[76,8]]},"1087":{"position":[[0,3],[5,5],[12,4],[18,7],[26,5],[33,3],[38,4],[44,4],[50,7],[58,4],[67,4],[72,3],[80,7],[88,4],[97,3],[116,3],[121,4],[134,3],[139,5],[151,4]]},"1089":{"position":[[0,3],[5,5],[11,4],[18,4],[24,7],[36,3],[41,4],[59,4],[64,3],[72,7],[87,3],[92,5],[103,5],[113,3],[118,4],[130,3],[135,5],[144,3],[152,4],[177,2],[182,3]]},"1092":{"position":[[0,3],[6,5],[13,4],[19,7],[27,5],[34,3],[40,4],[46,4],[52,7],[60,4],[69,4],[74,3],[82,7],[90,5],[96,7],[104,4],[113,3],[137,4],[142,3],[154,3]]},"1094":{"position":[[0,4],[7,4],[12,4],[17,1],[19,4],[25,11],[37,7],[49,4],[56,11],[68,4],[73,1],[75,4],[81,4],[86,7],[101,4],[106,4],[115,11],[127,7],[138,4],[143,7],[158,4],[201,4],[206,4],[232,8],[250,4]]},"1096":{"position":[[57,2],[60,3],[71,8]]},"1098":{"position":[[72,8],[94,7],[102,8],[111,6],[167,8]]},"1100":{"position":[[0,11],[14,1]]},"1105":{"position":[[14,6],[21,6],[28,2],[31,4],[36,7],[44,9],[56,5],[64,5],[70,4],[77,5],[83,4],[90,6],[109,6],[116,3],[120,6],[128,6],[149,6],[156,6],[163,2],[169,5],[191,4],[196,5],[202,6],[211,2],[214,6],[221,4],[226,6],[233,4],[238,6],[245,7],[253,6],[275,6],[282,6],[289,2],[295,11],[321,4],[327,1],[330,6],[338,11],[350,3],[354,5],[362,3],[366,6],[376,1],[378,5],[384,5],[392,5],[398,1],[400,5],[406,7],[416,2],[419,3],[424,2],[430,1],[432,8],[441,3],[445,2],[450,2],[455,6],[462,3],[466,6],[473,3],[477,7],[488,6],[496,7],[504,3],[508,5]]},"1107":{"position":[[2,6],[16,7],[24,3],[28,2],[34,7],[44,6],[55,4],[61,1],[64,10],[76,6],[83,3],[87,6],[95,6],[104,3],[108,6],[118,1],[121,3],[125,6],[132,6],[139,5],[147,1],[149,1],[153,1],[155,4],[161,3],[166,6],[173,3],[177,7],[188,1],[191,3],[195,6],[204,1],[206,1],[210,1],[212,4],[218,3]]},"1109":{"position":[[0,6],[11,7],[22,4],[27,2],[33,1],[36,11],[58,11],[70,11],[82,6],[89,5],[96,4],[103,11],[117,2],[122,6],[131,4],[138,3],[144,7],[154,5],[161,3],[171,4],[176,5],[182,1],[186,4],[191,11]]},"1111":{"position":[[1,6],[9,8],[22,6],[30,3],[35,5],[42,11],[56,6],[64,5],[70,4],[75,6],[83,3],[89,5],[96,11],[110,6],[118,3],[122,6],[129,6],[136,5],[143,5],[150,3],[156,6],[164,8]]},"1113":{"position":[[0,11],[16,4],[21,9],[35,4],[40,9],[53,6],[60,5],[69,2]]},"1117":{"position":[[7,6],[30,5],[36,9],[46,6],[53,2]]},"1119":{"position":[[6,7],[26,7],[72,7],[100,7],[111,7]]},"1121":{"position":[[9,7],[20,6],[27,6],[34,2],[40,5],[62,4],[67,5],[73,6],[82,2],[85,6],[92,4],[97,6],[104,4],[109,6],[116,7],[124,6],[141,7],[149,4],[154,6],[163,6],[182,6],[189,6],[196,2],[199,4],[205,1],[208,6],[216,6],[223,3],[227,7],[235,7],[246,3],[252,6],[261,4],[268,3],[272,4],[280,6],[287,4],[292,3],[301,1],[303,7],[312,3],[316,6],[325,6],[333,5],[339,4],[345,1],[349,1],[354,1],[356,1],[360,3],[364,4],[370,3],[374,4],[380,3],[384,7],[404,2],[407,3],[411,7],[422,3],[428,3],[432,7],[443,3],[447,7],[456,3],[462,1],[466,3],[470,7]]},"1123":{"position":[[10,4],[16,1],[19,10],[31,3],[39,3],[45,6],[54,4],[61,1],[63,6],[71,6],[78,4],[83,3],[92,1],[94,5],[101,3],[105,6],[115,1],[118,3],[124,1],[126,1],[130,1],[132,4],[138,3],[156,7],[167,4],[172,4],[177,6],[185,1],[188,1],[190,6],[197,4],[202,6],[209,5],[216,4],[222,1],[224,4],[230,4],[237,3],[243,7],[252,3],[257,7],[266,7],[288,5],[299,7],[307,3],[311,6],[321,1],[324,3],[328,5],[334,4],[339,6],[348,1],[350,1],[354,1],[356,4],[364,5],[379,7],[387,3],[391,2],[397,7],[407,6],[418,4],[424,1],[427,10],[439,6],[446,3],[450,6],[458,6],[467,3],[471,6],[481,1],[484,3],[488,6],[495,6],[502,5],[510,1],[512,1],[516,1],[518,4],[524,3],[529,6],[536,3],[540,7],[551,1],[554,3],[558,6],[567,1],[569,1],[573,1],[575,4],[581,3]]},"1125":{"position":[[0,10],[12,6],[20,6],[28,8],[41,6],[49,3],[54,5],[61,11],[75,6],[83,5],[89,4],[94,6],[102,3],[108,5],[115,11],[129,6],[137,3],[141,5],[147,4],[152,6],[160,3],[165,5],[172,11],[186,6],[194,4],[199,5],[205,2],[208,6],[216,5],[223,3],[229,6],[237,3],[241,6],[248,6],[255,5],[262,5],[269,3],[275,6],[283,8]]},"1127":{"position":[[10,6],[17,5]]},"1129":{"position":[[6,6],[13,5]]},"1131":{"position":[[32,2],[37,9],[101,4],[106,8],[216,8],[230,4],[235,8],[244,9],[256,4],[261,7],[269,6],[277,5],[293,13],[314,4],[319,13],[333,6],[342,4],[348,1],[350,13],[365,4],[370,7],[378,6],[386,5],[394,3],[398,6],[415,1],[417,1],[421,7],[430,6],[437,3],[446,11],[465,4],[470,11],[482,6],[491,4],[497,1],[499,11],[512,4],[517,7],[525,6],[533,5],[541,3],[545,6],[562,1],[564,1],[568,7],[577,6],[584,3],[602,19],[627,4],[632,19],[652,6],[661,8],[670,8],[681,4],[686,22],[709,8],[718,8],[729,19],[751,6],[759,19],[779,8],[789,8],[801,4],[807,1],[810,19],[831,12],[844,7],[852,6],[875,7],[886,3],[890,7],[903,1],[911,7],[920,1],[924,1],[926,8],[935,4],[940,7],[957,4],[962,4],[985,13],[1002,13],[1018,7],[1029,22],[1052,13],[1067,7],[1075,12],[1089,5],[1117,11],[1132,11],[1146,7],[1156,22],[1179,11],[1192,7],[1200,12],[1214,5],[1241,11],[1259,4],[1264,11],[1276,6],[1285,4],[1291,1],[1293,11],[1306,9],[1316,7],[1324,6],[1332,5],[1340,3],[1344,6],[1359,1],[1361,1],[1365,7],[1374,6],[1381,3],[1400,14],[1421,4],[1426,14],[1441,6],[1450,11],[1462,11],[1476,4],[1482,1],[1485,14],[1501,12],[1514,7],[1522,6],[1545,7],[1556,3],[1560,7],[1573,1],[1581,7],[1590,1],[1594,1],[1596,11],[1608,9],[1618,7],[1635,4],[1640,4],[1649,9],[1662,14],[1677,11],[1690,11],[1705,9],[1715,12],[1729,5],[1754,14]]},"1133":{"position":[[34,2],[39,9],[58,4],[63,17],[81,6],[91,15],[117,6],[124,6]]},"1135":{"position":[[48,7],[59,2],[62,6],[70,18],[70,10],[81,7]]},"1137":{"position":[[12,4],[17,8],[40,8],[49,7]]},"1139":{"position":[[16,9],[28,2],[34,6],[60,7],[78,6],[86,3],[90,1],[95,1],[98,1],[102,7],[110,6],[120,1],[126,2],[129,10],[140,15]]},"1141":{"position":[[32,18],[57,2],[65,4],[70,18],[89,6],[98,9],[108,6],[123,9],[133,4],[138,4]]},"1143":{"position":[[12,3],[16,7],[34,7],[51,4],[57,1],[60,15],[77,11],[89,5],[97,6],[105,5],[113,3],[121,18],[145,8],[155,4],[160,4],[165,5],[172,1],[176,6],[185,4],[190,1],[192,13],[209,3],[214,6],[223,3],[227,8],[236,4],[243,4],[248,5],[254,1],[258,4],[263,6],[272,6],[279,6],[286,3],[291,6],[298,7]]},"1145":{"position":[[0,7],[8,4],[13,6],[23,3],[29,4],[40,15],[56,7],[64,1],[66,3],[70,2],[73,5],[79,3],[83,9],[93,7],[101,7],[109,8],[118,4],[123,15],[139,6],[148,5],[156,6],[163,13],[177,4],[183,18],[202,12],[215,4],[220,6],[234,18],[253,10],[264,1],[266,7],[274,2],[277,6],[284,3],[288,5],[294,4],[299,18],[318,6],[327,8],[338,6],[345,8],[354,4],[359,5],[370,18],[389,7],[397,3],[401,6],[408,1],[410,3],[414,15],[430,4],[435,18],[457,15],[475,3],[483,15],[500,5],[509,6],[519,13],[534,4],[539,4],[545,18],[566,12],[580,4],[585,4],[590,6],[603,2],[606,3],[610,15],[628,6],[635,3],[644,11],[656,6],[663,7],[671,3],[675,5],[681,2],[684,7],[692,1],[694,7],[702,7],[710,3],[714,7],[722,4],[728,1],[731,15],[748,11],[760,8],[771,6],[779,5],[787,3],[795,18],[815,8],[825,8],[835,8],[845,4],[850,4],[855,5],[862,1],[869,8],[878,2],[881,5],[887,8],[898,1],[900,13],[917,3],[921,6],[930,3],[934,8],[948,8],[957,10],[968,5],[974,3],[978,10],[989,4],[995,1],[998,15],[1015,8],[1028,5],[1034,1],[1036,12],[1055,15],[1071,7],[1079,8],[1088,8],[1097,2],[1100,1],[1102,6],[1109,4],[1114,6],[1121,4],[1127,1],[1130,15],[1147,15],[1167,3],[1173,6],[1182,4],[1187,3],[1196,1],[1198,13],[1213,1],[1215,5],[1223,3],[1227,8],[1236,3],[1240,7],[1249,7],[1257,5],[1266,1],[1268,5],[1275,3],[1279,8],[1291,3],[1295,4],[1302,1],[1304,12],[1318,3],[1322,7],[1331,8],[1340,4],[1345,10],[1358,6],[1371,4],[1376,4],[1388,6],[1395,3],[1399,5],[1405,3],[1409,10],[1420,10],[1434,18],[1455,5],[1461,10],[1472,8],[1486,8],[1495,4],[1500,7],[1508,2],[1511,4],[1520,4],[1525,5],[1531,3],[1537,4],[1542,11],[1555,2],[1558,3],[1565,10],[1576,11],[1590,6],[1598,1],[1603,1],[1608,1],[1614,3],[1621,3],[1627,3],[1631,7],[1640,5],[1646,8],[1655,5],[1664,3],[1675,2],[1678,4],[1687,4],[1692,5],[1698,1],[1702,4],[1707,6],[1715,2],[1718,3],[1725,10],[1736,11],[1750,6],[1758,1],[1763,1],[1768,1],[1774,3],[1781,3],[1787,3],[1791,7],[1800,5],[1806,8],[1815,5],[1824,3],[1838,4],[1843,4],[1848,3],[1852,3],[1856,7],[1864,2],[1867,7],[1875,4],[1880,5],[1886,1],[1890,4],[1895,6],[1919,7],[1948,10],[1978,7],[2006,12],[2039,7],[2047,4],[2052,6],[2062,7],[2072,6],[2081,3],[2087,4],[2094,4],[2105,7],[2113,10],[2124,1],[2126,10],[2137,2],[2140,5],[2146,4],[2151,8],[2160,4],[2165,7],[2173,6],[2182,5],[2190,6],[2197,7],[2205,3],[2212,5],[2218,7],[2226,4],[2231,4],[2236,8],[2245,4],[2250,4],[2258,4],[2263,6],[2270,9],[2285,15],[2301,12],[2314,1],[2316,5],[2322,6],[2329,9],[2339,4],[2344,15],[2360,6],[2369,8],[2380,6],[2387,8],[2396,4],[2401,5],[2407,9],[2417,6],[2427,3],[2431,7],[2439,9],[2449,4],[2454,4],[2462,3],[2466,8],[2480,17],[2498,10],[2509,10],[2520,8],[2529,4],[2534,17],[2552,6],[2561,18],[2580,3],[2587,6],[2594,4],[2599,3],[2603,8],[2612,14],[2627,4],[2632,8],[2644,7],[2652,3],[2656,4],[2661,7],[2669,16],[2686,4],[2694,6],[2702,8],[2711,5],[2717,6],[2724,8],[2738,10],[2749,7],[2757,4],[2762,4],[2767,4],[2772,6],[2779,4],[2784,10],[2795,4],[2800,10],[2811,6],[2820,14],[2835,7],[2843,7],[2851,17],[2869,11],[2881,4],[2887,15],[2903,9],[2913,4],[2918,4],[2923,7],[2934,3],[2938,7],[2946,3],[2950,4],[2955,4],[2960,7],[2968,11],[2980,4],[2985,4],[2995,7],[3003,7],[3011,7],[3019,3],[3023,6],[3030,10],[3041,8],[3050,4],[3055,6],[3064,12],[3077,4],[3082,4],[3087,6],[3094,4],[3099,9],[3114,13],[3128,7],[3136,1],[3138,10],[3149,10],[3160,8],[3169,4],[3174,13],[3188,4],[3193,17],[3213,10],[3226,2],[3229,4],[3234,18],[3256,1],[3260,4],[3265,18],[3286,2],[3291,2],[3294,4],[3299,14],[3317,1],[3321,4],[3326,14],[3343,1],[3347,4],[3352,6],[3361,6],[3369,10],[3381,14],[3397,7],[3405,7],[3414,1],[3418,7],[3427,4],[3433,11],[3446,4],[3451,4],[3457,15],[3474,4],[3479,18],[3500,9],[3511,4],[3516,4],[3521,4],[3526,7],[3536,11],[3549,4],[3554,4],[3559,4],[3568,8],[3578,4],[3583,4],[3588,6],[3606,3],[3610,6],[3617,3],[3621,10],[3632,1],[3634,10],[3645,4],[3650,4],[3656,1],[3659,10],[3671,3],[3679,1],[3681,6],[3688,3],[3692,1],[3695,5],[3701,1],[3703,6],[3710,4],[3717,3],[3723,6],[3732,4],[3737,3],[3746,1],[3748,11],[3761,1],[3763,14],[3778,3],[3783,4],[3788,8],[3802,1],[3804,9],[3815,1],[3817,14],[3832,8],[3842,4],[3847,3],[3856,1],[3858,11],[3871,3],[3880,7],[3888,9],[3898,8],[3907,4],[3914,1],[3916,8],[3926,6],[3939,4],[3945,1],[3948,10],[3960,14],[3975,3],[3980,15],[3999,5],[4005,5],[4011,3],[4015,8],[4028,6],[4036,5],[4042,3],[4046,10],[4057,4],[4062,2],[4065,1],[4067,7],[4075,16],[4097,8],[4106,5],[4112,6],[4119,8],[4130,1],[4132,14],[4149,7],[4158,5],[4165,3],[4169,8],[4179,7],[4188,1],[4190,14],[4205,7],[4215,1],[4218,8],[4228,4],[4233,3],[4242,3],[4246,6],[4254,7],[4262,5],[4269,1],[4271,1],[4276,1],[4278,1],[4282,1],[4284,14],[4299,7],[4308,1],[4310,14],[4325,5],[4332,3],[4336,8],[4348,3],[4354,4],[4360,1],[4363,10],[4375,14],[4390,8],[4399,4],[4404,7],[4415,8],[4427,1],[4429,14],[4444,5],[4450,8],[4465,8],[4474,7],[4482,3],[4486,4],[4491,3],[4495,4],[4500,7],[4508,7],[4516,4],[4522,1],[4525,10],[4537,8],[4546,3],[4550,7],[4558,7],[4567,5],[4575,6],[4583,5],[4591,3],[4599,15],[4616,8],[4626,5],[4633,8],[4643,4],[4648,4],[4653,5],[4661,9],[4672,3],[4676,7],[4685,3],[4690,1],[4694,4],[4699,3],[4705,8],[4718,9],[4729,4],[4734,3],[4743,6],[4752,4],[4757,1],[4759,11],[4774,3],[4779,6],[4788,4],[4793,3],[4802,3],[4806,8],[4816,6],[4823,3],[4827,4],[4834,3],[4838,4],[4846,6],[4853,3],[4857,3],[4865,4],[4872,1],[4874,8],[4884,6],[4891,6],[4898,3],[4903,10],[4914,2],[4917,8],[4926,4],[4933,4],[4940,3],[4944,4],[4952,6],[4959,3],[4963,3],[4976,8],[4985,6],[4992,9],[5002,3],[5006,7],[5014,4],[5019,3],[5023,4],[5029,1],[5032,10],[5044,8],[5053,3],[5057,7],[5065,7],[5075,7],[5084,5],[5093,8],[5105,4],[5110,4],[5115,7],[5124,6],[5133,4],[5138,1],[5140,9],[5153,8],[5163,6],[5172,4],[5177,5],[5188,8],[5198,6],[5205,5],[5212,3],[5216,4],[5223,3],[5227,4],[5235,6],[5242,7],[5253,3],[5257,3],[5265,4],[5272,1],[5274,8],[5284,6],[5291,7],[5302,6],[5309,3],[5314,10],[5325,2],[5328,8],[5337,4],[5344,4],[5351,3],[5355,4],[5363,6],[5370,7],[5381,3],[5385,3],[5398,4],[5403,10],[5414,5],[5420,4],[5425,3],[5429,10],[5440,4],[5446,1],[5449,10],[5461,4],[5470,1],[5472,12],[5485,2],[5488,4],[5497,5],[5503,1],[5505,8],[5515,1],[5517,6],[5524,4],[5531,5],[5537,1],[5539,11],[5552,5],[5558,1],[5560,9],[5571,5],[5577,1],[5579,11],[5592,3],[5596,7],[5605,10],[5616,7],[5624,10],[5645,14],[5660,8],[5669,9],[5679,5],[5685,3],[5689,6],[5696,10],[5707,4],[5713,1],[5716,10],[5728,14],[5743,3],[5747,7],[5755,7],[5764,3],[5768,4],[5776,5],[5784,6],[5793,4],[5798,1],[5800,11],[5815,3],[5820,6],[5827,3],[5831,4],[5838,1],[5840,8],[5850,6],[5857,6],[5864,3],[5869,10],[5880,2],[5883,8],[5892,4],[5899,4],[5906,3],[5910,4],[5918,6],[5925,3],[5929,3],[5939,4],[5944,4],[5956,12],[5969,7],[5977,4],[5985,17],[6004,18],[6024,2],[6028,14],[6044,1],[6048,4],[6053,6],[6061,16],[6079,5],[6089,5],[6095,2],[6098,7],[6106,2],[6109,6],[6118,10],[6132,13],[6146,4],[6152,2],[6155,10],[6166,3],[6175,7],[6183,5],[6189,4],[6194,7],[6202,3],[6207,6],[6217,7],[6225,11],[6237,7],[6245,10],[6259,1],[6261,4],[6266,6],[6274,5],[6280,6],[6292,3],[6296,5],[6302,3],[6309,10],[6320,8],[6329,3],[6336,6],[6344,1],[6349,1],[6354,1],[6359,2],[6362,3],[6369,3],[6375,3],[6379,7],[6388,5],[6394,7],[6402,5],[6411,3],[6421,3],[6425,5],[6431,5],[6438,3],[6445,10],[6456,8],[6465,3],[6470,2],[6473,3],[6480,3],[6486,3],[6490,7],[6499,5],[6505,7],[6513,5],[6522,3],[6529,4],[6536,3],[6540,6],[6548,7],[6556,5],[6563,1],[6565,1],[6570,1],[6572,1],[6576,5],[6582,7],[6591,5],[6597,5],[6609,7],[6617,6],[6624,7],[6632,10],[6643,14],[6658,3],[6663,4],[6672,3],[6676,7],[6685,9],[6695,6],[6702,7],[6715,10],[6726,4],[6735,8],[6744,4],[6749,8],[6759,5],[6765,7],[6773,6],[6780,4],[6785,10],[6796,3],[6800,10],[6811,8],[6820,5],[6826,6],[6833,3],[6837,6],[6844,8],[6853,12],[6866,7],[6875,17],[6893,6],[6900,6],[6907,7],[6915,4],[6920,7],[6928,8],[6937,6],[6944,8],[6953,4],[6958,10],[6969,8],[6978,13],[6992,8],[7002,8],[7011,8],[7020,3],[7024,8],[7034,11],[7047,3],[7051,7],[7060,9],[7071,8],[7080,6],[7087,2],[7090,9],[7100,5],[7106,7],[7114,7],[7123,3],[7127,10],[7138,7],[7146,7],[7154,3],[7158,8],[7167,12],[7180,6],[7187,11],[7199,4],[7204,6],[7211,2],[7214,12],[7227,9],[7237,6],[7245,14],[7260,6],[7267,3],[7271,6],[7278,6],[7285,13],[7299,7],[7307,7],[7315,7],[7323,7],[7331,8],[7340,8],[7350,4],[7355,4],[7360,7],[7368,4],[7373,6],[7380,8],[7389,4],[7394,9],[7404,3],[7408,6],[7415,9],[7425,7],[7433,6],[7440,4],[7445,7],[7454,5],[7460,4],[7465,8],[7474,6],[7481,3],[7485,7],[7493,2],[7496,6],[7503,6],[7510,2],[7513,8],[7522,5],[7528,7],[7536,7],[7545,5],[7551,7],[7559,3],[7563,3],[7567,9],[7577,10],[7588,3],[7592,3],[7596,10],[7616,7],[7624,4],[7629,6],[7639,7],[7649,6],[7658,3],[7664,4],[7671,4],[7682,7],[7690,7],[7698,3],[7702,9],[7712,3],[7716,8],[7725,4],[7730,9],[7740,4],[7745,7],[7753,9],[7765,7],[7773,3],[7777,7],[7785,7],[7794,5],[7805,14],[7820,9],[7830,8],[7839,4],[7844,14],[7859,6],[7868,8],[7877,4],[7882,7],[7890,8],[7899,4],[7904,6],[7913,2],[7916,4],[7921,9],[7936,17],[7954,7],[7962,1],[7964,3],[7968,7],[7976,4],[7981,9],[7991,5],[7997,4],[8002,4],[8007,17],[8025,9],[8035,3],[8041,14],[8058,6],[8066,14],[8082,8],[8092,4],[8097,4],[8102,7],[8111,9],[8123,8],[8133,4],[8138,4],[8143,6],[8161,5],[8167,6],[8174,10],[8185,8],[8194,4],[8200,1],[8203,14],[8219,5],[8229,1],[8231,2],[8234,3],[8238,1],[8241,2],[8244,4],[8253,5],[8259,1],[8261,2],[8264,4],[8271,3],[8277,6],[8286,4],[8291,3],[8300,1],[8302,8],[8312,3],[8317,6],[8327,7],[8335,11],[8347,7],[8355,10],[8369,1],[8371,4],[8376,6],[8384,3],[8391,3],[8395,7],[8403,3],[8408,6],[8417,2],[8420,3],[8427,3],[8433,3],[8437,6],[8445,7],[8453,9],[8463,6],[8472,1],[8474,1],[8478,3],[8485,4],[8492,1],[8494,8],[8504,6],[8524,6],[8531,5],[8537,1],[8539,7],[8547,3],[8551,9],[8561,4],[8567,1],[8570,14],[8586,6],[8593,3],[8597,7],[8605,7],[8614,3],[8618,7],[8627,5],[8635,6],[8644,4],[8649,1],[8651,8],[8663,3],[8668,6],[8675,3],[8679,4],[8686,1],[8688,8],[8698,6],[8705,6],[8712,3],[8717,7],[8725,2],[8728,8],[8737,4],[8744,4],[8751,3],[8755,4],[8763,6],[8770,3],[8774,3],[8787,4],[8792,10],[8803,5],[8809,4],[8814,3],[8818,7],[8826,4],[8832,1],[8835,14],[8851,4],[8860,5],[8866,1],[8868,8],[8878,1],[8880,2],[8883,4],[8890,5],[8896,1],[8898,8],[8917,8],[8926,8],[8942,15],[8958,10],[8969,7],[8977,3],[8981,4],[8986,7],[8994,4],[8999,15],[9015,6],[9024,10],[9036,10],[9047,8],[9058,6],[9067,4],[9073,1],[9076,15],[9093,7],[9101,3],[9105,7],[9113,7],[9122,5],[9130,6],[9137,1],[9139,10],[9150,8],[9159,3],[9164,1],[9166,8],[9181,15],[9197,10],[9208,7],[9216,3],[9220,4],[9225,7],[9233,4],[9238,15],[9254,6],[9263,10],[9275,10],[9286,10],[9297,4],[9304,7],[9314,4],[9320,1],[9323,15],[9340,7],[9348,3],[9352,7],[9360,7],[9369,5],[9377,5],[9384,3],[9391,1],[9393,10],[9404,8],[9413,3],[9418,2],[9421,3],[9428,3],[9434,6],[9441,3],[9447,1],[9449,10],[9463,5],[9469,6],[9476,3],[9489,10],[9500,14],[9519,4],[9524,7],[9532,6],[9541,5],[9549,6],[9556,7],[9564,3],[9568,8],[9577,4],[9582,4],[9589,4],[9594,10],[9605,6],[9614,2],[9617,4],[9622,5],[9628,11],[9640,7],[9650,4],[9656,1],[9659,10],[9671,8],[9680,3],[9684,7],[9692,7],[9701,5],[9709,6],[9717,5],[9725,1],[9727,2],[9730,4],[9737,5],[9743,1],[9745,2],[9748,6],[9757,6],[9766,4],[9773,3],[9777,4],[9785,6],[9792,3],[9796,3],[9802,7],[9811,1],[9813,11],[9827,7],[9836,5],[9843,5],[9850,7],[9859,1],[9861,11],[9873,7],[9883,1],[9886,8],[9896,4],[9901,3],[9910,3],[9914,6],[9922,5],[9928,7],[9936,2],[9939,7],[9948,1],[9950,1],[9954,1],[9956,11],[9968,7],[9977,6],[9984,3],[9992,4],[9998,1],[10001,10],[10013,8],[10022,3],[10026,7],[10034,7],[10044,7],[10053,5],[10062,1],[10064,2],[10067,4],[10074,5],[10080,1],[10082,2],[10085,6],[10094,6],[10103,4],[10110,3],[10114,4],[10122,6],[10129,7],[10140,3],[10144,3],[10150,7],[10159,6],[10166,1],[10168,11],[10181,3],[10196,5],[10202,7],[10214,4],[10219,4],[10231,6],[10238,10],[10249,7],[10260,17],[10278,2],[10282,10],[10297,10],[10309,11],[10322,7],[10330,7],[10339,1],[10348,5],[10354,7],[10362,9],[10372,7],[10380,5],[10388,5],[10394,7],[10402,4],[10412,6],[10419,8],[10428,3],[10435,7],[10443,10],[10459,3],[10463,5],[10469,7],[10477,6],[10488,15],[10505,10],[10517,10],[10529,8],[10541,6],[10549,1],[10554,1],[10559,1],[10566,7],[10574,6],[10581,3],[10586,6],[10597,3],[10601,5],[10607,7],[10615,10],[10629,4],[10634,4],[10639,7],[10648,1],[10651,6],[10662,15],[10679,10],[10691,10],[10703,10],[10715,10],[10729,7],[10737,6],[10744,3],[10749,6],[10760,4],[10765,3],[10769,6],[10776,6],[10785,4],[10790,5],[10801,10],[10813,3],[10817,6],[10825,7],[10833,5],[10841,1],[10843,1],[10847,5],[10853,5],[10860,4],[10867,4],[10872,5],[10878,1],[10882,4],[10887,6],[10896,3],[10900,7],[10909,7],[10917,7],[10925,3],[10929,5],[10941,3],[10945,7],[10953,7],[10961,7],[10969,2],[10972,1],[10974,10],[10985,6],[10992,7],[11000,4],[11005,12],[11018,8],[11027,2],[11030,7],[11039,8],[11048,3],[11052,16],[11069,2],[11072,7],[11080,4],[11085,9],[11095,8],[11105,7],[11113,2],[11116,8],[11126,3],[11130,7],[11138,3],[11142,8],[11151,10],[11163,4],[11168,1],[11170,3],[11174,2],[11177,9],[11187,2],[11190,2],[11193,4],[11198,10],[11210,4],[11215,10],[11226,7],[11234,9],[11245,7],[11253,3],[11257,9],[11267,8],[11276,8],[11285,8],[11295,11],[11307,8],[11316,7],[11324,3],[11328,10],[11339,7],[11348,8],[11357,3],[11361,8],[11370,8],[11379,8],[11389,5],[11395,3],[11399,2],[11402,7],[11410,3],[11414,10],[11425,3],[11429,8],[11438,7],[11446,9],[11457,4],[11462,7],[11470,9],[11482,7],[11490,3],[11494,7],[11502,7],[11511,5],[11519,8],[11528,8],[11538,4],[11543,7],[11551,12],[11564,3],[11568,10],[11579,6],[11586,3],[11590,9],[11600,8],[11609,3],[11613,2],[11616,10],[11627,12],[11640,3],[11644,11],[11656,7],[11664,7],[11672,7],[11681,7],[11689,1],[11691,5],[11697,2],[11700,8],[11709,9],[11719,8],[11728,12],[11741,2],[11744,1],[11746,9],[11756,8],[11765,8],[11774,8],[11783,8],[11793,10],[11805,9],[11815,7],[11823,8],[11832,4],[11837,9],[11847,13],[11862,4],[11867,2],[11870,3],[11874,3],[11878,7],[11886,5],[11892,13],[11907,8],[11916,3],[11920,2],[11923,8],[11932,4],[11937,6],[11944,4],[11949,4],[11955,3],[11959,2],[11962,8],[11971,2],[11974,7],[11982,7],[11990,7],[11998,8],[12007,10],[12018,7],[12026,10],[12038,4],[12043,17],[12061,4],[12066,7],[12075,7],[12083,4],[12088,17],[12106,4],[12111,7],[12120,7],[12130,6],[12138,13],[12152,4],[12160,11],[12172,7],[12181,4],[12186,18],[12205,6],[12214,8],[12225,7],[12235,4],[12241,1],[12244,18],[12264,7],[12272,3],[12276,7],[12284,7],[12293,5],[12304,7],[12312,3],[12316,2],[12319,7],[12329,8],[12338,8],[12348,4],[12353,15],[12369,6],[12378,7],[12386,8],[12395,3],[12404,3],[12408,8],[12417,5],[12423,7],[12431,2],[12434,7]]},"1147":{"position":[[16,3],[20,11],[34,6],[41,4],[46,11],[58,5],[66,6],[76,11],[90,5]]},"1149":{"position":[[0,6],[7,5],[27,5],[77,2],[82,7],[92,9],[106,6],[113,5]]},"1155":{"position":[[9,5],[17,4],[22,7],[30,4],[35,5],[41,7],[56,5],[65,6],[72,6],[79,2],[85,5],[100,4],[105,5],[111,6],[120,4],[125,3],[132,1],[140,1],[147,7],[155,6],[170,4],[175,6],[195,5],[217,4],[222,5],[228,6],[237,2],[240,6],[247,4],[252,6],[259,4],[264,6],[271,7],[279,6],[299,4],[304,5],[319,7],[327,4],[332,5],[349,9],[359,3],[370,6],[395,5],[404,6],[411,6],[418,2],[424,7],[457,6],[471,4],[476,7],[484,9],[496,5],[504,5],[510,4],[517,5],[523,4],[530,6],[537,6],[544,5],[551,5],[559,6],[579,6],[623,9],[635,6],[642,4],[648,1],[651,6],[659,6],[666,3],[670,7],[678,7],[689,3],[695,6],[704,4],[711,3],[715,4],[723,6],[730,4],[735,3],[744,1],[746,7],[755,3],[759,6],[768,6],[776,5],[782,4],[788,1],[794,1],[796,1],[800,3],[804,4],[810,3],[814,7],[830,6],[840,2],[843,3],[847,2],[858,2],[861,3],[865,7],[876,3],[882,3],[886,7],[897,5],[903,4],[909,1],[912,7],[922,7],[930,2],[933,6],[942,4],[949,2],[956,8],[978,1],[980,2],[983,5],[991,3],[996,2],[1002,1],[1004,8],[1013,3],[1017,2],[1021,1],[1023,2],[1026,7],[1036,2],[1040,2],[1045,2],[1048,3],[1052,7],[1063,3],[1069,3],[1073,7],[1084,5],[1090,4],[1096,3],[1101,7],[1111,7],[1119,3],[1123,5],[1131,4],[1143,8],[1170,2],[1173,4],[1178,1],[1180,7],[1189,1],[1191,5],[1200,6],[1210,1],[1212,6],[1219,1],[1222,2],[1225,1],[1227,7],[1238,3],[1244,6],[1253,4],[1258,1],[1260,7],[1271,6],[1279,4],[1286,4],[1291,5],[1297,4],[1302,8],[1311,1],[1313,9],[1326,4],[1331,11],[1345,1],[1347,7],[1358,5],[1364,4],[1370,3],[1375,7],[1385,7],[1395,4],[1411,3],[1416,3]]},"1157":{"position":[[2,5],[12,4],[26,4],[32,1],[35,10],[47,3],[55,3],[59,5],[67,1],[69,3],[75,5],[83,6],[92,4],[99,1],[101,6],[109,6],[116,4],[121,3],[130,1],[132,5],[139,3],[143,6],[153,1],[156,3],[162,1],[164,1],[168,1],[170,4],[176,3],[194,7],[205,4],[210,4],[215,6],[222,5],[229,1],[232,2],[235,5],[241,1],[246,1],[250,1],[252,6],[259,4],[264,6],[271,5],[278,4],[284,1],[286,4],[292,4],[299,3],[305,7],[314,3],[319,7],[328,7],[337,9],[348,4],[359,4],[366,1],[368,6],[375,4],[380,6],[387,5],[394,4],[400,1],[402,4],[408,4],[415,3],[421,2],[426,4],[433,7],[442,3],[447,7],[456,7],[465,9],[476,4],[497,5],[508,7],[516,3],[520,6],[530,1],[533,3],[537,5],[543,4],[548,6],[557,1],[559,1],[563,1],[565,4],[573,5],[579,7]]},"1159":{"position":[[0,4],[6,1],[9,11],[22,6],[29,3],[33,6],[40,5],[47,6],[54,5],[62,6],[69,6],[76,5],[82,4],[88,1],[91,7],[101,4],[106,7],[114,7],[124,4],[130,3],[134,7],[143,4],[149,1],[153,1],[157,3],[161,4],[167,3],[171,7]]},"1161":{"position":[[0,10],[12,6],[29,10],[41,4],[47,6],[55,8],[68,4],[74,8],[87,6],[95,3],[100,5],[107,11],[121,6],[129,5],[135,4],[140,6],[150,5],[157,11],[171,6],[179,3],[183,5],[189,4],[194,6],[202,7],[210,2],[213,6],[221,6],[229,3],[234,5],[241,4],[248,6],[256,5],[262,4],[267,6],[277,5],[284,4],[295,11],[311,6],[319,3],[323,5],[329,4],[334,6],[342,4],[347,7],[355,7],[364,6],[372,4],[377,5],[383,2],[386,6],[394,5],[401,3],[407,6],[415,3],[419,6],[426,6],[433,5],[440,5],[447,3],[453,6],[461,8],[474,4],[480,8]]},"1167":{"position":[[16,6],[23,7],[31,2],[37,12],[60,4],[65,12],[78,3],[87,4],[104,5],[112,7],[120,12],[135,4],[140,7],[148,7],[161,12],[174,6],[183,4],[189,1],[191,12],[205,6],[214,6],[261,6],[273,6],[281,7],[292,7],[303,7],[313,1],[321,11],[344,4],[349,11],[361,6],[370,3],[374,7],[382,5],[388,12],[413,6],[420,6],[427,2],[430,4],[436,1],[439,11],[452,12],[465,4],[470,6],[478,5],[486,1],[488,2],[491,4],[498,5],[504,1],[506,2],[509,6],[518,4],[524,2],[530,1],[532,8],[541,4],[547,2],[551,2],[556,6],[563,6],[570,3],[575,7],[583,3],[587,10],[602,2],[605,4],[610,5],[619,7],[629,6],[636,6],[643,3],[648,7],[656,7],[664,7],[676,2],[679,3],[686,4],[691,3],[695,5],[704,3],[711,3],[717,6],[724,3],[730,4],[735,5],[743,7],[751,3],[755,7],[764,7],[775,4],[780,3],[784,4],[792,6],[799,3],[805,4],[811,1],[814,11],[827,11],[839,4],[844,6],[852,5],[860,1],[862,2],[865,4],[872,5],[878,1],[880,2],[883,6],[892,4],[898,2],[904,1],[906,8],[915,4],[921,2],[925,2],[930,6],[937,6],[944,3],[949,7],[957,3],[961,10],[976,2],[979,4],[984,5],[993,7],[1003,6],[1010,6],[1017,3],[1022,7],[1030,7],[1038,7],[1050,2],[1053,3],[1060,4],[1065,3],[1069,4],[1077,3],[1084,3],[1090,6],[1097,3],[1103,4],[1108,5],[1116,7],[1124,3],[1128,7],[1137,7],[1148,4],[1153,3],[1157,4],[1165,6],[1172,3],[1178,6],[1211,6],[1255,9],[1267,6],[1274,4],[1280,1],[1283,11],[1296,6],[1303,3],[1307,7],[1315,7],[1326,3],[1332,6],[1341,4],[1348,3],[1352,4],[1360,6],[1367,4],[1372,3],[1381,1],[1383,7],[1392,3],[1396,6],[1405,11],[1418,5],[1424,4],[1430,1],[1436,1],[1438,1],[1442,3],[1446,4],[1452,3],[1456,7],[1472,11],[1487,2],[1490,3],[1494,2],[1505,2],[1508,3],[1512,7],[1523,3],[1529,3],[1533,7],[1544,5],[1550,4],[1556,1],[1559,7],[1569,7],[1577,2],[1580,6],[1589,4],[1596,2],[1603,8],[1625,1],[1627,2],[1630,5],[1638,4],[1644,2],[1650,1],[1652,8],[1661,3],[1665,2],[1669,1],[1671,2],[1674,7],[1684,2],[1688,2],[1694,4],[1699,5],[1708,7],[1718,2],[1721,3],[1725,7],[1736,3],[1742,3],[1746,7],[1757,5],[1763,4],[1769,3],[1774,7],[1784,7],[1792,11],[1806,4],[1818,8],[1845,2],[1848,4],[1853,1],[1855,7],[1864,1],[1866,5],[1875,6],[1885,1],[1887,6],[1894,1],[1897,2],[1900,1],[1902,7],[1913,3],[1919,6],[1928,4],[1933,1],[1935,7],[1946,6],[1954,4],[1961,4],[1966,5],[1972,4],[1977,8],[1986,1],[1988,9],[2001,4],[2006,11],[2020,1],[2022,7],[2033,5],[2039,4],[2045,3],[2050,7],[2060,7],[2070,4],[2086,4],[2091,3],[2096,3]]},"1169":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[62,6],[70,8],[83,4],[89,8],[102,6],[110,3],[115,5],[122,11],[136,11],[149,5],[155,4],[160,6],[170,5],[177,11],[191,6],[199,3],[203,5],[209,4],[214,6],[222,7],[230,2],[233,6],[241,6],[249,3],[254,5],[261,4],[268,11],[281,5],[287,4],[292,6],[302,5],[309,4],[316,6],[324,3],[328,5],[334,4],[339,6],[347,4],[352,7],[360,7],[369,11],[382,4],[387,5],[393,2],[396,7],[405,5],[412,3],[418,3],[422,3],[426,5],[432,7],[443,6],[451,8],[464,4],[470,8]]},"1175":{"position":[[21,6],[28,7],[36,2],[42,7],[75,6],[89,4],[94,7],[102,9],[114,5],[122,5],[128,4],[135,5],[141,4],[148,6],[155,6],[162,5],[169,5],[178,12],[200,12],[217,6],[237,11],[260,4],[265,11],[277,6],[286,3],[290,7],[298,5],[304,12],[336,3],[340,12],[353,4],[360,6],[371,8],[381,4],[389,6],[396,6],[403,2],[409,8],[430,15],[448,8],[457,4],[463,1],[466,11],[479,8],[488,3],[492,7],[501,5],[509,1],[511,2],[514,4],[521,5],[527,1],[529,2],[532,6],[541,4],[549,3],[553,4],[560,2],[563,1],[566,2],[572,1],[574,8],[583,4],[590,2],[595,6],[602,6],[609,3],[614,7],[622,7],[630,10],[645,1],[647,8],[656,4],[665,11],[678,3],[683,3],[688,5],[695,7],[704,4],[710,3],[714,12],[732,3],[736,7],[745,10],[759,3],[763,4],[771,6],[778,3],[803,6],[810,6],[817,2],[820,4],[826,1],[829,11],[842,8],[856,6],[864,5],[873,1],[875,2],[878,5],[886,5],[892,1],[894,2],[897,7],[907,7],[918,4],[923,3],[927,6],[934,4],[940,4],[948,4],[953,3],[957,6],[964,4],[970,6],[982,6],[991,3],[995,5],[1001,4],[1006,6],[1014,5],[1020,5],[1028,4],[1033,4],[1038,6],[1046,5],[1054,2],[1057,4],[1062,4],[1070,6],[1077,3],[1081,6],[1089,8],[1098,10],[1109,2],[1113,1],[1117,4],[1125,2],[1128,7],[1136,4],[1144,6],[1151,3],[1157,4],[1162,4],[1170,4],[1175,4],[1181,2],[1187,1],[1189,8],[1198,4],[1204,2],[1208,2],[1213,6],[1220,3],[1224,6],[1232,7],[1241,1],[1243,3],[1247,10],[1260,4],[1268,3],[1272,1],[1275,3],[1282,5],[1288,4],[1293,4],[1300,2],[1303,3],[1310,5],[1316,3],[1322,3],[1329,3],[1335,6],[1342,3],[1350,7],[1358,4],[1366,4],[1371,4],[1376,4],[1384,5],[1390,6],[1399,6],[1406,6],[1414,4],[1420,6],[1427,3],[1433,3],[1437,4],[1445,5],[1451,1],[1453,8],[1464,2],[1468,7],[1476,4],[1484,2],[1487,3],[1494,5],[1500,4],[1507,3],[1514,3],[1520,6],[1527,3],[1532,3],[1542,6],[1549,6],[1557,3],[1563,4],[1569,1],[1572,11],[1585,8],[1596,5],[1604,6],[1612,3],[1619,1],[1621,8],[1639,3],[1643,1],[1646,4],[1654,5],[1660,6],[1669,2],[1672,3],[1679,1],[1681,12],[1694,4],[1701,3],[1708,3],[1725,6],[1732,3]]},"1177":{"position":[[11,4],[17,1],[20,10],[32,12],[49,6],[58,6],[67,6],[75,4]]},"1179":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,7],[459,5],[466,3],[472,3],[476,3],[480,5],[486,7],[496,8],[505,3],[509,8],[522,6],[530,8],[542,7],[551,6],[559,4],[565,8],[577,7],[586,4]]},"1182":{"position":[[37,4],[42,4],[47,5],[67,6],[83,3]]},"1185":{"position":[[2,14],[28,6],[35,6],[42,2],[45,4],[51,1],[54,11],[67,14],[82,6],[89,7],[98,5],[106,1],[108,2],[111,4],[118,5],[124,1],[126,2],[129,6],[138,4],[146,6],[153,4],[160,7],[169,6],[179,1],[181,8],[190,4],[196,2],[199,6],[209,7],[217,5],[226,7],[245,7],[253,3],[257,4],[264,3],[268,6],[276,7],[284,3],[288,7],[296,2],[300,1],[302,1],[306,4],[330,1],[332,8],[341,4],[350,11],[363,3],[368,6],[376,4],[382,6],[389,12],[405,5],[412,7],[440,2],[443,6],[453,7],[461,5],[470,7],[480,6],[487,5],[495,1],[497,8],[506,4],[512,5],[520,7],[528,3],[532,6],[540,7],[548,3],[552,7],[560,2],[564,1],[566,1],[570,4],[578,4],[585,3],[589,6],[597,10],[608,3],[612,7],[620,2],[624,1],[627,3],[631,7],[640,1],[644,4],[652,6],[659,3],[667,8],[677,4],[685,6],[692,6],[699,2],[705,8],[726,15],[744,8],[753,4],[759,1],[762,11],[775,8],[784,3],[788,7],[797,5],[805,1],[807,2],[810,4],[817,5],[823,1],[825,2],[828,6],[837,4],[845,3],[849,4],[856,2],[859,1],[862,2],[868,1],[870,8],[879,4],[886,2],[891,6],[898,6],[905,3],[910,7],[918,7],[926,10],[941,1],[943,8],[952,4],[961,11],[974,3],[979,3],[984,5],[991,7],[1000,4],[1006,3],[1010,12],[1028,3],[1032,7],[1041,10],[1055,3],[1059,4],[1067,6],[1074,3],[1099,6],[1106,6],[1113,2],[1116,4],[1122,1],[1125,11],[1138,8],[1152,6],[1160,5],[1169,1],[1171,2],[1174,5],[1182,5],[1188,1],[1190,2],[1193,7],[1203,7],[1214,4],[1219,3],[1223,6],[1230,4],[1236,4],[1244,4],[1249,3],[1253,6],[1260,4],[1266,6],[1278,6],[1287,3],[1291,5],[1297,4],[1302,6],[1310,5],[1316,5],[1324,4],[1329,4],[1334,6],[1342,5],[1350,2],[1353,4],[1358,4],[1366,6],[1373,3],[1377,6],[1385,8],[1394,10],[1405,2],[1409,1],[1413,4],[1421,2],[1424,7],[1432,4],[1440,6],[1447,3],[1453,4],[1458,4],[1466,4],[1471,4],[1477,2],[1483,1],[1485,8],[1494,4],[1500,2],[1504,2],[1509,6],[1516,3],[1520,6],[1528,7],[1537,1],[1539,3],[1543,10],[1556,4],[1564,3],[1568,1],[1571,3],[1578,5],[1584,4],[1589,4],[1596,2],[1599,3],[1606,5],[1612,3],[1618,3],[1625,3],[1631,6],[1638,3],[1646,7],[1654,4],[1662,4],[1667,4],[1672,4],[1680,5],[1686,6],[1695,6],[1702,6],[1710,4],[1716,6],[1723,3],[1729,3],[1733,4],[1741,5],[1747,1],[1749,8],[1760,2],[1764,7],[1772,4],[1780,2],[1783,3],[1790,5],[1796,4],[1803,3],[1810,3],[1816,6],[1823,3],[1828,3],[1838,6],[1845,6],[1853,3],[1859,4],[1865,1],[1868,11],[1881,8],[1892,5],[1900,6],[1908,3],[1915,1],[1917,8],[1935,3],[1939,1],[1942,4],[1950,5],[1956,6],[1965,2],[1968,3],[1975,1],[1977,12],[1990,4],[1997,3],[2004,3],[2021,6],[2028,3]]},"1187":{"position":[[7,4],[12,8],[21,3],[25,5],[33,4],[38,8],[49,4],[54,4],[59,5],[67,4],[72,6],[79,6],[88,2],[91,4],[96,5],[102,5],[108,8],[117,7],[125,6],[132,3],[136,2],[139,6],[153,4],[158,9],[168,7],[176,6],[184,5],[190,8],[200,3],[204,2],[207,6],[216,6],[225,6],[233,6],[241,7],[250,7],[259,5],[266,5],[273,3],[278,3],[287,4],[293,1],[296,6],[304,4],[309,5],[315,8],[325,6],[332,6],[340,4],[348,3],[355,2],[358,5],[366,1],[368,5],[376,6],[385,1],[387,2],[390,4],[397,5],[403,1],[405,2],[408,6],[417,8],[434,6],[442,4],[450,4],[458,5],[466,5],[473,3],[480,3],[484,7],[492,6],[500,4],[509,2],[515,4],[520,3],[526,6],[534,4],[539,2],[542,2],[545,2],[548,2],[551,2],[554,3],[560,3],[564,7],[572,1],[574,3],[582,1],[587,1],[592,1],[596,1],[598,1],[602,2],[606,8],[616,1],[618,7],[627,3],[634,4],[640,1],[643,6],[651,5],[657,6],[664,6],[672,4],[680,3],[687,1],[689,4],[694,4],[700,6],[708,4],[719,4],[725,1],[728,6],[736,5],[742,6],[749,6],[757,4],[765,3],[772,1],[774,4],[779,4],[785,6],[793,4],[804,4],[810,1],[813,6],[821,6],[828,6],[835,6],[843,4],[851,3],[858,1],[860,4],[865,5],[872,6],[880,4],[897,4],[902,13],[916,6],[925,3],[930,6],[939,4],[944,16],[964,13],[980,6],[988,13],[1003,3],[1008,9],[1019,4],[1026,4],[1032,2],[1035,6],[1054,4],[1060,1],[1063,13],[1078,5],[1088,1],[1090,3],[1094,5],[1101,7]]},"1189":{"position":[[9,1],[26,2],[29,1],[33,11],[45,14],[60,7],[68,16],[85,11],[105,2],[111,8],[123,4],[128,4],[133,11],[145,5],[152,1],[155,11],[167,4],[172,11],[184,5],[191,4],[198,4],[205,4],[212,3],[218,7],[228,3],[234,7],[243,8],[253,9],[264,4],[273,3],[277,7],[286,2],[289,5],[300,8]]},"1191":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,7],[459,5],[466,3],[472,3],[476,3],[480,5],[486,7],[497,4],[503,8],[515,7],[523,3],[527,7],[535,2],[538,4],[544,4],[549,2],[552,2],[555,2],[558,2],[561,2],[564,3],[570,4],[577,4],[584,6],[592,8],[604,7],[612,3],[616,7],[624,2],[627,4],[633,11],[646,5],[652,4],[657,4],[665,3],[669,2],[672,5],[680,1],[682,7],[690,2],[693,6],[700,2],[704,8],[713,3],[717,8],[730,6],[738,8],[750,7],[759,6],[767,6],[775,8],[788,3],[793,8],[802,7],[811,4],[816,10],[828,6],[835,10],[847,4],[852,8],[861,3],[865,8],[877,8],[888,4],[893,6],[902,4],[908,8],[920,7],[929,4],[935,6],[943,8],[955,7],[964,6],[972,6],[980,3],[985,5],[992,11],[1006,11],[1019,5],[1025,4],[1030,6],[1040,5],[1047,11],[1061,6],[1069,3],[1073,5],[1079,4],[1084,6],[1092,7],[1100,2],[1103,6],[1111,6],[1119,3],[1124,5],[1131,4],[1138,11],[1151,5],[1157,4],[1162,6],[1172,5],[1179,4],[1186,6],[1194,3],[1198,5],[1204,4],[1209,6],[1217,4],[1222,7],[1230,7],[1239,11],[1252,4],[1257,5],[1263,2],[1266,7],[1275,5],[1282,3],[1288,3],[1292,3],[1296,5],[1302,7],[1312,8],[1321,3],[1325,8],[1338,6],[1346,8],[1358,7],[1367,6],[1375,4],[1381,8],[1393,7],[1402,4]]},"1197":{"position":[[23,4],[28,10],[39,9],[51,11],[65,3],[87,4],[92,10],[103,9],[115,11],[127,5],[133,3],[138,5],[151,4],[156,7],[164,9],[176,7],[184,4],[189,3],[197,4],[203,5],[210,7],[218,6],[227,4],[234,3],[239,5],[255,3],[259,4],[264,10],[275,6],[284,3],[290,4],[298,2],[301,2],[304,2],[312,4],[317,13],[331,3],[337,4],[344,10],[357,6],[365,10],[376,3],[381,3],[388,4],[394,1],[397,10],[409,7],[417,4],[422,3],[430,4],[436,5],[445,9],[456,3],[463,4],[468,7],[476,4],[482,2],[485,3],[492,3],[498,6],[505,3],[510,3],[516,5],[523,3],[530,3],[534,9],[544,1],[546,3],[551,2],[554,3],[561,3],[567,6],[574,3],[579,3],[585,6],[593,3],[600,6],[607,6],[614,5],[621,2],[624,3],[631,3],[637,6],[644,3],[649,3],[655,5],[664,4],[671,4],[677,6],[684,9],[697,2],[700,1],[703,3],[710,2],[713,8],[722,4],[727,6],[735,5],[743,3],[750,3],[756,6],[763,3],[768,3],[774,10],[788,6],[795,4],[800,5],[807,5],[814,9],[825,3],[830,6],[837,10],[849,3],[855,4],[861,1],[864,10],[876,7],[884,10],[897,4],[904,3],[909,5],[918,5],[925,3],[932,3],[936,9],[946,1],[948,3],[953,2],[956,3],[963,3],[969,6],[976,3],[981,3],[987,6],[995,3],[1002,6],[1009,6],[1016,5],[1023,2],[1026,3],[1033,3],[1039,6],[1046,3],[1051,3],[1057,9],[1070,6],[1077,9],[1089,2],[1092,3],[1096,10],[1110,9],[1122,6],[1129,3],[1134,3],[1138,6],[1146,10],[1157,3],[1161,5],[1171,5],[1180,10],[1192,9],[1203,10],[1217,10],[1228,9],[1240,9],[1251,3],[1258,6],[1265,4],[1270,3],[1275,5],[1282,10],[1294,3],[1299,2],[1302,3],[1309,3],[1315,6],[1322,3],[1327,3],[1333,3],[1337,6],[1344,3],[1348,2],[1351,3],[1358,4],[1363,9],[1373,9],[1385,6],[1394,3],[1401,3],[1407,6],[1414,3],[1419,3],[1425,6],[1432,6],[1440,3],[1453,4],[1459,1],[1462,11],[1475,14],[1490,6],[1497,7],[1506,5],[1517,1],[1519,2],[1522,4],[1532,5],[1538,1],[1540,2],[1543,6],[1558,4],[1566,6],[1573,4],[1583,7],[1592,6],[1602,1],[1604,8],[1613,4],[1622,3],[1626,5],[1632,3],[1642,2],[1645,6],[1657,2],[1660,8],[1670,2],[1676,7],[1684,3],[1689,10],[1702,2],[1710,5],[1718,8],[1727,11],[1749,7],[1757,3],[1761,4],[1771,3],[1775,6],[1783,7],[1791,3],[1795,7],[1803,2],[1807,1],[1809,1],[1813,4],[1841,2],[1844,8],[1854,2],[1860,6],[1868,10],[1881,2],[1887,5],[1896,3],[1905,2],[1908,3],[1915,8],[1924,11],[1936,5],[1944,3],[1951,3],[1960,6],[1967,3],[1971,6],[1979,5],[1985,6],[1992,6],[2001,1],[2003,1],[2007,3],[2020,3],[2024,6],[2032,5],[2038,8],[2047,3],[2051,7],[2060,1],[2062,1],[2066,4],[2097,1],[2099,8],[2108,4],[2117,11],[2133,3],[2138,6],[2149,4],[2155,6],[2162,12],[2181,5],[2188,7],[2219,2],[2222,6],[2232,7],[2240,5],[2249,7],[2262,6],[2269,5],[2280,1],[2282,8],[2291,4],[2297,5],[2305,7],[2316,3],[2320,6],[2328,7],[2336,3],[2340,7],[2348,2],[2352,1],[2356,4],[2367,4],[2377,3],[2381,6],[2389,10],[2400,3],[2404,7],[2412,2],[2416,1],[2419,3],[2423,7],[2434,4],[2451,6],[2458,3],[2466,4],[2472,1],[2475,11],[2488,23],[2512,6],[2519,7],[2528,7],[2536,7],[2545,5],[2553,1],[2555,2],[2558,4],[2565,5],[2571,1],[2573,2],[2576,6],[2585,4],[2593,6],[2600,4],[2607,7],[2616,6],[2626,1],[2628,8],[2637,4],[2643,3],[2647,14],[2664,4],[2669,2],[2672,6],[2681,2],[2684,8],[2694,2],[2700,7],[2708,3],[2713,10],[2726,2],[2731,8],[2743,8],[2752,11],[2766,6],[2774,3],[2781,7],[2789,7],[2797,8],[2807,2],[2810,3],[2817,3],[2823,6],[2830,3],[2834,6],[2842,5],[2848,10],[2859,6],[2868,1],[2872,3],[2879,14],[2896,6],[2905,7],[2913,3],[2917,4],[2924,3],[2928,6],[2936,7],[2944,3],[2948,7],[2956,2],[2960,1],[2962,1],[2966,4],[2986,2],[2989,8],[2999,2],[3005,6],[3013,10],[3026,2],[3032,14],[3050,3],[3056,9],[3067,3],[3074,7],[3082,7],[3090,14],[3106,2],[3109,3],[3116,3],[3122,6],[3129,3],[3133,6],[3141,5],[3147,10],[3158,6],[3167,1],[3171,3],[3178,2],[3181,3],[3188,8],[3197,11],[3209,9],[3221,3],[3228,3],[3234,6],[3241,3],[3245,6],[3253,5],[3259,6],[3266,6],[3275,1],[3279,3],[3286,3],[3290,6],[3298,9],[3308,5],[3314,8],[3323,3],[3327,7],[3336,1],[3338,1],[3342,4],[3350,1],[3352,8],[3361,4],[3370,11],[3383,3],[3388,6],[3396,4],[3402,6],[3409,12],[3425,5],[3432,7],[3443,2],[3446,6],[3456,7],[3464,5],[3473,7],[3483,6],[3490,5],[3498,1],[3500,8],[3509,4],[3515,5],[3523,7],[3531,3],[3535,6],[3543,7],[3551,3],[3555,7],[3563,2],[3567,1],[3569,1],[3573,4],[3581,4],[3588,3],[3592,6],[3600,10],[3611,3],[3615,7],[3623,2],[3627,1],[3630,3],[3634,7],[3643,1],[3647,4],[3655,6],[3662,3]]},"1199":{"position":[[7,4],[13,1],[16,13],[31,11],[43,5],[49,3],[54,5],[62,2],[65,3],[70,2],[76,5],[83,3],[89,2],[94,1],[96,9],[108,3],[112,6],[119,3],[125,6],[132,3],[136,6],[144,7],[152,5],[158,4],[167,4],[173,1],[176,11],[189,11],[203,3],[209,6],[216,1],[218,9]]},"1201":{"position":[[9,1],[26,2],[29,6],[41,4],[47,16],[69,2],[79,11],[91,23],[115,7],[123,16],[140,11],[154,11],[166,13],[180,6]]},"1203":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,4],[456,5],[463,3],[469,1],[471,4],[476,7],[484,7],[492,4],[497,11],[510,5],[517,3],[524,4],[530,8],[542,7],[550,3],[554,7],[562,2],[565,4],[570,5],[576,8],[585,3],[589,7],[597,4],[603,4],[608,2],[611,2],[614,2],[617,2],[620,2],[623,3],[629,4],[636,4],[643,6],[651,8],[663,7],[671,3],[675,7],[683,2],[686,4],[691,11],[704,4],[709,5],[715,2],[718,4],[724,5],[731,3],[737,4],[743,5],[749,2],[752,2],[756,1],[758,4],[763,2],[766,7],[774,7],[782,4],[787,11],[800,5],[807,3],[814,11],[827,5],[833,4],[838,4],[846,3],[850,2],[853,5],[861,1],[863,7],[871,2],[874,6],[881,2],[885,8],[894,3],[898,8],[911,6],[919,8],[931,7],[940,6],[948,6],[956,8],[968,7],[977,4],[983,3],[988,8]]},"1207":{"position":[[6,4]]},"1210":{"position":[[6,3],[10,3],[14,11],[26,5],[42,12],[42,7],[50,4],[56,5]]},"1212":{"position":[[0,4],[5,10],[16,6],[25,3],[29,6],[36,7],[44,7],[54,4],[59,13],[73,3],[77,6],[85,7],[93,7],[103,10],[116,6],[124,10],[135,3],[140,3],[145,7],[154,7],[165,4],[171,1],[174,10],[186,4],[191,4],[196,6],[204,6],[213,6],[220,8],[229,4],[234,1],[236,3],[241,4],[248,5],[258,4],[264,1],[267,10],[279,4],[284,4],[289,6],[297,5],[303,3],[308,5],[316,9],[327,3],[334,1],[336,7],[344,7],[352,5],[359,2],[362,3],[369,3],[375,6],[382,3],[388,2],[391,3],[398,2],[401,8],[410,1],[412,3],[417,4],[424,3],[431,3],[437,6],[444,3],[450,6],[457,2],[460,9],[470,1],[472,4],[477,4],[484,9],[495,4],[503,4],[509,1],[512,10],[524,4],[529,4],[534,6],[543,3],[548,5],[557,4],[563,3],[570,2],[573,8],[582,1],[584,4],[589,4],[596,2],[599,3],[606,3],[612,6],[619,3],[624,3],[630,6],[637,1],[639,7],[647,7],[655,4],[663,4],[669,1],[672,10],[684,6],[691,4],[696,6],[704,4],[711,1],[714,3],[721,2],[724,4],[729,1],[731,4],[736,4],[743,6],[750,3],[757,3]]},"1215":{"position":[[0,4],[5,11],[17,6],[30,10],[42,10],[55,4],[60,23],[84,5],[91,10],[104,11],[118,6],[126,11],[139,8],[149,4],[154,3],[158,6],[166,11],[180,10],[192,5],[199,6],[207,9],[218,6],[227,4],[233,2],[236,6]]},"1217":{"position":[[3,8],[24,15],[42,8],[51,4],[57,1],[60,11],[73,8],[82,3],[86,7],[95,5],[103,1],[105,2],[108,4],[115,5],[121,1],[123,2],[126,6],[138,4],[156,4],[164,3],[168,4],[207,2],[210,1],[212,10],[226,3],[233,1],[235,10],[246,6],[253,4],[312,2],[315,8],[325,2],[331,3],[336,10],[349,2],[354,3],[359,3],[366,1],[368,10],[379,4],[384,4],[390,2],[393,3],[400,3],[406,6],[413,3],[417,6],[425,5],[431,4],[436,6],[445,1],[447,1],[451,3],[458,3],[464,8],[473,11],[485,3],[490,2],[493,3],[500,3],[506,6],[513,3],[517,6],[525,5],[531,6],[538,6],[547,1],[549,1],[553,3],[560,3],[564,6],[572,5],[578,8],[587,3],[591,7],[600,1],[602,1],[606,4],[616,2],[619,1],[622,2],[628,1],[630,8],[639,4],[646,2],[651,6],[658,6],[665,3],[670,7],[678,7],[686,10],[701,1],[703,8],[712,4],[721,11],[734,3],[739,3],[744,5],[751,7],[760,4],[766,3],[770,12],[788,3],[792,7],[801,10],[815,3],[819,4],[827,6],[834,3]]},"1219":{"position":[[0,4],[6,1],[9,11],[22,11],[34,4],[39,6],[47,5],[55,1],[57,2],[60,4],[67,5],[73,1],[75,2],[78,6],[87,4],[93,2],[99,1],[101,8],[110,4],[116,2],[120,2],[125,6],[132,6],[139,3],[144,7],[152,3],[156,10],[171,2],[174,4],[179,5],[188,7],[198,6],[205,6],[212,3],[217,7],[225,7],[233,7],[257,2],[260,8],[270,2],[276,4],[281,3],[286,10],[299,2],[305,1],[307,10],[321,3],[327,2],[330,3],[337,1],[339,10],[350,4],[355,4],[361,8],[370,11],[386,3],[393,3],[399,3],[403,6],[411,5],[417,9],[427,3],[432,1],[434,1],[438,4],[448,2],[451,3],[458,4],[463,3],[467,4],[475,3],[482,3],[488,6],[495,3],[501,4],[506,5],[514,7],[522,3],[526,7],[535,7],[546,4],[551,3],[555,4],[563,6],[570,3]]},"1221":{"position":[[0,4],[6,1],[9,11],[22,6],[29,3],[33,7],[41,7],[61,6],[68,6],[87,6],[97,4],[102,9],[112,1],[116,4],[121,6],[129,3],[135,6],[144,4],[151,3],[155,4],[163,6],[170,4],[177,6],[184,1],[187,3],[191,7],[200,5],[206,7],[214,5],[222,2],[225,1],[227,10],[241,3],[247,3],[251,4],[257,4],[265,5],[271,1],[273,8],[284,2],[287,4],[292,5],[301,7],[311,2],[314,8],[324,2],[330,4],[335,3],[340,10],[353,2],[358,2],[361,3],[368,1],[370,10],[381,4],[386,4],[392,8],[401,11],[417,3],[424,3],[430,3],[434,6],[442,5],[448,9],[458,3],[463,1],[465,1],[469,4]]},"1223":{"position":[[0,7],[11,11],[23,13],[39,4],[45,16],[65,5],[74,11],[86,13],[103,5],[111,7],[123,1],[132,11],[147,11],[159,14],[174,5]]},"1225":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,4],[456,5],[463,3],[469,1],[471,4],[476,7],[484,7],[492,4],[497,11],[510,5],[517,3],[524,4],[530,8],[542,7],[550,3],[554,7],[562,2],[565,4],[570,9],[580,5],[586,8],[595,3],[599,7],[607,4],[613,4],[618,2],[621,2],[624,2],[627,2],[630,2],[633,3],[639,4],[646,4],[653,6],[661,8],[673,7],[681,3],[685,7],[693,2],[696,4],[702,11],[715,4],[720,5],[726,2],[729,4],[735,5],[742,3],[748,4],[754,5],[760,2],[763,2],[767,1],[769,4],[774,2],[777,7],[785,7],[793,4],[798,11],[811,5],[818,3],[825,11],[838,5],[844,4],[849,4],[857,3],[861,2],[864,5],[872,1],[874,7],[882,2],[885,6],[892,2],[896,8],[905,3],[909,8],[922,6],[930,8],[942,7],[951,6],[959,6],[967,8],[979,7],[988,4]]},"1227":{"position":[[7,3],[52,3]]},"1229":{"position":[[7,3],[13,6],[20,14],[35,9],[80,3],[86,4],[91,6],[98,9],[167,3],[173,6],[180,12],[193,9],[246,3],[252,9],[262,11],[274,9],[327,3],[333,10],[344,9],[354,9]]},"1231":{"position":[[62,3],[66,2],[69,7],[115,3],[121,3],[125,1],[127,6],[134,8],[167,4],[174,4],[179,2],[182,6],[190,6],[217,5],[225,3],[229,4],[234,1],[236,5],[242,4],[247,2]]},"1234":{"position":[[5,4],[10,6],[17,9],[28,3],[34,5],[50,8],[59,5],[105,2],[124,9],[138,11]]},"1239":{"position":[[16,4],[21,13],[35,9],[47,3],[51,6],[58,7],[67,5],[86,4],[91,17],[109,6],[118,4],[124,1],[127,17],[146,3],[150,6],[157,7],[166,5],[174,3],[178,6],[191,2],[201,1],[205,6],[213,6],[220,3],[237,4],[242,13],[256,6],[265,4],[271,1],[274,13],[289,3],[293,6],[300,7],[309,5],[317,3],[321,6],[334,2],[344,1],[348,6],[356,6],[363,3],[386,4],[391,16],[408,6],[417,6],[424,13],[440,4],[446,1],[449,16],[467,14],[482,6],[489,7],[498,5],[506,6],[513,1],[515,6],[522,3],[526,6]]},"1241":{"position":[[19,4],[24,13],[38,6],[47,4],[53,1],[56,13],[71,3],[75,6],[82,7],[91,5],[99,3],[103,6],[116,2],[127,1],[131,6],[139,6],[146,3],[160,4],[165,4],[174,9],[188,16],[205,6],[214,13],[231,9],[241,14],[256,3],[260,2]]},"1244":{"position":[[0,4],[5,11],[17,3],[21,5],[29,10],[40,11],[54,4],[59,6],[80,4],[85,14],[100,11],[112,11],[125,6],[132,7],[141,5],[149,6],[156,11],[170,4],[175,10],[187,3],[191,6],[204,2],[214,1],[218,6],[226,4],[231,6],[239,3],[243,6],[256,2],[266,1],[270,6],[278,7],[287,6],[294,3],[298,6],[319,6],[326,3],[348,14]]},"1246":{"position":[[10,4],[15,13],[29,9],[41,3],[45,6],[52,7],[61,5],[83,4],[88,14],[103,6],[112,7],[120,3],[124,6],[131,13],[147,4],[153,1],[156,14],[172,8],[181,4],[186,6],[194,6],[201,13],[218,1],[220,7],[228,4],[236,6],[245,4],[251,1],[254,14],[270,7],[278,4],[283,6],[291,6],[298,7],[307,5],[315,2],[318,6],[326,2],[332,1],[334,7],[342,4],[349,2],[354,6],[361,6],[368,3],[372,6],[382,6],[389,3],[393,6]]},"1249":{"position":[[0,4],[5,6],[12,6],[21,4],[26,6],[33,4],[38,3],[42,7],[50,4],[55,8],[66,4],[71,6],[78,4],[84,6],[92,4],[97,8],[106,4],[111,6],[119,6],[128,6],[135,4],[140,1],[143,6],[153,1],[155,4],[162,4],[171,4],[176,8],[185,4],[190,3],[195,6],[204,6],[211,4],[216,1],[219,6],[229,1],[231,4],[238,4],[247,4],[252,9],[262,4],[270,6],[279,6],[288,1],[294,6],[302,4],[309,9],[321,4],[327,4],[333,7],[342,2],[347,4],[352,6],[362,3],[366,1],[369,3],[376,5],[382,4],[389,3],[393,1],[398,6],[405,1]]},"1251":{"position":[[0,4],[5,7],[13,4],[18,4],[23,14],[40,4],[45,7],[54,4],[59,17],[77,4],[82,7],[91,7],[101,6],[108,4],[113,1],[115,4],[120,14],[136,1],[139,4],[144,7],[155,3],[159,6],[174,1],[177,1],[181,1],[183,6],[191,1],[193,3],[197,4],[203,4],[208,1],[211,1],[214,3],[218,6],[233,1],[236,1],[240,1],[242,6],[250,1],[252,3],[256,4],[266,4],[271,14],[286,4],[291,7],[300,7],[310,6],[317,4],[322,1],[324,4],[329,14],[345,1],[348,4],[353,7],[364,2],[367,1],[369,6],[376,3],[381,13],[405,4],[410,5],[416,1],[426,4],[431,18],[451,6],[460,4],[465,1],[468,1]]},"1253":{"position":[[41,5],[47,7],[55,5],[87,3],[94,3]]},"1257":{"position":[[0,1],[2,1],[4,1],[22,6],[41,4],[46,6],[53,9],[65,3],[69,5],[75,6],[83,7],[91,6],[99,5],[105,5],[113,5],[121,1],[123,1],[125,1],[148,13],[170,4],[175,13],[189,6],[222,4],[227,16],[247,13],[263,6],[271,13],[289,4],[295,1],[298,13],[313,3],[317,5],[323,6],[331,7],[339,6],[347,5],[355,1],[358,3],[365,3],[369,6],[379,1],[383,1],[385,1],[389,5],[396,7],[405,6],[412,3],[418,4],[424,1],[427,13],[442,5],[450,5],[473,6],[480,3],[496,10],[514,4],[519,10],[530,6],[539,4],[545,2],[548,4],[555,4],[560,13],[574,8],[583,6],[593,10],[605,5],[614,4],[620,3],[627,2],[630,8],[639,8],[649,2],[652,8],[652,1],[654,6],[661,2],[664,8],[664,1],[666,6],[673,2],[676,8],[676,1],[678,6],[686,4],[692,2],[695,3],[702,3],[708,6],[715,3],[720,3],[726,6],[734,10],[745,4],[751,4],[758,3],[764,4],[770,1],[773,10],[785,3],[789,5],[795,6],[803,7],[811,6],[819,5],[827,1],[830,3],[837,3],[841,7],[849,1],[851,4],[860,1],[864,1],[867,1],[869,1],[873,4],[878,3],[884,6],[892,4],[897,2],[900,2],[903,2],[906,2],[909,2],[915,5],[922,7],[931,6],[938,3],[944,4],[950,1],[953,10],[965,5],[973,5],[981,6],[988,1],[990,4],[995,5]]},"1259":{"position":[[3,15],[28,4],[33,15],[49,6],[58,7],[68,6],[77,4],[82,18],[101,7],[112,6],[121,15],[139,6],[147,15],[163,7],[172,7],[183,4],[189,1],[192,15],[209,3],[213,5],[219,6],[227,7],[235,6],[243,5],[251,3],[255,1],[258,6],[268,5],[274,1],[276,7],[286,2],[289,3],[296,6],[303,3],[307,5],[314,7],[324,3],[331,3],[337,6],[344,3],[352,6],[359,3],[365,4],[371,1],[374,15],[391,5],[399,5],[407,3],[411,1],[414,6],[424,5],[430,1],[432,7],[442,2],[445,3],[452,6],[459,5],[468,3],[475,3],[481,6],[488,3],[496,6],[503,3]]},"1261":{"position":[[3,10],[21,4],[26,10],[37,6],[44,5],[52,13],[66,10],[80,7],[89,10],[100,10],[114,4],[130,13],[149,12],[167,4],[172,12],[185,6],[194,4],[199,10],[210,8],[219,6],[242,19],[272,4],[277,19],[297,6],[304,12],[319,6],[327,5],[336,6],[343,6],[350,4],[357,4],[362,13],[377,6],[384,16],[404,3],[408,4],[413,10],[425,6],[432,13],[446,6],[453,8],[463,7],[472,6],[479,3],[484,3],[488,6],[506,1],[510,6],[517,4]]},"1263":{"position":[[32,13],[53,4],[58,13],[72,6],[81,8],[90,6],[97,6],[105,4],[110,6],[119,4],[124,16],[141,8],[150,6],[159,13],[175,6],[183,13],[198,8],[208,8],[218,6],[227,4],[232,6],[239,7],[248,1],[252,4],[257,6],[270,4],[276,1],[279,13],[294,3],[298,5],[304,6],[312,7],[320,6],[328,5],[336,4],[344,3],[348,6],[355,6],[364,5],[372,5],[380,7],[390,7],[400,4],[407,4],[412,3],[418,6],[425,4],[430,7],[442,8],[452,1],[457,4],[462,7],[470,4],[476,4],[482,3],[489,1],[491,6],[498,4],[503,1],[505,8],[516,11],[528,4],[535,5],[541,9],[551,8],[562,2],[565,3],[572,3],[578,6],[585,3],[591,5],[597,4],[602,4],[607,5],[615,2],[618,4],[623,10],[637,3],[643,6],[650,3],[654,6],[677,1],[681,4],[686,10],[700,6],[707,3],[713,4],[719,1],[722,13],[737,5],[745,5],[770,6],[777,3]]},"1265":{"position":[[0,4],[5,4],[26,13],[43,16],[73,10],[85,3],[92,13],[107,3],[111,3],[117,2],[120,3],[127,3],[133,5],[139,3],[157,15],[176,18],[195,13],[210,10],[230,15],[246,3],[251,4],[268,15],[284,3],[289,4],[308,15],[324,3],[329,5],[359,2],[362,3],[369,15],[385,5],[394,3],[401,3],[407,3],[411,6],[430,1],[432,1],[436,3],[455,13],[472,16],[490,4],[497,3],[501,6],[508,7],[516,3],[520,3],[526,14],[544,18],[563,13],[578,10],[590,13],[605,14],[620,3],[625,4],[653,14],[668,5]]},"1267":{"position":[[0,3],[18,2],[33,3],[52,3]]},"1270":{"position":[[2,7],[12,9],[33,7],[41,4],[46,6],[56,3],[62,4],[73,15],[101,4],[106,15],[122,6],[131,8],[142,6],[149,8],[158,4],[163,5],[188,10],[213,4],[218,10],[229,6],[238,5],[246,6],[253,12],[266,4],[272,15],[288,8],[297,4],[302,6],[316,8],[328,10],[348,4],[354,1],[357,10],[369,8],[378,1],[382,6],[390,5],[398,3],[406,15],[423,8],[433,1],[436,8],[446,4],[451,4],[456,5],[466,1],[468,12],[484,3],[488,6],[497,3],[501,8],[525,3],[532,10],[549,4],[555,1],[558,10],[570,3],[578,3],[584,6],[593,4],[598,3],[607,1],[609,12],[623,1],[625,5],[633,3],[637,8],[646,3],[650,7],[659,7],[667,5],[676,1],[678,5],[685,3],[689,8],[701,3],[713,4],[720,1],[722,8],[732,6],[748,4],[756,10],[773,4],[779,1],[782,10],[794,4],[803,5],[809,1],[811,8],[823,4],[828,4],[837,10],[852,10],[864,5],[873,6],[883,12],[897,4],[902,4],[908,15],[926,8],[936,4],[941,4],[946,6],[959,2],[962,10],[973,3],[987,4],[992,5],[998,3],[1004,4],[1009,11],[1022,10],[1033,8],[1044,6],[1052,1],[1057,1],[1062,1],[1067,10],[1078,8],[1089,6],[1097,1],[1102,1],[1107,1],[1122,10],[1133,4],[1162,8],[1173,10],[1186,7],[1206,8],[1215,7],[1239,10],[1258,7],[1304,7],[1322,7]]},"1273":{"position":[[4,2],[10,1],[17,7],[33,5],[46,4],[57,7],[69,5],[98,1],[101,2],[109,2],[115,2],[121,5],[130,7],[150,1],[157,2],[172,7],[188,1],[191,2],[199,2],[205,2],[211,5],[220,7],[236,7],[244,4],[249,6],[259,3],[265,4],[273,4],[278,4],[289,2],[295,4],[300,4],[305,3],[310,1],[313,2],[319,4],[324,4],[329,3],[334,2],[337,4],[346,2],[352,2],[355,4],[360,5],[366,1],[370,4],[375,6],[383,5],[389,5],[395,2],[420,5],[431,2],[434,3],[438,7],[447,5],[456,5],[469,2],[472,2],[475,2],[478,5],[485,2],[488,5],[498,2],[501,3],[505,7],[514,5],[523,5],[536,2],[539,2],[542,2],[545,5],[552,1],[554,5],[564,2],[567,3],[571,7],[580,5],[589,5],[602,2],[605,2],[608,2],[611,5],[618,1],[637,5],[644,4],[654,2],[657,3],[661,7],[670,5],[679,5],[687,4],[695,4],[707,2],[710,2],[713,2],[716,5],[723,2],[726,4],[732,4],[737,5],[744,4],[753,2],[756,3],[760,7],[769,5],[778,5],[786,4],[794,4],[806,2],[809,2],[812,2],[815,5],[822,1],[824,4],[830,5],[836,5],[843,4],[852,2],[855,3],[859,7],[868,5],[877,5],[885,4],[893,4],[905,2],[908,2],[911,2],[914,5],[921,1],[923,4],[929,5]]},"1275":{"position":[[13,9],[24,12],[39,8],[60,5],[69,2],[83,7],[97,3],[108,3],[121,4],[143,7],[151,4],[156,6],[166,3],[172,4],[197,8],[211,4],[216,15],[232,6],[241,8],[252,6],[259,8],[268,4],[273,5],[290,4],[295,10],[306,6],[315,5],[323,6],[330,12],[343,4],[349,15],[365,8],[374,4],[379,6],[388,8],[397,4],[402,6],[428,3],[435,10],[452,4],[458,1],[461,10],[473,3],[481,5],[487,5],[493,1],[495,8],[522,3],[528,6],[537,4],[542,3],[547,2],[555,1],[557,12],[571,2],[575,2],[580,3],[584,7],[593,12],[606,6],[614,7],[622,3],[630,6],[639,1],[641,5],[649,3],[653,8],[662,3],[666,7],[675,7],[683,5],[692,1],[694,5],[710,3],[714,8],[726,3],[730,4],[737,1],[739,8],[749,3],[753,7],[762,8],[771,4],[776,6],[784,7],[792,3],[800,6],[816,8],[832,4],[838,1],[841,10],[853,8],[862,1],[866,6],[874,5],[882,3],[890,15],[907,8],[917,1],[920,8],[930,4],[935,4],[940,5],[950,6],[959,4],[964,1],[966,12],[982,3],[987,6],[996,3],[1000,8],[1009,4],[1016,1],[1018,8],[1028,6],[1035,3],[1039,6],[1047,10],[1058,2],[1061,8],[1070,4],[1084,4],[1092,10],[1106,9],[1121,4],[1127,1],[1130,10],[1142,4],[1151,5],[1157,1],[1159,8],[1177,5],[1183,1],[1185,12],[1210,12],[1225,1],[1227,8],[1248,3],[1252,7],[1261,10],[1272,7],[1280,10],[1295,4],[1300,4],[1309,10],[1324,10],[1336,5],[1345,6],[1355,12],[1369,4],[1374,4],[1380,15],[1398,8],[1408,4],[1413,4],[1418,6],[1429,8],[1439,4],[1444,4],[1449,6],[1462,2],[1465,10],[1476,3],[1482,4],[1487,5],[1493,3],[1499,4],[1504,11],[1517,10],[1528,8],[1539,6],[1547,1],[1552,1],[1557,1],[1562,10],[1573,8],[1584,6],[1592,1],[1597,1],[1602,1],[1607,10],[1618,4]]},"1277":{"position":[[7,7],[15,7],[38,10],[49,9],[70,7],[80,6],[130,8],[160,7],[168,7],[191,8],[200,8],[212,4],[221,7],[229,4],[234,6],[244,7],[254,3],[260,4],[285,8],[299,4],[304,15],[320,6],[329,8],[340,6],[347,8],[356,4],[361,5],[379,4],[384,10],[395,6],[404,5],[412,6],[419,12],[432,4],[438,15],[454,8],[463,4],[468,6],[477,8],[486,4],[491,6],[505,3],[512,10],[529,4],[535,1],[538,10],[550,3],[558,5],[564,5],[570,1],[572,8],[582,3],[588,6],[597,4],[602,3],[607,2],[615,1],[617,12],[631,2],[635,2],[640,3],[644,7],[653,12],[666,6],[674,7],[682,3],[690,6],[699,1],[701,5],[709,3],[713,8],[722,3],[726,7],[735,7],[743,5],[752,1],[754,5],[761,3],[765,8],[777,3],[781,4],[788,1],[790,8],[800,3],[804,7],[813,8],[822,4],[827,6],[835,7],[843,3],[851,6],[867,11],[882,7],[900,4],[906,1],[909,10],[921,11],[933,3],[937,7],[945,7],[954,5],[962,6],[970,5],[978,3],[986,15],[1003,8],[1013,5],[1020,8],[1030,4],[1035,4],[1040,5],[1047,1],[1072,4],[1077,5],[1083,1],[1087,4],[1092,11],[1105,6],[1114,4],[1119,1],[1121,12],[1137,3],[1150,2],[1153,7],[1164,6],[1173,4],[1178,3],[1187,3],[1191,8],[1201,6],[1208,3],[1212,4],[1219,3],[1223,4],[1231,6],[1238,3],[1242,6],[1250,3],[1254,5],[1260,7],[1268,2],[1271,9],[1283,1],[1287,3],[1291,3],[1300,4],[1307,1],[1309,8],[1319,6],[1326,3],[1330,6],[1338,10],[1349,8],[1358,4],[1365,4],[1372,3],[1376,4],[1384,6],[1391,3],[1395,6],[1403,4],[1408,7],[1416,2],[1419,9],[1431,1],[1435,3],[1439,3],[1453,4],[1463,4],[1469,1],[1472,10],[1484,4],[1493,5],[1499,1],[1501,8],[1511,5],[1517,1],[1519,12],[1535,1],[1537,8],[1546,3],[1550,7],[1559,10],[1570,7],[1578,10],[1593,4],[1598,4],[1607,10],[1622,10],[1634,5],[1643,6],[1653,12],[1667,4],[1672,4],[1678,15],[1696,8],[1706,4],[1711,4],[1716,6],[1727,8],[1737,4],[1742,4],[1747,6],[1760,2],[1763,10],[1774,3],[1790,3],[1797,7],[1805,10],[1818,10],[1829,11],[1841,3],[1848,6],[1856,1],[1861,1],[1866,1],[1878,7],[1890,3],[1899,10],[1911,6],[1921,7],[1929,11],[1941,7],[1949,10],[1963,1],[1965,4],[1970,11],[1983,5],[1989,6],[1998,3],[2005,10],[2016,11],[2028,10],[2042,6],[2050,6],[2060,4],[2068,4],[2076,2],[2079,3],[2086,3],[2092,3],[2096,7],[2105,7],[2113,3],[2120,3],[2135,4],[2141,7],[2152,7],[2160,11],[2172,7],[2180,10],[2194,1],[2196,4],[2201,6],[2209,5],[2215,7],[2225,10],[2236,11],[2248,4],[2256,6],[2264,1],[2269,1],[2274,1],[2279,10],[2290,4]]},"1279":{"position":[[0,14],[23,7],[31,7],[99,14],[171,7],[206,7],[240,14],[275,7],[316,7],[343,14],[363,8],[465,7],[476,8],[485,8],[527,14],[569,4],[574,7],[596,4],[605,9],[616,8],[660,1],[687,7],[715,7],[723,7],[736,15],[777,15],[795,18],[823,8],[834,8],[845,7],[853,4],[858,6],[868,7],[878,6],[887,3],[897,7],[914,4],[919,7],[927,9],[939,7],[947,3],[951,7],[959,7],[968,1],[971,7],[980,4],[989,4],[994,6],[1003,3],[1009,5],[1020,7],[1040,4],[1045,7],[1053,6],[1062,5],[1070,6],[1077,7],[1085,4],[1090,7],[1098,4],[1103,4],[1108,6],[1117,4],[1122,4],[1127,6],[1148,4],[1153,11],[1165,6],[1174,3],[1178,5],[1184,4],[1189,4],[1194,6],[1205,4],[1211,1],[1214,11],[1227,4],[1236,4],[1241,6],[1252,6],[1259,1],[1261,4],[1268,4],[1274,1],[1277,11],[1290,3],[1296,5],[1304,6],[1311,1],[1313,3],[1322,15],[1343,4],[1348,15],[1364,6],[1373,11],[1385,8],[1396,6],[1405,4],[1411,1],[1414,15],[1431,7],[1439,3],[1443,7],[1451,7],[1460,1],[1463,7],[1474,5],[1480,5],[1486,1],[1488,4],[1494,1],[1496,5],[1504,1],[1506,8],[1515,3],[1519,7],[1528,15],[1544,8],[1556,1],[1558,5],[1570,15],[1591,4],[1596,15],[1612,6],[1621,11],[1633,6],[1640,4],[1647,6],[1656,4],[1662,1],[1665,15],[1682,7],[1690,3],[1694,7],[1702,7],[1711,1],[1714,7],[1725,5],[1731,5],[1737,1],[1739,4],[1745,1],[1747,6],[1757,1],[1759,5],[1765,5],[1771,1],[1773,6],[1783,4],[1788,10],[1802,7],[1812,6],[1820,7],[1829,5],[1838,6],[1848,7],[1857,4],[1862,4],[1867,7],[1877,4],[1883,4],[1888,4],[1893,6],[1904,4],[1910,4],[1915,4],[1920,6],[1938,3],[1949,4],[1955,1],[1958,7],[1967,3],[1975,5],[1981,5],[1987,1],[1989,4],[1995,3],[2001,6],[2010,4],[2015,3],[2024,1],[2026,7],[2035,3],[2042,7],[2050,10],[2070,3],[2077,3],[2081,7],[2089,3],[2094,1],[2097,4],[2104,1],[2106,4],[2112,6],[2128,4],[2145,4],[2151,1],[2154,7],[2163,4],[2168,3],[2172,7],[2180,7],[2189,3],[2193,7],[2202,5],[2210,6],[2219,4],[2224,1],[2226,7],[2237,3],[2242,6],[2251,4],[2258,3],[2262,4],[2270,6],[2277,3],[2281,3],[2287,4],[2294,3],[2298,4],[2306,6],[2313,3],[2317,3],[2325,4],[2332,1],[2334,4],[2340,6],[2347,6],[2354,3],[2359,7],[2367,2],[2370,7],[2380,4],[2387,3],[2391,4],[2399,6],[2406,3],[2410,3],[2423,4],[2433,4],[2439,1],[2442,7],[2451,4],[2460,5],[2466,1],[2468,4],[2476,1],[2478,4],[2485,4],[2490,4],[2499,7],[2510,10],[2523,2],[2526,7],[2534,3],[2540,3],[2547,7],[2555,10],[2568,6],[2579,15],[2596,11],[2609,11],[2621,4],[2627,4],[2632,4],[2637,6],[2649,8],[2661,6],[2669,1],[2674,1],[2679,1],[2686,7],[2694,4],[2699,3],[2704,6],[2720,6],[2731,15],[2748,11],[2761,11],[2773,4],[2779,4],[2784,4],[2789,6],[2801,6],[2809,4],[2814,4],[2821,6],[2829,1],[2835,7],[2843,4],[2848,3],[2853,6],[2861,3],[2865,7],[2874,7],[2882,5],[2893,6],[2900,6],[2908,7],[2916,4],[2934,13],[2948,1],[2978,6],[2985,3],[2989,4],[3001,7],[3045,7],[3053,4],[3058,6],[3068,7],[3078,6],[3087,3],[3093,4],[3107,7],[3118,4],[3123,7],[3131,9],[3143,7],[3151,7],[3159,7],[3169,7],[3178,4],[3187,4],[3192,6],[3201,3],[3207,5],[3218,7],[3232,4],[3237,7],[3245,6],[3254,5],[3262,6],[3269,7],[3277,4],[3282,7],[3290,4],[3295,4],[3300,6],[3309,4],[3314,4],[3319,6],[3330,4],[3335,10],[3349,7],[3359,6],[3367,7],[3376,5],[3385,6],[3395,7],[3404,4],[3409,4],[3414,7],[3424,4],[3430,4],[3435,4],[3440,6],[3451,4],[3457,4],[3462,4],[3467,6],[3482,4],[3488,1],[3491,7],[3500,3],[3508,5],[3514,5],[3520,1],[3522,4],[3528,3],[3534,6],[3543,4],[3548,3],[3557,1],[3559,7],[3568,3],[3572,7],[3580,7],[3588,10],[3602,1],[3605,4],[3612,1],[3614,4],[3620,6],[3633,4],[3639,1],[3642,7],[3651,4],[3660,5],[3666,1],[3668,4],[3676,1],[3678,4],[3688,4],[3702,4],[3708,1],[3711,7],[3720,4],[3725,3],[3729,7],[3737,7],[3746,3],[3750,7],[3759,5],[3767,6],[3776,4],[3781,1],[3783,7],[3794,3],[3799,6],[3808,4],[3815,3],[3819,4],[3827,6],[3834,3],[3838,3],[3844,4],[3851,3],[3855,4],[3863,6],[3870,3],[3874,3],[3882,4],[3889,3],[3893,4],[3901,6],[3908,3],[3912,3],[3918,4],[3925,1],[3927,4],[3933,6],[3940,6],[3947,3],[3952,7],[3960,7],[3982,13],[3996,1],[4035,4],[4040,13],[4054,1],[4056,3],[4061,6],[4070,6],[4077,1],[4079,3],[4083,5],[4089,4],[4094,4],[4099,6],[4108,7],[4116,4],[4121,1],[4125,4],[4130,16],[4147,1],[4149,3],[4157,13],[4171,1],[4176,6],[4184,13],[4198,1],[4202,4],[4208,4],[4213,4],[4218,6],[4229,7],[4238,4],[4243,4],[4248,1],[4251,1],[4268,4],[4274,1],[4277,13],[4291,1],[4295,4],[4304,4],[4309,6],[4320,6],[4327,1],[4329,4],[4336,4],[4342,1],[4345,13],[4359,1],[4363,3],[4369,5],[4377,6],[4384,1],[4386,3],[4395,4],[4405,4],[4411,1],[4414,13],[4428,1],[4432,4],[4437,3],[4441,7],[4449,7],[4459,1],[4462,5],[4471,6],[4480,4],[4487,3],[4491,4],[4499,3],[4503,4],[4508,1],[4510,6],[4517,4],[4523,3],[4527,3],[4533,4],[4538,3],[4547,1],[4549,7],[4558,6],[4565,3],[4570,1],[4572,3],[4624,15],[4645,6],[4688,4],[4693,15],[4709,6],[4719,13],[4735,6],[4745,4],[4750,18],[4772,15],[4790,6],[4798,15],[4815,13],[4830,16],[4849,6],[4864,4],[4870,1],[4873,15],[4890,7],[4898,3],[4902,7],[4910,7],[4919,1],[4922,7],[4933,5],[4939,5],[4945,1],[4947,4],[4953,1],[4955,6],[4964,1],[4966,5],[4972,1],[4974,7],[4985,1],[4987,5],[5039,15],[5091,4],[5096,15],[5112,6],[5121,8],[5132,6],[5139,4],[5144,4],[5149,6],[5158,3],[5162,5],[5170,4],[5175,18],[5194,5],[5202,6],[5211,15],[5229,6],[5237,15],[5254,8],[5264,5],[5271,4],[5277,4],[5282,4],[5287,6],[5302,4],[5308,1],[5311,15],[5328,7],[5336,3],[5340,7],[5348,7],[5357,1],[5360,7],[5371,5],[5377,5],[5383,1],[5385,4],[5391,1],[5393,5],[5401,1],[5403,8],[5412,3],[5416,7],[5425,5],[5431,7],[5442,1],[5444,5],[5453,4],[5459,1],[5462,15],[5479,4],[5488,4],[5493,6],[5504,6],[5511,1],[5513,4],[5520,4],[5526,1],[5529,15],[5546,3],[5552,5],[5560,6],[5567,1],[5569,3],[5581,4],[5589,8],[5600,8],[5614,4],[5619,4],[5628,1],[5633,10],[5646,2],[5649,1],[5651,3],[5657,3],[5664,7],[5672,10],[5688,3],[5692,5],[5698,6],[5708,18],[5729,6],[5737,1],[5742,1],[5747,1],[5752,1],[5756,1],[5758,4],[5763,3],[5768,6],[5779,3],[5783,5],[5789,6],[5799,18],[5820,1],[5824,1],[5826,4],[5831,3],[5836,6],[5844,5],[5851,3],[5858,6],[5865,4],[5870,3],[5875,2],[5878,3],[5885,3],[5891,3],[5895,7],[5904,8],[5913,5],[5922,3],[5929,4],[5936,3],[5940,7],[5949,3],[5953,5],[5962,5],[5979,10],[5991,6],[6001,7],[6009,11],[6021,3],[6026,1],[6028,4],[6033,11],[6046,5],[6052,6],[6061,7],[6072,18],[6093,1],[6097,1],[6099,4],[6104,10],[6116,7],[6125,6],[6133,3],[6140,7],[6148,4],[6153,10],[6165,3],[6169,7],[6178,4],[6183,7],[6194,6],[6202,3],[6207,1],[6209,4],[6224,5],[6230,7],[6240,1],[6242,1],[6244,1],[6247,3],[6251,5],[6259,1],[6261,1],[6263,1],[6266,4],[6271,7],[6283,7],[6291,8],[6300,8],[6320,15],[6336,6],[6344,13],[6358,3],[6362,6],[6369,3],[6376,18],[6395,6],[6403,13],[6417,4],[6425,17],[6443,6],[6451,13],[6465,6],[6475,18],[6494,6],[6502,5],[6510,6]]},"1282":{"position":[[7,6],[14,14],[29,9],[40,3],[46,5],[62,6],[69,1],[72,6],[133,2],[148,6],[155,9]]},"1290":{"position":[[5,3],[12,11],[31,4],[36,11],[48,6],[57,2],[61,3],[65,2],[70,4],[76,2],[80,11],[93,10],[104,4],[109,4],[115,5],[133,1],[136,3],[143,2],[146,2],[149,4],[155,6],[162,4],[167,5],[179,6],[194,6],[201,3],[207,4],[213,2],[217,11],[230,16],[247,4],[252,4],[258,5],[278,6],[285,9],[295,4],[300,5],[308,7],[320,7],[328,2],[331,3],[335,8],[349,4],[355,2],[359,11],[372,14],[392,4],[398,5],[419,4],[425,3],[432,2],[435,2],[438,5],[445,6],[454,4],[459,5],[475,4],[484,6],[491,10],[503,3]]},"1292":{"position":[[10,4],[15,14],[30,6],[39,2],[43,3],[47,2],[52,4],[58,2],[62,14],[78,6],[85,4],[90,4],[96,5],[104,1],[107,3],[114,2],[117,2],[120,4],[126,6],[133,4],[138,5],[150,6],[165,6],[172,3],[178,4],[184,2],[188,14],[204,6],[216,4],[222,5],[231,4],[237,3],[244,2],[247,2],[250,5],[257,6],[266,4],[271,5],[287,4],[298,6],[305,5],[312,3],[328,4],[333,12],[346,6],[355,10],[366,6],[375,4],[381,2],[385,12],[399,16],[416,4],[421,4],[427,5],[435,6],[442,9],[452,4],[457,5],[465,7],[477,7],[485,2],[488,3],[492,8],[516,4],[521,15],[537,6],[546,8],[556,14],[573,4],[579,2],[583,15],[600,18],[624,4],[630,5],[639,5],[646,3],[653,2],[656,8],[665,6],[691,6],[698,10],[710,3],[725,11]]},"1295":{"position":[[11,4],[16,10],[27,9],[39,6],[46,4],[51,4],[57,5],[63,7],[71,2],[74,3],[81,4],[87,5],[96,4],[101,11],[113,9],[125,4],[130,2],[134,7],[143,4],[148,6],[156,5]]},"1297":{"position":[[0,4],[5,11],[17,6],[26,4],[31,14],[46,5],[52,12],[65,6],[72,15],[90,4],[96,2],[100,11],[113,15],[129,4],[134,4],[140,5],[148,2],[151,3],[158,2],[161,4],[166,6],[173,4],[180,3],[187,3],[193,6],[200,3],[206,6],[213,2],[216,5],[222,16],[239,4]]},"1299":{"position":[[17,4],[22,15],[38,4],[45,4],[52,4],[58,5],[70,1],[81,1],[92,1],[105,1],[136,4],[141,16],[158,4],[165,4],[171,5],[180,4],[185,13],[199,4],[206,4],[213,4],[219,5],[229,4],[234,8],[243,4],[248,4],[254,5],[263,4],[268,17],[286,4],[291,4],[297,5]]},"1302":{"position":[[50,29]]},"1306":{"position":[[0,3],[20,2],[40,3],[58,3],[70,3]]},"1309":{"position":[[7,16],[7,6],[14,9],[26,6],[34,3],[38,3],[42,10],[53,3],[57,3],[61,8],[70,10],[96,5],[102,9],[102,3],[106,5],[112,5],[118,10],[118,4],[123,5],[129,5],[135,11],[135,5],[141,5],[157,3],[229,7],[237,8],[237,1],[239,6],[247,7],[256,6],[265,4],[272,9],[300,6],[324,6],[331,18],[331,6],[338,5],[344,5],[350,1],[357,6],[364,3],[369,1],[372,4],[379,6],[388,1],[395,3],[409,17],[409,3],[413,3],[417,2],[420,6],[427,1],[429,3],[433,5],[439,4],[444,7],[492,3],[499,3]]},"1312":{"position":[[0,2],[3,4],[25,2]]},"1314":{"position":[[0,4],[5,7],[27,3]]},"1316":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[32,4],[40,4],[45,4],[54,3],[61,4],[66,7],[75,2],[82,1],[91,5],[97,5],[126,6],[134,3],[141,3],[145,14],[162,2],[165,3],[172,3],[178,3],[182,7],[191,5],[200,3],[205,6],[214,3],[218,7],[226,6],[233,6]]},"1318":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[32,4],[40,4],[45,4],[54,3],[61,4],[66,7],[75,2],[82,1],[86,6],[94,3],[101,3],[105,6],[114,2],[117,3],[124,3],[130,3],[134,7],[143,5],[152,3],[157,6],[166,3],[170,7],[179,6],[189,6],[196,6]]},"1321":{"position":[[0,7],[8,4],[13,6],[23,5],[31,3],[37,2],[40,4],[48,4],[53,4],[62,3],[69,4],[74,7],[83,4],[91,5],[98,5],[107,3],[111,3],[115,5],[121,6],[128,3],[132,6],[142,3],[146,2],[149,3],[156,3],[160,3],[167,3],[174,3],[180,3],[184,7],[193,5],[202,3],[209,3],[213,7],[222,6],[232,3],[236,6]]},"1323":{"position":[[0,10],[31,7],[39,4],[44,6],[54,5],[62,3],[68,2],[71,4],[79,4],[84,4],[93,3],[100,4],[105,7],[114,4],[122,5],[128,3],[136,1],[141,2],[146,6],[154,3],[161,3],[165,10],[178,2],[181,3],[188,3],[194,3],[198,7],[207,5],[213,8],[222,10],[236,3],[241,6],[250,2],[253,3],[260,3],[264,5],[273,3],[280,3],[286,3],[290,7],[299,5],[305,8],[314,7],[325,3],[330,6],[339,7],[350,5],[356,10],[367,6],[375,3],[379,7],[387,4],[396,3],[400,7],[409,6],[416,4],[424,7],[432,4],[442,2],[445,3],[452,3],[456,4],[464,3],[471,3],[477,3],[481,7],[490,5],[496,7],[504,3],[508,7],[519,3]]},"1325":{"position":[[0,7],[8,4],[13,6],[23,5],[31,3],[37,2],[40,4],[48,4],[53,4],[62,3],[69,4],[74,7],[83,3],[89,3],[93,3],[97,5],[103,6],[110,3],[114,6],[124,3],[128,3],[132,5],[140,5],[146,15],[163,5],[169,4],[174,5],[183,2],[186,3],[193,3],[197,3],[204,3],[211,3],[217,3],[221,7],[230,5],[239,3],[246,3],[250,7],[259,6],[269,3],[273,6]]},"1327":{"position":[[0,3],[7,4],[12,7],[21,8],[32,3],[36,3],[42,6],[49,3],[53,3],[59,6],[59,2],[62,3],[66,10]]},"1329":{"position":[[0,7],[8,4],[13,6],[23,7],[33,3],[39,2],[42,4],[49,4],[57,4],[62,4],[71,3],[76,6],[86,7],[94,11],[106,7],[114,10],[128,1],[130,4],[135,6],[143,5],[149,6],[158,3],[165,4],[170,14],[185,3],[191,5],[200,1],[204,2],[207,3],[214,3],[218,3],[225,3],[232,3],[238,3],[242,7],[251,7],[259,5],[265,3],[269,2],[272,6],[282,3]]},"1331":{"position":[[0,7],[8,5],[14,6],[24,2],[29,2],[32,4],[39,7],[53,3],[57,8],[66,1],[68,5],[74,7],[82,7],[90,9],[100,3],[104,6],[112,4],[117,3],[121,7],[129,6],[137,5],[145,3],[152,14],[167,7],[176,6],[183,3],[187,3],[198,13],[212,8],[221,1],[223,5],[229,7],[237,3],[241,7],[249,3],[253,8],[262,6],[269,3],[273,6],[280,6],[288,4],[293,13],[307,7],[315,6],[326,4],[332,5],[341,3],[348,14],[363,7],[372,6],[379,3],[383,14],[405,15],[421,8],[430,1],[432,5],[438,7],[446,3],[450,7],[458,3],[462,6],[469,5],[475,4],[480,3],[484,4],[489,4],[495,4],[500,15],[516,7],[524,6],[535,4],[541,3],[546,5],[555,3],[562,14],[577,7],[586,6],[594,3],[601,3],[605,14],[622,2],[625,3],[632,3],[638,2],[641,7],[650,2],[656,3],[662,4],[667,9],[679,2],[684,6],[691,6],[699,7],[707,8],[719,3],[725,6],[732,6],[741,1],[744,3],[750,6],[757,6],[765,1],[768,3],[777,14],[792,11],[804,2],[808,4],[813,3],[817,4],[822,11],[834,9],[845,4],[850,14],[865,7],[873,6],[882,4],[887,3],[893,4],[901,7],[909,6],[916,7],[925,2],[928,3],[932,4],[941,1],[945,6],[952,4],[957,7],[984,5],[992,3],[999,4],[1004,7],[1012,4],[1017,1],[1021,4],[1026,1],[1034,3],[1038,3],[1044,6],[1051,2],[1054,7],[1066,6],[1066,2],[1069,3],[1073,1],[1078,4],[1083,1],[1087,6],[1094,3]]},"1333":{"position":[[0,7],[8,4],[16,4],[22,5],[28,5],[38,4],[43,5],[49,6],[59,5],[67,3],[73,2],[76,4],[84,4],[89,4],[98,4],[106,4],[111,7],[120,4],[128,5],[135,5],[144,4],[152,4],[157,7],[166,4],[174,5],[190,4],[196,3],[203,4],[208,10],[221,2],[224,3],[231,3],[237,3],[241,7],[250,5],[256,8],[265,4],[273,3],[278,6],[287,4],[292,5],[300,4],[305,3],[309,3],[313,5],[319,6],[326,4],[331,6],[341,3],[356,2],[359,3],[366,4],[371,5],[380,3],[387,3],[393,3],[397,7],[406,5],[412,8],[421,4],[429,3],[434,6],[454,2],[457,3],[464,4],[469,5],[478,3],[485,3],[491,3],[495,7],[504,5],[510,8],[519,4],[527,3],[532,6],[553,2],[556,3],[563,4],[568,4],[576,3],[583,3],[589,3],[593,7],[602,5],[608,7],[616,3],[620,4],[628,3],[633,6],[642,2],[645,3],[652,4],[657,4],[665,3],[672,3],[678,3],[682,7],[691,5],[697,7],[705,3],[709,4],[717,3],[722,6],[731,3],[735,7],[744,8],[753,6],[763,3],[767,6]]},"1335":{"position":[[0,4],[5,7],[26,6],[35,6],[54,10],[78,6],[97,14],[129,5],[147,4],[152,14],[176,2],[179,4],[192,2]]},"1338":{"position":[[0,6],[37,6],[47,6],[54,3],[58,1],[60,6],[67,6],[79,6]]},"1340":{"position":[[0,6],[10,2],[26,2],[29,3],[33,6],[40,3],[44,1],[46,6],[53,6]]},"1343":{"position":[[0,7],[8,4],[13,6],[23,3],[29,6],[36,3],[40,1],[42,6],[49,6],[59,4],[64,4],[73,8],[86,18],[86,2],[89,6],[96,8],[112,6],[122,14],[138,3],[145,6],[152,20],[175,4],[180,8],[191,6],[198,11],[211,2],[214,3],[221,3],[227,3],[231,7],[240,5],[246,10],[257,4],[265,3],[270,6],[279,3],[283,7],[292,6],[299,8],[311,6],[318,14],[340,6],[347,20],[370,4],[375,8],[386,6],[393,11],[414,6],[421,11],[442,2],[452,6],[459,7],[472,6],[479,7],[509,6]]},"1345":{"position":[[0,7],[8,4],[13,6],[23,3],[29,6],[36,3],[40,1],[42,6],[49,6],[59,4],[64,4],[73,8],[86,18],[86,2],[89,6],[96,8],[106,14],[126,2],[129,2],[132,53],[206,3],[213,6],[220,22],[245,4],[250,14],[269,4],[274,8],[285,2],[288,3],[295,3],[301,3],[305,7],[314,8],[323,9],[337,4],[344,3],[348,7],[357,8],[366,7],[383,6],[390,22],[413,14],[429,8],[462,3],[471,5]]},"1347":{"position":[[18,11],[34,19],[34,3],[38,6],[45,8],[55,17],[74,1],[79,6],[86,20],[109,4],[114,11],[128,6],[135,11],[148,3],[152,7],[161,7],[169,6],[176,8],[188,6],[195,17]]},"1349":{"position":[[17,6],[24,4],[41,4],[47,3],[54,6],[61,4],[68,4],[73,14],[90,2],[93,3],[100,3],[107,4],[114,6],[121,11],[135,3],[139,7],[148,8],[157,4],[162,2],[165,8],[175,8],[184,8],[210,6],[217,4],[236,2],[251,5],[257,15],[275,2],[278,4],[283,19],[303,10],[314,6],[322,8],[331,6],[339,6],[348,4],[354,3],[361,6],[368,4],[375,4],[380,10],[393,2],[396,3],[403,3],[409,3],[413,7],[422,5],[428,7],[436,4],[444,3],[449,6],[456,10],[489,2],[492,4],[499,15],[517,7],[526,3],[533,6],[540,20],[563,4],[568,8],[579,15],[596,2],[599,3],[606,3],[612,3],[616,7],[625,5],[631,9],[641,4],[649,3],[654,6],[661,10],[674,3],[678,7],[687,8],[696,4],[701,8],[713,6],[720,6],[727,7],[738,6],[745,10]]},"1351":{"position":[[74,6]]},"1353":{"position":[[0,6],[7,20],[38,6],[45,22],[76,6],[83,4],[107,5],[114,3],[118,6],[165,4],[170,4],[186,1],[191,3],[196,2],[203,2],[210,2],[216,6],[224,1],[229,3],[233,3],[238,1],[243,3],[247,3],[254,6],[264,2],[267,2],[270,31],[302,21],[325,2],[334,6],[344,2],[354,4],[359,6],[367,22],[394,4],[400,9],[410,21]]},"1355":{"position":[[2,6],[15,9]]},"1357":{"position":[[0,6],[11,7],[22,9]]},"1359":{"position":[[5,7],[44,2]]},"1361":{"position":[[0,7],[8,4],[13,6],[23,3],[29,4],[37,4],[42,6],[49,2],[52,4],[57,6],[67,4],[72,5],[78,1],[82,4],[87,6],[95,2],[110,4],[115,4],[124,2],[130,4],[135,4],[140,6],[159,7],[167,2],[170,6],[177,2],[187,9],[197,3],[201,7],[222,3],[231,2],[246,3],[250,7],[267,3],[278,2],[284,4],[289,4],[294,6],[312,7],[321,2],[324,6],[331,2],[342,6],[353,7],[367,3],[376,2],[391,6]]},"1363":{"position":[[0,6],[15,7],[45,7],[53,4],[58,6],[68,3],[74,4],[82,4],[87,4],[96,3],[103,4],[108,4],[113,6],[121,3],[128,4],[133,4],[138,6],[152,9],[164,3],[173,2],[176,4],[185,4],[190,5],[196,1],[200,4],[205,6],[213,3],[221,7],[229,4],[234,3],[249,9],[261,3],[270,2],[273,4],[282,4],[287,5],[293,1],[297,4],[302,6],[310,3],[318,7],[326,4],[331,3],[344,6],[358,7],[367,6],[376,4],[381,4],[391,3],[396,3],[400,7],[409,8],[421,4],[427,4],[432,4],[442,3],[447,3],[451,7],[460,8],[472,4],[478,4],[485,4],[490,5],[496,1],[500,4],[505,6],[514,3],[518,7],[527,7],[536,2],[539,7],[547,8],[567,6],[577,3],[583,3],[590,7],[611,4],[620,1],[633,4],[640,4],[645,5],[651,1],[655,4],[660,6],[689,7],[710,4],[715,5],[724,6]]},"1365":{"position":[[20,6]]},"1367":{"position":[[5,9],[28,4],[33,9],[57,7],[65,4],[70,6],[80,3],[86,4],[93,4],[101,4],[106,6],[113,2],[116,3],[121,2],[125,4],[130,9],[143,5],[149,2],[152,4],[172,3],[176,6],[184,6],[192,1],[202,1],[206,2],[210,4],[215,5],[221,1],[225,4],[230,6],[238,3],[242,6],[250,6],[258,1],[266,1],[270,2],[276,4],[281,4],[290,3],[294,2],[297,4],[302,9],[312,3],[316,1],[321,1],[324,1],[329,1],[332,1],[338,2],[341,3],[345,1],[356,2],[359,6],[366,1],[370,2],[380,9],[392,2],[395,4],[414,3],[418,7],[442,2],[445,3],[449,1],[460,9],[479,5],[485,2],[488,4],[497,9],[516,2],[519,4],[537,2],[540,4]]},"1369":{"position":[[4,9],[29,4],[34,5],[47,4],[52,9],[68,7],[76,4],[81,6],[91,3],[97,4],[104,4],[112,3],[118,7],[126,3],[130,2],[133,4],[138,5],[146,4],[151,6],[158,2],[161,3],[166,2],[170,4],[175,9],[188,5],[194,2],[197,4],[204,2],[207,4],[214,7],[224,3],[228,6],[236,6],[244,1],[251,1],[253,1],[257,2],[261,7],[270,2],[273,6],[284,4],[289,4],[298,3],[302,2],[305,4],[310,9],[320,3],[324,1],[329,1],[332,1],[337,1],[340,1],[346,2],[349,3],[353,1],[356,2],[359,6],[366,1],[370,2],[376,2],[379,4],[386,3],[390,7],[407,7],[422,2],[425,4],[435,7],[448,9],[471,2],[474,6],[492,9]]},"1371":{"position":[[0,4],[5,4],[49,7],[57,4],[62,6],[72,3],[78,4],[85,4],[93,3],[99,5],[107,5],[113,4],[120,4],[125,7],[134,4],[139,5],[150,4],[155,6],[162,2],[165,3],[172,4],[177,1],[179,4],[186,3],[191,5],[199,4],[204,4],[221,4],[228,3],[232,6],[240,6],[248,1],[256,1],[260,2],[264,4],[269,1],[271,6],[282,4],[287,4],[296,3],[300,2],[303,4],[308,9],[318,3],[322,1],[327,1],[330,1],[335,1],[338,1],[344,2],[347,3],[351,1],[354,2],[357,4],[362,2],[365,3],[372,5],[378,2],[381,4],[388,6],[395,2],[401,1],[406,4],[411,5],[417,1],[421,4],[426,6],[442,4],[447,1],[449,4],[456,5],[464,4],[469,4],[474,1],[476,6],[485,4],[490,9],[513,9],[523,2],[526,4],[539,4],[544,4],[556,5],[565,4],[571,4],[576,9],[596,9]]},"1373":{"position":[[0,4],[5,4],[20,9],[50,7],[58,4],[63,6],[73,3],[79,4],[87,3],[91,4],[96,4],[101,4],[106,4],[111,10],[126,3],[130,7],[149,4],[154,6],[161,2],[165,4],[170,9],[183,5],[189,2],[192,4],[199,4],[204,2],[207,10],[219,3],[223,7],[232,6],[246,4],[251,4],[260,3],[264,2],[267,4],[272,9],[282,3],[286,1],[291,1],[294,1],[298,1],[301,1],[307,2],[310,3],[314,1],[317,2],[320,6],[328,2],[334,2],[337,4],[350,4],[355,2],[358,10],[373,10],[398,9]]},"1375":{"position":[[15,4],[20,6],[37,4],[42,5]]},"1377":{"position":[[0,7],[8,4],[13,6],[23,3],[29,4],[36,4],[41,6],[51,3],[55,7],[63,5],[69,4],[74,6],[81,2],[85,4],[90,9],[103,5],[109,2],[112,4],[119,6],[126,8],[136,7],[145,1],[158,4],[163,4],[172,3],[176,2],[179,4],[184,9],[194,3],[198,1],[203,1],[206,1],[210,2],[214,1],[220,2],[223,3],[227,1],[230,2],[233,6],[241,2],[247,2],[250,4],[257,3],[261,7],[278,7],[293,6],[300,8],[310,7],[319,1],[325,7],[337,9],[358,4],[363,5]]},"1379":{"position":[[0,7],[8,7],[24,9]]},"1381":{"position":[[0,7],[8,4],[13,6],[23,7],[33,3],[39,4],[47,4],[52,6],[59,3],[63,7],[71,7],[82,3],[88,6],[97,4],[104,3],[108,4],[116,3],[120,7],[129,6],[146,6],[153,7],[162,3],[166,7],[175,6],[192,4],[197,5],[203,3],[209,4],[214,11],[233,4],[238,4],[247,3],[252,6],[262,7],[270,11],[282,7],[290,10],[304,1],[306,4],[311,6],[319,5],[325,6],[334,2],[337,6],[344,3],[349,4],[354,5],[360,1],[364,4],[369,6],[386,3],[390,7],[413,7],[421,11],[433,1],[443,3],[450,6]]},"1383":{"position":[[8,7],[31,9],[46,9],[59,5],[77,4],[92,4],[109,6],[128,7],[150,9],[169,7],[195,9],[216,5],[248,7],[261,5],[273,6],[288,7],[314,7],[325,2],[354,4],[359,5],[386,7],[396,5],[403,6],[418,7]]},"1385":{"position":[[0,11],[62,3]]},"1388":{"position":[[35,3]]},"1390":{"position":[[0,6],[32,8],[52,10],[63,14],[92,3],[100,2],[105,7],[115,4]]},"1393":{"position":[[0,7],[8,6],[15,6],[25,7],[35,6],[44,3],[50,4],[61,7],[94,6],[108,4],[113,7],[121,9],[133,5],[141,5],[147,4],[154,5],[160,4],[167,6],[179,6],[192,4],[197,6],[204,6],[224,8],[233,3],[237,6],[244,7],[258,8],[273,5],[279,4],[284,7],[302,7],[310,4],[315,5],[326,5],[348,4],[353,5],[359,6],[368,4],[373,6],[380,4],[385,6],[392,7],[400,6],[412,9],[430,4],[435,9],[448,6],[457,6],[465,6],[473,8],[483,4],[488,3],[492,6],[499,7],[509,7],[518,4],[523,4],[528,5],[535,3],[548,15],[569,4],[575,1],[578,6],[586,15],[602,1],[604,7],[613,5],[621,1],[623,5],[629,4],[636,5],[642,1],[644,5],[650,6],[659,4],[667,1],[669,4],[676,2],[679,1],[682,2],[688,1],[690,8],[699,4],[706,2],[711,6],[718,6],[725,3],[730,7],[738,7],[746,10],[761,1],[763,8],[772,4],[780,1],[782,6],[789,3],[798,8],[814,4],[820,1],[823,6],[831,8],[842,5],[850,1],[852,5],[858,5],[866,5],[872,1],[874,5],[880,7],[890,3],[894,1],[897,1],[902,5],[908,1],[910,8],[921,2],[924,3],[931,1],[933,5],[942,3],[949,3],[955,6],[962,3],[970,6],[977,3],[986,7],[1001,4],[1007,1],[1010,6],[1018,7],[1028,5],[1036,1],[1038,5],[1044,5],[1052,5],[1058,1],[1060,5],[1066,7],[1076,3],[1080,3],[1084,5],[1090,3],[1094,1],[1097,1],[1102,5],[1108,1],[1110,8],[1121,2],[1124,1],[1129,1],[1131,4],[1139,1],[1144,3],[1150,3],[1156,1],[1162,6],[1169,3],[1178,9],[1196,3],[1201,4],[1207,1],[1210,6],[1218,9],[1228,3],[1232,5],[1241,1],[1243,7],[1254,3],[1263,9],[1287,4],[1293,1],[1296,6],[1304,9],[1314,3],[1318,7],[1326,7],[1337,3],[1343,6],[1352,4],[1359,3],[1363,4],[1371,6],[1378,4],[1383,3],[1392,1],[1394,7],[1403,3],[1407,6],[1416,6],[1424,5],[1430,4],[1436,1],[1440,1],[1445,1],[1447,1],[1451,3],[1455,4],[1461,3],[1465,4],[1471,3],[1475,7]]},"1395":{"position":[[0,7],[8,7],[16,6],[26,3],[32,11],[44,6],[57,10],[73,4],[78,10],[89,6],[98,4],[103,6],[110,6],[118,6],[125,6],[132,5],[138,4],[143,6],[150,6],[157,4],[162,6],[173,4],[178,13],[192,4],[197,6],[205,6],[213,6],[220,6],[229,10],[242,6],[250,10],[262,4],[268,4],[274,6],[282,6],[290,5],[297,4],[302,4],[307,6],[315,3],[321,6],[329,4],[334,4],[339,6],[354,4],[360,1],[363,10],[375,5],[383,5],[391,3],[395,6],[405,1],[408,8],[420,1],[424,1],[426,4],[432,2],[435,1],[437,3],[443,6],[450,3],[456,4],[462,1],[465,10],[477,4],[484,5],[492,3],[496,6],[506,1],[509,8],[521,1],[525,1],[527,4],[533,5],[539,1],[541,6],[549,6],[556,3],[562,4],[568,1],[571,10],[583,4],[590,6],[599,6],[606,1],[608,4],[615,4],[621,1],[624,10],[636,3],[644,3],[650,6],[659,4],[666,1],[668,6],[676,6],[683,4],[688,3],[697,1],[699,5],[706,3],[710,6],[720,1],[723,3],[729,1],[731,1],[735,1],[737,4],[743,3],[761,1],[763,6],[770,9],[780,6],[787,5],[794,4],[800,1],[802,4],[808,4],[815,3],[821,7],[830,3],[844,4],[850,1],[853,10],[865,3],[869,3],[873,6],[883,1],[885,5],[894,3]]},"1397":{"position":[[0,7],[8,4],[13,6],[23,7],[33,11],[45,6],[54,11],[66,7],[76,4],[84,4],[89,4],[101,1],[110,6],[120,6],[127,9],[142,1],[150,6],[160,7],[168,13],[183,6],[192,6],[200,2],[203,3],[210,6],[217,15],[233,6],[242,3],[249,3],[255,5],[261,3],[271,1],[281,2],[284,3],[291,6],[298,8],[310,3],[317,3],[323,5],[329,3],[339,1],[349,3],[354,6],[364,7],[372,10],[383,7],[391,10],[405,5],[411,6],[420,2],[423,6],[430,9],[440,3],[448,1],[458,6],[465,3],[470,5],[477,11],[492,4],[497,5],[503,1],[507,4],[512,6],[523,1],[533,2],[536,3],[543,6],[550,7],[561,3],[568,3],[574,5],[580,3]]},"1399":{"position":[[1,6],[9,8],[22,6],[30,3],[35,5],[42,11],[56,6],[64,5],[70,4],[75,6],[83,3],[89,5],[96,11],[110,6],[118,8]]},"1401":{"position":[[3,4],[11,7],[56,6],[63,4],[85,5],[93,3],[97,3]]},"1403":{"position":[[7,6],[18,7],[44,7],[59,9],[88,7],[107,4],[112,4],[117,9]]},"1405":{"position":[[10,6],[17,5]]},"1407":{"position":[[6,6],[13,5]]},"1409":{"position":[[32,2],[37,9],[101,4],[106,8],[216,8],[230,4],[235,8],[244,9],[256,4],[261,7],[269,6],[277,5],[293,13],[314,4],[319,13],[333,6],[342,4],[348,1],[350,13],[365,4],[370,7],[378,6],[386,5],[394,3],[398,6],[415,1],[417,1],[421,7],[430,6],[437,3],[446,11],[465,4],[470,11],[482,6],[491,4],[497,1],[499,11],[512,4],[517,7],[525,6],[533,5],[541,3],[545,6],[562,1],[564,1],[568,7],[577,6],[584,3],[602,19],[627,4],[632,19],[652,6],[661,8],[670,8],[681,4],[686,22],[709,8],[718,8],[729,19],[751,6],[759,19],[779,8],[789,8],[801,4],[807,1],[810,19],[831,12],[844,7],[852,6],[875,7],[886,3],[890,7],[903,1],[911,7],[920,1],[924,1],[926,8],[935,4],[940,7],[957,4],[962,4],[985,13],[1002,13],[1018,7],[1029,22],[1052,13],[1067,7],[1075,12],[1089,5],[1117,11],[1132,11],[1146,7],[1156,22],[1179,11],[1192,7],[1200,12],[1214,5],[1241,11],[1259,4],[1264,11],[1276,6],[1285,4],[1291,1],[1293,11],[1306,9],[1316,7],[1324,6],[1332,5],[1340,3],[1344,6],[1359,1],[1361,1],[1365,7],[1374,6],[1381,3],[1400,14],[1421,4],[1426,14],[1441,6],[1450,11],[1462,11],[1476,4],[1482,1],[1485,14],[1501,12],[1514,7],[1522,6],[1545,7],[1556,3],[1560,7],[1573,1],[1581,7],[1590,1],[1594,1],[1596,11],[1608,9],[1618,7],[1635,4],[1640,4],[1649,9],[1662,14],[1677,11],[1690,11],[1705,9],[1715,12],[1729,5],[1754,14]]},"1411":{"position":[[34,2],[39,9],[58,4],[63,17],[81,6],[91,15],[117,6],[124,6]]},"1413":{"position":[[48,7],[59,2],[62,6],[70,18],[70,10],[81,7]]},"1415":{"position":[[12,4],[17,8],[40,8],[49,7]]},"1417":{"position":[[16,9],[28,2],[34,6],[60,7],[78,6],[86,3],[90,1],[95,1],[98,1],[102,7],[110,6],[120,1],[126,2],[129,10],[140,15]]},"1419":{"position":[[32,18],[57,2],[65,4],[70,18],[89,6],[98,9],[108,6],[123,9],[133,4],[138,4]]},"1421":{"position":[[12,3],[16,7],[34,7],[51,4],[57,1],[60,15],[77,11],[89,5],[97,6],[105,5],[113,3],[121,18],[145,8],[155,4],[160,4],[165,5],[172,1],[176,6],[185,4],[190,1],[192,13],[209,3],[214,6],[223,3],[227,8],[236,4],[243,4],[248,5],[254,1],[258,4],[263,6],[272,6],[279,6],[286,3],[291,6],[298,7]]},"1423":{"position":[[0,7],[8,4],[13,6],[23,3],[29,4],[40,15],[56,7],[64,1],[66,3],[70,2],[73,5],[79,3],[83,9],[93,7],[101,7],[109,8],[118,4],[123,15],[139,6],[148,5],[156,6],[163,13],[177,4],[183,18],[202,12],[215,4],[220,6],[234,18],[253,10],[264,1],[266,7],[274,2],[277,6],[284,3],[288,5],[294,4],[299,18],[318,6],[327,8],[338,6],[345,8],[354,4],[359,5],[370,18],[389,7],[397,3],[401,6],[408,1],[410,3],[414,15],[430,4],[435,18],[457,15],[475,3],[483,15],[500,5],[509,6],[519,13],[534,4],[539,4],[545,18],[566,12],[580,4],[585,4],[590,6],[603,2],[606,3],[610,15],[628,6],[635,3],[644,11],[656,6],[663,7],[671,3],[675,5],[681,2],[684,7],[692,1],[694,7],[702,7],[710,3],[714,7],[722,4],[728,1],[731,15],[748,11],[760,8],[771,6],[779,5],[787,3],[795,18],[815,8],[825,8],[835,8],[845,4],[850,4],[855,5],[862,1],[869,8],[878,2],[881,5],[887,8],[898,1],[900,13],[917,3],[921,6],[930,3],[934,8],[948,8],[957,10],[968,5],[974,3],[978,10],[989,4],[995,1],[998,15],[1015,8],[1028,5],[1034,1],[1036,12],[1055,15],[1071,7],[1079,8],[1088,8],[1097,2],[1100,1],[1102,6],[1109,4],[1114,6],[1121,4],[1127,1],[1130,15],[1147,15],[1167,3],[1173,6],[1182,4],[1187,3],[1196,1],[1198,13],[1213,1],[1215,5],[1223,3],[1227,8],[1236,3],[1240,7],[1249,7],[1257,5],[1266,1],[1268,5],[1275,3],[1279,8],[1291,3],[1295,4],[1302,1],[1304,12],[1318,3],[1322,7],[1331,8],[1340,4],[1345,10],[1358,6],[1371,4],[1376,4],[1388,6],[1395,3],[1399,5],[1405,3],[1409,10],[1420,10],[1434,18],[1455,5],[1461,10],[1472,8],[1486,8],[1495,4],[1500,7],[1508,2],[1511,4],[1520,4],[1525,5],[1531,3],[1537,4],[1542,11],[1555,2],[1558,3],[1565,10],[1576,11],[1590,6],[1598,1],[1603,1],[1608,1],[1614,3],[1621,3],[1627,3],[1631,7],[1640,5],[1646,8],[1655,5],[1664,3],[1675,2],[1678,4],[1687,4],[1692,5],[1698,1],[1702,4],[1707,6],[1715,2],[1718,3],[1725,10],[1736,11],[1750,6],[1758,1],[1763,1],[1768,1],[1774,3],[1781,3],[1787,3],[1791,7],[1800,5],[1806,8],[1815,5],[1824,3],[1838,4],[1843,4],[1848,3],[1852,3],[1856,7],[1864,2],[1867,7],[1875,4],[1880,5],[1886,1],[1890,4],[1895,6],[1919,7],[1948,10],[1978,7],[2006,12],[2039,7],[2047,4],[2052,6],[2062,7],[2072,6],[2081,3],[2087,4],[2094,4],[2105,7],[2113,10],[2124,1],[2126,10],[2137,2],[2140,5],[2146,4],[2151,8],[2160,4],[2165,7],[2173,6],[2182,5],[2190,6],[2197,7],[2205,3],[2212,5],[2218,7],[2226,4],[2231,4],[2236,8],[2245,4],[2250,4],[2258,4],[2263,6],[2270,9],[2285,15],[2301,12],[2314,1],[2316,5],[2322,6],[2329,9],[2339,4],[2344,15],[2360,6],[2369,8],[2380,6],[2387,8],[2396,4],[2401,5],[2407,9],[2417,6],[2427,3],[2431,7],[2439,9],[2449,4],[2454,4],[2462,3],[2466,8],[2480,17],[2498,10],[2509,10],[2520,8],[2529,4],[2534,17],[2552,6],[2561,18],[2580,3],[2587,6],[2594,4],[2599,3],[2603,8],[2612,14],[2627,4],[2632,8],[2644,7],[2652,3],[2656,4],[2661,7],[2669,16],[2686,4],[2694,6],[2702,8],[2711,5],[2717,6],[2724,8],[2738,10],[2749,7],[2757,4],[2762,4],[2767,4],[2772,6],[2779,4],[2784,10],[2795,4],[2800,10],[2811,6],[2820,14],[2835,7],[2843,7],[2851,17],[2869,11],[2881,4],[2887,15],[2903,9],[2913,4],[2918,4],[2923,7],[2934,3],[2938,7],[2946,3],[2950,4],[2955,4],[2960,7],[2968,11],[2980,4],[2985,4],[2995,7],[3003,7],[3011,7],[3019,3],[3023,6],[3030,10],[3041,8],[3050,4],[3055,6],[3064,12],[3077,4],[3082,4],[3087,6],[3094,4],[3099,9],[3114,13],[3128,7],[3136,1],[3138,10],[3149,10],[3160,8],[3169,4],[3174,13],[3188,4],[3193,17],[3213,10],[3226,2],[3229,4],[3234,18],[3256,1],[3260,4],[3265,18],[3286,2],[3291,2],[3294,4],[3299,14],[3317,1],[3321,4],[3326,14],[3343,1],[3347,4],[3352,6],[3361,6],[3369,10],[3381,14],[3397,7],[3405,7],[3414,1],[3418,7],[3427,4],[3433,11],[3446,4],[3451,4],[3457,15],[3474,4],[3479,18],[3500,9],[3511,4],[3516,4],[3521,4],[3526,7],[3536,11],[3549,4],[3554,4],[3559,4],[3568,8],[3578,4],[3583,4],[3588,6],[3606,3],[3610,6],[3617,3],[3621,10],[3632,1],[3634,10],[3645,4],[3650,4],[3656,1],[3659,10],[3671,3],[3679,1],[3681,6],[3688,3],[3692,1],[3695,5],[3701,1],[3703,6],[3710,4],[3717,3],[3723,6],[3732,4],[3737,3],[3746,1],[3748,11],[3761,1],[3763,14],[3778,3],[3783,4],[3788,8],[3802,1],[3804,9],[3815,1],[3817,14],[3832,8],[3842,4],[3847,3],[3856,1],[3858,11],[3871,3],[3880,7],[3888,9],[3898,8],[3907,4],[3914,1],[3916,8],[3926,6],[3939,4],[3945,1],[3948,10],[3960,14],[3975,3],[3980,15],[3999,5],[4005,5],[4011,3],[4015,8],[4028,6],[4036,5],[4042,3],[4046,10],[4057,4],[4062,2],[4065,1],[4067,7],[4075,16],[4097,8],[4106,5],[4112,6],[4119,8],[4130,1],[4132,14],[4149,7],[4158,5],[4165,3],[4169,8],[4179,7],[4188,1],[4190,14],[4205,7],[4215,1],[4218,8],[4228,4],[4233,3],[4242,3],[4246,6],[4254,7],[4262,5],[4269,1],[4271,1],[4276,1],[4278,1],[4282,1],[4284,14],[4299,7],[4308,1],[4310,14],[4325,5],[4332,3],[4336,8],[4348,3],[4354,4],[4360,1],[4363,10],[4375,14],[4390,8],[4399,4],[4404,7],[4415,8],[4427,1],[4429,14],[4444,5],[4450,8],[4465,8],[4474,7],[4482,3],[4486,4],[4491,3],[4495,4],[4500,7],[4508,7],[4516,4],[4522,1],[4525,10],[4537,8],[4546,3],[4550,7],[4558,7],[4567,5],[4575,6],[4583,5],[4591,3],[4599,15],[4616,8],[4626,5],[4633,8],[4643,4],[4648,4],[4653,5],[4661,9],[4672,3],[4676,7],[4685,3],[4690,1],[4694,4],[4699,3],[4705,8],[4718,9],[4729,4],[4734,3],[4743,6],[4752,4],[4757,1],[4759,11],[4774,3],[4779,6],[4788,4],[4793,3],[4802,3],[4806,8],[4816,6],[4823,3],[4827,4],[4834,3],[4838,4],[4846,6],[4853,3],[4857,3],[4865,4],[4872,1],[4874,8],[4884,6],[4891,6],[4898,3],[4903,10],[4914,2],[4917,8],[4926,4],[4933,4],[4940,3],[4944,4],[4952,6],[4959,3],[4963,3],[4976,8],[4985,6],[4992,9],[5002,3],[5006,7],[5014,4],[5019,3],[5023,4],[5029,1],[5032,10],[5044,8],[5053,3],[5057,7],[5065,7],[5075,7],[5084,5],[5093,8],[5105,4],[5110,4],[5115,7],[5124,6],[5133,4],[5138,1],[5140,9],[5153,8],[5163,6],[5172,4],[5177,5],[5188,8],[5198,6],[5205,5],[5212,3],[5216,4],[5223,3],[5227,4],[5235,6],[5242,7],[5253,3],[5257,3],[5265,4],[5272,1],[5274,8],[5284,6],[5291,7],[5302,6],[5309,3],[5314,10],[5325,2],[5328,8],[5337,4],[5344,4],[5351,3],[5355,4],[5363,6],[5370,7],[5381,3],[5385,3],[5398,4],[5403,10],[5414,5],[5420,4],[5425,3],[5429,10],[5440,4],[5446,1],[5449,10],[5461,4],[5470,1],[5472,12],[5485,2],[5488,4],[5497,5],[5503,1],[5505,8],[5515,1],[5517,6],[5524,4],[5531,5],[5537,1],[5539,11],[5552,5],[5558,1],[5560,9],[5571,5],[5577,1],[5579,11],[5592,3],[5596,7],[5605,10],[5616,7],[5624,10],[5645,14],[5660,8],[5669,9],[5679,5],[5685,3],[5689,6],[5696,10],[5707,4],[5713,1],[5716,10],[5728,14],[5743,3],[5747,7],[5755,7],[5764,3],[5768,4],[5776,5],[5784,6],[5793,4],[5798,1],[5800,11],[5815,3],[5820,6],[5827,3],[5831,4],[5838,1],[5840,8],[5850,6],[5857,6],[5864,3],[5869,10],[5880,2],[5883,8],[5892,4],[5899,4],[5906,3],[5910,4],[5918,6],[5925,3],[5929,3],[5939,4],[5944,4],[5956,12],[5969,7],[5977,4],[5985,17],[6004,18],[6024,2],[6028,14],[6044,1],[6048,4],[6053,6],[6061,16],[6079,5],[6089,5],[6095,2],[6098,7],[6106,2],[6109,6],[6118,10],[6132,13],[6146,4],[6152,2],[6155,10],[6166,3],[6175,7],[6183,5],[6189,4],[6194,7],[6202,3],[6207,6],[6217,7],[6225,11],[6237,7],[6245,10],[6259,1],[6261,4],[6266,6],[6274,5],[6280,6],[6292,3],[6296,5],[6302,3],[6309,10],[6320,8],[6329,3],[6336,6],[6344,1],[6349,1],[6354,1],[6359,2],[6362,3],[6369,3],[6375,3],[6379,7],[6388,5],[6394,7],[6402,5],[6411,3],[6421,3],[6425,5],[6431,5],[6438,3],[6445,10],[6456,8],[6465,3],[6470,2],[6473,3],[6480,3],[6486,3],[6490,7],[6499,5],[6505,7],[6513,5],[6522,3],[6529,4],[6536,3],[6540,6],[6548,7],[6556,5],[6563,1],[6565,1],[6570,1],[6572,1],[6576,5],[6582,7],[6591,5],[6597,5],[6609,7],[6617,6],[6624,7],[6632,10],[6643,14],[6658,3],[6663,4],[6672,3],[6676,7],[6685,9],[6695,6],[6702,7],[6715,10],[6726,4],[6735,8],[6744,4],[6749,8],[6759,5],[6765,7],[6773,6],[6780,4],[6785,10],[6796,3],[6800,10],[6811,8],[6820,5],[6826,6],[6833,3],[6837,6],[6844,8],[6853,12],[6866,7],[6875,17],[6893,6],[6900,6],[6907,7],[6915,4],[6920,7],[6928,8],[6937,6],[6944,8],[6953,4],[6958,10],[6969,8],[6978,13],[6992,8],[7002,8],[7011,8],[7020,3],[7024,8],[7034,11],[7047,3],[7051,7],[7060,9],[7071,8],[7080,6],[7087,2],[7090,9],[7100,5],[7106,7],[7114,7],[7123,3],[7127,10],[7138,7],[7146,7],[7154,3],[7158,8],[7167,12],[7180,6],[7187,11],[7199,4],[7204,6],[7211,2],[7214,12],[7227,9],[7237,6],[7245,14],[7260,6],[7267,3],[7271,6],[7278,6],[7285,13],[7299,7],[7307,7],[7315,7],[7323,7],[7331,8],[7340,8],[7350,4],[7355,4],[7360,7],[7368,4],[7373,6],[7380,8],[7389,4],[7394,9],[7404,3],[7408,6],[7415,9],[7425,7],[7433,6],[7440,4],[7445,7],[7454,5],[7460,4],[7465,8],[7474,6],[7481,3],[7485,7],[7493,2],[7496,6],[7503,6],[7510,2],[7513,8],[7522,5],[7528,7],[7536,7],[7545,5],[7551,7],[7559,3],[7563,3],[7567,9],[7577,10],[7588,3],[7592,3],[7596,10],[7616,7],[7624,4],[7629,6],[7639,7],[7649,6],[7658,3],[7664,4],[7671,4],[7682,7],[7690,7],[7698,3],[7702,9],[7712,3],[7716,8],[7725,4],[7730,9],[7740,4],[7745,7],[7753,9],[7765,7],[7773,3],[7777,7],[7785,7],[7794,5],[7805,14],[7820,9],[7830,8],[7839,4],[7844,14],[7859,6],[7868,8],[7877,4],[7882,7],[7890,8],[7899,4],[7904,6],[7913,2],[7916,4],[7921,9],[7936,17],[7954,7],[7962,1],[7964,3],[7968,7],[7976,4],[7981,9],[7991,5],[7997,4],[8002,4],[8007,17],[8025,9],[8035,3],[8041,14],[8058,6],[8066,14],[8082,8],[8092,4],[8097,4],[8102,7],[8111,9],[8123,8],[8133,4],[8138,4],[8143,6],[8161,5],[8167,6],[8174,10],[8185,8],[8194,4],[8200,1],[8203,14],[8219,5],[8229,1],[8231,2],[8234,3],[8238,1],[8241,2],[8244,4],[8253,5],[8259,1],[8261,2],[8264,4],[8271,3],[8277,6],[8286,4],[8291,3],[8300,1],[8302,8],[8312,3],[8317,6],[8327,7],[8335,11],[8347,7],[8355,10],[8369,1],[8371,4],[8376,6],[8384,3],[8391,3],[8395,7],[8403,3],[8408,6],[8417,2],[8420,3],[8427,3],[8433,3],[8437,6],[8445,7],[8453,9],[8463,6],[8472,1],[8474,1],[8478,3],[8485,4],[8492,1],[8494,8],[8504,6],[8524,6],[8531,5],[8537,1],[8539,7],[8547,3],[8551,9],[8561,4],[8567,1],[8570,14],[8586,6],[8593,3],[8597,7],[8605,7],[8614,3],[8618,7],[8627,5],[8635,6],[8644,4],[8649,1],[8651,8],[8663,3],[8668,6],[8675,3],[8679,4],[8686,1],[8688,8],[8698,6],[8705,6],[8712,3],[8717,7],[8725,2],[8728,8],[8737,4],[8744,4],[8751,3],[8755,4],[8763,6],[8770,3],[8774,3],[8787,4],[8792,10],[8803,5],[8809,4],[8814,3],[8818,7],[8826,4],[8832,1],[8835,14],[8851,4],[8860,5],[8866,1],[8868,8],[8878,1],[8880,2],[8883,4],[8890,5],[8896,1],[8898,8],[8917,8],[8926,8],[8942,15],[8958,10],[8969,7],[8977,3],[8981,4],[8986,7],[8994,4],[8999,15],[9015,6],[9024,10],[9036,10],[9047,8],[9058,6],[9067,4],[9073,1],[9076,15],[9093,7],[9101,3],[9105,7],[9113,7],[9122,5],[9130,6],[9137,1],[9139,10],[9150,8],[9159,3],[9164,1],[9166,8],[9181,15],[9197,10],[9208,7],[9216,3],[9220,4],[9225,7],[9233,4],[9238,15],[9254,6],[9263,10],[9275,10],[9286,10],[9297,4],[9304,7],[9314,4],[9320,1],[9323,15],[9340,7],[9348,3],[9352,7],[9360,7],[9369,5],[9377,5],[9384,3],[9391,1],[9393,10],[9404,8],[9413,3],[9418,2],[9421,3],[9428,3],[9434,6],[9441,3],[9447,1],[9449,10],[9463,5],[9469,6],[9476,3],[9489,10],[9500,14],[9519,4],[9524,7],[9532,6],[9541,5],[9549,6],[9556,7],[9564,3],[9568,8],[9577,4],[9582,4],[9589,4],[9594,10],[9605,6],[9614,2],[9617,4],[9622,5],[9628,11],[9640,7],[9650,4],[9656,1],[9659,10],[9671,8],[9680,3],[9684,7],[9692,7],[9701,5],[9709,6],[9717,5],[9725,1],[9727,2],[9730,4],[9737,5],[9743,1],[9745,2],[9748,6],[9757,6],[9766,4],[9773,3],[9777,4],[9785,6],[9792,3],[9796,3],[9802,7],[9811,1],[9813,11],[9827,7],[9836,5],[9843,5],[9850,7],[9859,1],[9861,11],[9873,7],[9883,1],[9886,8],[9896,4],[9901,3],[9910,3],[9914,6],[9922,5],[9928,7],[9936,2],[9939,7],[9948,1],[9950,1],[9954,1],[9956,11],[9968,7],[9977,6],[9984,3],[9992,4],[9998,1],[10001,10],[10013,8],[10022,3],[10026,7],[10034,7],[10044,7],[10053,5],[10062,1],[10064,2],[10067,4],[10074,5],[10080,1],[10082,2],[10085,6],[10094,6],[10103,4],[10110,3],[10114,4],[10122,6],[10129,7],[10140,3],[10144,3],[10150,7],[10159,6],[10166,1],[10168,11],[10181,3],[10196,5],[10202,7],[10214,4],[10219,4],[10231,6],[10238,10],[10249,7],[10260,17],[10278,2],[10282,10],[10297,10],[10309,11],[10322,7],[10330,7],[10339,1],[10348,5],[10354,7],[10362,9],[10372,7],[10380,5],[10388,5],[10394,7],[10402,4],[10412,6],[10419,8],[10428,3],[10435,7],[10443,10],[10459,3],[10463,5],[10469,7],[10477,6],[10488,15],[10505,10],[10517,10],[10529,8],[10541,6],[10549,1],[10554,1],[10559,1],[10566,7],[10574,6],[10581,3],[10586,6],[10597,3],[10601,5],[10607,7],[10615,10],[10629,4],[10634,4],[10639,7],[10648,1],[10651,6],[10662,15],[10679,10],[10691,10],[10703,10],[10715,10],[10729,7],[10737,6],[10744,3],[10749,6],[10760,4],[10765,3],[10769,6],[10776,6],[10785,4],[10790,5],[10801,10],[10813,3],[10817,6],[10825,7],[10833,5],[10841,1],[10843,1],[10847,5],[10853,5],[10860,4],[10867,4],[10872,5],[10878,1],[10882,4],[10887,6],[10896,3],[10900,7],[10909,7],[10917,7],[10925,3],[10929,5],[10941,3],[10945,7],[10953,7],[10961,7],[10969,2],[10972,1],[10974,10],[10985,6],[10992,7],[11000,4],[11005,12],[11018,8],[11027,2],[11030,7],[11039,8],[11048,3],[11052,16],[11069,2],[11072,7],[11080,4],[11085,9],[11095,8],[11105,7],[11113,2],[11116,8],[11126,3],[11130,7],[11138,3],[11142,8],[11151,10],[11163,4],[11168,1],[11170,3],[11174,2],[11177,9],[11187,2],[11190,2],[11193,4],[11198,10],[11210,4],[11215,10],[11226,7],[11234,9],[11245,7],[11253,3],[11257,9],[11267,8],[11276,8],[11285,8],[11295,11],[11307,8],[11316,7],[11324,3],[11328,10],[11339,7],[11348,8],[11357,3],[11361,8],[11370,8],[11379,8],[11389,5],[11395,3],[11399,2],[11402,7],[11410,3],[11414,10],[11425,3],[11429,8],[11438,7],[11446,9],[11457,4],[11462,7],[11470,9],[11482,7],[11490,3],[11494,7],[11502,7],[11511,5],[11519,8],[11528,8],[11538,4],[11543,7],[11551,12],[11564,3],[11568,10],[11579,6],[11586,3],[11590,9],[11600,8],[11609,3],[11613,2],[11616,10],[11627,12],[11640,3],[11644,11],[11656,7],[11664,7],[11672,7],[11681,7],[11689,1],[11691,5],[11697,2],[11700,8],[11709,9],[11719,8],[11728,12],[11741,2],[11744,1],[11746,9],[11756,8],[11765,8],[11774,8],[11783,8],[11793,10],[11805,9],[11815,7],[11823,8],[11832,4],[11837,9],[11847,13],[11862,4],[11867,2],[11870,3],[11874,3],[11878,7],[11886,5],[11892,13],[11907,8],[11916,3],[11920,2],[11923,8],[11932,4],[11937,6],[11944,4],[11949,4],[11955,3],[11959,2],[11962,8],[11971,2],[11974,7],[11982,7],[11990,7],[11998,8],[12007,10],[12018,7],[12026,10],[12038,4],[12043,17],[12061,4],[12066,7],[12075,7],[12083,4],[12088,17],[12106,4],[12111,7],[12120,7],[12130,6],[12138,13],[12152,4],[12160,11],[12172,7],[12181,4],[12186,18],[12205,6],[12214,8],[12225,7],[12235,4],[12241,1],[12244,18],[12264,7],[12272,3],[12276,7],[12284,7],[12293,5],[12304,7],[12312,3],[12316,2],[12319,7],[12329,8],[12338,8],[12348,4],[12353,15],[12369,6],[12378,7],[12386,8],[12395,3],[12404,3],[12408,8],[12417,5],[12423,7],[12431,2],[12434,7]]},"1425":{"position":[[16,3],[20,11],[34,6],[41,4],[46,11],[58,5],[66,6],[76,11],[90,5]]},"1427":{"position":[[0,6],[7,5],[27,5],[77,2],[82,7],[92,9],[106,6],[113,5]]},"1429":{"position":[[0,7],[8,5],[16,2]]},"1431":{"position":[[7,5],[13,2],[53,2],[82,5],[88,12],[140,3],[153,3],[162,2],[175,2],[184,2],[194,3],[205,2],[220,5],[226,12],[239,3],[247,2],[250,1],[252,2],[264,5],[270,14],[285,3],[291,4],[298,4],[307,5],[315,2],[322,3],[326,5],[332,5],[338,7],[346,5],[352,11],[365,5],[372,3],[376,6],[386,2],[393,1],[395,1],[399,5],[405,6],[413,3],[417,6],[425,2],[433,1],[435,1],[439,5],[445,5],[452,3],[456,6],[464,2],[474,1],[476,1],[480,5],[486,10],[498,3],[502,6],[512,2],[521,1],[523,1],[527,5],[533,5],[546,4],[551,13],[565,8],[574,6],[582,5],[590,1],[593,3],[600,2],[603,6],[610,8],[620,2],[623,3],[630,3],[636,6],[643,3],[649,5],[655,1],[657,5],[665,6],[672,5],[678,13],[692,1],[694,2]]},"1433":{"position":[[8,5],[17,5],[23,5],[38,4],[43,3],[47,6],[56,1],[58,1],[62,5],[79,5],[85,5],[98,5],[106,9],[129,9],[142,5],[148,10],[175,9],[198,9],[208,5],[222,5],[228,11],[240,2],[245,4],[252,4],[261,4],[270,7],[278,4],[283,6],[293,3],[299,7],[307,5],[315,4],[323,4],[328,4],[337,3],[341,7],[350,5],[358,2],[361,4],[370,5],[376,4],[385,3],[389,7],[398,9],[414,3],[418,7],[427,5],[433,5],[441,5],[447,10],[464,4],[469,5],[475,1],[479,4],[484,6],[492,5],[498,10],[511,3],[515,7],[524,3],[534,5],[555,4],[563,6],[573,3],[580,6],[590,5],[597,5],[603,12],[617,3],[630,9]]},"1435":{"position":[[9,7],[17,4],[22,6],[32,3],[38,6],[45,3],[49,8],[58,6],[67,7],[75,5],[84,4],[89,4],[98,6],[105,4],[111,5],[117,5],[125,2],[129,2],[135,5],[141,13],[157,2],[160,2],[165,3],[169,6],[177,2],[180,7],[190,1],[192,1],[196,2],[199,9],[210,3],[214,6],[222,4],[227,6],[236,1],[239,1],[241,1],[245,2],[248,4],[253,4],[259,2],[262,4],[267,7],[276,3],[280,1],[283,3],[290,5],[296,2],[299,4],[306,3],[310,6],[318,10],[331,1],[334,1],[336,1],[340,3],[344,4],[350,3],[354,7],[365,3],[369,1],[372,3],[379,5],[385,2],[388,8],[399,3],[403,6],[411,8],[422,1],[425,1],[427,1],[431,3],[435,3],[440,3],[444,5],[463,4],[468,4],[474,5],[480,5],[486,2],[489,7],[498,3],[502,2],[505,1],[507,4],[512,6],[520,4],[526,5],[533,10],[545,6],[552,3],[556,8],[565,6],[572,2],[575,1],[577,1],[579,10],[591,6],[598,3],[602,1],[604,3],[608,2],[611,2],[614,1],[616,8],[627,9],[637,3],[641,8],[652,8],[661,2],[664,8],[674,11],[674,3],[678,7],[686,1],[688,8],[698,10],[698,3],[702,6],[710,8],[720,12],[720,3],[724,8],[734,8],[744,12],[744,3],[748,8],[758,8],[768,11],[768,3],[772,7],[781,8],[791,6],[798,5],[804,8],[814,4],[819,5],[825,8],[835,7],[843,2],[846,8],[856,3],[860,3],[864,8],[874,3],[878,8],[887,40],[928,8],[938,3],[942,4],[947,4],[952,2],[955,5],[961,2],[964,3],[968,8],[978,3],[982,8],[991,5],[999,3],[1003,3],[1007,6],[1014,40],[1056,4],[1064,6],[1072,6],[1080,4],[1085,4],[1091,3],[1095,7],[1103,3],[1108,4],[1114,3],[1118,3],[1122,1],[1124,2],[1127,2],[1130,2],[1133,4],[1139,4],[1144,1]]},"1438":{"position":[[0,4],[5,13],[19,9],[29,6],[39,3],[45,3],[49,1],[51,7],[59,8],[68,7],[76,12],[90,1],[93,2],[96,1],[98,5],[106,9],[118,5],[124,12],[139,5],[145,2],[150,1],[153,1],[158,2],[161,6],[169,8],[178,3],[184,5],[190,13],[204,1],[206,2],[212,1],[214,5],[222,6],[231,4],[236,5],[242,1],[246,4],[251,6]]},"1440":{"position":[[0,4],[5,18],[28,5],[34,4],[43,2],[46,1],[51,7],[62,1],[67,3],[73,3],[77,7],[85,2],[88,6],[97,5],[105,1],[107,1],[111,1],[114,5],[120,10],[144,5],[153,5],[159,5],[167,2],[170,9],[181,5],[187,3],[193,5],[200,4],[206,2],[209,4],[214,1],[232,14]]},"1442":{"position":[[0,4],[5,11],[21,2],[25,2],[31,5],[37,13],[53,2],[57,2],[62,3],[66,7],[86,6],[95,3],[99,6],[112,1],[114,1],[120,1],[122,3],[130,1],[132,1],[136,2],[139,4],[144,4],[150,2],[153,4],[158,7],[167,2],[170,9],[181,3],[185,7],[195,1],[203,3],[207,1],[210,3],[217,5],[223,2],[226,4],[233,3],[237,6],[248,1],[251,1],[253,1],[257,3],[261,4],[267,3],[271,7]]},"1444":{"position":[[0,13],[35,12],[59,14],[77,2],[80,1],[82,2],[99,12],[121,7],[129,5],[138,2],[221,2]]},"1447":{"position":[[7,6],[30,5],[36,9],[46,6],[53,2]]},"1449":{"position":[[6,7],[26,7],[72,7],[100,7],[111,7]]},"1451":{"position":[[9,7],[20,6],[27,6],[34,2],[40,5],[62,4],[67,5],[73,6],[82,2],[85,6],[92,4],[97,6],[104,4],[109,6],[116,7],[124,6],[141,7],[149,4],[154,6],[163,6],[182,6],[189,6],[196,2],[199,4],[205,1],[208,6],[216,6],[223,3],[227,7],[235,7],[246,3],[252,6],[261,4],[268,3],[272,4],[280,6],[287,4],[292,3],[301,1],[303,7],[312,3],[316,6],[325,6],[333,5],[339,4],[345,1],[349,1],[354,1],[356,1],[360,3],[364,4],[370,3],[374,4],[380,3],[384,7],[404,2],[407,3],[411,7],[422,3],[428,3],[432,7],[443,3],[447,7],[456,3],[462,1],[466,3],[470,7]]},"1453":{"position":[[10,4],[16,1],[19,10],[31,3],[39,3],[45,6],[54,4],[61,1],[63,6],[71,6],[78,4],[83,3],[92,1],[94,5],[101,3],[105,6],[115,1],[118,3],[124,1],[126,1],[130,1],[132,4],[138,3],[156,7],[167,4],[172,4],[177,6],[185,1],[188,1],[190,6],[197,4],[202,6],[209,5],[216,4],[222,1],[224,4],[230,4],[237,3],[243,7],[252,3],[257,7],[266,7],[288,5],[299,7],[307,3],[311,6],[321,1],[324,3],[328,5],[334,4],[339,6],[348,1],[350,1],[354,1],[356,4],[364,5],[379,7],[387,3],[391,2],[397,7],[407,6],[418,4],[424,1],[427,10],[439,6],[446,3],[450,6],[458,6],[467,3],[471,6],[481,1],[484,3],[488,6],[495,6],[502,5],[510,1],[512,1],[516,1],[518,4],[524,3],[529,6],[536,3],[540,7],[551,1],[554,3],[558,6],[567,1],[569,1],[573,1],[575,4],[581,3]]},"1455":{"position":[[0,10],[12,6],[20,6],[28,8],[41,6],[49,3],[54,5],[61,11],[75,6],[83,5],[89,4],[94,6],[102,3],[108,5],[115,11],[129,6],[137,3],[141,5],[147,4],[152,6],[160,3],[165,5],[172,11],[186,6],[194,4],[199,5],[205,2],[208,6],[216,5],[223,3],[229,6],[237,3],[241,6],[248,6],[255,5],[262,5],[269,3],[275,6],[283,8]]},"1457":{"position":[[0,11],[14,1]]},"1462":{"position":[[14,6],[21,6],[28,2],[31,4],[36,7],[44,9],[56,5],[64,5],[70,4],[77,5],[83,4],[90,6],[109,6],[116,3],[120,6],[128,6],[149,6],[156,6],[163,2],[169,5],[191,4],[196,5],[202,6],[211,2],[214,6],[221,4],[226,6],[233,4],[238,6],[245,7],[253,6],[275,6],[282,6],[289,2],[295,11],[321,4],[327,1],[330,6],[338,11],[350,3],[354,5],[362,3],[366,6],[376,1],[378,5],[384,5],[392,5],[398,1],[400,5],[406,7],[416,2],[419,3],[424,2],[430,1],[432,8],[441,3],[445,2],[450,2],[455,6],[462,3],[466,6],[473,3],[477,7],[488,6],[496,7],[504,3],[508,5]]},"1464":{"position":[[2,6],[16,7],[24,3],[28,2],[34,7],[44,6],[55,4],[61,1],[64,10],[76,6],[83,3],[87,6],[95,6],[104,3],[108,6],[118,1],[121,3],[125,6],[132,6],[139,5],[147,1],[149,1],[153,1],[155,4],[161,3],[166,6],[173,3],[177,7],[188,1],[191,3],[195,6],[204,1],[206,1],[210,1],[212,4],[218,3]]},"1466":{"position":[[0,6],[11,7],[22,4],[27,2],[33,1],[36,11],[58,11],[70,11],[82,6],[89,5],[96,4],[103,11],[117,2],[122,6],[131,4],[138,3],[144,7],[154,5],[161,3],[171,4],[176,5],[182,1],[186,4],[191,11]]},"1468":{"position":[[1,6],[9,8],[22,6],[30,3],[35,5],[42,11],[56,6],[64,5],[70,4],[75,6],[83,3],[89,5],[96,11],[110,6],[118,3],[122,6],[129,6],[136,5],[143,5],[150,3],[156,6],[164,8]]},"1470":{"position":[[0,11],[16,4],[21,9],[35,4],[40,9],[53,6],[60,5],[69,2]]},"1477":{"position":[[16,6],[23,7],[31,2],[37,12],[60,4],[65,12],[78,3],[87,4],[104,5],[112,7],[120,12],[135,4],[140,7],[148,7],[161,12],[174,6],[183,4],[189,1],[191,12],[205,6],[214,6],[261,6],[273,6],[281,7],[292,7],[303,7],[313,1],[321,11],[344,4],[349,11],[361,6],[370,3],[374,7],[382,5],[388,12],[413,6],[420,6],[427,2],[430,4],[436,1],[439,11],[452,12],[465,4],[470,6],[478,5],[486,1],[488,2],[491,4],[498,5],[504,1],[506,2],[509,6],[518,4],[524,2],[530,1],[532,8],[541,4],[547,2],[551,2],[556,6],[563,6],[570,3],[575,7],[583,3],[587,10],[602,2],[605,4],[610,5],[619,7],[629,6],[636,6],[643,3],[648,7],[656,7],[664,7],[676,2],[679,3],[686,4],[691,3],[695,5],[704,3],[711,3],[717,6],[724,3],[730,4],[735,5],[743,7],[751,3],[755,7],[764,7],[775,4],[780,3],[784,4],[792,6],[799,3],[805,4],[811,1],[814,11],[827,11],[839,4],[844,6],[852,5],[860,1],[862,2],[865,4],[872,5],[878,1],[880,2],[883,6],[892,4],[898,2],[904,1],[906,8],[915,4],[921,2],[925,2],[930,6],[937,6],[944,3],[949,7],[957,3],[961,10],[976,2],[979,4],[984,5],[993,7],[1003,6],[1010,6],[1017,3],[1022,7],[1030,7],[1038,7],[1050,2],[1053,3],[1060,4],[1065,3],[1069,4],[1077,3],[1084,3],[1090,6],[1097,3],[1103,4],[1108,5],[1116,7],[1124,3],[1128,7],[1137,7],[1148,4],[1153,3],[1157,4],[1165,6],[1172,3],[1178,6],[1211,6],[1255,9],[1267,6],[1274,4],[1280,1],[1283,11],[1296,6],[1303,3],[1307,7],[1315,7],[1326,3],[1332,6],[1341,4],[1348,3],[1352,4],[1360,6],[1367,4],[1372,3],[1381,1],[1383,7],[1392,3],[1396,6],[1405,11],[1418,5],[1424,4],[1430,1],[1436,1],[1438,1],[1442,3],[1446,4],[1452,3],[1456,7],[1472,11],[1487,2],[1490,3],[1494,2],[1505,2],[1508,3],[1512,7],[1523,3],[1529,3],[1533,7],[1544,5],[1550,4],[1556,1],[1559,7],[1569,7],[1577,2],[1580,6],[1589,4],[1596,2],[1603,8],[1625,1],[1627,2],[1630,5],[1638,4],[1644,2],[1650,1],[1652,8],[1661,3],[1665,2],[1669,1],[1671,2],[1674,7],[1684,2],[1688,2],[1694,4],[1699,5],[1708,7],[1718,2],[1721,3],[1725,7],[1736,3],[1742,3],[1746,7],[1757,5],[1763,4],[1769,3],[1774,7],[1784,7],[1792,11],[1806,4],[1818,8],[1845,2],[1848,4],[1853,1],[1855,7],[1864,1],[1866,5],[1875,6],[1885,1],[1887,6],[1894,1],[1897,2],[1900,1],[1902,7],[1913,3],[1919,6],[1928,4],[1933,1],[1935,7],[1946,6],[1954,4],[1961,4],[1966,5],[1972,4],[1977,8],[1986,1],[1988,9],[2001,4],[2006,11],[2020,1],[2022,7],[2033,5],[2039,4],[2045,3],[2050,7],[2060,7],[2070,4],[2086,4],[2091,3],[2096,3]]},"1479":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[62,6],[70,8],[83,4],[89,8],[102,6],[110,3],[115,5],[122,11],[136,11],[149,5],[155,4],[160,6],[170,5],[177,11],[191,6],[199,3],[203,5],[209,4],[214,6],[222,7],[230,2],[233,6],[241,6],[249,3],[254,5],[261,4],[268,11],[281,5],[287,4],[292,6],[302,5],[309,4],[316,6],[324,3],[328,5],[334,4],[339,6],[347,4],[352,7],[360,7],[369,11],[382,4],[387,5],[393,2],[396,7],[405,5],[412,3],[418,3],[422,3],[426,5],[432,7],[443,6],[451,8],[464,4],[470,8]]},"1485":{"position":[[21,6],[28,7],[36,2],[42,7],[75,6],[89,4],[94,7],[102,9],[114,5],[122,5],[128,4],[135,5],[141,4],[148,6],[155,6],[162,5],[169,5],[178,12],[200,12],[217,6],[237,11],[260,4],[265,11],[277,6],[286,3],[290,7],[298,5],[304,12],[336,3],[340,12],[353,4],[360,6],[371,8],[381,4],[389,6],[396,6],[403,2],[409,8],[430,15],[448,8],[457,4],[463,1],[466,11],[479,8],[488,3],[492,7],[501,5],[509,1],[511,2],[514,4],[521,5],[527,1],[529,2],[532,6],[541,4],[549,3],[553,4],[560,2],[563,1],[566,2],[572,1],[574,8],[583,4],[590,2],[595,6],[602,6],[609,3],[614,7],[622,7],[630,10],[645,1],[647,8],[656,4],[665,11],[678,3],[683,3],[688,5],[695,7],[704,4],[710,3],[714,12],[732,3],[736,7],[745,10],[759,3],[763,4],[771,6],[778,3],[803,6],[810,6],[817,2],[820,4],[826,1],[829,11],[842,8],[856,6],[864,5],[873,1],[875,2],[878,5],[886,5],[892,1],[894,2],[897,7],[907,7],[918,4],[923,3],[927,6],[934,4],[940,4],[948,4],[953,3],[957,6],[964,4],[970,6],[982,6],[991,3],[995,5],[1001,4],[1006,6],[1014,5],[1020,5],[1028,4],[1033,4],[1038,6],[1046,5],[1054,2],[1057,4],[1062,4],[1070,6],[1077,3],[1081,6],[1089,8],[1098,10],[1109,2],[1113,1],[1117,4],[1125,2],[1128,7],[1136,4],[1144,6],[1151,3],[1157,4],[1162,4],[1170,4],[1175,4],[1181,2],[1187,1],[1189,8],[1198,4],[1204,2],[1208,2],[1213,6],[1220,3],[1224,6],[1232,7],[1241,1],[1243,3],[1247,10],[1260,4],[1268,3],[1272,1],[1275,3],[1282,5],[1288,4],[1293,4],[1300,2],[1303,3],[1310,5],[1316,3],[1322,3],[1329,3],[1335,6],[1342,3],[1350,7],[1358,4],[1366,4],[1371,4],[1376,4],[1384,5],[1390,6],[1399,6],[1406,6],[1414,4],[1420,6],[1427,3],[1433,3],[1437,4],[1445,5],[1451,1],[1453,8],[1464,2],[1468,7],[1476,4],[1484,2],[1487,3],[1494,5],[1500,4],[1507,3],[1514,3],[1520,6],[1527,3],[1532,3],[1542,6],[1549,6],[1557,3],[1563,4],[1569,1],[1572,11],[1585,8],[1596,5],[1604,6],[1612,3],[1619,1],[1621,8],[1639,3],[1643,1],[1646,4],[1654,5],[1660,6],[1669,2],[1672,3],[1679,1],[1681,12],[1694,4],[1701,3],[1708,3],[1725,6],[1732,3]]},"1487":{"position":[[11,4],[17,1],[20,10],[32,12],[49,6],[58,6],[67,6],[75,4]]},"1489":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,7],[459,5],[466,3],[472,3],[476,3],[480,5],[486,7],[496,8],[505,3],[509,8],[522,6],[530,8],[542,7],[551,6],[559,4],[565,8],[577,7],[586,4]]},"1495":{"position":[[9,5],[17,4],[22,7],[30,4],[35,5],[41,7],[56,5],[65,6],[72,6],[79,2],[85,5],[100,4],[105,5],[111,6],[120,4],[125,3],[132,1],[140,1],[147,7],[155,6],[170,4],[175,6],[195,5],[217,4],[222,5],[228,6],[237,2],[240,6],[247,4],[252,6],[259,4],[264,6],[271,7],[279,6],[299,4],[304,5],[319,7],[327,4],[332,5],[349,9],[359,3],[370,6],[395,5],[404,6],[411,6],[418,2],[424,7],[457,6],[471,4],[476,7],[484,9],[496,5],[504,5],[510,4],[517,5],[523,4],[530,6],[537,6],[544,5],[551,5],[559,6],[579,6],[623,9],[635,6],[642,4],[648,1],[651,6],[659,6],[666,3],[670,7],[678,7],[689,3],[695,6],[704,4],[711,3],[715,4],[723,6],[730,4],[735,3],[744,1],[746,7],[755,3],[759,6],[768,6],[776,5],[782,4],[788,1],[794,1],[796,1],[800,3],[804,4],[810,3],[814,7],[830,6],[840,2],[843,3],[847,2],[858,2],[861,3],[865,7],[876,3],[882,3],[886,7],[897,5],[903,4],[909,1],[912,7],[922,7],[930,2],[933,6],[942,4],[949,2],[956,8],[978,1],[980,2],[983,5],[991,3],[996,2],[1002,1],[1004,8],[1013,3],[1017,2],[1021,1],[1023,2],[1026,7],[1036,2],[1040,2],[1045,2],[1048,3],[1052,7],[1063,3],[1069,3],[1073,7],[1084,5],[1090,4],[1096,3],[1101,7],[1111,7],[1119,3],[1123,5],[1131,4],[1143,8],[1170,2],[1173,4],[1178,1],[1180,7],[1189,1],[1191,5],[1200,6],[1210,1],[1212,6],[1219,1],[1222,2],[1225,1],[1227,7],[1238,3],[1244,6],[1253,4],[1258,1],[1260,7],[1271,6],[1279,4],[1286,4],[1291,5],[1297,4],[1302,8],[1311,1],[1313,9],[1326,4],[1331,11],[1345,1],[1347,7],[1358,5],[1364,4],[1370,3],[1375,7],[1385,7],[1395,4],[1411,3],[1416,3]]},"1497":{"position":[[2,5],[12,4],[26,4],[32,1],[35,10],[47,3],[55,3],[59,5],[67,1],[69,3],[75,5],[83,6],[92,4],[99,1],[101,6],[109,6],[116,4],[121,3],[130,1],[132,5],[139,3],[143,6],[153,1],[156,3],[162,1],[164,1],[168,1],[170,4],[176,3],[194,7],[205,4],[210,4],[215,6],[222,5],[229,1],[232,2],[235,5],[241,1],[246,1],[250,1],[252,6],[259,4],[264,6],[271,5],[278,4],[284,1],[286,4],[292,4],[299,3],[305,7],[314,3],[319,7],[328,7],[337,9],[348,4],[359,4],[366,1],[368,6],[375,4],[380,6],[387,5],[394,4],[400,1],[402,4],[408,4],[415,3],[421,2],[426,4],[433,7],[442,3],[447,7],[456,7],[465,9],[476,4],[497,5],[508,7],[516,3],[520,6],[530,1],[533,3],[537,5],[543,4],[548,6],[557,1],[559,1],[563,1],[565,4],[573,5],[579,7]]},"1499":{"position":[[0,4],[6,1],[9,11],[22,6],[29,3],[33,6],[40,5],[47,6],[54,5],[62,6],[69,6],[76,5],[82,4],[88,1],[91,7],[101,4],[106,7],[114,7],[124,4],[130,3],[134,7],[143,4],[149,1],[153,1],[157,3],[161,4],[167,3],[171,7]]},"1501":{"position":[[0,10],[12,6],[29,10],[41,4],[47,6],[55,8],[68,4],[74,8],[87,6],[95,3],[100,5],[107,11],[121,6],[129,5],[135,4],[140,6],[150,5],[157,11],[171,6],[179,3],[183,5],[189,4],[194,6],[202,7],[210,2],[213,6],[221,6],[229,3],[234,5],[241,4],[248,6],[256,5],[262,4],[267,6],[277,5],[284,4],[295,11],[311,6],[319,3],[323,5],[329,4],[334,6],[342,4],[347,7],[355,7],[364,6],[372,4],[377,5],[383,2],[386,6],[394,5],[401,3],[407,6],[415,3],[419,6],[426,6],[433,5],[440,5],[447,3],[453,6],[461,8],[474,4],[480,8]]},"1504":{"position":[[37,4],[42,4],[47,5],[67,6],[83,3]]},"1507":{"position":[[2,14],[28,6],[35,6],[42,2],[45,4],[51,1],[54,11],[67,14],[82,6],[89,7],[98,5],[106,1],[108,2],[111,4],[118,5],[124,1],[126,2],[129,6],[138,4],[146,6],[153,4],[160,7],[169,6],[179,1],[181,8],[190,4],[196,2],[199,6],[209,7],[217,5],[226,7],[245,7],[253,3],[257,4],[264,3],[268,6],[276,7],[284,3],[288,7],[296,2],[300,1],[302,1],[306,4],[330,1],[332,8],[341,4],[350,11],[363,3],[368,6],[376,4],[382,6],[389,12],[405,5],[412,7],[440,2],[443,6],[453,7],[461,5],[470,7],[480,6],[487,5],[495,1],[497,8],[506,4],[512,5],[520,7],[528,3],[532,6],[540,7],[548,3],[552,7],[560,2],[564,1],[566,1],[570,4],[578,4],[585,3],[589,6],[597,10],[608,3],[612,7],[620,2],[624,1],[627,3],[631,7],[640,1],[644,4],[652,6],[659,3],[667,8],[677,4],[685,6],[692,6],[699,2],[705,8],[726,15],[744,8],[753,4],[759,1],[762,11],[775,8],[784,3],[788,7],[797,5],[805,1],[807,2],[810,4],[817,5],[823,1],[825,2],[828,6],[837,4],[845,3],[849,4],[856,2],[859,1],[862,2],[868,1],[870,8],[879,4],[886,2],[891,6],[898,6],[905,3],[910,7],[918,7],[926,10],[941,1],[943,8],[952,4],[961,11],[974,3],[979,3],[984,5],[991,7],[1000,4],[1006,3],[1010,12],[1028,3],[1032,7],[1041,10],[1055,3],[1059,4],[1067,6],[1074,3],[1099,6],[1106,6],[1113,2],[1116,4],[1122,1],[1125,11],[1138,8],[1152,6],[1160,5],[1169,1],[1171,2],[1174,5],[1182,5],[1188,1],[1190,2],[1193,7],[1203,7],[1214,4],[1219,3],[1223,6],[1230,4],[1236,4],[1244,4],[1249,3],[1253,6],[1260,4],[1266,6],[1278,6],[1287,3],[1291,5],[1297,4],[1302,6],[1310,5],[1316,5],[1324,4],[1329,4],[1334,6],[1342,5],[1350,2],[1353,4],[1358,4],[1366,6],[1373,3],[1377,6],[1385,8],[1394,10],[1405,2],[1409,1],[1413,4],[1421,2],[1424,7],[1432,4],[1440,6],[1447,3],[1453,4],[1458,4],[1466,4],[1471,4],[1477,2],[1483,1],[1485,8],[1494,4],[1500,2],[1504,2],[1509,6],[1516,3],[1520,6],[1528,7],[1537,1],[1539,3],[1543,10],[1556,4],[1564,3],[1568,1],[1571,3],[1578,5],[1584,4],[1589,4],[1596,2],[1599,3],[1606,5],[1612,3],[1618,3],[1625,3],[1631,6],[1638,3],[1646,7],[1654,4],[1662,4],[1667,4],[1672,4],[1680,5],[1686,6],[1695,6],[1702,6],[1710,4],[1716,6],[1723,3],[1729,3],[1733,4],[1741,5],[1747,1],[1749,8],[1760,2],[1764,7],[1772,4],[1780,2],[1783,3],[1790,5],[1796,4],[1803,3],[1810,3],[1816,6],[1823,3],[1828,3],[1838,6],[1845,6],[1853,3],[1859,4],[1865,1],[1868,11],[1881,8],[1892,5],[1900,6],[1908,3],[1915,1],[1917,8],[1935,3],[1939,1],[1942,4],[1950,5],[1956,6],[1965,2],[1968,3],[1975,1],[1977,12],[1990,4],[1997,3],[2004,3],[2021,6],[2028,3]]},"1509":{"position":[[7,4],[12,8],[21,3],[25,5],[33,4],[38,8],[49,4],[54,4],[59,5],[67,4],[72,6],[79,6],[88,2],[91,4],[96,5],[102,5],[108,8],[117,7],[125,6],[132,3],[136,2],[139,6],[153,4],[158,9],[168,7],[176,6],[184,5],[190,8],[200,3],[204,2],[207,6],[216,6],[225,6],[233,6],[241,7],[250,7],[259,5],[266,5],[273,3],[278,3],[287,4],[293,1],[296,6],[304,4],[309,5],[315,8],[325,6],[332,6],[340,4],[348,3],[355,2],[358,5],[366,1],[368,5],[376,6],[385,1],[387,2],[390,4],[397,5],[403,1],[405,2],[408,6],[417,8],[434,6],[442,4],[450,4],[458,5],[466,5],[473,3],[480,3],[484,7],[492,6],[500,4],[509,2],[515,4],[520,3],[526,6],[534,4],[539,2],[542,2],[545,2],[548,2],[551,2],[554,3],[560,3],[564,7],[572,1],[574,3],[582,1],[587,1],[592,1],[596,1],[598,1],[602,2],[606,8],[616,1],[618,7],[627,3],[634,4],[640,1],[643,6],[651,5],[657,6],[664,6],[672,4],[680,3],[687,1],[689,4],[694,4],[700,6],[708,4],[719,4],[725,1],[728,6],[736,5],[742,6],[749,6],[757,4],[765,3],[772,1],[774,4],[779,4],[785,6],[793,4],[804,4],[810,1],[813,6],[821,6],[828,6],[835,6],[843,4],[851,3],[858,1],[860,4],[865,5],[872,6],[880,4],[897,4],[902,13],[916,6],[925,3],[930,6],[939,4],[944,16],[964,13],[980,6],[988,13],[1003,3],[1008,9],[1019,4],[1026,4],[1032,2],[1035,6],[1054,4],[1060,1],[1063,13],[1078,5],[1088,1],[1090,3],[1094,5],[1101,7]]},"1511":{"position":[[9,1],[26,2],[29,1],[33,11],[45,14],[60,7],[68,16],[85,11],[105,2],[111,8],[123,4],[128,4],[133,11],[145,5],[152,1],[155,11],[167,4],[172,11],[184,5],[191,4],[198,4],[205,4],[212,3],[218,7],[228,3],[234,7],[243,8],[253,9],[264,4],[273,3],[277,7],[286,2],[289,5],[300,8]]},"1513":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,7],[459,5],[466,3],[472,3],[476,3],[480,5],[486,7],[497,4],[503,8],[515,7],[523,3],[527,7],[535,2],[538,4],[544,4],[549,2],[552,2],[555,2],[558,2],[561,2],[564,3],[570,4],[577,4],[584,6],[592,8],[604,7],[612,3],[616,7],[624,2],[627,4],[633,11],[646,5],[652,4],[657,4],[665,3],[669,2],[672,5],[680,1],[682,7],[690,2],[693,6],[700,2],[704,8],[713,3],[717,8],[730,6],[738,8],[750,7],[759,6],[767,6],[775,8],[788,3],[793,8],[802,7],[811,4],[816,10],[828,6],[835,10],[847,4],[852,8],[861,3],[865,8],[877,8],[888,4],[893,6],[902,4],[908,8],[920,7],[929,4],[935,6],[943,8],[955,7],[964,6],[972,6],[980,3],[985,5],[992,11],[1006,11],[1019,5],[1025,4],[1030,6],[1040,5],[1047,11],[1061,6],[1069,3],[1073,5],[1079,4],[1084,6],[1092,7],[1100,2],[1103,6],[1111,6],[1119,3],[1124,5],[1131,4],[1138,11],[1151,5],[1157,4],[1162,6],[1172,5],[1179,4],[1186,6],[1194,3],[1198,5],[1204,4],[1209,6],[1217,4],[1222,7],[1230,7],[1239,11],[1252,4],[1257,5],[1263,2],[1266,7],[1275,5],[1282,3],[1288,3],[1292,3],[1296,5],[1302,7],[1312,8],[1321,3],[1325,8],[1338,6],[1346,8],[1358,7],[1367,6],[1375,4],[1381,8],[1393,7],[1402,4]]},"1519":{"position":[[23,4],[28,10],[39,9],[51,11],[65,3],[87,4],[92,10],[103,9],[115,11],[127,5],[133,3],[138,5],[151,4],[156,7],[164,9],[176,7],[184,4],[189,3],[197,4],[203,5],[210,7],[218,6],[227,4],[234,3],[239,5],[255,3],[259,4],[264,10],[275,6],[284,3],[290,4],[298,2],[301,2],[304,2],[312,4],[317,13],[331,3],[337,4],[344,10],[357,6],[365,10],[376,3],[381,3],[388,4],[394,1],[397,10],[409,7],[417,4],[422,3],[430,4],[436,5],[445,9],[456,3],[463,4],[468,7],[476,4],[482,2],[485,3],[492,3],[498,6],[505,3],[510,3],[516,5],[523,3],[530,3],[534,9],[544,1],[546,3],[551,2],[554,3],[561,3],[567,6],[574,3],[579,3],[585,6],[593,3],[600,6],[607,6],[614,5],[621,2],[624,3],[631,3],[637,6],[644,3],[649,3],[655,5],[664,4],[671,4],[677,6],[684,9],[697,2],[700,1],[703,3],[710,2],[713,8],[722,4],[727,6],[735,5],[743,3],[750,3],[756,6],[763,3],[768,3],[774,10],[788,6],[795,4],[800,5],[807,5],[814,9],[825,3],[830,6],[837,10],[849,3],[855,4],[861,1],[864,10],[876,7],[884,10],[897,4],[904,3],[909,5],[918,5],[925,3],[932,3],[936,9],[946,1],[948,3],[953,2],[956,3],[963,3],[969,6],[976,3],[981,3],[987,6],[995,3],[1002,6],[1009,6],[1016,5],[1023,2],[1026,3],[1033,3],[1039,6],[1046,3],[1051,3],[1057,9],[1070,6],[1077,9],[1089,2],[1092,3],[1096,10],[1110,9],[1122,6],[1129,3],[1134,3],[1138,6],[1146,10],[1157,3],[1161,5],[1171,5],[1180,10],[1192,9],[1203,10],[1217,10],[1228,9],[1240,9],[1251,3],[1258,6],[1265,4],[1270,3],[1275,5],[1282,10],[1294,3],[1299,2],[1302,3],[1309,3],[1315,6],[1322,3],[1327,3],[1333,3],[1337,6],[1344,3],[1348,2],[1351,3],[1358,4],[1363,9],[1373,9],[1385,6],[1394,3],[1401,3],[1407,6],[1414,3],[1419,3],[1425,6],[1432,6],[1440,3],[1453,4],[1459,1],[1462,11],[1475,14],[1490,6],[1497,7],[1506,5],[1517,1],[1519,2],[1522,4],[1532,5],[1538,1],[1540,2],[1543,6],[1558,4],[1566,6],[1573,4],[1583,7],[1592,6],[1602,1],[1604,8],[1613,4],[1622,3],[1626,5],[1632,3],[1642,2],[1645,6],[1657,2],[1660,8],[1670,2],[1676,7],[1684,3],[1689,10],[1702,2],[1710,5],[1718,8],[1727,11],[1749,7],[1757,3],[1761,4],[1771,3],[1775,6],[1783,7],[1791,3],[1795,7],[1803,2],[1807,1],[1809,1],[1813,4],[1841,2],[1844,8],[1854,2],[1860,6],[1868,10],[1881,2],[1887,5],[1896,3],[1905,2],[1908,3],[1915,8],[1924,11],[1936,5],[1944,3],[1951,3],[1960,6],[1967,3],[1971,6],[1979,5],[1985,6],[1992,6],[2001,1],[2003,1],[2007,3],[2020,3],[2024,6],[2032,5],[2038,8],[2047,3],[2051,7],[2060,1],[2062,1],[2066,4],[2097,1],[2099,8],[2108,4],[2117,11],[2133,3],[2138,6],[2149,4],[2155,6],[2162,12],[2181,5],[2188,7],[2219,2],[2222,6],[2232,7],[2240,5],[2249,7],[2262,6],[2269,5],[2280,1],[2282,8],[2291,4],[2297,5],[2305,7],[2316,3],[2320,6],[2328,7],[2336,3],[2340,7],[2348,2],[2352,1],[2356,4],[2367,4],[2377,3],[2381,6],[2389,10],[2400,3],[2404,7],[2412,2],[2416,1],[2419,3],[2423,7],[2434,4],[2451,6],[2458,3],[2466,4],[2472,1],[2475,11],[2488,23],[2512,6],[2519,7],[2528,7],[2536,7],[2545,5],[2553,1],[2555,2],[2558,4],[2565,5],[2571,1],[2573,2],[2576,6],[2585,4],[2593,6],[2600,4],[2607,7],[2616,6],[2626,1],[2628,8],[2637,4],[2643,3],[2647,14],[2664,4],[2669,2],[2672,6],[2681,2],[2684,8],[2694,2],[2700,7],[2708,3],[2713,10],[2726,2],[2731,8],[2743,8],[2752,11],[2766,6],[2774,3],[2781,7],[2789,7],[2797,8],[2807,2],[2810,3],[2817,3],[2823,6],[2830,3],[2834,6],[2842,5],[2848,10],[2859,6],[2868,1],[2872,3],[2879,14],[2896,6],[2905,7],[2913,3],[2917,4],[2924,3],[2928,6],[2936,7],[2944,3],[2948,7],[2956,2],[2960,1],[2962,1],[2966,4],[2986,2],[2989,8],[2999,2],[3005,6],[3013,10],[3026,2],[3032,14],[3050,3],[3056,9],[3067,3],[3074,7],[3082,7],[3090,14],[3106,2],[3109,3],[3116,3],[3122,6],[3129,3],[3133,6],[3141,5],[3147,10],[3158,6],[3167,1],[3171,3],[3178,2],[3181,3],[3188,8],[3197,11],[3209,9],[3221,3],[3228,3],[3234,6],[3241,3],[3245,6],[3253,5],[3259,6],[3266,6],[3275,1],[3279,3],[3286,3],[3290,6],[3298,9],[3308,5],[3314,8],[3323,3],[3327,7],[3336,1],[3338,1],[3342,4],[3350,1],[3352,8],[3361,4],[3370,11],[3383,3],[3388,6],[3396,4],[3402,6],[3409,12],[3425,5],[3432,7],[3443,2],[3446,6],[3456,7],[3464,5],[3473,7],[3483,6],[3490,5],[3498,1],[3500,8],[3509,4],[3515,5],[3523,7],[3531,3],[3535,6],[3543,7],[3551,3],[3555,7],[3563,2],[3567,1],[3569,1],[3573,4],[3581,4],[3588,3],[3592,6],[3600,10],[3611,3],[3615,7],[3623,2],[3627,1],[3630,3],[3634,7],[3643,1],[3647,4],[3655,6],[3662,3]]},"1521":{"position":[[7,4],[13,1],[16,13],[31,11],[43,5],[49,3],[54,5],[62,2],[65,3],[70,2],[76,5],[83,3],[89,2],[94,1],[96,9],[108,3],[112,6],[119,3],[125,6],[132,3],[136,6],[144,7],[152,5],[158,4],[167,4],[173,1],[176,11],[189,11],[203,3],[209,6],[216,1],[218,9]]},"1523":{"position":[[9,1],[26,2],[29,6],[41,4],[47,16],[69,2],[79,11],[91,23],[115,7],[123,16],[140,11],[154,11],[166,13],[180,6]]},"1525":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,4],[456,5],[463,3],[469,1],[471,4],[476,7],[484,7],[492,4],[497,11],[510,5],[517,3],[524,4],[530,8],[542,7],[550,3],[554,7],[562,2],[565,4],[570,5],[576,8],[585,3],[589,7],[597,4],[603,4],[608,2],[611,2],[614,2],[617,2],[620,2],[623,3],[629,4],[636,4],[643,6],[651,8],[663,7],[671,3],[675,7],[683,2],[686,4],[691,11],[704,4],[709,5],[715,2],[718,4],[724,5],[731,3],[737,4],[743,5],[749,2],[752,2],[756,1],[758,4],[763,2],[766,7],[774,7],[782,4],[787,11],[800,5],[807,3],[814,11],[827,5],[833,4],[838,4],[846,3],[850,2],[853,5],[861,1],[863,7],[871,2],[874,6],[881,2],[885,8],[894,3],[898,8],[911,6],[919,8],[931,7],[940,6],[948,6],[956,8],[968,7],[977,4],[983,3],[988,8]]},"1529":{"position":[[6,4]]},"1532":{"position":[[6,3],[10,3],[14,11],[26,5],[42,12],[42,7],[50,4],[56,5]]},"1534":{"position":[[0,4],[5,10],[16,6],[25,3],[29,6],[36,7],[44,7],[54,4],[59,13],[73,3],[77,6],[85,7],[93,7],[103,10],[116,6],[124,10],[135,3],[140,3],[145,7],[154,7],[165,4],[171,1],[174,10],[186,4],[191,4],[196,6],[204,6],[213,6],[220,8],[229,4],[234,1],[236,3],[241,4],[248,5],[258,4],[264,1],[267,10],[279,4],[284,4],[289,6],[297,5],[303,3],[308,5],[316,9],[327,3],[334,1],[336,7],[344,7],[352,5],[359,2],[362,3],[369,3],[375,6],[382,3],[388,2],[391,3],[398,2],[401,8],[410,1],[412,3],[417,4],[424,3],[431,3],[437,6],[444,3],[450,6],[457,2],[460,9],[470,1],[472,4],[477,4],[484,9],[495,4],[503,4],[509,1],[512,10],[524,4],[529,4],[534,6],[543,3],[548,5],[557,4],[563,3],[570,2],[573,8],[582,1],[584,4],[589,4],[596,2],[599,3],[606,3],[612,6],[619,3],[624,3],[630,6],[637,1],[639,7],[647,7],[655,4],[663,4],[669,1],[672,10],[684,6],[691,4],[696,6],[704,4],[711,1],[714,3],[721,2],[724,4],[729,1],[731,4],[736,4],[743,6],[750,3],[757,3]]},"1537":{"position":[[0,4],[5,11],[17,6],[30,10],[42,10],[55,4],[60,23],[84,5],[91,10],[104,11],[118,6],[126,11],[139,8],[149,4],[154,3],[158,6],[166,11],[180,10],[192,5],[199,6],[207,9],[218,6],[227,4],[233,2],[236,6]]},"1539":{"position":[[3,8],[24,15],[42,8],[51,4],[57,1],[60,11],[73,8],[82,3],[86,7],[95,5],[103,1],[105,2],[108,4],[115,5],[121,1],[123,2],[126,6],[138,4],[156,4],[164,3],[168,4],[207,2],[210,1],[212,10],[226,3],[233,1],[235,10],[246,6],[253,4],[312,2],[315,8],[325,2],[331,3],[336,10],[349,2],[354,3],[359,3],[366,1],[368,10],[379,4],[384,4],[390,2],[393,3],[400,3],[406,6],[413,3],[417,6],[425,5],[431,4],[436,6],[445,1],[447,1],[451,3],[458,3],[464,8],[473,11],[485,3],[490,2],[493,3],[500,3],[506,6],[513,3],[517,6],[525,5],[531,6],[538,6],[547,1],[549,1],[553,3],[560,3],[564,6],[572,5],[578,8],[587,3],[591,7],[600,1],[602,1],[606,4],[616,2],[619,1],[622,2],[628,1],[630,8],[639,4],[646,2],[651,6],[658,6],[665,3],[670,7],[678,7],[686,10],[701,1],[703,8],[712,4],[721,11],[734,3],[739,3],[744,5],[751,7],[760,4],[766,3],[770,12],[788,3],[792,7],[801,10],[815,3],[819,4],[827,6],[834,3]]},"1541":{"position":[[0,4],[6,1],[9,11],[22,11],[34,4],[39,6],[47,5],[55,1],[57,2],[60,4],[67,5],[73,1],[75,2],[78,6],[87,4],[93,2],[99,1],[101,8],[110,4],[116,2],[120,2],[125,6],[132,6],[139,3],[144,7],[152,3],[156,10],[171,2],[174,4],[179,5],[188,7],[198,6],[205,6],[212,3],[217,7],[225,7],[233,7],[257,2],[260,8],[270,2],[276,4],[281,3],[286,10],[299,2],[305,1],[307,10],[321,3],[327,2],[330,3],[337,1],[339,10],[350,4],[355,4],[361,8],[370,11],[386,3],[393,3],[399,3],[403,6],[411,5],[417,9],[427,3],[432,1],[434,1],[438,4],[448,2],[451,3],[458,4],[463,3],[467,4],[475,3],[482,3],[488,6],[495,3],[501,4],[506,5],[514,7],[522,3],[526,7],[535,7],[546,4],[551,3],[555,4],[563,6],[570,3]]},"1543":{"position":[[0,4],[6,1],[9,11],[22,6],[29,3],[33,7],[41,7],[61,6],[68,6],[87,6],[97,4],[102,9],[112,1],[116,4],[121,6],[129,3],[135,6],[144,4],[151,3],[155,4],[163,6],[170,4],[177,6],[184,1],[187,3],[191,7],[200,5],[206,7],[214,5],[222,2],[225,1],[227,10],[241,3],[247,3],[251,4],[257,4],[265,5],[271,1],[273,8],[284,2],[287,4],[292,5],[301,7],[311,2],[314,8],[324,2],[330,4],[335,3],[340,10],[353,2],[358,2],[361,3],[368,1],[370,10],[381,4],[386,4],[392,8],[401,11],[417,3],[424,3],[430,3],[434,6],[442,5],[448,9],[458,3],[463,1],[465,1],[469,4]]},"1545":{"position":[[0,7],[11,11],[23,13],[39,4],[45,16],[65,5],[74,11],[86,13],[103,5],[111,7],[123,1],[132,11],[147,11],[159,14],[174,5]]},"1547":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,4],[456,5],[463,3],[469,1],[471,4],[476,7],[484,7],[492,4],[497,11],[510,5],[517,3],[524,4],[530,8],[542,7],[550,3],[554,7],[562,2],[565,4],[570,9],[580,5],[586,8],[595,3],[599,7],[607,4],[613,4],[618,2],[621,2],[624,2],[627,2],[630,2],[633,3],[639,4],[646,4],[653,6],[661,8],[673,7],[681,3],[685,7],[693,2],[696,4],[702,11],[715,4],[720,5],[726,2],[729,4],[735,5],[742,3],[748,4],[754,5],[760,2],[763,2],[767,1],[769,4],[774,2],[777,7],[785,7],[793,4],[798,11],[811,5],[818,3],[825,11],[838,5],[844,4],[849,4],[857,3],[861,2],[864,5],[872,1],[874,7],[882,2],[885,6],[892,2],[896,8],[905,3],[909,8],[922,6],[930,8],[942,7],[951,6],[959,6],[967,8],[979,7],[988,4]]},"1549":{"position":[[7,3],[52,3]]},"1551":{"position":[[7,3],[13,6],[20,14],[35,9],[80,3],[86,4],[91,6],[98,9],[167,3],[173,6],[180,12],[193,9],[246,3],[252,9],[262,11],[274,9],[327,3],[333,10],[344,9],[354,9]]},"1553":{"position":[[62,3],[66,2],[69,7],[115,3],[121,3],[125,1],[127,6],[134,8],[167,4],[174,4],[179,2],[182,6],[190,6],[217,5],[225,3],[229,4],[234,1],[236,5],[242,4],[247,2]]},"1556":{"position":[[7,6],[14,14],[29,9],[40,3],[46,5],[62,6],[69,1],[72,6],[133,2],[148,6],[155,9]]},"1564":{"position":[[5,3],[12,11],[31,4],[36,11],[48,6],[57,2],[61,3],[65,2],[70,4],[76,2],[80,11],[93,10],[104,4],[109,4],[115,5],[133,1],[136,3],[143,2],[146,2],[149,4],[155,6],[162,4],[167,5],[179,6],[194,6],[201,3],[207,4],[213,2],[217,11],[230,16],[247,4],[252,4],[258,5],[278,6],[285,9],[295,4],[300,5],[308,7],[320,7],[328,2],[331,3],[335,8],[349,4],[355,2],[359,11],[372,14],[392,4],[398,5],[419,4],[425,3],[432,2],[435,2],[438,5],[445,6],[454,4],[459,5],[475,4],[484,6],[491,10],[503,3]]},"1566":{"position":[[10,4],[15,14],[30,6],[39,2],[43,3],[47,2],[52,4],[58,2],[62,14],[78,6],[85,4],[90,4],[96,5],[104,1],[107,3],[114,2],[117,2],[120,4],[126,6],[133,4],[138,5],[150,6],[165,6],[172,3],[178,4],[184,2],[188,14],[204,6],[216,4],[222,5],[231,4],[237,3],[244,2],[247,2],[250,5],[257,6],[266,4],[271,5],[287,4],[298,6],[305,5],[312,3],[328,4],[333,12],[346,6],[355,10],[366,6],[375,4],[381,2],[385,12],[399,16],[416,4],[421,4],[427,5],[435,6],[442,9],[452,4],[457,5],[465,7],[477,7],[485,2],[488,3],[492,8],[516,4],[521,15],[537,6],[546,8],[556,14],[573,4],[579,2],[583,15],[600,18],[624,4],[630,5],[639,5],[646,3],[653,2],[656,8],[665,6],[691,6],[698,10],[710,3],[725,11]]},"1569":{"position":[[11,4],[16,10],[27,9],[39,6],[46,4],[51,4],[57,5],[63,7],[71,2],[74,3],[81,4],[87,5],[96,4],[101,11],[113,9],[125,4],[130,2],[134,7],[143,4],[148,6],[156,5]]},"1571":{"position":[[0,4],[5,11],[17,6],[26,4],[31,14],[46,5],[52,12],[65,6],[72,15],[90,4],[96,2],[100,11],[113,15],[129,4],[134,4],[140,5],[148,2],[151,3],[158,2],[161,4],[166,6],[173,4],[180,3],[187,3],[193,6],[200,3],[206,6],[213,2],[216,5],[222,16],[239,4]]},"1573":{"position":[[17,4],[22,15],[38,4],[45,4],[52,4],[58,5],[70,1],[81,1],[92,1],[105,1],[136,4],[141,16],[158,4],[165,4],[171,5],[180,4],[185,13],[199,4],[206,4],[213,4],[219,5],[229,4],[234,8],[243,4],[248,4],[254,5],[263,4],[268,17],[286,4],[291,4],[297,5]]},"1576":{"position":[[50,29]]},"1580":{"position":[[0,3],[20,2],[40,3],[58,3],[70,3]]},"1583":{"position":[[5,4],[10,6],[17,9],[28,3],[34,5],[50,8],[59,5],[105,2],[124,9],[138,11]]},"1588":{"position":[[16,4],[21,13],[35,9],[47,3],[51,6],[58,7],[67,5],[86,4],[91,17],[109,6],[118,4],[124,1],[127,17],[146,3],[150,6],[157,7],[166,5],[174,3],[178,6],[191,2],[201,1],[205,6],[213,6],[220,3],[237,4],[242,13],[256,6],[265,4],[271,1],[274,13],[289,3],[293,6],[300,7],[309,5],[317,3],[321,6],[334,2],[344,1],[348,6],[356,6],[363,3],[386,4],[391,16],[408,6],[417,6],[424,13],[440,4],[446,1],[449,16],[467,14],[482,6],[489,7],[498,5],[506,6],[513,1],[515,6],[522,3],[526,6]]},"1590":{"position":[[19,4],[24,13],[38,6],[47,4],[53,1],[56,13],[71,3],[75,6],[82,7],[91,5],[99,3],[103,6],[116,2],[127,1],[131,6],[139,6],[146,3],[160,4],[165,4],[174,9],[188,16],[205,6],[214,13],[231,9],[241,14],[256,3],[260,2]]},"1593":{"position":[[0,4],[5,11],[17,3],[21,5],[29,10],[40,11],[54,4],[59,6],[80,4],[85,14],[100,11],[112,11],[125,6],[132,7],[141,5],[149,6],[156,11],[170,4],[175,10],[187,3],[191,6],[204,2],[214,1],[218,6],[226,4],[231,6],[239,3],[243,6],[256,2],[266,1],[270,6],[278,7],[287,6],[294,3],[298,6],[319,6],[326,3],[348,14]]},"1595":{"position":[[10,4],[15,13],[29,9],[41,3],[45,6],[52,7],[61,5],[83,4],[88,14],[103,6],[112,7],[120,3],[124,6],[131,13],[147,4],[153,1],[156,14],[172,8],[181,4],[186,6],[194,6],[201,13],[218,1],[220,7],[228,4],[236,6],[245,4],[251,1],[254,14],[270,7],[278,4],[283,6],[291,6],[298,7],[307,5],[315,2],[318,6],[326,2],[332,1],[334,7],[342,4],[349,2],[354,6],[361,6],[368,3],[372,6],[382,6],[389,3],[393,6]]},"1598":{"position":[[0,4],[5,6],[12,6],[21,4],[26,6],[33,4],[38,3],[42,7],[50,4],[55,8],[66,4],[71,6],[78,4],[84,6],[92,4],[97,8],[106,4],[111,6],[119,6],[128,6],[135,4],[140,1],[143,6],[153,1],[155,4],[162,4],[171,4],[176,8],[185,4],[190,3],[195,6],[204,6],[211,4],[216,1],[219,6],[229,1],[231,4],[238,4],[247,4],[252,9],[262,4],[270,6],[279,6],[288,1],[294,6],[302,4],[309,9],[321,4],[327,4],[333,7],[342,2],[347,4],[352,6],[362,3],[366,1],[369,3],[376,5],[382,4],[389,3],[393,1],[398,6],[405,1]]},"1600":{"position":[[0,4],[5,7],[13,4],[18,4],[23,14],[40,4],[45,7],[54,4],[59,17],[77,4],[82,7],[91,7],[101,6],[108,4],[113,1],[115,4],[120,14],[136,1],[139,4],[144,7],[155,3],[159,6],[174,1],[177,1],[181,1],[183,6],[191,1],[193,3],[197,4],[203,4],[208,1],[211,1],[214,3],[218,6],[233,1],[236,1],[240,1],[242,6],[250,1],[252,3],[256,4],[266,4],[271,14],[286,4],[291,7],[300,7],[310,6],[317,4],[322,1],[324,4],[329,14],[345,1],[348,4],[353,7],[364,2],[367,1],[369,6],[376,3],[381,13],[405,4],[410,5],[416,1],[426,4],[431,18],[451,6],[460,4],[465,1],[468,1]]},"1602":{"position":[[41,5],[47,7],[55,5],[87,3],[94,3]]},"1606":{"position":[[0,1],[2,1],[4,1],[22,6],[41,4],[46,6],[53,9],[65,3],[69,5],[75,6],[83,7],[91,6],[99,5],[105,5],[113,5],[121,1],[123,1],[125,1],[148,13],[170,4],[175,13],[189,6],[222,4],[227,16],[247,13],[263,6],[271,13],[289,4],[295,1],[298,13],[313,3],[317,5],[323,6],[331,7],[339,6],[347,5],[355,1],[358,3],[365,3],[369,6],[379,1],[383,1],[385,1],[389,5],[396,7],[405,6],[412,3],[418,4],[424,1],[427,13],[442,5],[450,5],[473,6],[480,3],[496,10],[514,4],[519,10],[530,6],[539,4],[545,2],[548,4],[555,4],[560,13],[574,8],[583,6],[593,10],[605,5],[614,4],[620,3],[627,2],[630,8],[639,8],[649,2],[652,8],[652,1],[654,6],[661,2],[664,8],[664,1],[666,6],[673,2],[676,8],[676,1],[678,6],[686,4],[692,2],[695,3],[702,3],[708,6],[715,3],[720,3],[726,6],[734,10],[745,4],[751,4],[758,3],[764,4],[770,1],[773,10],[785,3],[789,5],[795,6],[803,7],[811,6],[819,5],[827,1],[830,3],[837,3],[841,7],[849,1],[851,4],[860,1],[864,1],[867,1],[869,1],[873,4],[878,3],[884,6],[892,4],[897,2],[900,2],[903,2],[906,2],[909,2],[915,5],[922,7],[931,6],[938,3],[944,4],[950,1],[953,10],[965,5],[973,5],[981,6],[988,1],[990,4],[995,5]]},"1608":{"position":[[3,15],[28,4],[33,15],[49,6],[58,7],[68,6],[77,4],[82,18],[101,7],[112,6],[121,15],[139,6],[147,15],[163,7],[172,7],[183,4],[189,1],[192,15],[209,3],[213,5],[219,6],[227,7],[235,6],[243,5],[251,3],[255,1],[258,6],[268,5],[274,1],[276,7],[286,2],[289,3],[296,6],[303,3],[307,5],[314,7],[324,3],[331,3],[337,6],[344,3],[352,6],[359,3],[365,4],[371,1],[374,15],[391,5],[399,5],[407,3],[411,1],[414,6],[424,5],[430,1],[432,7],[442,2],[445,3],[452,6],[459,5],[468,3],[475,3],[481,6],[488,3],[496,6],[503,3]]},"1610":{"position":[[3,10],[21,4],[26,10],[37,6],[44,5],[52,13],[66,10],[80,7],[89,10],[100,10],[114,4],[130,13],[149,12],[167,4],[172,12],[185,6],[194,4],[199,10],[210,8],[219,6],[242,19],[272,4],[277,19],[297,6],[304,12],[319,6],[327,5],[336,6],[343,6],[350,4],[357,4],[362,13],[377,6],[384,16],[404,3],[408,4],[413,10],[425,6],[432,13],[446,6],[453,8],[463,7],[472,6],[479,3],[484,3],[488,6],[506,1],[510,6],[517,4]]},"1612":{"position":[[32,13],[53,4],[58,13],[72,6],[81,8],[90,6],[97,6],[105,4],[110,6],[119,4],[124,16],[141,8],[150,6],[159,13],[175,6],[183,13],[198,8],[208,8],[218,6],[227,4],[232,6],[239,7],[248,1],[252,4],[257,6],[270,4],[276,1],[279,13],[294,3],[298,5],[304,6],[312,7],[320,6],[328,5],[336,4],[344,3],[348,6],[355,6],[364,5],[372,5],[380,7],[390,7],[400,4],[407,4],[412,3],[418,6],[425,4],[430,7],[442,8],[452,1],[457,4],[462,7],[470,4],[476,4],[482,3],[489,1],[491,6],[498,4],[503,1],[505,8],[516,11],[528,4],[535,5],[541,9],[551,8],[562,2],[565,3],[572,3],[578,6],[585,3],[591,5],[597,4],[602,4],[607,5],[615,2],[618,4],[623,10],[637,3],[643,6],[650,3],[654,6],[677,1],[681,4],[686,10],[700,6],[707,3],[713,4],[719,1],[722,13],[737,5],[745,5],[770,6],[777,3]]},"1614":{"position":[[0,4],[5,4],[26,13],[43,16],[73,10],[85,3],[92,13],[107,3],[111,3],[117,2],[120,3],[127,3],[133,5],[139,3],[157,15],[176,18],[195,13],[210,10],[230,15],[246,3],[251,4],[268,15],[284,3],[289,4],[308,15],[324,3],[329,5],[359,2],[362,3],[369,15],[385,5],[394,3],[401,3],[407,3],[411,6],[430,1],[432,1],[436,3],[455,13],[472,16],[490,4],[497,3],[501,6],[508,7],[516,3],[520,3],[526,14],[544,18],[563,13],[578,10],[590,13],[605,14],[620,3],[625,4],[653,14],[668,5]]},"1616":{"position":[[0,3],[18,2],[33,3],[52,3]]},"1619":{"position":[[0,3],[30,3],[81,2],[84,3],[98,6],[112,3],[131,4],[139,10],[150,6],[159,7],[173,10],[184,3],[188,7]]},"1622":{"position":[[2,2]]},"1624":{"position":[[10,5],[20,4],[25,11],[40,6],[48,5]]},"1626":{"position":[[20,5],[44,5],[67,4],[72,9],[82,6],[91,3],[95,5],[103,4],[109,1],[112,9],[123,2],[137,1],[139,3],[145,6],[152,3],[157,9],[167,4],[172,5]]},"1628":{"position":[[2,2],[7,4],[46,4]]},"1630":{"position":[[0,1],[22,9],[45,4],[56,4],[61,8],[70,1],[73,1],[75,3],[82,4],[87,3],[93,6],[103,4],[108,4],[113,3],[118,2],[121,4],[130,6],[140,1],[144,1],[146,5],[152,6],[164,6],[171,6],[180,1],[215,3],[225,4],[240,4],[245,8],[254,1],[256,3],[263,4],[268,3],[274,3],[281,4],[286,4],[291,3],[296,2],[299,4],[308,3],[312,1],[317,1],[320,1],[324,1],[327,1],[333,3],[340,1],[344,5],[350,3],[359,6],[366,3],[372,1],[403,4],[408,6],[418,4],[426,4],[431,4],[436,6],[446,2],[449,4],[466,4],[474,6],[491,4]]},"1632":{"position":[[38,4],[66,4],[71,2]]},"1634":{"position":[[10,9],[20,6],[28,7],[36,7],[45,9],[55,8],[64,2],[71,2],[74,3],[95,2],[98,3],[102,7],[110,3],[114,6],[121,3],[127,2],[130,3],[134,7],[142,5],[150,7],[158,2],[161,6],[176,2],[179,3],[189,2],[192,3],[196,4],[204,7],[223,7],[231,3]]},"1636":{"position":[[2,2],[11,9],[34,4],[41,6]]},"1638":{"position":[[0,3],[4,3],[11,1],[13,3],[17,1],[20,1],[23,1],[26,5],[33,2],[39,9],[51,3],[58,1],[60,3],[65,2],[70,4],[84,5],[100,2],[105,5]]},"1640":{"position":[[19,2],[25,4],[30,4],[35,6],[45,2],[51,6]]},"1642":{"position":[[0,2],[7,2],[19,2],[22,1],[28,3],[34,1],[38,1],[42,7],[50,1],[52,1],[63,1],[69,3],[74,2],[77,1],[81,1],[85,7],[93,1],[95,1],[104,4],[109,2],[114,4]]},"1645":{"position":[[2,7],[12,9],[33,7],[41,4],[46,6],[56,3],[62,4],[73,15],[101,4],[106,15],[122,6],[131,8],[142,6],[149,8],[158,4],[163,5],[188,10],[213,4],[218,10],[229,6],[238,5],[246,6],[253,12],[266,4],[272,15],[288,8],[297,4],[302,6],[316,8],[328,10],[348,4],[354,1],[357,10],[369,8],[378,1],[382,6],[390,5],[398,3],[406,15],[423,8],[433,1],[436,8],[446,4],[451,4],[456,5],[466,1],[468,12],[484,3],[488,6],[497,3],[501,8],[525,3],[532,10],[549,4],[555,1],[558,10],[570,3],[578,3],[584,6],[593,4],[598,3],[607,1],[609,12],[623,1],[625,5],[633,3],[637,8],[646,3],[650,7],[659,7],[667,5],[676,1],[678,5],[685,3],[689,8],[701,3],[713,4],[720,1],[722,8],[732,6],[748,4],[756,10],[773,4],[779,1],[782,10],[794,4],[803,5],[809,1],[811,8],[823,4],[828,4],[837,10],[852,10],[864,5],[873,6],[883,12],[897,4],[902,4],[908,15],[926,8],[936,4],[941,4],[946,6],[959,2],[962,10],[973,3],[987,4],[992,5],[998,3],[1004,4],[1009,11],[1022,10],[1033,8],[1044,6],[1052,1],[1057,1],[1062,1],[1067,10],[1078,8],[1089,6],[1097,1],[1102,1],[1107,1],[1122,10],[1133,4],[1162,8],[1173,10],[1186,7],[1206,8],[1215,7],[1239,10],[1258,7],[1304,7],[1322,7]]},"1648":{"position":[[4,2],[10,1],[17,7],[33,5],[46,4],[57,7],[69,5],[98,1],[101,2],[109,2],[115,2],[121,5],[130,7],[150,1],[157,2],[172,7],[188,1],[191,2],[199,2],[205,2],[211,5],[220,7],[236,7],[244,4],[249,6],[259,3],[265,4],[273,4],[278,4],[289,2],[295,4],[300,4],[305,3],[310,1],[313,2],[319,4],[324,4],[329,3],[334,2],[337,4],[346,2],[352,2],[355,4],[360,5],[366,1],[370,4],[375,6],[383,5],[389,5],[395,2],[420,5],[431,2],[434,3],[438,7],[447,5],[456,5],[469,2],[472,2],[475,2],[478,5],[485,2],[488,5],[498,2],[501,3],[505,7],[514,5],[523,5],[536,2],[539,2],[542,2],[545,5],[552,1],[554,5],[564,2],[567,3],[571,7],[580,5],[589,5],[602,2],[605,2],[608,2],[611,5],[618,1],[637,5],[644,4],[654,2],[657,3],[661,7],[670,5],[679,5],[687,4],[695,4],[707,2],[710,2],[713,2],[716,5],[723,2],[726,4],[732,4],[737,5],[744,4],[753,2],[756,3],[760,7],[769,5],[778,5],[786,4],[794,4],[806,2],[809,2],[812,2],[815,5],[822,1],[824,4],[830,5],[836,5],[843,4],[852,2],[855,3],[859,7],[868,5],[877,5],[885,4],[893,4],[905,2],[908,2],[911,2],[914,5],[921,1],[923,4],[929,5]]},"1650":{"position":[[13,9],[24,12],[39,8],[60,5],[69,2],[83,7],[97,3],[108,3],[121,4],[143,7],[151,4],[156,6],[166,3],[172,4],[197,8],[211,4],[216,15],[232,6],[241,8],[252,6],[259,8],[268,4],[273,5],[290,4],[295,10],[306,6],[315,5],[323,6],[330,12],[343,4],[349,15],[365,8],[374,4],[379,6],[388,8],[397,4],[402,6],[428,3],[435,10],[452,4],[458,1],[461,10],[473,3],[481,5],[487,5],[493,1],[495,8],[522,3],[528,6],[537,4],[542,3],[547,2],[555,1],[557,12],[571,2],[575,2],[580,3],[584,7],[593,12],[606,6],[614,7],[622,3],[630,6],[639,1],[641,5],[649,3],[653,8],[662,3],[666,7],[675,7],[683,5],[692,1],[694,5],[710,3],[714,8],[726,3],[730,4],[737,1],[739,8],[749,3],[753,7],[762,8],[771,4],[776,6],[784,7],[792,3],[800,6],[816,8],[832,4],[838,1],[841,10],[853,8],[862,1],[866,6],[874,5],[882,3],[890,15],[907,8],[917,1],[920,8],[930,4],[935,4],[940,5],[950,6],[959,4],[964,1],[966,12],[982,3],[987,6],[996,3],[1000,8],[1009,4],[1016,1],[1018,8],[1028,6],[1035,3],[1039,6],[1047,10],[1058,2],[1061,8],[1070,4],[1084,4],[1092,10],[1106,9],[1121,4],[1127,1],[1130,10],[1142,4],[1151,5],[1157,1],[1159,8],[1177,5],[1183,1],[1185,12],[1210,12],[1225,1],[1227,8],[1248,3],[1252,7],[1261,10],[1272,7],[1280,10],[1295,4],[1300,4],[1309,10],[1324,10],[1336,5],[1345,6],[1355,12],[1369,4],[1374,4],[1380,15],[1398,8],[1408,4],[1413,4],[1418,6],[1429,8],[1439,4],[1444,4],[1449,6],[1462,2],[1465,10],[1476,3],[1482,4],[1487,5],[1493,3],[1499,4],[1504,11],[1517,10],[1528,8],[1539,6],[1547,1],[1552,1],[1557,1],[1562,10],[1573,8],[1584,6],[1592,1],[1597,1],[1602,1],[1607,10],[1618,4]]},"1652":{"position":[[7,7],[15,7],[38,10],[49,9],[70,7],[80,6],[130,8],[160,7],[168,7],[191,8],[200,8],[212,4],[221,7],[229,4],[234,6],[244,7],[254,3],[260,4],[285,8],[299,4],[304,15],[320,6],[329,8],[340,6],[347,8],[356,4],[361,5],[379,4],[384,10],[395,6],[404,5],[412,6],[419,12],[432,4],[438,15],[454,8],[463,4],[468,6],[477,8],[486,4],[491,6],[505,3],[512,10],[529,4],[535,1],[538,10],[550,3],[558,5],[564,5],[570,1],[572,8],[582,3],[588,6],[597,4],[602,3],[607,2],[615,1],[617,12],[631,2],[635,2],[640,3],[644,7],[653,12],[666,6],[674,7],[682,3],[690,6],[699,1],[701,5],[709,3],[713,8],[722,3],[726,7],[735,7],[743,5],[752,1],[754,5],[761,3],[765,8],[777,3],[781,4],[788,1],[790,8],[800,3],[804,7],[813,8],[822,4],[827,6],[835,7],[843,3],[851,6],[867,11],[882,7],[900,4],[906,1],[909,10],[921,11],[933,3],[937,7],[945,7],[954,5],[962,6],[970,5],[978,3],[986,15],[1003,8],[1013,5],[1020,8],[1030,4],[1035,4],[1040,5],[1047,1],[1072,4],[1077,5],[1083,1],[1087,4],[1092,11],[1105,6],[1114,4],[1119,1],[1121,12],[1137,3],[1150,2],[1153,7],[1164,6],[1173,4],[1178,3],[1187,3],[1191,8],[1201,6],[1208,3],[1212,4],[1219,3],[1223,4],[1231,6],[1238,3],[1242,6],[1250,3],[1254,5],[1260,7],[1268,2],[1271,9],[1283,1],[1287,3],[1291,3],[1300,4],[1307,1],[1309,8],[1319,6],[1326,3],[1330,6],[1338,10],[1349,8],[1358,4],[1365,4],[1372,3],[1376,4],[1384,6],[1391,3],[1395,6],[1403,4],[1408,7],[1416,2],[1419,9],[1431,1],[1435,3],[1439,3],[1453,4],[1463,4],[1469,1],[1472,10],[1484,4],[1493,5],[1499,1],[1501,8],[1511,5],[1517,1],[1519,12],[1535,1],[1537,8],[1546,3],[1550,7],[1559,10],[1570,7],[1578,10],[1593,4],[1598,4],[1607,10],[1622,10],[1634,5],[1643,6],[1653,12],[1667,4],[1672,4],[1678,15],[1696,8],[1706,4],[1711,4],[1716,6],[1727,8],[1737,4],[1742,4],[1747,6],[1760,2],[1763,10],[1774,3],[1790,3],[1797,7],[1805,10],[1818,10],[1829,11],[1841,3],[1848,6],[1856,1],[1861,1],[1866,1],[1878,7],[1890,3],[1899,10],[1911,6],[1921,7],[1929,11],[1941,7],[1949,10],[1963,1],[1965,4],[1970,11],[1983,5],[1989,6],[1998,3],[2005,10],[2016,11],[2028,10],[2042,6],[2050,6],[2060,4],[2068,4],[2076,2],[2079,3],[2086,3],[2092,3],[2096,7],[2105,7],[2113,3],[2120,3],[2135,4],[2141,7],[2152,7],[2160,11],[2172,7],[2180,10],[2194,1],[2196,4],[2201,6],[2209,5],[2215,7],[2225,10],[2236,11],[2248,4],[2256,6],[2264,1],[2269,1],[2274,1],[2279,10],[2290,4]]},"1654":{"position":[[0,14],[23,7],[31,7],[99,14],[171,7],[206,7],[240,14],[275,7],[316,7],[343,14],[363,8],[465,7],[476,8],[485,8],[527,14],[569,4],[574,7],[596,4],[605,9],[616,8],[660,1],[687,7],[715,7],[723,7],[736,15],[777,15],[795,18],[823,8],[834,8],[845,7],[853,4],[858,6],[868,7],[878,6],[887,3],[897,7],[914,4],[919,7],[927,9],[939,7],[947,3],[951,7],[959,7],[968,1],[971,7],[980,4],[989,4],[994,6],[1003,3],[1009,5],[1020,7],[1040,4],[1045,7],[1053,6],[1062,5],[1070,6],[1077,7],[1085,4],[1090,7],[1098,4],[1103,4],[1108,6],[1117,4],[1122,4],[1127,6],[1148,4],[1153,11],[1165,6],[1174,3],[1178,5],[1184,4],[1189,4],[1194,6],[1205,4],[1211,1],[1214,11],[1227,4],[1236,4],[1241,6],[1252,6],[1259,1],[1261,4],[1268,4],[1274,1],[1277,11],[1290,3],[1296,5],[1304,6],[1311,1],[1313,3],[1322,15],[1343,4],[1348,15],[1364,6],[1373,11],[1385,8],[1396,6],[1405,4],[1411,1],[1414,15],[1431,7],[1439,3],[1443,7],[1451,7],[1460,1],[1463,7],[1474,5],[1480,5],[1486,1],[1488,4],[1494,1],[1496,5],[1504,1],[1506,8],[1515,3],[1519,7],[1528,15],[1544,8],[1556,1],[1558,5],[1570,15],[1591,4],[1596,15],[1612,6],[1621,11],[1633,6],[1640,4],[1647,6],[1656,4],[1662,1],[1665,15],[1682,7],[1690,3],[1694,7],[1702,7],[1711,1],[1714,7],[1725,5],[1731,5],[1737,1],[1739,4],[1745,1],[1747,6],[1757,1],[1759,5],[1765,5],[1771,1],[1773,6],[1783,4],[1788,10],[1802,7],[1812,6],[1820,7],[1829,5],[1838,6],[1848,7],[1857,4],[1862,4],[1867,7],[1877,4],[1883,4],[1888,4],[1893,6],[1904,4],[1910,4],[1915,4],[1920,6],[1938,3],[1949,4],[1955,1],[1958,7],[1967,3],[1975,5],[1981,5],[1987,1],[1989,4],[1995,3],[2001,6],[2010,4],[2015,3],[2024,1],[2026,7],[2035,3],[2042,7],[2050,10],[2070,3],[2077,3],[2081,7],[2089,3],[2094,1],[2097,4],[2104,1],[2106,4],[2112,6],[2128,4],[2145,4],[2151,1],[2154,7],[2163,4],[2168,3],[2172,7],[2180,7],[2189,3],[2193,7],[2202,5],[2210,6],[2219,4],[2224,1],[2226,7],[2237,3],[2242,6],[2251,4],[2258,3],[2262,4],[2270,6],[2277,3],[2281,3],[2287,4],[2294,3],[2298,4],[2306,6],[2313,3],[2317,3],[2325,4],[2332,1],[2334,4],[2340,6],[2347,6],[2354,3],[2359,7],[2367,2],[2370,7],[2380,4],[2387,3],[2391,4],[2399,6],[2406,3],[2410,3],[2423,4],[2433,4],[2439,1],[2442,7],[2451,4],[2460,5],[2466,1],[2468,4],[2476,1],[2478,4],[2485,4],[2490,4],[2499,7],[2510,10],[2523,2],[2526,7],[2534,3],[2540,3],[2547,7],[2555,10],[2568,6],[2579,15],[2596,11],[2609,11],[2621,4],[2627,4],[2632,4],[2637,6],[2649,8],[2661,6],[2669,1],[2674,1],[2679,1],[2686,7],[2694,4],[2699,3],[2704,6],[2720,6],[2731,15],[2748,11],[2761,11],[2773,4],[2779,4],[2784,4],[2789,6],[2801,6],[2809,4],[2814,4],[2821,6],[2829,1],[2835,7],[2843,4],[2848,3],[2853,6],[2861,3],[2865,7],[2874,7],[2882,5],[2893,6],[2900,6],[2908,7],[2916,4],[2934,13],[2948,1],[2978,6],[2985,3],[2989,4],[3001,7],[3045,7],[3053,4],[3058,6],[3068,7],[3078,6],[3087,3],[3093,4],[3107,7],[3118,4],[3123,7],[3131,9],[3143,7],[3151,7],[3159,7],[3169,7],[3178,4],[3187,4],[3192,6],[3201,3],[3207,5],[3218,7],[3232,4],[3237,7],[3245,6],[3254,5],[3262,6],[3269,7],[3277,4],[3282,7],[3290,4],[3295,4],[3300,6],[3309,4],[3314,4],[3319,6],[3330,4],[3335,10],[3349,7],[3359,6],[3367,7],[3376,5],[3385,6],[3395,7],[3404,4],[3409,4],[3414,7],[3424,4],[3430,4],[3435,4],[3440,6],[3451,4],[3457,4],[3462,4],[3467,6],[3482,4],[3488,1],[3491,7],[3500,3],[3508,5],[3514,5],[3520,1],[3522,4],[3528,3],[3534,6],[3543,4],[3548,3],[3557,1],[3559,7],[3568,3],[3572,7],[3580,7],[3588,10],[3602,1],[3605,4],[3612,1],[3614,4],[3620,6],[3633,4],[3639,1],[3642,7],[3651,4],[3660,5],[3666,1],[3668,4],[3676,1],[3678,4],[3688,4],[3702,4],[3708,1],[3711,7],[3720,4],[3725,3],[3729,7],[3737,7],[3746,3],[3750,7],[3759,5],[3767,6],[3776,4],[3781,1],[3783,7],[3794,3],[3799,6],[3808,4],[3815,3],[3819,4],[3827,6],[3834,3],[3838,3],[3844,4],[3851,3],[3855,4],[3863,6],[3870,3],[3874,3],[3882,4],[3889,3],[3893,4],[3901,6],[3908,3],[3912,3],[3918,4],[3925,1],[3927,4],[3933,6],[3940,6],[3947,3],[3952,7],[3960,7],[3982,13],[3996,1],[4035,4],[4040,13],[4054,1],[4056,3],[4061,6],[4070,6],[4077,1],[4079,3],[4083,5],[4089,4],[4094,4],[4099,6],[4108,7],[4116,4],[4121,1],[4125,4],[4130,16],[4147,1],[4149,3],[4157,13],[4171,1],[4176,6],[4184,13],[4198,1],[4202,4],[4208,4],[4213,4],[4218,6],[4229,7],[4238,4],[4243,4],[4248,1],[4251,1],[4268,4],[4274,1],[4277,13],[4291,1],[4295,4],[4304,4],[4309,6],[4320,6],[4327,1],[4329,4],[4336,4],[4342,1],[4345,13],[4359,1],[4363,3],[4369,5],[4377,6],[4384,1],[4386,3],[4395,4],[4405,4],[4411,1],[4414,13],[4428,1],[4432,4],[4437,3],[4441,7],[4449,7],[4459,1],[4462,5],[4471,6],[4480,4],[4487,3],[4491,4],[4499,3],[4503,4],[4508,1],[4510,6],[4517,4],[4523,3],[4527,3],[4533,4],[4538,3],[4547,1],[4549,7],[4558,6],[4565,3],[4570,1],[4572,3],[4624,15],[4645,6],[4688,4],[4693,15],[4709,6],[4719,13],[4735,6],[4745,4],[4750,18],[4772,15],[4790,6],[4798,15],[4815,13],[4830,16],[4849,6],[4864,4],[4870,1],[4873,15],[4890,7],[4898,3],[4902,7],[4910,7],[4919,1],[4922,7],[4933,5],[4939,5],[4945,1],[4947,4],[4953,1],[4955,6],[4964,1],[4966,5],[4972,1],[4974,7],[4985,1],[4987,5],[5039,15],[5091,4],[5096,15],[5112,6],[5121,8],[5132,6],[5139,4],[5144,4],[5149,6],[5158,3],[5162,5],[5170,4],[5175,18],[5194,5],[5202,6],[5211,15],[5229,6],[5237,15],[5254,8],[5264,5],[5271,4],[5277,4],[5282,4],[5287,6],[5302,4],[5308,1],[5311,15],[5328,7],[5336,3],[5340,7],[5348,7],[5357,1],[5360,7],[5371,5],[5377,5],[5383,1],[5385,4],[5391,1],[5393,5],[5401,1],[5403,8],[5412,3],[5416,7],[5425,5],[5431,7],[5442,1],[5444,5],[5453,4],[5459,1],[5462,15],[5479,4],[5488,4],[5493,6],[5504,6],[5511,1],[5513,4],[5520,4],[5526,1],[5529,15],[5546,3],[5552,5],[5560,6],[5567,1],[5569,3],[5581,4],[5589,8],[5600,8],[5614,4],[5619,4],[5628,1],[5633,10],[5646,2],[5649,1],[5651,3],[5657,3],[5664,7],[5672,10],[5688,3],[5692,5],[5698,6],[5708,18],[5729,6],[5737,1],[5742,1],[5747,1],[5752,1],[5756,1],[5758,4],[5763,3],[5768,6],[5779,3],[5783,5],[5789,6],[5799,18],[5820,1],[5824,1],[5826,4],[5831,3],[5836,6],[5844,5],[5851,3],[5858,6],[5865,4],[5870,3],[5875,2],[5878,3],[5885,3],[5891,3],[5895,7],[5904,8],[5913,5],[5922,3],[5929,4],[5936,3],[5940,7],[5949,3],[5953,5],[5962,5],[5979,10],[5991,6],[6001,7],[6009,11],[6021,3],[6026,1],[6028,4],[6033,11],[6046,5],[6052,6],[6061,7],[6072,18],[6093,1],[6097,1],[6099,4],[6104,10],[6116,7],[6125,6],[6133,3],[6140,7],[6148,4],[6153,10],[6165,3],[6169,7],[6178,4],[6183,7],[6194,6],[6202,3],[6207,1],[6209,4],[6224,5],[6230,7],[6240,1],[6242,1],[6244,1],[6247,3],[6251,5],[6259,1],[6261,1],[6263,1],[6266,4],[6271,7],[6283,7],[6291,8],[6300,8],[6320,15],[6336,6],[6344,13],[6358,3],[6362,6],[6369,3],[6376,18],[6395,6],[6403,13],[6417,4],[6425,17],[6443,6],[6451,13],[6465,6],[6475,18],[6494,6],[6502,5],[6510,6]]},"1657":{"position":[[0,7],[22,6],[36,4],[50,3]]},"1659":{"position":[[0,2],[3,3],[7,6],[14,3],[18,10],[29,7]]},"1662":{"position":[[0,7],[15,7],[23,11],[51,7],[59,4],[64,6],[74,3],[80,2],[85,6],[92,3],[96,10],[107,7],[118,3],[124,4],[131,7],[139,4],[145,4],[163,5],[170,1],[174,7],[183,5],[191,6],[200,3],[206,7],[214,4],[220,3],[237,3],[245,4],[250,4],[259,7],[267,5],[275,3],[279,6],[287,5],[294,1],[297,3],[301,3],[306,1],[308,5],[314,3],[319,1],[324,4],[331,3],[346,7],[356,4],[361,5],[369,3],[373,2]]},"1664":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[34,6],[41,3],[45,10],[56,7],[67,4],[72,4],[81,3],[88,7],[96,3],[101,7],[122,4],[130,3],[134,4],[140,4],[158,5],[165,1],[169,7],[178,5],[186,6],[195,3],[202,3],[206,4],[212,3],[229,3],[235,7],[243,9],[253,3],[257,5],[263,2],[266,4],[271,1],[277,3],[281,6],[289,5],[296,1],[299,3],[303,3],[308,1],[310,5],[316,3],[321,1],[326,4],[333,3],[348,7],[358,4],[363,5],[371,3],[375,2]]},"1666":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[34,6],[41,3],[45,10],[56,7],[67,4],[72,4],[81,3],[88,7],[96,3],[101,3],[132,5],[139,8],[151,3],[155,7],[164,5],[180,4],[188,8],[197,4],[203,4],[219,7],[228,5],[236,6],[255,3],[260,6],[270,3],[274,7],[283,3],[296,7],[307,6],[314,4],[320,7],[339,7],[348,7],[359,6],[368,6],[375,7],[383,9],[393,3],[397,5],[403,2],[406,4],[411,1],[419,4],[424,8],[433,11],[448,3],[452,6],[460,5],[468,1],[471,1],[476,4],[482,4],[487,6],[494,11],[509,3],[513,7],[522,7],[543,3],[547,5],[555,4],[560,3],[566,3],[570,3],[576,7],[585,3],[589,3]]},"1668":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[34,6],[41,3],[45,10],[56,7],[67,4],[72,4],[81,3],[88,7],[96,3],[101,3],[105,7],[128,4],[136,3],[140,4],[146,4],[162,5],[169,9],[169,4],[174,4],[181,7],[190,9],[202,6],[211,7],[219,9],[229,3],[233,5],[239,2],[242,4],[247,1],[253,3],[257,7],[266,5],[276,4],[290,6],[297,9],[297,4],[302,4],[307,7],[317,3],[321,7]]},"1670":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[34,6],[41,3],[45,10],[56,7],[67,4],[72,4],[81,3],[88,7],[96,3],[101,4],[106,4],[124,7],[135,3],[139,4],[145,7],[166,5],[173,1],[177,4],[184,7],[192,9],[202,3],[206,5],[212,2],[215,4],[220,1],[226,2],[230,7],[240,3],[244,7],[253,7],[261,4],[266,7],[278,4],[285,3],[289,7],[298,7],[306,4],[311,8],[334,4],[339,4],[346,7],[356,4],[361,4],[367,1]]},"1672":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[34,6],[41,3],[45,10],[56,7],[67,4],[72,4],[81,3],[88,7],[96,3],[101,4],[106,7],[129,5],[138,3],[142,4],[148,5],[166,7],[176,7],[184,9],[194,3],[198,5],[204,2],[207,4],[212,1],[218,3],[222,7],[231,5],[241,5],[258,4],[263,7],[273,5],[279,5],[287,5],[293,6],[302,5],[308,6]]},"1675":{"position":[[5,7],[13,6],[36,7],[44,4],[49,6],[59,3],[65,2],[70,6],[77,3],[81,10],[92,7],[103,4],[108,4],[117,3],[124,7],[132,3],[137,6],[144,6],[170,4],[178,3],[182,4],[188,4],[206,6],[215,3],[219,6],[226,4],[231,1],[234,7],[242,12],[256,5],[264,3],[268,7],[288,4],[294,6],[301,3],[308,7],[316,9],[326,3],[330,5],[336,2],[339,4],[344,1]]},"1677":{"position":[[0,7],[37,3]]},"1679":{"position":[[23,3],[68,7]]},"1682":{"position":[[0,6],[13,8],[22,4],[38,4],[53,4],[60,3],[64,6],[71,9],[83,7],[91,4],[96,6],[106,8],[115,4],[122,3],[129,4],[134,4],[143,8],[158,4],[166,5],[175,3],[181,2],[186,3],[190,6],[197,3],[201,6],[208,9],[220,3],[227,4],[232,9],[244,4],[249,8],[261,6],[269,2],[272,3],[279,3],[285,3],[289,7],[298,5],[307,3],[312,6],[321,3],[325,7],[334,4],[342,6],[350,4],[358,6],[367,3],[371,7],[380,3],[387,6],[395,3],[402,7],[464,4],[476,4]]},"1685":{"position":[[4,2],[7,3],[11,6],[18,3],[22,7],[30,5],[40,7],[48,4],[53,6],[63,3],[69,6],[76,3],[80,7],[88,5],[97,4],[102,4],[111,8],[126,4],[134,5],[143,3],[149,2],[154,2],[158,5],[164,5],[170,8],[182,3],[186,7],[195,7],[203,4],[208,4],[215,6],[224,2],[227,5],[233,3],[237,8],[248,4],[255,6],[266,3],[270,7],[279,4],[284,5],[290,6],[301,4],[308,3],[312,7],[321,4],[326,5],[332,4],[337,3],[341,5],[351,4],[359,5],[365,3],[369,8],[380,4],[387,3],[394,5],[400,3],[404,8],[415,3],[421,3],[427,3],[431,7],[440,4],[448,4],[453,6],[463,3],[467,7],[476,3],[483,3]]},"1687":{"position":[[17,4],[25,8]]},"1689":{"position":[[4,2],[7,3],[11,6],[18,3],[22,4],[27,8],[36,2],[43,7],[51,4],[56,6],[66,3],[71,8],[81,6],[88,3],[92,4],[97,8],[106,2],[112,4],[117,4],[126,3],[130,4],[137,8],[146,35],[182,8],[197,4],[205,5],[214,3],[220,2],[225,3],[229,6],[236,3],[240,6],[247,9],[259,4],[264,9],[276,4],[281,8],[293,6],[301,3],[305,7],[314,4],[322,6],[330,4],[338,3],[342,7],[351,3],[358,6],[366,3]]},"1691":{"position":[[9,8],[18,4],[32,4],[42,5],[55,8],[64,4]]},"1693":{"position":[[4,2],[7,3],[11,6],[18,3],[22,5],[28,10],[43,7],[51,4],[56,6],[66,3],[72,6],[79,3],[83,5],[89,10],[103,4],[108,4],[117,8],[131,4],[139,4],[147,5],[156,3],[162,2],[168,4],[174,1],[179,10],[190,9],[200,8],[211,4],[218,3],[223,1],[228,10],[239,6],[246,8],[257,3],[263,3],[267,7],[276,4],[284,4],[290,3],[294,7],[303,3],[310,3]]},"1695":{"position":[[11,4],[26,4],[38,4],[51,5]]},"1697":{"position":[[13,8],[22,4],[30,4],[59,5],[68,4],[90,4],[95,4],[100,8],[109,2],[116,4],[136,4],[147,5],[153,10],[168,4],[180,4]]},"1699":{"position":[[4,4],[19,5],[31,4],[41,4],[46,8],[55,2],[62,4],[77,5],[83,10],[107,8],[116,4],[138,4]]},"1702":{"position":[[4,2],[40,7],[56,3],[123,6],[130,3],[152,3],[160,7]]},"1704":{"position":[[2,7],[24,7],[32,4],[45,6],[56,7],[64,5],[77,7]]},"1706":{"position":[[0,7],[8,4],[13,6],[23,3],[29,7],[40,4],[45,4],[54,3],[58,3],[62,3],[68,2],[71,8],[83,7],[91,6],[98,3],[103,9],[116,7],[124,7],[132,3],[137,3],[141,7],[150,4],[158,8],[171,3],[175,3],[179,7],[188,5],[197,9],[211,2],[214,8],[225,7],[233,6],[241,3],[246,9],[258,7],[266,7],[275,3],[280,3],[284,7],[293,5],[299,4],[307,8],[321,3],[325,3],[329,7],[338,5],[344,5],[353,9],[367,12]]},"1708":{"position":[[16,7],[24,5],[38,6],[52,4],[59,7],[67,4],[72,6],[82,3],[88,7],[99,4],[104,4],[113,3],[117,3],[121,3],[127,2],[150,9],[162,7],[170,5],[180,3],[186,9],[199,7],[207,7],[216,3],[227,9],[239,7],[247,5],[257,3],[263,9],[276,9],[286,4],[326,7],[334,5],[349,4],[375,2],[378,9],[388,6],[399,9],[409,6],[416,3],[423,3],[427,7],[436,8],[445,5],[454,3],[462,3]]},"1711":{"position":[[0,7],[8,4],[13,6],[23,3],[29,7],[40,4],[45,6],[52,6],[61,4],[66,6],[73,3],[77,3],[83,4],[88,4],[97,1],[102,6],[109,4],[116,5],[124,3],[129,2],[133,8],[145,7],[153,6],[160,1],[166,8],[175,7],[183,3],[187,6],[194,2],[197,6],[204,2],[207,3],[211,6],[222,2],[225,6],[232,2],[235,3],[239,4],[244,2],[247,1],[249,2],[252,3],[256,1],[258,6],[266,3],[270,1],[275,1],[278,1],[282,8],[291,8],[303,1],[309,5],[318,8],[327,5],[333,1],[336,3],[340,6],[348,5],[354,4],[361,1],[364,4],[371,1],[373,1],[377,5],[383,4],[389,5],[395,4]]},"1713":{"position":[[22,4],[35,7],[43,4],[48,6],[58,3],[64,7],[75,4],[80,4],[85,6],[94,2],[97,3],[102,4],[108,2],[112,4],[118,2],[123,4],[128,6],[136,4],[142,4],[151,4],[156,4],[165,8],[177,7],[185,6],[192,4],[200,3],[204,1],[209,1],[212,1],[216,8],[225,8],[237,1],[243,5],[252,8],[261,5],[267,1],[280,3],[284,6],[292,5],[298,3],[304,1],[306,1],[310,5],[316,3],[321,3],[328,5],[334,3],[338,3],[343,4],[350,3],[354,6],[362,5],[370,1],[373,4],[378,3],[384,1],[386,1],[390,5],[396,4],[402,3]]},"1715":{"position":[[6,7],[14,4],[19,6],[29,3],[35,7],[46,4],[51,10],[62,6],[71,4],[77,1],[79,10],[91,3],[95,1],[98,1],[100,3],[105,3],[111,6],[118,1],[122,1],[126,4],[131,4],[140,4],[148,10],[161,6],[171,7],[179,7],[187,4],[193,12],[207,3],[213,4],[223,7],[231,5],[237,7],[245,7],[253,2],[258,7],[266,7],[274,2],[279,6],[289,6],[296,4],[301,4],[307,3],[311,7],[320,6],[330,6],[337,1],[340,3],[350,2],[361,7],[369,4],[374,6],[384,3],[390,7],[401,4],[406,4],[411,6],[420,4],[425,6],[434,4],[440,1],[442,4],[448,8],[461,3],[465,7],[474,5],[483,1],[485,4],[493,4],[498,4],[507,1],[512,4],[517,4],[524,5],[532,1],[537,7],[545,7],[553,1],[556,6],[566,1],[568,12],[582,8],[593,6],[600,4],[605,3],[617,5],[624,5]]},"1717":{"position":[[29,2]]},"1719":{"position":[[21,9],[35,6],[57,4],[62,8],[80,7]]},"1722":{"position":[[0,9],[12,2]]},"1724":{"position":[[0,2],[3,3],[7,6],[14,3],[18,2],[21,10],[32,9],[42,3]]},"1726":{"position":[[0,7],[8,4],[13,6],[23,3],[29,6],[36,3],[40,2],[43,10],[54,9],[64,3],[71,4],[76,4],[81,6],[90,4],[95,6],[103,8],[113,8],[124,3],[128,3],[133,8],[143,3],[147,2],[150,3],[154,2],[159,5],[165,6],[173,8],[183,8],[192,5],[202,4],[207,4],[216,8],[228,9],[238,3],[244,4],[252,4],[258,4],[268,3],[273,2],[277,5],[285,7],[293,5],[303,3],[310,8],[319,6],[326,4],[332,2],[335,3],[342,3],[348,3],[352,1],[355,3],[362,5],[368,3],[373,9],[383,16],[403,3],[407,7],[416,10],[427,5],[436,3],[445,4],[452,3],[456,7],[465,10],[476,6]]},"1728":{"position":[[6,8],[20,5],[37,3],[41,1],[48,1],[50,3],[54,1],[61,1],[63,3],[67,1],[84,3],[88,1],[105,3],[109,1],[118,1],[120,3],[131,3],[135,7],[149,8],[167,5],[179,8],[188,1],[195,1],[200,10],[211,1],[217,1],[222,8],[231,1],[237,1],[242,9],[258,9],[274,4],[286,4],[294,4],[306,4],[314,7],[329,8],[338,6],[358,6],[369,6],[381,8],[402,4],[414,4],[419,4],[431,4],[440,5],[450,5],[459,10],[477,5],[486,9],[504,11],[516,5],[527,5],[542,11],[554,5],[565,5],[578,8],[587,1],[594,1],[599,9],[621,4],[632,3]]},"1730":{"position":[[22,5],[30,4],[35,14],[50,2],[53,9],[63,10],[75,4],[82,6],[89,2],[92,5],[100,6],[113,5],[122,4],[127,4],[136,8],[148,9],[158,3],[164,8],[173,18],[193,5],[201,14],[217,4],[222,4],[227,6],[236,3],[240,6],[248,8],[258,5],[268,1],[273,4],[278,3],[284,5],[292,3],[299,8],[308,6],[315,1],[318,2],[321,3],[328,3],[334,3],[338,7],[347,10],[358,6],[368,3],[375,4],[382,3],[386,7],[395,10],[406,6]]},"1732":{"position":[[0,4],[5,7],[13,6],[22,4],[27,6],[35,8],[45,8],[56,7],[64,6],[72,8],[82,7],[94,4],[99,6],[106,6],[115,4],[120,6],[128,8],[138,8],[149,3],[153,3],[158,8],[168,3],[172,2],[177,7],[185,7],[194,8],[204,8],[217,8]]},"1734":{"position":[[0,2],[3,3],[10,3],[16,3],[20,1],[23,1],[28,5],[34,3],[39,9],[49,16],[69,3],[73,6],[81,5],[88,1],[90,6],[97,2],[102,1],[105,3],[109,1],[113,1],[115,5],[124,1],[126,3]]},"1736":{"position":[[0,9],[25,2],[44,3],[52,3],[61,3]]},"1739":{"position":[[2,6],[15,13],[35,15],[74,8],[83,4],[102,4],[169,4],[174,9],[186,4],[191,11]]},"1742":{"position":[[0,6],[8,8],[17,4],[23,4],[28,4],[37,1],[42,6],[50,5],[58,2],[69,4],[75,3],[82,4],[87,7],[95,1],[106,3],[110,2],[113,6],[120,3],[126,4],[131,9],[141,4],[148,2]]},"1744":{"position":[[0,4],[5,7],[13,6],[22,2],[25,3],[30,4],[36,2],[41,4],[46,6],[54,4],[60,4],[67,9],[77,4],[82,4],[88,4],[94,10],[94,7],[102,2],[105,9]]},"1746":{"position":[[5,4],[10,9],[34,4],[51,4],[56,9],[79,4],[108,8],[120,4],[125,6],[132,6],[141,4],[146,6],[153,3],[157,3],[181,4],[187,1],[190,6],[198,13],[212,4],[219,4],[225,5],[233,3],[237,4],[242,6],[251,8],[260,6],[268,4],[274,9],[274,4],[279,4],[286,3],[290,3],[295,4],[301,3],[309,2],[312,3],[319,4],[324,9],[334,4],[341,4],[348,3],[355,3],[361,6],[368,3],[374,2],[377,4],[382,3],[388,1],[393,4],[398,3],[404,3],[410,6],[417,6],[424,3],[429,3],[433,4],[438,2],[441,7],[449,1],[451,3],[455,3]]},"1748":{"position":[[0,4],[5,10],[16,4],[21,4],[26,4],[32,2],[35,10],[47,11],[64,4],[70,5],[79,6],[86,4],[91,7],[99,4],[104,4],[109,2],[113,6],[121,4],[126,2],[129,2]]},"1750":{"position":[[0,4],[6,2],[10,10],[22,13],[36,4],[43,4],[49,5],[57,3],[61,1],[63,6],[70,2],[73,3],[80,4],[85,9],[95,4],[102,1],[106,3],[113,3],[119,6],[126,3],[132,1],[135,3],[142,4],[147,5],[154,4],[159,2],[162,2],[167,1],[170,2],[173,3],[180,3],[186,6],[193,3],[200,2],[205,10],[216,1],[219,6],[226,3]]},"1753":{"position":[[0,4],[5,5],[11,6],[20,2],[23,3],[28,4],[34,2],[39,8],[50,7],[59,4],[65,8],[76,4],[81,10],[93,4],[99,4]]},"1755":{"position":[[0,4],[5,5],[11,9],[23,4],[30,7],[40,4],[45,6],[52,6],[61,6],[68,7],[77,4],[83,6],[94,4],[100,1],[102,6],[110,4],[117,7],[127,6],[134,4],[139,2],[144,1],[146,6],[155,1],[157,6],[178,4],[184,1],[187,6],[195,11],[212,4],[218,5],[227,4],[232,5],[238,6],[245,6],[252,4],[257,7],[266,6],[275,4],[280,6],[288,4],[294,4],[302,5],[311,4],[318,6],[327,5],[336,5],[343,1]]},"1758":{"position":[[0,3],[4,10],[17,4],[22,4],[28,3],[33,4],[40,9],[54,6],[61,3],[65,5],[71,6],[84,4],[89,15],[105,1],[107,9],[123,4],[129,5],[138,3],[145,10],[156,3],[164,5],[170,6],[178,5],[184,10],[195,3],[199,3],[204,3],[208,5],[216,7],[227,4],[232,10],[243,3],[248,2],[251,3],[258,7],[266,6],[273,1],[277,3],[284,3],[290,6],[297,3],[302,3],[308,6],[315,3],[319,5],[328,3]]},"1760":{"position":[[0,4],[5,8],[27,8],[44,8]]},"1763":{"position":[[0,4],[5,4],[10,6],[19,5],[25,3],[30,4],[36,5],[44,4],[50,4],[56,4],[62,4],[67,9],[84,9]]},"1765":{"position":[[0,4],[5,9],[15,4],[20,4],[25,4],[31,1],[34,9],[45,13],[59,1],[63,4],[69,5],[77,1],[82,7],[90,4],[95,6],[102,1],[112,2],[116,3],[123,4],[128,5],[134,4],[139,7],[148,1],[151,2],[154,3],[161,3],[167,6],[174,3],[181,1],[185,9],[195,2],[199,6],[206,3]]},"1768":{"position":[[0,4],[5,26],[5,14],[20,11],[32,1],[35,7],[43,1],[48,2],[54,10],[65,4],[70,4],[75,4],[81,1],[84,1],[87,1],[90,1],[93,1],[96,1],[99,4],[104,3],[110,4],[116,3],[123,4],[128,7],[136,2],[140,6],[147,3],[151,1],[154,3],[159,6],[166,5],[172,1],[177,4],[182,2],[185,2],[191,6],[198,4],[207,4],[212,28],[212,14],[227,13],[241,1],[244,7],[252,1],[257,3],[261,2],[264,10],[275,3],[282,4],[287,9],[299,4],[306,4],[311,2],[314,2],[322,2],[326,6],[333,3],[337,1],[340,3],[345,6],[352,5],[358,1],[361,4],[367,4],[372,4],[377,2],[381,4]]},"1770":{"position":[[17,4],[28,9],[55,4],[60,7],[72,7],[80,9]]},"1772":{"position":[[0,7],[8,4],[13,6],[23,8],[32,4],[39,3],[45,4],[53,4],[58,10],[69,4],[74,4],[79,4],[85,2],[88,10],[100,11],[117,4],[123,5],[132,6],[139,4],[144,7],[152,4],[157,4],[162,2],[166,6],[174,4],[179,2],[182,2],[190,4],[196,2],[200,10],[212,13],[226,4],[233,4],[239,5],[247,3],[251,1],[253,6],[260,2],[263,3],[270,4],[275,9],[285,4],[292,1],[296,3],[303,3],[309,6],[316,3],[322,1],[325,3],[332,4],[337,5],[344,4],[349,2],[352,2],[357,1],[360,2],[363,3],[370,3],[376,6],[383,3],[390,2],[395,10],[406,1],[409,6],[416,3],[422,4],[427,5],[433,6],[442,4],[447,6],[455,4],[461,4],[468,9],[478,10],[490,4],[496,10],[496,5],[502,4],[511,4],[516,4],[525,5],[534,5],[541,4],[548,2],[551,10],[564,9],[575,10],[586,4],[591,3],[601,4],[607,1],[612,4],[617,7],[625,5],[632,3],[636,7],[644,6],[651,4],[663,4],[670,2],[673,10],[686,10],[686,5],[692,4],[699,4],[704,2],[707,2],[712,3],[716,8],[725,5],[731,1],[735,4],[740,9],[750,4],[757,8],[767,3],[771,6],[781,1],[783,1],[787,8],[801,4],[806,2],[809,10],[820,9],[830,4],[835,2],[838,2],[841,2],[844,2],[847,2],[851,4],[856,3],[863,6],[876,7],[884,3],[888,6],[898,8],[907,4],[914,6],[929,6],[952,4],[957,9],[967,4],[972,9],[982,4],[987,11],[999,4],[1004,11],[1026,4],[1033,4],[1072,4],[1078,4],[1104,6],[1124,4],[1129,6],[1136,6],[1145,5],[1151,6],[1163,9],[1178,6],[1185,4],[1190,9],[1200,3],[1204,6],[1212,6],[1221,6],[1228,6],[1235,5],[1242,3],[1252,11],[1267,4],[1272,9],[1285,4],[1291,1],[1293,6],[1301,11],[1316,9],[1329,5],[1340,2],[1343,1],[1345,5],[1362,6],[1371,6],[1381,3],[1391,6],[1398,3],[1403,3],[1407,6],[1416,6],[1426,3],[1435,11],[1450,4],[1455,9],[1468,4],[1474,1],[1476,6],[1484,11],[1501,4],[1507,5],[1516,6],[1525,4],[1532,6],[1543,3],[1552,13],[1569,4],[1574,11],[1589,4],[1595,1],[1598,6],[1606,13],[1620,9],[1630,4],[1635,9],[1648,5],[1655,5],[1663,2],[1666,1],[1671,3],[1677,6],[1684,6],[1691,3],[1696,6],[1703,9],[1713,4],[1718,3],[1722,6],[1751,5],[1767,4],[1772,5],[1778,6],[1791,5],[1799,6],[1812,6],[1819,9],[1831,5],[1838,1],[1847,1],[1854,5],[1882,6],[1895,4],[1900,9],[1936,6],[1944,9],[1964,3],[1968,3],[1972,6],[1979,2],[1982,3],[1989,9],[2000,3],[2006,3],[2013,3],[2019,6],[2026,3],[2032,1],[2034,5],[2042,3],[2046,6],[2053,3],[2062,13],[2079,4],[2084,11],[2099,4],[2105,1],[2108,6],[2116,13],[2130,4],[2137,4],[2143,5],[2151,2],[2154,1],[2159,3],[2165,6],[2172,6],[2179,3],[2184,6],[2191,9],[2201,4],[2206,3],[2210,6],[2221,3],[2225,3],[2229,6],[2236,2],[2239,3],[2246,4],[2251,9],[2261,4],[2268,3],[2274,3],[2281,3],[2287,6],[2294,3],[2300,1],[2302,5],[2310,3],[2314,6],[2321,3],[2330,3],[2347,4],[2353,1],[2355,6],[2363,3],[2369,6],[2378,6],[2385,1],[2387,5]]},"1775":{"position":[[0,6],[11,5]]},"1777":{"position":[[3,6],[50,6],[75,6],[83,8],[83,3],[87,4],[94,7],[104,8],[104,3],[108,4],[124,7],[178,5]]},"1780":{"position":[[0,4],[5,6],[13,4],[18,2],[21,8],[21,3],[25,4],[42,4],[47,2],[50,8],[50,3],[54,4],[68,5]]},"1782":{"position":[[0,4],[5,6],[13,4],[18,2],[21,8],[21,3],[25,4],[31,3],[35,4],[43,4],[48,2],[51,8],[51,3],[55,4],[67,3],[71,4]]},"1784":{"position":[[8,4],[13,5],[20,1],[23,4],[28,2],[31,8],[31,3],[35,4],[62,4],[71,6],[85,4],[90,5],[97,1],[99,4],[105,4],[111,4],[116,2],[119,8],[119,3],[123,4],[128,4],[133,4],[138,5],[145,1],[147,5],[154,3],[159,4],[164,2],[167,8],[167,3],[171,4],[176,3],[180,4],[185,5],[192,1],[194,4],[200,3],[205,4],[210,2],[213,8],[213,3],[217,4],[222,3],[226,4],[231,5],[238,1],[240,4],[246,3],[250,3],[255,4],[260,2],[263,8],[263,3],[267,4],[272,3],[276,3],[284,4],[290,3],[295,3],[302,3],[306,3],[409,4],[452,6],[471,4],[486,2],[489,3],[493,4],[517,4],[544,3],[604,3],[631,3],[669,3],[700,3],[723,3],[760,6],[795,3],[799,3],[811,3],[815,4],[829,3],[833,3],[850,3],[885,3],[889,3],[906,3],[929,3],[933,3],[937,1],[971,5],[996,3],[1002,4],[1025,3],[1029,3],[1046,3],[1050,3],[1073,6],[1086,4],[1093,2],[1150,6],[1167,4],[1172,2],[1176,3],[1180,4],[1186,4],[1191,2],[1194,8],[1194,3],[1198,4],[1203,3],[1208,4],[1213,2],[1217,3],[1221,6],[1221,3],[1225,2],[1228,5],[1234,3],[1238,8],[1247,2],[1250,1],[1253,4],[1258,2],[1261,8],[1261,3],[1265,4],[1270,3],[1274,6],[1274,3],[1278,2],[1281,5],[1287,3],[1292,4],[1297,2],[1301,3],[1305,6],[1305,3],[1309,2],[1312,5],[1318,3],[1322,4],[1327,2],[1330,1],[1333,4],[1338,2],[1341,8],[1341,3],[1345,4],[1350,3],[1354,6],[1354,3],[1358,2],[1361,5],[1367,3],[1375,6],[1385,4],[1390,6],[1398,4],[1403,2],[1406,8],[1406,3],[1410,4],[1416,3],[1420,4],[1438,6],[1454,4],[1459,2],[1462,8],[1462,3],[1466,4]]},"1787":{"position":[[17,6],[41,6],[77,4],[82,5],[89,3],[93,4],[99,3],[103,4],[108,5],[116,4],[122,3],[127,3],[131,3],[135,4],[140,5],[148,4],[154,4],[160,3],[164,4],[169,4],[174,5],[182,4],[188,3],[193,3],[197,3],[201,4],[206,6],[214,3]]},"1789":{"position":[[0,6],[68,6]]},"1793":{"position":[[21,6]]},"1795":{"position":[[5,6],[27,4],[47,6],[100,10],[113,10],[163,3],[169,4],[176,3],[219,6],[237,6],[279,6]]},"1797":{"position":[[0,6]]},"1800":{"position":[[0,4],[5,6],[12,6],[20,3],[34,3],[70,3],[109,9],[119,3],[124,1]]},"1803":{"position":[[0,7],[8,4],[13,6],[23,3],[29,3],[35,3],[41,3],[45,4],[52,2],[57,2],[60,6],[69,7],[80,4],[85,4],[100,10],[116,3],[120,4],[125,4],[137,6],[144,2],[147,3],[154,2],[157,9],[167,10],[180,3],[187,3],[193,3],[197,6],[207,6],[218,1],[222,3],[238,8],[248,3],[255,3],[259,6],[267,4],[274,10],[286,2],[289,3],[296,3],[302,3],[306,6],[321,1],[325,3],[332,5],[338,4],[347,8],[356,5],[364,2],[367,6],[374,10],[404,2],[407,3],[414,2],[417,5],[423,10],[435,4],[442,3],[449,3],[455,3],[459,6],[476,1],[480,3],[495,3],[502,4],[507,11],[521,3],[525,10],[541,4],[546,1],[548,4],[553,14],[569,1],[572,4],[577,7],[588,3],[592,7],[600,1],[604,5],[610,4],[615,4],[620,6],[627,4],[632,6],[640,1],[647,3],[651,10],[664,6],[673,4],[678,1],[680,4],[685,14],[701,1],[704,4],[709,7],[720,1],[722,11],[734,4],[739,8],[749,1],[751,5],[759,4],[765,2],[783,6],[794,4],[799,6],[807,7],[816,3],[831,21],[853,6],[869,3],[873,6],[881,6],[888,9],[898,2],[901,4],[906,6],[915,1],[919,10],[931,2],[934,3],[941,6],[948,5],[954,8],[965,3],[972,3],[979,3],[986,4],[991,15],[1009,3],[1013,6],[1028,1],[1032,3],[1041,4],[1046,21],[1068,6],[1076,4],[1081,6],[1091,7],[1102,4],[1107,4],[1112,2],[1115,6],[1123,1],[1126,6],[1133,6],[1140,7],[1149,2],[1152,9],[1163,7],[1171,7],[1180,2],[1183,4],[1194,7],[1202,3],[1206,7],[1234,2],[1237,3],[1244,6],[1251,5],[1260,3],[1267,3],[1273,3],[1277,6],[1295,1],[1299,3]]},"1805":{"position":[[4,4],[9,6],[21,6],[32,4],[37,6],[45,7],[54,3],[59,11],[72,2],[77,4],[82,6],[90,12],[104,2],[109,4],[114,6],[122,11],[135,2],[140,4],[145,6]]},"1808":{"position":[[0,7],[8,4],[13,6],[23,3],[29,3],[35,3],[39,4],[46,2],[51,2],[54,6],[63,7],[73,4],[80,6],[87,3],[91,3],[95,5],[101,3],[108,4],[113,4],[128,10],[144,3],[148,3],[152,4],[164,6],[171,2],[174,3],[181,2],[184,9],[194,10],[207,3],[214,3],[220,3],[224,6],[234,6],[245,1],[249,3],[265,8],[275,3],[282,3],[286,6],[294,4],[301,10],[313,2],[316,3],[323,3],[329,3],[333,6],[348,1],[352,3],[359,5],[365,4],[374,8],[383,5],[391,2],[394,6],[401,10],[427,2],[430,3],[437,2],[440,5],[446,10],[458,4],[465,3],[472,3],[478,3],[482,6],[499,1],[503,3],[516,3],[520,6],[530,3],[534,3],[547,6],[554,3],[558,3],[562,6],[572,6],[579,3],[583,3],[587,8],[605,6],[612,3],[621,4],[626,1],[629,3],[633,7],[644,1],[646,6],[653,4],[658,8],[669,5],[675,4],[680,3],[684,4],[689,6],[696,6],[709,6],[716,3],[722,3],[726,4],[733,4],[738,1],[741,3],[745,7],[756,1],[758,4],[763,4],[768,8],[778,3],[782,1],[786,6],[796,7],[807,7],[818,4],[823,9],[836,4],[845,6],[853,5],[862,5],[871,5],[895,6],[906,4],[911,6],[919,7],[928,6],[936,11],[949,2],[954,4],[959,6],[967,12],[981,2],[986,4],[991,6],[1009,21],[1031,6],[1047,3],[1051,6],[1059,3],[1063,6],[1070,9],[1080,2],[1083,4],[1088,6],[1097,1],[1101,10],[1113,2],[1116,3],[1123,6],[1130,5],[1136,8],[1147,3],[1154,3],[1161,3],[1168,4],[1173,15],[1191,3],[1195,6],[1210,1],[1214,3]]},"1810":{"position":[[11,11],[23,3],[27,7],[35,3],[39,11],[64,6],[71,3],[77,6],[86,4],[91,1],[94,3],[98,7],[109,1],[111,4],[116,4],[121,8],[131,3],[135,1],[138,6],[148,7],[173,6],[180,3],[184,20],[208,4],[213,20],[236,3],[240,11],[254,6],[261,4],[266,1],[269,3],[273,7],[284,5],[293,4],[298,3],[304,1],[306,4],[313,8],[325,4],[330,5],[336,5],[343,3],[347,6],[359,1],[365,1],[369,1],[371,7],[379,3],[383,4],[389,8]]},"1813":{"position":[[0,4],[5,4],[14,9],[28,4],[33,9],[44,4],[50,4],[55,1],[58,1],[60,6],[69,3],[73,4],[79,5],[88,6],[95,3],[99,4],[105,4],[114,3],[118,4],[123,4],[135,6],[146,4],[151,6],[159,9],[170,9],[181,7],[190,1],[194,4],[199,6],[209,4],[215,3],[222,6],[229,3],[234,4],[241,4],[246,6],[255,2],[258,3],[265,3],[271,3],[275,5],[281,3],[288,5],[294,4],[299,4],[304,5],[312,4],[318,1],[323,2],[326,7],[334,4],[339,4],[345,3],[349,7],[364,6],[371,4]]},"1815":{"position":[[0,4],[5,4],[14,4],[20,3],[27,3],[31,4],[37,4],[46,3],[50,4],[55,4],[62,2],[65,3],[72,3],[78,3],[82,5],[88,3],[95,5],[101,4],[106,5],[119,4],[126,7],[138,3],[144,4],[149,1],[151,1],[153,1],[155,5],[162,4],[167,1],[169,1],[171,1],[173,1],[176,1],[179,3],[185,4],[190,5],[198,4],[203,7],[213,2],[216,3],[223,3],[229,3],[233,5],[239,3],[254,8],[264,3],[271,2],[274,7],[282,4],[288,2],[291,3],[298,3],[304,3],[308,5],[314,3],[321,3],[325,7],[340,6],[347,8]]},"1817":{"position":[[7,9],[21,4],[26,9],[37,4],[43,4],[48,1],[51,1],[53,6],[62,3],[66,4],[72,5],[81,6],[88,3],[92,4],[98,4],[105,10],[120,12],[134,3],[139,15],[156,2],[161,4],[166,6],[174,19],[195,2],[200,4],[205,6],[215,3],[226,3],[230,7],[238,3],[242,11],[269,1],[271,15],[291,6],[314,11],[326,12],[343,4],[348,14],[377,10],[388,13]]},"1819":{"position":[[0,2],[8,4],[13,6],[25,2],[31,2],[35,1],[38,3],[42,4],[47,4],[60,6],[70,2],[74,1],[77,3],[81,4],[86,4],[93,6],[106,2],[115,7],[123,7],[131,2],[134,3],[142,2],[155,6],[175,6],[184,4],[190,1],[194,4],[199,4],[204,4],[215,2],[230,2],[245,4],[270,2],[274,4],[279,6],[286,3],[297,2],[306,2],[309,2],[319,2],[322,2],[326,3],[335,2],[338,2]]},"1821":{"position":[[7,6],[14,10],[39,6],[47,6],[64,6],[73,6],[80,4],[86,8],[99,10],[99,5],[105,4],[110,4],[117,4],[123,3],[127,4],[132,4],[163,4],[168,3],[207,3]]},"1823":{"position":[[0,4],[5,6],[12,6],[44,3],[73,6],[141,4],[146,6],[162,4],[167,6],[174,4],[197,4],[202,6]]},"1826":{"position":[[0,3],[4,3],[8,8],[34,1],[36,1],[40,7],[58,3]]},"1828":{"position":[[0,3],[7,4],[12,8],[21,10],[43,7],[51,8],[62,6],[69,1],[72,5],[80,4],[94,3],[101,5]]},"1833":{"position":[[0,3],[4,7],[12,3]]},"1835":{"position":[[1,4]]},"1838":{"position":[[5,3],[18,3],[23,12],[23,4],[28,7],[47,3],[94,3],[99,3]]},"1840":{"position":[[4,1],[12,3],[17,3],[21,4],[26,4],[31,4],[40,1],[48,3],[53,3],[57,4],[62,4],[67,4],[72,4],[78,3],[83,3],[91,1],[99,3],[104,3],[108,4],[113,8],[113,3],[117,4],[122,8],[122,3],[126,4]]},"1842":{"position":[[7,1],[11,3],[17,3],[22,1],[24,3],[35,3],[41,6],[48,3],[54,3],[59,1],[62,3],[68,3]]},"1844":{"position":[[8,1],[10,5],[21,1],[23,3],[34,5],[41,4],[53,1],[55,8],[76,1],[78,4],[95,1],[97,4],[113,1],[115,5],[128,1],[130,4],[141,2],[144,9],[160,5],[166,8],[183,4],[188,6],[204,1],[206,4],[213,3]]},"1846":{"position":[[3,5],[32,3],[37,5],[43,9],[43,4],[48,4],[63,3],[68,5],[74,4],[79,1],[81,4],[97,3],[102,5],[108,4],[113,4],[118,2],[121,9],[139,3],[144,4],[149,11],[171,3],[176,6],[184,3]]},"1848":{"position":[[1,3],[6,5],[12,3],[24,3],[29,4],[34,6],[51,3],[56,4],[61,4],[76,3],[81,3],[85,3],[91,5],[106,3],[111,1],[113,3],[118,4],[133,2]]},"1850":{"position":[[1,3],[6,4],[11,9],[34,3],[39,5],[46,3],[62,3],[71,3],[76,1],[78,1],[81,3],[99,3],[104,3],[109,3],[115,4],[138,3],[143,4],[148,9],[158,5],[173,3],[178,4],[183,9],[193,6],[209,3],[214,4],[219,9],[229,6],[245,3],[250,1],[252,1],[255,2],[272,3],[277,1],[279,1],[282,2],[296,3],[301,5],[336,3],[345,2],[357,2],[367,2],[377,3],[384,2],[420,3],[424,2],[434,3],[438,3],[449,3],[456,2],[459,4],[471,2],[481,3],[486,1],[490,1],[492,3],[496,7],[504,7],[512,4],[519,1],[521,3],[529,3],[534,1],[536,1],[539,7],[548,6],[555,1],[558,1],[561,7],[570,6],[577,1],[580,1],[583,7],[592,5],[598,1],[601,1],[603,1],[605,3],[609,4],[618,1],[620,3],[624,1],[627,1],[629,1],[631,2],[635,1],[637,6],[645,5],[651,5],[657,1],[662,1],[664,6],[673,1],[675,1],[678,1],[682,2],[685,6],[692,1],[696,3],[701,1],[703,1],[705,10],[716,1],[718,2],[721,8],[731,4],[736,4],[741,1],[744,4],[749,1],[753,3],[758,1],[760,8],[769,7],[779,4],[784,1],[786,3],[791,6],[798,9],[808,5],[814,12],[814,9],[824,2],[827,7],[836,10],[847,1],[850,4],[858,2],[861,4],[866,1],[868,1],[870,1],[872,6],[880,5],[886,5],[892,1],[898,3],[903,1],[905,1],[908,1],[912,2],[916,3],[921,4],[926,6],[933,1],[937,2],[941,3],[946,3],[950,3],[954,1],[956,2],[960,3],[965,1],[967,1],[970,1],[974,2],[978,3],[983,1],[986,1],[989,1],[994,3],[1001,14],[1017,3],[1022,1],[1024,14],[1039,14],[1055,10],[1067,3],[1072,1],[1074,3],[1078,14],[1093,14],[1109,10],[1120,10],[1131,10],[1142,10],[1153,14],[1169,10],[1180,10],[1191,10],[1202,10],[1213,14],[1229,10],[1240,10],[1252,3],[1257,1],[1259,5],[1265,5],[1271,1],[1273,6],[1282,1],[1284,1],[1287,1],[1292,3],[1297,2],[1300,2],[1303,6],[1310,1],[1314,3]]},"1853":{"position":[[6,4],[11,8],[38,3],[43,4],[48,8],[63,8],[87,3],[92,8],[102,10],[102,7],[110,2],[117,6],[124,4],[129,4],[141,3],[158,3],[162,6],[169,4],[174,4],[179,6],[188,4],[204,3],[213,3],[218,3],[222,6],[229,4],[234,4],[239,5],[245,6],[254,3],[271,3],[275,6],[282,2],[285,4],[290,2],[294,3],[301,3],[314,3],[319,3],[323,6],[330,2],[333,4],[338,2],[341,3],[345,3],[396,3],[400,6],[407,4],[412,4],[417,5],[427,3],[440,5],[446,4],[454,4]]},"1855":{"position":[[6,4],[11,7],[37,3],[42,4],[47,7],[61,6],[81,3],[86,6],[93,9],[93,6],[100,2],[104,3],[109,5],[115,8],[124,6],[131,9],[131,6],[138,2]]},"1857":{"position":[[16,5],[24,3],[29,5],[35,10],[46,2],[49,8],[74,4],[81,3],[86,6],[93,10],[104,2],[107,8],[137,4],[142,3],[146,5],[154,3],[159,6],[166,10],[177,2],[180,8],[194,3],[199,1],[201,1],[203,3],[207,7],[215,7],[223,4],[228,1],[230,3],[236,4],[243,3],[248,1],[250,1],[253,7],[262,5],[268,1],[271,1],[273,1],[275,3],[279,7],[279,3],[283,3],[287,3],[291,1],[296,1],[298,3],[302,3],[308,1],[311,1],[314,1],[316,3],[321,1],[325,1],[328,1],[332,1],[335,1],[342,1],[344,3],[351,1],[354,1],[358,1],[360,6],[367,3],[372,1],[376,2],[380,3],[385,1],[387,1],[389,10],[400,1],[402,2],[405,8],[415,4],[420,4],[425,1],[428,4],[433,1],[437,3],[442,1],[444,8],[453,7],[463,3],[467,1],[469,3],[473,7],[481,8],[490,10],[502,3],[507,3],[511,9],[521,7],[529,5],[535,1],[537,2],[540,3],[544,3],[548,6],[548,3],[552,2],[555,10],[566,1],[569,7],[569,3],[573,3],[578,1],[580,3],[585,2],[588,4],[593,1],[595,1],[597,1],[599,3],[606,1],[610,3],[615,5],[621,1],[624,2],[627,8],[636,10],[647,1],[650,1],[653,2],[657,3],[662,5],[668,1],[670,7],[678,10],[689,1],[692,3],[697,1],[699,10],[711,8],[720,10],[731,1],[734,1],[737,2],[740,3],[744,5],[752,1],[754,3],[758,5],[766,1],[768,18],[787,2],[790,7],[790,3],[794,3],[799,1],[801,3],[806,2],[809,4],[814,1],[816,1],[818,1],[820,3],[825,1],[829,1],[832,1],[836,1],[839,1],[847,3],[852,1],[854,1],[857,1],[861,2],[865,3],[870,1],[872,3],[877,1],[881,4]]},"1859":{"position":[[45,3],[50,5],[56,5]]},"1861":{"position":[[6,6],[19,3],[36,3],[41,6],[49,11],[49,6],[56,4]]},"1863":{"position":[[2,3],[19,6],[26,6],[45,3],[50,6],[57,6],[65,8],[76,4]]},"1865":{"position":[[0,1],[6,3],[11,2],[15,1],[17,3],[22,3],[26,1],[29,4],[34,2],[38,2],[41,5],[47,1],[49,1],[52,1],[54,18],[73,2],[76,4],[82,4],[87,1],[90,4],[95,14],[111,2],[114,5],[120,1],[122,2],[126,3],[131,5],[137,1],[140,1],[142,18],[161,2],[164,4],[170,4],[175,1],[178,4],[183,14],[199,2],[202,5],[208,1],[210,2],[213,2],[216,6],[223,1],[228,3],[232,1],[234,2],[240,3],[245,1],[247,1],[250,1],[252,18],[271,2],[274,4],[280,4],[285,1],[288,4],[293,14],[309,2],[312,5],[318,1],[320,2],[323,2],[326,6],[333,1],[338,3],[342,1],[344,2],[350,3],[355,1],[357,6],[364,6],[375,9],[386,5],[393,1],[396,1]]},"1868":{"position":[[3,2],[19,3],[24,2],[28,1],[30,7],[38,1],[41,1],[43,7]]},"1870":{"position":[[4,3],[14,5],[22,7],[32,4],[37,4],[42,5],[48,7],[56,7],[64,5],[80,5],[88,5],[94,5],[100,7]]},"1872":{"position":[[7,3],[12,6],[19,4],[24,7],[32,5],[55,7],[65,3],[69,3],[73,9],[83,7],[91,5],[97,7],[107,7],[116,1],[119,1],[122,13],[122,3],[126,9],[136,7],[144,7],[153,4],[158,6],[165,5],[171,3],[175,2],[178,8],[187,2],[190,7],[199,13],[199,3],[203,9],[214,4],[219,8],[228,8],[237,8],[246,8],[255,7],[263,5],[272,4],[277,8]]},"1875":{"position":[[1,3],[6,3],[11,3],[16,2]]},"1877":{"position":[[3,8]]},"1882":{"position":[[0,3],[5,6],[23,4],[28,6],[35,4],[40,16],[42,6],[49,7],[57,7],[66,5],[66,3],[70,1],[72,3],[77,4],[83,4],[89,4],[95,4]]},"1884":{"position":[[9,3],[13,1],[24,7]]},"1886":{"position":[[0,3],[4,3],[13,3],[17,3],[21,2],[24,9],[34,4],[39,3],[44,3],[49,3],[53,7],[62,3],[66,5],[72,5]]},"1889":{"position":[[0,6],[7,3],[11,1],[13,3],[17,4],[24,2],[45,4],[50,5],[67,7]]},"1891":{"position":[[0,3],[7,2],[26,2],[29,3],[33,6],[40,3],[44,1],[46,3],[50,4]]},"1894":{"position":[[0,6],[7,3],[11,1],[13,3],[17,4],[24,2],[45,4],[50,5],[67,7]]},"1896":{"position":[[0,3],[7,2],[26,2],[29,3],[33,6],[40,3],[44,1],[46,3],[50,4]]},"1899":{"position":[[0,7],[8,4],[13,6],[23,3],[29,6],[36,3],[40,1],[42,3],[46,4],[54,4],[59,4],[68,3],[75,4],[80,6],[89,3],[93,7],[107,2],[113,3],[118,4],[126,4],[131,7],[141,3],[145,7],[158,2],[164,4]]},"1901":{"position":[[0,1],[2,1],[4,1],[9,4],[14,4],[25,7],[33,4],[38,6],[48,3],[54,6],[61,3],[65,1],[67,3],[71,4],[79,4],[84,4],[93,2],[97,3],[104,4],[109,4],[115,4],[120,3],[126,4],[131,8],[131,1],[133,6],[141,1],[144,2],[147,3],[154,3],[160,3],[164,7],[183,3],[188,6],[197,5],[203,4],[208,5],[214,2],[218,3],[222,3],[227,3],[231,4],[236,1],[239,3],[246,4],[251,4],[256,2],[260,3],[268,2],[271,3],[278,3],[284,3],[288,7],[307,3],[312,6],[321,3],[325,7],[342,6],[349,3],[354,1]]},"1903":{"position":[[0,1],[2,1],[4,1],[13,7],[21,4],[26,6],[36,3],[42,6],[49,3],[53,1],[55,3],[59,4],[67,4],[72,4],[81,6],[93,3],[97,2],[101,4],[111,6],[119,2],[126,1],[130,3],[137,4],[142,4],[147,6],[155,4],[161,3],[166,2],[169,3],[176,3],[182,3],[186,7],[203,3]]},"1905":{"position":[[0,1],[2,1],[4,1],[12,7],[20,4],[25,6],[35,3],[41,6],[48,3],[52,1],[54,3],[58,4],[65,4],[73,4],[78,4],[87,3],[94,4],[99,6],[108,3],[112,7],[126,2],[132,3],[137,2],[140,4],[149,4],[154,5],[160,1],[164,4],[169,6],[177,4],[182,4],[187,3],[192,4],[197,7]]},"1907":{"position":[[0,1],[2,1],[4,1],[6,4],[17,7],[25,4],[30,6],[40,3],[46,2],[51,6],[58,3],[62,1],[64,3],[68,4],[75,6],[85,4],[90,4],[99,4],[105,3],[112,2],[115,8],[125,4],[130,3],[136,2],[139,6],[139,1],[141,4],[147,4],[153,2],[156,3],[163,3],[169,3],[173,7],[192,3],[197,6],[206,5],[212,4],[217,5],[225,2],[229,1],[234,4],[239,4],[246,4],[254,2],[257,4],[264,4],[270,3],[277,4],[282,4],[287,3],[291,4],[296,2],[303,1],[306,3],[310,4],[317,4],[322,9],[322,4],[327,4],[333,4],[338,10],[338,3],[342,6],[350,2],[353,3],[360,3],[366,3],[370,7],[379,4],[390,3],[395,6],[404,3],[408,7],[428,6],[436,6],[443,7],[452,4]]},"1909":{"position":[[3,7],[17,1],[19,3],[23,4],[69,5],[75,5],[81,7],[119,1],[121,3],[125,4],[133,7],[143,6],[151,6],[158,3],[162,1],[164,3],[168,4],[174,4],[179,4],[188,4],[193,6],[208,7],[216,6]]},"1911":{"position":[[0,7],[30,6],[37,3],[41,1],[43,3],[47,4],[55,7],[85,4],[90,4],[95,4],[100,6],[120,2],[130,2],[133,2],[136,3]]},"1913":{"position":[[5,6]]},"1916":{"position":[[0,7],[8,4],[13,6],[23,3],[29,6],[36,3],[40,1],[42,3],[46,4],[54,4],[59,4],[68,3],[75,4],[80,6],[89,3],[93,7],[107,2],[113,3],[118,4],[126,4],[131,7],[141,3],[145,7],[158,2],[164,4]]},"1918":{"position":[[0,1],[2,1],[4,1],[9,4],[14,4],[25,7],[33,4],[38,6],[48,3],[54,6],[61,3],[65,1],[67,3],[71,4],[79,4],[84,4],[93,2],[97,3],[104,4],[109,4],[115,4],[120,3],[126,4],[131,8],[131,1],[133,6],[141,1],[144,2],[147,3],[154,3],[160,3],[164,7],[183,3],[188,6],[197,5],[203,4],[208,5],[214,2],[218,3],[222,3],[227,3],[231,4],[236,1],[239,3],[246,4],[251,4],[256,2],[260,3],[268,2],[271,3],[278,3],[284,3],[288,7],[307,3],[312,6],[321,3],[325,7],[342,6],[349,3],[354,1]]},"1920":{"position":[[0,1],[2,1],[4,1],[13,7],[21,4],[26,6],[36,3],[42,6],[49,3],[53,1],[55,3],[59,4],[67,4],[72,4],[81,6],[93,3],[97,2],[101,4],[111,6],[119,2],[126,1],[130,3],[137,4],[142,4],[147,6],[155,4],[161,3],[166,2],[169,3],[176,3],[182,3],[186,7],[203,3]]},"1922":{"position":[[0,1],[2,1],[4,1],[12,7],[20,4],[25,6],[35,3],[41,6],[48,3],[52,1],[54,3],[58,4],[65,4],[73,4],[78,4],[87,3],[94,4],[99,6],[108,3],[112,7],[126,2],[132,3],[137,2],[140,4],[149,4],[154,5],[160,1],[164,4],[169,6],[177,4],[182,4],[187,3],[192,4],[197,7]]},"1924":{"position":[[0,1],[2,1],[4,1],[6,4],[17,7],[25,4],[30,6],[40,3],[46,2],[51,6],[58,3],[62,1],[64,3],[68,4],[75,6],[85,4],[90,4],[99,4],[105,3],[112,2],[115,8],[125,4],[130,3],[136,2],[139,6],[139,1],[141,4],[147,4],[153,2],[156,3],[163,3],[169,3],[173,7],[192,3],[197,6],[206,5],[212,4],[217,5],[225,2],[229,1],[234,4],[239,4],[246,4],[254,2],[257,4],[264,4],[270,3],[277,4],[282,4],[287,3],[291,4],[296,2],[303,1],[306,3],[310,4],[317,4],[322,9],[322,4],[327,4],[333,4],[338,10],[338,3],[342,6],[350,2],[353,3],[360,3],[366,3],[370,7],[379,4],[390,3],[395,6],[404,3],[408,7],[428,6],[436,6],[443,7],[452,4]]},"1926":{"position":[[3,7],[17,1],[19,3],[23,4],[69,5],[75,5],[81,7],[119,1],[121,3],[125,4],[133,7],[143,6],[151,6],[158,3],[162,1],[164,3],[168,4],[174,4],[179,4],[188,4],[193,6],[208,7],[216,6]]},"1928":{"position":[[0,7],[30,6],[37,3],[41,1],[43,3],[47,4],[55,7],[85,4],[90,4],[95,4],[100,6],[120,2],[130,2],[133,2],[136,3]]},"1930":{"position":[[5,6]]},"1932":{"position":[[14,1]]},"1934":{"position":[[0,3],[26,2],[30,1],[33,5],[39,4],[44,3],[48,3],[54,4],[60,1],[65,2],[81,1],[95,1],[115,4],[125,4],[133,2],[138,3],[144,2],[148,3],[169,1],[172,1],[188,4],[194,4],[201,2]]},"1937":{"position":[[2,5],[22,1],[35,2],[40,1],[42,3],[53,1],[56,7],[65,5],[71,1],[75,7],[84,6],[91,1],[95,7],[104,6],[111,1],[115,7],[124,3],[128,4],[133,1],[136,3],[140,4],[149,5],[149,3],[153,1],[155,3],[161,4],[178,2],[182,3],[188,1],[196,4],[203,6],[211,4],[216,6],[226,4],[231,12],[231,4],[236,7],[248,4],[253,2],[257,3],[264,1],[276,6],[284,1],[286,2],[289,3],[293,5],[299,7],[307,4],[312,3],[317,1],[319,1],[323,6],[334,5],[340,4],[370,6],[378,5],[384,7],[392,7],[403,1],[408,4],[413,12],[413,4],[418,7],[439,4],[457,6],[465,1],[467,2],[470,3],[474,6],[481,7],[489,4],[494,3],[499,1],[501,3],[505,2],[508,5],[514,3],[518,3],[523,1],[525,1],[529,6],[539,3],[547,6],[554,1]]},"1938":{"position":[[2,5],[33,7],[42,5],[48,1],[52,7],[61,6],[68,1],[72,7],[81,6],[88,1],[92,7],[101,3],[105,4],[110,1],[113,3],[117,4],[126,5],[126,3],[130,1],[132,3],[138,4],[155,2],[159,3],[165,1],[173,4],[180,6],[188,4],[193,6],[203,4],[208,12],[208,4],[213,7],[225,4],[230,2],[234,3],[241,1],[253,6],[261,1],[263,2],[266,3],[270,5],[276,7],[284,4],[289,3],[294,1],[296,1],[300,6],[311,5],[317,1],[335,6],[343,5],[349,7],[357,7],[368,1],[373,4],[378,12],[378,4],[383,7],[404,4],[418,6],[426,1],[428,2],[431,3],[435,6],[442,7],[450,4],[455,3],[460,1],[462,3],[466,2],[469,5],[475,3],[479,3],[484,1],[486,1],[490,6],[500,3],[521,4],[528,7],[551,5],[557,5],[567,6],[574,1],[588,2],[592,1],[595,5],[601,4],[606,3],[610,3],[616,4],[622,1],[627,2],[632,1],[635,6],[642,6],[650,1],[652,3],[658,7],[669,2],[673,2],[678,4],[683,1],[685,3],[689,4],[694,6],[701,6],[708,1],[710,2],[713,2],[716,3],[720,1],[722,2],[725,2],[728,2],[733,1],[735,3],[739,4],[744,6],[751,6],[758,1],[760,2],[763,2],[766,3],[770,1],[772,2],[775,2],[778,2],[782,1],[784,3],[790,7],[799,4],[804,6],[811,6],[818,1],[820,2],[823,2],[826,3],[830,1],[832,2],[835,2],[838,2],[841,4],[848,5],[854,4],[859,1],[861,3]]},"1940":{"position":[[1,7],[10,5],[16,1],[20,7],[29,6],[36,1],[40,7],[49,6],[56,1],[60,7],[69,6],[76,1],[80,7],[89,3],[93,4],[98,1],[104,7],[119,4],[124,15],[124,7],[132,7],[140,3],[144,6],[160,7],[183,5],[190,7],[199,1],[202,4],[208,7],[219,1],[225,3],[229,4],[244,7],[259,6],[266,9],[276,2],[280,2],[283,10],[283,2],[286,7],[296,15],[296,7],[304,7],[313,11],[326,2],[329,7],[329,2],[332,4],[339,2],[342,8],[342,2],[345,5],[353,10],[353,2],[356,7],[381,2],[385,9],[395,7],[405,2],[409,4],[419,1],[424,6],[432,9],[445,4],[450,12],[450,4],[455,7],[476,5],[476,3],[480,1],[482,3],[488,4],[496,2],[500,3],[506,1],[511,6],[519,4],[527,4],[532,12],[532,4],[537,7],[549,2],[553,3],[560,1],[572,6],[585,3],[592,1],[594,1],[598,6],[609,5],[615,2],[635,6],[650,3],[657,1],[659,1],[663,6],[674,4],[679,12],[679,4],[684,7],[696,4],[710,6],[723,3],[730,1],[737,3],[744,1],[746,1],[750,6],[760,3],[781,3],[786,3],[790,1],[794,1],[797,1],[801,1],[806,1],[811,6],[830,1],[835,5],[841,5],[865,6],[880,3],[887,1],[889,1],[893,6],[906,6],[913,1]]}}}],["一个",{"_index":31,"t":{"983":{"position":[[44,2]]},"991":{"position":[[100,2]]},"1064":{"position":[[81,2]]},"1119":{"position":[[16,2],[69,2]]},"1161":{"position":[[24,2]]},"1229":{"position":[[46,2],[53,2]]},"1231":{"position":[[78,2]]},"1265":{"position":[[299,2],[341,2]]},"1270":{"position":[[1203,2]]},"1279":{"position":[[185,2],[451,2]]},"1282":{"position":[[89,2],[99,2],[115,2]]},"1285":{"position":[[9,2]]},"1287":{"position":[[12,2]]},"1302":{"position":[[1,2],[18,2],[40,2]]},"1306":{"position":[[86,2],[96,2]]},"1314":{"position":[[17,2]]},"1361":{"position":[[153,2],[305,2],[337,2]]},"1388":{"position":[[81,2]]},"1449":{"position":[[16,2],[69,2]]},"1501":{"position":[[24,2]]},"1551":{"position":[[46,2],[53,2]]},"1553":{"position":[[78,2]]},"1556":{"position":[[89,2],[99,2],[115,2]]},"1559":{"position":[[9,2]]},"1561":{"position":[[12,2]]},"1576":{"position":[[1,2],[18,2],[40,2]]},"1580":{"position":[[86,2],[96,2]]},"1614":{"position":[[299,2],[341,2]]},"1624":{"position":[[7,2]]},"1626":{"position":[[17,2],[41,2]]},"1630":{"position":[[386,2]]},"1632":{"position":[[4,2]]},"1645":{"position":[[1203,2]]},"1654":{"position":[[185,2],[451,2]]},"1657":{"position":[[9,2]]},"1666":{"position":[[108,2]]},"1679":{"position":[[77,2]]},"1702":{"position":[[11,2]]},"1708":{"position":[[160,2],[237,2]]},"1722":{"position":[[18,2]]},"1728":{"position":[[537,2]]},"1772":{"position":[[1742,2],[1880,2]]},"1775":{"position":[[8,2]]},"1777":{"position":[[172,2]]},"1780":{"position":[[62,2]]},"1782":{"position":[[79,2]]},"1784":{"position":[[415,2],[550,2],[1433,2]]},"1789":{"position":[[13,2]]},"1791":{"position":[[19,2]]},"1793":{"position":[[6,2]]},"1797":{"position":[[8,2],[63,2]]},"1826":{"position":[[18,2]]},"1844":{"position":[[71,2]]},"1850":{"position":[[391,2]]},"1889":{"position":[[32,2]]},"1894":{"position":[[32,2]]}}}],["一些",{"_index":1215,"t":{"1630":{"position":[[462,2]]},"1784":{"position":[[1142,2]]},"1940":{"position":[[630,2]]}}}],["一件",{"_index":983,"t":{"1285":{"position":[[42,2]]},"1559":{"position":[[42,2]]}}}],["一再",{"_index":342,"t":{"991":{"position":[[62,2]]}}}],["一定",{"_index":280,"t":{"987":{"position":[[605,2]]},"1702":{"position":[[86,2]]}}}],["一旦",{"_index":1503,"t":{"1859":{"position":[[176,2]]}}}],["一条",{"_index":1482,"t":{"1850":{"position":[[313,2]]}}}],["一样",{"_index":113,"t":{"985":{"position":[[63,2]]},"1267":{"position":[[95,2]]},"1616":{"position":[[95,2]]},"1626":{"position":[[10,2]]},"1838":{"position":[[64,2]]}}}],["一次",{"_index":572,"t":{"1089":{"position":[[209,2]]},"1367":{"position":[[475,2]]},"1373":{"position":[[34,2],[389,2]]},"1383":{"position":[[100,2]]},"1431":{"position":[[25,2]]}}}],["一段",{"_index":207,"t":{"987":{"position":[[291,2]]}}}],["一段时间",{"_index":1533,"t":{"1937":{"position":[[356,4]]},"1938":{"position":[[330,4]]}}}],["一生",{"_index":294,"t":{"989":{"position":[[30,2]]}}}],["一种",{"_index":196,"t":{"987":{"position":[[245,2]]},"1279":{"position":[[40,2]]},"1338":{"position":[[8,2]]},"1367":{"position":[[44,2]]},"1626":{"position":[[0,2],[28,2]]},"1654":{"position":[[40,2]]},"1677":{"position":[[11,2]]},"1795":{"position":[[59,2]]},"1800":{"position":[[26,2]]}}}],["一系列",{"_index":1210,"t":{"1630":{"position":[[196,3]]},"1702":{"position":[[52,3]]}}}],["一般",{"_index":1155,"t":{"1431":{"position":[[69,2]]},"1433":{"position":[[193,2]]},"1911":{"position":[[113,2]]},"1928":{"position":[[113,2]]}}}],["一行",{"_index":1497,"t":{"1859":{"position":[[74,2]]}}}],["一部分",{"_index":1512,"t":{"1891":{"position":[[14,3]]},"1896":{"position":[[14,3]]}}}],["一面",{"_index":326,"t":{"991":{"position":[[5,2]]}}}],["一项",{"_index":827,"t":{"1229":{"position":[[70,2]]},"1282":{"position":[[126,2]]},"1292":{"position":[[754,2]]},"1551":{"position":[[70,2]]},"1556":{"position":[[126,2]]},"1566":{"position":[[754,2]]}}}],["三个",{"_index":999,"t":{"1290":{"position":[[531,2]]},"1292":{"position":[[739,2]]},"1564":{"position":[[531,2]]},"1566":{"position":[[739,2]]}}}],["上次",{"_index":1166,"t":{"1431":{"position":[[384,2]]}}}],["上面",{"_index":882,"t":{"1253":{"position":[[6,2]]},"1602":{"position":[[6,2]]}}}],["下载",{"_index":1036,"t":{"1309":{"position":[[406,2],[484,2],[496,2]]}}}],["下降",{"_index":1186,"t":{"1444":{"position":[[118,2]]}}}],["下面",{"_index":1146,"t":{"1429":{"position":[[50,2]]}}}],["不仅",{"_index":264,"t":{"987":{"position":[[535,2]]}}}],["不会",{"_index":480,"t":{"1064":{"position":[[90,2]]},"1092":{"position":[[129,2]]},"1094":{"position":[[257,2]]},"1273":{"position":[[66,2]]},"1285":{"position":[[13,2]]},"1388":{"position":[[90,2]]},"1559":{"position":[[13,2]]},"1648":{"position":[[66,2]]}}}],["不免",{"_index":300,"t":{"989":{"position":[[53,2]]}}}],["不再",{"_index":782,"t":{"1167":{"position":[[1201,2]]},"1477":{"position":[[1201,2]]},"1911":{"position":[[63,2]]},"1928":{"position":[[63,2]]}}}],["不到",{"_index":1196,"t":{"1619":{"position":[[7,2]]}}}],["不同",{"_index":362,"t":{"991":{"position":[[129,2]]},"1270":{"position":[[1300,2],[1319,2]]},"1279":{"position":[[422,2]]},"1444":{"position":[[17,2],[26,2]]},"1645":{"position":[[1300,2],[1319,2]]},"1654":{"position":[[422,2]]},"1853":{"position":[[77,2]]}}}],["不好",{"_index":1006,"t":{"1299":{"position":[[3,2]]},"1573":{"position":[[3,2]]}}}],["不如",{"_index":1260,"t":{"1691":{"position":[[39,2]]}}}],["不宜",{"_index":1222,"t":{"1632":{"position":[[79,2]]}}}],["不必要",{"_index":864,"t":{"1231":{"position":[[209,3]]},"1304":{"position":[[28,3]]},"1553":{"position":[[209,3]]},"1578":{"position":[[28,3]]}}}],["不断",{"_index":200,"t":{"987":{"position":[[257,2]]}}}],["不是",{"_index":737,"t":{"1149":{"position":[[13,2]]},"1229":{"position":[[151,2]]},"1231":{"position":[[18,2]]},"1359":{"position":[[21,2]]},"1427":{"position":[[13,2]]},"1551":{"position":[[151,2]]},"1553":{"position":[[18,2]]},"1628":{"position":[[27,2]]},"1797":{"position":[[61,2]]},"1817":{"position":[[289,2]]},"1891":{"position":[[4,2]]},"1896":{"position":[[4,2]]}}}],["不管不顾",{"_index":1525,"t":{"1932":{"position":[[32,4]]}}}],["不能",{"_index":1258,"t":{"1687":{"position":[[12,2]]},"1695":{"position":[[21,2]]},"1697":{"position":[[85,2]]},"1728":{"position":[[560,2],[589,2]]},"1795":{"position":[[70,2],[229,2]]}}}],["不要",{"_index":865,"t":{"1231":{"position":[[251,2]]},"1267":{"position":[[66,2]]},"1553":{"position":[[251,2]]},"1616":{"position":[[66,2]]}}}],["不足",{"_index":12,"t":{"981":{"position":[[30,2]]},"1682":{"position":[[486,2]]}}}],["不过",{"_index":314,"t":{"989":{"position":[[112,2]]}}}],["不适",{"_index":1518,"t":{"1911":{"position":[[109,2]]},"1928":{"position":[[109,2]]}}}],["专业",{"_index":10,"t":{"981":{"position":[[24,2]]}}}],["专属",{"_index":608,"t":{"1119":{"position":[[18,2]]},"1449":{"position":[[18,2]]}}}],["专注",{"_index":1005,"t":{"1295":{"position":[[5,2]]},"1306":{"position":[[28,2]]},"1569":{"position":[[5,2]]},"1580":{"position":[[28,2]]}}}],["专门",{"_index":957,"t":{"1279":{"position":[[95,2]]},"1654":{"position":[[95,2]]},"1889":{"position":[[38,2]]},"1894":{"position":[[38,2]]}}}],["业务",{"_index":650,"t":{"1131":{"position":[[69,2],[590,2],[1112,2],[1387,2]]},"1409":{"position":[[69,2],[590,2],[1112,2],[1387,2]]},"1739":{"position":[[116,2]]}}}],["丢弃",{"_index":1375,"t":{"1784":{"position":[[820,2]]}}}],["两个",{"_index":1279,"t":{"1704":{"position":[[16,2]]}}}],["两次",{"_index":561,"t":{"1087":{"position":[[108,2]]},"1092":{"position":[[125,2]]}}}],["两百年",{"_index":189,"t":{"987":{"position":[[224,3]]}}}],["两种",{"_index":1208,"t":{"1622":{"position":[[14,2]]}}}],["两者",{"_index":240,"t":{"987":{"position":[[442,2]]},"1229":{"position":[[378,2]]},"1551":{"position":[[378,2]]}}}],["两者之间",{"_index":64,"t":{"983":{"position":[[144,4],[213,4]]}}}],["严格",{"_index":1431,"t":{"1819":{"position":[[236,2]]}}}],["严重",{"_index":172,"t":{"987":{"position":[[171,2]]}}}],["个人",{"_index":37,"t":{"983":{"position":[[65,2]]},"987":{"position":[[571,2]]}}}],["个体",{"_index":345,"t":{"991":{"position":[[69,2],[245,2]]}}}],["中",{"_index":85,"t":{"983":{"position":[[206,1]]},"985":{"position":[[38,1]]},"987":{"position":[[316,1]]},"991":{"position":[[48,1],[262,1]]},"1004":{"position":[[10,1]]},"1034":{"position":[[4,1]]},"1041":{"position":[[4,1]]},"1055":{"position":[[5,1]]},"1079":{"position":[[69,1]]},"1082":{"position":[[11,1]]},"1127":{"position":[[8,1]]},"1139":{"position":[[55,1]]},"1141":{"position":[[51,1]]},"1143":{"position":[[44,1]]},"1149":{"position":[[80,1]]},"1187":{"position":[[893,1]]},"1207":{"position":[[45,1]]},"1221":{"position":[[74,1]]},"1231":{"position":[[165,1]]},"1234":{"position":[[41,1],[109,1]]},"1267":{"position":[[20,1]]},"1282":{"position":[[53,1],[137,1]]},"1285":{"position":[[91,1]]},"1290":{"position":[[551,1]]},"1306":{"position":[[22,1]]},"1335":{"position":[[197,1]]},"1355":{"position":[[9,1]]},"1373":{"position":[[30,1]]},"1377":{"position":[[347,1]]},"1403":{"position":[[69,1]]},"1405":{"position":[[8,1]]},"1417":{"position":[[55,1]]},"1419":{"position":[[51,1]]},"1421":{"position":[[44,1]]},"1427":{"position":[[80,1]]},"1429":{"position":[[22,1]]},"1444":{"position":[[93,1],[147,1]]},"1509":{"position":[[893,1]]},"1529":{"position":[[45,1]]},"1543":{"position":[[74,1]]},"1553":{"position":[[165,1]]},"1556":{"position":[[53,1],[137,1]]},"1559":{"position":[[91,1]]},"1564":{"position":[[551,1]]},"1580":{"position":[[22,1]]},"1583":{"position":[[41,1],[109,1]]},"1616":{"position":[[20,1]]},"1622":{"position":[[5,1]]},"1626":{"position":[[38,1],[56,1]]},"1628":{"position":[[5,1]]},"1630":{"position":[[18,1]]},"1636":{"position":[[5,1]]},"1702":{"position":[[9,1]]},"1704":{"position":[[11,1]]},"1722":{"position":[[17,1]]},"1728":{"position":[[533,1],[571,1]]},"1732":{"position":[[239,1]]},"1736":{"position":[[30,1]]},"1739":{"position":[[9,1],[120,1]]},"1746":{"position":[[92,1]]},"1770":{"position":[[91,1]]},"1772":{"position":[[1040,1],[1067,1],[1922,1]]},"1777":{"position":[[149,1]]},"1782":{"position":[[62,1]]},"1784":{"position":[[80,1],[389,1],[461,1],[522,1],[608,1],[1082,1],[1120,1]]},"1791":{"position":[[31,1]]},"1795":{"position":[[246,1]]},"1797":{"position":[[30,1]]},"1805":{"position":[[17,1]]},"1810":{"position":[[8,1]]},"1817":{"position":[[261,1]]},"1821":{"position":[[26,1]]},"1826":{"position":[[84,1]]},"1853":{"position":[[29,1]]},"1855":{"position":[[28,1]]},"1859":{"position":[[28,1],[71,1],[143,1]]},"1870":{"position":[[7,1]]}}}],["中常",{"_index":1232,"t":{"1640":{"position":[[10,2]]}}}],["中断",{"_index":1534,"t":{"1940":{"position":[[373,2]]}}}],["中间",{"_index":1341,"t":{"1772":{"position":[[1744,2]]}}}],["中间件",{"_index":685,"t":{"1133":{"position":[[50,3]]},"1253":{"position":[[81,3],[90,3]]},"1267":{"position":[[44,3]]},"1411":{"position":[[50,3]]},"1602":{"position":[[81,3],[90,3]]},"1616":{"position":[[44,3]]},"1808":{"position":[[543,3]]},"1810":{"position":[[169,3]]}}}],["丰富",{"_index":1249,"t":{"1679":{"position":[[32,2]]},"1736":{"position":[[13,2]]},"1889":{"position":[[85,2]]},"1894":{"position":[[85,2]]}}}],["串行化",{"_index":723,"t":{"1145":{"position":[[1927,3]]},"1423":{"position":[[1927,3]]}}}],["为了",{"_index":68,"t":{"983":{"position":[[155,2]]},"1784":{"position":[[314,2]]}}}],["为啥",{"_index":940,"t":{"1277":{"position":[[3,2]]},"1652":{"position":[[3,2]]}}}],["主",{"_index":671,"t":{"1131":{"position":[[951,1],[1629,1]]},"1409":{"position":[[951,1],[1629,1]]},"1440":{"position":[[228,1]]}}}],["主动",{"_index":949,"t":{"1277":{"position":[[115,2]]},"1652":{"position":[[115,2]]}}}],["主机",{"_index":1406,"t":{"1800":{"position":[[49,2]]},"1821":{"position":[[151,2]]}}}],["主线",{"_index":938,"t":{"1275":{"position":[[416,2],[510,2]]},"1361":{"position":[[380,2]]},"1367":{"position":[[528,2]]},"1381":{"position":[[380,2],[399,2]]},"1650":{"position":[[416,2],[510,2]]}}}],["主要",{"_index":823,"t":{"1227":{"position":[[49,2]]},"1234":{"position":[[115,2]]},"1267":{"position":[[21,2]]},"1282":{"position":[[143,2]]},"1355":{"position":[[29,2]]},"1357":{"position":[[37,2]]},"1383":{"position":[[146,2]]},"1429":{"position":[[59,2]]},"1549":{"position":[[49,2]]},"1556":{"position":[[143,2]]},"1583":{"position":[[115,2]]},"1616":{"position":[[21,2]]},"1704":{"position":[[13,2]]}}}],["举例",{"_index":927,"t":{"1273":{"position":[[233,2]]},"1648":{"position":[[233,2]]}}}],["之一",{"_index":251,"t":{"987":{"position":[[484,2]]},"1628":{"position":[[22,2]]}}}],["之上",{"_index":187,"t":{"987":{"position":[[219,2]]}}}],["之前",{"_index":437,"t":{"1034":{"position":[[18,2]]},"1139":{"position":[[47,2]]},"1345":{"position":[[190,2]]},"1417":{"position":[[47,2]]}}}],["之后",{"_index":1466,"t":{"1838":{"position":[[84,2]]},"1853":{"position":[[192,2]]}}}],["之间",{"_index":861,"t":{"1231":{"position":[[109,2]]},"1292":{"position":[[764,2]]},"1355":{"position":[[24,2]]},"1357":{"position":[[32,2]]},"1383":{"position":[[160,2]]},"1553":{"position":[[109,2]]},"1566":{"position":[[764,2]]}}}],["书",{"_index":325,"t":{"991":{"position":[[2,1]]}}}],["了解",{"_index":859,"t":{"1231":{"position":[[93,2]]},"1553":{"position":[[93,2]]}}}],["事",{"_index":984,"t":{"1285":{"position":[[44,1]]},"1559":{"position":[[44,1]]},"1630":{"position":[[464,1]]}}}],["事件",{"_index":509,"t":{"1069":{"position":[[297,2],[336,2],[1190,2],[1273,2]]},"1071":{"position":[[755,2]]},"1073":{"position":[[344,2]]},"1077":{"position":[[76,2]]},"1105":{"position":[[137,2],[179,2],[266,2]]},"1109":{"position":[[50,2]]},"1121":{"position":[[0,2],[50,2]]},"1123":{"position":[[150,2]]},"1155":{"position":[[95,2],[205,2],[569,2],[586,2],[605,2]]},"1157":{"position":[[188,2]]},"1167":{"position":[[1218,2],[1237,2]]},"1371":{"position":[[39,2],[439,2]]},"1383":{"position":[[82,2]]},"1393":{"position":[[297,2],[336,2],[1190,2],[1273,2]]},"1395":{"position":[[755,2]]},"1397":{"position":[[344,2]]},"1401":{"position":[[76,2]]},"1451":{"position":[[0,2],[50,2]]},"1453":{"position":[[150,2]]},"1462":{"position":[[137,2],[179,2],[266,2]]},"1466":{"position":[[50,2]]},"1477":{"position":[[1218,2],[1237,2]]},"1495":{"position":[[95,2],[205,2],[569,2],[586,2],[605,2]]},"1497":{"position":[[188,2]]},"1859":{"position":[[16,2],[30,2],[146,2]]}}}],["事务管理",{"_index":961,"t":{"1279":{"position":[[155,4],[305,4]]},"1654":{"position":[[155,4],[305,4]]}}}],["事情",{"_index":1007,"t":{"1299":{"position":[[14,2]]},"1573":{"position":[[14,2]]}}}],["二者",{"_index":1137,"t":{"1383":{"position":[[237,2]]}}}],["二进制",{"_index":1331,"t":{"1760":{"position":[[54,3]]},"1793":{"position":[[37,3]]},"1870":{"position":[[74,3]]}}}],["互不",{"_index":528,"t":{"1079":{"position":[[71,2]]},"1403":{"position":[[71,2]]}}}],["交互",{"_index":462,"t":{"1061":{"position":[[70,2]]},"1131":{"position":[[13,2],[198,2]]},"1137":{"position":[[5,2]]},"1279":{"position":[[409,2]]},"1312":{"position":[[39,2]]},"1355":{"position":[[27,2]]},"1385":{"position":[[70,2]]},"1409":{"position":[[13,2],[198,2]]},"1415":{"position":[[5,2]]},"1654":{"position":[[409,2]]},"1784":{"position":[[404,2],[657,2],[750,2],[880,2]]}}}],["交互式",{"_index":1352,"t":{"1777":{"position":[[174,3]]},"1780":{"position":[[64,3]]},"1784":{"position":[[967,3],[1063,3]]}}}],["产物",{"_index":104,"t":{"985":{"position":[[29,2]]}}}],["产生",{"_index":195,"t":{"987":{"position":[[242,2],[332,2]]}}}],["享有",{"_index":78,"t":{"983":{"position":[[182,2]]}}}],["亮点",{"_index":932,"t":{"1275":{"position":[[4,2]]},"1650":{"position":[[4,2]]}}}],["人人",{"_index":76,"t":{"983":{"position":[[179,2]]}}}],["人们",{"_index":183,"t":{"987":{"position":[[207,2],[565,2]]}}}],["人性",{"_index":177,"t":{"987":{"position":[[186,2]]}}}],["人生",{"_index":308,"t":{"989":{"position":[[92,2]]}}}],["人类",{"_index":1,"t":{"981":{"position":[[1,2],[39,2]]},"985":{"position":[[34,2],[58,2],[90,2]]},"987":{"position":[[92,2]]},"991":{"position":[[207,2]]}}}],["仅",{"_index":425,"t":{"1022":{"position":[[6,1]]},"1089":{"position":[[204,1]]},"1261":{"position":[[229,1]]},"1335":{"position":[[87,1]]},"1444":{"position":[[74,1]]},"1610":{"position":[[229,1]]},"1728":{"position":[[158,1],[173,1],[446,1],[470,1]]}}}],["仅限",{"_index":1405,"t":{"1800":{"position":[[45,2]]},"1821":{"position":[[180,2]]},"1909":{"position":[[66,2]]},"1926":{"position":[[66,2]]}}}],["仅限于",{"_index":376,"t":{"991":{"position":[[186,3]]}}}],["介绍",{"_index":1147,"t":{"1429":{"position":[[56,2]]},"1739":{"position":[[160,2]]}}}],["仍然",{"_index":930,"t":{"1273":{"position":[[632,2]]},"1648":{"position":[[632,2]]}}}],["从而",{"_index":57,"t":{"983":{"position":[[117,2]]},"999":{"position":[[23,2]]},"1279":{"position":[[65,2]]},"1654":{"position":[[65,2]]}}}],["他人",{"_index":365,"t":{"991":{"position":[[141,2]]}}}],["他们",{"_index":132,"t":{"987":{"position":[[21,2]]},"991":{"position":[[96,2],[108,2],[125,2],[135,2]]}}}],["付出",{"_index":391,"t":{"991":{"position":[[257,2]]}}}],["代价",{"_index":491,"t":{"1064":{"position":[[132,2]]},"1388":{"position":[[132,2]]}}}],["代替",{"_index":501,"t":{"1069":{"position":[[89,2]]},"1155":{"position":[[452,2]]},"1175":{"position":[[70,2]]},"1375":{"position":[[34,2]]},"1393":{"position":[[89,2]]},"1485":{"position":[[70,2]]},"1495":{"position":[[452,2]]}}}],["代理",{"_index":1023,"t":{"1309":{"position":[[91,2],[458,2],[466,2],[480,2]]},"1634":{"position":[[215,2]]},"1821":{"position":[[58,2]]}}}],["代码",{"_index":536,"t":{"1079":{"position":[[134,2]]},"1111":{"position":[[180,2]]},"1113":{"position":[[76,2]]},"1125":{"position":[[299,2]]},"1127":{"position":[[44,2]]},"1129":{"position":[[19,2]]},"1131":{"position":[[1776,2]]},"1133":{"position":[[14,2]]},"1139":{"position":[[53,2]]},"1149":{"position":[[45,2]]},"1161":{"position":[[496,2]]},"1169":{"position":[[486,2]]},"1179":{"position":[[595,2]]},"1191":{"position":[[1411,2]]},"1203":{"position":[[1001,2]]},"1225":{"position":[[997,2]]},"1229":{"position":[[157,2]]},"1231":{"position":[[148,2]]},"1236":{"position":[[14,2],[34,2]]},"1263":{"position":[[25,2]]},"1267":{"position":[[107,2],[115,2]]},"1287":{"position":[[0,2]]},"1306":{"position":[[13,2]]},"1335":{"position":[[195,2]]},"1359":{"position":[[53,2]]},"1363":{"position":[[562,2]]},"1403":{"position":[[134,2]]},"1405":{"position":[[44,2]]},"1407":{"position":[[19,2]]},"1409":{"position":[[1776,2]]},"1411":{"position":[[14,2]]},"1417":{"position":[[53,2]]},"1427":{"position":[[45,2]]},"1455":{"position":[[299,2]]},"1468":{"position":[[180,2]]},"1470":{"position":[[76,2]]},"1479":{"position":[[486,2]]},"1489":{"position":[[595,2]]},"1501":{"position":[[496,2]]},"1513":{"position":[[1411,2]]},"1525":{"position":[[1001,2]]},"1547":{"position":[[997,2]]},"1551":{"position":[[157,2]]},"1553":{"position":[[148,2]]},"1561":{"position":[[0,2]]},"1580":{"position":[[13,2]]},"1585":{"position":[[14,2],[34,2]]},"1612":{"position":[[25,2]]},"1616":{"position":[[107,2],[115,2]]},"1687":{"position":[[45,2]]},"1695":{"position":[[47,2]]},"1697":{"position":[[190,2]]},"1717":{"position":[[0,2]]},"1823":{"position":[[189,2]]},"1846":{"position":[[25,2]]},"1868":{"position":[[16,2]]},"1913":{"position":[[12,2]]},"1930":{"position":[[12,2]]}}}],["代码生成",{"_index":1330,"t":{"1760":{"position":[[37,4]]}}}],["代表",{"_index":1044,"t":{"1314":{"position":[[19,2]]},"1708":{"position":[[178,2],[255,2]]}}}],["令人",{"_index":301,"t":{"989":{"position":[[55,2]]}}}],["以上",{"_index":1292,"t":{"1717":{"position":[[32,2]]}}}],["以下",{"_index":640,"t":{"1129":{"position":[[0,2]]},"1227":{"position":[[46,2]]},"1355":{"position":[[33,2]]},"1407":{"position":[[0,2]]},"1549":{"position":[[46,2]]},"1628":{"position":[[40,2]]}}}],["以及",{"_index":1362,"t":{"1784":{"position":[[437,2]]}}}],["价值",{"_index":171,"t":{"987":{"position":[[168,2]]}}}],["价值观",{"_index":63,"t":{"983":{"position":[[139,3]]}}}],["价格",{"_index":167,"t":{"987":{"position":[[161,2]]}}}],["任何",{"_index":1311,"t":{"1728":{"position":[[573,2]]}}}],["任务",{"_index":1054,"t":{"1335":{"position":[[213,2]]},"1361":{"position":[[102,2],[212,2]]},"1365":{"position":[[0,2],[29,2],[44,2]]},"1367":{"position":[[409,2],[429,2]]},"1379":{"position":[[47,2]]},"1381":{"position":[[136,2]]},"1383":{"position":[[141,2]]},"1630":{"position":[[12,2],[36,2]]},"1940":{"position":[[632,2],[778,2]]}}}],["任意",{"_index":1228,"t":{"1636":{"position":[[25,2]]}}}],["仿佛",{"_index":220,"t":{"987":{"position":[[335,2]]}}}],["优于",{"_index":848,"t":{"1231":{"position":[[2,2]]},"1306":{"position":[[46,2]]},"1553":{"position":[[2,2]]},"1580":{"position":[[46,2]]}}}],["优先",{"_index":849,"t":{"1231":{"position":[[9,2]]},"1383":{"position":[[309,2]]},"1553":{"position":[[9,2]]}}}],["优势",{"_index":1262,"t":{"1697":{"position":[[7,2]]},"1800":{"position":[[100,2]]}}}],["优化",{"_index":735,"t":{"1145":{"position":[[2036,2],[7613,2]]},"1164":{"position":[[14,2]]},"1217":{"position":[[151,2]]},"1383":{"position":[[367,2]]},"1423":{"position":[[2036,2],[7613,2]]},"1474":{"position":[[14,2]]},"1539":{"position":[[151,2]]},"1817":{"position":[[220,2]]},"1830":{"position":[[14,2]]},"1868":{"position":[[7,2]]}}}],["优点",{"_index":649,"t":{"1131":{"position":[[65,2]]},"1409":{"position":[[65,2]]},"1682":{"position":[[420,2]]},"1687":{"position":[[0,2]]},"1691":{"position":[[0,2]]},"1695":{"position":[[0,2]]}}}],["优缺点",{"_index":1251,"t":{"1682":{"position":[[414,3]]}}}],["优越",{"_index":124,"t":{"985":{"position":[[115,2]]}}}],["优雅",{"_index":732,"t":{"1145":{"position":[[2021,2]]},"1267":{"position":[[56,2]]},"1275":{"position":[[1116,2]]},"1277":{"position":[[1458,2]]},"1279":{"position":[[2428,2]]},"1423":{"position":[[2021,2]]},"1616":{"position":[[56,2]]},"1650":{"position":[[1116,2]]},"1652":{"position":[[1458,2]]},"1654":{"position":[[2428,2]]},"1803":{"position":[[826,2]]},"1808":{"position":[[1004,2]]}}}],["会",{"_index":81,"t":{"983":{"position":[[194,1]]},"987":{"position":[[58,1],[256,1],[298,1]]},"989":{"position":[[136,1]]},"1084":{"position":[[36,1],[79,1]]},"1092":{"position":[[146,1]]},"1094":{"position":[[177,1]]},"1098":{"position":[[29,1],[63,1]]},"1265":{"position":[[637,1]]},"1273":{"position":[[31,1]]},"1277":{"position":[[1894,1]]},"1302":{"position":[[22,1]]},"1304":{"position":[[25,1]]},"1343":{"position":[[503,1]]},"1363":{"position":[[604,1]]},"1381":{"position":[[437,1]]},"1431":{"position":[[56,1],[171,1]]},"1576":{"position":[[22,1]]},"1578":{"position":[[25,1]]},"1614":{"position":[[637,1]]},"1648":{"position":[[31,1]]},"1652":{"position":[[1894,1]]},"1777":{"position":[[169,1]]},"1784":{"position":[[374,1]]},"1795":{"position":[[202,1]]},"1838":{"position":[[56,1],[77,1]]},"1850":{"position":[[395,1]]},"1853":{"position":[[352,1],[375,1]]},"1938":{"position":[[543,1]]}}}],["伟大",{"_index":349,"t":{"991":{"position":[[77,2],[154,2],[182,2],[232,2],[238,2]]}}}],["传",{"_index":1467,"t":{"1840":{"position":[[8,1]]}}}],["传播",{"_index":117,"t":{"985":{"position":[[73,2]]}}}],["传统",{"_index":489,"t":{"1064":{"position":[[118,2]]},"1388":{"position":[[118,2]]}}}],["传输",{"_index":1315,"t":{"1739":{"position":[[60,2]]},"1821":{"position":[[171,2]]}}}],["传递",{"_index":1051,"t":{"1335":{"position":[[139,2]]},"1383":{"position":[[21,2]]},"1630":{"position":[[187,2],[384,2]]},"1632":{"position":[[2,2]]},"1640":{"position":[[16,2]]},"1708":{"position":[[133,2]]},"1838":{"position":[[66,2]]}}}],["伪",{"_index":1377,"t":{"1784":{"position":[[900,1]]}}}],["似乎",{"_index":255,"t":{"987":{"position":[[499,2]]}}}],["但是",{"_index":1197,"t":{"1619":{"position":[[12,2]]},"1938":{"position":[[18,2]]}}}],["位置",{"_index":767,"t":{"1157":{"position":[[22,2]]},"1497":{"position":[[22,2]]},"1844":{"position":[[180,2]]},"1846":{"position":[[14,2]]},"1859":{"position":[[35,2]]}}}],["低",{"_index":503,"t":{"1069":{"position":[[101,1]]},"1155":{"position":[[464,1]]},"1175":{"position":[[82,1]]},"1349":{"position":[[10,1],[479,1]]},"1393":{"position":[[101,1]]},"1485":{"position":[[82,1]]},"1495":{"position":[[464,1]]},"1682":{"position":[[456,1]]}}}],["低层",{"_index":846,"t":{"1229":{"position":[[373,2]]},"1551":{"position":[[373,2]]}}}],["低级",{"_index":1517,"t":{"1911":{"position":[[11,2]]},"1928":{"position":[[11,2]]}}}],["体",{"_index":680,"t":{"1131":{"position":[[1770,1]]},"1270":{"position":[[1314,1]]},"1275":{"position":[[187,1]]},"1277":{"position":[[275,1],[377,1]]},"1279":{"position":[[455,1]]},"1285":{"position":[[36,1]]},"1290":{"position":[[550,1]]},"1302":{"position":[[5,1],[38,1]]},"1306":{"position":[[33,1],[90,1]]},"1409":{"position":[[1770,1]]},"1559":{"position":[[36,1]]},"1564":{"position":[[550,1]]},"1576":{"position":[[5,1],[38,1]]},"1580":{"position":[[33,1],[90,1]]},"1626":{"position":[[37,1]]},"1645":{"position":[[1314,1]]},"1650":{"position":[[187,1]]},"1652":{"position":[[275,1],[377,1]]},"1654":{"position":[[455,1]]},"1702":{"position":[[119,1],[218,1],[238,1]]},"1713":{"position":[[2,1]]},"1722":{"position":[[34,1]]},"1732":{"position":[[238,1]]},"1772":{"position":[[947,1],[1122,1]]}}}],["体系",{"_index":109,"t":{"985":{"position":[[47,2]]}}}],["作为",{"_index":476,"t":{"1064":{"position":[[58,2]]},"1357":{"position":[[19,2]]},"1388":{"position":[[58,2]]},"1719":{"position":[[44,2]]}}}],["作用",{"_index":1496,"t":{"1859":{"position":[[66,2],[95,2],[135,2]]}}}],["使得",{"_index":958,"t":{"1279":{"position":[[123,2]]},"1654":{"position":[[123,2]]},"1702":{"position":[[60,2]]},"1775":{"position":[[64,2]]}}}],["使用",{"_index":403,"t":{"999":{"position":[[2,2]]},"1018":{"position":[[8,2]]},"1066":{"position":[[97,2]]},"1069":{"position":[[83,2]]},"1077":{"position":[[0,2]]},"1096":{"position":[[5,2],[15,2]]},"1098":{"position":[[121,2]]},"1131":{"position":[[27,2],[1231,2]]},"1137":{"position":[[37,2]]},"1145":{"position":[[7607,2]]},"1155":{"position":[[49,2],[296,2],[446,2]]},"1167":{"position":[[85,2]]},"1175":{"position":[[64,2],[329,2],[334,2]]},"1187":{"position":[[894,2]]},"1197":{"position":[[253,2]]},"1217":{"position":[[190,2],[199,2]]},"1221":{"position":[[79,2]]},"1229":{"position":[[297,2]]},"1231":{"position":[[11,2]]},"1239":{"position":[[195,2],[338,2]]},"1241":{"position":[[120,2],[155,2]]},"1244":{"position":[[208,2],[260,2]]},"1246":{"position":[[3,2]]},"1265":{"position":[[225,2]]},"1267":{"position":[[23,2]]},"1270":{"position":[[0,2],[984,2]]},"1309":{"position":[[227,2],[354,2]]},"1338":{"position":[[87,2]]},"1349":{"position":[[14,2]]},"1353":{"position":[[331,2]]},"1363":{"position":[[679,2]]},"1369":{"position":[[26,2]]},"1375":{"position":[[12,2]]},"1377":{"position":[[355,2]]},"1383":{"position":[[166,2],[213,2],[243,2],[351,2]]},"1390":{"position":[[97,2]]},"1393":{"position":[[83,2]]},"1401":{"position":[[0,2]]},"1409":{"position":[[27,2],[1231,2]]},"1415":{"position":[[37,2]]},"1423":{"position":[[7607,2]]},"1431":{"position":[[36,2],[108,2],[215,2]]},"1444":{"position":[[54,2],[96,2],[207,2]]},"1477":{"position":[[85,2]]},"1485":{"position":[[64,2],[329,2],[334,2]]},"1495":{"position":[[49,2],[296,2],[446,2]]},"1509":{"position":[[894,2]]},"1519":{"position":[[253,2]]},"1539":{"position":[[190,2],[199,2]]},"1543":{"position":[[79,2]]},"1551":{"position":[[297,2]]},"1553":{"position":[[11,2]]},"1588":{"position":[[195,2],[338,2]]},"1590":{"position":[[120,2],[155,2]]},"1593":{"position":[[208,2],[260,2]]},"1595":{"position":[[3,2]]},"1614":{"position":[[225,2]]},"1616":{"position":[[23,2]]},"1624":{"position":[[0,2]]},"1628":{"position":[[36,2],[43,2]]},"1630":{"position":[[222,2],[400,2]]},"1645":{"position":[[0,2],[984,2]]},"1662":{"position":[[39,2]]},"1675":{"position":[[2,2],[157,2]]},"1719":{"position":[[8,2],[18,2]]},"1763":{"position":[[82,2]]},"1770":{"position":[[15,2],[26,2],[48,2]]},"1777":{"position":[[0,2]]},"1784":{"position":[[327,2],[993,2],[1061,2]]},"1787":{"position":[[14,2]]},"1789":{"position":[[57,2]]},"1793":{"position":[[18,2]]},"1795":{"position":[[97,2]]},"1797":{"position":[[124,2]]},"1810":{"position":[[9,2]]},"1817":{"position":[[224,2],[262,2],[267,2],[341,2]]},"1819":{"position":[[29,2],[91,2],[182,2],[251,2]]},"1823":{"position":[[37,2],[99,2]]},"1828":{"position":[[117,2]]},"1850":{"position":[[320,2]]},"1853":{"position":[[2,2],[59,2]]},"1855":{"position":[[2,2],[57,2]]},"1861":{"position":[[2,2]]},"1863":{"position":[[15,2]]},"1877":{"position":[[11,2]]},"1901":{"position":[[6,2]]},"1909":{"position":[[113,2]]},"1911":{"position":[[27,2]]},"1918":{"position":[[6,2]]},"1926":{"position":[[113,2]]},"1928":{"position":[[27,2]]},"1934":{"position":[[186,2]]},"1940":{"position":[[157,2]]}}}],["使用率",{"_index":1435,"t":{"1819":{"position":[[329,3]]}}}],["例",{"_index":1134,"t":{"1383":{"position":[[104,1]]}}}],["例如",{"_index":942,"t":{"1277":{"position":[[35,2]]},"1279":{"position":[[2973,2]]},"1335":{"position":[[208,2]]},"1371":{"position":[[29,2]]},"1373":{"position":[[37,2]]},"1379":{"position":[[40,2]]},"1652":{"position":[[35,2]]},"1654":{"position":[[2973,2]]},"1730":{"position":[[10,2]]},"1784":{"position":[[661,2],[790,2],[988,2]]},"1787":{"position":[[35,2]]},"1859":{"position":[[152,2]]}}}],["例子",{"_index":992,"t":{"1290":{"position":[[9,2]]},"1299":{"position":[[6,2],[120,2]]},"1564":{"position":[[9,2]]},"1573":{"position":[[6,2],[120,2]]}}}],["依次",{"_index":574,"t":{"1092":{"position":[[147,2]]}}}],["依然",{"_index":953,"t":{"1277":{"position":[[186,2]]},"1652":{"position":[[186,2]]}}}],["依赖",{"_index":486,"t":{"1064":{"position":[[109,2]]},"1089":{"position":[[109,2],[149,2]]},"1131":{"position":[[20,2],[54,2],[128,2],[139,2],[157,2],[1391,2]]},"1172":{"position":[[4,2]]},"1175":{"position":[[4,2],[9,2],[193,2],[322,2]]},"1177":{"position":[[4,2]]},"1229":{"position":[[292,2],[320,2],[371,2],[382,2],[391,2],[399,2]]},"1244":{"position":[[73,2]]},"1279":{"position":[[395,2]]},"1292":{"position":[[768,2]]},"1306":{"position":[[51,2]]},"1388":{"position":[[109,2]]},"1409":{"position":[[20,2],[54,2],[128,2],[139,2],[157,2],[1391,2]]},"1442":{"position":[[196,2]]},"1482":{"position":[[4,2]]},"1485":{"position":[[4,2],[9,2],[193,2],[322,2]]},"1487":{"position":[[4,2]]},"1551":{"position":[[292,2],[320,2],[371,2],[382,2],[391,2],[399,2]]},"1566":{"position":[[768,2]]},"1580":{"position":[[51,2]]},"1593":{"position":[[73,2]]},"1654":{"position":[[395,2]]},"1682":{"position":[[448,2]]},"1795":{"position":[[143,2],[276,2]]}}}],["依赖于",{"_index":1359,"t":{"1784":{"position":[[382,3],[512,3],[599,3]]}}}],["便",{"_index":218,"t":{"987":{"position":[[329,1]]}}}],["便于",{"_index":654,"t":{"1131":{"position":[[92,2]]},"1141":{"position":[[17,2]]},"1409":{"position":[[92,2]]},"1419":{"position":[[17,2]]}}}],["保存",{"_index":1009,"t":{"1299":{"position":[[95,2]]},"1440":{"position":[[136,2]]},"1573":{"position":[[95,2]]},"1884":{"position":[[15,2]]}}}],["保护",{"_index":36,"t":{"983":{"position":[[63,2]]},"1069":{"position":[[255,2]]},"1369":{"position":[[432,2]]},"1383":{"position":[[65,2],[267,2]]},"1393":{"position":[[255,2]]}}}],["保持",{"_index":863,"t":{"1231":{"position":[[198,2]]},"1236":{"position":[[46,2]]},"1553":{"position":[[198,2]]},"1585":{"position":[[46,2]]},"1889":{"position":[[92,2]]},"1894":{"position":[[92,2]]}}}],["保留",{"_index":570,"t":{"1089":{"position":[[205,2]]},"1277":{"position":[[188,2]]},"1652":{"position":[[188,2]]}}}],["保障",{"_index":46,"t":{"983":{"position":[[89,2]]}}}],["信",{"_index":878,"t":{"1241":{"position":[[6,1],[123,1]]},"1253":{"position":[[75,1]]},"1590":{"position":[[6,1],[123,1]]},"1602":{"position":[[75,1]]}}}],["信任",{"_index":1031,"t":{"1309":{"position":[[223,2]]}}}],["信号",{"_index":1214,"t":{"1630":{"position":[[375,2],[394,2]]},"1640":{"position":[[14,2]]},"1803":{"position":[[1220,2]]},"1884":{"position":[[31,2]]},"1905":{"position":[[8,2]]},"1922":{"position":[[8,2]]}}}],["信号处理",{"_index":1515,"t":{"1909":{"position":[[51,4]]},"1926":{"position":[[51,4]]},"1940":{"position":[[112,4],[252,4]]}}}],["信念",{"_index":186,"t":{"987":{"position":[[217,2]]},"991":{"position":[[254,2]]}}}],["信息",{"_index":605,"t":{"1117":{"position":[[17,2]]},"1119":{"position":[[51,2]]},"1155":{"position":[[167,2]]},"1185":{"position":[[327,2]]},"1197":{"position":[[2091,2]]},"1265":{"position":[[303,2]]},"1309":{"position":[[214,2],[286,2]]},"1429":{"position":[[31,2]]},"1431":{"position":[[319,2]]},"1433":{"position":[[76,2]]},"1435":{"position":[[6,2]]},"1442":{"position":[[81,2]]},"1447":{"position":[[17,2]]},"1449":{"position":[[51,2]]},"1495":{"position":[[167,2]]},"1507":{"position":[[327,2]]},"1519":{"position":[[2091,2]]},"1614":{"position":[[303,2]]},"1702":{"position":[[74,2]]},"1719":{"position":[[92,2]]},"1772":{"position":[[942,2],[1045,2],[1117,2]]},"1784":{"position":[[348,2],[435,2],[444,2],[524,2],[583,2],[647,2]]},"1795":{"position":[[85,2]]},"1846":{"position":[[167,2]]}}}],["信用卡",{"_index":875,"t":{"1239":{"position":[[78,3],[197,3]]},"1244":{"position":[[210,3]]},"1588":{"position":[[78,3],[197,3]]},"1593":{"position":[[210,3]]}}}],["修复",{"_index":1381,"t":{"1787":{"position":[[30,2],[68,2]]}}}],["修改",{"_index":603,"t":{"1113":{"position":[[12,2],[31,2],[50,2],[65,2]]},"1131":{"position":[[1110,2],[1752,2]]},"1133":{"position":[[10,2],[144,2]]},"1147":{"position":[[13,2],[101,2]]},"1155":{"position":[[383,2]]},"1229":{"position":[[132,2],[153,2]]},"1234":{"position":[[98,2]]},"1236":{"position":[[10,2],[27,2],[42,2]]},"1239":{"position":[[381,2]]},"1241":{"position":[[16,2]]},"1244":{"position":[[346,2]]},"1263":{"position":[[21,2]]},"1267":{"position":[[111,2]]},"1285":{"position":[[7,2]]},"1287":{"position":[[10,2]]},"1302":{"position":[[16,2]]},"1347":{"position":[[1,2]]},"1369":{"position":[[16,2],[460,2]]},"1409":{"position":[[1110,2],[1752,2]]},"1411":{"position":[[10,2],[144,2]]},"1425":{"position":[[13,2],[101,2]]},"1470":{"position":[[12,2],[31,2],[50,2],[65,2]]},"1495":{"position":[[383,2]]},"1551":{"position":[[132,2],[153,2]]},"1559":{"position":[[7,2]]},"1561":{"position":[[10,2]]},"1576":{"position":[[16,2]]},"1583":{"position":[[98,2]]},"1585":{"position":[[10,2],[27,2],[42,2]]},"1588":{"position":[[381,2]]},"1590":{"position":[[16,2]]},"1593":{"position":[[346,2]]},"1612":{"position":[[21,2]]},"1616":{"position":[[111,2]]},"1687":{"position":[[14,2]]},"1695":{"position":[[23,2]]},"1697":{"position":[[87,2]]},"1699":{"position":[[13,2]]},"1702":{"position":[[77,2],[199,2],[234,2]]},"1708":{"position":[[4,2],[139,2],[306,2]]},"1770":{"position":[[92,2]]},"1840":{"position":[[93,2]]},"1848":{"position":[[99,2]]},"1850":{"position":[[122,2]]}}}],["倍",{"_index":1291,"t":{"1717":{"position":[[31,1]]},"1800":{"position":[[125,1]]}}}],["倒置",{"_index":844,"t":{"1229":{"position":[[322,2]]},"1551":{"position":[[322,2]]}}}],["值",{"_index":774,"t":{"1167":{"position":[[102,1]]},"1273":{"position":[[81,1],[165,1]]},"1343":{"position":[[525,1]]},"1345":{"position":[[449,1]]},"1349":{"position":[[225,1]]},"1431":{"position":[[202,1]]},"1433":{"position":[[551,1]]},"1477":{"position":[[102,1]]},"1626":{"position":[[64,1]]},"1648":{"position":[[81,1],[165,1]]},"1702":{"position":[[37,1],[82,1],[192,1],[204,1]]},"1704":{"position":[[75,1]]},"1708":{"position":[[9,1],[261,1],[313,1],[364,1]]},"1772":{"position":[[2338,1]]},"1844":{"position":[[126,1]]},"1850":{"position":[[31,1],[96,1],[127,1]]},"1859":{"position":[[117,1]]}}}],["值得",{"_index":386,"t":{"991":{"position":[[227,2]]},"1121":{"position":[[174,2]]},"1451":{"position":[[174,2]]},"1679":{"position":[[79,2]]}}}],["做",{"_index":902,"t":{"1267":{"position":[[80,1]]},"1279":{"position":[[149,1]]},"1285":{"position":[[41,1]]},"1299":{"position":[[11,1]]},"1431":{"position":[[59,1]]},"1559":{"position":[[41,1]]},"1573":{"position":[[11,1]]},"1616":{"position":[[80,1]]},"1630":{"position":[[461,1]]},"1654":{"position":[[149,1]]}}}],["做主",{"_index":291,"t":{"989":{"position":[[20,2]]}}}],["做好",{"_index":1509,"t":{"1872":{"position":[[40,2]]}}}],["做法",{"_index":1138,"t":{"1383":{"position":[[305,2]]},"1626":{"position":[[30,2]]}}}],["停止",{"_index":514,"t":{"1069":{"position":[[994,2]]},"1073":{"position":[[526,2]]},"1175":{"position":[[789,2]]},"1185":{"position":[[239,2],[1085,2]]},"1270":{"position":[[1115,2]]},"1393":{"position":[[994,2]]},"1397":{"position":[[526,2]]},"1485":{"position":[[789,2]]},"1507":{"position":[[239,2],[1085,2]]},"1645":{"position":[[1115,2]]},"1844":{"position":[[50,2]]},"1859":{"position":[[86,2],[188,2]]},"1909":{"position":[[104,2]]},"1926":{"position":[[104,2]]}}}],["健康",{"_index":246,"t":{"987":{"position":[[466,2]]}}}],["健康检查",{"_index":1420,"t":{"1810":{"position":[[57,4]]}}}],["催化剂",{"_index":283,"t":{"987":{"position":[[619,3]]}}}],["像",{"_index":903,"t":{"1267":{"position":[[90,1]]},"1616":{"position":[[90,1]]},"1626":{"position":[[5,1]]},"1838":{"position":[[57,1]]}}}],["僵尸",{"_index":1524,"t":{"1932":{"position":[[20,2]]},"1934":{"position":[[8,2],[19,2],[177,2]]},"1938":{"position":[[546,2],[581,2]]}}}],["儿子",{"_index":1522,"t":{"1932":{"position":[[11,2],[25,2]]},"1937":{"position":[[19,2]]}}}],["允许",{"_index":584,"t":{"1098":{"position":[[45,2]]},"1236":{"position":[[6,2]]},"1312":{"position":[[22,2]]},"1323":{"position":[[11,2]]},"1363":{"position":[[9,2]]},"1369":{"position":[[487,2]]},"1585":{"position":[[6,2]]},"1702":{"position":[[18,2]]},"1728":{"position":[[159,2],[174,2],[447,2],[471,2],[496,2]]}}}],["元",{"_index":770,"t":{"1167":{"position":[[9,1],[340,1]]},"1175":{"position":[[256,1]]},"1185":{"position":[[326,1]]},"1197":{"position":[[2090,1]]},"1239":{"position":[[194,1],[337,1]]},"1241":{"position":[[119,1]]},"1244":{"position":[[207,1],[259,1]]},"1477":{"position":[[9,1],[340,1]]},"1485":{"position":[[256,1]]},"1507":{"position":[[326,1]]},"1519":{"position":[[2090,1]]},"1588":{"position":[[194,1],[337,1]]},"1590":{"position":[[119,1]]},"1593":{"position":[[207,1],[259,1]]},"1713":{"position":[[14,1]]}}}],["充裕",{"_index":266,"t":{"987":{"position":[[542,2]]}}}],["先",{"_index":563,"t":{"1089":{"position":[[98,1]]},"1363":{"position":[[598,1]]},"1708":{"position":[[319,1]]},"1932":{"position":[[8,1],[27,1]]},"1937":{"position":[[14,1]]},"1938":{"position":[[15,1]]}}}],["先辈",{"_index":133,"t":{"987":{"position":[[24,2]]}}}],["兑现",{"_index":217,"t":{"987":{"position":[[324,2]]}}}],["全局",{"_index":508,"t":{"1069":{"position":[[295,2]]},"1147":{"position":[[103,2]]},"1393":{"position":[[295,2]]},"1425":{"position":[[103,2]]},"1662":{"position":[[41,2]]},"1817":{"position":[[364,2]]}}}],["公共",{"_index":862,"t":{"1231":{"position":[[159,2]]},"1553":{"position":[[159,2]]}}}],["共享",{"_index":1096,"t":{"1359":{"position":[[23,2]]},"1365":{"position":[[34,2]]},"1369":{"position":[[18,2]]},"1770":{"position":[[94,2]]},"1821":{"position":[[37,2]]}}}],["共享资源",{"_index":1133,"t":{"1383":{"position":[[67,4]]}}}],["共同",{"_index":241,"t":{"987":{"position":[[444,2]]},"991":{"position":[[209,2]]}}}],["关于",{"_index":1364,"t":{"1784":{"position":[[529,2],[563,2]]}}}],["关注",{"_index":661,"t":{"1131":{"position":[[170,2]]},"1409":{"position":[[170,2]]}}}],["关系",{"_index":237,"t":{"987":{"position":[[417,2]]},"989":{"position":[[2,2]]},"1172":{"position":[[6,2]]},"1175":{"position":[[6,2]]},"1482":{"position":[[6,2]]},"1485":{"position":[[6,2]]}}}],["关联",{"_index":1510,"t":{"1872":{"position":[[42,2]]}}}],["关键",{"_index":543,"t":{"1082":{"position":[[52,2]]},"1129":{"position":[[22,2]]},"1236":{"position":[[55,2]]},"1407":{"position":[[22,2]]},"1585":{"position":[[55,2]]},"1823":{"position":[[60,2]]}}}],["关键因素",{"_index":32,"t":{"983":{"position":[[46,4]]}}}],["关键字",{"_index":1312,"t":{"1732":{"position":[[226,3]]}}}],["关键技术",{"_index":1316,"t":{"1739":{"position":[[63,4]]}}}],["关闭",{"_index":730,"t":{"1145":{"position":[[1998,2]]},"1229":{"position":[[134,2]]},"1234":{"position":[[100,2]]},"1236":{"position":[[29,2]]},"1239":{"position":[[383,2]]},"1257":{"position":[[468,2]]},"1263":{"position":[[761,2]]},"1265":{"position":[[351,2],[419,2]]},"1270":{"position":[[753,2]]},"1273":{"position":[[14,2],[54,2],[93,2],[139,2],[182,2],[229,2]]},"1275":{"position":[[10,2],[51,2],[79,2],[1089,2]]},"1277":{"position":[[1460,2]]},"1279":{"position":[[2430,2]]},"1309":{"position":[[89,2],[393,2],[454,2],[478,2]]},"1423":{"position":[[1998,2]]},"1431":{"position":[[172,2]]},"1551":{"position":[[134,2]]},"1583":{"position":[[100,2]]},"1585":{"position":[[29,2]]},"1588":{"position":[[383,2]]},"1606":{"position":[[468,2]]},"1612":{"position":[[761,2]]},"1614":{"position":[[351,2],[419,2]]},"1634":{"position":[[218,2]]},"1645":{"position":[[753,2]]},"1648":{"position":[[14,2],[54,2],[93,2],[139,2],[182,2],[229,2]]},"1650":{"position":[[10,2],[51,2],[79,2],[1089,2]]},"1652":{"position":[[1460,2]]},"1654":{"position":[[2430,2]]},"1803":{"position":[[828,2],[1223,2],[1288,2]]},"1808":{"position":[[1006,2]]}}}],["其一",{"_index":93,"t":{"983":{"position":[[229,2]]}}}],["其中",{"_index":30,"t":{"983":{"position":[[41,2]]},"1167":{"position":[[238,2]]},"1477":{"position":[[238,2]]}}}],["其他",{"_index":452,"t":{"1061":{"position":[[33,2]]},"1141":{"position":[[149,2]]},"1231":{"position":[[85,2]]},"1285":{"position":[[17,2]]},"1287":{"position":[[22,2]]},"1369":{"position":[[489,2]]},"1385":{"position":[[33,2]]},"1419":{"position":[[149,2]]},"1553":{"position":[[85,2]]},"1559":{"position":[[17,2]]},"1561":{"position":[[22,2]]},"1736":{"position":[[49,2]]},"1777":{"position":[[66,2]]},"1784":{"position":[[439,2]]},"1940":{"position":[[776,2]]}}}],["其子",{"_index":1345,"t":{"1775":{"position":[[26,2]]}}}],["具体",{"_index":644,"t":{"1131":{"position":[[22,2],[49,2],[74,2],[134,2],[1233,2],[1393,2]]},"1229":{"position":[[314,2]]},"1244":{"position":[[75,2]]},"1257":{"position":[[129,2]]},"1279":{"position":[[218,2],[234,2]]},"1409":{"position":[[22,2],[49,2],[74,2],[134,2],[1233,2],[1393,2]]},"1551":{"position":[[314,2]]},"1593":{"position":[[75,2]]},"1606":{"position":[[129,2]]},"1638":{"position":[[91,2]]},"1654":{"position":[[218,2],[234,2]]},"1699":{"position":[[123,2]]}}}],["具备",{"_index":741,"t":{"1149":{"position":[[47,2]]},"1427":{"position":[[47,2]]}}}],["具有",{"_index":1393,"t":{"1795":{"position":[[14,2]]}}}],["兼容",{"_index":701,"t":{"1137":{"position":[[30,2]]},"1415":{"position":[[30,2]]},"1619":{"position":[[69,2]]},"1691":{"position":[[6,2]]},"1760":{"position":[[15,2]]}}}],["兼容性",{"_index":1267,"t":{"1699":{"position":[[99,3]]},"1909":{"position":[[60,3]]},"1926":{"position":[[60,3]]}}}],["内",{"_index":1111,"t":{"1363":{"position":[[623,1]]}}}],["内在",{"_index":66,"t":{"983":{"position":[[150,2]]}}}],["内存",{"_index":1152,"t":{"1431":{"position":[[39,2],[60,2],[111,2],[146,2],[213,2],[258,2]]},"1444":{"position":[[52,2],[163,2]]},"1848":{"position":[[128,2]]},"1850":{"position":[[268,2]]}}}],["内存空间",{"_index":1231,"t":{"1640":{"position":[[2,4]]}}}],["内容",{"_index":400,"t":{"997":{"position":[[17,2],[30,2]]},"1210":{"position":[[64,2]]},"1316":{"position":[[110,2]]},"1532":{"position":[[64,2]]},"1797":{"position":[[108,2]]},"1848":{"position":[[130,2]]},"1901":{"position":[[336,2]]},"1907":{"position":[[419,2]]},"1918":{"position":[[336,2]]},"1924":{"position":[[419,2]]}}}],["内核",{"_index":461,"t":{"1061":{"position":[[68,2]]},"1064":{"position":[[0,2],[9,2],[120,2],[128,2]]},"1066":{"position":[[7,2]]},"1069":{"position":[[334,2]]},"1071":{"position":[[758,2]]},"1100":{"position":[[28,2],[45,2]]},"1102":{"position":[[0,2]]},"1105":{"position":[[177,2],[262,2]]},"1119":{"position":[[35,2],[81,2]]},"1121":{"position":[[48,2]]},"1123":{"position":[[153,2],[283,2]]},"1152":{"position":[[8,2]]},"1155":{"position":[[93,2],[203,2]]},"1157":{"position":[[191,2],[492,2]]},"1182":{"position":[[13,2]]},"1385":{"position":[[68,2]]},"1388":{"position":[[0,2],[9,2],[120,2],[128,2]]},"1390":{"position":[[7,2]]},"1393":{"position":[[334,2]]},"1395":{"position":[[758,2]]},"1449":{"position":[[35,2],[81,2]]},"1451":{"position":[[48,2]]},"1453":{"position":[[153,2],[283,2]]},"1457":{"position":[[28,2],[45,2]]},"1459":{"position":[[0,2]]},"1462":{"position":[[177,2],[262,2]]},"1492":{"position":[[8,2]]},"1495":{"position":[[93,2],[203,2]]},"1497":{"position":[[191,2],[492,2]]},"1504":{"position":[[13,2]]},"1784":{"position":[[433,2],[570,2]]}}}],["内置",{"_index":711,"t":{"1141":{"position":[[3,2]]},"1419":{"position":[[3,2]]}}}],["内部",{"_index":1440,"t":{"1821":{"position":[[199,2]]},"1850":{"position":[[380,2]]}}}],["再次",{"_index":210,"t":{"987":{"position":[[299,2]]}}}],["冒号",{"_index":538,"t":{"1082":{"position":[[16,2],[25,2]]},"1084":{"position":[[9,2],[49,2]]},"1096":{"position":[[11,2],[22,2]]},"1098":{"position":[[3,2],[41,2]]}}}],["写",{"_index":617,"t":{"1119":{"position":[[94,1]]},"1277":{"position":[[1058,1]]},"1449":{"position":[[94,1]]},"1652":{"position":[[1058,1]]}}}],["写入",{"_index":619,"t":{"1121":{"position":[[176,2],[401,2]]},"1207":{"position":[[29,2]]},"1279":{"position":[[4261,2]]},"1451":{"position":[[176,2],[401,2]]},"1529":{"position":[[29,2]]},"1654":{"position":[[4261,2]]}}}],["农业",{"_index":147,"t":{"987":{"position":[[86,2]]}}}],["农民",{"_index":359,"t":{"991":{"position":[[117,2]]}}}],["冲突",{"_index":1416,"t":{"1800":{"position":[[149,2]]}}}],["决定",{"_index":293,"t":{"989":{"position":[[27,2]]}}}],["准确",{"_index":1013,"t":{"1302":{"position":[[42,2]]},"1576":{"position":[[42,2]]}}}],["减少",{"_index":852,"t":{"1231":{"position":[[35,2],[106,2]]},"1359":{"position":[[28,2]]},"1367":{"position":[[167,2],[510,2]]},"1553":{"position":[[35,2],[106,2]]},"1772":{"position":[[2340,2]]},"1821":{"position":[[228,2]]}}}],["几个",{"_index":820,"t":{"1227":{"position":[[12,2]]},"1549":{"position":[[12,2]]}}}],["几乎",{"_index":297,"t":{"989":{"position":[[44,2]]}}}],["几种",{"_index":1094,"t":{"1355":{"position":[[35,2]]}}}],["出现",{"_index":412,"t":{"1004":{"position":[[13,2]]},"1084":{"position":[[26,2]]},"1619":{"position":[[57,2],[63,2]]}}}],["出自",{"_index":353,"t":{"991":{"position":[[88,2]]}}}],["出错",{"_index":898,"t":{"1265":{"position":[[425,2]]},"1614":{"position":[[425,2]]}}}],["函数",{"_index":830,"t":{"1229":{"position":[[119,2]]},"1234":{"position":[[85,2]]},"1244":{"position":[[362,2]]},"1267":{"position":[[37,2]]},"1299":{"position":[[9,2],[133,2]]},"1431":{"position":[[67,2]]},"1551":{"position":[[119,2]]},"1573":{"position":[[9,2],[133,2]]},"1583":{"position":[[85,2]]},"1593":{"position":[[362,2]]},"1616":{"position":[[37,2]]},"1626":{"position":[[8,2]]},"1630":{"position":[[16,2],[192,2]]},"1632":{"position":[[53,2]]},"1844":{"position":[[45,2],[91,2],[109,2],[201,2]]},"1846":{"position":[[22,2],[57,2]]},"1940":{"position":[[116,2],[256,2]]}}}],["函数参数",{"_index":1473,"t":{"1848":{"position":[[70,4]]}}}],["函数调用",{"_index":672,"t":{"1131":{"position":[[952,4],[1630,4]]},"1409":{"position":[[952,4],[1630,4]]}}}],["分为",{"_index":843,"t":{"1229":{"position":[[308,2]]},"1292":{"position":[[737,2]]},"1299":{"position":[[124,2]]},"1551":{"position":[[308,2]]},"1566":{"position":[[737,2]]},"1573":{"position":[[124,2]]}}}],["分发",{"_index":766,"t":{"1157":{"position":[[9,2]]},"1497":{"position":[[9,2]]}}}],["分析",{"_index":998,"t":{"1290":{"position":[[511,2]]},"1564":{"position":[[511,2]]}}}],["分配",{"_index":1159,"t":{"1431":{"position":[[148,2]]}}}],["分配不公",{"_index":138,"t":{"987":{"position":[[52,4]]}}}],["分隔",{"_index":445,"t":{"1055":{"position":[[20,2]]}}}],["分页",{"_index":1211,"t":{"1630":{"position":[[212,2]]}}}],["切换",{"_index":490,"t":{"1064":{"position":[[122,2]]},"1131":{"position":[[1100,2]]},"1388":{"position":[[122,2]]},"1409":{"position":[[1100,2]]},"1634":{"position":[[201,2]]},"1780":{"position":[[34,2]]},"1853":{"position":[[75,2]]},"1855":{"position":[[71,2]]},"1865":{"position":[[2,2]]}}}],["切片",{"_index":1299,"t":{"1728":{"position":[[73,2],[94,2],[628,2]]}}}],["列出",{"_index":1045,"t":{"1316":{"position":[[104,2]]},"1934":{"position":[[85,2]]}}}],["列表",{"_index":418,"t":{"1011":{"position":[[9,2]]},"1292":{"position":[[295,2]]},"1566":{"position":[[295,2]]},"1672":{"position":[[119,2]]}}}],["创建",{"_index":511,"t":{"1069":{"position":[[422,2]]},"1073":{"position":[[104,2]]},"1223":{"position":[[126,2]]},"1227":{"position":[[28,2]]},"1261":{"position":[[266,2]]},"1265":{"position":[[17,2],[65,2],[149,2]]},"1290":{"position":[[126,2]]},"1314":{"position":[[15,2]]},"1333":{"position":[[185,2]]},"1335":{"position":[[15,2]]},"1361":{"position":[[151,2],[302,2]]},"1393":{"position":[[422,2]]},"1397":{"position":[[104,2]]},"1545":{"position":[[126,2]]},"1549":{"position":[[28,2]]},"1564":{"position":[[126,2]]},"1610":{"position":[[266,2]]},"1614":{"position":[[17,2],[65,2],[149,2]]},"1702":{"position":[[244,2],[253,2]]},"1772":{"position":[[1173,2]]},"1775":{"position":[[90,2]]},"1784":{"position":[[0,2]]},"1789":{"position":[[11,2]]},"1791":{"position":[[17,2]]},"1803":{"position":[[232,2]]},"1808":{"position":[[259,2]]},"1903":{"position":[[6,2]]},"1920":{"position":[[6,2]]},"1937":{"position":[[172,2]]},"1938":{"position":[[149,2]]},"1940":{"position":[[470,2]]}}}],["创新",{"_index":279,"t":{"987":{"position":[[598,2]]}}}],["初始化",{"_index":1127,"t":{"1373":{"position":[[39,3],[139,3]]},"1808":{"position":[[513,3]]}}}],["初年",{"_index":351,"t":{"991":{"position":[[82,2]]}}}],["删除",{"_index":1429,"t":{"1819":{"position":[[153,2]]},"1846":{"position":[[191,2]]}}}],["判断",{"_index":780,"t":{"1167":{"position":[[1191,2]]},"1219":{"position":[[254,2]]},"1273":{"position":[[89,2],[144,2],[169,2]]},"1275":{"position":[[72,2]]},"1477":{"position":[[1191,2]]},"1541":{"position":[[254,2]]},"1648":{"position":[[89,2],[144,2],[169,2]]},"1650":{"position":[[72,2]]}}}],["利用",{"_index":1294,"t":{"1719":{"position":[[77,2]]}}}],["利益",{"_index":331,"t":{"991":{"position":[[17,2]]}}}],["别名",{"_index":1342,"t":{"1772":{"position":[[1807,2]]}}}],["到达",{"_index":1112,"t":{"1363":{"position":[[628,2]]}}}],["制度",{"_index":86,"t":{"983":{"position":[[208,2]]}}}],["刻意",{"_index":97,"t":{"985":{"position":[[12,2]]}}}],["前",{"_index":1233,"t":{"1642":{"position":[[12,1]]},"1844":{"position":[[49,1]]},"1940":{"position":[[858,1]]}}}],["前提",{"_index":1280,"t":{"1708":{"position":[[12,2]]}}}],["前缀",{"_index":434,"t":{"1034":{"position":[[7,2]]}}}],["前面",{"_index":557,"t":{"1084":{"position":[[39,2]]},"1087":{"position":[[130,2]]},"1089":{"position":[[50,2],[126,2]]},"1098":{"position":[[32,2]]},"1217":{"position":[[148,2]]},"1539":{"position":[[148,2]]}}}],["剥削",{"_index":99,"t":{"985":{"position":[[17,2]]}}}],["力量",{"_index":337,"t":{"991":{"position":[[36,2]]}}}],["功成名就",{"_index":377,"t":{"991":{"position":[[189,4]]}}}],["功绩",{"_index":333,"t":{"991":{"position":[[22,2]]}}}],["功能",{"_index":450,"t":{"1061":{"position":[[27,2],[35,2]]},"1064":{"position":[[18,2]]},"1131":{"position":[[177,2]]},"1133":{"position":[[5,2],[114,2]]},"1229":{"position":[[147,2]]},"1231":{"position":[[26,2],[261,2]]},"1236":{"position":[[23,2]]},"1267":{"position":[[120,2]]},"1277":{"position":[[126,2]]},"1285":{"position":[[11,2],[23,2]]},"1287":{"position":[[14,2],[24,2]]},"1290":{"position":[[539,2]]},"1302":{"position":[[20,2],[28,2]]},"1304":{"position":[[19,2]]},"1385":{"position":[[27,2],[35,2]]},"1388":{"position":[[18,2]]},"1409":{"position":[[177,2]]},"1411":{"position":[[5,2],[114,2]]},"1429":{"position":[[61,2]]},"1444":{"position":[[14,2],[211,2]]},"1551":{"position":[[147,2]]},"1553":{"position":[[26,2],[261,2]]},"1559":{"position":[[11,2],[23,2]]},"1561":{"position":[[14,2],[24,2]]},"1564":{"position":[[539,2]]},"1576":{"position":[[20,2],[28,2]]},"1578":{"position":[[19,2]]},"1585":{"position":[[23,2]]},"1616":{"position":[[120,2]]},"1652":{"position":[[126,2]]},"1702":{"position":[[172,2]]},"1722":{"position":[[41,2]]},"1736":{"position":[[18,2]]},"1772":{"position":[[1056,2]]},"1844":{"position":[[3,2]]},"1889":{"position":[[88,2]]},"1894":{"position":[[88,2]]},"1909":{"position":[[0,2]]},"1926":{"position":[[0,2]]}}}],["功能强大",{"_index":1247,"t":{"1677":{"position":[[18,4]]}}}],["加",{"_index":818,"t":{"1221":{"position":[[59,1]]},"1543":{"position":[[59,1]]}}}],["加以",{"_index":73,"t":{"983":{"position":[[171,2]]}}}],["加入",{"_index":1329,"t":{"1746":{"position":[[174,2]]}}}],["加剧",{"_index":160,"t":{"987":{"position":[[130,2]]}}}],["加密",{"_index":799,"t":{"1194":{"position":[[16,2]]},"1197":{"position":[[146,2],[248,2]]},"1207":{"position":[[24,2]]},"1210":{"position":[[68,2]]},"1223":{"position":[[186,2]]},"1309":{"position":[[185,2]]},"1351":{"position":[[64,2]]},"1353":{"position":[[129,2],[341,2]]},"1516":{"position":[[16,2]]},"1519":{"position":[[146,2],[248,2]]},"1529":{"position":[[24,2]]},"1532":{"position":[[68,2]]},"1545":{"position":[[186,2]]},"1772":{"position":[[1051,2]]}}}],["加密算法",{"_index":1090,"t":{"1353":{"position":[[146,4],[179,4]]}}}],["加载",{"_index":524,"t":{"1077":{"position":[[31,2]]},"1401":{"position":[[31,2]]},"1859":{"position":[[170,2]]},"1872":{"position":[[3,2],[50,2]]}}}],["加锁",{"_index":1101,"t":{"1359":{"position":[[63,2]]}}}],["务实",{"_index":380,"t":{"991":{"position":[[201,2]]}}}],["劣势",{"_index":1263,"t":{"1697":{"position":[[10,2]]}}}],["动力",{"_index":277,"t":{"987":{"position":[[588,2]]}}}],["动态",{"_index":523,"t":{"1077":{"position":[[29,2]]},"1401":{"position":[[29,2]]},"1702":{"position":[[67,2],[93,2],[212,2],[229,2]]},"1719":{"position":[[3,2]]},"1784":{"position":[[581,2]]},"1859":{"position":[[166,2]]}}}],["动态控制",{"_index":792,"t":{"1182":{"position":[[54,4]]},"1504":{"position":[[54,4]]}}}],["助力",{"_index":239,"t":{"987":{"position":[[435,2]]}}}],["努力",{"_index":392,"t":{"991":{"position":[[260,2]]}}}],["勇敢",{"_index":383,"t":{"991":{"position":[[215,2]]}}}],["包",{"_index":1040,"t":{"1312":{"position":[[8,1]]},"1335":{"position":[[184,1]]},"1338":{"position":[[74,1]]},"1429":{"position":[[38,1]]},"1444":{"position":[[135,1]]},"1682":{"position":[[27,1]]},"1702":{"position":[[48,1],[168,1]]},"1704":{"position":[[10,1]]},"1889":{"position":[[36,1],[75,1]]},"1894":{"position":[[36,1],[75,1]]}}}],["包含",{"_index":588,"t":{"1098":{"position":[[91,2]]},"1155":{"position":[[15,2]]},"1343":{"position":[[506,2]]},"1495":{"position":[[15,2]]},"1728":{"position":[[192,2],[524,2],[562,2],[591,2]]},"1784":{"position":[[706,2]]}}}],["包容",{"_index":379,"t":{"991":{"position":[[198,2]]}}}],["包括",{"_index":1445,"t":{"1823":{"position":[[65,2]]}}}],["包装",{"_index":1219,"t":{"1632":{"position":[[43,2]]}}}],["化",{"_index":525,"t":{"1077":{"position":[[39,1]]},"1205":{"position":[[6,1]]},"1401":{"position":[[39,1]]},"1527":{"position":[[6,1]]},"1739":{"position":[[56,1],[148,1]]},"1789":{"position":[[42,1]]},"1797":{"position":[[79,1]]}}}],["匹配",{"_index":427,"t":{"1022":{"position":[[11,2]]},"1309":{"position":[[189,2]]},"1345":{"position":[[445,2],[456,2]]},"1351":{"position":[[44,2]]}}}],["区分",{"_index":921,"t":{"1270":{"position":[[1333,2]]},"1645":{"position":[[1333,2]]}}}],["区别",{"_index":544,"t":{"1082":{"position":[[54,2]]},"1098":{"position":[[150,2]]}}}],["十六进制",{"_index":1307,"t":{"1728":{"position":[[393,4]]},"1850":{"position":[[87,4]]}}}],["升级",{"_index":1079,"t":{"1349":{"position":[[204,2]]},"1353":{"position":[[103,2]]}}}],["协",{"_index":728,"t":{"1145":{"position":[[1992,1]]},"1270":{"position":[[546,1],[770,1],[1119,1]]},"1275":{"position":[[449,1],[516,1]]},"1277":{"position":[[526,1]]},"1355":{"position":[[12,1]]},"1361":{"position":[[339,1]]},"1423":{"position":[[1992,1]]},"1645":{"position":[[546,1],[770,1],[1119,1]]},"1650":{"position":[[449,1],[516,1]]},"1652":{"position":[[526,1]]}}}],["协作",{"_index":1004,"t":{"1292":{"position":[[772,2]]},"1566":{"position":[[772,2]]}}}],["协议",{"_index":747,"t":{"1152":{"position":[[19,2]]},"1309":{"position":[[182,2]]},"1492":{"position":[[19,2]]}}}],["单",{"_index":537,"t":{"1082":{"position":[[15,1]]},"1084":{"position":[[8,1]]},"1096":{"position":[[10,1]]},"1098":{"position":[[2,1]]},"1383":{"position":[[103,1]]}}}],["单一",{"_index":464,"t":{"1064":{"position":[[6,2]]},"1089":{"position":[[167,2]]},"1131":{"position":[[160,2]]},"1229":{"position":[[0,2]]},"1282":{"position":[[0,2]]},"1285":{"position":[[59,2]]},"1299":{"position":[[128,2]]},"1388":{"position":[[6,2]]},"1409":{"position":[[160,2]]},"1551":{"position":[[0,2]]},"1556":{"position":[[0,2]]},"1559":{"position":[[59,2]]},"1573":{"position":[[128,2]]}}}],["单个",{"_index":779,"t":{"1167":{"position":[[403,2]]},"1477":{"position":[[403,2]]}}}],["单元测试",{"_index":655,"t":{"1131":{"position":[[94,4]]},"1409":{"position":[[94,4]]}}}],["单步",{"_index":1470,"t":{"1844":{"position":[[83,2],[102,2]]},"1850":{"position":[[309,2]]}}}],["单独",{"_index":768,"t":{"1164":{"position":[[7,2]]},"1474":{"position":[[7,2]]},"1795":{"position":[[274,2]]}}}],["单词",{"_index":440,"t":{"1041":{"position":[[10,2]]},"1055":{"position":[[12,2],[15,2]]}}}],["占",{"_index":1230,"t":{"1640":{"position":[[1,1]]}}}],["占用",{"_index":1413,"t":{"1800":{"position":[[142,2]]},"1819":{"position":[[210,2]]}}}],["卡死",{"_index":951,"t":{"1277":{"position":[[151,2]]},"1652":{"position":[[151,2]]}}}],["即便",{"_index":135,"t":{"987":{"position":[[39,2]]}}}],["即可",{"_index":1216,"t":{"1632":{"position":[[14,2]]}}}],["历史",{"_index":102,"t":{"985":{"position":[[24,2]]},"991":{"position":[[0,2]]}}}],["压迫",{"_index":153,"t":{"987":{"position":[[107,2]]}}}],["原值",{"_index":1282,"t":{"1708":{"position":[[141,2]]}}}],["原则",{"_index":664,"t":{"1131":{"position":[[184,2]]},"1145":{"position":[[2029,2]]},"1149":{"position":[[33,2]]},"1227":{"position":[[18,2],[23,2],[57,2]]},"1229":{"position":[[4,2],[77,2],[164,2],[243,2],[324,2]]},"1231":{"position":[[6,2],[57,2],[118,2],[171,2],[222,2]]},"1234":{"position":[[2,2],[39,2],[46,2],[113,2]]},"1267":{"position":[[63,2]]},"1282":{"position":[[4,2],[51,2],[58,2],[141,2]]},"1409":{"position":[[184,2]]},"1423":{"position":[[2029,2]]},"1427":{"position":[[33,2]]},"1549":{"position":[[18,2],[23,2],[57,2]]},"1551":{"position":[[4,2],[77,2],[164,2],[243,2],[324,2]]},"1553":{"position":[[6,2],[57,2],[118,2],[171,2],[222,2]]},"1556":{"position":[[4,2],[51,2],[58,2],[141,2]]},"1583":{"position":[[2,2],[39,2],[46,2],[113,2]]},"1616":{"position":[[63,2]]}}}],["原因",{"_index":826,"t":{"1229":{"position":[[61,2]]},"1282":{"position":[[107,2]]},"1309":{"position":[[165,2]]},"1551":{"position":[[61,2]]},"1556":{"position":[[107,2]]},"1619":{"position":[[47,2]]}}}],["原始",{"_index":141,"t":{"987":{"position":[[66,2]]},"1133":{"position":[[146,2]]},"1411":{"position":[[146,2]]},"1708":{"position":[[308,2]]},"1884":{"position":[[17,2]]}}}],["原子",{"_index":1130,"t":{"1375":{"position":[[30,2]]},"1377":{"position":[[151,2]]}}}],["原有",{"_index":687,"t":{"1133":{"position":[[112,2]]},"1411":{"position":[[112,2]]}}}],["原来",{"_index":1002,"t":{"1292":{"position":[[722,2]]},"1566":{"position":[[722,2]]}}}],["原理",{"_index":1447,"t":{"1823":{"position":[[155,2]]}}}],["去掉",{"_index":438,"t":{"1038":{"position":[[73,2],[145,2]]}}}],["去除",{"_index":441,"t":{"1048":{"position":[[0,2]]}}}],["参",{"_index":1468,"t":{"1840":{"position":[[9,1]]}}}],["参数",{"_index":659,"t":{"1131":{"position":[[153,2]]},"1135":{"position":[[7,2]]},"1409":{"position":[[153,2]]},"1413":{"position":[[7,2]]},"1657":{"position":[[18,2]]},"1662":{"position":[[47,2]]},"1672":{"position":[[121,2]]},"1675":{"position":[[25,2]]},"1679":{"position":[[35,2]]},"1715":{"position":[[1,2],[356,2]]},"1736":{"position":[[65,2]]},"1784":{"position":[[572,2]]},"1838":{"position":[[54,2]]},"1840":{"position":[[44,2],[95,2]]},"1853":{"position":[[135,2]]},"1934":{"position":[[83,2],[158,2]]}}}],["参考",{"_index":606,"t":{"1117":{"position":[[24,2]]},"1447":{"position":[[24,2]]},"1859":{"position":[[0,2]]}}}],["及其",{"_index":1456,"t":{"1828":{"position":[[106,2]]}}}],["友好",{"_index":726,"t":{"1145":{"position":[[1975,2]]},"1423":{"position":[[1975,2]]},"1679":{"position":[[19,2]]}}}],["双",{"_index":539,"t":{"1082":{"position":[[24,1]]},"1084":{"position":[[48,1]]},"1096":{"position":[[21,1]]},"1098":{"position":[[40,1]]}}}],["反",{"_index":1276,"t":{"1702":{"position":[[147,1]]},"1739":{"position":[[30,1]]},"1742":{"position":[[101,1]]},"1746":{"position":[[169,1]]}}}],["反向",{"_index":1436,"t":{"1821":{"position":[[56,2]]}}}],["反射",{"_index":1270,"t":{"1702":{"position":[[0,2],[251,2]]},"1708":{"position":[[0,2]]},"1719":{"position":[[10,2],[46,2]]},"1817":{"position":[[264,2]]}}}],["反汇编",{"_index":1480,"t":{"1850":{"position":[[287,3]]}}}],["反过来",{"_index":238,"t":{"987":{"position":[[432,3]]}}}],["反馈",{"_index":611,"t":{"1119":{"position":[[49,2],[121,2]]},"1449":{"position":[[49,2],[121,2]]}}}],["发出请求",{"_index":752,"t":{"1152":{"position":[[49,4]]},"1492":{"position":[[49,4]]}}}],["发展",{"_index":128,"t":{"987":{"position":[[10,2],[236,2],[285,2],[456,2]]}}}],["发现",{"_index":526,"t":{"1077":{"position":[[49,2]]},"1401":{"position":[[49,2]]}}}],["发生",{"_index":897,"t":{"1265":{"position":[[338,2]]},"1369":{"position":[[463,2]]},"1614":{"position":[[338,2]]},"1859":{"position":[[19,2],[32,2],[118,2],[149,2],[156,2],[182,2]]}}}],["发送",{"_index":515,"t":{"1069":{"position":[[1188,2]]},"1071":{"position":[[753,2]]},"1100":{"position":[[23,2],[47,2]]},"1102":{"position":[[2,2]]},"1105":{"position":[[141,2],[264,2]]},"1109":{"position":[[6,2],[48,2]]},"1119":{"position":[[63,2]]},"1123":{"position":[[148,2]]},"1131":{"position":[[406,2],[553,2],[1352,2]]},"1157":{"position":[[20,2],[186,2]]},"1270":{"position":[[339,2]]},"1273":{"position":[[0,2]]},"1275":{"position":[[825,2]]},"1279":{"position":[[3017,2],[3699,2]]},"1290":{"position":[[269,2],[522,2]]},"1299":{"position":[[108,2]]},"1361":{"position":[[361,2]]},"1393":{"position":[[1188,2]]},"1395":{"position":[[753,2]]},"1409":{"position":[[406,2],[553,2],[1352,2]]},"1449":{"position":[[63,2]]},"1453":{"position":[[148,2]]},"1457":{"position":[[23,2],[47,2]]},"1459":{"position":[[2,2]]},"1462":{"position":[[141,2],[264,2]]},"1466":{"position":[[6,2],[48,2]]},"1497":{"position":[[20,2],[186,2]]},"1564":{"position":[[269,2],[522,2]]},"1573":{"position":[[108,2]]},"1645":{"position":[[339,2]]},"1648":{"position":[[0,2]]},"1650":{"position":[[825,2]]},"1654":{"position":[[3017,2],[3699,2]]},"1905":{"position":[[6,2]]},"1922":{"position":[[6,2]]}}}],["发送器",{"_index":675,"t":{"1131":{"position":[[1255,3]]},"1409":{"position":[[1255,3]]}}}],["发送数据",{"_index":912,"t":{"1270":{"position":[[1194,4]]},"1273":{"position":[[25,4]]},"1361":{"position":[[398,4]]},"1363":{"position":[[168,4],[265,4]]},"1645":{"position":[[1194,4]]},"1648":{"position":[[25,4]]}}}],["发送给",{"_index":764,"t":{"1155":{"position":[[826,3]]},"1167":{"position":[[1468,3]]},"1477":{"position":[[1468,3]]},"1495":{"position":[[826,3]]}}}],["取消",{"_index":947,"t":{"1277":{"position":[[103,2],[110,2],[117,2],[146,2],[895,2]]},"1379":{"position":[[45,2]]},"1381":{"position":[[440,2]]},"1383":{"position":[[139,2]]},"1652":{"position":[[103,2],[110,2],[117,2],[146,2],[895,2]]}}}],["受",{"_index":1030,"t":{"1309":{"position":[[222,1]]}}}],["受限",{"_index":1386,"t":{"1789":{"position":[[15,2]]}}}],["变为",{"_index":1125,"t":{"1371":{"position":[[218,2]]}}}],["变化",{"_index":629,"t":{"1127":{"position":[[58,2]]},"1149":{"position":[[53,2]]},"1229":{"position":[[58,2]]},"1267":{"position":[[14,2],[78,2]]},"1282":{"position":[[104,2]]},"1405":{"position":[[58,2]]},"1427":{"position":[[53,2]]},"1551":{"position":[[58,2]]},"1556":{"position":[[104,2]]},"1616":{"position":[[14,2],[78,2]]}}}],["变得",{"_index":1011,"t":{"1302":{"position":[[9,2]]},"1576":{"position":[[9,2]]}}}],["变成",{"_index":1532,"t":{"1937":{"position":[[49,2]]},"1938":{"position":[[544,2]]}}}],["变量",{"_index":567,"t":{"1089":{"position":[[188,2]]},"1096":{"position":[[50,2]]},"1359":{"position":[[25,2]]},"1365":{"position":[[36,2]]},"1383":{"position":[[210,2]]},"1642":{"position":[[15,2]]},"1702":{"position":[[31,2],[71,2],[79,2],[112,2],[183,2],[201,2],[257,2]]},"1704":{"position":[[39,2],[72,2]]},"1708":{"position":[[6,2],[310,2]]},"1772":{"position":[[1888,2],[1920,2]]},"1844":{"position":[[123,2]]},"1848":{"position":[[20,2]]},"1859":{"position":[[100,2],[109,2]]}}}],["变量值",{"_index":1474,"t":{"1848":{"position":[[101,3]]}}}],["古代",{"_index":287,"t":{"989":{"position":[[10,2]]}}}],["只是",{"_index":357,"t":{"991":{"position":[[112,2],[139,2]]},"1795":{"position":[[54,2]]}}}],["只有",{"_index":222,"t":{"987":{"position":[[347,2]]},"1229":{"position":[[51,2]]},"1282":{"position":[[97,2]]},"1551":{"position":[[51,2]]},"1556":{"position":[[97,2]]},"1719":{"position":[[0,2]]},"1795":{"position":[[24,2]]}}}],["只能",{"_index":838,"t":{"1229":{"position":[[233,2]]},"1551":{"position":[[233,2]]},"1789":{"position":[[27,2]]}}}],["只读",{"_index":1259,"t":{"1687":{"position":[[40,2]]},"1697":{"position":[[65,2]]}}}],["可以",{"_index":347,"t":{"991":{"position":[[73,2]]},"999":{"position":[[0,2]]},"1018":{"position":[[6,2]]},"1082":{"position":[[64,2]]},"1084":{"position":[[66,2]]},"1094":{"position":[[243,2]]},"1119":{"position":[[0,2]]},"1131":{"position":[[99,2],[974,2]]},"1152":{"position":[[54,2]]},"1175":{"position":[[326,2]]},"1217":{"position":[[143,2]]},"1221":{"position":[[57,2],[77,2]]},"1255":{"position":[[13,2]]},"1257":{"position":[[201,2]]},"1261":{"position":[[125,2]]},"1263":{"position":[[756,2]]},"1270":{"position":[[1281,2]]},"1279":{"position":[[289,2]]},"1285":{"position":[[84,2]]},"1309":{"position":[[404,2],[482,2],[488,2],[502,2]]},"1335":{"position":[[42,2],[135,2]]},"1343":{"position":[[446,2]]},"1349":{"position":[[12,2]]},"1357":{"position":[[52,2]]},"1369":{"position":[[24,2]]},"1375":{"position":[[10,2]]},"1383":{"position":[[239,2],[381,2]]},"1409":{"position":[[99,2],[974,2]]},"1444":{"position":[[214,2]]},"1449":{"position":[[0,2]]},"1485":{"position":[[326,2]]},"1492":{"position":[[54,2]]},"1539":{"position":[[143,2]]},"1543":{"position":[[57,2],[77,2]]},"1559":{"position":[[84,2]]},"1604":{"position":[[13,2]]},"1606":{"position":[[201,2]]},"1610":{"position":[[125,2]]},"1612":{"position":[[756,2]]},"1619":{"position":[[15,2],[76,2],[122,2]]},"1630":{"position":[[230,2],[398,2]]},"1645":{"position":[[1281,2]]},"1654":{"position":[[289,2]]},"1662":{"position":[[35,2]]},"1675":{"position":[[0,2]]},"1702":{"position":[[65,2]]},"1708":{"position":[[2,2]]},"1713":{"position":[[5,2]]},"1730":{"position":[[0,2]]},"1736":{"position":[[39,2]]},"1739":{"position":[[91,2]]},"1746":{"position":[[23,2],[68,2],[95,2]]},"1772":{"position":[[1088,2],[1736,2],[1874,2]]},"1787":{"position":[[12,2]]},"1789":{"position":[[7,2]]},"1791":{"position":[[15,2]]},"1793":{"position":[[16,2]]},"1797":{"position":[[97,2]]},"1826":{"position":[[61,2]]},"1842":{"position":[[2,2],[31,2]]},"1850":{"position":[[331,2]]},"1853":{"position":[[389,2],[437,2]]},"1868":{"position":[[10,2]]},"1937":{"position":[[30,2]]}}}],["可扩展性",{"_index":639,"t":{"1127":{"position":[[100,4]]},"1279":{"position":[[76,4]]},"1405":{"position":[[100,4]]},"1654":{"position":[[76,4]]}}}],["可用",{"_index":1182,"t":{"1444":{"position":[[86,2]]}}}],["可维护性",{"_index":549,"t":{"1082":{"position":[[87,4]]},"1285":{"position":[[2,4]]},"1559":{"position":[[2,4]]}}}],["可能",{"_index":364,"t":{"991":{"position":[[137,2]]},"1094":{"position":[[211,2]]},"1098":{"position":[[81,2]]},"1287":{"position":[[16,2]]},"1444":{"position":[[24,2],[48,2],[112,2]]},"1561":{"position":[[16,2]]},"1619":{"position":[[109,2]]},"1634":{"position":[[67,2]]},"1739":{"position":[[124,2]]},"1784":{"position":[[372,2],[639,2],[1133,2]]},"1795":{"position":[[200,2]]},"1853":{"position":[[373,2]]}}}],["可能性",{"_index":1097,"t":{"1359":{"position":[[35,3]]}}}],["可见",{"_index":1351,"t":{"1777":{"position":[[71,2]]}}}],["可读性",{"_index":1286,"t":{"1717":{"position":[[2,3]]}}}],["可靠",{"_index":1254,"t":{"1682":{"position":[[432,2]]}}}],["可靠性",{"_index":478,"t":{"1064":{"position":[[76,3]]},"1388":{"position":[[76,3]]},"1444":{"position":[[234,3]]},"1736":{"position":[[75,3]]}}}],["台阶式",{"_index":205,"t":{"987":{"position":[[282,3]]}}}],["号",{"_index":436,"t":{"1034":{"position":[[14,1]]},"1932":{"position":[[15,1]]},"1937":{"position":[[23,1]]}}}],["司法独立",{"_index":34,"t":{"983":{"position":[[53,4]]}}}],["各种",{"_index":1248,"t":{"1677":{"position":[[34,2]]}}}],["合并",{"_index":582,"t":{"1096":{"position":[[82,2]]}}}],["合法",{"_index":1296,"t":{"1728":{"position":[[29,2],[127,2],[282,2],[302,2],[410,2],[427,2]]}}}],["合理",{"_index":623,"t":{"1127":{"position":[[30,2]]},"1306":{"position":[[66,2]]},"1405":{"position":[[30,2]]},"1444":{"position":[[205,2]]},"1580":{"position":[[66,2]]},"1719":{"position":[[75,2]]}}}],["合适",{"_index":1268,"t":{"1699":{"position":[[129,2]]}}}],["同一",{"_index":553,"t":{"1084":{"position":[[22,2],[62,2]]},"1642":{"position":[[131,2]]},"1800":{"position":[[47,2]]},"1821":{"position":[[149,2]]}}}],["同一个",{"_index":1000,"t":{"1290":{"position":[[545,3]]},"1383":{"position":[[207,3]]},"1564":{"position":[[545,3]]}}}],["同时",{"_index":181,"t":{"987":{"position":[[201,2]]},"1335":{"position":[[114,2]]},"1857":{"position":[[125,2]]}}}],["同样",{"_index":346,"t":{"991":{"position":[[71,2]]}}}],["同步",{"_index":906,"t":{"1270":{"position":[[174,2],[1223,2]]},"1367":{"position":[[17,2]]},"1630":{"position":[[377,2]]},"1632":{"position":[[26,2],[45,2]]},"1645":{"position":[[174,2],[1223,2]]}}}],["同步操作",{"_index":905,"t":{"1270":{"position":[[28,4]]},"1645":{"position":[[28,4]]}}}],["名",{"_index":790,"t":{"1182":{"position":[[32,1]]},"1504":{"position":[[32,1]]},"1850":{"position":[[328,1]]}}}],["名声",{"_index":372,"t":{"991":{"position":[[167,2]]}}}],["名字",{"_index":1240,"t":{"1662":{"position":[[157,2]]},"1664":{"position":[[152,2]]},"1666":{"position":[[213,2]]},"1668":{"position":[[156,2]]},"1675":{"position":[[200,2]]}}}],["名将",{"_index":352,"t":{"991":{"position":[[85,2]]}}}],["名称",{"_index":783,"t":{"1175":{"position":[[15,2],[197,2]]},"1302":{"position":[[45,2]]},"1485":{"position":[[15,2],[197,2]]},"1576":{"position":[[45,2]]}}}],["后台",{"_index":907,"t":{"1270":{"position":[[768,2],[1117,2]]},"1275":{"position":[[514,2],[1241,2]]},"1645":{"position":[[768,2],[1117,2]]},"1650":{"position":[[514,2],[1241,2]]}}}],["后来居上",{"_index":29,"t":{"983":{"position":[[36,4]]}}}],["后缀",{"_index":431,"t":{"1027":{"position":[[8,2]]},"1038":{"position":[[75,2],[147,2]]}}}],["后面",{"_index":555,"t":{"1084":{"position":[[31,2]]},"1087":{"position":[[112,2]]},"1098":{"position":[[24,2]]},"1838":{"position":[[51,2]]}}}],["向量",{"_index":1478,"t":{"1850":{"position":[[202,2]]}}}],["吞吐量",{"_index":1434,"t":{"1819":{"position":[[313,3]]}}}],["否则",{"_index":1076,"t":{"1345":{"position":[[466,2]]},"1638":{"position":[[97,2]]}}}],["含",{"_index":972,"t":{"1279":{"position":[[821,1]]},"1654":{"position":[[821,1]]}}}],["启动",{"_index":513,"t":{"1069":{"position":[[807,2]]},"1073":{"position":[[274,2],[342,2]]},"1175":{"position":[[784,2]]},"1185":{"position":[[1080,2]]},"1265":{"position":[[263,2]]},"1270":{"position":[[529,2]]},"1275":{"position":[[432,2]]},"1277":{"position":[[509,2]]},"1279":{"position":[[1942,2]]},"1333":{"position":[[348,2],[446,2]]},"1361":{"position":[[184,2],[335,2]]},"1363":{"position":[[149,2],[246,2]]},"1367":{"position":[[377,2]]},"1393":{"position":[[807,2]]},"1397":{"position":[[274,2],[342,2]]},"1485":{"position":[[784,2]]},"1507":{"position":[[1080,2]]},"1614":{"position":[[263,2]]},"1645":{"position":[[529,2]]},"1650":{"position":[[432,2]]},"1652":{"position":[[509,2]]},"1654":{"position":[[1942,2]]},"1777":{"position":[[170,2]]},"1780":{"position":[[60,2]]},"1784":{"position":[[1058,2]]},"1787":{"position":[[5,2]]},"1803":{"position":[[864,2]]},"1808":{"position":[[1042,2]]},"1838":{"position":[[2,2],[39,2]]},"1842":{"position":[[33,2]]}}}],["启用",{"_index":1032,"t":{"1309":{"position":[[298,2]]}}}],["告别",{"_index":1243,"t":{"1666":{"position":[[290,2],[331,2]]}}}],["命令",{"_index":404,"t":{"999":{"position":[[16,2]]},"1087":{"position":[[159,2]]},"1145":{"position":[[7609,2]]},"1279":{"position":[[18,2],[54,2],[85,2],[120,2],[135,2],[179,2],[220,2],[255,2],[266,2],[296,2],[331,2],[389,2],[439,2],[1035,2],[1143,2],[2135,2],[2960,2],[3015,2],[3226,2],[3697,2],[3979,2],[4621,2],[5036,2],[6317,2]]},"1323":{"position":[[22,2]]},"1333":{"position":[[353,2],[451,2],[548,2]]},"1335":{"position":[[48,2],[72,2]]},"1423":{"position":[[7609,2]]},"1654":{"position":[[18,2],[54,2],[85,2],[120,2],[135,2],[179,2],[220,2],[255,2],[266,2],[296,2],[331,2],[389,2],[439,2],[1035,2],[1143,2],[2135,2],[2960,2],[3015,2],[3226,2],[3697,2],[3979,2],[4621,2],[5036,2],[6317,2]]},"1657":{"position":[[57,2]]},"1666":{"position":[[113,2],[128,2],[251,2]]},"1679":{"position":[[5,2]]},"1775":{"position":[[17,2]]},"1777":{"position":[[10,2],[136,2],[153,2],[162,2]]},"1780":{"position":[[31,2]]},"1784":{"position":[[370,2],[481,2],[1096,2],[1109,2]]},"1838":{"position":[[90,2]]},"1844":{"position":[[0,2]]},"1846":{"position":[[9,2]]},"1853":{"position":[[21,2],[73,2]]},"1855":{"position":[[20,2],[69,2]]},"1861":{"position":[[14,2]]},"1863":{"position":[[34,2]]},"1934":{"position":[[15,2],[72,2],[152,2]]}}}],["命令行",{"_index":1237,"t":{"1657":{"position":[[15,3]]},"1677":{"position":[[23,3]]},"1679":{"position":[[62,3]]},"1784":{"position":[[978,3]]}}}],["哈哈镜",{"_index":327,"t":{"991":{"position":[[7,3]]}}}],["哈希",{"_index":1058,"t":{"1338":{"position":[[15,2]]},"1343":{"position":[[119,2],[408,2],[499,2]]},"1345":{"position":[[195,2],[447,2]]},"1347":{"position":[[11,2]]},"1349":{"position":[[2,2],[199,2],[245,2],[486,2]]},"1351":{"position":[[42,2],[54,2]]},"1353":{"position":[[32,2],[92,2],[135,2],[434,2]]}}}],["响应",{"_index":609,"t":{"1119":{"position":[[21,2],[96,2]]},"1121":{"position":[[136,2]]},"1155":{"position":[[291,2]]},"1270":{"position":[[515,2],[710,2],[1233,2]]},"1275":{"position":[[704,2]]},"1277":{"position":[[62,2],[155,2],[178,2],[1147,2]]},"1279":{"position":[[2930,2],[3031,2]]},"1449":{"position":[[21,2],[96,2]]},"1451":{"position":[[136,2]]},"1495":{"position":[[291,2]]},"1645":{"position":[[515,2],[710,2],[1233,2]]},"1650":{"position":[[704,2]]},"1652":{"position":[[62,2],[155,2],[178,2],[1147,2]]},"1654":{"position":[[2930,2],[3031,2]]},"1813":{"position":[[358,2]]},"1815":{"position":[[251,2],[334,2]]}}}],["哪个",{"_index":1108,"t":{"1363":{"position":[[587,2]]}}}],["哲学",{"_index":1099,"t":{"1359":{"position":[[49,2]]}}}],["唏嘘",{"_index":302,"t":{"989":{"position":[[57,2]]}}}],["唤醒",{"_index":1126,"t":{"1371":{"position":[[588,2]]}}}],["唯一",{"_index":260,"t":{"987":{"position":[[517,2]]},"1084":{"position":[[15,2]]},"1096":{"position":[[26,2]]},"1098":{"position":[[10,2]]}}}],["善",{"_index":250,"t":{"987":{"position":[[483,1]]}}}],["善良",{"_index":122,"t":{"985":{"position":[[104,2]]}}}],["器",{"_index":690,"t":{"1133":{"position":[[150,1]]},"1139":{"position":[[52,1]]},"1261":{"position":[[270,1]]},"1265":{"position":[[24,1],[71,1],[155,1],[357,1],[423,1]]},"1275":{"position":[[286,1]]},"1277":{"position":[[374,1]]},"1411":{"position":[[150,1]]},"1417":{"position":[[52,1]]},"1431":{"position":[[127,1]]},"1610":{"position":[[270,1]]},"1614":{"position":[[24,1],[71,1],[155,1],[357,1],[423,1]]},"1650":{"position":[[286,1]]},"1652":{"position":[[374,1]]}}}],["四个",{"_index":1528,"t":{"1934":{"position":[[156,2]]}}}],["回",{"_index":618,"t":{"1119":{"position":[[95,1]]},"1277":{"position":[[1057,1]]},"1449":{"position":[[95,1]]},"1652":{"position":[[1057,1]]},"1800":{"position":[[76,1]]}}}],["回去",{"_index":613,"t":{"1119":{"position":[[57,2]]},"1449":{"position":[[57,2]]}}}],["回复",{"_index":756,"t":{"1155":{"position":[[97,2],[312,2]]},"1270":{"position":[[1266,2]]},"1495":{"position":[[97,2],[312,2]]},"1645":{"position":[[1266,2]]}}}],["回应",{"_index":621,"t":{"1123":{"position":[[285,2]]},"1157":{"position":[[494,2]]},"1453":{"position":[[285,2]]},"1497":{"position":[[494,2]]}}}],["回报",{"_index":235,"t":{"987":{"position":[[406,2]]}}}],["回收",{"_index":1150,"t":{"1431":{"position":[[4,2],[29,2],[125,2]]},"1938":{"position":[[25,2]]},"1940":{"position":[[171,2]]}}}],["因为",{"_index":1358,"t":{"1784":{"position":[[378,2],[508,2]]},"1911":{"position":[[52,2]]},"1928":{"position":[[52,2]]},"1934":{"position":[[163,2]]}}}],["因子",{"_index":1074,"t":{"1343":{"position":[[521,2]]},"1349":{"position":[[476,2]]},"1353":{"position":[[155,2]]}}}],["因此",{"_index":83,"t":{"983":{"position":[[201,2]]},"1087":{"position":[[145,2]]},"1795":{"position":[[250,2]]}}}],["困局",{"_index":227,"t":{"987":{"position":[[365,2]]}}}],["困难",{"_index":990,"t":{"1287":{"position":[[29,2]]},"1561":{"position":[[29,2]]}}}],["固定",{"_index":502,"t":{"1069":{"position":[[91,2]]},"1139":{"position":[[31,2]]},"1155":{"position":[[454,2]]},"1175":{"position":[[72,2]]},"1393":{"position":[[91,2]]},"1417":{"position":[[31,2]]},"1485":{"position":[[72,2]]},"1495":{"position":[[454,2]]}}}],["圣人",{"_index":249,"t":{"987":{"position":[[477,2],[505,2]]}}}],["在于",{"_index":33,"t":{"983":{"position":[[50,2]]},"987":{"position":[[563,2]]}}}],["地",{"_index":91,"t":{"983":{"position":[[226,1]]},"1082":{"position":[[72,1]]},"1279":{"position":[[132,1]]},"1654":{"position":[[132,1]]}}}],["地区",{"_index":56,"t":{"983":{"position":[[114,2]]}}}],["地址",{"_index":469,"t":{"1064":{"position":[[28,2]]},"1105":{"position":[[143,2]]},"1388":{"position":[[28,2]]},"1462":{"position":[[143,2]]},"1728":{"position":[[291,2],[311,2]]}}}],["场景",{"_index":532,"t":{"1079":{"position":[[85,2],[104,2]]},"1089":{"position":[[160,2]]},"1094":{"position":[[185,2]]},"1096":{"position":[[2,2]]},"1285":{"position":[[89,2]]},"1335":{"position":[[205,2]]},"1351":{"position":[[0,2]]},"1363":{"position":[[681,2]]},"1371":{"position":[[26,2]]},"1383":{"position":[[5,2]]},"1403":{"position":[[85,2],[104,2]]},"1559":{"position":[[89,2]]},"1628":{"position":[[31,2]]},"1632":{"position":[[30,2]]},"1687":{"position":[[42,2]]},"1697":{"position":[[4,2]]},"1702":{"position":[[101,2]]},"1736":{"position":[[36,2]]},"1739":{"position":[[118,2],[227,2]]},"1775":{"position":[[102,2]]},"1795":{"position":[[261,2]]},"1911":{"position":[[145,2]]},"1928":{"position":[[145,2]]}}}],["均衡",{"_index":161,"t":{"987":{"position":[[137,2]]}}}],["坚信",{"_index":199,"t":{"987":{"position":[[252,2]]}}}],["垃圾",{"_index":1149,"t":{"1431":{"position":[[2,2],[27,2],[123,2]]}}}],["型",{"_index":978,"t":{"1279":{"position":[[3696,1],[3978,1],[5610,1]]},"1654":{"position":[[3696,1],[3978,1],[5610,1]]}}}],["型式",{"_index":975,"t":{"1279":{"position":[[2928,2]]},"1654":{"position":[[2928,2]]}}}],["培训",{"_index":1320,"t":{"1739":{"position":[[154,2]]},"1823":{"position":[[127,2]]}}}],["基",{"_index":834,"t":{"1229":{"position":[[216,1]]},"1551":{"position":[[216,1]]}}}],["基于",{"_index":527,"t":{"1077":{"position":[[82,2]]},"1292":{"position":[[680,2]]},"1401":{"position":[[82,2]]},"1566":{"position":[[680,2]]},"1823":{"position":[[160,2]]}}}],["基本",{"_index":62,"t":{"983":{"position":[[136,2]]},"1064":{"position":[[15,2]]},"1388":{"position":[[15,2]]},"1819":{"position":[[53,2]]}}}],["基础",{"_index":872,"t":{"1236":{"position":[[67,2]]},"1279":{"position":[[1141,2]]},"1306":{"position":[[16,2]]},"1580":{"position":[[16,2]]},"1585":{"position":[[67,2]]},"1654":{"position":[[1141,2]]},"1789":{"position":[[46,2]]}}}],["基类",{"_index":837,"t":{"1229":{"position":[[227,2]]},"1551":{"position":[[227,2]]}}}],["堆",{"_index":1170,"t":{"1431":{"position":[[542,1]]}}}],["堆栈",{"_index":1174,"t":{"1433":{"position":[[74,2],[139,2],[165,2],[188,2],[539,2],[640,2]]},"1440":{"position":[[138,2]]}}}],["塑造",{"_index":242,"t":{"987":{"position":[[446,2]]}}}],["增加",{"_index":272,"t":{"987":{"position":[[569,2]]},"1077":{"position":[[45,2]]},"1100":{"position":[[43,2]]},"1105":{"position":[[2,2],[100,2],[139,2]]},"1107":{"position":[[0,2],[42,2]]},"1121":{"position":[[2,2],[134,2],[170,2],[396,2]]},"1123":{"position":[[2,2],[405,2]]},"1155":{"position":[[289,2]]},"1167":{"position":[[1185,2]]},"1175":{"position":[[379,2],[793,2]]},"1177":{"position":[[2,2]]},"1185":{"position":[[675,2],[1089,2]]},"1194":{"position":[[5,2]]},"1217":{"position":[[178,2]]},"1219":{"position":[[248,2]]},"1223":{"position":[[184,2]]},"1367":{"position":[[351,2],[452,2]]},"1401":{"position":[[45,2]]},"1451":{"position":[[2,2],[134,2],[170,2],[396,2]]},"1453":{"position":[[2,2],[405,2]]},"1457":{"position":[[43,2]]},"1462":{"position":[[2,2],[100,2],[139,2]]},"1464":{"position":[[0,2],[42,2]]},"1477":{"position":[[1185,2]]},"1485":{"position":[[379,2],[793,2]]},"1487":{"position":[[2,2]]},"1495":{"position":[[289,2]]},"1507":{"position":[[675,2],[1089,2]]},"1516":{"position":[[5,2]]},"1539":{"position":[[178,2]]},"1541":{"position":[[248,2]]},"1545":{"position":[[184,2]]},"1626":{"position":[[39,2]]},"1632":{"position":[[19,2]]},"1746":{"position":[[97,2]]}}}],["增大",{"_index":1288,"t":{"1717":{"position":[[12,2]]}}}],["增强",{"_index":950,"t":{"1277":{"position":[[124,2]]},"1285":{"position":[[52,2]]},"1559":{"position":[[52,2]]},"1652":{"position":[[124,2]]}}}],["增长",{"_index":215,"t":{"987":{"position":[[320,2],[439,2],[614,2]]},"1431":{"position":[[150,2]]}}}],["声明",{"_index":964,"t":{"1279":{"position":[[194,2]]},"1654":{"position":[[194,2]]}}}],["处",{"_index":1511,"t":{"1884":{"position":[[3,1]]}}}],["处在",{"_index":1490,"t":{"1853":{"position":[[362,2]]}}}],["处理",{"_index":518,"t":{"1069":{"position":[[1278,2]]},"1105":{"position":[[6,2],[104,2]]},"1131":{"position":[[865,2],[906,2],[1535,2],[1576,2]]},"1143":{"position":[[3,2]]},"1155":{"position":[[378,2],[591,2],[608,2],[1163,2]]},"1161":{"position":[[307,2]]},"1167":{"position":[[1203,2],[1223,2],[1240,2],[1838,2]]},"1270":{"position":[[1250,2],[1335,2]]},"1275":{"position":[[1243,2]]},"1279":{"position":[[58,2],[162,2],[431,2],[1944,2]]},"1290":{"position":[[473,2]]},"1292":{"position":[[285,2]]},"1331":{"position":[[972,2]]},"1365":{"position":[[27,2]]},"1393":{"position":[[1278,2]]},"1409":{"position":[[865,2],[906,2],[1535,2],[1576,2]]},"1421":{"position":[[3,2]]},"1462":{"position":[[6,2],[104,2]]},"1477":{"position":[[1203,2],[1223,2],[1240,2],[1838,2]]},"1495":{"position":[[378,2],[591,2],[608,2],[1163,2]]},"1501":{"position":[[307,2]]},"1564":{"position":[[473,2]]},"1566":{"position":[[285,2]]},"1628":{"position":[[13,2]]},"1645":{"position":[[1250,2],[1335,2]]},"1650":{"position":[[1243,2]]},"1654":{"position":[[58,2],[162,2],[431,2],[1944,2]]},"1699":{"position":[[143,2]]},"1702":{"position":[[105,2]]},"1739":{"position":[[93,2],[149,2]]},"1770":{"position":[[37,2],[52,2]]},"1772":{"position":[[1082,2]]},"1819":{"position":[[112,2]]}}}],["处理事件",{"_index":601,"t":{"1105":{"position":[[307,4]]},"1155":{"position":[[386,4]]},"1462":{"position":[[307,4]]},"1495":{"position":[[386,4]]}}}],["处理器",{"_index":676,"t":{"1131":{"position":[[1417,3]]},"1239":{"position":[[374,3]]},"1246":{"position":[[79,3]]},"1279":{"position":[[257,3],[3228,3]]},"1409":{"position":[[1417,3]]},"1588":{"position":[[374,3]]},"1595":{"position":[[79,3]]},"1654":{"position":[[257,3],[3228,3]]}}}],["处理结果",{"_index":610,"t":{"1119":{"position":[[44,4]]},"1449":{"position":[[44,4]]}}}],["处理错误",{"_index":1335,"t":{"1770":{"position":[[2,4]]}}}],["复制",{"_index":116,"t":{"985":{"position":[[70,2]]},"1784":{"position":[[1137,2]]}}}],["复杂",{"_index":286,"t":{"989":{"position":[[6,2]]},"1077":{"position":[[73,2]]},"1079":{"position":[[102,2]]},"1401":{"position":[[73,2]]},"1403":{"position":[[102,2]]},"1679":{"position":[[59,2]]},"1695":{"position":[[57,2]]},"1697":{"position":[[193,2]]},"1739":{"position":[[114,2]]}}}],["复杂度",{"_index":982,"t":{"1285":{"position":[[28,3]]},"1559":{"position":[[28,3]]},"1632":{"position":[[21,3]]}}}],["复杂性",{"_index":854,"t":{"1231":{"position":[[43,3],[213,3]]},"1304":{"position":[[32,3]]},"1553":{"position":[[43,3],[213,3]]},"1578":{"position":[[32,3]]}}}],["复用",{"_index":987,"t":{"1285":{"position":[[74,2],[93,2]]},"1287":{"position":[[34,2]]},"1559":{"position":[[74,2],[93,2]]},"1561":{"position":[[34,2]]}}}],["外置",{"_index":695,"t":{"1135":{"position":[[21,2]]},"1413":{"position":[[21,2]]}}}],["外部命令",{"_index":1041,"t":{"1312":{"position":[[14,4]]},"1314":{"position":[[21,4]]},"1335":{"position":[[20,4],[200,4]]}}}],["多",{"_index":307,"t":{"989":{"position":[[87,1]]},"991":{"position":[[87,1]]},"1096":{"position":[[69,1]]},"1139":{"position":[[76,1]]},"1207":{"position":[[80,1]]},"1270":{"position":[[1285,1]]},"1285":{"position":[[88,1]]},"1290":{"position":[[27,1]]},"1299":{"position":[[13,1]]},"1355":{"position":[[11,1]]},"1417":{"position":[[76,1]]},"1431":{"position":[[218,1]]},"1444":{"position":[[57,1]]},"1529":{"position":[[80,1]]},"1559":{"position":[[88,1]]},"1564":{"position":[[27,1]]},"1573":{"position":[[13,1]]},"1645":{"position":[[1285,1]]},"1728":{"position":[[498,1]]},"1784":{"position":[[950,1]]}}}],["多个",{"_index":558,"t":{"1084":{"position":[[55,2],[69,2]]},"1094":{"position":[[215,2],[229,2]]},"1098":{"position":[[84,2]]},"1259":{"position":[[21,2]]},"1299":{"position":[[126,2]]},"1363":{"position":[[12,2],[354,2],[686,2]]},"1365":{"position":[[17,2]]},"1367":{"position":[[2,2]]},"1369":{"position":[[1,2],[445,2]]},"1371":{"position":[[31,2]]},"1373":{"position":[[17,2]]},"1377":{"position":[[334,2]]},"1379":{"position":[[21,2]]},"1383":{"position":[[43,2],[192,2],[285,2],[415,2]]},"1573":{"position":[[126,2]]},"1608":{"position":[[21,2]]},"1672":{"position":[[159,2]]}}}],["多元",{"_index":8,"t":{"981":{"position":[[17,2]]}}}],["多少",{"_index":1128,"t":{"1373":{"position":[[394,2]]}}}],["多次",{"_index":554,"t":{"1084":{"position":[[28,2]]},"1094":{"position":[[167,2]]},"1098":{"position":[[47,2]]}}}],["多用户",{"_index":1378,"t":{"1784":{"position":[[946,3]]}}}],["多种",{"_index":946,"t":{"1277":{"position":[[101,2]]},"1279":{"position":[[705,2]]},"1429":{"position":[[43,2]]},"1652":{"position":[[101,2]]},"1654":{"position":[[705,2]]}}}],["多线程",{"_index":1461,"t":{"1830":{"position":[[60,3],[67,3]]},"1879":{"position":[[1,3]]}}}],["大",{"_index":17,"t":{"983":{"position":[[0,1]]},"987":{"position":[[49,1]]},"1064":{"position":[[104,1],[135,1]]},"1229":{"position":[[304,1]]},"1388":{"position":[[104,1],[135,1]]},"1431":{"position":[[204,1]]},"1551":{"position":[[304,1]]},"1682":{"position":[[474,1]]},"1695":{"position":[[9,1]]},"1697":{"position":[[166,1]]},"1699":{"position":[[60,1]]},"1770":{"position":[[45,1]]}}}],["大不相同",{"_index":305,"t":{"989":{"position":[[65,4]]}}}],["大于",{"_index":1298,"t":{"1728":{"position":[[43,2]]}}}],["大写",{"_index":1304,"t":{"1728":{"position":[[271,2]]}}}],["大多",{"_index":289,"t":{"989":{"position":[[15,2]]}}}],["大多数",{"_index":125,"t":{"987":{"position":[[1,3]]},"1911":{"position":[[142,3]]},"1928":{"position":[[142,3]]}}}],["大小",{"_index":1176,"t":{"1433":{"position":[[190,2]]}}}],["大括号",{"_index":1236,"t":{"1642":{"position":[[121,3]]}}}],["大规模",{"_index":633,"t":{"1127":{"position":[[74,3]]},"1405":{"position":[[74,3]]}}}],["大部分",{"_index":1317,"t":{"1739":{"position":[[95,3]]}}}],["大顺军",{"_index":341,"t":{"991":{"position":[[58,3]]}}}],["天然",{"_index":727,"t":{"1145":{"position":[[1988,2]]},"1423":{"position":[[1988,2]]}}}],["太",{"_index":994,"t":{"1290":{"position":[[26,1]]},"1299":{"position":[[12,1]]},"1564":{"position":[[26,1]]},"1573":{"position":[[12,1]]}}}],["失效",{"_index":1357,"t":{"1784":{"position":[[375,2]]}}}],["失败",{"_index":385,"t":{"991":{"position":[[223,2]]},"1634":{"position":[[80,2]]},"1803":{"position":[[213,2],[316,2],[471,2]]},"1808":{"position":[[240,2],[343,2],[494,2]]},"1901":{"position":[[177,2],[301,2]]},"1903":{"position":[[197,2]]},"1907":{"position":[[186,2],[384,2]]},"1918":{"position":[[177,2],[301,2]]},"1920":{"position":[[197,2]]},"1924":{"position":[[186,2],[384,2]]},"1937":{"position":[[200,2]]},"1938":{"position":[[177,2]]}}}],["奉",{"_index":259,"t":{"987":{"position":[[515,1]]}}}],["套",{"_index":1028,"t":{"1309":{"position":[[187,1]]}}}],["奴隶",{"_index":360,"t":{"991":{"position":[[120,2]]}}}],["好帮手",{"_index":1017,"t":{"1306":{"position":[[62,3]]},"1580":{"position":[[62,3]]}}}],["好景不长",{"_index":27,"t":{"983":{"position":[[29,4]]}}}],["如下",{"_index":1021,"t":{"1309":{"position":[[2,2],[167,2]]},"1353":{"position":[[140,2]]},"1435":{"position":[[459,2]]},"1634":{"position":[[4,2],[89,2]]}}}],["如今",{"_index":303,"t":{"989":{"position":[[60,2]]},"1828":{"position":[[91,2]]}}}],["如何",{"_index":1322,"t":{"1739":{"position":[[162,2]]},"1819":{"position":[[4,2],[110,2],[219,2],[293,2]]}}}],["如同",{"_index":111,"t":{"985":{"position":[[56,2]]},"991":{"position":[[3,2]]}}}],["如果",{"_index":75,"t":{"983":{"position":[[177,2]]},"1084":{"position":[[20,2]]},"1098":{"position":[[15,2],[69,2]]},"1131":{"position":[[1740,2]]},"1217":{"position":[[188,2],[299,2]]},"1273":{"position":[[112,2],[202,2]]},"1345":{"position":[[452,2]]},"1349":{"position":[[0,2],[207,2],[472,2]]},"1363":{"position":[[617,2]]},"1367":{"position":[[0,2]]},"1383":{"position":[[144,2],[189,2],[228,2],[334,2],[371,2]]},"1409":{"position":[[1740,2]]},"1539":{"position":[[188,2],[299,2]]},"1648":{"position":[[112,2],[202,2]]},"1679":{"position":[[53,2]]},"1777":{"position":[[156,2]]},"1784":{"position":[[356,2],[463,2],[842,2],[1038,2]]},"1793":{"position":[[0,2]]},"1795":{"position":[[183,2]]}}}],["妥善",{"_index":1446,"t":{"1823":{"position":[[69,2]]}}}],["始终",{"_index":1334,"t":{"1770":{"position":[[0,2]]}}}],["婚姻",{"_index":288,"t":{"989":{"position":[[13,2],[39,2]]}}}],["媒妁之言",{"_index":292,"t":{"989":{"position":[[23,4]]}}}],["子",{"_index":833,"t":{"1229":{"position":[[204,1]]},"1551":{"position":[[204,1]]},"1657":{"position":[[56,1]]},"1666":{"position":[[112,1],[127,1],[250,1]]},"1679":{"position":[[4,1]]},"1853":{"position":[[151,1],[364,1]]},"1903":{"position":[[8,1]]},"1920":{"position":[[8,1]]},"1937":{"position":[[174,1],[272,1],[351,1],[431,1]]},"1938":{"position":[[12,1],[27,1],[151,1],[249,1],[325,1],[396,1],[540,1]]},"1940":{"position":[[179,1],[472,1],[568,1],[580,1],[625,1],[643,1],[733,1]]}}}],["子串",{"_index":1302,"t":{"1728":{"position":[[197,2],[596,2]]}}}],["字",{"_index":702,"t":{"1137":{"position":[[58,1]]},"1141":{"position":[[151,1]]},"1257":{"position":[[208,1]]},"1415":{"position":[[58,1]]},"1419":{"position":[[151,1]]},"1606":{"position":[[208,1]]},"1626":{"position":[[50,1],[61,1]]},"1702":{"position":[[224,1],[240,1]]},"1713":{"position":[[3,1],[275,1]]},"1719":{"position":[[90,1]]},"1722":{"position":[[35,1]]},"1728":{"position":[[17,1],[612,1]]},"1739":{"position":[[134,1]]},"1770":{"position":[[13,1]]},"1934":{"position":[[102,1],[111,1]]}}}],["字母",{"_index":1301,"t":{"1728":{"position":[[161,2],[176,2]]}}}],["字符",{"_index":1309,"t":{"1728":{"position":[[456,2],[483,2],[501,2],[539,2],[575,2]]}}}],["字符串",{"_index":422,"t":{"1018":{"position":[[2,3]]},"1041":{"position":[[1,3]]},"1048":{"position":[[2,3]]},"1055":{"position":[[2,3]]},"1155":{"position":[[380,3]]},"1167":{"position":[[231,3]]},"1331":{"position":[[975,3]]},"1477":{"position":[[231,3]]},"1495":{"position":[[380,3]]},"1728":{"position":[[69,3],[90,3],[436,3]]},"1730":{"position":[[14,3]]}}}],["字节",{"_index":802,"t":{"1197":{"position":[[307,2]]},"1201":{"position":[[72,2]]},"1210":{"position":[[71,2]]},"1519":{"position":[[307,2]]},"1523":{"position":[[72,2]]},"1532":{"position":[[71,2]]},"1728":{"position":[[499,2]]}}}],["存储",{"_index":784,"t":{"1175":{"position":[[320,2]]},"1210":{"position":[[0,2]]},"1223":{"position":[[188,2]]},"1253":{"position":[[38,2]]},"1292":{"position":[[5,2]]},"1345":{"position":[[192,2]]},"1347":{"position":[[14,2]]},"1351":{"position":[[10,2]]},"1353":{"position":[[125,2]]},"1485":{"position":[[320,2]]},"1532":{"position":[[0,2]]},"1545":{"position":[[188,2]]},"1566":{"position":[[5,2]]},"1602":{"position":[[38,2]]},"1713":{"position":[[17,2]]},"1772":{"position":[[938,2],[1113,2]]},"1784":{"position":[[912,2]]}}}],["存储用户",{"_index":1060,"t":{"1338":{"position":[[23,4]]},"1351":{"position":[[15,4]]}}}],["存在",{"_index":65,"t":{"983":{"position":[[148,2]]},"991":{"position":[[240,2]]},"1082":{"position":[[50,2]]},"1306":{"position":[[104,2]]},"1580":{"position":[[104,2]]}}}],["孤儿",{"_index":1519,"t":{"1932":{"position":[[0,2]]}}}],["孤儿院",{"_index":1531,"t":{"1937":{"position":[[24,3]]}}}],["孩子",{"_index":295,"t":{"989":{"position":[[33,2],[76,2],[83,2],[130,2]]}}}],["它们",{"_index":541,"t":{"1082":{"position":[[45,2],[59,2]]},"1229":{"position":[[213,2],[294,2]]},"1551":{"position":[[213,2],[294,2]]},"1784":{"position":[[338,2],[380,2],[510,2]]}}}],["安全",{"_index":54,"t":{"983":{"position":[[108,2]]},"1147":{"position":[[111,2]]},"1149":{"position":[[39,2]]},"1275":{"position":[[8,2],[132,2]]},"1279":{"position":[[3025,2]]},"1338":{"position":[[10,2]]},"1343":{"position":[[488,2]]},"1351":{"position":[[13,2]]},"1357":{"position":[[46,2]]},"1377":{"position":[[348,2]]},"1383":{"position":[[16,2],[178,2]]},"1425":{"position":[[111,2]]},"1427":{"position":[[39,2]]},"1650":{"position":[[8,2],[132,2]]},"1654":{"position":[[3025,2]]},"1797":{"position":[[68,2]]}}}],["安全性",{"_index":1395,"t":{"1795":{"position":[[43,3],[129,3],[255,3]]},"1797":{"position":[[91,3],[118,3]]},"1800":{"position":[[127,3]]},"1821":{"position":[[193,3]]}}}],["安全措施",{"_index":1397,"t":{"1795":{"position":[[91,4]]}}}],["安装",{"_index":1067,"t":{"1340":{"position":[[22,2]]},"1685":{"position":[[0,2]]},"1689":{"position":[[0,2]]},"1693":{"position":[[0,2]]},"1784":{"position":[[1102,2],[1121,2]]},"1891":{"position":[[22,2]]},"1896":{"position":[[22,2]]}}}],["完全",{"_index":426,"t":{"1022":{"position":[[9,2]]},"1290":{"position":[[533,2]]},"1564":{"position":[[533,2]]},"1795":{"position":[[72,2]]}}}],["完成",{"_index":939,"t":{"1275":{"position":[[1245,2]]},"1333":{"position":[[550,2]]},"1361":{"position":[[104,2],[214,2]]},"1367":{"position":[[164,2],[260,2],[411,2],[431,2]]},"1630":{"position":[[389,2]]},"1650":{"position":[[1245,2]]},"1675":{"position":[[279,2]]},"1844":{"position":[[197,2]]}}}],["完整",{"_index":535,"t":{"1079":{"position":[[132,2]]},"1111":{"position":[[178,2]]},"1113":{"position":[[74,2]]},"1125":{"position":[[297,2]]},"1161":{"position":[[494,2]]},"1169":{"position":[[484,2]]},"1179":{"position":[[593,2]]},"1191":{"position":[[1409,2]]},"1203":{"position":[[999,2]]},"1225":{"position":[[995,2]]},"1403":{"position":[[132,2]]},"1455":{"position":[[297,2]]},"1468":{"position":[[178,2]]},"1470":{"position":[[74,2]]},"1479":{"position":[[484,2]]},"1489":{"position":[[593,2]]},"1501":{"position":[[494,2]]},"1513":{"position":[[1409,2]]},"1525":{"position":[[999,2]]},"1547":{"position":[[995,2]]}}}],["完毕",{"_index":1118,"t":{"1367":{"position":[[21,2],[549,2]]}}}],["完美",{"_index":1402,"t":{"1797":{"position":[[65,2]]}}}],["宏",{"_index":1487,"t":{"1850":{"position":[[393,1]]}}}],["宗教",{"_index":5,"t":{"981":{"position":[[11,2]]}}}],["官方",{"_index":1227,"t":{"1634":{"position":[[213,2]]},"1682":{"position":[[426,2]]},"1697":{"position":[[38,2]]},"1886":{"position":[[7,2]]},"1889":{"position":[[27,2]]},"1894":{"position":[[27,2]]},"1913":{"position":[[0,2]]},"1930":{"position":[[0,2]]}}}],["定义",{"_index":370,"t":{"991":{"position":[[156,2],[173,2]]},"1069":{"position":[[69,2],[332,2]]},"1082":{"position":[[31,2]]},"1084":{"position":[[13,2],[53,2]]},"1087":{"position":[[105,2]]},"1089":{"position":[[99,2],[190,2],[212,2]]},"1092":{"position":[[122,2]]},"1094":{"position":[[169,2],[247,2]]},"1098":{"position":[[21,2],[49,2]]},"1105":{"position":[[175,2]]},"1121":{"position":[[46,2]]},"1131":{"position":[[208,2]]},"1155":{"position":[[0,2],[91,2],[201,2],[432,2]]},"1167":{"position":[[0,2],[50,2],[333,2]]},"1175":{"position":[[0,2],[50,2],[249,2]]},"1257":{"position":[[6,2]]},"1261":{"position":[[14,2]]},"1279":{"position":[[183,2]]},"1393":{"position":[[69,2],[332,2]]},"1409":{"position":[[208,2]]},"1451":{"position":[[46,2]]},"1462":{"position":[[175,2]]},"1477":{"position":[[0,2],[50,2],[333,2]]},"1485":{"position":[[0,2],[50,2],[249,2]]},"1495":{"position":[[0,2],[91,2],[201,2],[432,2]]},"1606":{"position":[[6,2]]},"1610":{"position":[[14,2]]},"1642":{"position":[[13,2]]},"1654":{"position":[[183,2]]},"1662":{"position":[[45,2]]},"1666":{"position":[[125,2],[248,2]]},"1772":{"position":[[1740,2],[1788,2],[1878,2]]}}}],["定制",{"_index":1319,"t":{"1739":{"position":[[146,2]]}}}],["定时",{"_index":948,"t":{"1277":{"position":[[108,2]]},"1652":{"position":[[108,2]]}}}],["宝贵",{"_index":15,"t":{"981":{"position":[[47,2]]}}}],["实体",{"_index":174,"t":{"987":{"position":[[175,2]]},"1229":{"position":[[111,2]]},"1234":{"position":[[77,2]]},"1551":{"position":[[111,2]]},"1583":{"position":[[77,2]]}}}],["实例",{"_index":512,"t":{"1069":{"position":[[427,2]]},"1393":{"position":[[427,2]]},"1702":{"position":[[246,2],[259,2]]}}}],["实现",{"_index":69,"t":{"983":{"position":[[157,2]]},"1077":{"position":[[19,2]]},"1107":{"position":[[10,2],[52,2]]},"1117":{"position":[[20,2]]},"1123":{"position":[[415,2]]},"1129":{"position":[[3,2]]},"1131":{"position":[[24,2],[76,2],[87,2],[136,2],[287,2],[311,2],[462,2],[982,2]]},"1145":{"position":[[2019,2]]},"1147":{"position":[[6,2]]},"1177":{"position":[[8,2]]},"1185":{"position":[[321,2]]},"1187":{"position":[[150,2]]},"1197":{"position":[[15,2],[79,2],[250,2]]},"1199":{"position":[[0,2]]},"1217":{"position":[[293,2],[303,2]]},"1229":{"position":[[144,2]]},"1234":{"position":[[153,2]]},"1239":{"position":[[83,2],[234,2]]},"1244":{"position":[[77,2]]},"1257":{"position":[[127,2],[167,2],[511,2]]},"1263":{"position":[[16,2],[50,2]]},"1267":{"position":[[31,2]]},"1279":{"position":[[42,2],[153,2],[223,2],[709,2],[818,2]]},"1306":{"position":[[38,2],[56,2]]},"1355":{"position":[[39,2]]},"1401":{"position":[[19,2]]},"1407":{"position":[[3,2]]},"1409":{"position":[[24,2],[76,2],[87,2],[136,2],[287,2],[311,2],[462,2],[982,2]]},"1423":{"position":[[2019,2]]},"1425":{"position":[[6,2]]},"1447":{"position":[[20,2]]},"1453":{"position":[[415,2]]},"1464":{"position":[[10,2],[52,2]]},"1487":{"position":[[8,2]]},"1507":{"position":[[321,2]]},"1509":{"position":[[150,2]]},"1519":{"position":[[15,2],[79,2],[250,2]]},"1521":{"position":[[0,2]]},"1539":{"position":[[293,2],[303,2]]},"1551":{"position":[[144,2]]},"1580":{"position":[[38,2],[56,2]]},"1583":{"position":[[153,2]]},"1588":{"position":[[83,2],[234,2]]},"1593":{"position":[[77,2]]},"1606":{"position":[[127,2],[167,2],[511,2]]},"1612":{"position":[[16,2],[50,2]]},"1616":{"position":[[31,2]]},"1654":{"position":[[42,2],[153,2],[223,2],[709,2],[818,2]]},"1702":{"position":[[91,2]]},"1739":{"position":[[166,2],[206,2]]},"1746":{"position":[[2,2],[49,2],[90,2],[104,2]]},"1760":{"position":[[24,2]]},"1772":{"position":[[949,2],[1049,2],[1264,2],[1447,2],[1566,2],[2076,2]]},"1789":{"position":[[48,2]]},"1823":{"position":[[50,2],[158,2]]},"1861":{"position":[[26,2]]},"1882":{"position":[[15,2]]}}}],["实现目标",{"_index":976,"t":{"1279":{"position":[[2954,4]]},"1654":{"position":[[2954,4]]}}}],["实用功能",{"_index":1145,"t":{"1429":{"position":[[45,4]]}}}],["实践",{"_index":740,"t":{"1149":{"position":[[41,2]]},"1267":{"position":[[50,2]]},"1427":{"position":[[41,2]]},"1616":{"position":[[50,2]]}}}],["实际",{"_index":170,"t":{"987":{"position":[[166,2]]},"1279":{"position":[[381,2]]},"1654":{"position":[[381,2]]},"1708":{"position":[[361,2]]},"1772":{"position":[[2336,2]]}}}],["实际上",{"_index":1486,"t":{"1850":{"position":[[387,3]]}}}],["客户端",{"_index":840,"t":{"1229":{"position":[[285,3]]},"1551":{"position":[[285,3]]},"1819":{"position":[[223,3]]},"1823":{"position":[[96,3],[186,3]]}}}],["家庭",{"_index":284,"t":{"989":{"position":[[0,2]]}}}],["容器",{"_index":1387,"t":{"1789":{"position":[[40,2],[55,2]]},"1795":{"position":[[268,2]]},"1797":{"position":[[77,2]]},"1821":{"position":[[0,2],[27,2]]}}}],["容易",{"_index":986,"t":{"1285":{"position":[[67,2]]},"1559":{"position":[[67,2]]}}}],["寄存器",{"_index":1476,"t":{"1850":{"position":[[27,3],[56,3],[93,3],[124,3],[133,3],[168,3],[204,3],[240,3],[325,3],[340,3],[415,3]]}}}],["寄生",{"_index":106,"t":{"985":{"position":[[39,2]]}}}],["密不可分",{"_index":231,"t":{"987":{"position":[[383,4]]}}}],["密码",{"_index":1057,"t":{"1338":{"position":[[13,2],[27,2]]},"1343":{"position":[[410,2],[501,2]]},"1345":{"position":[[203,2],[441,2],[454,2]]},"1347":{"position":[[3,2]]},"1349":{"position":[[4,2],[247,2]]},"1351":{"position":[[8,2],[19,2],[29,2],[47,2]]},"1353":{"position":[[34,2],[72,2],[133,2],[438,2]]},"1772":{"position":[[870,2]]}}}],["密钥",{"_index":805,"t":{"1201":{"position":[[76,2]]},"1523":{"position":[[76,2]]}}}],["富足",{"_index":247,"t":{"987":{"position":[[468,2]]}}}],["对",{"_index":71,"t":{"983":{"position":[[164,1]]},"985":{"position":[[89,1]]},"987":{"position":[[0,1],[209,1]]},"989":{"position":[[35,1]]},"1229":{"position":[[125,1],[131,1]]},"1231":{"position":[[84,1]]},"1234":{"position":[[91,1],[97,1]]},"1236":{"position":[[0,1],[26,1]]},"1239":{"position":[[380,1]]},"1279":{"position":[[341,1]]},"1551":{"position":[[125,1],[131,1]]},"1553":{"position":[[84,1]]},"1583":{"position":[[91,1],[97,1]]},"1585":{"position":[[0,1],[26,1]]},"1588":{"position":[[380,1]]},"1654":{"position":[[341,1]]},"1739":{"position":[[128,1],[208,1]]},"1770":{"position":[[10,1],[44,1]]},"1772":{"position":[[1069,1]]}}}],["对于",{"_index":1014,"t":{"1304":{"position":[[0,2],[10,2]]},"1375":{"position":[[0,2]]},"1578":{"position":[[0,2],[10,2]]},"1784":{"position":[[756,2],[942,2],[963,2]]},"1795":{"position":[[252,2]]}}}],["对应",{"_index":1109,"t":{"1363":{"position":[[607,2]]},"1433":{"position":[[127,2]]},"1619":{"position":[[23,2]]},"1823":{"position":[[183,2]]}}}],["对比",{"_index":1252,"t":{"1682":{"position":[[417,2]]},"1819":{"position":[[291,2]]}}}],["对称",{"_index":804,"t":{"1201":{"position":[[74,2]]},"1523":{"position":[[74,2]]}}}],["对象",{"_index":850,"t":{"1231":{"position":[[13,2],[80,2],[87,2]]},"1279":{"position":[[90,2],[268,2],[334,2],[386,2],[391,2]]},"1553":{"position":[[13,2],[80,2],[87,2]]},"1654":{"position":[[90,2],[268,2],[334,2],[386,2],[391,2]]},"1746":{"position":[[28,2],[73,2]]},"1770":{"position":[[46,2]]}}}],["寻求",{"_index":87,"t":{"983":{"position":[[217,2]]}}}],["导入",{"_index":801,"t":{"1197":{"position":[[82,2],[2979,2]]},"1207":{"position":[[62,2]]},"1217":{"position":[[182,2],[274,2],[282,2]]},"1519":{"position":[[82,2],[2979,2]]},"1529":{"position":[[62,2]]},"1539":{"position":[[182,2],[274,2],[282,2]]}}}],["导出",{"_index":800,"t":{"1197":{"position":[[18,2]]},"1207":{"position":[[19,2]]},"1219":{"position":[[252,2]]},"1519":{"position":[[18,2]]},"1529":{"position":[[19,2]]},"1541":{"position":[[252,2]]}}}],["导致",{"_index":47,"t":{"983":{"position":[[93,2]]},"1275":{"position":[[91,2]]},"1304":{"position":[[26,2]]},"1309":{"position":[[468,2]]},"1444":{"position":[[50,2],[114,2]]},"1578":{"position":[[26,2]]},"1650":{"position":[[91,2]]}}}],["封装",{"_index":919,"t":{"1270":{"position":[[1297,2]]},"1275":{"position":[[102,2]]},"1279":{"position":[[87,2],[229,2],[448,2]]},"1645":{"position":[[1297,2]]},"1650":{"position":[[102,2]]},"1654":{"position":[[87,2],[229,2],[448,2]]}}}],["将",{"_index":319,"t":{"989":{"position":[[137,1]]},"991":{"position":[[95,1],[124,1],[153,1]]},"1004":{"position":[[7,1]]},"1119":{"position":[[43,1]]},"1135":{"position":[[3,1]]},"1229":{"position":[[303,1]]},"1231":{"position":[[151,1]]},"1270":{"position":[[1283,1]]},"1279":{"position":[[50,1],[84,1],[445,1]]},"1292":{"position":[[721,1]]},"1413":{"position":[[3,1]]},"1429":{"position":[[53,1]]},"1431":{"position":[[34,1],[106,1]]},"1449":{"position":[[43,1]]},"1551":{"position":[[303,1]]},"1553":{"position":[[151,1]]},"1566":{"position":[[721,1]]},"1645":{"position":[[1283,1]]},"1654":{"position":[[50,1],[84,1],[445,1]]},"1772":{"position":[[1845,1],[1913,1]]},"1775":{"position":[[22,1]]},"1777":{"position":[[19,1],[41,1],[168,1]]},"1780":{"position":[[33,1]]},"1784":{"position":[[1055,1]]},"1797":{"position":[[18,1]]},"1884":{"position":[[0,1]]}}}],["小于",{"_index":1080,"t":{"1349":{"position":[[226,2]]},"1728":{"position":[[56,2]]}}}],["小写",{"_index":1303,"t":{"1728":{"position":[[255,2]]}}}],["小国寡民",{"_index":94,"t":{"985":{"position":[[0,4]]}}}],["小型",{"_index":1015,"t":{"1304":{"position":[[5,2]]},"1578":{"position":[[5,2]]}}}],["小麦",{"_index":112,"t":{"985":{"position":[[61,2]]}}}],["少",{"_index":1414,"t":{"1800":{"position":[[144,1]]}}}],["尝试",{"_index":1225,"t":{"1634":{"position":[[169,2]]}}}],["尤其",{"_index":39,"t":{"983":{"position":[[70,2]]},"1784":{"position":[[960,2]]}}}],["就",{"_index":813,"t":{"1217":{"position":[[198,1],[306,1]]},"1363":{"position":[[603,1]]},"1431":{"position":[[158,1]]},"1539":{"position":[[198,1],[306,1]]},"1784":{"position":[[500,1],[856,1]]}}}],["尽可能",{"_index":870,"t":{"1236":{"position":[[37,3]]},"1585":{"position":[[37,3]]}}}],["尽管",{"_index":1388,"t":{"1789":{"position":[[51,2]]}}}],["局部变量",{"_index":1472,"t":{"1848":{"position":[[45,4]]}}}],["层",{"_index":874,"t":{"1239":{"position":[[14,1]]},"1257":{"position":[[15,1]]},"1588":{"position":[[14,1]]},"1606":{"position":[[15,1]]}}}],["层次结构",{"_index":853,"t":{"1231":{"position":[[38,4]]},"1553":{"position":[[38,4]]}}}],["属于",{"_index":1064,"t":{"1340":{"position":[[7,2]]}}}],["崛起",{"_index":59,"t":{"983":{"position":[[125,2]]}}}],["崩溃",{"_index":479,"t":{"1064":{"position":[[88,2]]},"1388":{"position":[[88,2]]},"1795":{"position":[[203,2]]}}}],["嵌入",{"_index":686,"t":{"1133":{"position":[[110,2]]},"1411":{"position":[[110,2]]}}}],["嵌入式",{"_index":1459,"t":{"1830":{"position":[[17,3],[26,3]]}}}],["嵌套",{"_index":1314,"t":{"1732":{"position":[[234,2]]},"1739":{"position":[[139,2]]}}}],["工业",{"_index":193,"t":{"987":{"position":[[234,2],[265,2]]}}}],["工业革命",{"_index":156,"t":{"987":{"position":[[114,4]]}}}],["工作",{"_index":904,"t":{"1267":{"position":[[97,2]]},"1270":{"position":[[544,2]]},"1275":{"position":[[447,2]]},"1277":{"position":[[524,2]]},"1367":{"position":[[196,2],[262,2]]},"1371":{"position":[[252,2]]},"1381":{"position":[[184,2]]},"1616":{"position":[[97,2]]},"1645":{"position":[[544,2]]},"1650":{"position":[[447,2]]},"1652":{"position":[[524,2]]},"1784":{"position":[[505,2]]},"1795":{"position":[[210,2]]},"1823":{"position":[[153,2]]},"1940":{"position":[[824,2],[862,2]]}}}],["工具",{"_index":100,"t":{"985":{"position":[[19,2]]},"1149":{"position":[[124,2]]},"1427":{"position":[[124,2]]},"1628":{"position":[[20,2]]},"1679":{"position":[[65,2]]},"1702":{"position":[[139,2]]},"1789":{"position":[[63,2]]},"1797":{"position":[[13,2],[72,2]]},"1826":{"position":[[25,2]]},"1828":{"position":[[122,2]]}}}],["工具箱",{"_index":1188,"t":{"1444":{"position":[[144,3]]}}}],["左",{"_index":1235,"t":{"1642":{"position":[[120,1]]}}}],["巧合",{"_index":103,"t":{"985":{"position":[[26,2]]}}}],["差异",{"_index":1201,"t":{"1619":{"position":[[60,2]]}}}],["已经",{"_index":1380,"t":{"1784":{"position":[[1428,2]]},"1828":{"position":[[97,2]]}}}],["市场机制",{"_index":180,"t":{"987":{"position":[[196,4]]}}}],["市场竞争",{"_index":278,"t":{"987":{"position":[[593,4]]}}}],["布尔",{"_index":1244,"t":{"1670":{"position":[[114,2]]}}}],["布尔值",{"_index":1305,"t":{"1728":{"position":[[325,3]]}}}],["希望",{"_index":271,"t":{"987":{"position":[[567,2]]}}}],["带",{"_index":934,"t":{"1275":{"position":[[67,1]]},"1277":{"position":[[1876,1]]},"1279":{"position":[[2138,1]]},"1650":{"position":[[67,1]]},"1652":{"position":[[1876,1]]},"1654":{"position":[[2138,1]]}}}],["带有",{"_index":1284,"t":{"1713":{"position":[[7,2]]}}}],["帧",{"_index":1485,"t":{"1850":{"position":[[371,1]]}}}],["帮助",{"_index":406,"t":{"999":{"position":[[25,2]]},"1082":{"position":[[66,2]]},"1679":{"position":[[48,2]]},"1826":{"position":[[74,2]]},"1868":{"position":[[12,2]]}}}],["常常",{"_index":328,"t":{"991":{"position":[[11,2]]}}}],["常用",{"_index":956,"t":{"1279":{"position":[[47,2]]},"1433":{"position":[[92,2]]},"1654":{"position":[[47,2]]},"1775":{"position":[[82,2]]},"1789":{"position":[[37,2]]}}}],["常见",{"_index":1093,"t":{"1353":{"position":[[176,2]]},"1739":{"position":[[98,2],[222,2]]}}}],["常见问题",{"_index":1449,"t":{"1823":{"position":[[213,4]]}}}],["干净",{"_index":1389,"t":{"1791":{"position":[[21,2]]}}}],["干扰",{"_index":529,"t":{"1079":{"position":[[73,2]]},"1403":{"position":[[73,2]]}}}],["平凡",{"_index":344,"t":{"991":{"position":[[67,2]]}}}],["平凡人",{"_index":336,"t":{"991":{"position":[[32,3]]}}}],["平台",{"_index":1180,"t":{"1444":{"position":[[19,2]]}}}],["平滑",{"_index":742,"t":{"1149":{"position":[[59,2]]},"1427":{"position":[[59,2]]}}}],["平等",{"_index":61,"t":{"983":{"position":[[132,2],[159,2],[198,2]]}}}],["平衡",{"_index":88,"t":{"983":{"position":[[219,2]]},"1267":{"position":[[61,2]]},"1616":{"position":[[61,2]]}}}],["年",{"_index":1455,"t":{"1828":{"position":[[85,1]]}}}],["年龄",{"_index":1241,"t":{"1662":{"position":[[231,2]]},"1664":{"position":[[223,2]]}}}],["并且",{"_index":586,"t":{"1098":{"position":[[56,2]]},"1357":{"position":[[50,2]]}}}],["并发",{"_index":506,"t":{"1069":{"position":[[268,2]]},"1139":{"position":[[3,2]]},"1145":{"position":[[1973,2]]},"1149":{"position":[[37,2]]},"1270":{"position":[[208,2]]},"1365":{"position":[[42,2]]},"1369":{"position":[[458,2]]},"1383":{"position":[[125,2],[233,2],[258,2],[374,2]]},"1393":{"position":[[268,2]]},"1417":{"position":[[3,2]]},"1423":{"position":[[1973,2]]},"1427":{"position":[[37,2]]},"1628":{"position":[[15,2]]},"1630":{"position":[[10,2]]},"1640":{"position":[[8,2]]},"1645":{"position":[[208,2]]},"1830":{"position":[[75,2]]}}}],["并非",{"_index":95,"t":{"985":{"position":[[7,2]]},"987":{"position":[[34,2]]}}}],["幸福",{"_index":134,"t":{"987":{"position":[[27,2]]}}}],["广泛",{"_index":1450,"t":{"1826":{"position":[[28,2]]},"1828":{"position":[[115,2]]}}}],["序列化",{"_index":1275,"t":{"1702":{"position":[[143,3],[148,3]]},"1739":{"position":[[11,3],[31,3]]},"1742":{"position":[[65,3],[102,3]]},"1746":{"position":[[170,3]]},"1755":{"position":[[172,3]]},"1760":{"position":[[57,3]]}}}],["库",{"_index":1065,"t":{"1340":{"position":[[16,1]]},"1429":{"position":[[21,1]]},"1619":{"position":[[54,1]]},"1657":{"position":[[29,1]]},"1682":{"position":[[9,1],[428,1]]},"1697":{"position":[[0,1],[40,1],[131,1]]},"1699":{"position":[[132,1]]},"1719":{"position":[[72,1]]},"1722":{"position":[[27,1]]},"1739":{"position":[[90,1]]},"1760":{"position":[[19,1]]},"1784":{"position":[[1107,1],[1127,1]]},"1793":{"position":[[35,1]]},"1823":{"position":[[41,1]]},"1859":{"position":[[168,1]]},"1891":{"position":[[12,1]]},"1896":{"position":[[12,1]]},"1911":{"position":[[128,1]]},"1913":{"position":[[14,1]]},"1928":{"position":[[128,1]]},"1930":{"position":[[14,1]]}}}],["应",{"_index":375,"t":{"991":{"position":[[185,1],[195,1]]},"1229":{"position":[[224,1],[289,1],[370,1],[381,1],[390,1],[398,1]]},"1236":{"position":[[36,1]]},"1551":{"position":[[224,1],[289,1],[370,1],[381,1],[390,1],[398,1]]},"1585":{"position":[[36,1]]},"1642":{"position":[[124,1]]}}}],["应当",{"_index":248,"t":{"987":{"position":[[474,2]]}}}],["应用",{"_index":981,"t":{"1282":{"position":[[145,2]]},"1306":{"position":[[68,2]]},"1440":{"position":[[226,2]]},"1442":{"position":[[107,2]]},"1556":{"position":[[145,2]]},"1580":{"position":[[68,2]]},"1677":{"position":[[41,2]]},"1911":{"position":[[115,2]]},"1928":{"position":[[115,2]]}}}],["应用层",{"_index":1433,"t":{"1819":{"position":[[262,3]]}}}],["应用程序",{"_index":895,"t":{"1265":{"position":[[259,4]]},"1444":{"position":[[224,4]]},"1614":{"position":[[259,4]]},"1664":{"position":[[114,4]]},"1830":{"position":[[35,4]]}}}],["应该",{"_index":824,"t":{"1229":{"position":[[49,2],[123,2]]},"1231":{"position":[[82,2]]},"1234":{"position":[[89,2]]},"1267":{"position":[[88,2]]},"1282":{"position":[[95,2],[121,2]]},"1551":{"position":[[49,2],[123,2]]},"1553":{"position":[[82,2]]},"1556":{"position":[[95,2],[121,2]]},"1583":{"position":[[89,2]]},"1616":{"position":[[88,2]]},"1795":{"position":[[124,2]]},"1823":{"position":[[133,2]]}}}],["庞大",{"_index":1012,"t":{"1302":{"position":[[11,2]]},"1576":{"position":[[11,2]]}}}],["废弃",{"_index":1514,"t":{"1909":{"position":[[13,2]]},"1911":{"position":[[21,2]]},"1926":{"position":[[13,2]]},"1928":{"position":[[21,2]]}}}],["延迟",{"_index":1427,"t":{"1817":{"position":[[408,2]]},"1819":{"position":[[301,2]]}}}],["建立",{"_index":182,"t":{"987":{"position":[[204,2]]},"1236":{"position":[[62,2]]},"1585":{"position":[[62,2]]}}}],["建议",{"_index":315,"t":{"989":{"position":[[115,2]]},"1628":{"position":[[52,2]]},"1911":{"position":[[25,2]]},"1928":{"position":[[25,2]]}}}],["开发",{"_index":1339,"t":{"1772":{"position":[[1065,2]]},"1828":{"position":[[32,2]]},"1830":{"position":[[20,2]]},"1911":{"position":[[117,2]]},"1928":{"position":[[117,2]]}}}],["开发人员",{"_index":1453,"t":{"1826":{"position":[[76,4]]}}}],["开发者",{"_index":1187,"t":{"1444":{"position":[[141,3]]},"1702":{"position":[[62,3]]}}}],["开启",{"_index":20,"t":{"983":{"position":[[6,2]]},"1630":{"position":[[19,2]]},"1670":{"position":[[156,2]]}}}],["开头",{"_index":442,"t":{"1048":{"position":[[5,2]]},"1728":{"position":[[219,2]]}}}],["开始",{"_index":149,"t":{"987":{"position":[[94,2]]},"1251":{"position":[[169,2]]},"1367":{"position":[[194,2],[470,2]]},"1371":{"position":[[250,2]]},"1600":{"position":[[169,2]]},"1828":{"position":[[86,2]]},"1844":{"position":[[27,2],[47,2]]}}}],["开放",{"_index":831,"t":{"1229":{"position":[[128,2]]},"1234":{"position":[[94,2]]},"1236":{"position":[[3,2]]},"1273":{"position":[[634,2]]},"1551":{"position":[[128,2]]},"1583":{"position":[[94,2]]},"1585":{"position":[[3,2]]},"1648":{"position":[[634,2]]}}}],["开销",{"_index":484,"t":{"1064":{"position":[[102,2]]},"1351":{"position":[[83,2]]},"1388":{"position":[[102,2]]},"1821":{"position":[[235,2]]}}}],["开闭",{"_index":828,"t":{"1229":{"position":[[75,2]]},"1234":{"position":[[0,2]]},"1551":{"position":[[75,2]]},"1583":{"position":[[0,2]]}}}],["异常",{"_index":1419,"t":{"1803":{"position":[[1023,2]]},"1808":{"position":[[1205,2]]},"1859":{"position":[[160,2]]}}}],["异步",{"_index":751,"t":{"1152":{"position":[[39,2]]},"1279":{"position":[[160,2],[310,2],[629,2],[3029,2]]},"1492":{"position":[[39,2]]},"1630":{"position":[[3,2],[32,2]]},"1654":{"position":[[160,2],[310,2],[629,2],[3029,2]]}}}],["式",{"_index":914,"t":{"1270":{"position":[[1235,1]]},"1431":{"position":[[22,1]]},"1632":{"position":[[55,1]]},"1645":{"position":[[1235,1]]}}}],["引入",{"_index":1220,"t":{"1632":{"position":[[63,2]]}}}],["引导",{"_index":1384,"t":{"1787":{"position":[[63,2]]}}}],["引用",{"_index":969,"t":{"1279":{"position":[[359,2]]},"1654":{"position":[[359,2]]}}}],["引起",{"_index":825,"t":{"1229":{"position":[[55,2]]},"1282":{"position":[[101,2]]},"1551":{"position":[[55,2]]},"1556":{"position":[[101,2]]}}}],["强",{"_index":578,"t":{"1094":{"position":[[227,1]]},"1279":{"position":[[2966,1]]},"1654":{"position":[[2966,1]]},"1795":{"position":[[89,1]]},"1797":{"position":[[86,1]]}}}],["强制",{"_index":1148,"t":{"1431":{"position":[[0,2],[32,2]]}}}],["强大",{"_index":1238,"t":{"1657":{"position":[[43,2]]},"1702":{"position":[[13,2]]},"1722":{"position":[[20,2]]},"1789":{"position":[[60,2]]},"1797":{"position":[[10,2]]},"1826":{"position":[[20,2]]}}}],["强盛时期",{"_index":25,"t":{"983":{"position":[[21,4]]}}}],["强行",{"_index":1202,"t":{"1619":{"position":[[88,2]]},"1632":{"position":[[61,2]]}}}],["强调",{"_index":1221,"t":{"1632":{"position":[[74,2]]}}}],["归咎于",{"_index":321,"t":{"989":{"position":[[140,3]]}}}],["当前",{"_index":866,"t":{"1231":{"position":[[255,2]]},"1349":{"position":[[228,2]]},"1433":{"position":[[2,2],[71,2]]},"1553":{"position":[[255,2]]},"1784":{"position":[[531,2]]},"1844":{"position":[[199,2]]},"1850":{"position":[[290,2],[398,2]]},"1853":{"position":[[25,2]]},"1855":{"position":[[24,2]]},"1899":{"position":[[102,2]]},"1905":{"position":[[121,2]]},"1916":{"position":[[102,2]]},"1922":{"position":[[121,2]]}}}],["当前目录",{"_index":1046,"t":{"1316":{"position":[[106,4]]}}}],["形式",{"_index":455,"t":{"1061":{"position":[[44,2]]},"1385":{"position":[[44,2]]}}}],["彩色",{"_index":887,"t":{"1257":{"position":[[214,2]]},"1606":{"position":[[214,2]]}}}],["影响",{"_index":306,"t":{"989":{"position":[[74,2]]},"1064":{"position":[[92,2]]},"1145":{"position":[[1965,2]]},"1285":{"position":[[15,2]]},"1302":{"position":[[23,2]]},"1388":{"position":[[92,2]]},"1423":{"position":[[1965,2]]},"1559":{"position":[[15,2]]},"1576":{"position":[[23,2]]},"1791":{"position":[[38,2]]}}}],["往往",{"_index":43,"t":{"983":{"position":[[83,2],[210,2]]},"987":{"position":[[398,2]]},"989":{"position":[[133,2]]}}}],["很多",{"_index":1363,"t":{"1784":{"position":[[476,2]]}}}],["循环",{"_index":517,"t":{"1069":{"position":[[1275,2]]},"1073":{"position":[[346,2]]},"1155":{"position":[[588,2]]},"1167":{"position":[[1220,2]]},"1279":{"position":[[1946,2]]},"1393":{"position":[[1275,2]]},"1397":{"position":[[346,2]]},"1477":{"position":[[1220,2]]},"1495":{"position":[[588,2]]},"1654":{"position":[[1946,2]]}}}],["微",{"_index":877,"t":{"1241":{"position":[[5,1],[122,1]]},"1253":{"position":[[74,1]]},"1590":{"position":[[5,1],[122,1]]},"1602":{"position":[[74,1]]},"1821":{"position":[[142,1]]}}}],["微内核",{"_index":446,"t":{"1061":{"position":[[12,3]]},"1069":{"position":[[71,3],[186,3],[424,3]]},"1073":{"position":[[106,3]]},"1079":{"position":[[0,3]]},"1155":{"position":[[434,3]]},"1167":{"position":[[52,3],[335,3]]},"1175":{"position":[[52,3],[251,3]]},"1223":{"position":[[128,3]]},"1385":{"position":[[12,3]]},"1393":{"position":[[71,3],[186,3],[424,3]]},"1397":{"position":[[106,3]]},"1403":{"position":[[0,3]]},"1477":{"position":[[52,3],[335,3]]},"1485":{"position":[[52,3],[251,3]]},"1495":{"position":[[434,3]]},"1545":{"position":[[128,3]]}}}],["心理",{"_index":105,"t":{"985":{"position":[[36,2]]}}}],["必填",{"_index":1295,"t":{"1728":{"position":[[15,2]]}}}],["必然",{"_index":80,"t":{"983":{"position":[[192,2]]}}}],["必要",{"_index":1218,"t":{"1632":{"position":[[34,2]]},"1784":{"position":[[42,2],[1104,2]]}}}],["必需",{"_index":1374,"t":{"1784":{"position":[[785,2]]}}}],["必须",{"_index":70,"t":{"983":{"position":[[162,2]]},"1131":{"position":[[1750,2]]},"1217":{"position":[[291,2]]},"1229":{"position":[[207,2]]},"1409":{"position":[[1750,2]]},"1539":{"position":[[291,2]]},"1551":{"position":[[207,2]]},"1708":{"position":[[30,2]]},"1728":{"position":[[26,2],[113,2],[124,2],[143,2],[190,2],[213,2],[233,2],[252,2],[268,2],[279,2],[299,2],[322,2],[345,2],[365,2],[390,2],[407,2],[424,2],[522,2],[609,2]]}}}],["快",{"_index":1071,"t":{"1343":{"position":[[468,1]]},"1687":{"position":[[10,1]]},"1800":{"position":[[78,1],[122,1]]}}}],["忽略",{"_index":816,"t":{"1217":{"position":[[309,2]]},"1539":{"position":[[309,2]]}}}],["忽视",{"_index":334,"t":{"991":{"position":[[26,2]]}}}],["态",{"_index":458,"t":{"1061":{"position":[[51,1]]},"1064":{"position":[[85,1],[126,1],[130,1]]},"1066":{"position":[[84,1]]},"1145":{"position":[[1934,1]]},"1270":{"position":[[1272,1]]},"1369":{"position":[[43,1],[466,1]]},"1383":{"position":[[27,1],[75,1]]},"1385":{"position":[[51,1]]},"1388":{"position":[[85,1],[126,1],[130,1]]},"1390":{"position":[[84,1]]},"1423":{"position":[[1934,1]]},"1645":{"position":[[1272,1]]}}}],["思想",{"_index":641,"t":{"1129":{"position":[[26,2]]},"1407":{"position":[[26,2]]}}}],["性",{"_index":985,"t":{"1285":{"position":[[57,1],[76,1]]},"1444":{"position":[[232,1]]},"1559":{"position":[[57,1],[76,1]]}}}],["性能",{"_index":811,"t":{"1217":{"position":[[153,2]]},"1375":{"position":[[50,2]]},"1383":{"position":[[336,2]]},"1444":{"position":[[116,2],[170,2]]},"1539":{"position":[[153,2]]},"1682":{"position":[[451,2],[484,2]]},"1695":{"position":[[43,2]]},"1697":{"position":[[81,2]]},"1717":{"position":[[15,2]]},"1817":{"position":[[218,2]]},"1819":{"position":[[289,2]]},"1830":{"position":[[12,2]]}}}],["性能比",{"_index":1261,"t":{"1691":{"position":[[51,3]]}}}],["总",{"_index":1167,"t":{"1431":{"position":[[427,1],[466,1]]}}}],["总线",{"_index":510,"t":{"1069":{"position":[[299,2]]},"1155":{"position":[[571,2]]},"1393":{"position":[[299,2]]},"1495":{"position":[[571,2]]}}}],["恢复",{"_index":1350,"t":{"1775":{"position":[[99,2]]},"1797":{"position":[[36,2]]}}}],["情况",{"_index":304,"t":{"989":{"position":[[63,2]]},"1236":{"position":[[17,2]]},"1331":{"position":[[978,2]]},"1431":{"position":[[78,2]]},"1585":{"position":[[17,2]]},"1739":{"position":[[70,2]]}}}],["意义",{"_index":387,"t":{"991":{"position":[[235,2]]}}}],["意味",{"_index":324,"t":{"989":{"position":[[150,2]]}}}],["意味着",{"_index":118,"t":{"985":{"position":[[86,3]]},"987":{"position":[[400,3],[537,3]]}}}],["意外",{"_index":989,"t":{"1287":{"position":[[18,2]]},"1561":{"position":[[18,2]]}}}],["意见",{"_index":313,"t":{"989":{"position":[[109,2]]}}}],["慢",{"_index":1290,"t":{"1717":{"position":[[28,1]]}}}],["成",{"_index":920,"t":{"1270":{"position":[[1299,1]]},"1645":{"position":[[1299,1]]}}}],["成为",{"_index":267,"t":{"987":{"position":[[547,2],[610,2]]},"1777":{"position":[[20,2]]},"1828":{"position":[[99,2]]}}}],["成功",{"_index":110,"t":{"985":{"position":[[50,2],[82,2],[110,2]]},"991":{"position":[[164,2]]},"1155":{"position":[[136,2]]},"1270":{"position":[[180,2],[708,2]]},"1495":{"position":[[136,2]]},"1638":{"position":[[81,2]]},"1645":{"position":[[180,2],[708,2]]}}}],["成就",{"_index":348,"t":{"991":{"position":[[75,2]]}}}],["成本",{"_index":638,"t":{"1127":{"position":[[95,2]]},"1343":{"position":[[519,2]]},"1349":{"position":[[7,2],[201,2],[474,2]]},"1353":{"position":[[94,2],[153,2]]},"1405":{"position":[[95,2]]}}}],["成败",{"_index":394,"t":{"991":{"position":[[266,2]]}}}],["我们",{"_index":368,"t":{"991":{"position":[[149,2]]},"1082":{"position":[[68,2]]},"1323":{"position":[[13,2]]},"1739":{"position":[[122,2]]},"1772":{"position":[[1062,2]]},"1838":{"position":[[75,2]]},"1934":{"position":[[105,2],[184,2]]}}}],["我会",{"_index":599,"t":{"1100":{"position":[[41,2]]},"1457":{"position":[[41,2]]}}}],["或者",{"_index":1107,"t":{"1363":{"position":[[28,2]]},"1728":{"position":[[630,2]]},"1934":{"position":[[170,2]]}}}],["或许",{"_index":145,"t":{"987":{"position":[[78,2],[344,2]]},"991":{"position":[[110,2],[175,2]]}}}],["戳",{"_index":789,"t":{"1182":{"position":[[28,1]]},"1504":{"position":[[28,1]]}}}],["房地产",{"_index":166,"t":{"987":{"position":[[157,3]]}}}],["所以",{"_index":1529,"t":{"1934":{"position":[[182,2]]},"1938":{"position":[[538,2]]}}}],["所有",{"_index":411,"t":{"1004":{"position":[[11,2]]},"1015":{"position":[[9,2]]},"1069":{"position":[[809,2],[996,2]]},"1073":{"position":[[276,2],[528,2]]},"1084":{"position":[[74,2]]},"1092":{"position":[[151,2]]},"1098":{"position":[[58,2]]},"1131":{"position":[[1772,2]]},"1145":{"position":[[1910,2]]},"1182":{"position":[[8,2]]},"1265":{"position":[[353,2]]},"1279":{"position":[[906,2]]},"1309":{"position":[[456,2]]},"1333":{"position":[[546,2]]},"1367":{"position":[[407,2],[427,2],[534,2]]},"1371":{"position":[[507,2],[590,2]]},"1393":{"position":[[809,2],[996,2]]},"1397":{"position":[[276,2],[528,2]]},"1409":{"position":[[1772,2]]},"1423":{"position":[[1910,2]]},"1433":{"position":[[628,2]]},"1504":{"position":[[8,2]]},"1614":{"position":[[353,2]]},"1628":{"position":[[29,2]]},"1654":{"position":[[906,2]]},"1784":{"position":[[709,2]]},"1850":{"position":[[25,2]]},"1853":{"position":[[31,2]]},"1855":{"position":[[30,2]]},"1934":{"position":[[87,2]]},"1940":{"position":[[173,2]]}}}],["手中",{"_index":311,"t":{"989":{"position":[[103,2]]}}}],["手动",{"_index":1066,"t":{"1340":{"position":[[20,2]]},"1359":{"position":[[61,2]]},"1619":{"position":[[36,2]]},"1682":{"position":[[437,2]]},"1891":{"position":[[20,2]]},"1896":{"position":[[20,2]]}}}],["手段",{"_index":743,"t":{"1149":{"position":[[72,2]]},"1427":{"position":[[72,2]]}}}],["才",{"_index":209,"t":{"987":{"position":[[297,1]]},"1433":{"position":[[218,1]]}}}],["才能",{"_index":225,"t":{"987":{"position":[[359,2]]},"1708":{"position":[[137,2]]},"1795":{"position":[[34,2]]}}}],["打印",{"_index":398,"t":{"997":{"position":[[2,2],[15,2],[28,2]]},"999":{"position":[[14,2]]},"1182":{"position":[[21,2]]},"1433":{"position":[[69,2],[125,2]]},"1435":{"position":[[457,2]]},"1504":{"position":[[21,2]]},"1713":{"position":[[273,2]]},"1728":{"position":[[474,2]]},"1844":{"position":[[121,2]]},"1848":{"position":[[18,2]]}}}],["打开",{"_index":1513,"t":{"1901":{"position":[[173,2]]},"1907":{"position":[[182,2]]},"1918":{"position":[[173,2]]},"1924":{"position":[[182,2]]}}}],["打招呼",{"_index":1242,"t":{"1666":{"position":[[173,3]]}}}],["执行",{"_index":405,"t":{"999":{"position":[[20,2]]},"1004":{"position":[[0,2]]},"1084":{"position":[[81,2]]},"1087":{"position":[[64,2],[148,2]]},"1089":{"position":[[56,2],[197,2]]},"1092":{"position":[[66,2],[149,2]]},"1094":{"position":[[98,2],[179,2]]},"1096":{"position":[[40,2]]},"1098":{"position":[[65,2]]},"1145":{"position":[[2032,2]]},"1270":{"position":[[1227,2]]},"1275":{"position":[[114,2]]},"1279":{"position":[[116,2],[312,2],[1037,2],[3020,2]]},"1335":{"position":[[198,2]]},"1363":{"position":[[37,2],[605,2]]},"1367":{"position":[[19,2],[162,2]]},"1371":{"position":[[23,2]]},"1373":{"position":[[32,2],[239,2],[387,2]]},"1383":{"position":[[98,2]]},"1423":{"position":[[2032,2]]},"1630":{"position":[[34,2]]},"1645":{"position":[[1227,2]]},"1650":{"position":[[114,2]]},"1654":{"position":[[116,2],[312,2],[1037,2],[3020,2]]},"1675":{"position":[[28,2]]},"1777":{"position":[[150,2]]},"1782":{"position":[[63,2]]},"1784":{"position":[[1083,2]]},"1795":{"position":[[36,2]]},"1826":{"position":[[69,2]]},"1838":{"position":[[62,2],[87,2]]},"1844":{"position":[[85,2],[104,2],[175,2],[195,2]]},"1850":{"position":[[311,2]]},"1853":{"position":[[378,2],[424,2]]},"1859":{"position":[[88,2],[190,2]]},"1861":{"position":[[16,2]]},"1889":{"position":[[42,2]]},"1894":{"position":[[42,2]]},"1903":{"position":[[195,2]]},"1920":{"position":[[195,2]]},"1940":{"position":[[628,2]]}}}],["执行命令",{"_index":965,"t":{"1279":{"position":[[196,4],[377,4]]},"1654":{"position":[[196,4],[377,4]]}}}],["扩展",{"_index":473,"t":{"1064":{"position":[[45,2]]},"1127":{"position":[[68,2]]},"1131":{"position":[[83,2]]},"1133":{"position":[[29,2]]},"1139":{"position":[[73,2]]},"1145":{"position":[[1941,2],[1994,2]]},"1227":{"position":[[38,2]]},"1229":{"position":[[126,2],[235,2]]},"1234":{"position":[[92,2]]},"1236":{"position":[[1,2]]},"1241":{"position":[[12,2]]},"1267":{"position":[[118,2]]},"1279":{"position":[[291,2],[458,2],[3036,2],[6313,2]]},"1306":{"position":[[11,2]]},"1340":{"position":[[14,2]]},"1388":{"position":[[45,2]]},"1405":{"position":[[68,2]]},"1409":{"position":[[83,2]]},"1411":{"position":[[29,2]]},"1417":{"position":[[73,2]]},"1423":{"position":[[1941,2],[1994,2]]},"1549":{"position":[[38,2]]},"1551":{"position":[[126,2],[235,2]]},"1580":{"position":[[11,2]]},"1583":{"position":[[92,2]]},"1585":{"position":[[1,2]]},"1590":{"position":[[12,2]]},"1616":{"position":[[118,2]]},"1654":{"position":[[291,2],[458,2],[3036,2],[6313,2]]},"1797":{"position":[[103,2]]},"1889":{"position":[[34,2]]},"1894":{"position":[[34,2]]}}}],["扩展性",{"_index":577,"t":{"1094":{"position":[[223,3]]},"1270":{"position":[[1276,3]]},"1645":{"position":[[1276,3]]}}}],["扮演",{"_index":256,"t":{"987":{"position":[[501,2]]}}}],["找",{"_index":1195,"t":{"1619":{"position":[[6,1]]}}}],["找到",{"_index":1199,"t":{"1619":{"position":[[21,2]]}}}],["承担",{"_index":993,"t":{"1290":{"position":[[23,2]]},"1564":{"position":[[23,2]]}}}],["技术",{"_index":201,"t":{"987":{"position":[[267,2],[394,2]]},"1127":{"position":[[38,2],[61,2]]},"1405":{"position":[[38,2],[61,2]]},"1789":{"position":[[43,2]]},"1797":{"position":[[80,2]]}}}],["抓取",{"_index":1530,"t":{"1934":{"position":[[192,2]]}}}],["投资者",{"_index":194,"t":{"987":{"position":[[239,3]]}}}],["报告",{"_index":997,"t":{"1290":{"position":[[414,2],[481,2],[525,2]]},"1292":{"position":[[509,2],[688,2]]},"1564":{"position":[[414,2],[481,2],[525,2]]},"1566":{"position":[[509,2],[688,2]]}}}],["报错",{"_index":1020,"t":{"1309":{"position":[[0,2],[154,2]]},"1634":{"position":[[6,2]]}}}],["抽象",{"_index":657,"t":{"1131":{"position":[[130,2]]},"1229":{"position":[[139,2],[384,2],[387,2],[401,2]]},"1236":{"position":[[52,2],[60,2]]},"1239":{"position":[[12,2]]},"1246":{"position":[[7,2]]},"1257":{"position":[[13,2],[38,2]]},"1267":{"position":[[9,2],[81,2]]},"1409":{"position":[[130,2]]},"1551":{"position":[[139,2],[384,2],[387,2],[401,2]]},"1585":{"position":[[52,2],[60,2]]},"1588":{"position":[[12,2]]},"1595":{"position":[[7,2]]},"1606":{"position":[[13,2],[38,2]]},"1616":{"position":[[9,2],[81,2]]}}}],["抽象类",{"_index":963,"t":{"1279":{"position":[[190,3]]},"1654":{"position":[[190,3]]}}}],["拆",{"_index":842,"t":{"1229":{"position":[[307,1]]},"1292":{"position":[[736,1]]},"1299":{"position":[[123,1]]},"1551":{"position":[[307,1]]},"1566":{"position":[[736,1]]},"1573":{"position":[[123,1]]}}}],["拆分",{"_index":587,"t":{"1098":{"position":[[88,2]]},"1304":{"position":[[23,2]]},"1578":{"position":[[23,2]]}}}],["拓扑",{"_index":785,"t":{"1175":{"position":[[795,2]]},"1185":{"position":[[1091,2]]},"1485":{"position":[[795,2]]},"1507":{"position":[[1091,2]]}}}],["拦截器",{"_index":886,"t":{"1253":{"position":[[97,3]]},"1602":{"position":[[97,3]]}}}],["拷贝",{"_index":1506,"t":{"1870":{"position":[[2,2]]}}}],["持久",{"_index":806,"t":{"1205":{"position":[[4,2]]},"1527":{"position":[[4,2]]},"1739":{"position":[[54,2]]}}}],["持有",{"_index":968,"t":{"1279":{"position":[[339,2]]},"1654":{"position":[[339,2]]}}}],["持续",{"_index":185,"t":{"987":{"position":[[212,2]]},"1889":{"position":[[94,2]]},"1894":{"position":[[94,2]]}}}],["挂载",{"_index":1353,"t":{"1784":{"position":[[40,2],[81,2],[280,2],[362,2],[467,2],[627,2],[846,2],[1042,2],[1140,2]]},"1795":{"position":[[187,2]]},"1821":{"position":[[45,2]]}}}],["指",{"_index":163,"t":{"987":{"position":[[145,1]]},"1127":{"position":[[25,1]]},"1405":{"position":[[25,1]]}}}],["指令",{"_index":1481,"t":{"1850":{"position":[[292,2],[317,2]]},"1884":{"position":[[4,2],[19,2]]}}}],["指向",{"_index":1479,"t":{"1850":{"position":[[265,2]]}}}],["指定",{"_index":602,"t":{"1109":{"position":[[53,2]]},"1157":{"position":[[17,2]]},"1466":{"position":[[53,2]]},"1497":{"position":[[17,2]]},"1619":{"position":[[90,2]]},"1728":{"position":[[348,2]]},"1775":{"position":[[40,2]]},"1777":{"position":[[14,2],[114,2],[160,2]]},"1838":{"position":[[11,2]]},"1842":{"position":[[9,2]]},"1844":{"position":[[178,2]]},"1846":{"position":[[193,2]]}}}],["指标",{"_index":712,"t":{"1141":{"position":[[8,2]]},"1419":{"position":[[8,2]]},"1817":{"position":[[371,2]]}}}],["指针",{"_index":1281,"t":{"1708":{"position":[[135,2],[183,2],[304,2],[322,2]]},"1850":{"position":[[263,2],[363,2],[372,2]]}}}],["挫折",{"_index":317,"t":{"989":{"position":[[126,2]]}}}],["捕捉",{"_index":1494,"t":{"1859":{"position":[[8,2],[130,2]]}}}],["捕获",{"_index":1050,"t":{"1335":{"position":[[46,2]]}}}],["损坏",{"_index":1205,"t":{"1619":{"position":[[118,2]]},"1787":{"position":[[8,2],[70,2]]}}}],["损耗",{"_index":1289,"t":{"1717":{"position":[[17,2]]}}}],["换句话说",{"_index":980,"t":{"1282":{"position":[[110,4]]},"1556":{"position":[[110,4]]},"1775":{"position":[[46,4]]}}}],["授权",{"_index":881,"t":{"1251":{"position":[[421,2]]},"1600":{"position":[[421,2]]}}}],["掌握",{"_index":310,"t":{"989":{"position":[[98,2]]},"1098":{"position":[[139,2]]}}}],["排序",{"_index":786,"t":{"1175":{"position":[[797,2]]},"1185":{"position":[[1093,2]]},"1485":{"position":[[797,2]]},"1507":{"position":[[1093,2]]}}}],["排查",{"_index":1024,"t":{"1309":{"position":[[147,2],[201,2],[295,2]]},"1444":{"position":[[190,2]]}}}],["排队",{"_index":966,"t":{"1279":{"position":[[302,2]]},"1654":{"position":[[302,2]]}}}],["掠夺",{"_index":192,"t":{"987":{"position":[[231,2]]}}}],["接受",{"_index":596,"t":{"1100":{"position":[[30,2]]},"1457":{"position":[[30,2]]}}}],["接口",{"_index":499,"t":{"1069":{"position":[[77,2]]},"1107":{"position":[[50,2]]},"1123":{"position":[[413,2]]},"1131":{"position":[[11,2],[29,2],[123,2],[210,2],[227,2],[285,2],[596,2]]},"1155":{"position":[[440,2]]},"1175":{"position":[[58,2],[229,2]]},"1182":{"position":[[19,2]]},"1197":{"position":[[4,2],[148,2]]},"1199":{"position":[[4,2]]},"1217":{"position":[[193,2],[202,2]]},"1229":{"position":[[300,2],[305,2],[317,2]]},"1234":{"position":[[121,2]]},"1239":{"position":[[7,2]]},"1246":{"position":[[5,2]]},"1257":{"position":[[10,2],[31,2]]},"1267":{"position":[[25,2]]},"1270":{"position":[[345,2]]},"1279":{"position":[[187,2],[226,2],[631,2],[696,2],[911,2],[3115,2]]},"1285":{"position":[[38,2]]},"1295":{"position":[[8,2]]},"1302":{"position":[[7,2]]},"1306":{"position":[[35,2],[92,2]]},"1393":{"position":[[77,2]]},"1409":{"position":[[11,2],[29,2],[123,2],[210,2],[227,2],[285,2],[596,2]]},"1453":{"position":[[413,2]]},"1464":{"position":[[50,2]]},"1485":{"position":[[58,2],[229,2]]},"1495":{"position":[[440,2]]},"1504":{"position":[[19,2]]},"1519":{"position":[[4,2],[148,2]]},"1521":{"position":[[4,2]]},"1539":{"position":[[193,2],[202,2]]},"1551":{"position":[[300,2],[305,2],[317,2]]},"1559":{"position":[[38,2]]},"1569":{"position":[[8,2]]},"1576":{"position":[[7,2]]},"1580":{"position":[[35,2],[92,2]]},"1583":{"position":[[121,2]]},"1588":{"position":[[7,2]]},"1595":{"position":[[5,2]]},"1606":{"position":[[10,2],[31,2]]},"1616":{"position":[[25,2]]},"1636":{"position":[[8,2]]},"1645":{"position":[[345,2]]},"1654":{"position":[[187,2],[226,2],[631,2],[696,2],[911,2],[3115,2]]},"1739":{"position":[[203,2]]},"1746":{"position":[[20,2],[65,2],[88,2]]},"1772":{"position":[[1016,2],[1282,2],[1465,2],[1586,2],[2096,2]]},"1784":{"position":[[353,2],[753,2]]},"1821":{"position":[[189,2]]}}}],["接口定义",{"_index":500,"t":{"1069":{"position":[[85,4]]},"1155":{"position":[[448,4]]},"1175":{"position":[[66,4]]},"1393":{"position":[[85,4]]},"1485":{"position":[[66,4]]},"1495":{"position":[[448,4]]}}}],["接口类型",{"_index":1273,"t":{"1702":{"position":[[107,4]]}}}],["接口隔离",{"_index":839,"t":{"1229":{"position":[[239,4]]},"1551":{"position":[[239,4]]}}}],["接收",{"_index":935,"t":{"1275":{"position":[[76,2]]},"1279":{"position":[[264,2]]},"1650":{"position":[[76,2]]},"1654":{"position":[[264,2]]},"1803":{"position":[[1215,2]]}}}],["接收数据",{"_index":928,"t":{"1273":{"position":[[407,4]]},"1361":{"position":[[237,4]]},"1648":{"position":[[407,4]]}}}],["接收端",{"_index":923,"t":{"1273":{"position":[[40,3]]},"1648":{"position":[[40,3]]}}}],["接收者",{"_index":970,"t":{"1279":{"position":[[372,3],[406,3]]},"1654":{"position":[[372,3],[406,3]]}}}],["控制",{"_index":731,"t":{"1145":{"position":[[2000,2]]},"1277":{"position":[[176,2],[897,2]]},"1279":{"position":[[2074,2],[3009,2]]},"1335":{"position":[[172,2]]},"1363":{"position":[[705,2]]},"1379":{"position":[[19,2]]},"1383":{"position":[[256,2],[299,2],[376,2],[429,2]]},"1423":{"position":[[2000,2]]},"1652":{"position":[[176,2],[897,2]]},"1654":{"position":[[2074,2],[3009,2]]},"1800":{"position":[[95,2],[137,2]]},"1819":{"position":[[258,2]]},"1826":{"position":[[71,2]]},"1853":{"position":[[259,2],[305,2]]},"1882":{"position":[[19,2]]},"1937":{"position":[[10,2]]},"1938":{"position":[[10,2]]}}}],["控制台",{"_index":883,"t":{"1253":{"position":[[23,3]]},"1255":{"position":[[0,3]]},"1257":{"position":[[137,3],[162,3],[461,3]]},"1265":{"position":[[19,3],[641,3]]},"1602":{"position":[[23,3]]},"1604":{"position":[[0,3]]},"1606":{"position":[[137,3],[162,3],[461,3]]},"1614":{"position":[[19,3],[641,3]]}}}],["推动",{"_index":58,"t":{"983":{"position":[[119,2]]},"987":{"position":[[423,2],[590,2]]}}}],["推荐",{"_index":589,"t":{"1098":{"position":[[119,2]]},"1383":{"position":[[303,2]]},"1679":{"position":[[81,2]]},"1795":{"position":[[272,2]]},"1909":{"position":[[29,2],[111,2]]},"1926":{"position":[[29,2],[111,2]]}}}],["推荐值",{"_index":1081,"t":{"1349":{"position":[[230,3]]}}}],["推送",{"_index":612,"t":{"1119":{"position":[[54,2]]},"1449":{"position":[[54,2]]}}}],["描述",{"_index":759,"t":{"1155":{"position":[[165,2]]},"1495":{"position":[[165,2]]},"1728":{"position":[[3,2]]},"1844":{"position":[[5,2]]}}}],["描述符",{"_index":1172,"t":{"1431":{"position":[[707,3]]}}}],["提交",{"_index":973,"t":{"1279":{"position":[[2133,2]]},"1654":{"position":[[2133,2]]}}}],["提供",{"_index":14,"t":{"981":{"position":[[44,2]]},"983":{"position":[[106,2]]},"1119":{"position":[[14,2]]},"1312":{"position":[[9,2]]},"1338":{"position":[[44,2]]},"1357":{"position":[[7,2]]},"1375":{"position":[[27,2]]},"1429":{"position":[[40,2]]},"1449":{"position":[[14,2]]},"1657":{"position":[[31,2]]},"1662":{"position":[[8,2]]},"1677":{"position":[[8,2]]},"1682":{"position":[[10,2]]},"1702":{"position":[[49,2]]},"1722":{"position":[[30,2]]},"1736":{"position":[[10,2]]},"1784":{"position":[[340,2],[424,2],[560,2]]},"1789":{"position":[[76,2]]},"1795":{"position":[[56,2]]},"1797":{"position":[[82,2]]},"1823":{"position":[[20,2]]},"1889":{"position":[[29,2],[82,2]]},"1894":{"position":[[29,2],[82,2]]},"1911":{"position":[[123,2]]},"1928":{"position":[[123,2]]}}}],["提出",{"_index":868,"t":{"1234":{"position":[[64,2]]},"1282":{"position":[[78,2]]},"1556":{"position":[[78,2]]},"1583":{"position":[[64,2]]}}}],["提前",{"_index":1508,"t":{"1872":{"position":[[38,2]]}}}],["提升",{"_index":157,"t":{"987":{"position":[[118,2]]},"1375":{"position":[[48,2]]},"1444":{"position":[[218,2]]}}}],["提取",{"_index":433,"t":{"1034":{"position":[[5,2]]},"1038":{"position":[[67,2],[103,2]]},"1041":{"position":[[5,2]]},"1055":{"position":[[0,2]]},"1231":{"position":[[156,2]]},"1553":{"position":[[156,2]]},"1719":{"position":[[88,2]]}}}],["提高",{"_index":548,"t":{"1082":{"position":[[85,2]]},"1127":{"position":[[98,2]]},"1155":{"position":[[310,2]]},"1231":{"position":[[29,2]]},"1279":{"position":[[67,2]]},"1285":{"position":[[0,2],[72,2]]},"1405":{"position":[[98,2]]},"1495":{"position":[[310,2]]},"1553":{"position":[[29,2]]},"1559":{"position":[[0,2],[72,2]]},"1654":{"position":[[67,2]]},"1699":{"position":[[135,2]]},"1736":{"position":[[70,2]]},"1819":{"position":[[316,2]]}}}],["插件",{"_index":453,"t":{"1061":{"position":[[38,2]]},"1077":{"position":[[37,2]]},"1267":{"position":[[91,2]]},"1385":{"position":[[38,2]]},"1401":{"position":[[37,2]]},"1616":{"position":[[91,2]]}}}],["握手",{"_index":1034,"t":{"1309":{"position":[[318,2]]}}}],["携带",{"_index":977,"t":{"1279":{"position":[[2964,2]]},"1654":{"position":[[2964,2]]}}}],["撤销",{"_index":959,"t":{"1279":{"position":[[145,2]]},"1654":{"position":[[145,2]]}}}],["擅长",{"_index":114,"t":{"985":{"position":[[66,2]]}}}],["操作",{"_index":916,"t":{"1270":{"position":[[1286,2]]},"1277":{"position":[[1069,2]]},"1279":{"position":[[150,2],[446,2]]},"1363":{"position":[[41,2]]},"1373":{"position":[[14,2],[42,2],[142,2]]},"1375":{"position":[[7,2],[32,2]]},"1383":{"position":[[205,2]]},"1630":{"position":[[5,2]]},"1645":{"position":[[1286,2]]},"1652":{"position":[[1069,2]]},"1654":{"position":[[150,2],[446,2]]},"1695":{"position":[[33,2]]},"1697":{"position":[[175,2]]},"1702":{"position":[[29,2],[193,2],[226,2]]},"1708":{"position":[[368,2]]},"1795":{"position":[[39,2]]},"1909":{"position":[[44,2]]},"1926":{"position":[[44,2]]}}}],["操作系统",{"_index":1153,"t":{"1431":{"position":[[44,4],[116,4]]},"1828":{"position":[[109,4]]},"1911":{"position":[[76,4]]},"1928":{"position":[[76,4]]}}}],["支付",{"_index":873,"t":{"1239":{"position":[[3,2],[81,2],[186,2],[232,2],[329,2],[372,2]]},"1241":{"position":[[7,2],[111,2],[124,2]]},"1244":{"position":[[199,2],[251,2],[310,2],[339,2]]},"1246":{"position":[[74,2],[401,2]]},"1253":{"position":[[0,2]]},"1588":{"position":[[3,2],[81,2],[186,2],[232,2],[329,2],[372,2]]},"1590":{"position":[[7,2],[111,2],[124,2]]},"1593":{"position":[[199,2],[251,2],[310,2],[339,2]]},"1595":{"position":[[74,2],[401,2]]},"1602":{"position":[[0,2]]}}}],["支付宝",{"_index":876,"t":{"1239":{"position":[[229,3],[340,3]]},"1244":{"position":[[262,3]]},"1588":{"position":[[229,3],[340,3]]},"1593":{"position":[[262,3]]}}}],["支持",{"_index":423,"t":{"1018":{"position":[[17,2]]},"1022":{"position":[[7,2],[26,2]]},"1077":{"position":[[70,2]]},"1100":{"position":[[19,2]]},"1137":{"position":[[26,2]]},"1145":{"position":[[1990,2]]},"1152":{"position":[[24,2]]},"1172":{"position":[[0,2]]},"1182":{"position":[[0,2]]},"1194":{"position":[[12,2]]},"1207":{"position":[[78,2]]},"1217":{"position":[[270,2]]},"1244":{"position":[[307,2]]},"1270":{"position":[[206,2]]},"1275":{"position":[[49,2]]},"1277":{"position":[[139,2],[209,2],[879,2]]},"1279":{"position":[[143,2],[294,2],[420,2],[473,2],[2067,2],[2141,2],[2962,2],[2998,2],[3693,2]]},"1401":{"position":[[70,2]]},"1415":{"position":[[26,2]]},"1423":{"position":[[1990,2]]},"1457":{"position":[[19,2]]},"1482":{"position":[[0,2]]},"1492":{"position":[[24,2]]},"1504":{"position":[[0,2]]},"1516":{"position":[[12,2]]},"1529":{"position":[[78,2]]},"1539":{"position":[[270,2]]},"1593":{"position":[[307,2]]},"1642":{"position":[[3,2]]},"1645":{"position":[[206,2]]},"1650":{"position":[[49,2]]},"1652":{"position":[[139,2],[209,2],[879,2]]},"1654":{"position":[[143,2],[294,2],[420,2],[473,2],[2067,2],[2141,2],[2962,2],[2998,2],[3693,2]]},"1657":{"position":[[54,2]]},"1666":{"position":[[110,2]]},"1668":{"position":[[122,2]]},"1679":{"position":[[2,2],[10,2],[39,2]]},"1687":{"position":[[22,2]]},"1722":{"position":[[45,2]]},"1784":{"position":[[944,2]]},"1863":{"position":[[5,2]]}}}],["收养",{"_index":1523,"t":{"1932":{"position":[[16,2]]},"1937":{"position":[[27,2]]}}}],["收到",{"_index":616,"t":{"1119":{"position":[[84,2]]},"1361":{"position":[[259,2]]},"1449":{"position":[[84,2]]}}}],["收尾",{"_index":1535,"t":{"1940":{"position":[[860,2]]}}}],["收集",{"_index":1144,"t":{"1429":{"position":[[33,2]]}}}],["改为",{"_index":678,"t":{"1131":{"position":[[1743,2]]},"1409":{"position":[[1743,2]]},"1775":{"position":[[38,2]]}}}],["改变",{"_index":836,"t":{"1229":{"position":[[225,2]]},"1306":{"position":[[98,2]]},"1551":{"position":[[225,2]]},"1580":{"position":[[98,2]]},"1775":{"position":[[52,2]]},"1859":{"position":[[120,2]]}}}],["改善",{"_index":130,"t":{"987":{"position":[[14,2]]}}}],["改进",{"_index":1001,"t":{"1292":{"position":[[716,2]]},"1566":{"position":[[716,2]]}}}],["改造",{"_index":761,"t":{"1155":{"position":[[367,2]]},"1495":{"position":[[367,2]]}}}],["攻击",{"_index":1089,"t":{"1351":{"position":[[94,2]]}}}],["放在",{"_index":361,"t":{"991":{"position":[[127,2]]},"1217":{"position":[[145,2]]},"1539":{"position":[[145,2]]}}}],["放大",{"_index":329,"t":{"991":{"position":[[13,2]]}}}],["效果",{"_index":1328,"t":{"1746":{"position":[[117,2]]}}}],["效率",{"_index":1269,"t":{"1699":{"position":[[145,2]]}}}],["敏感",{"_index":1336,"t":{"1770":{"position":[[11,2]]},"1772":{"position":[[940,2],[1043,2],[1115,2]]},"1795":{"position":[[83,2]]}}}],["数",{"_index":1136,"t":{"1383":{"position":[[235,1]]},"1784":{"position":[[675,1]]}}}],["数值",{"_index":1129,"t":{"1375":{"position":[[5,2]]},"1383":{"position":[[118,2]]},"1857":{"position":[[11,2],[69,2]]}}}],["数字",{"_index":1300,"t":{"1728":{"position":[[146,2],[164,2]]}}}],["数据",{"_index":699,"t":{"1137":{"position":[[3,2]]},"1152":{"position":[[33,2]]},"1167":{"position":[[10,2],[341,2]]},"1175":{"position":[[257,2]]},"1253":{"position":[[36,2]]},"1275":{"position":[[93,2]]},"1292":{"position":[[684,2]]},"1299":{"position":[[75,2],[86,2]]},"1335":{"position":[[143,2]]},"1357":{"position":[[56,2]]},"1359":{"position":[[30,2]]},"1363":{"position":[[34,2],[600,2]]},"1369":{"position":[[20,2]]},"1383":{"position":[[19,2],[269,2],[345,2]]},"1415":{"position":[[3,2]]},"1477":{"position":[[10,2],[341,2]]},"1485":{"position":[[257,2]]},"1492":{"position":[[33,2]]},"1566":{"position":[[684,2]]},"1573":{"position":[[75,2],[86,2]]},"1602":{"position":[[36,2]]},"1630":{"position":[[185,2],[199,2],[209,2]]},"1650":{"position":[[93,2]]},"1682":{"position":[[43,2]]},"1697":{"position":[[73,2]]},"1699":{"position":[[9,2]]},"1713":{"position":[[15,2]]},"1722":{"position":[[23,2]]},"1736":{"position":[[72,2]]},"1739":{"position":[[52,2]]},"1746":{"position":[[176,2]]},"1772":{"position":[[1085,2],[1914,2]]},"1784":{"position":[[447,2],[822,2]]},"1857":{"position":[[129,2]]}}}],["数据处理",{"_index":1056,"t":{"1335":{"position":[[221,4]]}}}],["数据库",{"_index":1010,"t":{"1299":{"position":[[98,3]]},"1573":{"position":[[98,3]]},"1713":{"position":[[27,3]]}}}],["数据格式",{"_index":1318,"t":{"1739":{"position":[[107,4],[129,4]]}}}],["数组",{"_index":777,"t":{"1167":{"position":[[255,2]]},"1477":{"position":[[255,2]]},"1691":{"position":[[37,2]]},"1697":{"position":[[141,2]]}}}],["数量",{"_index":1117,"t":{"1365":{"position":[[47,2]]}}}],["整个",{"_index":481,"t":{"1064":{"position":[[94,2]]},"1388":{"position":[[94,2]]}}}],["整体",{"_index":158,"t":{"987":{"position":[[121,2]]}}}],["文件",{"_index":417,"t":{"1011":{"position":[[7,2]]},"1015":{"position":[[20,2]]},"1098":{"position":[[86,2]]},"1182":{"position":[[74,2]]},"1207":{"position":[[75,2]]},"1210":{"position":[[62,2]]},"1253":{"position":[[18,2]]},"1255":{"position":[[6,2]]},"1257":{"position":[[486,2],[507,2]]},"1261":{"position":[[230,2]]},"1265":{"position":[[67,2],[645,2]]},"1431":{"position":[[705,2]]},"1440":{"position":[[141,2]]},"1504":{"position":[[74,2]]},"1529":{"position":[[75,2]]},"1532":{"position":[[62,2]]},"1602":{"position":[[18,2]]},"1604":{"position":[[6,2]]},"1606":{"position":[[486,2],[507,2]]},"1610":{"position":[[230,2]]},"1614":{"position":[[67,2],[645,2]]},"1630":{"position":[[205,2]]},"1695":{"position":[[16,2]]},"1699":{"position":[[67,2]]},"1772":{"position":[[1038,2]]},"1784":{"position":[[391,2],[610,2],[713,2],[736,2],[782,2],[807,2],[923,2],[1144,2]]},"1787":{"position":[[73,2]]},"1793":{"position":[[40,2]]},"1800":{"position":[[91,2]]},"1803":{"position":[[395,2]]},"1808":{"position":[[422,2]]},"1819":{"position":[[66,2],[161,2],[239,2]]},"1821":{"position":[[53,2]]},"1823":{"position":[[79,2],[91,2]]},"1846":{"position":[[90,2]]},"1870":{"position":[[19,2]]},"1901":{"position":[[21,2],[175,2],[299,2],[334,2]]},"1907":{"position":[[13,2],[184,2],[417,2]]},"1909":{"position":[[42,2]]},"1918":{"position":[[21,2],[175,2],[299,2],[334,2]]},"1924":{"position":[[13,2],[184,2],[417,2]]},"1926":{"position":[[42,2]]}}}],["文件名",{"_index":429,"t":{"1027":{"position":[[3,3]]},"1034":{"position":[[1,3]]},"1038":{"position":[[69,3],[105,3]]},"1210":{"position":[[37,3]]},"1532":{"position":[[37,3]]}}}],["文件系统",{"_index":474,"t":{"1064":{"position":[[48,4]]},"1388":{"position":[[48,4]]},"1775":{"position":[[77,4]]},"1777":{"position":[[34,4]]},"1784":{"position":[[47,4],[333,4],[419,4],[554,4]]},"1787":{"position":[[54,4]]},"1795":{"position":[[139,4],[193,4]]},"1800":{"position":[[60,4],[131,4]]}}}],["文化",{"_index":4,"t":{"981":{"position":[[8,2]]},"985":{"position":[[5,2],[53,2],[79,2],[99,2],[107,2]]}}}],["文本",{"_index":409,"t":{"1004":{"position":[[2,2],[8,2]]}}}],["文档",{"_index":1250,"t":{"1679":{"position":[[50,2]]},"1739":{"position":[[156,2]]},"1797":{"position":[[105,2]]},"1823":{"position":[[129,2]]},"1886":{"position":[[9,2]]},"1913":{"position":[[2,2]]},"1930":{"position":[[2,2]]}}}],["断点",{"_index":1465,"t":{"1838":{"position":[[82,2]]},"1844":{"position":[[18,2],[73,2]]},"1846":{"position":[[18,2],[59,2],[93,2],[135,2],[165,2],[195,2]]},"1853":{"position":[[360,2],[451,2]]},"1857":{"position":[[6,2],[64,2],[122,2]]},"1859":{"position":[[10,2],[40,2],[64,2],[93,2],[132,2]]},"1884":{"position":[[1,2]]}}}],["断言",{"_index":1229,"t":{"1638":{"position":[[79,2]]},"1682":{"position":[[441,2]]},"1697":{"position":[[56,2]]}}}],["新",{"_index":653,"t":{"1131":{"position":[[85,1]]},"1197":{"position":[[74,1]]},"1229":{"position":[[146,1]]},"1236":{"position":[[22,1]]},"1267":{"position":[[106,1]]},"1270":{"position":[[341,1]]},"1347":{"position":[[10,1]]},"1409":{"position":[[85,1]]},"1519":{"position":[[74,1]]},"1551":{"position":[[146,1]]},"1585":{"position":[[22,1]]},"1616":{"position":[[106,1]]},"1645":{"position":[[341,1]]},"1702":{"position":[[255,1]]},"1772":{"position":[[1175,1]]},"1777":{"position":[[22,1],[45,1],[116,1],[142,1]]},"1782":{"position":[[81,1]]},"1784":{"position":[[2,1],[1115,1],[1435,1]]}}}],["新增",{"_index":681,"t":{"1133":{"position":[[3,2],[136,2]]},"1145":{"position":[[1945,2]]},"1175":{"position":[[227,2]]},"1185":{"position":[[0,2]]},"1197":{"position":[[0,2]]},"1241":{"position":[[3,2]]},"1244":{"position":[[337,2]]},"1263":{"position":[[14,2]]},"1411":{"position":[[3,2],[136,2]]},"1423":{"position":[[1945,2]]},"1485":{"position":[[227,2]]},"1507":{"position":[[0,2]]},"1519":{"position":[[0,2]]},"1590":{"position":[[3,2]]},"1593":{"position":[[337,2]]},"1612":{"position":[[14,2]]}}}],["方式",{"_index":530,"t":{"1079":{"position":[[79,2]]},"1131":{"position":[[89,2]]},"1239":{"position":[[5,2]]},"1241":{"position":[[157,2]]},"1244":{"position":[[312,2],[341,2]]},"1246":{"position":[[76,2],[403,2]]},"1267":{"position":[[58,2]]},"1277":{"position":[[105,2]]},"1279":{"position":[[44,2],[403,2]]},"1323":{"position":[[18,2]]},"1355":{"position":[[37,2]]},"1357":{"position":[[39,2]]},"1383":{"position":[[0,2]]},"1403":{"position":[[79,2]]},"1409":{"position":[[89,2]]},"1588":{"position":[[5,2]]},"1590":{"position":[[157,2]]},"1593":{"position":[[312,2],[341,2]]},"1595":{"position":[[76,2],[403,2]]},"1616":{"position":[[58,2]]},"1622":{"position":[[16,2]]},"1626":{"position":[[2,2]]},"1652":{"position":[[105,2]]},"1654":{"position":[[44,2],[403,2]]},"1677":{"position":[[28,2]]},"1795":{"position":[[66,2]]},"1823":{"position":[[106,2]]}}}],["方案",{"_index":1293,"t":{"1719":{"position":[[51,2]]},"1760":{"position":[[41,2],[60,2]]},"1823":{"position":[[31,2]]},"1889":{"position":[[79,2]]},"1894":{"position":[[79,2]]}}}],["方法",{"_index":600,"t":{"1105":{"position":[[8,2],[106,2]]},"1107":{"position":[[8,2]]},"1117":{"position":[[22,2]]},"1131":{"position":[[151,2]]},"1145":{"position":[[1961,2]]},"1177":{"position":[[6,2]]},"1187":{"position":[[148,2]]},"1217":{"position":[[204,2]]},"1221":{"position":[[81,2]]},"1231":{"position":[[161,2]]},"1275":{"position":[[128,2]]},"1279":{"position":[[201,2],[285,2]]},"1309":{"position":[[84,2],[149,2]]},"1312":{"position":[[19,2]]},"1367":{"position":[[49,2]]},"1409":{"position":[[151,2]]},"1423":{"position":[[1961,2]]},"1447":{"position":[[22,2]]},"1462":{"position":[[8,2],[106,2]]},"1464":{"position":[[8,2]]},"1487":{"position":[[6,2]]},"1509":{"position":[[148,2]]},"1539":{"position":[[204,2]]},"1543":{"position":[[81,2]]},"1553":{"position":[[161,2]]},"1619":{"position":[[9,2],[26,2]]},"1626":{"position":[[54,2]]},"1650":{"position":[[128,2]]},"1654":{"position":[[201,2],[285,2]]},"1662":{"position":[[43,2]]},"1702":{"position":[[207,2],[220,2]]},"1708":{"position":[[47,2],[356,2]]},"1717":{"position":[[24,2]]},"1770":{"position":[[89,2]]},"1772":{"position":[[1095,2],[1911,2],[1953,2]]},"1840":{"position":[[2,2],[38,2],[89,2]]}}}],["方面",{"_index":1400,"t":{"1797":{"position":[[49,2]]}}}],["旁人",{"_index":312,"t":{"989":{"position":[[106,2]]}}}],["无法",{"_index":926,"t":{"1273":{"position":[[167,2]]},"1442":{"position":[[75,2]]},"1648":{"position":[[167,2]]},"1784":{"position":[[501,2],[641,2],[650,2],[867,2],[1056,2]]},"1787":{"position":[[3,2]]},"1795":{"position":[[206,2],[214,2]]}}}],["无法访问",{"_index":1347,"t":{"1775":{"position":[[68,4]]},"1784":{"position":[[857,4]]}}}],["无论",{"_index":393,"t":{"991":{"position":[[264,2]]},"1373":{"position":[[392,2]]}}}],["无论是",{"_index":1442,"t":{"1823":{"position":[[34,3]]}}}],["无限",{"_index":1332,"t":{"1763":{"position":[[95,2]]}}}],["无需",{"_index":632,"t":{"1127":{"position":[[72,2]]},"1133":{"position":[[8,2]]},"1257":{"position":[[466,2]]},"1263":{"position":[[19,2]]},"1377":{"position":[[353,2]]},"1405":{"position":[[72,2]]},"1411":{"position":[[8,2]]},"1606":{"position":[[466,2]]},"1612":{"position":[[19,2]]},"1632":{"position":[[17,2]]},"1682":{"position":[[444,2]]},"1872":{"position":[[45,2]]}}}],["日志",{"_index":519,"t":{"1071":{"position":[[68,2]]},"1133":{"position":[[138,2]]},"1141":{"position":[[5,2]]},"1182":{"position":[[23,2],[58,2]]},"1187":{"position":[[0,2]]},"1253":{"position":[[13,2],[20,2],[26,2]]},"1257":{"position":[[8,2],[29,2],[131,2],[140,2],[165,2],[464,2],[488,2],[509,2]]},"1259":{"position":[[23,2]]},"1261":{"position":[[16,2],[162,2],[232,2],[268,2],[499,2]]},"1263":{"position":[[662,2]]},"1265":{"position":[[22,2],[69,2],[153,2],[227,2],[355,2],[421,2],[635,2]]},"1309":{"position":[[293,2],[310,2]]},"1395":{"position":[[68,2]]},"1411":{"position":[[138,2]]},"1419":{"position":[[5,2]]},"1504":{"position":[[23,2],[58,2]]},"1509":{"position":[[0,2]]},"1602":{"position":[[13,2],[20,2],[26,2]]},"1606":{"position":[[8,2],[29,2],[131,2],[140,2],[165,2],[464,2],[488,2],[509,2]]},"1608":{"position":[[23,2]]},"1610":{"position":[[16,2],[162,2],[232,2],[268,2],[499,2]]},"1612":{"position":[[662,2]]},"1614":{"position":[[22,2],[69,2],[153,2],[227,2],[355,2],[421,2],[635,2]]},"1699":{"position":[[71,2]]},"1823":{"position":[[121,2]]}}}],["日新月异",{"_index":223,"t":{"987":{"position":[[349,4]]}}}],["日期",{"_index":1306,"t":{"1728":{"position":[[353,2]]}}}],["旧",{"_index":794,"t":{"1185":{"position":[[241,1],[432,1]]},"1197":{"position":[[10,1]]},"1507":{"position":[[241,1],[432,1]]},"1519":{"position":[[10,1]]},"1803":{"position":[[136,1]]},"1808":{"position":[[163,1]]},"1819":{"position":[[174,1]]}}}],["旧版",{"_index":706,"t":{"1137":{"position":[[69,2]]},"1415":{"position":[[69,2]]}}}],["旧版本",{"_index":1391,"t":{"1793":{"position":[[31,3]]}}}],["旨在",{"_index":1321,"t":{"1739":{"position":[[158,2]]}}}],["时",{"_index":318,"t":{"989":{"position":[[128,1]]},"1133":{"position":[[7,1]]},"1152":{"position":[[53,1]]},"1207":{"position":[[17,1],[38,1]]},"1263":{"position":[[10,1]]},"1265":{"position":[[424,1]]},"1273":{"position":[[625,1]]},"1302":{"position":[[13,1],[30,1],[47,1]]},"1304":{"position":[[35,1]]},"1351":{"position":[[39,1]]},"1363":{"position":[[36,1]]},"1367":{"position":[[472,1],[509,1]]},"1369":{"position":[[22,1],[462,1]]},"1411":{"position":[[7,1]]},"1429":{"position":[[30,1]]},"1492":{"position":[[53,1]]},"1529":{"position":[[17,1],[38,1]]},"1576":{"position":[[13,1],[30,1],[47,1]]},"1578":{"position":[[35,1]]},"1612":{"position":[[10,1]]},"1614":{"position":[[424,1]]},"1632":{"position":[[9,1]]},"1648":{"position":[[625,1]]},"1682":{"position":[[483,1]]},"1702":{"position":[[25,1]]},"1708":{"position":[[314,1]]},"1719":{"position":[[7,1],[73,1]]},"1777":{"position":[[12,1],[32,1]]},"1784":{"position":[[443,1],[1012,1],[1098,1]]},"1787":{"position":[[10,1]]},"1791":{"position":[[13,1]]},"1819":{"position":[[152,1]]},"1826":{"position":[[68,1]]},"1853":{"position":[[369,1],[458,1]]},"1859":{"position":[[122,1],[162,1],[172,1]]},"1872":{"position":[[2,1],[49,1]]}}}],["时代",{"_index":19,"t":{"983":{"position":[[3,2]]},"991":{"position":[[105,2],[159,2]]}}}],["时间",{"_index":693,"t":{"1135":{"position":[[13,2]]},"1152":{"position":[[60,2]]},"1155":{"position":[[346,2]]},"1182":{"position":[[26,2]]},"1363":{"position":[[735,2]]},"1413":{"position":[[13,2]]},"1431":{"position":[[388,2],[469,2],[516,2]]},"1492":{"position":[[60,2]]},"1495":{"position":[[346,2]]},"1504":{"position":[[26,2]]},"1728":{"position":[[355,2]]},"1859":{"position":[[180,2]]},"1937":{"position":[[7,2]]},"1938":{"position":[[7,2]]}}}],["明代",{"_index":350,"t":{"991":{"position":[[80,2]]}}}],["明文",{"_index":1061,"t":{"1338":{"position":[[32,2]]},"1351":{"position":[[24,2]]}}}],["明显",{"_index":1142,"t":{"1383":{"position":[[340,2]]}}}],["明确",{"_index":1003,"t":{"1292":{"position":[[756,2]]},"1566":{"position":[[756,2]]}}}],["易",{"_index":915,"t":{"1270":{"position":[[1275,1]]},"1279":{"position":[[3035,1]]},"1645":{"position":[[1275,1]]},"1654":{"position":[[3035,1]]}}}],["易于",{"_index":477,"t":{"1064":{"position":[[67,2]]},"1131":{"position":[[81,2]]},"1145":{"position":[[1939,2]]},"1285":{"position":[[47,2]]},"1388":{"position":[[67,2]]},"1409":{"position":[[81,2]]},"1423":{"position":[[1939,2]]},"1559":{"position":[[47,2]]}}}],["易变",{"_index":691,"t":{"1135":{"position":[[4,2]]},"1413":{"position":[[4,2]]}}}],["易用",{"_index":1246,"t":{"1677":{"position":[[15,2]]}}}],["映射",{"_index":1285,"t":{"1713":{"position":[[30,2]]},"1728":{"position":[[76,2],[97,2]]},"1850":{"position":[[409,2],[429,2],[444,2],[466,2]]},"1907":{"position":[[11,2]]},"1924":{"position":[[11,2]]}}}],["是否",{"_index":814,"t":{"1217":{"position":[[268,2]]},"1257":{"position":[[212,2]]},"1270":{"position":[[178,2]]},"1273":{"position":[[91,2],[180,2],[630,2]]},"1309":{"position":[[220,2],[402,2]]},"1345":{"position":[[443,2]]},"1349":{"position":[[33,2]]},"1351":{"position":[[56,2]]},"1353":{"position":[[99,2]]},"1539":{"position":[[268,2]]},"1606":{"position":[[212,2]]},"1645":{"position":[[178,2]]},"1648":{"position":[[91,2],[180,2],[630,2]]},"1730":{"position":[[17,2]]},"1853":{"position":[[257,2]]},"1934":{"position":[[5,2]]}}}],["是否是",{"_index":1037,"t":{"1309":{"position":[[463,3]]}}}],["显",{"_index":1151,"t":{"1431":{"position":[[21,1]]}}}],["显现",{"_index":155,"t":{"987":{"position":[[111,2]]}}}],["显示",{"_index":1038,"t":{"1309":{"position":[[476,2]]},"1433":{"position":[[626,2]]},"1844":{"position":[[154,2]]},"1848":{"position":[[43,2],[68,2]]},"1850":{"position":[[91,2]]},"1934":{"position":[[109,2]]}}}],["显著",{"_index":1194,"t":{"1444":{"position":[[216,2]]}}}],["普通",{"_index":358,"t":{"991":{"position":[[114,2]]},"1626":{"position":[[6,2]]},"1697":{"position":[[27,2]]},"1717":{"position":[[22,2]]},"1859":{"position":[[38,2],[62,2]]}}}],["普通人",{"_index":244,"t":{"987":{"position":[[461,3]]},"991":{"position":[[50,3]]}}}],["智",{"_index":142,"t":{"987":{"position":[[68,1]]}}}],["智慧",{"_index":384,"t":{"991":{"position":[[218,2]]}}}],["暂停",{"_index":1168,"t":{"1431":{"position":[[467,2],[514,2]]},"1859":{"position":[[126,2]]}}}],["暴力",{"_index":1088,"t":{"1351":{"position":[[92,2]]}}}],["暴力破解",{"_index":1085,"t":{"1351":{"position":[[69,4]]}}}],["暴露",{"_index":1344,"t":{"1772":{"position":[[2344,2]]}}}],["更",{"_index":52,"t":{"983":{"position":[[104,1]]},"987":{"position":[[26,1],[403,1]]},"989":{"position":[[86,1]]},"991":{"position":[[204,1]]},"1064":{"position":[[134,1]]},"1077":{"position":[[72,1]]},"1094":{"position":[[226,1]]},"1098":{"position":[[158,1]]},"1229":{"position":[[310,1],[313,1]]},"1270":{"position":[[1284,1]]},"1279":{"position":[[129,1]]},"1285":{"position":[[46,1],[66,1],[87,1]]},"1343":{"position":[[487,1]]},"1359":{"position":[[40,1],[55,1]]},"1383":{"position":[[177,1],[222,1]]},"1388":{"position":[[134,1]]},"1401":{"position":[[72,1]]},"1431":{"position":[[217,1]]},"1551":{"position":[[310,1],[313,1]]},"1559":{"position":[[46,1],[66,1],[87,1]]},"1645":{"position":[[1284,1]]},"1654":{"position":[[129,1]]},"1657":{"position":[[42,1]]},"1775":{"position":[[37,1],[72,1]]},"1789":{"position":[[59,1]]},"1795":{"position":[[88,1]]},"1797":{"position":[[85,1],[114,1]]},"1800":{"position":[[77,1]]},"1889":{"position":[[84,1]]},"1894":{"position":[[84,1]]}}}],["更加",{"_index":378,"t":{"991":{"position":[[196,2]]},"1636":{"position":[[49,2]]}}}],["更好",{"_index":546,"t":{"1082":{"position":[[70,2]]},"1909":{"position":[[94,2]]},"1926":{"position":[[94,2]]}}}],["更慢",{"_index":1072,"t":{"1343":{"position":[[491,2]]}}}],["更改",{"_index":1493,"t":{"1857":{"position":[[13,2],[134,2]]}}}],["更新",{"_index":722,"t":{"1145":{"position":[[1914,2]]},"1182":{"position":[[5,2]]},"1189":{"position":[[22,2]]},"1194":{"position":[[3,2]]},"1201":{"position":[[22,2]]},"1349":{"position":[[37,2]]},"1351":{"position":[[49,2]]},"1423":{"position":[[1914,2]]},"1504":{"position":[[5,2]]},"1511":{"position":[[22,2]]},"1516":{"position":[[3,2]]},"1523":{"position":[[22,2]]},"1889":{"position":[[99,2]]},"1894":{"position":[[99,2]]}}}],["替代",{"_index":521,"t":{"1077":{"position":[[8,2]]},"1401":{"position":[[8,2]]},"1719":{"position":[[49,2]]},"1821":{"position":[[161,2]]},"1889":{"position":[[77,2]]},"1894":{"position":[[77,2]]},"1909":{"position":[[130,2],[205,2]]},"1926":{"position":[[130,2],[205,2]]}}}],["替换",{"_index":410,"t":{"1004":{"position":[[4,2],[22,2]]},"1018":{"position":[[0,2],[21,2]]},"1022":{"position":[[13,2]]},"1064":{"position":[[69,2]]},"1131":{"position":[[978,2]]},"1185":{"position":[[20,2],[317,2]]},"1189":{"position":[[1,2],[13,2]]},"1197":{"position":[[1446,2],[2086,2]]},"1201":{"position":[[1,2],[13,2]]},"1207":{"position":[[15,2]]},"1229":{"position":[[162,2],[211,2]]},"1388":{"position":[[69,2]]},"1409":{"position":[[978,2]]},"1507":{"position":[[20,2],[317,2]]},"1511":{"position":[[1,2],[13,2]]},"1519":{"position":[[1446,2],[2086,2]]},"1523":{"position":[[1,2],[13,2]]},"1529":{"position":[[15,2]]},"1551":{"position":[[162,2],[211,2]]},"1691":{"position":[[26,2]]},"1697":{"position":[[127,2]]},"1884":{"position":[[6,2]]}}}],["最后",{"_index":571,"t":{"1089":{"position":[[207,2]]}}}],["最大",{"_index":1175,"t":{"1433":{"position":[[163,2],[186,2]]},"1728":{"position":[[100,2]]}}}],["最小",{"_index":662,"t":{"1131":{"position":[[180,2]]},"1409":{"position":[[180,2]]},"1728":{"position":[[79,2]]}}}],["最小化",{"_index":451,"t":{"1061":{"position":[[29,3]]},"1385":{"position":[[29,3]]}}}],["最少",{"_index":858,"t":{"1231":{"position":[[53,2],[90,2]]},"1553":{"position":[[53,2],[90,2]]}}}],["最早",{"_index":1454,"t":{"1828":{"position":[[39,2]]}}}],["最终",{"_index":564,"t":{"1089":{"position":[[141,2]]},"1369":{"position":[[399,2]]},"1377":{"position":[[270,2]]}}}],["最近",{"_index":1169,"t":{"1431":{"position":[[510,2]]}}}],["有些",{"_index":1354,"t":{"1784":{"position":[[52,2]]}}}],["有人",{"_index":139,"t":{"987":{"position":[[59,2]]}}}],["有关",{"_index":1361,"t":{"1784":{"position":[[426,2]]}}}],["有助于",{"_index":591,"t":{"1098":{"position":[[153,3]]},"1227":{"position":[[25,3]]},"1549":{"position":[[25,3]]}}}],["有效",{"_index":1086,"t":{"1351":{"position":[[88,2]]}}}],["有用",{"_index":1401,"t":{"1797":{"position":[[53,2]]}}}],["有益",{"_index":119,"t":{"985":{"position":[[92,2]]}}}],["朋友",{"_index":860,"t":{"1231":{"position":[[101,2]]},"1553":{"position":[[101,2]]}}}],["服务",{"_index":454,"t":{"1061":{"position":[[41,2]]},"1064":{"position":[[64,2],[86,2]]},"1066":{"position":[[14,2],[41,2]]},"1069":{"position":[[75,2],[219,2],[341,2],[566,2],[811,2],[998,2],[1280,2]]},"1071":{"position":[[70,2]]},"1073":{"position":[[147,2],[278,2],[455,2],[530,2]]},"1077":{"position":[[33,2],[47,2]]},"1079":{"position":[[36,2]]},"1100":{"position":[[21,2],[52,2]]},"1102":{"position":[[7,2]]},"1105":{"position":[[0,2],[184,2],[269,2],[314,2]]},"1109":{"position":[[55,2]]},"1117":{"position":[[0,2]]},"1121":{"position":[[55,2]]},"1123":{"position":[[0,2]]},"1131":{"position":[[624,2]]},"1152":{"position":[[0,2],[47,2]]},"1155":{"position":[[210,2],[365,2],[438,2],[593,2],[610,2],[975,2],[1161,2]]},"1161":{"position":[[26,2]]},"1164":{"position":[[0,2],[9,2]]},"1167":{"position":[[2,2],[7,2],[55,2],[338,2],[405,2],[1187,2],[1198,2],[1225,2],[1242,2],[1622,2],[1836,2]]},"1172":{"position":[[2,2]]},"1175":{"position":[[2,2],[13,2],[56,2],[195,2],[254,2],[420,2],[786,2],[791,2]]},"1177":{"position":[[0,2]]},"1182":{"position":[[2,2],[10,2],[30,2],[79,2]]},"1185":{"position":[[22,2],[242,2],[319,2],[428,2],[433,2],[716,2],[1082,2],[1087,2]]},"1187":{"position":[[2,2],[891,2]]},"1189":{"position":[[3,2],[15,2]]},"1194":{"position":[[0,2],[14,2]]},"1197":{"position":[[11,2],[75,2],[1448,2],[2088,2],[2213,2]]},"1201":{"position":[[3,2],[15,2]]},"1205":{"position":[[0,2]]},"1207":{"position":[[0,2],[36,2],[67,2],[81,2]]},"1217":{"position":[[14,2],[266,2],[289,2]]},"1292":{"position":[[323,2]]},"1385":{"position":[[41,2]]},"1388":{"position":[[64,2],[86,2]]},"1390":{"position":[[14,2],[41,2]]},"1393":{"position":[[75,2],[219,2],[341,2],[566,2],[811,2],[998,2],[1280,2]]},"1395":{"position":[[70,2]]},"1397":{"position":[[147,2],[278,2],[455,2],[530,2]]},"1401":{"position":[[33,2],[47,2]]},"1403":{"position":[[36,2]]},"1409":{"position":[[624,2]]},"1447":{"position":[[0,2]]},"1451":{"position":[[55,2]]},"1453":{"position":[[0,2]]},"1457":{"position":[[21,2],[52,2]]},"1459":{"position":[[7,2]]},"1462":{"position":[[0,2],[184,2],[269,2],[314,2]]},"1466":{"position":[[55,2]]},"1474":{"position":[[0,2],[9,2]]},"1477":{"position":[[2,2],[7,2],[55,2],[338,2],[405,2],[1187,2],[1198,2],[1225,2],[1242,2],[1622,2],[1836,2]]},"1482":{"position":[[2,2]]},"1485":{"position":[[2,2],[13,2],[56,2],[195,2],[254,2],[420,2],[786,2],[791,2]]},"1487":{"position":[[0,2]]},"1492":{"position":[[0,2],[47,2]]},"1495":{"position":[[210,2],[365,2],[438,2],[593,2],[610,2],[975,2],[1161,2]]},"1501":{"position":[[26,2]]},"1504":{"position":[[2,2],[10,2],[30,2],[79,2]]},"1507":{"position":[[22,2],[242,2],[319,2],[428,2],[433,2],[716,2],[1082,2],[1087,2]]},"1509":{"position":[[2,2],[891,2]]},"1511":{"position":[[3,2],[15,2]]},"1516":{"position":[[0,2],[14,2]]},"1519":{"position":[[11,2],[75,2],[1448,2],[2088,2],[2213,2]]},"1523":{"position":[[3,2],[15,2]]},"1527":{"position":[[0,2]]},"1529":{"position":[[0,2],[36,2],[67,2],[81,2]]},"1539":{"position":[[14,2],[266,2],[289,2]]},"1566":{"position":[[323,2]]},"1784":{"position":[[597,2]]},"1803":{"position":[[866,2],[1021,2]]},"1808":{"position":[[1044,2],[1203,2]]},"1821":{"position":[[143,2],[155,2],[176,2],[219,2]]},"1823":{"position":[[18,2],[178,2],[208,2]]}}}],["服务器",{"_index":1418,"t":{"1803":{"position":[[779,3],[1225,3],[1285,3]]},"1808":{"position":[[891,3]]},"1817":{"position":[[303,3]]}}}],["服务器返回",{"_index":891,"t":{"1263":{"position":[[664,5]]},"1612":{"position":[[664,5]]}}}],["服务端",{"_index":945,"t":{"1277":{"position":[[89,3]]},"1652":{"position":[[89,3]]}}}],["未",{"_index":781,"t":{"1167":{"position":[[1194,1]]},"1251":{"position":[[420,1]]},"1431":{"position":[[35,1],[107,1]]},"1477":{"position":[[1194,1]]},"1600":{"position":[[420,1]]},"1853":{"position":[[261,1],[307,1]]}}}],["未必",{"_index":121,"t":{"985":{"position":[[101,2]]}}}],["未来",{"_index":184,"t":{"987":{"position":[[210,2],[341,2]]},"1127":{"position":[[53,2]]},"1141":{"position":[[19,2]]},"1147":{"position":[[9,2]]},"1255":{"position":[[11,2]]},"1261":{"position":[[123,2]]},"1263":{"position":[[0,2]]},"1265":{"position":[[446,2]]},"1405":{"position":[[53,2]]},"1419":{"position":[[19,2]]},"1425":{"position":[[9,2]]},"1604":{"position":[[11,2]]},"1610":{"position":[[123,2]]},"1612":{"position":[[0,2]]},"1614":{"position":[[446,2]]},"1909":{"position":[[97,2]]},"1926":{"position":[[97,2]]}}}],["未注册",{"_index":879,"t":{"1246":{"position":[[405,3]]},"1595":{"position":[[405,3]]}}}],["未知",{"_index":889,"t":{"1261":{"position":[[496,2]]},"1610":{"position":[[496,2]]}}}],["未能",{"_index":216,"t":{"987":{"position":[[322,2]]}}}],["本",{"_index":597,"t":{"1100":{"position":[[37,1]]},"1457":{"position":[[37,1]]},"1739":{"position":[[153,1]]},"1821":{"position":[[182,1]]},"1823":{"position":[[126,1]]}}}],["本地",{"_index":1408,"t":{"1800":{"position":[[73,2]]},"1823":{"position":[[27,2]]}}}],["本能",{"_index":273,"t":{"987":{"position":[[576,2]]}}}],["本身",{"_index":1398,"t":{"1795":{"position":[[226,2]]}}}],["机",{"_index":1439,"t":{"1821":{"position":[[183,1]]}}}],["机制",{"_index":497,"t":{"1066":{"position":[[89,2]]},"1077":{"position":[[51,2]]},"1127":{"position":[[23,2]]},"1137":{"position":[[62,2]]},"1152":{"position":[[44,2]]},"1390":{"position":[[89,2]]},"1401":{"position":[[51,2]]},"1405":{"position":[[23,2]]},"1415":{"position":[[62,2]]},"1444":{"position":[[200,2]]},"1492":{"position":[[44,2]]},"1800":{"position":[[38,2]]}}}],["机器",{"_index":1460,"t":{"1830":{"position":[[53,2]]}}}],["权利",{"_index":38,"t":{"983":{"position":[[67,2]]}}}],["权限",{"_index":1392,"t":{"1795":{"position":[[0,2],[19,2]]},"1800":{"position":[[93,2],[135,2]]},"1803":{"position":[[397,2],[469,2]]},"1808":{"position":[[424,2],[492,2]]},"1819":{"position":[[68,2],[241,2],[256,2]]},"1823":{"position":[[93,2]]}}}],["李自成",{"_index":340,"t":{"991":{"position":[[54,3]]}}}],["条",{"_index":899,"t":{"1265":{"position":[[634,1]]},"1614":{"position":[[634,1]]}}}],["条件",{"_index":725,"t":{"1145":{"position":[[1935,2]]},"1369":{"position":[[44,2],[467,2]]},"1371":{"position":[[17,2],[216,2],[553,2]]},"1383":{"position":[[28,2]]},"1423":{"position":[[1935,2]]},"1642":{"position":[[10,2],[126,2]]},"1846":{"position":[[133,2]]}}}],["来看",{"_index":254,"t":{"987":{"position":[[492,2]]}}}],["来说",{"_index":1373,"t":{"1784":{"position":[[775,2]]}}}],["松",{"_index":665,"t":{"1131":{"position":[[201,1]]},"1409":{"position":[[201,1]]}}}],["极端",{"_index":90,"t":{"983":{"position":[[224,2]]}}}],["构建",{"_index":744,"t":{"1149":{"position":[[103,2]]},"1427":{"position":[[103,2]]},"1435":{"position":[[4,2]]},"1442":{"position":[[79,2]]},"1444":{"position":[[177,2]]},"1679":{"position":[[57,2]]},"1791":{"position":[[1,2]]},"1797":{"position":[[44,2]]}}}],["构造",{"_index":1423,"t":{"1815":{"position":[[117,2]]}}}],["构造函数",{"_index":658,"t":{"1131":{"position":[[146,4]]},"1409":{"position":[[146,4]]}}}],["枚举",{"_index":771,"t":{"1167":{"position":[[91,2],[100,2]]},"1477":{"position":[[91,2],[100,2]]}}}],["架构",{"_index":447,"t":{"1061":{"position":[[16,2]]},"1077":{"position":[[40,2]]},"1385":{"position":[[16,2]]},"1401":{"position":[[40,2]]},"1821":{"position":[[145,2]]},"1850":{"position":[[66,2],[405,2]]}}}],["架构设计",{"_index":624,"t":{"1127":{"position":[[33,4]]},"1279":{"position":[[496,4]]},"1405":{"position":[[33,4]]},"1654":{"position":[[496,4]]}}}],["某个",{"_index":1123,"t":{"1371":{"position":[[15,2],[37,2]]},"1373":{"position":[[12,2]]},"1789":{"position":[[23,2]]}}}],["某些",{"_index":96,"t":{"985":{"position":[[9,2]]},"1784":{"position":[[365,2],[635,2]]},"1795":{"position":[[146,2]]}}}],["某种",{"_index":1501,"t":{"1859":{"position":[[158,2]]}}}],["查找",{"_index":1430,"t":{"1819":{"position":[[208,2]]}}}],["查看",{"_index":534,"t":{"1079":{"position":[[130,2]]},"1111":{"position":[[176,2]]},"1113":{"position":[[72,2]]},"1125":{"position":[[295,2]]},"1161":{"position":[[492,2]]},"1169":{"position":[[482,2]]},"1179":{"position":[[591,2]]},"1191":{"position":[[1407,2]]},"1203":{"position":[[997,2]]},"1217":{"position":[[264,2]]},"1225":{"position":[[993,2]]},"1309":{"position":[[210,2],[282,2],[313,2]]},"1403":{"position":[[130,2]]},"1455":{"position":[[295,2]]},"1468":{"position":[[176,2]]},"1470":{"position":[[72,2]]},"1479":{"position":[[482,2]]},"1489":{"position":[[591,2]]},"1501":{"position":[[492,2]]},"1513":{"position":[[1407,2]]},"1525":{"position":[[997,2]]},"1539":{"position":[[264,2]]},"1547":{"position":[[993,2]]},"1844":{"position":[[135,2]]},"1846":{"position":[[163,2]]},"1848":{"position":[[126,2]]},"1850":{"position":[[23,2],[52,2],[260,2]]},"1853":{"position":[[23,2]]},"1855":{"position":[[22,2]]},"1934":{"position":[[3,2]]},"1937":{"position":[[37,2]]}}}],["查询",{"_index":917,"t":{"1270":{"position":[[1290,2]]},"1645":{"position":[[1290,2]]},"1687":{"position":[[34,2]]},"1934":{"position":[[17,2]]},"1938":{"position":[[579,2]]}}}],["标准",{"_index":755,"t":{"1155":{"position":[[2,2],[51,2],[393,2]]},"1323":{"position":[[25,2]]},"1335":{"position":[[90,2],[118,2],[123,2]]},"1429":{"position":[[19,2]]},"1495":{"position":[[2,2],[51,2],[393,2]]},"1682":{"position":[[7,2]]},"1697":{"position":[[129,2]]},"1739":{"position":[[88,2]]},"1760":{"position":[[17,2]]},"1823":{"position":[[39,2]]},"1891":{"position":[[10,2]]},"1896":{"position":[[10,2]]},"1911":{"position":[[126,2]]},"1928":{"position":[[126,2]]}}}],["标准化",{"_index":746,"t":{"1152":{"position":[[14,3]]},"1492":{"position":[[14,3]]}}}],["标志",{"_index":1245,"t":{"1670":{"position":[[116,2]]},"1850":{"position":[[238,2]]}}}],["标签",{"_index":1274,"t":{"1702":{"position":[[120,2]]},"1713":{"position":[[9,2],[277,2]]},"1722":{"position":[[37,2]]},"1728":{"position":[[0,2]]}}}],["标记",{"_index":1491,"t":{"1857":{"position":[[2,2],[60,2],[118,2]]}}}],["标识",{"_index":1407,"t":{"1800":{"position":[[66,2]]}}}],["栈",{"_index":1173,"t":{"1433":{"position":[[6,1]]},"1800":{"position":[[86,1]]},"1821":{"position":[[234,1]]},"1844":{"position":[[158,1]]},"1850":{"position":[[262,1],[362,1]]}}}],["树",{"_index":1399,"t":{"1797":{"position":[[29,1]]}}}],["校验",{"_index":1224,"t":{"1634":{"position":[[78,2],[220,2]]},"1736":{"position":[[34,2]]},"1739":{"position":[[136,2]]},"1746":{"position":[[99,2],[178,2]]}}}],["核心",{"_index":449,"t":{"1061":{"position":[[25,2]]},"1069":{"position":[[189,2]]},"1079":{"position":[[4,2]]},"1127":{"position":[[84,2]]},"1131":{"position":[[175,2]]},"1149":{"position":[[122,2]]},"1227":{"position":[[14,2]]},"1257":{"position":[[36,2]]},"1267":{"position":[[4,2]]},"1279":{"position":[[166,2]]},"1385":{"position":[[25,2]]},"1393":{"position":[[189,2]]},"1403":{"position":[[4,2]]},"1405":{"position":[[84,2]]},"1409":{"position":[[175,2]]},"1427":{"position":[[122,2]]},"1549":{"position":[[14,2]]},"1606":{"position":[[36,2]]},"1616":{"position":[[4,2]]},"1628":{"position":[[18,2]]},"1654":{"position":[[166,2]]},"1702":{"position":[[170,2]]},"1704":{"position":[[18,2]]},"1784":{"position":[[673,2]]}}}],["核心思想",{"_index":448,"t":{"1061":{"position":[[19,4]]},"1234":{"position":[[68,4]]},"1282":{"position":[[82,4]]},"1385":{"position":[[19,4]]},"1556":{"position":[[82,4]]},"1583":{"position":[[68,4]]}}}],["根",{"_index":1382,"t":{"1787":{"position":[[53,1]]}}}],["根基",{"_index":270,"t":{"987":{"position":[[561,2]]}}}],["根据",{"_index":734,"t":{"1145":{"position":[[2027,2]]},"1157":{"position":[[0,2]]},"1261":{"position":[[262,2]]},"1423":{"position":[[2027,2]]},"1497":{"position":[[0,2]]},"1610":{"position":[[262,2]]},"1699":{"position":[[121,2]]},"1797":{"position":[[99,2]]},"1850":{"position":[[396,2]]}}}],["根目录",{"_index":1346,"t":{"1775":{"position":[[31,3],[58,3]]},"1777":{"position":[[24,3],[46,3],[118,3],[144,3]]},"1780":{"position":[[36,3]]},"1784":{"position":[[4,3],[1117,3],[1448,3]]}}}],["格式",{"_index":700,"t":{"1137":{"position":[[7,2]]},"1155":{"position":[[6,2],[53,2]]},"1353":{"position":[[138,2]]},"1415":{"position":[[7,2]]},"1495":{"position":[[6,2],[53,2]]},"1728":{"position":[[34,2],[350,2],[378,2]]}}}],["框架",{"_index":1277,"t":{"1702":{"position":[[156,2]]},"1736":{"position":[[56,2]]},"1823":{"position":[[47,2]]}}}],["检查",{"_index":929,"t":{"1273":{"position":[[413,2],[626,2]]},"1353":{"position":[[90,2]]},"1634":{"position":[[83,2]]},"1648":{"position":[[413,2],[626,2]]},"1702":{"position":[[178,2]]},"1819":{"position":[[58,2]]}}}],["检查和",{"_index":1272,"t":{"1702":{"position":[[26,3]]}}}],["检测",{"_index":808,"t":{"1207":{"position":[[40,2]]},"1351":{"position":[[52,2]]},"1529":{"position":[[40,2]]}}}],["概念",{"_index":962,"t":{"1279":{"position":[[168,2]]},"1654":{"position":[[168,2]]}}}],["模块",{"_index":485,"t":{"1064":{"position":[[106,2]]},"1066":{"position":[[47,2]]},"1131":{"position":[[3,2]]},"1229":{"position":[[116,2],[367,2],[375,2]]},"1234":{"position":[[82,2]]},"1282":{"position":[[93,2],[119,2]]},"1388":{"position":[[106,2]]},"1390":{"position":[[47,2]]},"1409":{"position":[[3,2]]},"1435":{"position":[[2,2]]},"1551":{"position":[[116,2],[367,2],[375,2]]},"1556":{"position":[[93,2],[119,2]]},"1583":{"position":[[82,2]]}}}],["模块化",{"_index":472,"t":{"1064":{"position":[[40,3]]},"1094":{"position":[[192,3]]},"1388":{"position":[[40,3]]}}}],["模型",{"_index":708,"t":{"1139":{"position":[[5,2]]},"1145":{"position":[[1986,2]]},"1277":{"position":[[94,2]]},"1365":{"position":[[12,2]]},"1417":{"position":[[5,2]]},"1423":{"position":[[1986,2]]},"1652":{"position":[[94,2]]}}}],["模式",{"_index":424,"t":{"1018":{"position":[[19,2]]},"1133":{"position":[[53,2]]},"1145":{"position":[[7611,2]]},"1267":{"position":[[41,2],[47,2]]},"1279":{"position":[[15,2],[20,2],[441,2]]},"1383":{"position":[[105,2]]},"1411":{"position":[[53,2]]},"1423":{"position":[[7611,2]]},"1616":{"position":[[41,2],[47,2]]},"1654":{"position":[[15,2],[20,2],[441,2]]},"1670":{"position":[[160,2]]}}}],["模式匹配",{"_index":428,"t":{"1022":{"position":[[28,4]]}}}],["模拟",{"_index":516,"t":{"1069":{"position":[[1193,2]]},"1071":{"position":[[751,2]]},"1105":{"position":[[312,2]]},"1123":{"position":[[146,2]]},"1157":{"position":[[184,2]]},"1270":{"position":[[982,2]]},"1277":{"position":[[1065,2],[1783,2],[1874,2]]},"1393":{"position":[[1193,2]]},"1395":{"position":[[751,2]]},"1453":{"position":[[146,2]]},"1462":{"position":[[312,2]]},"1497":{"position":[[184,2]]},"1645":{"position":[[982,2]]},"1652":{"position":[[1065,2],[1783,2],[1874,2]]},"1940":{"position":[[623,2]]}}}],["次数",{"_index":1092,"t":{"1353":{"position":[[160,2]]},"1431":{"position":[[428,2]]}}}],["欢迎",{"_index":995,"t":{"1290":{"position":[[271,2]]},"1564":{"position":[[271,2]]},"1675":{"position":[[282,2]]}}}],["正在",{"_index":1132,"t":{"1381":{"position":[[182,2]]},"1940":{"position":[[822,2]]}}}],["正常",{"_index":955,"t":{"1277":{"position":[[1785,2],[2130,2]]},"1619":{"position":[[41,2]]},"1652":{"position":[[1785,2],[2130,2]]},"1784":{"position":[[503,2],[1161,2]]},"1795":{"position":[[208,2]]},"1838":{"position":[[60,2]]}}}],["正是",{"_index":275,"t":{"987":{"position":[[581,2]]}}}],["正确",{"_index":1047,"t":{"1316":{"position":[[118,2]]},"1784":{"position":[[322,2]]},"1823":{"position":[[101,2]]},"1850":{"position":[[412,2]]}}}],["此时",{"_index":1283,"t":{"1708":{"position":[[147,2],[224,2]]},"1784":{"position":[[1425,2]]},"1853":{"position":[[386,2]]},"1937":{"position":[[17,2],[362,2]]}}}],["步入",{"_index":24,"t":{"983":{"position":[[19,2]]}}}],["步骤",{"_index":1464,"t":{"1835":{"position":[[14,2]]}}}],["武装",{"_index":191,"t":{"987":{"position":[[229,2]]}}}],["死",{"_index":1521,"t":{"1932":{"position":[[9,1],[28,1]]},"1937":{"position":[[15,1],[367,1]]},"1938":{"position":[[16,1]]}}}],["死锁",{"_index":933,"t":{"1275":{"position":[[56,2]]},"1650":{"position":[[56,2]]}}}],["段",{"_index":703,"t":{"1137":{"position":[[59,1]]},"1141":{"position":[[152,1]]},"1257":{"position":[[209,1]]},"1415":{"position":[[59,1]]},"1419":{"position":[[152,1]]},"1606":{"position":[[209,1]]},"1626":{"position":[[51,1],[62,1]]},"1702":{"position":[[225,1],[241,1]]},"1713":{"position":[[4,1],[276,1]]},"1719":{"position":[[91,1]]},"1722":{"position":[[36,1]]},"1728":{"position":[[18,1],[613,1]]},"1739":{"position":[[135,1]]},"1770":{"position":[[14,1],[42,1]]},"1934":{"position":[[103,1],[112,1]]}}}],["每个",{"_index":388,"t":{"991":{"position":[[243,2]]},"1027":{"position":[[1,2]]},"1079":{"position":[[41,2]]},"1094":{"position":[[172,2]]},"1119":{"position":[[3,2]]},"1131":{"position":[[165,2]]},"1207":{"position":[[65,2]]},"1217":{"position":[[287,2]]},"1229":{"position":[[64,2]]},"1285":{"position":[[32,2]]},"1292":{"position":[[747,2]]},"1367":{"position":[[457,2]]},"1403":{"position":[[41,2]]},"1409":{"position":[[165,2]]},"1433":{"position":[[172,2]]},"1449":{"position":[[3,2]]},"1529":{"position":[[65,2]]},"1539":{"position":[[287,2]]},"1551":{"position":[[64,2]]},"1559":{"position":[[32,2]]},"1566":{"position":[[747,2]]}}}],["每次",{"_index":614,"t":{"1119":{"position":[[61,2]]},"1244":{"position":[[335,2]]},"1449":{"position":[[61,2]]},"1593":{"position":[[335,2]]}}}],["比如",{"_index":466,"t":{"1064":{"position":[[21,2]]},"1094":{"position":[[198,2]]},"1388":{"position":[[21,2]]},"1784":{"position":[[1069,2]]}}}],["水平",{"_index":159,"t":{"987":{"position":[[125,2]]}}}],["永久",{"_index":941,"t":{"1277":{"position":[[30,2]]},"1363":{"position":[[673,2]]},"1652":{"position":[[30,2]]}}}],["汇编",{"_index":1483,"t":{"1850":{"position":[[315,2]]}}}],["池",{"_index":710,"t":{"1139":{"position":[[26,1]]},"1417":{"position":[[26,1]]}}}],["沙箱",{"_index":1349,"t":{"1775":{"position":[[92,2]]},"1795":{"position":[[265,2]]}}}],["没",{"_index":1217,"t":{"1632":{"position":[[33,1]]}}}],["没有",{"_index":298,"t":{"989":{"position":[[46,2]]},"1217":{"position":[[301,2]]},"1363":{"position":[[624,2]]},"1539":{"position":[[301,2]]},"1777":{"position":[[158,2]]},"1784":{"position":[[358,2],[465,2],[625,2],[844,2],[1040,2]]},"1795":{"position":[[185,2]]},"1938":{"position":[[517,2]]}}}],["泄漏",{"_index":1191,"t":{"1444":{"position":[[165,2]]}}}],["泄露",{"_index":1062,"t":{"1338":{"position":[[34,2]]},"1351":{"position":[[26,2]]}}}],["法则",{"_index":857,"t":{"1231":{"position":[[50,2]]},"1553":{"position":[[50,2]]}}}],["泛",{"_index":974,"t":{"1279":{"position":[[2927,1],[3695,1],[3977,1],[5609,1]]},"1654":{"position":[[2927,1],[3695,1],[3977,1],[5609,1]]}}}],["泡沫",{"_index":162,"t":{"987":{"position":[[143,2],[327,2]]}}}],["注入",{"_index":646,"t":{"1131":{"position":[[56,2],[141,2],[155,2]]},"1279":{"position":[[397,2]]},"1292":{"position":[[770,2]]},"1306":{"position":[[53,2]]},"1409":{"position":[[56,2],[141,2],[155,2]]},"1566":{"position":[[770,2]]},"1580":{"position":[[53,2]]},"1654":{"position":[[397,2]]}}}],["注册",{"_index":492,"t":{"1066":{"position":[[16,2]]},"1069":{"position":[[216,2],[564,2]]},"1073":{"position":[[145,2]]},"1161":{"position":[[21,2]]},"1175":{"position":[[369,2],[418,2]]},"1185":{"position":[[665,2],[714,2]]},"1207":{"position":[[34,2]]},"1217":{"position":[[12,2]]},"1246":{"position":[[72,2]]},"1390":{"position":[[16,2]]},"1393":{"position":[[216,2],[564,2]]},"1397":{"position":[[145,2]]},"1485":{"position":[[369,2],[418,2]]},"1501":{"position":[[21,2]]},"1507":{"position":[[665,2],[714,2]]},"1529":{"position":[[34,2]]},"1539":{"position":[[12,2]]},"1595":{"position":[[72,2]]},"1803":{"position":[[490,2]]}}}],["注意",{"_index":1154,"t":{"1431":{"position":[[50,2]]},"1642":{"position":[[101,2]]},"1823":{"position":[[62,2]]},"1938":{"position":[[509,2]]}}}],["注意事项",{"_index":1209,"t":{"1628":{"position":[[55,4]]}}}],["注解",{"_index":1526,"t":{"1934":{"position":[[74,2]]}}}],["活着",{"_index":339,"t":{"991":{"position":[[45,2]]}}}],["派生类",{"_index":835,"t":{"1229":{"position":[[220,3]]},"1551":{"position":[[220,3]]}}}],["流",{"_index":809,"t":{"1210":{"position":[[73,1]]},"1532":{"position":[[73,1]]},"1630":{"position":[[208,1]]}}}],["流向",{"_index":51,"t":{"983":{"position":[[102,2]]}}}],["流式",{"_index":1048,"t":{"1323":{"position":[[16,2]]},"1335":{"position":[[68,2]]},"1630":{"position":[[183,2]]},"1697":{"position":[[185,2]]},"1770":{"position":[[50,2]]}}}],["测试",{"_index":797,"t":{"1189":{"position":[[102,2]]},"1279":{"position":[[462,2],[5976,2]]},"1285":{"position":[[55,2],[69,2]]},"1287":{"position":[[27,2]]},"1309":{"position":[[400,2],[461,2]]},"1511":{"position":[[102,2]]},"1559":{"position":[[55,2],[69,2]]},"1561":{"position":[[27,2]]},"1654":{"position":[[462,2],[5976,2]]},"1791":{"position":[[11,2]]},"1797":{"position":[[41,2]]},"1819":{"position":[[51,2]]}}}],["测试日志",{"_index":520,"t":{"1073":{"position":[[451,4]]},"1397":{"position":[[451,4]]}}}],["测试步骤",{"_index":576,"t":{"1094":{"position":[[217,4]]}}}],["浏览器",{"_index":1029,"t":{"1309":{"position":[[207,3]]}}}],["浮点",{"_index":1477,"t":{"1850":{"position":[[166,2]]}}}],["消息",{"_index":493,"t":{"1066":{"position":[[19,2]]},"1100":{"position":[[25,2],[32,2],[49,2]]},"1102":{"position":[[4,2]]},"1105":{"position":[[4,2],[102,2]]},"1109":{"position":[[8,2]]},"1119":{"position":[[65,2],[86,2]]},"1152":{"position":[[17,2]]},"1155":{"position":[[4,2]]},"1167":{"position":[[1205,2]]},"1361":{"position":[[261,2],[363,2]]},"1363":{"position":[[626,2]]},"1390":{"position":[[19,2]]},"1449":{"position":[[65,2],[86,2]]},"1457":{"position":[[25,2],[32,2],[49,2]]},"1459":{"position":[[4,2]]},"1462":{"position":[[4,2],[102,2]]},"1466":{"position":[[8,2]]},"1477":{"position":[[1205,2]]},"1492":{"position":[[17,2]]},"1495":{"position":[[4,2]]},"1666":{"position":[[333,2]]}}}],["消息传递",{"_index":487,"t":{"1064":{"position":[[111,4]]},"1359":{"position":[[15,4]]},"1388":{"position":[[111,4]]}}}],["消费",{"_index":1213,"t":{"1630":{"position":[[236,2]]}}}],["消费者",{"_index":1116,"t":{"1365":{"position":[[9,3]]}}}],["涵盖",{"_index":1324,"t":{"1739":{"position":[[220,2]]}}}],["淡化",{"_index":335,"t":{"991":{"position":[[29,2]]}}}],["淮",{"_index":354,"t":{"991":{"position":[[90,1]]}}}],["深入",{"_index":1313,"t":{"1732":{"position":[[231,2]]}}}],["深度",{"_index":11,"t":{"981":{"position":[[26,2]]},"1433":{"position":[[167,2]]}}}],["添加",{"_index":430,"t":{"1027":{"position":[[6,2]]},"1141":{"position":[[52,2]]},"1143":{"position":[[45,2]]},"1231":{"position":[[253,2]]},"1236":{"position":[[20,2]]},"1255":{"position":[[17,2]]},"1257":{"position":[[203,2]]},"1261":{"position":[[127,2]]},"1263":{"position":[[4,2]]},"1265":{"position":[[448,2]]},"1267":{"position":[[104,2]]},"1419":{"position":[[52,2]]},"1421":{"position":[[45,2]]},"1553":{"position":[[253,2]]},"1585":{"position":[[20,2]]},"1604":{"position":[[17,2]]},"1606":{"position":[[203,2]]},"1610":{"position":[[127,2]]},"1612":{"position":[[4,2]]},"1614":{"position":[[448,2]]},"1616":{"position":[[104,2]]},"1797":{"position":[[112,2]]},"1805":{"position":[[18,2]]},"1810":{"position":[[55,2],[165,2]]},"1817":{"position":[[362,2],[375,2]]},"1819":{"position":[[164,2],[265,2]]},"1823":{"position":[[113,2]]},"1835":{"position":[[6,2]]}}}],["清晰",{"_index":642,"t":{"1131":{"position":[[8,2]]},"1275":{"position":[[104,2],[118,2]]},"1279":{"position":[[3041,2]]},"1409":{"position":[[8,2]]},"1650":{"position":[[104,2],[118,2]]},"1654":{"position":[[3041,2]]}}}],["清理",{"_index":937,"t":{"1275":{"position":[[139,2]]},"1619":{"position":[[96,2]]},"1650":{"position":[[139,2]]},"1803":{"position":[[134,2],[205,2]]},"1808":{"position":[[161,2],[232,2]]},"1819":{"position":[[172,2]]}}}],["清空",{"_index":1226,"t":{"1634":{"position":[[173,2]]}}}],["源于",{"_index":176,"t":{"987":{"position":[[184,2]]}}}],["源代码",{"_index":1471,"t":{"1844":{"position":[[137,3]]}}}],["源码",{"_index":1462,"t":{"1835":{"position":[[8,2]]}}}],["溢出",{"_index":1177,"t":{"1433":{"position":[[214,2]]}}}],["满足",{"_index":1124,"t":{"1371":{"position":[[19,2]]}}}],["滥用",{"_index":1223,"t":{"1632":{"position":[[81,2]]},"1719":{"position":[[15,2]]}}}],["演示",{"_index":979,"t":{"1279":{"position":[[5586,2]]},"1654":{"position":[[5586,2]]}}}],["演进",{"_index":630,"t":{"1127":{"position":[[63,2]]},"1149":{"position":[[61,2]]},"1405":{"position":[[63,2]]},"1427":{"position":[[61,2]]}}}],["灵活",{"_index":593,"t":{"1098":{"position":[[159,2]]},"1227":{"position":[[30,2]]},"1236":{"position":[[64,2]]},"1549":{"position":[[30,2]]},"1585":{"position":[[64,2]]}}}],["灵活处理",{"_index":1323,"t":{"1739":{"position":[[215,4]]}}}],["灵活性",{"_index":550,"t":{"1082":{"position":[[92,3]]},"1155":{"position":[[315,3]]},"1231":{"position":[[31,3]]},"1279":{"position":[[72,3]]},"1495":{"position":[[315,3]]},"1553":{"position":[[31,3]]},"1654":{"position":[[72,3]]}}}],["点",{"_index":435,"t":{"1034":{"position":[[13,1]]},"1131":{"position":[[118,1]]},"1292":{"position":[[718,1]]},"1409":{"position":[[118,1]]},"1566":{"position":[[718,1]]},"1823":{"position":[[64,1]]}}}],["点击",{"_index":1206,"t":{"1619":{"position":[[126,2]]}}}],["热",{"_index":787,"t":{"1182":{"position":[[4,1]]},"1185":{"position":[[19,1]]},"1189":{"position":[[0,1],[12,1],[21,1]]},"1194":{"position":[[2,1]]},"1201":{"position":[[0,1],[12,1],[21,1]]},"1207":{"position":[[14,1]]},"1504":{"position":[[4,1]]},"1507":{"position":[[19,1]]},"1511":{"position":[[0,1],[12,1],[21,1]]},"1516":{"position":[[2,1]]},"1523":{"position":[[0,1],[12,1],[21,1]]},"1529":{"position":[[14,1]]},"1817":{"position":[[258,1]]}}}],["然后",{"_index":913,"t":{"1270":{"position":[[1199,2]]},"1645":{"position":[[1199,2]]},"1708":{"position":[[343,2]]},"1772":{"position":[[1891,2]]}}}],["然而",{"_index":26,"t":{"983":{"position":[[26,2]]},"985":{"position":[[76,2]]},"987":{"position":[[30,2],[262,2]]},"989":{"position":[[118,2]]},"1797":{"position":[[56,2]]}}}],["父",{"_index":1488,"t":{"1853":{"position":[[146,1],[197,1],[355,1]]},"1899":{"position":[[154,1]]},"1916":{"position":[[154,1]]},"1934":{"position":[[132,1]]},"1937":{"position":[[46,1],[449,1]]},"1938":{"position":[[21,1],[414,1],[514,1]]},"1940":{"position":[[706,1],[718,1],[769,1],[819,1],[853,1],[873,1]]}}}],["父亲",{"_index":1520,"t":{"1932":{"position":[[6,2],[30,2]]},"1937":{"position":[[12,2],[364,2]]}}}],["父母",{"_index":290,"t":{"989":{"position":[[18,2],[70,2],[143,2]]}}}],["片段",{"_index":579,"t":{"1094":{"position":[[241,2]]}}}],["版本",{"_index":1073,"t":{"1343":{"position":[[516,2]]},"1442":{"position":[[115,2],[125,2]]},"1444":{"position":[[179,2]]},"1619":{"position":[[55,2],[66,2],[92,2]]},"1791":{"position":[[5,2]]},"1793":{"position":[[10,2]]}}}],["物质",{"_index":265,"t":{"987":{"position":[[540,2]]}}}],["特别",{"_index":1190,"t":{"1444":{"position":[[156,2]]}}}],["特定",{"_index":330,"t":{"991":{"position":[[15,2]]},"1675":{"position":[[30,2]]},"1789":{"position":[[31,2]]},"1791":{"position":[[3,2]]},"1793":{"position":[[8,2]]},"1795":{"position":[[152,2]]},"1797":{"position":[[24,2]]},"1846":{"position":[[12,2]]},"1850":{"position":[[54,2]]},"1855":{"position":[[74,2]]}}}],["特性",{"_index":931,"t":{"1275":{"position":[[2,2]]},"1650":{"position":[[2,2]]},"1702":{"position":[[15,2]]}}}],["特权",{"_index":1438,"t":{"1821":{"position":[[174,2]]}}}],["特殊",{"_index":1156,"t":{"1431":{"position":[[76,2]]},"1850":{"position":[[131,2]]}}}],["特点",{"_index":1404,"t":{"1800":{"position":[[41,2]]}}}],["状态",{"_index":720,"t":{"1145":{"position":[[1905,2]]},"1147":{"position":[[105,2]]},"1152":{"position":[[26,2]]},"1164":{"position":[[2,2]]},"1167":{"position":[[4,2],[57,2],[226,2],[1189,2]]},"1194":{"position":[[7,2],[18,2]]},"1197":{"position":[[2,2],[20,2],[84,2],[1833,2],[2977,2]]},"1199":{"position":[[2,2]]},"1205":{"position":[[2,2]]},"1207":{"position":[[2,2],[47,2],[73,2]]},"1217":{"position":[[180,2],[272,2],[280,2]]},"1219":{"position":[[250,2]]},"1263":{"position":[[671,2]]},"1273":{"position":[[417,2]]},"1279":{"position":[[1030,2]]},"1423":{"position":[[1905,2]]},"1425":{"position":[[105,2]]},"1474":{"position":[[2,2]]},"1477":{"position":[[4,2],[57,2],[226,2],[1189,2]]},"1492":{"position":[[26,2]]},"1516":{"position":[[7,2],[18,2]]},"1519":{"position":[[2,2],[20,2],[84,2],[1833,2],[2977,2]]},"1521":{"position":[[2,2]]},"1527":{"position":[[2,2]]},"1529":{"position":[[2,2],[47,2],[73,2]]},"1539":{"position":[[180,2],[272,2],[280,2]]},"1541":{"position":[[250,2]]},"1612":{"position":[[671,2]]},"1648":{"position":[[417,2]]},"1654":{"position":[[1030,2]]},"1770":{"position":[[96,2]]},"1784":{"position":[[398,2],[539,2],[577,2],[687,2]]},"1934":{"position":[[120,2],[165,2],[198,2]]}}}],["独立",{"_index":496,"t":{"1066":{"position":[[45,2]]},"1079":{"position":[[38,2]]},"1084":{"position":[[57,2]]},"1094":{"position":[[245,2]]},"1292":{"position":[[741,2]]},"1390":{"position":[[45,2]]},"1403":{"position":[[38,2]]},"1566":{"position":[[741,2]]}}}],["独裁政权",{"_index":42,"t":{"983":{"position":[[79,4]]}}}],["狭隘",{"_index":374,"t":{"991":{"position":[[179,2]]}}}],["猜测",{"_index":1025,"t":{"1309":{"position":[[163,2]]}}}],["率先",{"_index":23,"t":{"983":{"position":[[17,2]]}}}],["环",{"_index":1409,"t":{"1800":{"position":[[75,1]]}}}],["环境",{"_index":1184,"t":{"1444":{"position":[[91,2],[186,2]]},"1775":{"position":[[87,2]]},"1777":{"position":[[147,2]]},"1782":{"position":[[83,2]]},"1784":{"position":[[78,2],[459,2],[984,2],[1080,2],[1157,2],[1382,2],[1445,2]]},"1789":{"position":[[18,2]]},"1791":{"position":[[24,2]]},"1795":{"position":[[135,2],[244,2]]},"1797":{"position":[[46,2]]},"1810":{"position":[[6,2]]},"1821":{"position":[[24,2]]},"1823":{"position":[[111,2]]},"1830":{"position":[[70,2]]}}}],["环境中运行",{"_index":1372,"t":{"1784":{"position":[[767,5]]}}}],["环境变量",{"_index":697,"t":{"1135":{"position":[[33,4]]},"1413":{"position":[[33,4]]},"1634":{"position":[[85,4]]},"1657":{"position":[[64,4]]},"1668":{"position":[[118,4]]},"1679":{"position":[[12,4]]}}}],["现代",{"_index":243,"t":{"987":{"position":[[449,2],[556,2]]},"1789":{"position":[[53,2]]},"1797":{"position":[[75,2]]}}}],["现实",{"_index":84,"t":{"983":{"position":[[204,2]]}}}],["现有",{"_index":682,"t":{"1133":{"position":[[12,2]]},"1145":{"position":[[1967,2]]},"1229":{"position":[[155,2]]},"1236":{"position":[[12,2],[32,2]]},"1263":{"position":[[23,2]]},"1267":{"position":[[113,2]]},"1411":{"position":[[12,2]]},"1423":{"position":[[1967,2]]},"1551":{"position":[[155,2]]},"1585":{"position":[[12,2],[32,2]]},"1612":{"position":[[23,2]]},"1616":{"position":[[113,2]]},"1791":{"position":[[32,2]]}}}],["现象",{"_index":175,"t":{"987":{"position":[[180,2]]}}}],["理想",{"_index":390,"t":{"991":{"position":[[251,2]]}}}],["理由",{"_index":1019,"t":{"1306":{"position":[[101,2]]},"1580":{"position":[[101,2]]}}}],["理解",{"_index":13,"t":{"981":{"position":[[36,2]]},"1082":{"position":[[57,2]]},"1285":{"position":[[49,2]]},"1287":{"position":[[4,2]]},"1559":{"position":[[49,2]]},"1561":{"position":[[4,2]]},"1823":{"position":[[139,2]]}}}],["瓶颈",{"_index":1141,"t":{"1383":{"position":[[338,2]]}}}],["甚至",{"_index":258,"t":{"987":{"position":[[512,2],[545,2]]},"991":{"position":[[221,2]]}}}],["生产",{"_index":1183,"t":{"1444":{"position":[[89,2],[184,2]]},"1810":{"position":[[4,2]]},"1823":{"position":[[109,2],[194,2]]}}}],["生产者",{"_index":1115,"t":{"1365":{"position":[[5,3]]}}}],["生命周期",{"_index":495,"t":{"1066":{"position":[[24,4]]},"1079":{"position":[[27,4]]},"1279":{"position":[[138,4]]},"1379":{"position":[[35,4]]},"1390":{"position":[[24,4]]},"1403":{"position":[[27,4]]},"1654":{"position":[[138,4]]},"1823":{"position":[[81,4]]}}}],["生存",{"_index":389,"t":{"991":{"position":[[248,2]]}}}],["生成",{"_index":996,"t":{"1290":{"position":[[410,2],[479,2],[527,2]]},"1292":{"position":[[511,2],[686,2]]},"1343":{"position":[[109,2],[406,2],[496,2]]},"1347":{"position":[[8,2]]},"1349":{"position":[[484,2]]},"1353":{"position":[[30,2]]},"1431":{"position":[[540,2]]},"1564":{"position":[[410,2],[479,2],[527,2]]},"1566":{"position":[[511,2],[686,2]]},"1619":{"position":[[197,2]]},"1630":{"position":[[194,2],[233,2]]},"1679":{"position":[[46,2]]},"1682":{"position":[[35,2]]},"1702":{"position":[[135,2]]}}}],["生活",{"_index":131,"t":{"987":{"position":[[17,2],[76,2],[123,2],[471,2]]},"989":{"position":[[42,2],[79,2],[122,2]]}}}],["用于",{"_index":397,"t":{"997":{"position":[[0,2]]},"1069":{"position":[[339,2]]},"1082":{"position":[[29,2]]},"1105":{"position":[[182,2]]},"1121":{"position":[[53,2]]},"1141":{"position":[[118,2]]},"1155":{"position":[[208,2]]},"1185":{"position":[[17,2]]},"1270":{"position":[[172,2],[199,2]]},"1314":{"position":[[13,2]]},"1335":{"position":[[13,2],[44,2],[137,2],[168,2]]},"1393":{"position":[[339,2]]},"1419":{"position":[[118,2]]},"1429":{"position":[[23,2]]},"1431":{"position":[[71,2]]},"1451":{"position":[[53,2]]},"1462":{"position":[[182,2]]},"1495":{"position":[[208,2]]},"1507":{"position":[[17,2]]},"1640":{"position":[[12,2]]},"1645":{"position":[[172,2],[199,2]]},"1657":{"position":[[11,2]]},"1682":{"position":[[30,2]]},"1713":{"position":[[12,2]]},"1728":{"position":[[626,2]]},"1772":{"position":[[936,2],[1022,2],[1111,2]]},"1775":{"position":[[20,2]]},"1784":{"position":[[896,2]]},"1795":{"position":[[126,2]]},"1797":{"position":[[16,2]]},"1826":{"position":[[30,2]]},"1830":{"position":[[5,2]]},"1889":{"position":[[40,2]]},"1894":{"position":[[40,2]]},"1911":{"position":[[111,2]]},"1928":{"position":[[111,2]]}}}],["用户",{"_index":457,"t":{"1061":{"position":[[49,2]]},"1064":{"position":[[60,2],[83,2],[124,2]]},"1066":{"position":[[82,2]]},"1290":{"position":[[128,2],[412,2],[515,2]]},"1292":{"position":[[3,2],[293,2],[682,2]]},"1351":{"position":[[6,2],[35,2]]},"1385":{"position":[[49,2]]},"1388":{"position":[[60,2],[83,2],[124,2]]},"1390":{"position":[[82,2]]},"1564":{"position":[[128,2],[412,2],[515,2]]},"1566":{"position":[[3,2],[293,2],[682,2]]},"1784":{"position":[[739,2]]},"1795":{"position":[[32,2]]}}}],["用来",{"_index":1385,"t":{"1789":{"position":[[9,2]]},"1853":{"position":[[137,2]]}}}],["用法",{"_index":545,"t":{"1082":{"position":[[62,2]]},"1429":{"position":[[64,2]]}}}],["电池",{"_index":1368,"t":{"1784":{"position":[[685,2]]}}}],["瘦身",{"_index":1507,"t":{"1870":{"position":[[72,2]]}}}],["登录",{"_index":1083,"t":{"1351":{"position":[[37,2]]},"1784":{"position":[[1007,2]]}}}],["百分比",{"_index":1161,"t":{"1431":{"position":[[188,3]]}}}],["盐",{"_index":1075,"t":{"1343":{"position":[[524,1]]},"1353":{"position":[[392,1]]}}}],["监听",{"_index":762,"t":{"1155":{"position":[[603,2]]},"1167":{"position":[[1235,2]]},"1363":{"position":[[352,2],[574,2],[684,2]]},"1383":{"position":[[283,2],[413,2]]},"1477":{"position":[[1235,2]]},"1495":{"position":[[603,2]]},"1803":{"position":[[314,2]]},"1808":{"position":[[341,2]]}}}],["监听器",{"_index":1417,"t":{"1803":{"position":[[234,3]]},"1808":{"position":[[261,3]]}}}],["监控",{"_index":1422,"t":{"1810":{"position":[[167,2]]},"1817":{"position":[[369,2],[401,2]]},"1823":{"position":[[118,2]]},"1857":{"position":[[9,2],[67,2],[127,2]]},"1859":{"position":[[12,2],[139,2]]}}}],["监测",{"_index":1078,"t":{"1349":{"position":[[197,2]]}}}],["目前",{"_index":595,"t":{"1100":{"position":[[16,2]]},"1457":{"position":[[16,2]]}}}],["目录",{"_index":420,"t":{"1015":{"position":[[6,2]]},"1210":{"position":[[2,2]]},"1532":{"position":[[2,2]]},"1775":{"position":[[43,2]]},"1777":{"position":[[57,2]]},"1782":{"position":[[60,2]]},"1784":{"position":[[311,2],[387,2],[704,2],[893,2]]},"1789":{"position":[[33,2]]},"1797":{"position":[[27,2]]}}}],["目标",{"_index":540,"t":{"1082":{"position":[[33,2]]},"1084":{"position":[[24,2],[64,2]]},"1087":{"position":[[102,2]]},"1089":{"position":[[172,2]]},"1092":{"position":[[119,2]]},"1094":{"position":[[165,2]]},"1096":{"position":[[30,2],[43,2]]},"1098":{"position":[[17,2],[53,2],[130,2]]},"1127":{"position":[[86,2]]},"1131":{"position":[[0,2]]},"1133":{"position":[[0,2]]},"1135":{"position":[[0,2]]},"1137":{"position":[[0,2]]},"1139":{"position":[[0,2]]},"1141":{"position":[[0,2]]},"1143":{"position":[[0,2]]},"1155":{"position":[[973,2],[1159,2]]},"1167":{"position":[[1620,2],[1834,2]]},"1279":{"position":[[416,2]]},"1405":{"position":[[86,2]]},"1409":{"position":[[0,2]]},"1411":{"position":[[0,2]]},"1413":{"position":[[0,2]]},"1415":{"position":[[0,2]]},"1417":{"position":[[0,2]]},"1419":{"position":[[0,2]]},"1421":{"position":[[0,2]]},"1431":{"position":[[186,2]]},"1477":{"position":[[1620,2],[1834,2]]},"1495":{"position":[[973,2],[1159,2]]},"1654":{"position":[[416,2]]},"1850":{"position":[[402,2]]},"1859":{"position":[[178,2]]}}}],["盲目",{"_index":197,"t":{"987":{"position":[[247,2]]}}}],["直到",{"_index":1104,"t":{"1361":{"position":[[388,2]]},"1367":{"position":[[532,2]]},"1844":{"position":[[68,2]]}}}],["直接",{"_index":643,"t":{"1131":{"position":[[18,2],[191,2]]},"1147":{"position":[[99,2]]},"1175":{"position":[[332,2]]},"1217":{"position":[[307,2]]},"1231":{"position":[[98,2],[204,2]]},"1244":{"position":[[71,2]]},"1347":{"position":[[6,2]]},"1409":{"position":[[18,2],[191,2]]},"1425":{"position":[[99,2]]},"1485":{"position":[[332,2]]},"1539":{"position":[[307,2]]},"1553":{"position":[[98,2],[204,2]]},"1593":{"position":[[71,2]]},"1626":{"position":[[13,2]]},"1662":{"position":[[37,2]]},"1691":{"position":[[24,2]]},"1695":{"position":[[31,2]]},"1697":{"position":[[125,2],[173,2]]},"1772":{"position":[[1876,2],[2342,2]]},"1840":{"position":[[6,2]]},"1842":{"position":[[4,2]]},"1853":{"position":[[376,2]]},"1911":{"position":[[74,2]]},"1928":{"position":[[74,2]]},"1937":{"position":[[452,2]]}}}],["直观",{"_index":1239,"t":{"1657":{"position":[[46,2]]}}}],["相互",{"_index":573,"t":{"1092":{"position":[[131,2]]},"1094":{"position":[[259,2]]}}}],["相互促进",{"_index":236,"t":{"987":{"position":[[412,4]]}}}],["相关",{"_index":562,"t":{"1087":{"position":[[156,2]]},"1131":{"position":[[193,2],[1774,2]]},"1285":{"position":[[20,2]]},"1290":{"position":[[536,2]]},"1302":{"position":[[26,2]]},"1304":{"position":[[16,2]]},"1309":{"position":[[160,2]]},"1409":{"position":[[193,2],[1774,2]]},"1559":{"position":[[20,2]]},"1564":{"position":[[536,2]]},"1576":{"position":[[26,2]]},"1578":{"position":[[16,2]]},"1784":{"position":[[918,2]]},"1889":{"position":[[56,2]]},"1894":{"position":[[56,2]]}}}],["相同",{"_index":585,"t":{"1098":{"position":[[51,2]]}}}],["相对",{"_index":1256,"t":{"1682":{"position":[[453,2]]},"1777":{"position":[[42,2]]},"1823":{"position":[[55,2]]}}}],["相当于",{"_index":1343,"t":{"1772":{"position":[[1929,3]]}}}],["相比",{"_index":488,"t":{"1064":{"position":[[116,2]]},"1388":{"position":[[116,2]]},"1717":{"position":[[20,2]]}}}],["真理",{"_index":261,"t":{"987":{"position":[[521,2]]}}}],["矛盾",{"_index":67,"t":{"983":{"position":[[152,2]]}}}],["知识",{"_index":663,"t":{"1131":{"position":[[182,2]]},"1231":{"position":[[55,2]]},"1409":{"position":[[182,2]]},"1553":{"position":[[55,2]]}}}],["短信",{"_index":668,"t":{"1131":{"position":[[458,2],[555,2],[1103,2],[1745,2]]},"1253":{"position":[[71,2]]},"1409":{"position":[[458,2],[555,2],[1103,2],[1745,2]]},"1602":{"position":[[71,2]]}}}],["码",{"_index":748,"t":{"1152":{"position":[[28,1]]},"1263":{"position":[[673,1]]},"1492":{"position":[[28,1]]},"1612":{"position":[[673,1]]}}}],["破坏",{"_index":705,"t":{"1137":{"position":[[67,2]]},"1287":{"position":[[20,2]]},"1415":{"position":[[67,2]]},"1561":{"position":[[20,2]]}}}],["硬",{"_index":647,"t":{"1131":{"position":[[60,1]]},"1147":{"position":[[3,1]]},"1409":{"position":[[60,1]]},"1425":{"position":[[3,1]]}}}],["硬件",{"_index":1360,"t":{"1784":{"position":[[402,2],[567,2],[615,2],[645,2],[746,2],[861,2]]}}}],["硬盘",{"_index":1370,"t":{"1784":{"position":[[717,2],[803,2]]}}}],["确保",{"_index":568,"t":{"1089":{"position":[[194,2]]},"1275":{"position":[[1103,2]]},"1373":{"position":[[10,2],[370,2]]},"1377":{"position":[[322,2]]},"1650":{"position":[[1103,2]]},"1784":{"position":[[316,2],[1112,2]]},"1819":{"position":[[146,2]]}}}],["确定",{"_index":1077,"t":{"1349":{"position":[[31,2]]},"1353":{"position":[[97,2]]}}}],["确实",{"_index":129,"t":{"987":{"position":[[12,2]]},"1304":{"position":[[12,2]]},"1578":{"position":[[12,2]]}}}],["磁盘",{"_index":807,"t":{"1207":{"position":[[31,2],[43,2]]},"1529":{"position":[[31,2],[43,2]]}}}],["示例",{"_index":533,"t":{"1079":{"position":[[97,2]]},"1131":{"position":[[204,2],[1227,2]]},"1133":{"position":[[18,2]]},"1135":{"position":[[28,2]]},"1137":{"position":[[34,2]]},"1139":{"position":[[43,2]]},"1141":{"position":[[27,2]]},"1143":{"position":[[29,2]]},"1210":{"position":[[33,2]]},"1253":{"position":[[9,2]]},"1279":{"position":[[4619,2],[5034,2],[6220,2],[6315,2]]},"1353":{"position":[[251,2]]},"1367":{"position":[[53,2]]},"1369":{"position":[[64,2]]},"1371":{"position":[[45,2]]},"1373":{"position":[[46,2]]},"1403":{"position":[[97,2]]},"1409":{"position":[[204,2],[1227,2]]},"1411":{"position":[[18,2]]},"1413":{"position":[[28,2]]},"1415":{"position":[[34,2]]},"1417":{"position":[[43,2]]},"1419":{"position":[[27,2]]},"1421":{"position":[[29,2]]},"1433":{"position":[[266,2]]},"1532":{"position":[[33,2]]},"1602":{"position":[[9,2]]},"1654":{"position":[[4619,2],[5034,2],[6220,2],[6315,2]]},"1662":{"position":[[340,2]]},"1664":{"position":[[112,2],[342,2]]},"1666":{"position":[[116,2],[537,2]]},"1668":{"position":[[116,2],[286,2]]},"1670":{"position":[[118,2],[328,2]]},"1672":{"position":[[123,2],[252,2]]},"1675":{"position":[[154,2]]},"1682":{"position":[[47,2]]},"1685":{"position":[[36,2]]},"1689":{"position":[[39,2]]},"1693":{"position":[[39,2]]},"1772":{"position":[[872,2]]},"1797":{"position":[[126,2]]},"1850":{"position":[[474,2]]},"1857":{"position":[[189,2]]},"1879":{"position":[[6,2]]},"1909":{"position":[[116,2]]},"1926":{"position":[[116,2]]}}}],["社会",{"_index":6,"t":{"981":{"position":[[14,2],[41,2]]},"983":{"position":[[190,2]]},"987":{"position":[[451,2]]}}}],["禁用",{"_index":1505,"t":{"1868":{"position":[[5,2]]}}}],["私人",{"_index":40,"t":{"983":{"position":[[73,2]]}}}],["科技",{"_index":229,"t":{"987":{"position":[[371,2],[430,2]]}}}],["科技进步",{"_index":224,"t":{"987":{"position":[[354,4],[425,4]]}}}],["秒",{"_index":1110,"t":{"1363":{"position":[[622,1]]},"1381":{"position":[[435,1]]}}}],["程",{"_index":729,"t":{"1145":{"position":[[1993,1]]},"1270":{"position":[[547,1],[771,1],[1120,1]]},"1275":{"position":[[418,1],[450,1],[512,1],[517,1]]},"1277":{"position":[[527,1]]},"1355":{"position":[[13,1]]},"1361":{"position":[[340,1],[382,1]]},"1367":{"position":[[530,1]]},"1381":{"position":[[382,1],[401,1]]},"1423":{"position":[[1993,1]]},"1645":{"position":[[547,1],[771,1],[1120,1]]},"1650":{"position":[[418,1],[450,1],[512,1],[517,1]]},"1652":{"position":[[527,1]]}}}],["程序",{"_index":1271,"t":{"1702":{"position":[[20,2]]},"1775":{"position":[[55,2],[66,2]]},"1784":{"position":[[367,2],[478,2],[637,2],[743,2],[773,2],[854,2],[981,2],[1129,2]]},"1787":{"position":[[65,2]]},"1791":{"position":[[8,2]]},"1793":{"position":[[13,2]]},"1795":{"position":[[198,2]]},"1819":{"position":[[148,2]]},"1826":{"position":[[55,2],[82,2]]},"1830":{"position":[[57,2]]},"1838":{"position":[[13,2]]},"1850":{"position":[[350,2]]},"1853":{"position":[[27,2],[371,2]]},"1855":{"position":[[26,2]]},"1859":{"position":[[26,2],[69,2],[124,2],[141,2],[154,2],[186,2]]},"1863":{"position":[[40,2]]},"1870":{"position":[[77,2]]}}}],["程序执行",{"_index":1042,"t":{"1312":{"position":[[28,4]]},"1838":{"position":[[41,4]]}}}],["程序调试",{"_index":1458,"t":{"1830":{"position":[[7,4]]}}}],["程序运行",{"_index":1452,"t":{"1826":{"position":[[64,4]]},"1844":{"position":[[29,4]]},"1859":{"position":[[78,4]]}}}],["程度",{"_index":281,"t":{"987":{"position":[[607,2]]},"1702":{"position":[[88,2]]}}}],["稳定",{"_index":55,"t":{"983":{"position":[[111,2]]},"991":{"position":[[102,2]]},"1682":{"position":[[430,2]]},"1697":{"position":[[42,2]]}}}],["稳定性",{"_index":871,"t":{"1236":{"position":[[48,3]]},"1585":{"position":[[48,3]]}}}],["稳定期",{"_index":208,"t":{"987":{"position":[[293,3],[309,3]]}}}],["空",{"_index":1049,"t":{"1331":{"position":[[974,1]]},"1636":{"position":[[7,1]]}}}],["空格",{"_index":443,"t":{"1048":{"position":[[11,2]]},"1055":{"position":[[18,2]]}}}],["空间",{"_index":470,"t":{"1064":{"position":[[30,2],[62,2]]},"1388":{"position":[[30,2],[62,2]]},"1784":{"position":[[741,2]]}}}],["立即",{"_index":924,"t":{"1273":{"position":[[76,2],[160,2]]},"1648":{"position":[[76,2],[160,2]]}}}],["竞",{"_index":724,"t":{"1145":{"position":[[1933,1]]},"1270":{"position":[[1271,1]]},"1369":{"position":[[42,1],[465,1]]},"1383":{"position":[[26,1],[74,1]]},"1423":{"position":[[1933,1]]},"1645":{"position":[[1271,1]]}}}],["竞争",{"_index":1095,"t":{"1357":{"position":[[58,2]]},"1359":{"position":[[2,2],[32,2]]},"1383":{"position":[[184,2]]}}}],["章节",{"_index":598,"t":{"1100":{"position":[[38,2]]},"1457":{"position":[[38,2]]}}}],["端",{"_index":922,"t":{"1273":{"position":[[2,1]]},"1648":{"position":[[2,1]]},"1821":{"position":[[218,1]]}}}],["端口",{"_index":1415,"t":{"1800":{"position":[[147,2]]}}}],["端点",{"_index":1421,"t":{"1810":{"position":[[61,2]]}}}],["笔记本电脑",{"_index":1369,"t":{"1784":{"position":[[691,5]]}}}],["符合",{"_index":1098,"t":{"1359":{"position":[[41,2]]},"1383":{"position":[[322,2]]}}}],["第",{"_index":444,"t":{"1055":{"position":[[7,1]]}}}],["第一个",{"_index":439,"t":{"1041":{"position":[[7,3]]},"1282":{"position":[[55,3]]},"1333":{"position":[[350,3]]},"1556":{"position":[[55,3]]}}}],["第二个",{"_index":867,"t":{"1234":{"position":[[43,3]]},"1273":{"position":[[83,3]]},"1333":{"position":[[448,3]]},"1583":{"position":[[43,3]]},"1648":{"position":[[83,3]]}}}],["等",{"_index":7,"t":{"981":{"position":[[16,1]]},"1064":{"position":[[57,1]]},"1079":{"position":[[127,1]]},"1141":{"position":[[15,1]]},"1182":{"position":[[81,1]]},"1229":{"position":[[121,1]]},"1234":{"position":[[87,1]]},"1253":{"position":[[33,1],[60,1],[78,1],[100,1]]},"1257":{"position":[[218,1]]},"1263":{"position":[[766,1]]},"1270":{"position":[[1295,1]]},"1279":{"position":[[2994,1]]},"1379":{"position":[[49,1]]},"1388":{"position":[[57,1]]},"1403":{"position":[[127,1]]},"1419":{"position":[[15,1]]},"1504":{"position":[[81,1]]},"1551":{"position":[[121,1]]},"1583":{"position":[[87,1]]},"1602":{"position":[[33,1],[60,1],[78,1],[100,1]]},"1606":{"position":[[218,1]]},"1612":{"position":[[766,1]]},"1630":{"position":[[219,1]]},"1645":{"position":[[1295,1]]},"1654":{"position":[[2994,1]]},"1657":{"position":[[68,1]]},"1702":{"position":[[158,1]]},"1713":{"position":[[32,1]]},"1719":{"position":[[71,1]]},"1739":{"position":[[143,1]]},"1775":{"position":[[101,1]]},"1784":{"position":[[310,1],[498,1],[579,1],[729,1],[877,1],[939,1]]},"1795":{"position":[[180,1]]},"1797":{"position":[[48,1],[128,1]]},"1826":{"position":[[47,1]]}}}],["等于",{"_index":123,"t":{"985":{"position":[[113,2]]},"1728":{"position":[[45,2],[58,2],[115,2]]}}}],["等价",{"_index":1234,"t":{"1642":{"position":[[58,2]]}}}],["等同于",{"_index":1495,"t":{"1859":{"position":[[22,3]]}}}],["等待",{"_index":620,"t":{"1123":{"position":[[281,2]]},"1157":{"position":[[490,2]]},"1270":{"position":[[513,2],[1225,2]]},"1275":{"position":[[1239,2]]},"1277":{"position":[[153,2],[180,2],[1145,2]]},"1279":{"position":[[4400,2]]},"1333":{"position":[[544,2]]},"1361":{"position":[[210,2],[385,2]]},"1367":{"position":[[405,2]]},"1371":{"position":[[13,2],[35,2],[214,2],[509,2],[551,2],[592,2]]},"1381":{"position":[[383,2]]},"1383":{"position":[[41,2],[87,2]]},"1453":{"position":[[281,2]]},"1497":{"position":[[490,2]]},"1645":{"position":[[513,2],[1225,2]]},"1650":{"position":[[1239,2]]},"1652":{"position":[[153,2],[180,2],[1145,2]]},"1654":{"position":[[4400,2]]}}}],["等等",{"_index":1502,"t":{"1859":{"position":[[173,2]]}}}],["简化",{"_index":1063,"t":{"1338":{"position":[[76,2]]}}}],["简单",{"_index":531,"t":{"1079":{"position":[[83,2]]},"1231":{"position":[[202,2]]},"1304":{"position":[[2,2]]},"1367":{"position":[[46,2]]},"1375":{"position":[[2,2]]},"1403":{"position":[[83,2]]},"1553":{"position":[[202,2]]},"1578":{"position":[[2,2]]},"1677":{"position":[[13,2]]},"1682":{"position":[[461,2]]},"1795":{"position":[[61,2]]},"1823":{"position":[[57,2]]}}}],["简史",{"_index":2,"t":{"981":{"position":[[3,2]]}}}],["简洁",{"_index":1100,"t":{"1359":{"position":[[56,2]]},"1632":{"position":[[76,2]]},"1636":{"position":[[51,2]]},"1687":{"position":[[47,2]]},"1691":{"position":[[48,2]]},"1697":{"position":[[78,2]]}}}],["算法",{"_index":1059,"t":{"1338":{"position":[[17,2]]}}}],["管理",{"_index":471,"t":{"1064":{"position":[[32,2]]},"1066":{"position":[[28,2]]},"1079":{"position":[[15,2]]},"1164":{"position":[[4,2],[11,2]]},"1167":{"position":[[407,2]]},"1172":{"position":[[8,2]]},"1270":{"position":[[201,2]]},"1279":{"position":[[133,2],[1028,2]]},"1290":{"position":[[517,2]]},"1388":{"position":[[32,2]]},"1390":{"position":[[28,2]]},"1403":{"position":[[15,2]]},"1431":{"position":[[62,2]]},"1444":{"position":[[181,2]]},"1474":{"position":[[4,2],[11,2]]},"1477":{"position":[[407,2]]},"1482":{"position":[[8,2]]},"1564":{"position":[[517,2]]},"1645":{"position":[[201,2]]},"1654":{"position":[[133,2],[1028,2]]},"1784":{"position":[[617,2],[898,2]]},"1821":{"position":[[187,2]]},"1823":{"position":[[71,2]]},"1909":{"position":[[35,2]]},"1926":{"position":[[35,2]]}}}],["管道",{"_index":885,"t":{"1253":{"position":[[84,2]]},"1333":{"position":[[187,2]]},"1602":{"position":[[84,2]]}}}],["米特",{"_index":856,"t":{"1231":{"position":[[48,2]]},"1553":{"position":[[48,2]]}}}],["类",{"_index":566,"t":{"1089":{"position":[[187,1]]},"1131":{"position":[[1395,1]]},"1229":{"position":[[48,1],[66,1],[114,1]]},"1231":{"position":[[20,1],[37,1],[108,1],[164,1]]},"1234":{"position":[[80,1]]},"1279":{"position":[[222,1]]},"1282":{"position":[[91,1],[117,1]]},"1409":{"position":[[1395,1]]},"1551":{"position":[[48,1],[66,1],[114,1]]},"1553":{"position":[[20,1],[37,1],[108,1],[164,1]]},"1556":{"position":[[91,1],[117,1]]},"1583":{"position":[[80,1]]},"1654":{"position":[[222,1]]}}}],["类似",{"_index":204,"t":{"987":{"position":[[279,2]]},"1011":{"position":[[12,2]]},"1279":{"position":[[436,2]]},"1636":{"position":[[30,2]]},"1654":{"position":[[436,2]]},"1657":{"position":[[33,2]]},"1746":{"position":[[43,2],[106,2]]},"1772":{"position":[[1092,2]]}}}],["类型",{"_index":645,"t":{"1131":{"position":[[51,2],[1235,2],[1389,2]]},"1167":{"position":[[93,2]]},"1229":{"position":[[205,2],[217,2]]},"1261":{"position":[[18,2],[501,2]]},"1270":{"position":[[1331,2]]},"1279":{"position":[[424,2],[2967,2],[3023,2]]},"1409":{"position":[[51,2],[1235,2],[1389,2]]},"1477":{"position":[[93,2]]},"1551":{"position":[[205,2],[217,2]]},"1610":{"position":[[18,2],[501,2]]},"1624":{"position":[[16,2]]},"1636":{"position":[[27,2]]},"1638":{"position":[[77,2],[93,2]]},"1645":{"position":[[1331,2]]},"1654":{"position":[[424,2],[2967,2],[3023,2]]},"1679":{"position":[[37,2]]},"1682":{"position":[[439,2]]},"1697":{"position":[[54,2]]},"1702":{"position":[[34,2],[176,2]]},"1704":{"position":[[20,2],[42,2]]},"1708":{"position":[[175,2],[252,2]]},"1728":{"position":[[614,2]]},"1739":{"position":[[141,2],[212,2]]},"1772":{"position":[[1746,2],[1860,2]]}}}],["类型信息",{"_index":1278,"t":{"1702":{"position":[[186,4]]}}}],["系统",{"_index":482,"t":{"1064":{"position":[[96,2]]},"1127":{"position":[[4,2],[47,2]]},"1149":{"position":[[119,2]]},"1253":{"position":[[2,2],[15,2],[65,2]]},"1267":{"position":[[93,2]]},"1279":{"position":[[69,2],[125,2]]},"1388":{"position":[[96,2]]},"1405":{"position":[[4,2],[47,2]]},"1427":{"position":[[119,2]]},"1602":{"position":[[2,2],[15,2],[65,2]]},"1616":{"position":[[93,2]]},"1654":{"position":[[69,2],[125,2]]},"1775":{"position":[[97,2]]},"1777":{"position":[[63,2]]},"1784":{"position":[[346,2],[396,2],[428,2],[533,2],[565,2],[595,2],[665,2],[953,2],[1010,2]]},"1787":{"position":[[1,2],[27,2],[50,2]]},"1791":{"position":[[29,2]]},"1797":{"position":[[34,2]]},"1819":{"position":[[101,2],[253,2]]},"1830":{"position":[[29,2]]},"1863":{"position":[[10,2]]},"1882":{"position":[[11,2]]},"1889":{"position":[[59,2]]},"1894":{"position":[[59,2]]},"1911":{"position":[[13,2]]},"1928":{"position":[[13,2]]},"1940":{"position":[[376,2]]}}}],["系统命令",{"_index":1043,"t":{"1312":{"position":[[32,4]]}}}],["系统文件",{"_index":1355,"t":{"1784":{"position":[[54,4]]},"1795":{"position":[[155,4]]}}}],["系统管理",{"_index":1055,"t":{"1335":{"position":[[216,4]]}}}],["系统配置",{"_index":1366,"t":{"1784":{"position":[[620,4]]}}}],["索引",{"_index":1204,"t":{"1619":{"position":[[116,2],[199,2]]}}}],["紧",{"_index":674,"t":{"1131":{"position":[[1224,1]]},"1409":{"position":[[1224,1]]}}}],["紧密",{"_index":1016,"t":{"1304":{"position":[[14,2]]},"1578":{"position":[[14,2]]}}}],["累积",{"_index":580,"t":{"1096":{"position":[[38,2]]}}}],["繁琐",{"_index":1266,"t":{"1697":{"position":[[144,2]]}}}],["繁荣",{"_index":120,"t":{"985":{"position":[[96,2]]},"987":{"position":[[259,2]]}}}],["繁衍",{"_index":107,"t":{"985":{"position":[[42,2]]}}}],["约",{"_index":1412,"t":{"1800":{"position":[[123,1]]},"1819":{"position":[[305,1],[318,1],[334,1]]}}}],["级",{"_index":1348,"t":{"1775":{"position":[[75,1]]},"1823":{"position":[[196,1]]}}}],["级别",{"_index":791,"t":{"1182":{"position":[[34,2],[60,2]]},"1433":{"position":[[543,2]]},"1504":{"position":[[34,2],[60,2]]}}}],["纵览",{"_index":3,"t":{"981":{"position":[[6,2]]}}}],["线程",{"_index":467,"t":{"1064":{"position":[[23,2]]},"1147":{"position":[[108,2]]},"1357":{"position":[[44,2]]},"1371":{"position":[[33,2]]},"1388":{"position":[[23,2]]},"1425":{"position":[[108,2]]},"1855":{"position":[[32,2],[76,2]]}}}],["组",{"_index":1432,"t":{"1819":{"position":[[255,1]]}}}],["组件",{"_index":660,"t":{"1131":{"position":[[167,2],[187,2],[196,2]]},"1285":{"position":[[64,2],[82,2]]},"1292":{"position":[[744,2],[749,2],[762,2]]},"1409":{"position":[[167,2],[187,2],[196,2]]},"1559":{"position":[[64,2],[82,2]]},"1566":{"position":[[744,2],[749,2],[762,2]]}}}],["组合",{"_index":683,"t":{"1133":{"position":[[23,2]]},"1231":{"position":[[0,2],[15,2]]},"1234":{"position":[[135,2]]},"1259":{"position":[[19,2]]},"1265":{"position":[[151,2]]},"1267":{"position":[[28,2]]},"1277":{"position":[[99,2]]},"1279":{"position":[[400,2]]},"1306":{"position":[[44,2]]},"1411":{"position":[[23,2]]},"1553":{"position":[[0,2],[15,2]]},"1580":{"position":[[44,2]]},"1583":{"position":[[135,2]]},"1608":{"position":[[19,2]]},"1614":{"position":[[151,2]]},"1616":{"position":[[28,2]]},"1652":{"position":[[99,2]]},"1654":{"position":[[400,2]]}}}],["组成部分",{"_index":1189,"t":{"1444":{"position":[[151,4]]}}}],["组织",{"_index":547,"t":{"1082":{"position":[[73,2]]}}}],["细粒度",{"_index":988,"t":{"1285":{"position":[[78,3]]},"1559":{"position":[[78,3]]}}}],["细节",{"_index":847,"t":{"1229":{"position":[[393,2],[396,2]]},"1551":{"position":[[393,2],[396,2]]}}}],["终止",{"_index":733,"t":{"1145":{"position":[[2023,2]]},"1423":{"position":[[2023,2]]},"1803":{"position":[[1218,2]]},"1817":{"position":[[298,2]]},"1940":{"position":[[176,2]]}}}],["终端",{"_index":1371,"t":{"1784":{"position":[[720,2],[870,2],[916,2],[951,2],[1066,2]]}}}],["终端设备",{"_index":1376,"t":{"1784":{"position":[[837,4],[901,4],[1014,4]]}}}],["经历",{"_index":206,"t":{"987":{"position":[[289,2]]}}}],["经济",{"_index":127,"t":{"987":{"position":[[8,2],[141,2],[177,2],[254,2],[305,2],[612,2]]}}}],["经验",{"_index":382,"t":{"991":{"position":[[212,2]]}}}],["结合",{"_index":1113,"t":{"1363":{"position":[[721,2]]},"1383":{"position":[[241,2],[383,2]]},"1719":{"position":[[54,2]]},"1736":{"position":[[41,2]]},"1877":{"position":[[1,2]]}}}],["结尾",{"_index":421,"t":{"1015":{"position":[[17,2]]},"1048":{"position":[[8,2]]},"1728":{"position":[[239,2]]}}}],["结束",{"_index":880,"t":{"1251":{"position":[[228,2]]},"1270":{"position":[[517,2]]},"1367":{"position":[[507,2]]},"1383":{"position":[[56,2]]},"1600":{"position":[[228,2]]},"1645":{"position":[[517,2]]},"1853":{"position":[[380,2]]},"1940":{"position":[[646,2],[856,2],[876,2]]}}}],["结构",{"_index":679,"t":{"1131":{"position":[[1768,2]]},"1152":{"position":[[21,2]]},"1164":{"position":[[18,2]]},"1236":{"position":[[69,2]]},"1270":{"position":[[98,2],[1312,2]]},"1275":{"position":[[185,2],[287,2]]},"1277":{"position":[[273,2],[375,2]]},"1279":{"position":[[453,2],[1145,2],[3039,2]]},"1285":{"position":[[34,2]]},"1290":{"position":[[548,2]]},"1302":{"position":[[3,2],[36,2]]},"1306":{"position":[[31,2],[88,2]]},"1314":{"position":[[31,2]]},"1409":{"position":[[1768,2]]},"1474":{"position":[[18,2]]},"1492":{"position":[[21,2]]},"1559":{"position":[[34,2]]},"1564":{"position":[[548,2]]},"1576":{"position":[[3,2],[36,2]]},"1580":{"position":[[31,2],[88,2]]},"1585":{"position":[[69,2]]},"1626":{"position":[[35,2]]},"1645":{"position":[[98,2],[1312,2]]},"1650":{"position":[[185,2],[287,2]]},"1652":{"position":[[273,2],[375,2]]},"1654":{"position":[[453,2],[1145,2],[3039,2]]},"1682":{"position":[[481,2]]},"1702":{"position":[[117,2],[216,2],[236,2]]},"1713":{"position":[[0,2]]},"1722":{"position":[[32,2]]},"1732":{"position":[[236,2]]},"1772":{"position":[[945,2],[1120,2]]}}}],["结果",{"_index":559,"t":{"1087":{"position":[[76,2]]},"1089":{"position":[[68,2]]},"1092":{"position":[[78,2]]},"1094":{"position":[[111,2]]},"1270":{"position":[[1229,2]]},"1275":{"position":[[208,2]]},"1277":{"position":[[296,2]]},"1279":{"position":[[4402,2]]},"1630":{"position":[[52,2]]},"1645":{"position":[[1229,2]]},"1650":{"position":[[208,2]]},"1652":{"position":[[296,2]]},"1654":{"position":[[4402,2]]}}}],["绕过",{"_index":1410,"t":{"1800":{"position":[[80,2]]}}}],["绝对",{"_index":79,"t":{"983":{"position":[[184,2]]},"987":{"position":[[36,2]]}}}],["统一",{"_index":788,"t":{"1182":{"position":[[17,2]]},"1279":{"position":[[429,2]]},"1504":{"position":[[17,2]]},"1654":{"position":[[429,2]]}}}],["统治",{"_index":152,"t":{"987":{"position":[[104,2]]}}}],["统计",{"_index":1165,"t":{"1431":{"position":[[317,2]]}}}],["继承",{"_index":684,"t":{"1133":{"position":[[27,2]]},"1229":{"position":[[142,2]]},"1231":{"position":[[4,2],[21,2]]},"1306":{"position":[[48,2]]},"1411":{"position":[[27,2]]},"1551":{"position":[[142,2]]},"1553":{"position":[[4,2],[21,2]]},"1580":{"position":[[48,2]]}}}],["继续",{"_index":1119,"t":{"1367":{"position":[[25,2]]}}}],["继续执行",{"_index":1122,"t":{"1369":{"position":[[502,4]]},"1844":{"position":[[64,4]]},"1940":{"position":[[772,4]]}}}],["维护",{"_index":594,"t":{"1098":{"position":[[163,2]]},"1127":{"position":[[93,2]]},"1227":{"position":[[34,2]]},"1287":{"position":[[7,2]]},"1306":{"position":[[7,2]]},"1405":{"position":[[93,2]]},"1549":{"position":[[34,2]]},"1561":{"position":[[7,2]]},"1580":{"position":[[7,2]]},"1828":{"position":[[35,2]]},"1889":{"position":[[96,2]]},"1894":{"position":[[96,2]]},"1909":{"position":[[99,2],[106,2]]},"1911":{"position":[[65,2]]},"1926":{"position":[[99,2],[106,2]]},"1928":{"position":[[65,2]]}}}],["缓冲",{"_index":1103,"t":{"1361":{"position":[[156,2],[308,2]]}}}],["缓存",{"_index":1203,"t":{"1619":{"position":[[104,2]]}}}],["缓解",{"_index":226,"t":{"987":{"position":[[361,2]]}}}],["编写",{"_index":592,"t":{"1098":{"position":[[156,2]]},"1306":{"position":[[4,2]]},"1580":{"position":[[4,2]]},"1823":{"position":[[181,2]]},"1826":{"position":[[52,2]]}}}],["编号",{"_index":704,"t":{"1137":{"position":[[60,2]]},"1415":{"position":[[60,2]]}}}],["编码",{"_index":648,"t":{"1131":{"position":[[61,2]]},"1147":{"position":[[4,2]]},"1409":{"position":[[61,2]]},"1425":{"position":[[4,2]]},"1728":{"position":[[376,2]]}}}],["编程",{"_index":622,"t":{"1127":{"position":[[1,2]]},"1131":{"position":[[125,2]]},"1277":{"position":[[92,2]]},"1405":{"position":[[1,2]]},"1409":{"position":[[125,2]]},"1632":{"position":[[56,2]]},"1652":{"position":[[92,2]]}}}],["编程语言",{"_index":1451,"t":{"1826":{"position":[[48,4]]}}}],["编译",{"_index":1463,"t":{"1835":{"position":[[10,2]]}}}],["编译器",{"_index":776,"t":{"1167":{"position":[[248,3]]},"1477":{"position":[[248,3]]}}}],["缺乏",{"_index":44,"t":{"983":{"position":[[85,2]]}}}],["缺点",{"_index":1253,"t":{"1682":{"position":[[423,2]]},"1687":{"position":[[3,2]]},"1691":{"position":[[3,2]]},"1695":{"position":[[3,2]]}}}],["网关",{"_index":1441,"t":{"1821":{"position":[[210,2],[214,2]]}}}],["网络",{"_index":900,"t":{"1265":{"position":[[648,2]]},"1309":{"position":[[192,2],[471,2]]},"1614":{"position":[[648,2]]},"1739":{"position":[[58,2]]},"1830":{"position":[[47,2]]}}}],["网络协议",{"_index":1411,"t":{"1800":{"position":[[82,4]]},"1821":{"position":[[230,4]]}}}],["网络接口",{"_index":1367,"t":{"1784":{"position":[[677,4],[873,4]]}}}],["网络日志",{"_index":884,"t":{"1253":{"position":[[29,4]]},"1255":{"position":[[19,4]]},"1263":{"position":[[6,4],[46,4]]},"1265":{"position":[[450,4]]},"1602":{"position":[[29,4]]},"1604":{"position":[[19,4]]},"1612":{"position":[[6,4],[46,4]]},"1614":{"position":[[450,4]]}}}],["置于",{"_index":356,"t":{"991":{"position":[[98,2]]}}}],["考虑",{"_index":1139,"t":{"1383":{"position":[[311,2]]},"1817":{"position":[[339,2]]}}}],["而是",{"_index":101,"t":{"985":{"position":[[22,2]]},"987":{"position":[[277,2]]},"1149":{"position":[[20,2]]},"1427":{"position":[[20,2]]}}}],["而言",{"_index":126,"t":{"987":{"position":[[5,2]]}}}],["耗时",{"_index":954,"t":{"1277":{"position":[[1067,2]]},"1652":{"position":[[1067,2]]},"1810":{"position":[[361,2]]}}}],["耦",{"_index":652,"t":{"1131":{"position":[[79,1]]},"1279":{"position":[[63,1],[3014,1]]},"1409":{"position":[[79,1]]},"1654":{"position":[[63,1],[3014,1]]}}}],["耦合",{"_index":504,"t":{"1069":{"position":[[102,2]]},"1131":{"position":[[202,2],[1225,2]]},"1155":{"position":[[465,2]]},"1175":{"position":[[83,2]]},"1231":{"position":[[112,2]]},"1290":{"position":[[542,2]]},"1393":{"position":[[102,2]]},"1409":{"position":[[202,2],[1225,2]]},"1485":{"position":[[83,2]]},"1495":{"position":[[465,2]]},"1553":{"position":[[112,2]]},"1564":{"position":[[542,2]]}}}],["职责",{"_index":463,"t":{"1064":{"position":[[4,2]]},"1131":{"position":[[162,2]]},"1229":{"position":[[2,2],[72,2]]},"1282":{"position":[[2,2],[128,2]]},"1285":{"position":[[61,2]]},"1290":{"position":[[28,2]]},"1292":{"position":[[7,2],[325,2],[513,2],[759,2]]},"1299":{"position":[[130,2]]},"1388":{"position":[[4,2]]},"1409":{"position":[[162,2]]},"1551":{"position":[[2,2],[72,2]]},"1556":{"position":[[2,2],[128,2]]},"1559":{"position":[[61,2]]},"1564":{"position":[[28,2]]},"1566":{"position":[[7,2],[325,2],[513,2],[759,2]]},"1573":{"position":[[130,2]]}}}],["聚合",{"_index":689,"t":{"1133":{"position":[[148,2]]},"1139":{"position":[[50,2]]},"1275":{"position":[[284,2]]},"1277":{"position":[[372,2]]},"1411":{"position":[[148,2]]},"1417":{"position":[[50,2]]},"1650":{"position":[[284,2]]},"1652":{"position":[[372,2]]}}}],["聚居",{"_index":150,"t":{"987":{"position":[[96,2]]}}}],["股票",{"_index":165,"t":{"987":{"position":[[154,2]]}}}],["背景",{"_index":367,"t":{"991":{"position":[[146,2]]}}}],["能",{"_index":53,"t":{"983":{"position":[[105,1]]},"989":{"position":[[73,1]]},"993":{"position":[[0,1],[10,1]]},"1117":{"position":[[3,1]]},"1139":{"position":[[7,1]]},"1351":{"position":[[87,1]]},"1417":{"position":[[7,1]]},"1447":{"position":[[3,1]]}}}],["能力",{"_index":688,"t":{"1133":{"position":[[140,2]]},"1149":{"position":[[56,2]]},"1411":{"position":[[140,2]]},"1427":{"position":[[56,2]]}}}],["能够",{"_index":626,"t":{"1127":{"position":[[49,2]]},"1229":{"position":[[209,2]]},"1279":{"position":[[127,2]]},"1405":{"position":[[49,2]]},"1551":{"position":[[209,2]]},"1654":{"position":[[127,2]]},"1784":{"position":[[320,2],[1159,2]]},"1823":{"position":[[135,2]]}}}],["脚本",{"_index":1504,"t":{"1861":{"position":[[23,2]]}}}],["脱离",{"_index":173,"t":{"987":{"position":[[173,2]]}}}],["自主权",{"_index":299,"t":{"989":{"position":[[48,3],[88,3]]}}}],["自信",{"_index":198,"t":{"987":{"position":[[249,2]]}}}],["自动",{"_index":772,"t":{"1167":{"position":[[96,2],[251,2]]},"1343":{"position":[[504,2]]},"1381":{"position":[[438,2]]},"1431":{"position":[[57,2]]},"1477":{"position":[[96,2],[251,2]]},"1679":{"position":[[44,2]]},"1819":{"position":[[170,2]]},"1850":{"position":[[407,2]]},"1940":{"position":[[368,2]]}}}],["自动化",{"_index":1053,"t":{"1335":{"position":[[210,3]]},"1861":{"position":[[28,3]]}}}],["自定义",{"_index":1192,"t":{"1444":{"position":[[193,3]]},"1675":{"position":[[159,3]]},"1722":{"position":[[47,3]]},"1730":{"position":[[2,3]]},"1739":{"position":[[209,3]]},"1746":{"position":[[25,3],[70,3],[166,3]]},"1755":{"position":[[169,3]]},"1934":{"position":[[97,3]]}}}],["自己",{"_index":296,"t":{"989":{"position":[[36,2],[101,2]]},"1079":{"position":[[55,2]]},"1131":{"position":[[172,2]]},"1155":{"position":[[837,2]]},"1167":{"position":[[1484,2]]},"1207":{"position":[[70,2]]},"1403":{"position":[[55,2]]},"1409":{"position":[[172,2]]},"1477":{"position":[[1484,2]]},"1495":{"position":[[837,2]]},"1529":{"position":[[70,2]]}}}],["自我",{"_index":115,"t":{"985":{"position":[[68,2]]}}}],["自然",{"_index":50,"t":{"983":{"position":[[100,2]]}}}],["自由",{"_index":60,"t":{"983":{"position":[[129,2],[169,2],[187,2]]}}}],["自私",{"_index":276,"t":{"987":{"position":[[585,2]]}}}],["至少",{"_index":1310,"t":{"1728":{"position":[[535,2]]}}}],["至此",{"_index":1498,"t":{"1859":{"position":[[82,2]]}}}],["航海",{"_index":18,"t":{"983":{"position":[[1,2]]}}}],["艰难",{"_index":146,"t":{"987":{"position":[[82,2]]}}}],["荷兰",{"_index":28,"t":{"983":{"position":[[34,2],[58,2],[122,2]]}}}],["获取",{"_index":419,"t":{"1015":{"position":[[0,2]]},"1119":{"position":[[119,2]]},"1221":{"position":[[84,2]]},"1279":{"position":[[1586,2],[2715,2]]},"1316":{"position":[[116,2]]},"1335":{"position":[[88,2],[116,2]]},"1433":{"position":[[0,2]]},"1442":{"position":[[77,2]]},"1449":{"position":[[119,2]]},"1543":{"position":[[84,2]]},"1654":{"position":[[1586,2],[2715,2]]},"1702":{"position":[[69,2],[181,2],[196,2]]},"1704":{"position":[[52,2],[85,2]]},"1708":{"position":[[320,2],[358,2]]},"1784":{"position":[[394,2],[527,2],[643,2]]}}}],["菜单栏",{"_index":1207,"t":{"1619":{"position":[[128,3]]}}}],["葡萄牙",{"_index":22,"t":{"983":{"position":[[14,3]]}}}],["虚拟",{"_index":164,"t":{"987":{"position":[[148,2]]},"1784":{"position":[[45,2],[331,2],[417,2],[552,2]]},"1795":{"position":[[191,2]]}}}],["蛋糕",{"_index":137,"t":{"987":{"position":[[46,2]]}}}],["行",{"_index":408,"t":{"1001":{"position":[[28,1],[55,1],[76,1]]},"1642":{"position":[[133,1]]},"1846":{"position":[[27,1],[92,1]]}}}],["行为",{"_index":542,"t":{"1082":{"position":[[48,2]]},"1084":{"position":[[3,2]]},"1133":{"position":[[31,2]]},"1135":{"position":[[44,2]]},"1189":{"position":[[108,2]]},"1229":{"position":[[230,2]]},"1411":{"position":[[31,2]]},"1413":{"position":[[44,2]]},"1511":{"position":[[108,2]]},"1551":{"position":[[230,2]]}}}],["行号",{"_index":402,"t":{"997":{"position":[[35,2]]}}}],["行时",{"_index":1499,"t":{"1859":{"position":[[84,2]]}}}],["表现",{"_index":1181,"t":{"1444":{"position":[[22,2]]}}}],["表示",{"_index":757,"t":{"1155":{"position":[[134,2],[141,2]]},"1167":{"position":[[245,2]]},"1270":{"position":[[89,2]]},"1431":{"position":[[144,2]]},"1477":{"position":[[245,2]]},"1495":{"position":[[134,2],[141,2]]},"1636":{"position":[[23,2]]},"1638":{"position":[[75,2]]},"1645":{"position":[[89,2]]},"1704":{"position":[[37,2],[70,2]]},"1732":{"position":[[229,2]]},"1777":{"position":[[139,2]]},"1784":{"position":[[1034,2]]},"1850":{"position":[[348,2],[360,2]]}}}],["表达式",{"_index":1500,"t":{"1859":{"position":[[103,3],[112,3]]}}}],["被迫",{"_index":841,"t":{"1229":{"position":[[290,2]]},"1551":{"position":[[290,2]]}}}],["西",{"_index":355,"t":{"991":{"position":[[91,1]]}}}],["西班牙",{"_index":21,"t":{"983":{"position":[[10,3]]}}}],["要",{"_index":677,"t":{"1131":{"position":[[1742,1]]},"1347":{"position":[[0,1]]},"1383":{"position":[[230,1]]},"1409":{"position":[[1742,1]]}}}],["要求",{"_index":815,"t":{"1217":{"position":[[285,2]]},"1539":{"position":[[285,2]]},"1795":{"position":[[258,2]]},"1821":{"position":[[196,2]]}}}],["覆盖",{"_index":556,"t":{"1084":{"position":[[37,2]]},"1087":{"position":[[126,2]]},"1089":{"position":[[48,2],[123,2]]},"1092":{"position":[[133,2]]},"1094":{"position":[[261,2]]},"1096":{"position":[[93,2]]},"1098":{"position":[[30,2],[132,2]]}}}],["观察",{"_index":1492,"t":{"1857":{"position":[[4,2],[62,2],[120,2]]},"1859":{"position":[[91,2]]}}}],["观念",{"_index":108,"t":{"985":{"position":[[45,2]]}}}],["规则",{"_index":552,"t":{"1084":{"position":[[17,2],[34,2],[42,2],[59,2],[71,2],[76,2]]},"1089":{"position":[[53,2],[169,2],[201,2]]},"1092":{"position":[[160,2]]},"1094":{"position":[[174,2],[195,2]]},"1096":{"position":[[28,2],[80,2],[91,2]]},"1098":{"position":[[12,2],[27,2],[60,2]]},"1135":{"position":[[16,2]]},"1145":{"position":[[1912,2]]},"1270":{"position":[[93,2],[203,2],[342,2]]},"1275":{"position":[[191,2],[827,2]]},"1277":{"position":[[279,2]]},"1279":{"position":[[1340,2],[1588,2],[2717,2]]},"1413":{"position":[[16,2]]},"1423":{"position":[[1912,2]]},"1645":{"position":[[93,2],[203,2],[342,2]]},"1650":{"position":[[191,2],[827,2]]},"1652":{"position":[[279,2]]},"1654":{"position":[[1340,2],[1588,2],[2717,2]]},"1722":{"position":[[52,2]]},"1730":{"position":[[7,2]]},"1746":{"position":[[101,2]]}}}],["规模",{"_index":631,"t":{"1127":{"position":[[66,2]]},"1139":{"position":[[9,2]]},"1405":{"position":[[66,2]]},"1417":{"position":[[9,2]]}}}],["规避",{"_index":1039,"t":{"1309":{"position":[[504,2]]}}}],["视角",{"_index":16,"t":{"981":{"position":[[49,2]]}}}],["角度",{"_index":253,"t":{"987":{"position":[[490,2]]}}}],["角色",{"_index":257,"t":{"987":{"position":[[509,2]]}}}],["解",{"_index":651,"t":{"1131":{"position":[[78,1]]},"1279":{"position":[[62,1],[3013,1]]},"1409":{"position":[[78,1]]},"1654":{"position":[[62,1],[3013,1]]}}}],["解决",{"_index":1022,"t":{"1309":{"position":[[82,2]]}}}],["解密",{"_index":803,"t":{"1197":{"position":[[2982,2]]},"1207":{"position":[[57,2]]},"1519":{"position":[[2982,2]]},"1529":{"position":[[57,2]]},"1772":{"position":[[1054,2]]}}}],["解析",{"_index":707,"t":{"1137":{"position":[[71,2]]},"1299":{"position":[[84,2]]},"1363":{"position":[[564,2]]},"1415":{"position":[[71,2]]},"1573":{"position":[[84,2]]},"1657":{"position":[[13,2]]},"1672":{"position":[[117,2]]},"1675":{"position":[[23,2],[162,2],[277,2]]},"1677":{"position":[[26,2]]},"1682":{"position":[[32,2],[50,2],[469,2],[472,2]]},"1687":{"position":[[6,2]]},"1691":{"position":[[29,2]]},"1695":{"position":[[18,2]]},"1697":{"position":[[35,2],[45,2],[121,2],[133,2],[164,2],[187,2]]},"1699":{"position":[[36,2],[58,2],[96,2]]},"1702":{"position":[[115,2]]},"1772":{"position":[[1916,2]]}}}],["解释",{"_index":560,"t":{"1087":{"position":[[93,2]]},"1089":{"position":[[83,2]]},"1092":{"position":[[109,2]]},"1094":{"position":[[154,2]]},"1361":{"position":[[274,2]]},"1367":{"position":[[438,2]]},"1369":{"position":[[418,2]]},"1371":{"position":[[535,2]]},"1373":{"position":[[346,2]]},"1377":{"position":[[289,2]]},"1381":{"position":[[409,2]]}}}],["解锁",{"_index":1102,"t":{"1359":{"position":[[66,2]]}}}],["触发",{"_index":967,"t":{"1279":{"position":[[329,2]]},"1363":{"position":[[668,2]]},"1371":{"position":[[41,2],[437,2]]},"1383":{"position":[[84,2]]},"1431":{"position":[[23,2],[129,2],[159,2]]},"1654":{"position":[[329,2]]},"1884":{"position":[[22,2]]}}}],["警告",{"_index":896,"t":{"1265":{"position":[[301,2]]},"1614":{"position":[[301,2]]},"1619":{"position":[[4,2]]}}}],["计数",{"_index":1120,"t":{"1367":{"position":[[169,2],[353,2],[454,2],[512,2]]},"1369":{"position":[[246,2],[401,2]]},"1377":{"position":[[272,2]]}}}],["计数器",{"_index":1484,"t":{"1850":{"position":[[352,3]]}}}],["计时",{"_index":718,"t":{"1141":{"position":[[61,2]]},"1419":{"position":[[61,2]]}}}],["计算",{"_index":773,"t":{"1167":{"position":[[98,2],[253,2]]},"1351":{"position":[[81,2]]},"1383":{"position":[[120,2]]},"1477":{"position":[[98,2],[253,2]]},"1632":{"position":[[28,2]]}}}],["计算成本",{"_index":1069,"t":{"1343":{"position":[[437,4]]},"1353":{"position":[[349,4]]}}}],["订单",{"_index":670,"t":{"1131":{"position":[[867,2],[899,2],[1415,2],[1537,2],[1569,2]]},"1409":{"position":[[867,2],[899,2],[1415,2],[1537,2],[1569,2]]}}}],["认证",{"_index":1035,"t":{"1309":{"position":[[398,2]]},"1819":{"position":[[267,2]]}}}],["讨论",{"_index":1403,"t":{"1797":{"position":[[121,2]]}}}],["记住",{"_index":1018,"t":{"1306":{"position":[[82,2]]},"1580":{"position":[[82,2]]}}}],["记录",{"_index":1426,"t":{"1817":{"position":[[404,2]]}}}],["许多",{"_index":1365,"t":{"1784":{"position":[[586,2]]}}}],["讽刺",{"_index":323,"t":{"989":{"position":[[148,2]]}}}],["设备",{"_index":1356,"t":{"1784":{"position":[[351,2],[575,2],[588,2],[653,2],[711,2],[727,2],[734,2],[748,2],[780,2],[805,2],[825,2],[863,2],[921,2]]}}}],["设定",{"_index":1527,"t":{"1934":{"position":[[107,2]]}}}],["设置",{"_index":753,"t":{"1152":{"position":[[56,2]]},"1270":{"position":[[91,2],[210,2]]},"1275":{"position":[[189,2]]},"1277":{"position":[[67,2],[277,2]]},"1279":{"position":[[1338,2]]},"1309":{"position":[[93,2],[289,2]]},"1431":{"position":[[121,2],[166,2],[182,2],[256,2]]},"1433":{"position":[[161,2],[170,2],[532,2]]},"1444":{"position":[[29,2]]},"1492":{"position":[[56,2]]},"1626":{"position":[[57,2]]},"1645":{"position":[[91,2],[210,2]]},"1650":{"position":[[189,2]]},"1652":{"position":[[67,2],[277,2]]},"1654":{"position":[[1338,2]]},"1708":{"position":[[34,2]]},"1803":{"position":[[393,2],[467,2]]},"1808":{"position":[[420,2],[490,2]]},"1819":{"position":[[234,2]]},"1823":{"position":[[86,2]]},"1838":{"position":[[79,2]]},"1844":{"position":[[16,2]]},"1846":{"position":[[16,2],[55,2],[88,2]]},"1853":{"position":[[139,2],[393,2]]},"1940":{"position":[[241,2]]}}}],["设计",{"_index":98,"t":{"985":{"position":[[14,2]]},"1069":{"position":[[104,2]]},"1100":{"position":[[12,2]]},"1127":{"position":[[6,2]]},"1129":{"position":[[24,2]]},"1131":{"position":[[116,2]]},"1149":{"position":[[17,2]]},"1155":{"position":[[467,2],[573,2]]},"1175":{"position":[[85,2]]},"1187":{"position":[[4,2]]},"1227":{"position":[[16,2],[55,2]]},"1231":{"position":[[200,2],[268,2]]},"1267":{"position":[[70,2],[86,2]]},"1270":{"position":[[1236,2]]},"1279":{"position":[[2951,2]]},"1282":{"position":[[165,2]]},"1306":{"position":[[79,2]]},"1393":{"position":[[104,2]]},"1405":{"position":[[6,2]]},"1407":{"position":[[24,2]]},"1409":{"position":[[116,2]]},"1427":{"position":[[17,2]]},"1457":{"position":[[12,2]]},"1485":{"position":[[85,2]]},"1495":{"position":[[467,2],[573,2]]},"1509":{"position":[[4,2]]},"1549":{"position":[[16,2],[55,2]]},"1553":{"position":[[200,2],[268,2]]},"1556":{"position":[[165,2]]},"1580":{"position":[[79,2]]},"1616":{"position":[[70,2],[86,2]]},"1645":{"position":[[1236,2]]},"1654":{"position":[[2951,2]]},"1679":{"position":[[27,2]]},"1828":{"position":[[88,2]]}}}],["访问",{"_index":507,"t":{"1069":{"position":[[270,2]]},"1373":{"position":[[408,2]]},"1383":{"position":[[347,2]]},"1393":{"position":[[270,2]]},"1702":{"position":[[231,2]]},"1777":{"position":[[39,2]]},"1784":{"position":[[324,2],[778,2]]},"1789":{"position":[[29,2]]},"1795":{"position":[[81,2]]},"1800":{"position":[[97,2]]},"1819":{"position":[[226,2]]},"1821":{"position":[[184,2]]},"1850":{"position":[[333,2]]}}}],["证书",{"_index":1026,"t":{"1309":{"position":[[171,2],[197,2],[212,2],[218,2],[284,2]]}}}],["证明",{"_index":343,"t":{"991":{"position":[[64,2]]}}}],["识别",{"_index":1200,"t":{"1619":{"position":[[50,2]]}}}],["诊断",{"_index":715,"t":{"1141":{"position":[[21,2]]},"1149":{"position":[[67,2]]},"1419":{"position":[[21,2]]},"1427":{"position":[[67,2]]},"1444":{"position":[[174,2]]},"1823":{"position":[[211,2]]},"1826":{"position":[[80,2]]}}}],["话",{"_index":396,"t":{"993":{"position":[[4,1],[14,1]]}}}],["详细",{"_index":1033,"t":{"1309":{"position":[[315,2]]},"1429":{"position":[[54,2]]},"1670":{"position":[[158,2]]},"1797":{"position":[[115,2]]},"1835":{"position":[[12,2]]}}}],["语句",{"_index":1105,"t":{"1363":{"position":[[7,2]]},"1642":{"position":[[128,2]]},"1719":{"position":[[42,2]]}}}],["语法",{"_index":551,"t":{"1084":{"position":[[0,2]]},"1697":{"position":[[76,2]]}}}],["语言",{"_index":869,"t":{"1234":{"position":[[107,2]]},"1282":{"position":[[135,2]]},"1359":{"position":[[47,2]]},"1383":{"position":[[328,2]]},"1556":{"position":[[135,2]]},"1583":{"position":[[107,2]]},"1702":{"position":[[7,2]]},"1722":{"position":[[15,2]]}}}],["说",{"_index":395,"t":{"993":{"position":[[1,1],[11,1]]}}}],["说明",{"_index":908,"t":{"1270":{"position":[[1145,2]]},"1273":{"position":[[127,2],[217,2]]},"1343":{"position":[[337,2]]},"1345":{"position":[[380,2]]},"1351":{"position":[[3,2]]},"1645":{"position":[[1145,2]]},"1648":{"position":[[127,2],[217,2]]}}}],["请求",{"_index":717,"t":{"1141":{"position":[[54,2]]},"1251":{"position":[[167,2],[226,2]]},"1270":{"position":[[96,2],[1252,2]]},"1275":{"position":[[183,2],[829,2]]},"1277":{"position":[[271,2]]},"1279":{"position":[[51,2],[231,2],[426,2],[707,2],[908,2]]},"1363":{"position":[[733,2]]},"1419":{"position":[[54,2]]},"1600":{"position":[[167,2],[226,2]]},"1645":{"position":[[96,2],[1252,2]]},"1650":{"position":[[183,2],[829,2]]},"1652":{"position":[[271,2]]},"1654":{"position":[[51,2],[231,2],[426,2],[707,2],[908,2]]},"1810":{"position":[[355,2]]},"1815":{"position":[[123,2]]},"1817":{"position":[[300,2],[406,2]]}}}],["读取",{"_index":604,"t":{"1117":{"position":[[4,2]]},"1119":{"position":[[108,2]]},"1121":{"position":[[4,2]]},"1123":{"position":[[7,2]]},"1207":{"position":[[52,2]]},"1273":{"position":[[51,2],[623,2]]},"1323":{"position":[[20,2]]},"1335":{"position":[[70,2]]},"1431":{"position":[[313,2]]},"1435":{"position":[[0,2]]},"1447":{"position":[[4,2]]},"1449":{"position":[[108,2]]},"1451":{"position":[[4,2]]},"1453":{"position":[[7,2]]},"1529":{"position":[[52,2]]},"1630":{"position":[[203,2]]},"1648":{"position":[[51,2],[623,2]]},"1699":{"position":[[1,2]]},"1815":{"position":[[249,2]]},"1857":{"position":[[71,2],[131,2]]},"1901":{"position":[[19,2],[297,2]]},"1918":{"position":[[19,2],[297,2]]}}}],["读取数据",{"_index":1106,"t":{"1363":{"position":[[23,4]]}}}],["调度",{"_index":468,"t":{"1064":{"position":[[25,2]]},"1279":{"position":[[299,2],[1033,2]]},"1388":{"position":[[25,2]]},"1433":{"position":[[116,2]]},"1654":{"position":[[299,2],[1033,2]]}}}],["调整",{"_index":709,"t":{"1139":{"position":[[11,2]]},"1343":{"position":[[448,2]]},"1417":{"position":[[11,2]]},"1817":{"position":[[312,2]]}}}],["调用",{"_index":669,"t":{"1131":{"position":[[594,2]]},"1155":{"position":[[1157,2]]},"1167":{"position":[[1832,2]]},"1277":{"position":[[1787,2],[1887,2],[2132,2]]},"1279":{"position":[[271,2]]},"1367":{"position":[[473,2],[547,2]]},"1409":{"position":[[594,2]]},"1433":{"position":[[4,2]]},"1477":{"position":[[1832,2]]},"1495":{"position":[[1157,2]]},"1632":{"position":[[47,2]]},"1652":{"position":[[1787,2],[1887,2],[2132,2]]},"1654":{"position":[[271,2]]},"1702":{"position":[[95,2],[209,2],[214,2]]},"1715":{"position":[[3,2],[358,2]]},"1717":{"position":[[26,2]]},"1772":{"position":[[1762,2],[1867,2],[1932,2],[1961,2]]},"1819":{"position":[[103,2]]},"1844":{"position":[[156,2]]},"1882":{"position":[[13,2]]},"1889":{"position":[[61,2]]},"1894":{"position":[[61,2]]},"1911":{"position":[[15,2]]},"1928":{"position":[[15,2]]},"1938":{"position":[[519,2]]},"1940":{"position":[[378,2]]}}}],["调用者",{"_index":911,"t":{"1270":{"position":[[1156,3]]},"1275":{"position":[[706,3]]},"1277":{"position":[[26,3]]},"1279":{"position":[[324,3]]},"1645":{"position":[[1156,3]]},"1650":{"position":[[706,3]]},"1652":{"position":[[26,3]]},"1654":{"position":[[324,3]]}}}],["调试",{"_index":407,"t":{"999":{"position":[[27,2]]},"1064":{"position":[[72,2]]},"1309":{"position":[[291,2],[308,2]]},"1388":{"position":[[72,2]]},"1429":{"position":[[25,2]]},"1431":{"position":[[73,2]]},"1433":{"position":[[95,2],[195,2]]},"1444":{"position":[[167,2],[230,2]]},"1717":{"position":[[8,2]]},"1819":{"position":[[6,2]]},"1826":{"position":[[23,2],[32,2]]},"1828":{"position":[[120,2]]},"1830":{"position":[[23,2],[42,2],[49,2],[63,2],[73,2]]},"1838":{"position":[[9,2]]},"1850":{"position":[[400,2]]},"1853":{"position":[[83,2],[195,2],[262,2],[308,2],[432,2]]},"1861":{"position":[[31,2]]},"1863":{"position":[[12,2]]},"1868":{"position":[[14,2]]},"1879":{"position":[[4,2]]}}}],["调试信息",{"_index":399,"t":{"997":{"position":[[4,4]]},"1870":{"position":[[9,4]]}}}],["谨慎",{"_index":1185,"t":{"1444":{"position":[[94,2]]}}}],["象征",{"_index":269,"t":{"987":{"position":[[552,2]]}}}],["负数",{"_index":1160,"t":{"1431":{"position":[[169,2]]}}}],["负责",{"_index":465,"t":{"1064":{"position":[[12,2]]},"1066":{"position":[[11,2]]},"1229":{"position":[[68,2]]},"1275":{"position":[[130,2]]},"1279":{"position":[[114,2],[262,2]]},"1282":{"position":[[124,2]]},"1292":{"position":[[752,2]]},"1388":{"position":[[12,2]]},"1390":{"position":[[11,2]]},"1551":{"position":[[68,2]]},"1556":{"position":[[124,2]]},"1566":{"position":[[752,2]]},"1650":{"position":[[130,2]]},"1654":{"position":[[114,2],[262,2]]}}}],["负载",{"_index":750,"t":{"1152":{"position":[[35,2]]},"1155":{"position":[[187,2]]},"1492":{"position":[[35,2]]},"1495":{"position":[[187,2]]}}}],["贡献",{"_index":338,"t":{"991":{"position":[[39,2]]}}}],["财产",{"_index":41,"t":{"983":{"position":[[75,2]]}}}],["财富",{"_index":49,"t":{"983":{"position":[[98,2]]},"987":{"position":[[133,2],[533,2],[558,2],[573,2]]}}}],["责任",{"_index":320,"t":{"989":{"position":[[138,2]]}}}],["贪婪",{"_index":178,"t":{"987":{"position":[[189,2],[602,2]]}}}],["贴近",{"_index":381,"t":{"991":{"position":[[205,2]]}}}],["资本",{"_index":48,"t":{"983":{"position":[[95,2]]},"987":{"position":[[150,2],[388,2],[421,2],[437,2]]}}}],["资本主义",{"_index":179,"t":{"987":{"position":[[192,4],[379,4],[495,4]]}}}],["资源",{"_index":888,"t":{"1257":{"position":[[470,2]]},"1263":{"position":[[767,2]]},"1275":{"position":[[137,2]]},"1606":{"position":[[470,2]]},"1612":{"position":[[767,2]]},"1650":{"position":[[137,2]]},"1800":{"position":[[140,2]]},"1911":{"position":[[80,2]]},"1928":{"position":[[80,2]]}}}],["赋予",{"_index":371,"t":{"991":{"position":[[161,2],[230,2]]}}}],["赋值",{"_index":581,"t":{"1096":{"position":[[52,2]]}}}],["走向",{"_index":82,"t":{"983":{"position":[[195,2]]}}}],["起来",{"_index":1444,"t":{"1823":{"position":[[52,2]]}}}],["超",{"_index":169,"t":{"987":{"position":[[164,1]]}}}],["超时",{"_index":692,"t":{"1135":{"position":[[11,2]]},"1143":{"position":[[24,2],[47,2]]},"1152":{"position":[[42,2],[58,2]]},"1155":{"position":[[344,2]]},"1277":{"position":[[141,2],[890,2],[1161,2],[1895,2]]},"1279":{"position":[[2139,2],[5974,2]]},"1335":{"position":[[170,2]]},"1363":{"position":[[703,2]]},"1379":{"position":[[42,2]]},"1381":{"position":[[138,2]]},"1383":{"position":[[136,2],[297,2],[427,2]]},"1413":{"position":[[11,2]]},"1421":{"position":[[24,2],[47,2]]},"1492":{"position":[[42,2],[58,2]]},"1495":{"position":[[344,2]]},"1652":{"position":[[141,2],[890,2],[1161,2],[1895,2]]},"1654":{"position":[[2139,2],[5974,2]]},"1817":{"position":[[366,2]]}}}],["越",{"_index":1162,"t":{"1431":{"position":[[203,1],[207,1]]}}}],["足够",{"_index":1394,"t":{"1795":{"position":[[16,2]]},"1911":{"position":[[140,2]]},"1928":{"position":[[140,2]]}}}],["跃升",{"_index":211,"t":{"987":{"position":[[301,2]]}}}],["跟踪",{"_index":1178,"t":{"1433":{"position":[[541,2]]},"1819":{"position":[[99,2]]},"1853":{"position":[[144,2],[353,2]]}}}],["跨",{"_index":522,"t":{"1077":{"position":[[21,1]]},"1401":{"position":[[21,1]]}}}],["跨平台",{"_index":1516,"t":{"1909":{"position":[[91,3]]},"1926":{"position":[[91,3]]}}}],["路径",{"_index":694,"t":{"1135":{"position":[[18,2]]},"1149":{"position":[[64,2]]},"1413":{"position":[[18,2]]},"1427":{"position":[[64,2]]},"1775":{"position":[[61,2]]},"1777":{"position":[[17,2]]},"1800":{"position":[[64,2]]},"1817":{"position":[[259,2]]},"1853":{"position":[[367,2]]}}}],["路由",{"_index":494,"t":{"1066":{"position":[[21,2]]},"1077":{"position":[[78,2]]},"1155":{"position":[[566,2],[970,2]]},"1167":{"position":[[1617,2]]},"1390":{"position":[[21,2]]},"1401":{"position":[[78,2]]},"1477":{"position":[[1617,2]]},"1495":{"position":[[566,2],[970,2]]},"1803":{"position":[[492,2]]},"1808":{"position":[[602,2]]}}}],["跳转",{"_index":1198,"t":{"1619":{"position":[[19,2]]}}}],["转储",{"_index":1171,"t":{"1431":{"position":[[543,2]]}}}],["转化",{"_index":1327,"t":{"1746":{"position":[[75,2]]}}}],["转发",{"_index":745,"t":{"1152":{"position":[[10,2]]},"1161":{"position":[[292,2]]},"1492":{"position":[[10,2]]},"1501":{"position":[[292,2]]}}}],["转换",{"_index":1326,"t":{"1746":{"position":[[30,2]]},"1772":{"position":[[1849,2]]}}}],["转换成",{"_index":775,"t":{"1167":{"position":[[228,3]]},"1477":{"position":[[228,3]]}}}],["软",{"_index":1164,"t":{"1431":{"position":[[260,1]]}}}],["软件",{"_index":829,"t":{"1229":{"position":[[109,2]]},"1234":{"position":[[75,2]]},"1551":{"position":[[109,2]]},"1583":{"position":[[75,2]]}}}],["软件包",{"_index":1390,"t":{"1791":{"position":[[34,3]]}}}],["软件开发",{"_index":1457,"t":{"1830":{"position":[[0,4]]}}}],["软件系统",{"_index":822,"t":{"1227":{"position":[[41,4]]},"1549":{"position":[[41,4]]}}}],["轻松",{"_index":673,"t":{"1131":{"position":[[976,2]]},"1139":{"position":[[71,2]]},"1255":{"position":[[15,2]]},"1279":{"position":[[130,2]]},"1409":{"position":[[976,2]]},"1417":{"position":[[71,2]]},"1604":{"position":[[15,2]]},"1654":{"position":[[130,2]]}}}],["较",{"_index":1070,"t":{"1343":{"position":[[467,1]]},"1682":{"position":[[455,1]]},"1695":{"position":[[49,1]]},"1697":{"position":[[143,1],[192,1]]}}}],["较慢",{"_index":1264,"t":{"1697":{"position":[[49,2]]}}}],["辉煌",{"_index":366,"t":{"991":{"position":[[143,2]]}}}],["输入",{"_index":1052,"t":{"1335":{"position":[[141,2]]},"1662":{"position":[[153,2],[227,2]]},"1664":{"position":[[148,2],[219,2]]},"1672":{"position":[[157,2]]},"1675":{"position":[[196,2]]},"1736":{"position":[[32,2]]}}}],["输出",{"_index":413,"t":{"1008":{"position":[[34,2]]},"1024":{"position":[[87,2],[221,2]]},"1038":{"position":[[231,2],[295,2]]},"1045":{"position":[[74,2]]},"1052":{"position":[[76,2]]},"1059":{"position":[[83,2]]},"1182":{"position":[[63,2]]},"1255":{"position":[[3,2],[8,2]]},"1257":{"position":[[133,2],[142,2],[216,2],[490,2]]},"1259":{"position":[[25,2]]},"1265":{"position":[[638,2]]},"1273":{"position":[[466,2],[533,2],[599,2],[704,2],[803,2],[902,2]]},"1279":{"position":[[6218,2]]},"1316":{"position":[[123,2]]},"1323":{"position":[[27,2]]},"1335":{"position":[[50,2],[74,2],[92,2],[120,2]]},"1504":{"position":[[63,2]]},"1604":{"position":[[3,2],[8,2]]},"1606":{"position":[[133,2],[142,2],[216,2],[490,2]]},"1608":{"position":[[25,2]]},"1614":{"position":[[638,2]]},"1648":{"position":[[466,2],[533,2],[599,2],[704,2],[803,2],[902,2]]},"1654":{"position":[[6218,2]]},"1715":{"position":[[613,2]]},"1934":{"position":[[100,2]]}}}],["边",{"_index":1212,"t":{"1630":{"position":[[232,1],[235,1]]}}}],["边界条件",{"_index":719,"t":{"1143":{"position":[[5,4]]},"1421":{"position":[[5,4]]}}}],["迁徙",{"_index":143,"t":{"987":{"position":[[71,2]]}}}],["迁移",{"_index":798,"t":{"1194":{"position":[[9,2],[20,2]]},"1197":{"position":[[1835,2]]},"1516":{"position":[[9,2],[20,2]]},"1519":{"position":[[1835,2]]}}}],["过",{"_index":245,"t":{"987":{"position":[[464,1]]},"1349":{"position":[[9,1],[478,1]]},"1444":{"position":[[31,1],[56,1]]}}}],["过于",{"_index":373,"t":{"991":{"position":[[177,2]]}}}],["过去",{"_index":188,"t":{"987":{"position":[[222,2]]}}}],["过度",{"_index":738,"t":{"1149":{"position":[[15,2]]},"1231":{"position":[[266,2]]},"1267":{"position":[[68,2]]},"1306":{"position":[[77,2]]},"1427":{"position":[[15,2]]},"1553":{"position":[[266,2]]},"1580":{"position":[[77,2]]},"1616":{"position":[[68,2]]}}}],["过时",{"_index":1084,"t":{"1351":{"position":[[58,2]]}}}],["过期",{"_index":1027,"t":{"1309":{"position":[[176,2]]}}}],["过程",{"_index":952,"t":{"1277":{"position":[[182,2]]},"1309":{"position":[[320,2]]},"1652":{"position":[[182,2]]}}}],["运行",{"_index":456,"t":{"1061":{"position":[[46,2]]},"1066":{"position":[[79,2]]},"1079":{"position":[[52,2]]},"1167":{"position":[[1195,2]]},"1185":{"position":[[436,2]]},"1312":{"position":[[12,2]]},"1335":{"position":[[18,2]]},"1385":{"position":[[46,2]]},"1390":{"position":[[79,2]]},"1403":{"position":[[52,2]]},"1429":{"position":[[28,2]]},"1477":{"position":[[1195,2]]},"1507":{"position":[[436,2]]},"1619":{"position":[[33,2],[38,2]]},"1634":{"position":[[186,2]]},"1662":{"position":[[338,2]]},"1664":{"position":[[340,2]]},"1666":{"position":[[535,2]]},"1668":{"position":[[284,2]]},"1670":{"position":[[326,2]]},"1672":{"position":[[250,2]]},"1702":{"position":[[23,2]]},"1777":{"position":[[30,2]]},"1784":{"position":[[441,2],[965,2],[1163,2]]},"1793":{"position":[[4,2]]},"1830":{"position":[[32,2]]},"1853":{"position":[[430,2]]},"1872":{"position":[[0,2],[47,2]]},"1937":{"position":[[354,2]]},"1938":{"position":[[328,2]]}}}],["近代",{"_index":228,"t":{"987":{"position":[[369,2]]}}}],["返回",{"_index":416,"t":{"1011":{"position":[[5,2]]},"1117":{"position":[[15,2]]},"1121":{"position":[[6,2],[172,2],[398,2]]},"1123":{"position":[[4,2]]},"1155":{"position":[[391,2],[1167,2]]},"1167":{"position":[[1842,2]]},"1175":{"position":[[191,2]]},"1270":{"position":[[176,2]]},"1273":{"position":[[78,2],[162,2]]},"1275":{"position":[[206,2]]},"1277":{"position":[[294,2]]},"1279":{"position":[[4640,2],[5611,2]]},"1292":{"position":[[291,2]]},"1345":{"position":[[459,2],[468,2]]},"1349":{"position":[[222,2]]},"1431":{"position":[[41,2],[113,2]]},"1433":{"position":[[34,2]]},"1447":{"position":[[15,2]]},"1451":{"position":[[6,2],[172,2],[398,2]]},"1453":{"position":[[4,2]]},"1477":{"position":[[1842,2]]},"1485":{"position":[[191,2]]},"1495":{"position":[[391,2],[1167,2]]},"1566":{"position":[[291,2]]},"1624":{"position":[[5,2]]},"1626":{"position":[[15,2]]},"1630":{"position":[[41,2],[50,2]]},"1645":{"position":[[176,2]]},"1648":{"position":[[78,2],[162,2]]},"1650":{"position":[[206,2]]},"1652":{"position":[[294,2]]},"1654":{"position":[[4640,2],[5611,2]]},"1708":{"position":[[49,2]]},"1772":{"position":[[2334,2]]}}}],["返回值",{"_index":432,"t":{"1031":{"position":[[24,3]]},"1273":{"position":[[86,3]]},"1279":{"position":[[2969,3]]},"1624":{"position":[[2,3]]},"1632":{"position":[[6,3],[11,3]]},"1648":{"position":[[86,3]]},"1654":{"position":[[2969,3]]},"1770":{"position":[[6,3]]}}}],["还是",{"_index":1443,"t":{"1823":{"position":[[42,2]]},"1853":{"position":[[149,2]]}}}],["这个",{"_index":252,"t":{"987":{"position":[[488,2]]},"1119":{"position":[[39,2]]},"1431":{"position":[[65,2]]},"1449":{"position":[[39,2]]},"1626":{"position":[[59,2]]}}}],["这些",{"_index":821,"t":{"1227":{"position":[[21,2]]},"1279":{"position":[[118,2]]},"1444":{"position":[[209,2]]},"1549":{"position":[[21,2]]},"1654":{"position":[[118,2]]},"1784":{"position":[[329,2],[360,2],[385,2],[732,2]]},"1795":{"position":[[189,2]]}}}],["这样",{"_index":262,"t":{"987":{"position":[[526,2]]},"1772":{"position":[[1927,2]]}}}],["这种",{"_index":45,"t":{"983":{"position":[[87,2]]},"987":{"position":[[410,2],[583,2]]},"991":{"position":[[171,2]]}}}],["这边",{"_index":812,"t":{"1217":{"position":[[196,2]]},"1539":{"position":[[196,2]]}}}],["这里",{"_index":892,"t":{"1263":{"position":[[759,2]]},"1612":{"position":[[759,2]]},"1938":{"position":[[512,2]]}}}],["进",{"_index":1489,"t":{"1853":{"position":[[311,1]]}}}],["进入",{"_index":212,"t":{"987":{"position":[[307,2]]},"1782":{"position":[[77,2]]},"1784":{"position":[[1372,2],[1430,2]]},"1787":{"position":[[25,2],[48,2]]},"1844":{"position":[[89,2],[107,2]]}}}],["进制",{"_index":1475,"t":{"1848":{"position":[[135,2]]}}}],["进步",{"_index":202,"t":{"987":{"position":[[270,2]]}}}],["进程",{"_index":459,"t":{"1061":{"position":[[56,2]]},"1077":{"position":[[22,2]]},"1385":{"position":[[56,2]]},"1401":{"position":[[22,2]]},"1775":{"position":[[23,2],[28,2]]},"1777":{"position":[[28,2]]},"1784":{"position":[[318,2],[430,2],[536,2]]},"1789":{"position":[[25,2]]},"1795":{"position":[[76,2],[148,2],[233,2]]},"1797":{"position":[[19,2]]},"1800":{"position":[[28,2],[53,2]]},"1819":{"position":[[212,2]]},"1838":{"position":[[58,2],[69,2]]},"1853":{"position":[[33,2],[79,2],[147,2],[152,2],[198,2],[265,2],[356,2],[365,2]]},"1882":{"position":[[17,2]]},"1899":{"position":[[104,2],[155,2]]},"1903":{"position":[[9,2]]},"1905":{"position":[[123,2]]},"1909":{"position":[[33,2]]},"1916":{"position":[[104,2],[155,2]]},"1920":{"position":[[9,2]]},"1922":{"position":[[123,2]]},"1926":{"position":[[33,2]]},"1932":{"position":[[2,2],[22,2]]},"1934":{"position":[[10,2],[21,2],[89,2],[130,2],[142,2],[174,2],[179,2],[203,2]]},"1937":{"position":[[47,2],[175,2],[273,2],[352,2],[432,2],[450,2]]},"1938":{"position":[[13,2],[22,2],[28,2],[152,2],[250,2],[326,2],[397,2],[415,2],[515,2],[541,2],[548,2],[583,2]]},"1940":{"position":[[180,2],[473,2],[569,2],[581,2],[626,2],[644,2],[707,2],[719,2],[734,2],[770,2],[820,2],[854,2],[874,2]]}}}],["进行",{"_index":498,"t":{"1066":{"position":[[120,2]]},"1270":{"position":[[23,2]]},"1351":{"position":[[40,2]]},"1383":{"position":[[365,2]]},"1390":{"position":[[120,2]]},"1645":{"position":[[23,2]]},"1708":{"position":[[366,2]]},"1732":{"position":[[240,2]]},"1736":{"position":[[58,2]]},"1739":{"position":[[144,2]]},"1775":{"position":[[95,2]]},"1777":{"position":[[60,2]]},"1784":{"position":[[613,2],[655,2],[878,2]]},"1853":{"position":[[81,2]]}}}],["进阶",{"_index":1325,"t":{"1739":{"position":[[225,2]]}}}],["远",{"_index":168,"t":{"987":{"position":[[163,1]]}}}],["远程",{"_index":793,"t":{"1182":{"position":[[77,2]]},"1504":{"position":[[77,2]]},"1830":{"position":[[40,2],[51,2]]},"1863":{"position":[[8,2],[38,2]]}}}],["违反",{"_index":991,"t":{"1290":{"position":[[3,2]]},"1564":{"position":[[3,2]]}}}],["连接",{"_index":894,"t":{"1263":{"position":[[764,2]]},"1612":{"position":[[764,2]]},"1819":{"position":[[55,2]]},"1823":{"position":[[104,2]]},"1863":{"position":[[36,2]]}}}],["连接池",{"_index":1424,"t":{"1817":{"position":[[0,3]]}}}],["迟迟",{"_index":943,"t":{"1277":{"position":[[59,2]]},"1652":{"position":[[59,2]]}}}],["迪",{"_index":855,"t":{"1231":{"position":[[47,1]]},"1553":{"position":[[47,1]]}}}],["迭代",{"_index":1091,"t":{"1353":{"position":[[158,2]]}}}],["追加",{"_index":918,"t":{"1270":{"position":[[1293,2]]},"1645":{"position":[[1293,2]]}}}],["追求",{"_index":92,"t":{"983":{"position":[[227,2]]},"987":{"position":[[479,2]]}}}],["追踪",{"_index":714,"t":{"1141":{"position":[[13,2],[120,2]]},"1419":{"position":[[13,2],[120,2]]}}}],["退出",{"_index":936,"t":{"1275":{"position":[[134,2],[420,2],[519,2],[1118,2],[1174,2]]},"1381":{"position":[[141,2],[402,2],[457,2]]},"1650":{"position":[[134,2],[420,2],[519,2],[1118,2],[1174,2]]},"1819":{"position":[[150,2]]},"1844":{"position":[[211,2]]},"1853":{"position":[[382,2]]},"1937":{"position":[[434,2],[454,2]]},"1938":{"position":[[399,2]]}}}],["适合",{"_index":944,"t":{"1277":{"position":[[87,2]]},"1628":{"position":[[34,2]]},"1652":{"position":[[87,2]]}}}],["适应",{"_index":627,"t":{"1127":{"position":[[51,2]]},"1149":{"position":[[51,2]]},"1405":{"position":[[51,2]]},"1427":{"position":[[51,2]]}}}],["适当",{"_index":1425,"t":{"1817":{"position":[[310,2]]},"1823":{"position":[[88,2],[115,2]]}}}],["适用",{"_index":565,"t":{"1089":{"position":[[158,2],[164,2]]},"1094":{"position":[[183,2],[189,2]]},"1096":{"position":[[0,2]]},"1098":{"position":[[7,2]]},"1335":{"position":[[65,2],[185,2]]},"1338":{"position":[[20,2]]},"1371":{"position":[[10,2]]},"1379":{"position":[[16,2]]},"1383":{"position":[[3,2],[280,2],[410,2]]},"1444":{"position":[[158,2]]},"1677":{"position":[[31,2]]},"1682":{"position":[[458,2]]},"1687":{"position":[[37,2]]},"1695":{"position":[[6,2]]},"1697":{"position":[[2,2]]},"1702":{"position":[[99,2]]},"1736":{"position":[[21,2]]},"1911":{"position":[[8,2],[69,2]]},"1928":{"position":[[8,2],[69,2]]}}}],["逃逸",{"_index":1396,"t":{"1795":{"position":[[78,2],[216,2],[247,2]]}}}],["选",{"_index":760,"t":{"1155":{"position":[[186,1],[342,1]]},"1197":{"position":[[14,1],[78,1]]},"1433":{"position":[[550,1]]},"1495":{"position":[[186,1],[342,1]]},"1519":{"position":[[14,1],[78,1]]},"1777":{"position":[[134,1]]},"1803":{"position":[[401,1]]}}}],["选字",{"_index":1337,"t":{"1770":{"position":[[40,2]]}}}],["选择",{"_index":625,"t":{"1127":{"position":[[40,2]]},"1405":{"position":[[40,2]]},"1619":{"position":[[170,2]]},"1679":{"position":[[84,2]]},"1699":{"position":[[127,2]]}}}],["选择权",{"_index":309,"t":{"989":{"position":[[95,3]]}}}],["选项",{"_index":901,"t":{"1267":{"position":[[39,2]]},"1616":{"position":[[39,2]]}}}],["透支",{"_index":221,"t":{"987":{"position":[[339,2]]}}}],["逐利",{"_index":232,"t":{"987":{"position":[[390,2]]}}}],["逐渐",{"_index":154,"t":{"987":{"position":[[109,2]]}}}],["递增",{"_index":1131,"t":{"1377":{"position":[[153,2],[350,2]]}}}],["递归",{"_index":1333,"t":{"1763":{"position":[[97,2]]},"1772":{"position":[[1760,2],[1865,2],[1959,2]]}}}],["通信",{"_index":483,"t":{"1064":{"position":[[100,2]]},"1066":{"position":[[87,2],[122,2]]},"1077":{"position":[[24,2]]},"1079":{"position":[[32,2],[77,2]]},"1139":{"position":[[68,2]]},"1143":{"position":[[42,2]]},"1231":{"position":[[103,2]]},"1270":{"position":[[25,2]]},"1357":{"position":[[34,2]]},"1383":{"position":[[163,2]]},"1388":{"position":[[100,2]]},"1390":{"position":[[87,2],[122,2]]},"1401":{"position":[[24,2]]},"1403":{"position":[[32,2],[77,2]]},"1417":{"position":[[68,2]]},"1421":{"position":[[42,2]]},"1553":{"position":[[103,2]]},"1645":{"position":[[25,2]]},"1800":{"position":[[55,2]]},"1819":{"position":[[19,2]]},"1821":{"position":[[32,2],[201,2]]},"1823":{"position":[[29,2]]}}}],["通信模型",{"_index":910,"t":{"1270":{"position":[[1151,4]]},"1645":{"position":[[1151,4]]}}}],["通常",{"_index":369,"t":{"991":{"position":[[151,2]]},"1279":{"position":[[337,2]]},"1622":{"position":[[11,2]]},"1654":{"position":[[337,2]]},"1784":{"position":[[1018,2]]},"1795":{"position":[[22,2]]},"1838":{"position":[[72,2]]}}}],["通用",{"_index":971,"t":{"1279":{"position":[[627,2],[816,2],[3104,2]]},"1654":{"position":[[627,2],[816,2],[3104,2]]},"1699":{"position":[[94,2]]},"1702":{"position":[[137,2]]}}}],["通知",{"_index":666,"t":{"1131":{"position":[[225,2],[309,2],[410,2],[460,2],[557,2],[622,2],[980,2],[1105,2],[1747,2]]},"1253":{"position":[[63,2],[76,2]]},"1275":{"position":[[414,2],[508,2],[1172,2]]},"1299":{"position":[[110,2]]},"1371":{"position":[[505,2]]},"1381":{"position":[[447,2]]},"1383":{"position":[[89,2]]},"1409":{"position":[[225,2],[309,2],[410,2],[460,2],[557,2],[622,2],[980,2],[1105,2],[1747,2]]},"1573":{"position":[[110,2]]},"1602":{"position":[[63,2],[76,2]]},"1650":{"position":[[414,2],[508,2],[1172,2]]}}}],["通过",{"_index":414,"t":{"1011":{"position":[[0,2]]},"1061":{"position":[[53,2]]},"1119":{"position":[[37,2],[89,2]]},"1127":{"position":[[28,2]]},"1131":{"position":[[6,2],[144,2]]},"1133":{"position":[[21,2]]},"1135":{"position":[[31,2]]},"1139":{"position":[[57,2]]},"1145":{"position":[[1916,2],[2003,2]]},"1149":{"position":[[22,2]]},"1152":{"position":[[6,2]]},"1182":{"position":[[15,2]]},"1229":{"position":[[137,2]]},"1234":{"position":[[117,2]]},"1236":{"position":[[58,2]]},"1267":{"position":[[7,2],[102,2]]},"1270":{"position":[[1159,2],[1201,2],[1255,2],[1317,2]]},"1275":{"position":[[194,2]]},"1277":{"position":[[282,2]]},"1279":{"position":[[82,2],[393,2]]},"1292":{"position":[[766,2]]},"1306":{"position":[[24,2]]},"1309":{"position":[[205,2],[391,2],[452,2],[490,2]]},"1355":{"position":[[31,2]]},"1359":{"position":[[13,2]]},"1361":{"position":[[350,2]]},"1385":{"position":[[53,2]]},"1405":{"position":[[28,2]]},"1409":{"position":[[6,2],[144,2]]},"1411":{"position":[[21,2]]},"1413":{"position":[[31,2]]},"1417":{"position":[[57,2]]},"1423":{"position":[[1916,2],[2003,2]]},"1427":{"position":[[22,2]]},"1444":{"position":[[203,2]]},"1449":{"position":[[37,2],[89,2]]},"1492":{"position":[[6,2]]},"1504":{"position":[[15,2]]},"1551":{"position":[[137,2]]},"1566":{"position":[[766,2]]},"1580":{"position":[[24,2]]},"1583":{"position":[[117,2]]},"1585":{"position":[[58,2]]},"1616":{"position":[[7,2],[102,2]]},"1619":{"position":[[17,2],[78,2],[124,2]]},"1630":{"position":[[39,2]]},"1645":{"position":[[1159,2],[1201,2],[1255,2],[1317,2]]},"1650":{"position":[[194,2]]},"1652":{"position":[[282,2]]},"1654":{"position":[[82,2],[393,2]]},"1702":{"position":[[249,2]]},"1708":{"position":[[302,2],[345,2]]},"1739":{"position":[[164,2]]},"1746":{"position":[[0,2],[47,2]]},"1772":{"position":[[1738,2],[1893,2]]},"1784":{"position":[[1021,2]]},"1787":{"position":[[38,2]]},"1800":{"position":[[58,2],[89,2]]},"1821":{"position":[[35,2]]},"1823":{"position":[[124,2]]},"1830":{"position":[[45,2]]},"1846":{"position":[[0,2]]},"1853":{"position":[[391,2]]},"1882":{"position":[[3,2]]},"1934":{"position":[[13,2]]},"1937":{"position":[[0,2],[32,2]]},"1938":{"position":[[0,2]]}}}],["通道",{"_index":505,"t":{"1069":{"position":[[221,2]]},"1119":{"position":[[23,2],[41,2],[92,2]]},"1121":{"position":[[138,2]]},"1155":{"position":[[293,2]]},"1273":{"position":[[415,2],[628,2]]},"1279":{"position":[[433,2]]},"1363":{"position":[[31,2]]},"1393":{"position":[[221,2]]},"1449":{"position":[[23,2],[41,2],[92,2]]},"1451":{"position":[[138,2]]},"1495":{"position":[[293,2]]},"1648":{"position":[[415,2],[628,2]]},"1654":{"position":[[433,2]]},"1821":{"position":[[225,2]]}}}],["通配符",{"_index":415,"t":{"1011":{"position":[[2,3]]},"1018":{"position":[[13,3]]}}}],["速度",{"_index":1257,"t":{"1687":{"position":[[8,2]]},"1697":{"position":[[47,2]]}}}],["逻辑",{"_index":263,"t":{"987":{"position":[[529,2]]},"1131":{"position":[[71,2],[592,2],[869,2],[1114,2],[1539,2]]},"1145":{"position":[[1969,2]]},"1231":{"position":[[154,2]]},"1275":{"position":[[116,2]]},"1279":{"position":[[60,2],[236,2],[383,2]]},"1290":{"position":[[130,2],[275,2],[416,2]]},"1409":{"position":[[71,2],[592,2],[869,2],[1114,2],[1539,2]]},"1423":{"position":[[1969,2]]},"1440":{"position":[[229,2]]},"1553":{"position":[[154,2]]},"1564":{"position":[[130,2],[275,2],[416,2]]},"1650":{"position":[[116,2]]},"1654":{"position":[[60,2],[236,2],[383,2]]},"1675":{"position":[[32,2],[164,2]]},"1746":{"position":[[40,2],[84,2]]},"1755":{"position":[[175,2]]}}}],["遇到",{"_index":316,"t":{"989":{"position":[[124,2]]},"1634":{"position":[[2,2]]}}}],["道德",{"_index":268,"t":{"987":{"position":[[549,2]]}}}],["遵循",{"_index":739,"t":{"1149":{"position":[[24,2]]},"1427":{"position":[[24,2]]}}}],["避免",{"_index":590,"t":{"1098":{"position":[[128,2]]},"1137":{"position":[[65,2]]},"1145":{"position":[[1931,2]]},"1152":{"position":[[63,2]]},"1231":{"position":[[144,2],[207,2],[264,2]]},"1270":{"position":[[1269,2]]},"1277":{"position":[[149,2]]},"1306":{"position":[[75,2]]},"1331":{"position":[[981,2]]},"1357":{"position":[[54,2]]},"1359":{"position":[[0,2],[59,2]]},"1363":{"position":[[697,2]]},"1365":{"position":[[32,2]]},"1383":{"position":[[24,2],[181,2]]},"1415":{"position":[[65,2]]},"1423":{"position":[[1931,2]]},"1492":{"position":[[63,2]]},"1553":{"position":[[144,2],[207,2],[264,2]]},"1580":{"position":[[75,2]]},"1645":{"position":[[1269,2]]},"1652":{"position":[[149,2]]},"1719":{"position":[[13,2]]},"1763":{"position":[[93,2]]},"1770":{"position":[[69,2]]},"1772":{"position":[[1758,2],[1863,2],[1956,2]]},"1791":{"position":[[27,2]]},"1817":{"position":[[255,2]]}}}],["邮件",{"_index":667,"t":{"1131":{"position":[[307,2],[408,2],[1253,2],[1354,2]]},"1253":{"position":[[68,2]]},"1290":{"position":[[273,2],[520,2]]},"1292":{"position":[[321,2]]},"1409":{"position":[[307,2],[408,2],[1253,2],[1354,2]]},"1564":{"position":[[273,2],[520,2]]},"1566":{"position":[[321,2]]},"1602":{"position":[[68,2]]}}}],["邮箱",{"_index":1297,"t":{"1728":{"position":[[32,2]]}}}],["部分",{"_index":72,"t":{"983":{"position":[[165,2]]},"1034":{"position":[[9,2],[21,2]]},"1145":{"position":[[2034,2]]},"1423":{"position":[[2034,2]]},"1777":{"position":[[68,2]]}}}],["部署",{"_index":1448,"t":{"1823":{"position":[[192,2]]}}}],["都",{"_index":77,"t":{"983":{"position":[[181,1]]},"991":{"position":[[226,1]]},"1082":{"position":[[28,1]]},"1084":{"position":[[78,1]]},"1094":{"position":[[176,1]]},"1098":{"position":[[62,1]]},"1229":{"position":[[380,1]]},"1244":{"position":[[343,1]]},"1275":{"position":[[48,1]]},"1551":{"position":[[380,1]]},"1593":{"position":[[343,1]]},"1628":{"position":[[33,1]]},"1650":{"position":[[48,1]]},"1823":{"position":[[54,1]]}}}],["配置",{"_index":696,"t":{"1135":{"position":[[24,2]]},"1261":{"position":[[164,2],[264,2]]},"1413":{"position":[[24,2]]},"1610":{"position":[[164,2],[264,2]]},"1784":{"position":[[682,2]]},"1803":{"position":[[97,2],[777,2]]},"1805":{"position":[[15,2]]},"1808":{"position":[[125,2],[889,2]]},"1817":{"position":[[3,2],[306,2]]}}}],["配置文件",{"_index":698,"t":{"1135":{"position":[[38,4]]},"1413":{"position":[[38,4]]}}}],["采用",{"_index":1340,"t":{"1772":{"position":[[1090,2]]}}}],["采集",{"_index":144,"t":{"987":{"position":[[74,2]]}}}],["释放",{"_index":1121,"t":{"1369":{"position":[[483,2]]}}}],["里氏",{"_index":832,"t":{"1229":{"position":[[160,2]]},"1551":{"position":[[160,2]]}}}],["重",{"_index":960,"t":{"1279":{"position":[[148,1]]},"1654":{"position":[[148,1]]}}}],["重写",{"_index":635,"t":{"1127":{"position":[[80,2]]},"1405":{"position":[[80,2]]}}}],["重启",{"_index":796,"t":{"1185":{"position":[[426,2]]},"1197":{"position":[[2211,2]]},"1507":{"position":[[426,2]]},"1519":{"position":[[2211,2]]},"1940":{"position":[[370,2]]}}}],["重命名",{"_index":763,"t":{"1155":{"position":[[619,3]]},"1167":{"position":[[1251,3]]},"1175":{"position":[[426,3]]},"1185":{"position":[[722,3]]},"1217":{"position":[[20,3]]},"1477":{"position":[[1251,3]]},"1485":{"position":[[426,3]]},"1495":{"position":[[619,3]]},"1507":{"position":[[722,3]]},"1539":{"position":[[20,3]]}}}],["重复",{"_index":569,"t":{"1089":{"position":[[199,2]]},"1098":{"position":[[19,2]]},"1231":{"position":[[146,2],[152,2]]},"1553":{"position":[[146,2],[152,2]]}}}],["重建",{"_index":795,"t":{"1185":{"position":[[324,2]]},"1507":{"position":[[324,2]]}}}],["重新",{"_index":1082,"t":{"1349":{"position":[[243,2],[482,2]]},"1351":{"position":[[62,2]]},"1619":{"position":[[195,2]]},"1634":{"position":[[184,2]]}}}],["重新安装",{"_index":1383,"t":{"1787":{"position":[[59,4]]}}}],["重构",{"_index":634,"t":{"1127":{"position":[[77,2]]},"1405":{"position":[[77,2]]}}}],["重点",{"_index":909,"t":{"1270":{"position":[[1147,2]]},"1645":{"position":[[1147,2]]}}}],["重用",{"_index":851,"t":{"1231":{"position":[[24,2]]},"1553":{"position":[[24,2]]}}}],["重要",{"_index":282,"t":{"987":{"position":[[617,2]]},"993":{"position":[[6,2],[16,2]]},"1429":{"position":[[36,2]]},"1444":{"position":[[149,2]]},"1784":{"position":[[343,2],[957,2]]}}}],["重视",{"_index":35,"t":{"983":{"position":[[60,2]]}}}],["链接",{"_index":607,"t":{"1117":{"position":[[26,2]]},"1447":{"position":[[26,2]]},"1859":{"position":[[2,2]]}}}],["链路",{"_index":713,"t":{"1141":{"position":[[11,2]]},"1419":{"position":[[11,2]]}}}],["锁",{"_index":810,"t":{"1217":{"position":[[147,1]]},"1369":{"position":[[485,1]]},"1383":{"position":[[124,1],[183,1]]},"1539":{"position":[[147,1]]}}}],["错误",{"_index":749,"t":{"1152":{"position":[[30,2]]},"1263":{"position":[[669,2]]},"1265":{"position":[[343,2]]},"1316":{"position":[[121,2]]},"1335":{"position":[[125,2]]},"1492":{"position":[[30,2]]},"1612":{"position":[[669,2]]},"1614":{"position":[[343,2]]},"1803":{"position":[[1290,2]]},"1819":{"position":[[138,2]]},"1826":{"position":[[86,2]]}}}],["错误处理",{"_index":1193,"t":{"1444":{"position":[[196,4]]},"1622":{"position":[[7,4]]},"1819":{"position":[[166,4]]}}}],["错误率",{"_index":1428,"t":{"1817":{"position":[[411,3]]}}}],["错误码",{"_index":758,"t":{"1155":{"position":[[143,3]]},"1495":{"position":[[143,3]]}}}],["长",{"_index":893,"t":{"1263":{"position":[[763,1]]},"1612":{"position":[[763,1]]}}}],["长度",{"_index":778,"t":{"1167":{"position":[[258,2]]},"1477":{"position":[[258,2]]},"1728":{"position":[[81,2],[102,2],[111,2]]}}}],["长期",{"_index":637,"t":{"1127":{"position":[[91,2]]},"1152":{"position":[[65,2]]},"1405":{"position":[[91,2]]},"1492":{"position":[[65,2]]}}}],["问题",{"_index":716,"t":{"1141":{"position":[[23,2]]},"1149":{"position":[[69,2]]},"1244":{"position":[[332,2]]},"1290":{"position":[[509,2]]},"1309":{"position":[[173,2],[194,2],[199,2],[473,2],[507,2]]},"1419":{"position":[[23,2]]},"1427":{"position":[[69,2]]},"1433":{"position":[[118,2],[216,2]]},"1444":{"position":[[172,2],[188,2]]},"1564":{"position":[[509,2]]},"1593":{"position":[[332,2]]},"1619":{"position":[[45,2],[72,2]]},"1787":{"position":[[32,2]]},"1795":{"position":[[2,2]]},"1800":{"position":[[151,2]]},"1819":{"position":[[21,2]]},"1830":{"position":[[77,2]]}}}],["间",{"_index":190,"t":{"987":{"position":[[227,1]]},"1064":{"position":[[108,1]]},"1131":{"position":[[5,1]]},"1270":{"position":[[22,1]]},"1388":{"position":[[108,1]]},"1409":{"position":[[5,1]]},"1645":{"position":[[22,1]]},"1821":{"position":[[29,1],[221,1]]}}}],["间通信",{"_index":460,"t":{"1061":{"position":[[58,3]]},"1069":{"position":[[343,3],[1282,3]]},"1105":{"position":[[186,3],[316,3]]},"1121":{"position":[[57,3]]},"1152":{"position":[[2,3]]},"1155":{"position":[[212,3],[595,3],[612,3]]},"1167":{"position":[[1227,3],[1244,3]]},"1385":{"position":[[58,3]]},"1393":{"position":[[343,3],[1282,3]]},"1451":{"position":[[57,3]]},"1462":{"position":[[186,3],[316,3]]},"1477":{"position":[[1227,3],[1244,3]]},"1492":{"position":[[2,3]]},"1495":{"position":[[212,3],[595,3],[612,3]]},"1800":{"position":[[30,3]]},"1821":{"position":[[2,3],[157,3]]}}}],["间隔",{"_index":817,"t":{"1221":{"position":[[55,2]]},"1543":{"position":[[55,2]]}}}],["队列",{"_index":1114,"t":{"1365":{"position":[[2,2]]}}}],["防止",{"_index":583,"t":{"1096":{"position":[[89,2]]},"1275":{"position":[[54,2],[74,2],[1202,2]]},"1277":{"position":[[24,2]]},"1338":{"position":[[30,2]]},"1351":{"position":[[22,2],[67,2]]},"1363":{"position":[[671,2]]},"1369":{"position":[[40,2],[443,2]]},"1383":{"position":[[72,2]]},"1650":{"position":[[54,2],[74,2],[1202,2]]},"1652":{"position":[[24,2]]},"1795":{"position":[[74,2],[231,2]]}}}],["阵营",{"_index":363,"t":{"991":{"position":[[132,2]]}}}],["阶层",{"_index":332,"t":{"991":{"position":[[19,2]]}}}],["阻塞",{"_index":754,"t":{"1152":{"position":[[67,2]]},"1275":{"position":[[1204,2]]},"1277":{"position":[[32,2],[1055,2]]},"1279":{"position":[[4259,2]]},"1361":{"position":[[242,2],[383,2]]},"1363":{"position":[[675,2],[699,2]]},"1367":{"position":[[526,2]]},"1492":{"position":[[67,2]]},"1650":{"position":[[1204,2]]},"1652":{"position":[[32,2],[1055,2]]},"1654":{"position":[[4259,2]]},"1940":{"position":[[169,2]]}}}],["阻止",{"_index":1087,"t":{"1351":{"position":[[90,2]]}}}],["附加",{"_index":401,"t":{"997":{"position":[[33,2]]}}}],["附带",{"_index":615,"t":{"1119":{"position":[[67,2]]},"1449":{"position":[[67,2]]}}}],["降低",{"_index":636,"t":{"1127":{"position":[[89,2]]},"1285":{"position":[[26,2]]},"1405":{"position":[[89,2]]},"1559":{"position":[[26,2]]},"1717":{"position":[[5,2]]},"1819":{"position":[[303,2],[332,2]]}}}],["限制",{"_index":74,"t":{"983":{"position":[[173,2]]},"1363":{"position":[[731,2]]},"1365":{"position":[[40,2]]},"1383":{"position":[[231,2]]},"1431":{"position":[[261,2]]},"1789":{"position":[[21,2]]},"1819":{"position":[[221,2]]}}}],["陷入困境",{"_index":140,"t":{"987":{"position":[[61,4]]}}}],["随之",{"_index":219,"t":{"987":{"position":[[330,2]]}}}],["随之而来",{"_index":151,"t":{"987":{"position":[[99,4]]}}}],["随机",{"_index":765,"t":{"1157":{"position":[[7,2]]},"1497":{"position":[[7,2]]}}}],["隐藏",{"_index":1338,"t":{"1772":{"position":[[1041,2]]}}}],["隔离",{"_index":721,"t":{"1145":{"position":[[1907,2]]},"1267":{"position":[[12,2]]},"1423":{"position":[[1907,2]]},"1616":{"position":[[12,2]]},"1775":{"position":[[85,2]]},"1789":{"position":[[78,2]]},"1793":{"position":[[29,2]]},"1795":{"position":[[64,2]]},"1797":{"position":[[21,2],[39,2],[70,2],[88,2]]}}}],["难以",{"_index":736,"t":{"1147":{"position":[[11,2]]},"1287":{"position":[[2,2],[32,2]]},"1302":{"position":[[33,2]]},"1425":{"position":[[11,2]]},"1561":{"position":[[2,2],[32,2]]},"1576":{"position":[[33,2]]}}}],["难度",{"_index":1287,"t":{"1717":{"position":[[10,2]]}}}],["集体经济",{"_index":136,"t":{"987":{"position":[[41,4]]}}}],["集成",{"_index":1437,"t":{"1821":{"position":[[60,2]]}}}],["零",{"_index":925,"t":{"1273":{"position":[[80,1],[164,1]]},"1648":{"position":[[80,1],[164,1]]}}}],["需",{"_index":890,"t":{"1263":{"position":[[13,1]]},"1612":{"position":[[13,1]]},"1630":{"position":[[383,1]]},"1784":{"position":[[1125,1]]}}}],["需求",{"_index":628,"t":{"1127":{"position":[[56,2]]},"1383":{"position":[[378,2]]},"1405":{"position":[[56,2]]},"1699":{"position":[[125,2]]},"1719":{"position":[[5,2]]},"1795":{"position":[[132,2]]},"1797":{"position":[[101,2]]}}}],["需要",{"_index":575,"t":{"1094":{"position":[[213,2]]},"1131":{"position":[[1108,2]]},"1231":{"position":[[258,2]]},"1244":{"position":[[344,2]]},"1257":{"position":[[205,2]]},"1261":{"position":[[234,2]]},"1263":{"position":[[2,2]]},"1335":{"position":[[188,2]]},"1340":{"position":[[18,2]]},"1349":{"position":[[35,2],[241,2]]},"1353":{"position":[[101,2]]},"1367":{"position":[[15,2]]},"1369":{"position":[[14,2]]},"1409":{"position":[[1108,2]]},"1431":{"position":[[703,2]]},"1553":{"position":[[258,2]]},"1593":{"position":[[344,2]]},"1606":{"position":[[205,2]]},"1610":{"position":[[234,2]]},"1612":{"position":[[2,2]]},"1679":{"position":[[55,2]]},"1682":{"position":[[435,2]]},"1697":{"position":[[52,2]]},"1699":{"position":[[25,2]]},"1708":{"position":[[300,2],[317,2]]},"1739":{"position":[[126,2]]},"1772":{"position":[[1070,2]]},"1784":{"position":[[67,2],[1135,2]]},"1793":{"position":[[2,2]]},"1795":{"position":[[12,2],[150,2]]},"1891":{"position":[[18,2]]},"1896":{"position":[[18,2]]},"1911":{"position":[[72,2]]},"1928":{"position":[[72,2]]}}}],["非",{"_index":89,"t":{"983":{"position":[[223,1]]},"1131":{"position":[[17,1],[48,1],[59,1],[133,1]]},"1133":{"position":[[26,1]]},"1155":{"position":[[139,1]]},"1241":{"position":[[15,1]]},"1267":{"position":[[110,1]]},"1277":{"position":[[1054,1]]},"1279":{"position":[[4258,1]]},"1409":{"position":[[17,1],[48,1],[59,1],[133,1]]},"1411":{"position":[[26,1]]},"1495":{"position":[[139,1]]},"1590":{"position":[[15,1]]},"1616":{"position":[[110,1]]},"1652":{"position":[[1054,1]]},"1654":{"position":[[4258,1]]},"1940":{"position":[[168,1]]}}}],["非常",{"_index":1379,"t":{"1784":{"position":[[955,2]]},"1797":{"position":[[51,2]]}}}],["非线性",{"_index":203,"t":{"987":{"position":[[273,3]]}}}],["面向",{"_index":656,"t":{"1131":{"position":[[121,2]]},"1409":{"position":[[121,2]]}}}],["面向对象编程",{"_index":819,"t":{"1227":{"position":[[0,6]]},"1549":{"position":[[0,6]]}}}],["革命",{"_index":148,"t":{"987":{"position":[[88,2]]}}}],["项",{"_index":1179,"t":{"1442":{"position":[[198,1]]},"1672":{"position":[[161,1]]}}}],["项目",{"_index":769,"t":{"1164":{"position":[[16,2]]},"1304":{"position":[[7,2]]},"1474":{"position":[[16,2]]},"1578":{"position":[[7,2]]},"1736":{"position":[[28,2]]}}}],["预期",{"_index":213,"t":{"987":{"position":[[314,2]]},"1267":{"position":[[75,2]]},"1616":{"position":[[75,2]]}}}],["预设",{"_index":1469,"t":{"1840":{"position":[[42,2]]}}}],["领先",{"_index":233,"t":{"987":{"position":[[396,2]]}}}],["领域",{"_index":9,"t":{"981":{"position":[[19,2]]}}}],["颇为",{"_index":285,"t":{"989":{"position":[[4,2]]}}}],["颇具",{"_index":322,"t":{"989":{"position":[[146,2]]}}}],["频率",{"_index":1157,"t":{"1431":{"position":[[131,2]]}}}],["频繁",{"_index":1163,"t":{"1431":{"position":[[209,2]]}}}],["颜色代码",{"_index":1308,"t":{"1728":{"position":[[397,4]]}}}],["额外",{"_index":1255,"t":{"1682":{"position":[[446,2]]}}}],["风格",{"_index":1140,"t":{"1383":{"position":[[330,2]]},"1632":{"position":[[59,2]]}}}],["飞速发展",{"_index":230,"t":{"987":{"position":[[374,4]]}}}],["驱动",{"_index":274,"t":{"987":{"position":[[578,2]]},"1135":{"position":[[42,2]]},"1413":{"position":[[42,2]]}}}],["驱动程序",{"_index":475,"t":{"1064":{"position":[[53,4]]},"1388":{"position":[[53,4]]},"1784":{"position":[[590,4]]}}}],["验证",{"_index":1008,"t":{"1299":{"position":[[73,2]]},"1345":{"position":[[201,2],[439,2]]},"1351":{"position":[[31,2]]},"1353":{"position":[[70,2]]},"1573":{"position":[[73,2]]},"1722":{"position":[[25,2],[39,2],[50,2]]},"1728":{"position":[[636,2]]},"1730":{"position":[[5,2],[12,2]]},"1732":{"position":[[242,2]]},"1736":{"position":[[16,2],[67,2]]}}}],["高",{"_index":234,"t":{"987":{"position":[[404,1]]},"1064":{"position":[[79,1]]},"1351":{"position":[[85,1]]},"1388":{"position":[[79,1]]},"1444":{"position":[[32,1]]},"1691":{"position":[[69,1]]},"1695":{"position":[[45,1]]},"1697":{"position":[[83,1]]},"1795":{"position":[[128,1],[254,1]]},"1821":{"position":[[192,1]]}}}],["高层",{"_index":845,"t":{"1229":{"position":[[365,2]]},"1551":{"position":[[365,2]]},"1775":{"position":[[73,2]]}}}],["高性能",{"_index":1265,"t":{"1697":{"position":[[112,3]]},"1699":{"position":[[27,3]]},"1760":{"position":[[21,3]]},"1800":{"position":[[104,3]]},"1821":{"position":[[204,3]]},"1823":{"position":[[23,3]]}}}],["高效",{"_index":1135,"t":{"1383":{"position":[[116,2],[223,2]]},"1636":{"position":[[53,2]]},"1821":{"position":[[30,2]]}}}],["高速",{"_index":214,"t":{"987":{"position":[[318,2],[454,2]]},"1821":{"position":[[223,2]]}}}],["高频",{"_index":1143,"t":{"1383":{"position":[[343,2]]}}}],["默认",{"_index":1068,"t":{"1343":{"position":[[434,2]]},"1363":{"position":[[39,2]]},"1431":{"position":[[192,2]]},"1662":{"position":[[11,2]]},"1739":{"position":[[68,2]]},"1777":{"position":[[166,2]]},"1853":{"position":[[349,2]]}}}],["默认值",{"_index":1158,"t":{"1431":{"position":[[135,3]]},"1657":{"position":[[60,3]]},"1728":{"position":[[617,3]]},"1853":{"position":[[208,3],[297,3]]}}}]],"pipeline":["stemmer"]}}]