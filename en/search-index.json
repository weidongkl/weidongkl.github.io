[{"documents":[{"i":833,"t":"","u":"/en/blog/archive","b":["博客"]},{"i":834,"t":"","u":"/en/blog/authors","b":["博客"]},{"i":835,"t":"","u":"/en/blog/authors/weidongkl","b":["博客"]},{"i":842,"t":"一句顶一万句","u":"/en/blog/一句顶一万句","b":["博客"]},{"i":844,"t":"人类简史","u":"/en/blog/人类简史","b":["博客"]},{"i":854,"t":"Makefile 常用方法","u":"/en/docs/note/build/makefile_function","b":["笔记","Build"]},{"i":920,"t":"南明史","u":"/en/blog/南明史","b":["博客"]},{"i":922,"t":"Makefile 中 : 和 :: 的使用指南","u":"/en/docs/note/build/makefile:","b":["笔记","Build"]},{"i":941,"t":"microkernel 设计1","u":"/en/docs/note/design/microkernel/microkernel1","b":["笔记","Design","微内核设计模式"]},{"i":961,"t":"microkernel 设计2","u":"/en/docs/note/design/microkernel/microkernel2","b":["笔记","Design","微内核设计模式"]},{"i":977,"t":"microkernel 设计3","u":"/en/docs/note/design/microkernel/microkernel3","b":["笔记","Design","微内核设计模式"]},{"i":988,"t":"microkernel 设计5","u":"/en/docs/note/design/microkernel/microkernel5","b":["笔记","Design","微内核设计模式"]},{"i":996,"t":"Future-Proof 机制","u":"/en/docs/note/design/future_proof","b":["笔记","Design"]},{"i":1020,"t":"microkernel 设计4","u":"/en/docs/note/design/microkernel/microkernel4","b":["笔记","Design","微内核设计模式"]},{"i":1032,"t":"microkernel 设计6","u":"/en/docs/note/design/microkernel/microkernel6","b":["笔记","Design","微内核设计模式"]},{"i":1042,"t":"microkernel 设计8","u":"/en/docs/note/design/microkernel/microkernel8","b":["笔记","Design","微内核设计模式"]},{"i":1054,"t":"microkernel 设计7","u":"/en/docs/note/design/microkernel/microkernel7","b":["笔记","Design","微内核设计模式"]},{"i":1066,"t":"git 错误","u":"/en/docs/note/git/git_err","b":["笔记","Git"]},{"i":1069,"t":"microkernel 设计9","u":"/en/docs/note/design/microkernel/microkernel9","b":["笔记","Design","微内核设计模式"]},{"i":1091,"t":"Golang bcrypt","u":"/en/docs/note/golang/bcrypt","b":["笔记","Golang"]},{"i":1109,"t":"Golang os/exec 用法","u":"/en/docs/note/golang/cmd","b":["笔记","Golang"]},{"i":1135,"t":"Golang 并发编程","u":"/en/docs/note/golang/concurrency","b":["笔记","Golang"]},{"i":1165,"t":"Golang runtime/debug 用法","u":"/en/docs/note/golang/debug","b":["笔记","Golang"]},{"i":1182,"t":"microkernel 设计2","u":"/en/docs/note/golang/design/microkernel/microkernel2","b":["笔记","Golang","Design","微内核设计模式"]},{"i":1198,"t":"Golang 多goroutine交互模型","u":"/en/docs/note/design/multi_goroutine","b":["笔记","Design"]},{"i":1210,"t":"microkernel 设计3","u":"/en/docs/note/golang/design/microkernel/microkernel3","b":["笔记","Golang","Design","微内核设计模式"]},{"i":1221,"t":"microkernel 设计1","u":"/en/docs/note/golang/design/microkernel/microkernel1","b":["笔记","Golang","Design","微内核设计模式"]},{"i":1241,"t":"microkernel 设计5","u":"/en/docs/note/golang/design/microkernel/microkernel5","b":["笔记","Golang","Design","微内核设计模式"]},{"i":1249,"t":"microkernel 设计6","u":"/en/docs/note/golang/design/microkernel/microkernel6","b":["笔记","Golang","Design","微内核设计模式"]},{"i":1259,"t":"Future-Proof 机制","u":"/en/docs/note/golang/design/future_proof","b":["笔记","Golang","Design"]},{"i":1283,"t":"microkernel 设计4","u":"/en/docs/note/golang/design/microkernel/microkernel4","b":["笔记","Golang","Design","微内核设计模式"]},{"i":1295,"t":"microkernel 设计9","u":"/en/docs/note/golang/design/microkernel/microkernel9","b":["笔记","Golang","Design","微内核设计模式"]},{"i":1317,"t":"microkernel 设计8","u":"/en/docs/note/golang/design/microkernel/microkernel8","b":["笔记","Golang","Design","微内核设计模式"]},{"i":1329,"t":"microkernel 设计7","u":"/en/docs/note/golang/design/microkernel/microkernel7","b":["笔记","Golang","Design","微内核设计模式"]},{"i":1341,"t":"Golang JSON 解析","u":"/en/docs/note/golang/json","b":["笔记","Golang"]},{"i":1361,"t":"Golang 随笔","u":"/en/docs/note/golang/jotting","b":["笔记","Golang"]},{"i":1384,"t":"goland 问题处理记录","u":"/en/docs/note/golang/goland","b":["笔记","Golang"]},{"i":1387,"t":"Golang Reflect","u":"/en/docs/note/golang/reflect","b":["笔记","Golang"]},{"i":1407,"t":"kingpin 用法","u":"/en/docs/note/golang/kingpin","b":["笔记","Golang"]},{"i":1432,"t":"Golang 多goroutine交互模型","u":"/en/docs/note/golang/design/multi_goroutine","b":["笔记","Golang","Design"]},{"i":1444,"t":"Golang Validator","u":"/en/docs/note/golang/validator","b":["笔记","Golang"]},{"i":1461,"t":"Golang 序列化/反序列化","u":"/en/docs/note/golang/serialization","b":["笔记","Golang"]},{"i":1497,"t":"chroot 用法","u":"/en/docs/note/os/chroot","b":["笔记","OS"]},{"i":1522,"t":"Golang Unix Socket 服务","u":"/en/docs/note/golang/web_server_unix","b":["笔记","Golang"]},{"i":1548,"t":"GDB 调试工具","u":"/en/docs/note/os/debug/gdb","b":["笔记","OS","调试工具"]},{"i":1611,"t":"Golang sys/unix syscall","u":"/en/docs/note/golang/syscall","b":["笔记","Golang"]},{"i":1655,"t":"僵尸进程","u":"/en/docs/note/os/zombie","b":["笔记","OS"]}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/833",[]],["t/834",[]],["t/835",[]],["t/842",[0,3.372,1,3.372,2,3.372]],["t/844",[3,3.928,4,3.928]],["t/854",[5,0.165,6,3.372,7,3.372]],["t/920",[8,3.928,9,3.928]],["t/922",[5,0.165,10,3.372,11,3.372]],["t/941",[5,0.229,12,0.928]],["t/961",[5,0.229,12,0.928]],["t/977",[5,0.229,12,0.928]],["t/988",[5,0.229,12,0.928]],["t/996",[5,0.229,13,2.875]],["t/1020",[5,0.229,12,0.928]],["t/1032",[5,0.229,12,0.928]],["t/1042",[5,0.229,12,0.928]],["t/1054",[5,0.229,12,0.928]],["t/1066",[5,0.193,14,3.928]],["t/1069",[5,0.229,12,0.928]],["t/1091",[5,0.254]],["t/1109",[5,0.245,15,2.017]],["t/1135",[5,0.165,16,3.372,17,3.372]],["t/1165",[5,0.245,15,2.017]],["t/1182",[5,0.229,12,0.928]],["t/1198",[5,0.192,18,2.24,19,2.24,20,2.24]],["t/1210",[5,0.229,12,0.928]],["t/1221",[5,0.229,12,0.928]],["t/1241",[5,0.229,12,0.928]],["t/1249",[5,0.229,12,0.928]],["t/1259",[5,0.229,13,2.875]],["t/1283",[5,0.229,12,0.928]],["t/1295",[5,0.229,12,0.928]],["t/1317",[5,0.229,12,0.928]],["t/1329",[5,0.229,12,0.928]],["t/1341",[5,0.229,21,3.372]],["t/1361",[5,0.193,22,3.928]],["t/1384",[5,0.145,23,2.953,24,2.953,25,2.953]],["t/1387",[5,0.254]],["t/1407",[5,0.193,15,2.683]],["t/1432",[5,0.192,18,2.24,19,2.24,20,2.24]],["t/1444",[5,0.254]],["t/1461",[5,0.145,26,4.257,27,2.953]],["t/1497",[5,0.193,15,2.683]],["t/1522",[5,0.245,28,2.953]],["t/1548",[5,0.165,29,3.372,30,3.372]],["t/1611",[5,0.268]],["t/1655",[31,3.928,32,3.928]]],"invertedIndex":[["",{"_index":5,"t":{"854":{"position":[[0,8]]},"922":{"position":[[0,8]]},"941":{"position":[[0,11],[14,1]]},"961":{"position":[[0,11],[14,1]]},"977":{"position":[[0,11],[14,1]]},"988":{"position":[[0,11],[14,1]]},"996":{"position":[[0,6],[7,5]]},"1020":{"position":[[0,11],[14,1]]},"1032":{"position":[[0,11],[14,1]]},"1042":{"position":[[0,11],[14,1]]},"1054":{"position":[[0,11],[14,1]]},"1066":{"position":[[0,3]]},"1069":{"position":[[0,11],[14,1]]},"1091":{"position":[[0,6],[7,6]]},"1109":{"position":[[0,6],[7,2],[10,4]]},"1135":{"position":[[0,6]]},"1165":{"position":[[0,6],[7,7],[15,5]]},"1182":{"position":[[0,11],[14,1]]},"1198":{"position":[[0,6],[8,9]]},"1210":{"position":[[0,11],[14,1]]},"1221":{"position":[[0,11],[14,1]]},"1241":{"position":[[0,11],[14,1]]},"1249":{"position":[[0,11],[14,1]]},"1259":{"position":[[0,6],[7,5]]},"1283":{"position":[[0,11],[14,1]]},"1295":{"position":[[0,11],[14,1]]},"1317":{"position":[[0,11],[14,1]]},"1329":{"position":[[0,11],[14,1]]},"1341":{"position":[[0,6],[7,4]]},"1361":{"position":[[0,6]]},"1384":{"position":[[0,6]]},"1387":{"position":[[0,6],[7,7]]},"1407":{"position":[[0,7]]},"1432":{"position":[[0,6],[8,9]]},"1444":{"position":[[0,6],[7,9]]},"1461":{"position":[[0,6]]},"1497":{"position":[[0,6]]},"1522":{"position":[[0,6],[7,4],[12,6]]},"1548":{"position":[[0,3]]},"1611":{"position":[[0,6],[7,3],[11,4],[16,7]]}}}],["一万句",{"_index":2,"t":{"842":{"position":[[3,3]]}}}],["一句",{"_index":0,"t":{"842":{"position":[[0,2]]}}}],["中",{"_index":10,"t":{"922":{"position":[[9,1]]}}}],["交互",{"_index":19,"t":{"1198":{"position":[[17,2]]},"1432":{"position":[[17,2]]}}}],["人类",{"_index":3,"t":{"844":{"position":[[0,2]]}}}],["使用指南",{"_index":11,"t":{"922":{"position":[[19,4]]}}}],["僵尸",{"_index":31,"t":{"1655":{"position":[[0,2]]}}}],["南",{"_index":8,"t":{"920":{"position":[[0,1]]}}}],["反",{"_index":27,"t":{"1461":{"position":[[11,1]]}}}],["处理",{"_index":24,"t":{"1384":{"position":[[9,2]]}}}],["多",{"_index":18,"t":{"1198":{"position":[[7,1]]},"1432":{"position":[[7,1]]}}}],["工具",{"_index":30,"t":{"1548":{"position":[[6,2]]}}}],["常用",{"_index":6,"t":{"854":{"position":[[9,2]]}}}],["并发",{"_index":16,"t":{"1135":{"position":[[7,2]]}}}],["序列化",{"_index":26,"t":{"1461":{"position":[[7,3],[12,3]]}}}],["方法",{"_index":7,"t":{"854":{"position":[[11,2]]}}}],["明史",{"_index":9,"t":{"920":{"position":[[1,2]]}}}],["服务",{"_index":28,"t":{"1522":{"position":[[19,2]]}}}],["机制",{"_index":13,"t":{"996":{"position":[[13,2]]},"1259":{"position":[[13,2]]}}}],["模型",{"_index":20,"t":{"1198":{"position":[[19,2]]},"1432":{"position":[[19,2]]}}}],["用法",{"_index":15,"t":{"1109":{"position":[[15,2]]},"1165":{"position":[[21,2]]},"1407":{"position":[[8,2]]},"1497":{"position":[[7,2]]}}}],["简史",{"_index":4,"t":{"844":{"position":[[2,2]]}}}],["编程",{"_index":17,"t":{"1135":{"position":[[9,2]]}}}],["解析",{"_index":21,"t":{"1341":{"position":[[12,2]]}}}],["记录",{"_index":25,"t":{"1384":{"position":[[11,2]]}}}],["设计",{"_index":12,"t":{"941":{"position":[[12,2]]},"961":{"position":[[12,2]]},"977":{"position":[[12,2]]},"988":{"position":[[12,2]]},"1020":{"position":[[12,2]]},"1032":{"position":[[12,2]]},"1042":{"position":[[12,2]]},"1054":{"position":[[12,2]]},"1069":{"position":[[12,2]]},"1182":{"position":[[12,2]]},"1210":{"position":[[12,2]]},"1221":{"position":[[12,2]]},"1241":{"position":[[12,2]]},"1249":{"position":[[12,2]]},"1283":{"position":[[12,2]]},"1295":{"position":[[12,2]]},"1317":{"position":[[12,2]]},"1329":{"position":[[12,2]]}}}],["调试",{"_index":29,"t":{"1548":{"position":[[4,2]]}}}],["进程",{"_index":32,"t":{"1655":{"position":[[2,2]]}}}],["错误",{"_index":14,"t":{"1066":{"position":[[4,2]]}}}],["问题",{"_index":23,"t":{"1384":{"position":[[7,2]]}}}],["随笔",{"_index":22,"t":{"1361":{"position":[[7,2]]}}}],["顶",{"_index":1,"t":{"842":{"position":[[2,1]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":836,"t":"人类简史","u":"/en/blog/authors/weidongkl","h":"","p":835},{"i":838,"t":"南明史","u":"/en/blog/authors/weidongkl","h":"","p":835},{"i":840,"t":"一句顶一万句","u":"/en/blog/authors/weidongkl","h":"","p":835},{"i":846,"t":"司法","u":"/en/blog/人类简史","h":"#司法","p":844},{"i":848,"t":"文化","u":"/en/blog/人类简史","h":"#文化","p":844},{"i":850,"t":"经济","u":"/en/blog/人类简史","h":"#经济","p":844},{"i":852,"t":"家庭","u":"/en/blog/人类简史","h":"#家庭","p":844},{"i":855,"t":"info/warning","u":"/en/docs/note/build/makefile_function","h":"#infowarning","p":854},{"i":856,"t":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能","p":854},{"i":858,"t":"调试：","u":"/en/docs/note/build/makefile_function","h":"#调试","p":854},{"i":860,"t":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例","p":854},{"i":862,"t":"subst","u":"/en/docs/note/build/makefile_function","h":"#subst","p":854},{"i":863,"t":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-1","p":854},{"i":865,"t":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法","p":854},{"i":867,"t":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-1","p":854},{"i":869,"t":"wildcard","u":"/en/docs/note/build/makefile_function","h":"#wildcard","p":854},{"i":870,"t":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-2","p":854},{"i":872,"t":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-1","p":854},{"i":874,"t":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-2","p":854},{"i":876,"t":"patsubst","u":"/en/docs/note/build/makefile_function","h":"#patsubst","p":854},{"i":877,"t":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-3","p":854},{"i":879,"t":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-2","p":854},{"i":881,"t":"区别：","u":"/en/docs/note/build/makefile_function","h":"#区别","p":854},{"i":883,"t":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-3","p":854},{"i":885,"t":"addsuffix","u":"/en/docs/note/build/makefile_function","h":"#addsuffix","p":854},{"i":886,"t":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-4","p":854},{"i":888,"t":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-3","p":854},{"i":890,"t":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-4","p":854},{"i":892,"t":"basename","u":"/en/docs/note/build/makefile_function","h":"#basename","p":854},{"i":893,"t":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-5","p":854},{"i":895,"t":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-4","p":854},{"i":897,"t":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-5","p":854},{"i":899,"t":"firstword","u":"/en/docs/note/build/makefile_function","h":"#firstword","p":854},{"i":900,"t":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-6","p":854},{"i":902,"t":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-5","p":854},{"i":904,"t":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-6","p":854},{"i":906,"t":"strip","u":"/en/docs/note/build/makefile_function","h":"#strip","p":854},{"i":907,"t":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-7","p":854},{"i":909,"t":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-6","p":854},{"i":911,"t":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-7","p":854},{"i":913,"t":"word","u":"/en/docs/note/build/makefile_function","h":"#word","p":854},{"i":914,"t":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-8","p":854},{"i":916,"t":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-7","p":854},{"i":918,"t":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-8","p":854},{"i":923,"t":"1. 概述","u":"/en/docs/note/build/makefile:","h":"#1-概述","p":922},{"i":925,"t":"2. :（单冒号）与 ::（双冒号）的区别","u":"/en/docs/note/build/makefile:","h":"#2-单冒号与-双冒号的区别","p":922},{"i":927,"t":"3. :（单冒号）的用法","u":"/en/docs/note/build/makefile:","h":"#3-单冒号的用法","p":922},{"i":928,"t":"3.1 基本示例","u":"/en/docs/note/build/makefile:","h":"#31-基本示例","p":922},{"i":930,"t":"3.2 依赖的覆盖","u":"/en/docs/note/build/makefile:","h":"#32-依赖的覆盖","p":922},{"i":932,"t":"4. ::（双冒号）的用法","u":"/en/docs/note/build/makefile:","h":"#4-双冒号的用法","p":922},{"i":933,"t":"4.1 基本示例","u":"/en/docs/note/build/makefile:","h":"#41-基本示例","p":922},{"i":935,"t":"4.2 组合依赖","u":"/en/docs/note/build/makefile:","h":"#42-组合依赖","p":922},{"i":937,"t":"5. : vs :: 适用场景总结","u":"/en/docs/note/build/makefile:","h":"#5--vs--适用场景总结","p":922},{"i":939,"t":"6. 结论","u":"/en/docs/note/build/makefile:","h":"#6-结论","p":922},{"i":943,"t":"1. 微内核核心设计","u":"/en/docs/note/design/microkernel/microkernel1","h":"#1-微内核核心设计","p":941},{"i":944,"t":"1.1 特点","u":"/en/docs/note/design/microkernel/microkernel1","h":"#11-特点","p":941},{"i":946,"t":"1.2 核心组件","u":"/en/docs/note/design/microkernel/microkernel1","h":"#12-核心组件","p":941},{"i":948,"t":"2. Go 实现 microkernel","u":"/en/docs/note/design/microkernel/microkernel1","h":"#2-go-实现-microkernel","p":941},{"i":949,"t":"2.1 定义 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel1","h":"#21-定义-kernel核心","p":941},{"i":951,"t":"2.2 实现示例服务（LogService）","u":"/en/docs/note/design/microkernel/microkernel1","h":"#22-实现示例服务logservice","p":941},{"i":953,"t":"2.3 主程序（运行微内核 + 服务）","u":"/en/docs/note/design/microkernel/microkernel1","h":"#23-主程序运行微内核--服务","p":941},{"i":955,"t":"2.4 运行结果","u":"/en/docs/note/design/microkernel/microkernel1","h":"#24-运行结果","p":941},{"i":957,"t":"3. 扩展方向","u":"/en/docs/note/design/microkernel/microkernel1","h":"#3-扩展方向","p":941},{"i":959,"t":"4. 总结","u":"/en/docs/note/design/microkernel/microkernel1","h":"#4-总结","p":941},{"i":963,"t":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel2","h":"#1-目标","p":961},{"i":965,"t":"2. 代码改动","u":"/en/docs/note/design/microkernel/microkernel2","h":"#2-代码改动","p":961},{"i":966,"t":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel2","h":"#21-kernel核心","p":961},{"i":968,"t":"2.2 LogService","u":"/en/docs/note/design/microkernel/microkernel2","h":"#22-logservice","p":961},{"i":970,"t":"2.3 主程序（运行微内核 + 服务）","u":"/en/docs/note/design/microkernel/microkernel2","h":"#23-主程序运行微内核--服务","p":961},{"i":972,"t":"2.4 运行结果","u":"/en/docs/note/design/microkernel/microkernel2","h":"#24-运行结果","p":961},{"i":974,"t":"2.5 优化函数和变量命名","u":"/en/docs/note/design/microkernel/microkernel2","h":"#25-优化函数和变量命名","p":961},{"i":976,"t":"","u":"/en/docs/note/design/microkernel/microkernel2","h":"","p":961},{"i":978,"t":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel3","h":"#1-目标","p":977},{"i":980,"t":"2. 代码改动","u":"/en/docs/note/design/microkernel/microkernel3","h":"#2-代码改动","p":977},{"i":982,"t":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel3","h":"#21-kernel核心","p":977},{"i":984,"t":"2.2 LogService","u":"/en/docs/note/design/microkernel/microkernel3","h":"#22-logservice","p":977},{"i":986,"t":"2.3 运行结果","u":"/en/docs/note/design/microkernel/microkernel3","h":"#23-运行结果","p":977},{"i":989,"t":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel5","h":"#1-目标","p":988},{"i":991,"t":"2. 代码改动","u":"/en/docs/note/design/microkernel/microkernel5","h":"#2-代码改动","p":988},{"i":992,"t":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel5","h":"#21-kernel核心","p":988},{"i":994,"t":"2.2 运行结果","u":"/en/docs/note/design/microkernel/microkernel5","h":"#22-运行结果","p":988},{"i":998,"t":"1. Future-Proof 机制的关键原则","u":"/en/docs/note/design/future_proof","h":"","p":996},{"i":1000,"t":"1.1.  松耦合（Loose Coupling）","u":"/en/docs/note/design/future_proof","h":"#11--松耦合loose-coupling","p":996},{"i":1002,"t":"1.2. 可扩展性（Extensibility）","u":"/en/docs/note/design/future_proof","h":"#12-可扩展性extensibility","p":996},{"i":1004,"t":"1.3. 配置化而非硬编码","u":"/en/docs/note/design/future_proof","h":"#13-配置化而非硬编码","p":996},{"i":1006,"t":"1.4. 协议与数据格式的兼容性","u":"/en/docs/note/design/future_proof","h":"#14-协议与数据格式的兼容性","p":996},{"i":1008,"t":"1.5. 并发模型的可适应性","u":"/en/docs/note/design/future_proof","h":"#15-并发模型的可适应性","p":996},{"i":1010,"t":"1.6. 可观测性（Observability）","u":"/en/docs/note/design/future_proof","h":"#16-可观测性observability","p":996},{"i":1012,"t":"1.7. 防御性编程","u":"/en/docs/note/design/future_proof","h":"#17-防御性编程","p":996},{"i":1014,"t":"2. 聚合器示例","u":"/en/docs/note/design/future_proof","h":"#2-聚合器示例","p":996},{"i":1016,"t":"3. 反模式：非 Future-Proof 的设计","u":"/en/docs/note/design/future_proof","h":"#3-反模式非-future-proof-的设计","p":996},{"i":1018,"t":"4. 总结","u":"/en/docs/note/design/future_proof","h":"#4-总结","p":996},{"i":1021,"t":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel4","h":"#1-目标","p":1020},{"i":1023,"t":"2. 代码改动","u":"/en/docs/note/design/microkernel/microkernel4","h":"#2-代码改动","p":1020},{"i":1024,"t":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel4","h":"#21-kernel核心","p":1020},{"i":1026,"t":"2.2 LogService","u":"/en/docs/note/design/microkernel/microkernel4","h":"#22-logservice","p":1020},{"i":1028,"t":"2.3 增加另一个类似的EchoService","u":"/en/docs/note/design/microkernel/microkernel4","h":"#23-增加另一个类似的echoservice","p":1020},{"i":1030,"t":"2.4 运行结果","u":"/en/docs/note/design/microkernel/microkernel4","h":"#24-运行结果","p":1020},{"i":1033,"t":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel6","h":"#1-目标","p":1032},{"i":1035,"t":"2. 代码改动","u":"/en/docs/note/design/microkernel/microkernel6","h":"#2-代码改动","p":1032},{"i":1036,"t":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel6","h":"#21-kernel核心","p":1032},{"i":1038,"t":"2.2 服务","u":"/en/docs/note/design/microkernel/microkernel6","h":"#22-服务","p":1032},{"i":1040,"t":"2.3 运行结果","u":"/en/docs/note/design/microkernel/microkernel6","h":"#23-运行结果","p":1032},{"i":1043,"t":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel8","h":"#1-目标","p":1042},{"i":1045,"t":"2. 代码改动","u":"/en/docs/note/design/microkernel/microkernel8","h":"#2-代码改动","p":1042},{"i":1046,"t":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel8","h":"#21-kernel核心","p":1042},{"i":1048,"t":"2.2 echo服务","u":"/en/docs/note/design/microkernel/microkernel8","h":"#22-echo服务","p":1042},{"i":1050,"t":"2.3 main","u":"/en/docs/note/design/microkernel/microkernel8","h":"#23-main","p":1042},{"i":1052,"t":"2.4 运行结果","u":"/en/docs/note/design/microkernel/microkernel8","h":"#24-运行结果","p":1042},{"i":1055,"t":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel7","h":"#1-目标","p":1054},{"i":1057,"t":"2. 代码改动","u":"/en/docs/note/design/microkernel/microkernel7","h":"#2-代码改动","p":1054},{"i":1058,"t":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel7","h":"#21-kernel核心","p":1054},{"i":1060,"t":"2.2 日志服务","u":"/en/docs/note/design/microkernel/microkernel7","h":"#22-日志服务","p":1054},{"i":1062,"t":"2.3 main","u":"/en/docs/note/design/microkernel/microkernel7","h":"#23-main","p":1054},{"i":1064,"t":"2.4 运行结果","u":"/en/docs/note/design/microkernel/microkernel7","h":"#24-运行结果","p":1054},{"i":1067,"t":"1. tls 连接错误","u":"/en/docs/note/git/git_err","h":"#1-tls-连接错误","p":1066},{"i":1071,"t":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel9","h":"#1-目标","p":1069},{"i":1073,"t":"2. 状态存储设计","u":"/en/docs/note/design/microkernel/microkernel9","h":"#2-状态存储设计","p":1069},{"i":1074,"t":"2.1 存储文件设计","u":"/en/docs/note/design/microkernel/microkernel9","h":"#21-存储文件设计","p":1069},{"i":1076,"t":"2.2 状态管理模块：StateStore","u":"/en/docs/note/design/microkernel/microkernel9","h":"#22-状态管理模块statestore","p":1069},{"i":1078,"t":"3. 内核集成","u":"/en/docs/note/design/microkernel/microkernel9","h":"#3-内核集成","p":1069},{"i":1079,"t":"3.1 kernel 初始化集成StateStore","u":"/en/docs/note/design/microkernel/microkernel9","h":"#31-kernel-初始化集成statestore","p":1069},{"i":1081,"t":"3.2 注册服务时尝试自动加载状态","u":"/en/docs/note/design/microkernel/microkernel9","h":"#32-注册服务时尝试自动加载状态","p":1069},{"i":1083,"t":"3.3 停止服务时，保存状态","u":"/en/docs/note/design/microkernel/microkernel9","h":"#33-停止服务时保存状态","p":1069},{"i":1085,"t":"3.4 定时持久化状态","u":"/en/docs/note/design/microkernel/microkernel9","h":"#34-定时持久化状态","p":1069},{"i":1087,"t":"4. main","u":"/en/docs/note/design/microkernel/microkernel9","h":"#4-main","p":1069},{"i":1089,"t":"4.1 运行结果","u":"/en/docs/note/design/microkernel/microkernel9","h":"#41-运行结果","p":1069},{"i":1092,"t":"1. 概述","u":"/en/docs/note/golang/bcrypt","h":"#1-概述","p":1091},{"i":1094,"t":"2. 安装","u":"/en/docs/note/golang/bcrypt","h":"#2-安装","p":1091},{"i":1096,"t":"3. 基本用法","u":"/en/docs/note/golang/bcrypt","h":"#3-基本用法","p":1091},{"i":1097,"t":"3.1 生成哈希密码","u":"/en/docs/note/golang/bcrypt","h":"#31-生成哈希密码","p":1091},{"i":1099,"t":"3.2 校验密码","u":"/en/docs/note/golang/bcrypt","h":"#32-校验密码","p":1091},{"i":1101,"t":"3.3 修改密码","u":"/en/docs/note/golang/bcrypt","h":"#33-修改密码","p":1091},{"i":1103,"t":"3.4 确定哈希是否需要更新","u":"/en/docs/note/golang/bcrypt","h":"#34-确定哈希是否需要更新","p":1091},{"i":1105,"t":"4. 适用场景","u":"/en/docs/note/golang/bcrypt","h":"#4-适用场景","p":1091},{"i":1107,"t":"5. 总结","u":"/en/docs/note/golang/bcrypt","h":"#5-总结","p":1091},{"i":1110,"t":"1. os/exec 包简介","u":"/en/docs/note/golang/cmd","h":"#1-osexec-包简介","p":1109},{"i":1112,"t":"2. exec.Command 基本用法","u":"/en/docs/note/golang/cmd","h":"#2-execcommand-基本用法","p":1109},{"i":1114,"t":"2.1 获取stdout和stderr","u":"/en/docs/note/golang/cmd","h":"#21-获取stdout和stderr","p":1109},{"i":1116,"t":"2.2 只获取stdout","u":"/en/docs/note/golang/cmd","h":"#22-只获取stdout","p":1109},{"i":1118,"t":"3. 高级用法","u":"/en/docs/note/golang/cmd","h":"#3-高级用法","p":1109},{"i":1119,"t":"3.1 使用cmd.Stdout","u":"/en/docs/note/golang/cmd","h":"#31-使用cmdstdout","p":1109},{"i":1121,"t":"3.2 使用 StdoutPipe","u":"/en/docs/note/golang/cmd","h":"#32-使用-stdoutpipe","p":1109},{"i":1123,"t":"3.3 传递输入 (stdin)","u":"/en/docs/note/golang/cmd","h":"#33-传递输入-stdin","p":1109},{"i":1125,"t":"3.4 设置环境变量","u":"/en/docs/note/golang/cmd","h":"#34-设置环境变量","p":1109},{"i":1127,"t":"3.5 运行带超时的命令","u":"/en/docs/note/golang/cmd","h":"#35-运行带超时的命令","p":1109},{"i":1129,"t":"3.6 增加错误判断","u":"/en/docs/note/golang/cmd","h":"#36-增加错误判断","p":1109},{"i":1131,"t":"3.7 使用管道连接多个命令","u":"/en/docs/note/golang/cmd","h":"#37-使用管道连接多个命令","p":1109},{"i":1133,"t":"4. 结论","u":"/en/docs/note/golang/cmd","h":"#4-结论","p":1109},{"i":1137,"t":"1. Channel（推荐方式）","u":"/en/docs/note/golang/concurrency","h":"#1-channel推荐方式","p":1135},{"i":1139,"t":"1.1 Channel 的特点","u":"/en/docs/note/golang/concurrency","h":"#11-channel-的特点","p":1135},{"i":1141,"t":"1.2 基础示例：","u":"/en/docs/note/golang/concurrency","h":"#12-基础示例","p":1135},{"i":1143,"t":"1.3 select 结合 channel 用法","u":"/en/docs/note/golang/concurrency","h":"#13-select-结合-channel-用法","p":1135},{"i":1145,"t":"1.4 Channel 的适用场景","u":"/en/docs/note/golang/concurrency","h":"#14-channel-的适用场景","p":1135},{"i":1147,"t":"2. sync.WaitGroup`","u":"/en/docs/note/golang/concurrency","h":"#2-syncwaitgroup","p":1135},{"i":1149,"t":"3.  sync.Mutex","u":"/en/docs/note/golang/concurrency","h":"#3--syncmutex","p":1135},{"i":1151,"t":"4.  sync.Cond 进行事件通知","u":"/en/docs/note/golang/concurrency","h":"#4--synccond-进行事件通知","p":1135},{"i":1153,"t":"5.  sync.Once","u":"/en/docs/note/golang/concurrency","h":"#5--synconce","p":1135},{"i":1155,"t":"6.  atomic","u":"/en/docs/note/golang/concurrency","h":"#6--atomic","p":1135},{"i":1157,"t":"示例：","u":"/en/docs/note/golang/concurrency","h":"#示例","p":1135},{"i":1159,"t":"7.  context","u":"/en/docs/note/golang/concurrency","h":"#7--context","p":1135},{"i":1161,"t":"示例：","u":"/en/docs/note/golang/concurrency","h":"#示例-1","p":1135},{"i":1163,"t":"总结","u":"/en/docs/note/golang/concurrency","h":"#总结","p":1135},{"i":1167,"t":"1. 内存和垃圾回收相关操作","u":"/en/docs/note/golang/debug","h":"#1-内存和垃圾回收相关操作","p":1165},{"i":1169,"t":"2. 堆栈信息操作","u":"/en/docs/note/golang/debug","h":"#2-堆栈信息操作","p":1165},{"i":1171,"t":"3. 构建信息读取","u":"/en/docs/note/golang/debug","h":"#3-构建信息读取","p":1165},{"i":1173,"t":"4. 实际应用示例","u":"/en/docs/note/golang/debug","h":"#4-实际应用示例","p":1165},{"i":1174,"t":"4.1. 内存监控工具","u":"/en/docs/note/golang/debug","h":"#41-内存监控工具","p":1165},{"i":1176,"t":"4.2. 增强的panic处理","u":"/en/docs/note/golang/debug","h":"#42-增强的panic处理","p":1165},{"i":1178,"t":"4.3. 构建信息展示","u":"/en/docs/note/golang/debug","h":"#43-构建信息展示","p":1165},{"i":1180,"t":"5. 注意事项","u":"/en/docs/note/golang/debug","h":"#5-注意事项","p":1165},{"i":1184,"t":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#1-目标","p":1182},{"i":1186,"t":"2. 代码改动","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#2-代码改动","p":1182},{"i":1187,"t":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#21-kernel核心","p":1182},{"i":1189,"t":"2.2 LogService","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#22-logservice","p":1182},{"i":1191,"t":"2.3 主程序（运行微内核 + 服务）","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#23-主程序运行微内核--服务","p":1182},{"i":1193,"t":"2.4 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#24-运行结果","p":1182},{"i":1195,"t":"2.5 优化函数和变量命名","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#25-优化函数和变量命名","p":1182},{"i":1197,"t":"","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"","p":1182},{"i":1199,"t":"1. channel 交互","u":"/en/docs/note/design/multi_goroutine","h":"#1-channel-交互","p":1198},{"i":1201,"t":"2.  增加 channel 状态判断","u":"/en/docs/note/design/multi_goroutine","h":"#2--增加-channel-状态判断","p":1198},{"i":1202,"t":"2.1. 理解 channel 行为","u":"/en/docs/note/design/multi_goroutine","h":"#21-理解-channel-行为","p":1198},{"i":1204,"t":"2.2. 使用判断channel 优化示例","u":"/en/docs/note/design/multi_goroutine","h":"#22-使用判断channel-优化示例","p":1198},{"i":1206,"t":"3. 支持 context.Context","u":"/en/docs/note/design/multi_goroutine","h":"#3-支持-contextcontext","p":1198},{"i":1208,"t":"4. CommandHandler 模式","u":"/en/docs/note/design/multi_goroutine","h":"#4-commandhandler-模式","p":1198},{"i":1211,"t":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel3","h":"#1-目标","p":1210},{"i":1213,"t":"2. 代码改动","u":"/en/docs/note/golang/design/microkernel/microkernel3","h":"#2-代码改动","p":1210},{"i":1215,"t":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel3","h":"#21-kernel核心","p":1210},{"i":1217,"t":"2.2 LogService","u":"/en/docs/note/golang/design/microkernel/microkernel3","h":"#22-logservice","p":1210},{"i":1219,"t":"2.3 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel3","h":"#23-运行结果","p":1210},{"i":1223,"t":"1. 微内核核心设计","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#1-微内核核心设计","p":1221},{"i":1224,"t":"1.1 特点","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#11-特点","p":1221},{"i":1226,"t":"1.2 核心组件","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#12-核心组件","p":1221},{"i":1228,"t":"2. Go 实现 microkernel","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#2-go-实现-microkernel","p":1221},{"i":1229,"t":"2.1 定义 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#21-定义-kernel核心","p":1221},{"i":1231,"t":"2.2 实现示例服务（LogService）","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#22-实现示例服务logservice","p":1221},{"i":1233,"t":"2.3 主程序（运行微内核 + 服务）","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#23-主程序运行微内核--服务","p":1221},{"i":1235,"t":"2.4 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#24-运行结果","p":1221},{"i":1237,"t":"3. 扩展方向","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#3-扩展方向","p":1221},{"i":1239,"t":"4. 总结","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#4-总结","p":1221},{"i":1242,"t":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel5","h":"#1-目标","p":1241},{"i":1244,"t":"2. 代码改动","u":"/en/docs/note/golang/design/microkernel/microkernel5","h":"#2-代码改动","p":1241},{"i":1245,"t":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel5","h":"#21-kernel核心","p":1241},{"i":1247,"t":"2.2 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel5","h":"#22-运行结果","p":1241},{"i":1250,"t":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel6","h":"#1-目标","p":1249},{"i":1252,"t":"2. 代码改动","u":"/en/docs/note/golang/design/microkernel/microkernel6","h":"#2-代码改动","p":1249},{"i":1253,"t":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel6","h":"#21-kernel核心","p":1249},{"i":1255,"t":"2.2 服务","u":"/en/docs/note/golang/design/microkernel/microkernel6","h":"#22-服务","p":1249},{"i":1257,"t":"2.3 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel6","h":"#23-运行结果","p":1249},{"i":1261,"t":"1. Future-Proof 机制的关键原则","u":"/en/docs/note/golang/design/future_proof","h":"","p":1259},{"i":1263,"t":"1.1.  松耦合（Loose Coupling）","u":"/en/docs/note/golang/design/future_proof","h":"#11--松耦合loose-coupling","p":1259},{"i":1265,"t":"1.2. 可扩展性（Extensibility）","u":"/en/docs/note/golang/design/future_proof","h":"#12-可扩展性extensibility","p":1259},{"i":1267,"t":"1.3. 配置化而非硬编码","u":"/en/docs/note/golang/design/future_proof","h":"#13-配置化而非硬编码","p":1259},{"i":1269,"t":"1.4. 协议与数据格式的兼容性","u":"/en/docs/note/golang/design/future_proof","h":"#14-协议与数据格式的兼容性","p":1259},{"i":1271,"t":"1.5. 并发模型的可适应性","u":"/en/docs/note/golang/design/future_proof","h":"#15-并发模型的可适应性","p":1259},{"i":1273,"t":"1.6. 可观测性（Observability）","u":"/en/docs/note/golang/design/future_proof","h":"#16-可观测性observability","p":1259},{"i":1275,"t":"1.7. 防御性编程","u":"/en/docs/note/golang/design/future_proof","h":"#17-防御性编程","p":1259},{"i":1277,"t":"2. 聚合器示例","u":"/en/docs/note/golang/design/future_proof","h":"#2-聚合器示例","p":1259},{"i":1279,"t":"3. 反模式：非 Future-Proof 的设计","u":"/en/docs/note/golang/design/future_proof","h":"#3-反模式非-future-proof-的设计","p":1259},{"i":1281,"t":"4. 总结","u":"/en/docs/note/golang/design/future_proof","h":"#4-总结","p":1259},{"i":1284,"t":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel4","h":"#1-目标","p":1283},{"i":1286,"t":"2. 代码改动","u":"/en/docs/note/golang/design/microkernel/microkernel4","h":"#2-代码改动","p":1283},{"i":1287,"t":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel4","h":"#21-kernel核心","p":1283},{"i":1289,"t":"2.2 LogService","u":"/en/docs/note/golang/design/microkernel/microkernel4","h":"#22-logservice","p":1283},{"i":1291,"t":"2.3 增加另一个类似的EchoService","u":"/en/docs/note/golang/design/microkernel/microkernel4","h":"#23-增加另一个类似的echoservice","p":1283},{"i":1293,"t":"2.4 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel4","h":"#24-运行结果","p":1283},{"i":1297,"t":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#1-目标","p":1295},{"i":1299,"t":"2. 状态存储设计","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#2-状态存储设计","p":1295},{"i":1300,"t":"2.1 存储文件设计","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#21-存储文件设计","p":1295},{"i":1302,"t":"2.2 状态管理模块：StateStore","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#22-状态管理模块statestore","p":1295},{"i":1304,"t":"3. 内核集成","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#3-内核集成","p":1295},{"i":1305,"t":"3.1 kernel 初始化集成StateStore","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#31-kernel-初始化集成statestore","p":1295},{"i":1307,"t":"3.2 注册服务时尝试自动加载状态","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#32-注册服务时尝试自动加载状态","p":1295},{"i":1309,"t":"3.3 停止服务时，保存状态","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#33-停止服务时保存状态","p":1295},{"i":1311,"t":"3.4 定时持久化状态","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#34-定时持久化状态","p":1295},{"i":1313,"t":"4. main","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#4-main","p":1295},{"i":1315,"t":"4.1 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#41-运行结果","p":1295},{"i":1318,"t":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel8","h":"#1-目标","p":1317},{"i":1320,"t":"2. 代码改动","u":"/en/docs/note/golang/design/microkernel/microkernel8","h":"#2-代码改动","p":1317},{"i":1321,"t":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel8","h":"#21-kernel核心","p":1317},{"i":1323,"t":"2.2 echo服务","u":"/en/docs/note/golang/design/microkernel/microkernel8","h":"#22-echo服务","p":1317},{"i":1325,"t":"2.3 main","u":"/en/docs/note/golang/design/microkernel/microkernel8","h":"#23-main","p":1317},{"i":1327,"t":"2.4 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel8","h":"#24-运行结果","p":1317},{"i":1330,"t":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel7","h":"#1-目标","p":1329},{"i":1332,"t":"2. 代码改动","u":"/en/docs/note/golang/design/microkernel/microkernel7","h":"#2-代码改动","p":1329},{"i":1333,"t":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel7","h":"#21-kernel核心","p":1329},{"i":1335,"t":"2.2 日志服务","u":"/en/docs/note/golang/design/microkernel/microkernel7","h":"#22-日志服务","p":1329},{"i":1337,"t":"2.3 main","u":"/en/docs/note/golang/design/microkernel/microkernel7","h":"#23-main","p":1329},{"i":1339,"t":"2.4 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel7","h":"#24-运行结果","p":1329},{"i":1342,"t":"1. Golang 默认 JSON 解析 (encoding/json)","u":"/en/docs/note/golang/json","h":"#1-golang-默认-json-解析-encodingjson","p":1341},{"i":1344,"t":"2. 第三方 JSON 解析库","u":"/en/docs/note/golang/json","h":"#2-第三方-json-解析库","p":1341},{"i":1345,"t":"2.1 github.com/tidwall/gjson（高效 JSON 读取）","u":"/en/docs/note/golang/json","h":"#21-githubcomtidwallgjson高效-json-读取","p":1341},{"i":1347,"t":"优缺点对比","u":"/en/docs/note/golang/json","h":"#优缺点对比","p":1341},{"i":1349,"t":"2.2 github.com/json-iterator/go（高性能 JSON 解析）","u":"/en/docs/note/golang/json","h":"#22-githubcomjson-iteratorgo高性能-json-解析","p":1341},{"i":1351,"t":"优缺点对比","u":"/en/docs/note/golang/json","h":"#优缺点对比-1","p":1341},{"i":1353,"t":"2.3 github.com/buger/jsonparser（流式 JSON 解析）","u":"/en/docs/note/golang/json","h":"#23-githubcombugerjsonparser流式-json-解析","p":1341},{"i":1355,"t":"优缺点对比","u":"/en/docs/note/golang/json","h":"#优缺点对比-2","p":1341},{"i":1357,"t":"3. JSON 解析库对比","u":"/en/docs/note/golang/json","h":"#3-json-解析库对比","p":1341},{"i":1359,"t":"总结与推荐","u":"/en/docs/note/golang/json","h":"#总结与推荐","p":1341},{"i":1362,"t":"错误处理","u":"/en/docs/note/golang/jotting","h":"#错误处理","p":1361},{"i":1364,"t":"普通函数","u":"/en/docs/note/golang/jotting","h":"#普通函数","p":1361},{"i":1366,"t":"结构体方法","u":"/en/docs/note/golang/jotting","h":"#结构体方法","p":1361},{"i":1368,"t":"Go 中何时使用 chan","u":"/en/docs/note/golang/jotting","h":"#go-中何时使用-chan","p":1361},{"i":1370,"t":"✅ 推荐使用的场景","u":"/en/docs/note/golang/jotting","h":"#-推荐使用的场景","p":1361},{"i":1372,"t":"❌ 不推荐的场景","u":"/en/docs/note/golang/jotting","h":"#-不推荐的场景","p":1361},{"i":1374,"t":"go mod tidy 报错 GOSUMDB","u":"/en/docs/note/golang/jotting","h":"#go-mod-tidy-报错-gosumdb","p":1361},{"i":1376,"t":"空接口 interface{} 与任意类型","u":"/en/docs/note/golang/jotting","h":"#空接口-interface-与任意类型","p":1361},{"i":1378,"t":"类型断言与转换","u":"/en/docs/note/golang/jotting","h":"#类型断言与转换","p":1361},{"i":1380,"t":"空结构体 struct{}","u":"/en/docs/note/golang/jotting","h":"#空结构体-struct","p":1361},{"i":1382,"t":"if 判断语法简化","u":"/en/docs/note/golang/jotting","h":"#if-判断语法简化","p":1361},{"i":1385,"t":"1. ide 警告找不到方法","u":"/en/docs/note/golang/goland","h":"#1-ide-警告找不到方法","p":1384},{"i":1388,"t":"1. 反射（Reflect）概述","u":"/en/docs/note/golang/reflect","h":"#1-反射reflect概述","p":1387},{"i":1390,"t":"2. 反射的基本类型","u":"/en/docs/note/golang/reflect","h":"#2-反射的基本类型","p":1387},{"i":1392,"t":"2.1 获取变量的类型和值","u":"/en/docs/note/golang/reflect","h":"#21-获取变量的类型和值","p":1387},{"i":1394,"t":"3. 反射修改变量值","u":"/en/docs/note/golang/reflect","h":"#3-反射修改变量值","p":1387},{"i":1396,"t":"4. 反射处理结构体","u":"/en/docs/note/golang/reflect","h":"#4-反射处理结构体","p":1387},{"i":1397,"t":"4.1 获取结构体字段信息","u":"/en/docs/note/golang/reflect","h":"#41-获取结构体字段信息","p":1387},{"i":1399,"t":"4.2 解析结构体标签（Tag）","u":"/en/docs/note/golang/reflect","h":"#42-解析结构体标签tag","p":1387},{"i":1401,"t":"5. 反射调用方法","u":"/en/docs/note/golang/reflect","h":"#5-反射调用方法","p":1387},{"i":1403,"t":"6. 反射的局限性","u":"/en/docs/note/golang/reflect","h":"#6-反射的局限性","p":1387},{"i":1405,"t":"7. 反射最佳实践","u":"/en/docs/note/golang/reflect","h":"#7-反射最佳实践","p":1387},{"i":1408,"t":"1. 简介","u":"/en/docs/note/golang/kingpin","h":"#1-简介","p":1407},{"i":1410,"t":"2. 安装","u":"/en/docs/note/golang/kingpin","h":"#2-安装","p":1407},{"i":1412,"t":"3. 基本用法","u":"/en/docs/note/golang/kingpin","h":"#3-基本用法","p":1407},{"i":1413,"t":"3.1 使用默认 App","u":"/en/docs/note/golang/kingpin","h":"#31-使用默认-app","p":1407},{"i":1415,"t":"3.2 定义命令行参数（使用 New 方法）","u":"/en/docs/note/golang/kingpin","h":"#32-定义命令行参数使用-new-方法","p":1407},{"i":1417,"t":"3.3 使用子命令","u":"/en/docs/note/golang/kingpin","h":"#33-使用子命令","p":1407},{"i":1419,"t":"3.4 绑定环境变量","u":"/en/docs/note/golang/kingpin","h":"#34-绑定环境变量","p":1407},{"i":1421,"t":"3.5 处理布尔标志","u":"/en/docs/note/golang/kingpin","h":"#35-处理布尔标志","p":1407},{"i":1423,"t":"3.6 解析列表参数","u":"/en/docs/note/golang/kingpin","h":"#36-解析列表参数","p":1407},{"i":1425,"t":"4. 其他高级用法","u":"/en/docs/note/golang/kingpin","h":"#4-其他高级用法","p":1407},{"i":1426,"t":"4.1 自定义解析器","u":"/en/docs/note/golang/kingpin","h":"#41-自定义解析器","p":1407},{"i":1428,"t":"5. 总结","u":"/en/docs/note/golang/kingpin","h":"#5-总结","p":1407},{"i":1430,"t":"特点总结","u":"/en/docs/note/golang/kingpin","h":"#特点总结","p":1407},{"i":1433,"t":"1. channel 交互","u":"/en/docs/note/golang/design/multi_goroutine","h":"#1-channel-交互","p":1432},{"i":1435,"t":"2.  增加 channel 状态判断","u":"/en/docs/note/golang/design/multi_goroutine","h":"#2--增加-channel-状态判断","p":1432},{"i":1436,"t":"2.1. 理解 channel 行为","u":"/en/docs/note/golang/design/multi_goroutine","h":"#21-理解-channel-行为","p":1432},{"i":1438,"t":"2.2. 使用判断channel 优化示例","u":"/en/docs/note/golang/design/multi_goroutine","h":"#22-使用判断channel-优化示例","p":1432},{"i":1440,"t":"3. 支持 context.Context","u":"/en/docs/note/golang/design/multi_goroutine","h":"#3-支持-contextcontext","p":1432},{"i":1442,"t":"4. CommandHandler 模式","u":"/en/docs/note/golang/design/multi_goroutine","h":"#4-commandhandler-模式","p":1432},{"i":1445,"t":"1. 简介","u":"/en/docs/note/golang/validator","h":"#1-简介","p":1444},{"i":1447,"t":"2. 安装","u":"/en/docs/note/golang/validator","h":"#2-安装","p":1444},{"i":1449,"t":"3. 基本使用","u":"/en/docs/note/golang/validator","h":"#3-基本使用","p":1444},{"i":1451,"t":"4. 常见的内置验证标签","u":"/en/docs/note/golang/validator","h":"#4-常见的内置验证标签","p":1444},{"i":1453,"t":"5. 自定义验证","u":"/en/docs/note/golang/validator","h":"#5-自定义验证","p":1444},{"i":1455,"t":"6. 结构体嵌套验证","u":"/en/docs/note/golang/validator","h":"#6-结构体嵌套验证","p":1444},{"i":1457,"t":"7. 处理错误信息","u":"/en/docs/note/golang/validator","h":"#7-处理错误信息","p":1444},{"i":1459,"t":"8. 结论","u":"/en/docs/note/golang/validator","h":"#8-结论","p":1444},{"i":1462,"t":"1. 引言","u":"/en/docs/note/golang/serialization","h":"#1-引言","p":1461},{"i":1464,"t":"2. 标准库的序列化支持","u":"/en/docs/note/golang/serialization","h":"#2-标准库的序列化支持","p":1461},{"i":1465,"t":"2.1 JSON序列化","u":"/en/docs/note/golang/serialization","h":"#21-json序列化","p":1461},{"i":1467,"t":"2.2 结构体标签","u":"/en/docs/note/golang/serialization","h":"#22-结构体标签","p":1461},{"i":1469,"t":"3. 自定义类型序列化","u":"/en/docs/note/golang/serialization","h":"#3-自定义类型序列化","p":1461},{"i":1471,"t":"3.1 实现Marshaler接口","u":"/en/docs/note/golang/serialization","h":"#31-实现marshaler接口","p":1461},{"i":1473,"t":"3.2 实现Unmarshaler接口","u":"/en/docs/note/golang/serialization","h":"#32-实现unmarshaler接口","p":1461},{"i":1475,"t":"4. 复合类型处理","u":"/en/docs/note/golang/serialization","h":"#4-复合类型处理","p":1461},{"i":1476,"t":"4.1 嵌套结构体","u":"/en/docs/note/golang/serialization","h":"#41-嵌套结构体","p":1461},{"i":1478,"t":"4.2 接口类型处理","u":"/en/docs/note/golang/serialization","h":"#42-接口类型处理","p":1461},{"i":1480,"t":"5. 性能优化","u":"/en/docs/note/golang/serialization","h":"#5-性能优化","p":1461},{"i":1481,"t":"5.1 使用缓冲池","u":"/en/docs/note/golang/serialization","h":"#51-使用缓冲池","p":1461},{"i":1483,"t":"5.2 使用第三方库","u":"/en/docs/note/golang/serialization","h":"#52-使用第三方库","p":1461},{"i":1485,"t":"6. 常见问题解决","u":"/en/docs/note/golang/serialization","h":"#6-常见问题解决","p":1461},{"i":1486,"t":"6.1 循环引用问题","u":"/en/docs/note/golang/serialization","h":"#61-循环引用问题","p":1461},{"i":1488,"t":"6.2 时间格式处理","u":"/en/docs/note/golang/serialization","h":"#62-时间格式处理","p":1461},{"i":1490,"t":"7. 测试验证","u":"/en/docs/note/golang/serialization","h":"#7-测试验证","p":1461},{"i":1491,"t":"7.1 单元测试示例","u":"/en/docs/note/golang/serialization","h":"#71-单元测试示例","p":1461},{"i":1493,"t":"8. 最佳实践","u":"/en/docs/note/golang/serialization","h":"#8-最佳实践","p":1461},{"i":1495,"t":"附录：完整示例","u":"/en/docs/note/golang/serialization","h":"#附录完整示例","p":1461},{"i":1498,"t":"1. 概述","u":"/en/docs/note/os/chroot","h":"#1-概述","p":1497},{"i":1500,"t":"2. 工作原理","u":"/en/docs/note/os/chroot","h":"#2-工作原理","p":1497},{"i":1502,"t":"3. 基本用法","u":"/en/docs/note/os/chroot","h":"#3-基本用法","p":1497},{"i":1503,"t":"3.1. 进入 chroot 环境","u":"/en/docs/note/os/chroot","h":"#31-进入-chroot-环境","p":1497},{"i":1505,"t":"3.2. 在 chroot 环境中执行命令","u":"/en/docs/note/os/chroot","h":"#32-在-chroot-环境中执行命令","p":1497},{"i":1507,"t":"4. 创建一个基本的 chroot 环境","u":"/en/docs/note/os/chroot","h":"#4-创建一个基本的-chroot-环境","p":1497},{"i":1509,"t":"5. 使用场景","u":"/en/docs/note/os/chroot","h":"#5-使用场景","p":1497},{"i":1510,"t":"5.1. 系统恢复","u":"/en/docs/note/os/chroot","h":"#51-系统恢复","p":1497},{"i":1512,"t":"5.2. 隔离环境（Sandbox）","u":"/en/docs/note/os/chroot","h":"#52-隔离环境sandbox","p":1497},{"i":1514,"t":"5.3. 软件包编译","u":"/en/docs/note/os/chroot","h":"#53-软件包编译","p":1497},{"i":1516,"t":"5.4. 运行特定版本的应用程序","u":"/en/docs/note/os/chroot","h":"#54-运行特定版本的应用程序","p":1497},{"i":1518,"t":"6. 注意事项","u":"/en/docs/note/os/chroot","h":"#6-注意事项","p":1497},{"i":1520,"t":"7. 总结","u":"/en/docs/note/os/chroot","h":"#7-总结","p":1497},{"i":1523,"t":"1. Unix Socket 简介","u":"/en/docs/note/golang/web_server_unix","h":"#1-unix-socket-简介","p":1522},{"i":1525,"t":"2. 使用标准库 net/http 实现","u":"/en/docs/note/golang/web_server_unix","h":"#2-使用标准库-nethttp-实现","p":1522},{"i":1526,"t":"2.1 基础实现","u":"/en/docs/note/golang/web_server_unix","h":"#21-基础实现","p":1522},{"i":1528,"t":"2.2 高级配置","u":"/en/docs/note/golang/web_server_unix","h":"#22-高级配置","p":1522},{"i":1530,"t":"3. 使用 Gin 框架实现","u":"/en/docs/note/golang/web_server_unix","h":"#3-使用-gin-框架实现","p":1522},{"i":1531,"t":"3.1 基础实现","u":"/en/docs/note/golang/web_server_unix","h":"#31-基础实现","p":1522},{"i":1533,"t":"3.2 生产环境建议","u":"/en/docs/note/golang/web_server_unix","h":"#32-生产环境建议","p":1522},{"i":1535,"t":"4. 客户端连接方式","u":"/en/docs/note/golang/web_server_unix","h":"#4-客户端连接方式","p":1522},{"i":1536,"t":"4.1 标准HTTP客户端","u":"/en/docs/note/golang/web_server_unix","h":"#41-标准http客户端","p":1522},{"i":1538,"t":"4.2 通用Socket客户端","u":"/en/docs/note/golang/web_server_unix","h":"#42-通用socket客户端","p":1522},{"i":1540,"t":"5. 性能优化建议","u":"/en/docs/note/golang/web_server_unix","h":"#5-性能优化建议","p":1522},{"i":1542,"t":"6. 常见问题解答","u":"/en/docs/note/golang/web_server_unix","h":"#6-常见问题解答","p":1522},{"i":1544,"t":"7. 实际应用场景","u":"/en/docs/note/golang/web_server_unix","h":"#7-实际应用场景","p":1522},{"i":1546,"t":"总结","u":"/en/docs/note/golang/web_server_unix","h":"#总结","p":1522},{"i":1549,"t":"1. GDB 概述","u":"/en/docs/note/os/debug/gdb","h":"#1-gdb-概述","p":1548},{"i":1551,"t":"1.1 GDB的历史和发展","u":"/en/docs/note/os/debug/gdb","h":"#11-gdb的历史和发展","p":1548},{"i":1553,"t":"1.2 GDB应用场景","u":"/en/docs/note/os/debug/gdb","h":"#12-gdb应用场景","p":1548},{"i":1555,"t":"2. GDB安装","u":"/en/docs/note/os/debug/gdb","h":"#2-gdb安装","p":1548},{"i":1556,"t":"2.1 使用包管理器安装","u":"/en/docs/note/os/debug/gdb","h":"#21-使用包管理器安装","p":1548},{"i":1558,"t":"2.2 源码编译安装","u":"/en/docs/note/os/debug/gdb","h":"#22-源码编译安装","p":1548},{"i":1560,"t":"3. GDB 基本功能","u":"/en/docs/note/os/debug/gdb","h":"#3-gdb-基本功能","p":1548},{"i":1561,"t":"3.1 启动GDB","u":"/en/docs/note/os/debug/gdb","h":"#31-启动gdb","p":1548},{"i":1563,"t":"3.2 调试带参数的程序","u":"/en/docs/note/os/debug/gdb","h":"#32-调试带参数的程序","p":1548},{"i":1565,"t":"3.3 调试运行中的进程","u":"/en/docs/note/os/debug/gdb","h":"#33-调试运行中的进程","p":1548},{"i":1567,"t":"3.4 基本调试命令","u":"/en/docs/note/os/debug/gdb","h":"#34-基本调试命令","p":1548},{"i":1569,"t":"3.5 断点管理","u":"/en/docs/note/os/debug/gdb","h":"#35-断点管理","p":1548},{"i":1571,"t":"3.6 变量与内存操作","u":"/en/docs/note/os/debug/gdb","h":"#36-变量与内存操作","p":1548},{"i":1573,"t":"3.7 寄存器操作","u":"/en/docs/note/os/debug/gdb","h":"#37-寄存器操作","p":1548},{"i":1575,"t":"4. 高级调试技巧","u":"/en/docs/note/os/debug/gdb","h":"#4-高级调试技巧","p":1548},{"i":1576,"t":"4.1 多进程调试","u":"/en/docs/note/os/debug/gdb","h":"#41-多进程调试","p":1548},{"i":1578,"t":"4.2 多线程调试","u":"/en/docs/note/os/debug/gdb","h":"#42-多线程调试","p":1548},{"i":1580,"t":"4.3 观察点(Watchpoints)","u":"/en/docs/note/os/debug/gdb","h":"#43-观察点watchpoints","p":1548},{"i":1582,"t":"4.4 捕获点(Catchpoints)","u":"/en/docs/note/os/debug/gdb","h":"#44-捕获点catchpoints","p":1548},{"i":1584,"t":"4.5 自动化调试","u":"/en/docs/note/os/debug/gdb","h":"#45-自动化调试","p":1548},{"i":1586,"t":"4.6 远程调试","u":"/en/docs/note/os/debug/gdb","h":"#46-远程调试","p":1548},{"i":1588,"t":"4.7 切换栈帧","u":"/en/docs/note/os/debug/gdb","h":"#47-切换栈帧","p":1548},{"i":1590,"t":"5. 调试信息与符号","u":"/en/docs/note/os/debug/gdb","h":"#5-调试信息与符号","p":1548},{"i":1591,"t":"5.1 编译时添加调试信息","u":"/en/docs/note/os/debug/gdb","h":"#51-编译时添加调试信息","p":1548},{"i":1593,"t":"5.2 分离调试信息","u":"/en/docs/note/os/debug/gdb","h":"#52-分离调试信息","p":1548},{"i":1595,"t":"5.3 加载调试信息","u":"/en/docs/note/os/debug/gdb","h":"#53-加载调试信息","p":1548},{"i":1597,"t":"6. 调试案例","u":"/en/docs/note/os/debug/gdb","h":"#6-调试案例","p":1548},{"i":1598,"t":"6.1 段错误调试","u":"/en/docs/note/os/debug/gdb","h":"#61-段错误调试","p":1548},{"i":1600,"t":"6.2 内存泄漏检查","u":"/en/docs/note/os/debug/gdb","h":"#62-内存泄漏检查","p":1548},{"i":1602,"t":"6.3 死锁检测","u":"/en/docs/note/os/debug/gdb","h":"#63-死锁检测","p":1548},{"i":1604,"t":"7. GDB 实现原理","u":"/en/docs/note/os/debug/gdb","h":"#7-gdb-实现原理","p":1548},{"i":1605,"t":"7.1 ptrace系统调用","u":"/en/docs/note/os/debug/gdb","h":"#71-ptrace系统调用","p":1548},{"i":1607,"t":"7.2 断点实现原理","u":"/en/docs/note/os/debug/gdb","h":"#72-断点实现原理","p":1548},{"i":1609,"t":"8. 参考资源","u":"/en/docs/note/os/debug/gdb","h":"#8-参考资源","p":1548},{"i":1612,"t":"1. 简介","u":"/en/docs/note/golang/syscall","h":"#1-简介","p":1611},{"i":1614,"t":"2. 安装","u":"/en/docs/note/golang/syscall","h":"#2-安装","p":1611},{"i":1616,"t":"3. 常见 Golang golang.org/x/sys/unix","u":"/en/docs/note/golang/syscall","h":"#3-常见-golang-golangorgxsysunix","p":1611},{"i":1617,"t":"1. 简介","u":"/en/docs/note/golang/syscall","h":"#1-简介-1","p":1611},{"i":1619,"t":"2. 安装","u":"/en/docs/note/golang/syscall","h":"#2-安装-1","p":1611},{"i":1621,"t":"3. 常见 unix 用法","u":"/en/docs/note/golang/syscall","h":"#3-常见-unix-用法","p":1611},{"i":1622,"t":"3.1 获取进程 ID","u":"/en/docs/note/golang/syscall","h":"#31-获取进程-id","p":1611},{"i":1624,"t":"3.2 文件操作","u":"/en/docs/note/golang/syscall","h":"#32-文件操作","p":1611},{"i":1626,"t":"3.3 进程控制","u":"/en/docs/note/golang/syscall","h":"#33-进程控制","p":1611},{"i":1628,"t":"3.4 信号处理","u":"/en/docs/note/golang/syscall","h":"#34-信号处理","p":1611},{"i":1630,"t":"3.5 内存管理","u":"/en/docs/note/golang/syscall","h":"#35-内存管理","p":1611},{"i":1632,"t":"4. unix 作为 syscall 的替代方案","u":"/en/docs/note/golang/syscall","h":"#4-unix-作为-syscall-的替代方案","p":1611},{"i":1634,"t":"5. 结论","u":"/en/docs/note/golang/syscall","h":"#5-结论","p":1611},{"i":1636,"t":"6. 参考","u":"/en/docs/note/golang/syscall","h":"#6-参考","p":1611},{"i":1638,"t":"** unix 用法**","u":"/en/docs/note/golang/syscall","h":"#-unix-用法","p":1611},{"i":1639,"t":"3.1 获取进程 ID","u":"/en/docs/note/golang/syscall","h":"#31-获取进程-id-1","p":1611},{"i":1641,"t":"3.2 文件操作","u":"/en/docs/note/golang/syscall","h":"#32-文件操作-1","p":1611},{"i":1643,"t":"3.3 进程控制","u":"/en/docs/note/golang/syscall","h":"#33-进程控制-1","p":1611},{"i":1645,"t":"3.4 信号处理","u":"/en/docs/note/golang/syscall","h":"#34-信号处理-1","p":1611},{"i":1647,"t":"3.5 内存管理","u":"/en/docs/note/golang/syscall","h":"#35-内存管理-1","p":1611},{"i":1649,"t":"4. unix 作为 syscall 的替代方案","u":"/en/docs/note/golang/syscall","h":"#4-unix-作为-syscall-的替代方案-1","p":1611},{"i":1651,"t":"5. 结论","u":"/en/docs/note/golang/syscall","h":"#5-结论-1","p":1611},{"i":1653,"t":"6. 参考","u":"/en/docs/note/golang/syscall","h":"#6-参考-1","p":1611},{"i":1657,"t":"查杀僵尸进程","u":"/en/docs/note/os/zombie","h":"#查杀僵尸进程","p":1655},{"i":1659,"t":"举例","u":"/en/docs/note/os/zombie","h":"#举例","p":1655},{"i":1660,"t":"孤儿进程","u":"/en/docs/note/os/zombie","h":"#孤儿进程","p":1655},{"i":1663,"t":"回收儿子","u":"/en/docs/note/os/zombie","h":"#回收儿子","p":1655}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/836",[0,6.931,1,6.931]],["t/838",[2,6.931,3,6.931]],["t/840",[4,6.101,5,6.101,6,6.101]],["t/846",[7,8.023]],["t/848",[8,8.023]],["t/850",[9,8.023]],["t/852",[10,8.023]],["t/855",[11,0.234]],["t/856",[12,5.392]],["t/858",[13,5.119]],["t/860",[14,4.1]],["t/862",[11,0.212]],["t/863",[12,5.392]],["t/865",[15,4.366]],["t/867",[14,4.1]],["t/869",[11,0.212]],["t/870",[12,5.392]],["t/872",[15,4.366]],["t/874",[14,4.1]],["t/876",[11,0.212]],["t/877",[12,5.392]],["t/879",[15,4.366]],["t/881",[16,7.295]],["t/883",[14,4.1]],["t/885",[11,0.212]],["t/886",[12,5.392]],["t/888",[15,4.366]],["t/890",[14,4.1]],["t/892",[11,0.212]],["t/893",[12,5.392]],["t/895",[15,4.366]],["t/897",[14,4.1]],["t/899",[11,0.212]],["t/900",[12,5.392]],["t/902",[15,4.366]],["t/904",[14,4.1]],["t/906",[11,0.212]],["t/907",[12,5.392]],["t/909",[15,4.366]],["t/911",[14,4.1]],["t/913",[11,0.212]],["t/914",[12,5.392]],["t/916",[15,4.366]],["t/918",[14,4.1]],["t/923",[11,0.183,17,5.331]],["t/925",[11,0.118,16,4.081,18,4.081,19,5.596,20,4.081]],["t/927",[11,0.144,15,2.965,18,4.954,19,4.628]],["t/928",[11,0.199,14,2.784,21,3.564]],["t/930",[11,0.199,22,4.954,23,5.448]],["t/932",[11,0.144,15,2.965,19,4.628,20,4.954]],["t/933",[11,0.199,14,2.784,21,3.564]],["t/935",[11,0.199,22,4.954,24,5.448]],["t/937",[11,0.186,25,4.181,26,3.405,27,3.067]],["t/939",[11,0.183,28,5.331]],["t/943",[11,0.144,29,4.029,30,2.917,31,3.769]],["t/944",[11,0.216,32,4.91]],["t/946",[11,0.199,30,2.917,33,4.954]],["t/948",[11,0.229,34,3.396]],["t/949",[11,0.217,30,2.635,35,4.181]],["t/951",[11,0.206,14,2.294,34,2.797,36,2.576]],["t/953",[11,0.174,29,3.319,36,2.576,37,3.612,38,2.228]],["t/955",[11,0.199,38,2.705,39,3.016]],["t/957",[11,0.161,40,5.547,41,5.547]],["t/959",[11,0.183,27,4.32]],["t/963",[11,0.183,42,3.978]],["t/965",[11,0.161,43,3.641,44,3.641]],["t/966",[11,0.229,30,2.917]],["t/968",[11,0.243]],["t/970",[11,0.174,29,3.319,36,2.576,37,3.612,38,2.228]],["t/972",[11,0.199,38,2.705,39,3.016]],["t/974",[11,0.174,45,3.319,46,3.812,47,3.612,48,4.081]],["t/976",[]],["t/978",[11,0.183,42,3.978]],["t/980",[11,0.161,43,3.641,44,3.641]],["t/982",[11,0.229,30,2.917]],["t/984",[11,0.243]],["t/986",[11,0.199,38,2.705,39,3.016]],["t/989",[11,0.183,42,3.978]],["t/991",[11,0.161,43,3.641,44,3.641]],["t/992",[11,0.229,30,2.917]],["t/994",[11,0.199,38,2.705,39,3.016]],["t/998",[11,0.206,49,4.081,50,4.081,51,4.081]],["t/1000",[11,0.227,52,4.081,53,4.081]],["t/1002",[11,0.229,54,4.954]],["t/1004",[11,0.163,55,3.503,56,3.319,57,3.319,58,3.75,59,3.75]],["t/1006",[11,0.186,60,4.475,61,4.475,62,4.475]],["t/1008",[11,0.186,63,4.475,64,4.475,65,4.475]],["t/1010",[11,0.217,66,4.475,67,4.475]],["t/1012",[11,0.199,68,4.954,69,4.954]],["t/1014",[11,0.144,14,2.784,70,4.954,71,4.954]],["t/1016",[11,0.196,31,2.853,57,3.319,72,3.75,73,3.319]],["t/1018",[11,0.183,27,4.32]],["t/1021",[11,0.183,42,3.978]],["t/1023",[11,0.161,43,3.641,44,3.641]],["t/1024",[11,0.229,30,2.917]],["t/1026",[11,0.243]],["t/1028",[11,0.206,74,3.452,75,3.812,76,4.081]],["t/1030",[11,0.199,38,2.705,39,3.016]],["t/1033",[11,0.183,42,3.978]],["t/1035",[11,0.161,43,3.641,44,3.641]],["t/1036",[11,0.229,30,2.917]],["t/1038",[11,0.216,36,3.501]],["t/1040",[11,0.199,38,2.705,39,3.016]],["t/1043",[11,0.183,42,3.978]],["t/1045",[11,0.161,43,3.641,44,3.641]],["t/1046",[11,0.229,30,2.917]],["t/1048",[11,0.229,36,3.127]],["t/1050",[11,0.243]],["t/1052",[11,0.199,38,2.705,39,3.016]],["t/1055",[11,0.183,42,3.978]],["t/1057",[11,0.161,43,3.641,44,3.641]],["t/1058",[11,0.229,30,2.917]],["t/1060",[11,0.199,36,3.127,77,4.954]],["t/1062",[11,0.243]],["t/1064",[11,0.199,38,2.705,39,3.016]],["t/1067",[11,0.199,78,4.628,79,4.954]],["t/1071",[11,0.183,42,3.978]],["t/1073",[11,0.144,31,3.769,80,3.396,81,4.385]],["t/1074",[11,0.186,31,3.405,81,3.961,82,3.961]],["t/1076",[11,0.206,80,2.797,83,3.452,84,4.081]],["t/1078",[11,0.161,85,5.547,86,4.91]],["t/1079",[11,0.227,86,3.612,87,4.081]],["t/1081",[11,0.145,36,2.037,80,2.212,88,3.227,89,2.73,90,3.227,91,3.227,92,3.015]],["t/1083",[11,0.163,36,2.367,80,2.571,89,3.172,93,3.75,94,3.75]],["t/1085",[11,0.174,56,3.612,80,2.797,95,4.081,96,4.081]],["t/1087",[11,0.234]],["t/1089",[11,0.199,38,2.705,39,3.016]],["t/1092",[11,0.183,17,5.331]],["t/1094",[11,0.183,97,4.795]],["t/1096",[11,0.161,15,3.32,21,3.991]],["t/1097",[11,0.186,98,4.922,99,4.475,100,4.181]],["t/1099",[11,0.199,100,4.628,101,5.448]],["t/1101",[11,0.199,100,4.628,102,4.954]],["t/1103",[11,0.163,99,3.75,103,4.124,104,4.124,105,4.124,106,4.124]],["t/1105",[11,0.161,25,5.182,26,4.22]],["t/1107",[11,0.183,27,4.32]],["t/1110",[11,0.217,107,4.475,108,3.639]],["t/1112",[11,0.217,15,2.678,21,3.22]],["t/1114",[11,0.237,109,3.639]],["t/1116",[11,0.229,109,4.029]],["t/1118",[11,0.161,15,3.32,110,4.91]],["t/1119",[11,0.237,111,2.773]],["t/1121",[11,0.229,111,3.07]],["t/1123",[11,0.217,112,4.922,113,4.922]],["t/1125",[11,0.199,114,5.448,115,4.954]],["t/1127",[11,0.174,38,2.228,116,4.081,117,4.488,118,3.612]],["t/1129",[11,0.199,74,4.19,119,5.448]],["t/1131",[11,0.163,78,3.503,111,2.324,118,3.319,120,4.124,121,4.124]],["t/1133",[11,0.183,28,5.331]],["t/1137",[11,0.199,122,4.385,123,4.954]],["t/1139",[11,0.229,32,4.385]],["t/1141",[11,0.199,14,2.784,124,4.628]],["t/1143",[11,0.227,15,2.442,125,4.488]],["t/1145",[11,0.217,25,4.181,26,3.405]],["t/1147",[11,0.243]],["t/1149",[11,0.243]],["t/1151",[11,0.206,126,4.488,127,4.488,128,4.488]],["t/1153",[11,0.243]],["t/1155",[11,0.234]],["t/1157",[14,4.1]],["t/1159",[11,0.234]],["t/1161",[14,4.1]],["t/1163",[27,5]],["t/1167",[11,0.118,129,3.319,130,4.488,131,4.081,132,4.488,133,3.319]],["t/1169",[11,0.144,133,4.029,134,5.448,135,4.19]],["t/1171",[11,0.144,135,4.19,136,4.954,137,4.954]],["t/1173",[11,0.144,14,2.784,138,4.954,139,4.628]],["t/1174",[11,0.186,129,3.639,140,4.922,141,4.922]],["t/1176",[11,0.217,142,4.922,143,3.639]],["t/1178",[11,0.186,135,3.785,136,4.475,144,4.922]],["t/1180",[11,0.183,145,6.302]],["t/1184",[11,0.183,42,3.978]],["t/1186",[11,0.161,43,3.641,44,3.641]],["t/1187",[11,0.229,30,2.917]],["t/1189",[11,0.243]],["t/1191",[11,0.174,29,3.319,36,2.576,37,3.612,38,2.228]],["t/1193",[11,0.199,38,2.705,39,3.016]],["t/1195",[11,0.174,45,3.319,46,3.812,47,3.612,48,4.081]],["t/1197",[]],["t/1199",[11,0.216,146,5.547]],["t/1201",[11,0.186,74,3.785,80,3.067,147,3.785]],["t/1202",[11,0.217,148,4.475,149,4.475]],["t/1204",[11,0.196,14,2.108,45,3.05,111,2.324,147,3.172]],["t/1206",[11,0.229,150,4.628]],["t/1208",[11,0.216,73,4.91]],["t/1211",[11,0.183,42,3.978]],["t/1213",[11,0.161,43,3.641,44,3.641]],["t/1215",[11,0.229,30,2.917]],["t/1217",[11,0.243]],["t/1219",[11,0.199,38,2.705,39,3.016]],["t/1223",[11,0.144,29,4.029,30,2.917,31,3.769]],["t/1224",[11,0.216,32,4.91]],["t/1226",[11,0.199,30,2.917,33,4.954]],["t/1228",[11,0.229,34,3.396]],["t/1229",[11,0.217,30,2.635,35,4.181]],["t/1231",[11,0.206,14,2.294,34,2.797,36,2.576]],["t/1233",[11,0.174,29,3.319,36,2.576,37,3.612,38,2.228]],["t/1235",[11,0.199,38,2.705,39,3.016]],["t/1237",[11,0.161,40,5.547,41,5.547]],["t/1239",[11,0.183,27,4.32]],["t/1242",[11,0.183,42,3.978]],["t/1244",[11,0.161,43,3.641,44,3.641]],["t/1245",[11,0.229,30,2.917]],["t/1247",[11,0.199,38,2.705,39,3.016]],["t/1250",[11,0.183,42,3.978]],["t/1252",[11,0.161,43,3.641,44,3.641]],["t/1253",[11,0.229,30,2.917]],["t/1255",[11,0.216,36,3.501]],["t/1257",[11,0.199,38,2.705,39,3.016]],["t/1261",[11,0.206,49,4.081,50,4.081,51,4.081]],["t/1263",[11,0.227,52,4.081,53,4.081]],["t/1265",[11,0.229,54,4.954]],["t/1267",[11,0.163,55,3.503,56,3.319,57,3.319,58,3.75,59,3.75]],["t/1269",[11,0.186,60,4.475,61,4.475,62,4.475]],["t/1271",[11,0.186,63,4.475,64,4.475,65,4.475]],["t/1273",[11,0.217,66,4.475,67,4.475]],["t/1275",[11,0.199,68,4.954,69,4.954]],["t/1277",[11,0.144,14,2.784,70,4.954,71,4.954]],["t/1279",[11,0.196,31,2.853,57,3.319,72,3.75,73,3.319]],["t/1281",[11,0.183,27,4.32]],["t/1284",[11,0.183,42,3.978]],["t/1286",[11,0.161,43,3.641,44,3.641]],["t/1287",[11,0.229,30,2.917]],["t/1289",[11,0.243]],["t/1291",[11,0.206,74,3.452,75,3.812,76,4.081]],["t/1293",[11,0.199,38,2.705,39,3.016]],["t/1297",[11,0.183,42,3.978]],["t/1299",[11,0.144,31,3.769,80,3.396,81,4.385]],["t/1300",[11,0.186,31,3.405,81,3.961,82,3.961]],["t/1302",[11,0.206,80,2.797,83,3.452,84,4.081]],["t/1304",[11,0.161,85,5.547,86,4.91]],["t/1305",[11,0.227,86,3.612,87,4.081]],["t/1307",[11,0.145,36,2.037,80,2.212,88,3.227,89,2.73,90,3.227,91,3.227,92,3.015]],["t/1309",[11,0.163,36,2.367,80,2.571,89,3.172,93,3.75,94,3.75]],["t/1311",[11,0.174,56,3.612,80,2.797,95,4.081,96,4.081]],["t/1313",[11,0.234]],["t/1315",[11,0.199,38,2.705,39,3.016]],["t/1318",[11,0.183,42,3.978]],["t/1320",[11,0.161,43,3.641,44,3.641]],["t/1321",[11,0.229,30,2.917]],["t/1323",[11,0.229,36,3.127]],["t/1325",[11,0.243]],["t/1327",[11,0.199,38,2.705,39,3.016]],["t/1330",[11,0.183,42,3.978]],["t/1332",[11,0.161,43,3.641,44,3.641]],["t/1333",[11,0.229,30,2.917]],["t/1335",[11,0.199,36,3.127,77,4.954]],["t/1337",[11,0.243]],["t/1339",[11,0.199,38,2.705,39,3.016]],["t/1342",[11,0.233,151,3.75,152,2.945]],["t/1344",[11,0.186,152,3.514,153,4.475,154,3.785]],["t/1345",[11,0.241,137,3.227,155,3.549]],["t/1347",[156,5.888,157,5.578]],["t/1349",[11,0.243,152,2.369,158,3.318]],["t/1351",[156,5.888,157,5.578]],["t/1353",[11,0.241,152,2.534,159,3.549]],["t/1355",[156,5.888,157,5.578]],["t/1357",[11,0.186,152,3.514,154,3.785,157,3.961]],["t/1359",[27,4.32,122,5.578]],["t/1362",[160,8.023]],["t/1364",[46,5.888,161,6.931]],["t/1366",[162,4.22,163,4.22,164,4.91]],["t/1368",[11,0.186,111,2.773,165,4.181,166,4.922]],["t/1370",[26,4.22,111,3.438,122,4.91]],["t/1372",[26,4.795,122,5.578]],["t/1374",[11,0.237,167,4.922]],["t/1376",[11,0.13,168,4.475,169,4.181,170,4.922,171,3.639]],["t/1378",[171,4.511,172,6.101,173,6.101]],["t/1380",[11,0.144,162,3.769,163,3.769,168,4.954]],["t/1382",[11,0.144,147,4.19,174,5.448,175,5.448]],["t/1385",[11,0.174,164,3.612,176,4.488,177,4.488,178,4.488]],["t/1388",[11,0.199,17,4.19,179,3.89]],["t/1390",[11,0.144,21,3.564,171,4.029,179,3.89]],["t/1392",[11,0.174,47,3.612,109,3.319,171,3.319,180,4.488]],["t/1394",[11,0.144,102,4.954,179,3.89,181,5.448]],["t/1396",[11,0.13,143,3.639,162,3.405,163,3.405,179,3.514]],["t/1397",[11,0.154,109,2.821,135,2.935,162,2.639,163,2.639,182,3.815,183,3.469]],["t/1399",[11,0.196,152,2.945,162,2.853,163,2.853,184,3.503]],["t/1401",[11,0.144,164,4.385,179,3.89,185,4.954]],["t/1403",[11,0.161,179,4.356,186,6.101]],["t/1405",[11,0.144,179,3.89,187,4.954,188,4.954]],["t/1408",[11,0.183,108,5.125]],["t/1410",[11,0.183,97,4.795]],["t/1412",[11,0.161,15,3.32,21,3.991]],["t/1413",[11,0.217,111,2.773,151,4.475]],["t/1415",[11,0.187,35,3.241,111,2.15,164,3.071,189,3.815,190,3.241]],["t/1417",[11,0.186,111,2.773,118,3.961,191,4.922]],["t/1419",[11,0.199,115,4.954,192,5.448]],["t/1421",[11,0.186,143,3.639,193,4.922,194,4.922]],["t/1423",[11,0.186,152,3.514,190,4.181,195,4.922]],["t/1425",[11,0.144,15,2.965,110,4.385,196,5.448]],["t/1426",[11,0.199,197,4.628,198,5.448]],["t/1428",[11,0.183,27,4.32]],["t/1430",[27,4.32,32,5.578]],["t/1433",[11,0.216,146,5.547]],["t/1435",[11,0.186,74,3.785,80,3.067,147,3.785]],["t/1436",[11,0.217,148,4.475,149,4.475]],["t/1438",[11,0.196,14,2.108,45,3.05,111,2.324,147,3.172]],["t/1440",[11,0.229,150,4.628]],["t/1442",[11,0.216,73,4.91]],["t/1445",[11,0.183,108,5.125]],["t/1447",[11,0.183,97,4.795]],["t/1449",[11,0.161,21,3.991,111,3.438]],["t/1451",[11,0.13,184,4.181,199,3.961,200,4.922,201,3.961]],["t/1453",[11,0.161,197,5.182,201,4.91]],["t/1455",[11,0.13,162,3.405,163,3.405,201,3.961,202,4.475]],["t/1457",[11,0.161,135,4.692,203,6.101]],["t/1459",[11,0.183,28,5.331]],["t/1462",[11,0.183,204,6.931]],["t/1464",[11,0.13,150,4.181,154,3.785,205,4.181,206,4.181]],["t/1465",[11,0.229,206,4.628]],["t/1467",[11,0.186,162,3.405,163,3.405,184,4.181]],["t/1469",[11,0.144,171,4.029,197,4.628,206,4.628]],["t/1471",[11,0.217,34,3.067,169,4.181]],["t/1473",[11,0.217,34,3.067,169,4.181]],["t/1475",[11,0.144,143,4.029,171,4.029,207,5.448]],["t/1476",[11,0.186,162,3.405,163,3.405,202,4.475]],["t/1478",[11,0.199,143,4.029,208,5.448]],["t/1480",[11,0.161,45,4.511,209,5.547]],["t/1481",[11,0.186,111,2.773,210,4.922,211,4.922]],["t/1483",[11,0.186,111,2.773,153,4.475,154,3.785]],["t/1485",[11,0.161,212,6.101,213,6.101]],["t/1486",[11,0.186,214,4.922,215,4.922,216,4.922]],["t/1488",[11,0.186,143,3.639,217,4.922,218,4.922]],["t/1490",[11,0.161,201,4.91,219,6.101]],["t/1491",[11,0.199,14,2.784,220,5.448]],["t/1493",[11,0.161,187,5.547,188,5.547]],["t/1495",[14,3.118,221,6.101,222,6.101]],["t/1498",[11,0.183,17,5.331]],["t/1500",[11,0.161,223,6.101,224,5.182]],["t/1502",[11,0.161,15,3.32,21,3.991]],["t/1503",[11,0.217,225,4.922,226,3.785]],["t/1505",[11,0.206,165,3.812,226,3.452,227,4.488]],["t/1507",[11,0.174,21,2.936,75,3.812,226,3.452,228,4.488]],["t/1509",[11,0.161,26,4.22,111,3.438]],["t/1510",[11,0.199,229,4.954,230,5.448]],["t/1512",[11,0.217,226,3.785,231,4.922]],["t/1514",[11,0.199,232,5.448,233,4.628]],["t/1516",[11,0.174,38,2.228,234,4.488,235,4.488,236,4.488]],["t/1518",[11,0.183,145,6.302]],["t/1520",[11,0.183,27,4.32]],["t/1523",[11,0.229,108,4.029]],["t/1525",[11,0.196,34,2.571,111,2.324,154,3.172,205,3.503]],["t/1526",[11,0.199,34,3.396,124,4.628]],["t/1528",[11,0.199,55,4.628,110,4.385]],["t/1530",[11,0.186,34,3.067,111,2.773,237,4.922]],["t/1531",[11,0.199,34,3.396,124,4.628]],["t/1533",[11,0.186,226,3.785,238,4.922,239,4.475]],["t/1535",[11,0.144,78,4.628,123,4.954,240,4.628]],["t/1536",[11,0.217,205,4.181,240,4.181]],["t/1538",[11,0.217,240,4.181,241,4.922]],["t/1540",[11,0.144,45,4.029,209,4.954,239,4.954]],["t/1542",[11,0.161,199,4.91,242,6.101]],["t/1544",[11,0.144,26,3.769,138,4.954,139,4.628]],["t/1546",[27,5]],["t/1549",[11,0.216,17,4.692]],["t/1551",[11,0.217,243,4.922,244,4.922]],["t/1553",[11,0.217,26,3.405,139,4.181]],["t/1555",[11,0.216,97,4.22]],["t/1556",[11,0.174,97,3.105,107,4.081,111,2.529,245,4.488]],["t/1558",[11,0.186,97,3.405,233,4.181,246,4.922]],["t/1560",[11,0.216,247,6.101]],["t/1561",[11,0.229,248,5.448]],["t/1563",[11,0.174,13,2.864,116,4.081,190,3.812,249,4.488]],["t/1565",[11,0.174,13,2.864,38,2.228,165,3.812,250,3.105]],["t/1567",[11,0.186,13,3.14,21,3.22,118,3.961]],["t/1569",[11,0.199,83,4.19,251,4.954]],["t/1571",[11,0.186,47,3.961,129,3.639,133,3.639]],["t/1573",[11,0.199,133,4.029,252,5.448]],["t/1575",[11,0.144,13,3.476,110,4.385,253,5.448]],["t/1576",[11,0.186,13,3.14,250,3.405,254,4.922]],["t/1578",[11,0.199,13,3.476,255,5.448]],["t/1580",[11,0.229,256,5.448]],["t/1582",[11,0.217,257,4.922,258,4.922]],["t/1584",[11,0.199,13,3.476,259,5.448]],["t/1586",[11,0.199,13,3.476,260,5.448]],["t/1588",[11,0.186,261,4.922,262,4.922,263,4.922]],["t/1590",[11,0.161,264,4.91,265,6.101]],["t/1591",[11,0.174,89,3.452,233,3.812,264,3.612,266,4.488]],["t/1593",[11,0.199,264,4.385,267,5.448]],["t/1595",[11,0.199,92,4.628,264,4.385]],["t/1597",[11,0.161,13,3.893,268,6.101]],["t/1598",[11,0.186,13,3.14,79,4.475,183,4.475]],["t/1600",[11,0.186,129,3.639,269,4.922,270,4.922]],["t/1602",[11,0.199,271,5.448,272,5.448]],["t/1604",[11,0.199,34,3.396,224,4.628]],["t/1605",[11,0.217,185,4.475,229,4.475]],["t/1607",[11,0.186,34,3.067,224,4.181,251,4.475]],["t/1609",[11,0.161,273,5.182,274,6.101]],["t/1612",[11,0.183,108,5.125]],["t/1614",[11,0.183,97,4.795]],["t/1616",[11,0.247,199,3.071]],["t/1617",[11,0.183,108,5.125]],["t/1619",[11,0.183,97,4.795]],["t/1621",[11,0.199,15,2.965,199,4.385]],["t/1622",[11,0.217,109,3.639,250,3.405]],["t/1624",[11,0.199,82,4.385,133,4.029]],["t/1626",[11,0.199,250,3.769,275,4.954]],["t/1628",[11,0.216,276,5.547]],["t/1630",[11,0.199,83,4.19,129,4.029]],["t/1632",[11,0.206,277,4.081,278,4.081,279,4.081]],["t/1634",[11,0.183,28,5.331]],["t/1636",[11,0.183,273,5.888]],["t/1638",[11,0.183,15,3.772]],["t/1639",[11,0.217,109,3.639,250,3.405]],["t/1641",[11,0.199,82,4.385,133,4.029]],["t/1643",[11,0.199,250,3.769,275,4.954]],["t/1645",[11,0.216,276,5.547]],["t/1647",[11,0.199,83,4.19,129,4.029]],["t/1649",[11,0.206,277,4.081,278,4.081,279,4.081]],["t/1651",[11,0.183,28,5.331]],["t/1653",[11,0.183,273,5.888]],["t/1657",[250,4.22,280,6.101,281,6.101]],["t/1659",[282,8.023]],["t/1660",[250,4.795,283,6.931]],["t/1663",[131,6.302,284,6.931]]],"invertedIndex":[["",{"_index":11,"t":{"855":{"position":[[0,4],[5,7]]},"862":{"position":[[0,5]]},"869":{"position":[[0,8]]},"876":{"position":[[0,8]]},"885":{"position":[[0,9]]},"892":{"position":[[0,8]]},"899":{"position":[[0,9]]},"906":{"position":[[0,5]]},"913":{"position":[[0,4]]},"923":{"position":[[0,1]]},"925":{"position":[[0,1]]},"927":{"position":[[0,1]]},"928":{"position":[[0,1],[2,1]]},"930":{"position":[[0,1],[2,1]]},"932":{"position":[[0,1]]},"933":{"position":[[0,1],[2,1]]},"935":{"position":[[0,1],[2,1]]},"937":{"position":[[0,1],[5,2]]},"939":{"position":[[0,1]]},"943":{"position":[[0,1]]},"944":{"position":[[0,1],[2,1]]},"946":{"position":[[0,1],[2,1]]},"948":{"position":[[0,1],[3,2],[9,11]]},"949":{"position":[[0,1],[2,1],[7,6]]},"951":{"position":[[0,1],[2,1],[11,10]]},"953":{"position":[[0,1],[2,1]]},"955":{"position":[[0,1],[2,1]]},"957":{"position":[[0,1]]},"959":{"position":[[0,1]]},"963":{"position":[[0,1]]},"965":{"position":[[0,1]]},"966":{"position":[[0,1],[2,1],[4,6]]},"968":{"position":[[0,1],[2,1],[4,10]]},"970":{"position":[[0,1],[2,1]]},"972":{"position":[[0,1],[2,1]]},"974":{"position":[[0,1],[2,1]]},"978":{"position":[[0,1]]},"980":{"position":[[0,1]]},"982":{"position":[[0,1],[2,1],[4,6]]},"984":{"position":[[0,1],[2,1],[4,10]]},"986":{"position":[[0,1],[2,1]]},"989":{"position":[[0,1]]},"991":{"position":[[0,1]]},"992":{"position":[[0,1],[2,1],[4,6]]},"994":{"position":[[0,1],[2,1]]},"998":{"position":[[0,1],[3,6],[10,5]]},"1000":{"position":[[0,1],[2,1],[10,5],[16,8]]},"1002":{"position":[[0,1],[2,1],[10,13]]},"1004":{"position":[[0,1],[2,1]]},"1006":{"position":[[0,1],[2,1]]},"1008":{"position":[[0,1],[2,1]]},"1010":{"position":[[0,1],[2,1],[10,13]]},"1012":{"position":[[0,1],[2,1]]},"1014":{"position":[[0,1]]},"1016":{"position":[[0,1],[9,6],[16,5]]},"1018":{"position":[[0,1]]},"1021":{"position":[[0,1]]},"1023":{"position":[[0,1]]},"1024":{"position":[[0,1],[2,1],[4,6]]},"1026":{"position":[[0,1],[2,1],[4,10]]},"1028":{"position":[[0,1],[2,1],[12,11]]},"1030":{"position":[[0,1],[2,1]]},"1033":{"position":[[0,1]]},"1035":{"position":[[0,1]]},"1036":{"position":[[0,1],[2,1],[4,6]]},"1038":{"position":[[0,1],[2,1]]},"1040":{"position":[[0,1],[2,1]]},"1043":{"position":[[0,1]]},"1045":{"position":[[0,1]]},"1046":{"position":[[0,1],[2,1],[4,6]]},"1048":{"position":[[0,1],[2,1],[4,4]]},"1050":{"position":[[0,1],[2,1],[4,4]]},"1052":{"position":[[0,1],[2,1]]},"1055":{"position":[[0,1]]},"1057":{"position":[[0,1]]},"1058":{"position":[[0,1],[2,1],[4,6]]},"1060":{"position":[[0,1],[2,1]]},"1062":{"position":[[0,1],[2,1],[4,4]]},"1064":{"position":[[0,1],[2,1]]},"1067":{"position":[[0,1],[3,3]]},"1071":{"position":[[0,1]]},"1073":{"position":[[0,1]]},"1074":{"position":[[0,1],[2,1]]},"1076":{"position":[[0,1],[2,1],[11,10]]},"1078":{"position":[[0,1]]},"1079":{"position":[[0,1],[2,1],[4,6],[16,10]]},"1081":{"position":[[0,1],[2,1]]},"1083":{"position":[[0,1],[2,1]]},"1085":{"position":[[0,1],[2,1]]},"1087":{"position":[[0,1],[3,4]]},"1089":{"position":[[0,1],[2,1]]},"1092":{"position":[[0,1]]},"1094":{"position":[[0,1]]},"1096":{"position":[[0,1]]},"1097":{"position":[[0,1],[2,1]]},"1099":{"position":[[0,1],[2,1]]},"1101":{"position":[[0,1],[2,1]]},"1103":{"position":[[0,1],[2,1]]},"1105":{"position":[[0,1]]},"1107":{"position":[[0,1]]},"1110":{"position":[[0,1],[3,2],[6,4]]},"1112":{"position":[[0,1],[3,4],[8,7]]},"1114":{"position":[[0,1],[2,1],[6,6],[13,6]]},"1116":{"position":[[0,1],[2,1],[7,6]]},"1118":{"position":[[0,1]]},"1119":{"position":[[0,1],[2,1],[6,3],[10,6]]},"1121":{"position":[[0,1],[2,1],[7,10]]},"1123":{"position":[[0,1],[2,1],[10,5]]},"1125":{"position":[[0,1],[2,1]]},"1127":{"position":[[0,1],[2,1]]},"1129":{"position":[[0,1],[2,1]]},"1131":{"position":[[0,1],[2,1]]},"1133":{"position":[[0,1]]},"1137":{"position":[[0,1],[3,7]]},"1139":{"position":[[0,1],[2,1],[4,7]]},"1141":{"position":[[0,1],[2,1]]},"1143":{"position":[[0,1],[2,1],[4,6],[14,7]]},"1145":{"position":[[0,1],[2,1],[4,7]]},"1147":{"position":[[0,1],[3,4],[8,9]]},"1149":{"position":[[0,1],[4,4],[9,5]]},"1151":{"position":[[0,1],[4,4],[9,4]]},"1153":{"position":[[0,1],[4,4],[9,4]]},"1155":{"position":[[0,1],[4,6]]},"1159":{"position":[[0,1],[4,7]]},"1167":{"position":[[0,1]]},"1169":{"position":[[0,1]]},"1171":{"position":[[0,1]]},"1173":{"position":[[0,1]]},"1174":{"position":[[0,1],[2,1]]},"1176":{"position":[[0,1],[2,1],[8,5]]},"1178":{"position":[[0,1],[2,1]]},"1180":{"position":[[0,1]]},"1184":{"position":[[0,1]]},"1186":{"position":[[0,1]]},"1187":{"position":[[0,1],[2,1],[4,6]]},"1189":{"position":[[0,1],[2,1],[4,10]]},"1191":{"position":[[0,1],[2,1]]},"1193":{"position":[[0,1],[2,1]]},"1195":{"position":[[0,1],[2,1]]},"1199":{"position":[[0,1],[3,7]]},"1201":{"position":[[0,1],[7,7]]},"1202":{"position":[[0,1],[2,1],[8,7]]},"1204":{"position":[[0,1],[2,1],[9,7]]},"1206":{"position":[[0,1],[6,7],[14,7]]},"1208":{"position":[[0,1],[3,14]]},"1211":{"position":[[0,1]]},"1213":{"position":[[0,1]]},"1215":{"position":[[0,1],[2,1],[4,6]]},"1217":{"position":[[0,1],[2,1],[4,10]]},"1219":{"position":[[0,1],[2,1]]},"1223":{"position":[[0,1]]},"1224":{"position":[[0,1],[2,1]]},"1226":{"position":[[0,1],[2,1]]},"1228":{"position":[[0,1],[3,2],[9,11]]},"1229":{"position":[[0,1],[2,1],[7,6]]},"1231":{"position":[[0,1],[2,1],[11,10]]},"1233":{"position":[[0,1],[2,1]]},"1235":{"position":[[0,1],[2,1]]},"1237":{"position":[[0,1]]},"1239":{"position":[[0,1]]},"1242":{"position":[[0,1]]},"1244":{"position":[[0,1]]},"1245":{"position":[[0,1],[2,1],[4,6]]},"1247":{"position":[[0,1],[2,1]]},"1250":{"position":[[0,1]]},"1252":{"position":[[0,1]]},"1253":{"position":[[0,1],[2,1],[4,6]]},"1255":{"position":[[0,1],[2,1]]},"1257":{"position":[[0,1],[2,1]]},"1261":{"position":[[0,1],[3,6],[10,5]]},"1263":{"position":[[0,1],[2,1],[10,5],[16,8]]},"1265":{"position":[[0,1],[2,1],[10,13]]},"1267":{"position":[[0,1],[2,1]]},"1269":{"position":[[0,1],[2,1]]},"1271":{"position":[[0,1],[2,1]]},"1273":{"position":[[0,1],[2,1],[10,13]]},"1275":{"position":[[0,1],[2,1]]},"1277":{"position":[[0,1]]},"1279":{"position":[[0,1],[9,6],[16,5]]},"1281":{"position":[[0,1]]},"1284":{"position":[[0,1]]},"1286":{"position":[[0,1]]},"1287":{"position":[[0,1],[2,1],[4,6]]},"1289":{"position":[[0,1],[2,1],[4,10]]},"1291":{"position":[[0,1],[2,1],[12,11]]},"1293":{"position":[[0,1],[2,1]]},"1297":{"position":[[0,1]]},"1299":{"position":[[0,1]]},"1300":{"position":[[0,1],[2,1]]},"1302":{"position":[[0,1],[2,1],[11,10]]},"1304":{"position":[[0,1]]},"1305":{"position":[[0,1],[2,1],[4,6],[16,10]]},"1307":{"position":[[0,1],[2,1]]},"1309":{"position":[[0,1],[2,1]]},"1311":{"position":[[0,1],[2,1]]},"1313":{"position":[[0,1],[3,4]]},"1315":{"position":[[0,1],[2,1]]},"1318":{"position":[[0,1]]},"1320":{"position":[[0,1]]},"1321":{"position":[[0,1],[2,1],[4,6]]},"1323":{"position":[[0,1],[2,1],[4,4]]},"1325":{"position":[[0,1],[2,1],[4,4]]},"1327":{"position":[[0,1],[2,1]]},"1330":{"position":[[0,1]]},"1332":{"position":[[0,1]]},"1333":{"position":[[0,1],[2,1],[4,6]]},"1335":{"position":[[0,1],[2,1]]},"1337":{"position":[[0,1],[2,1],[4,4]]},"1339":{"position":[[0,1],[2,1]]},"1342":{"position":[[0,1],[3,6],[13,4],[22,8],[31,4]]},"1344":{"position":[[0,1],[7,4]]},"1345":{"position":[[0,1],[2,1],[4,6],[11,3],[15,7],[23,5],[32,4]]},"1349":{"position":[[0,1],[2,1],[4,6],[11,3],[15,4],[20,8],[29,2],[36,4]]},"1353":{"position":[[0,1],[2,1],[4,6],[11,3],[15,5],[21,10],[35,4]]},"1357":{"position":[[0,1],[3,4]]},"1368":{"position":[[0,2],[9,4]]},"1374":{"position":[[0,2],[3,3],[7,4],[15,7]]},"1376":{"position":[[4,9]]},"1380":{"position":[[5,6]]},"1382":{"position":[[0,2]]},"1385":{"position":[[0,1],[3,3]]},"1388":{"position":[[0,1],[6,7]]},"1390":{"position":[[0,1]]},"1392":{"position":[[0,1],[2,1]]},"1394":{"position":[[0,1]]},"1396":{"position":[[0,1]]},"1397":{"position":[[0,1],[2,1]]},"1399":{"position":[[0,1],[2,1],[12,3]]},"1401":{"position":[[0,1]]},"1403":{"position":[[0,1]]},"1405":{"position":[[0,1]]},"1408":{"position":[[0,1]]},"1410":{"position":[[0,1]]},"1412":{"position":[[0,1]]},"1413":{"position":[[0,1],[2,1],[9,3]]},"1415":{"position":[[0,1],[2,1],[15,3]]},"1417":{"position":[[0,1],[2,1]]},"1419":{"position":[[0,1],[2,1]]},"1421":{"position":[[0,1],[2,1]]},"1423":{"position":[[0,1],[2,1]]},"1425":{"position":[[0,1]]},"1426":{"position":[[0,1],[2,1]]},"1428":{"position":[[0,1]]},"1433":{"position":[[0,1],[3,7]]},"1435":{"position":[[0,1],[7,7]]},"1436":{"position":[[0,1],[2,1],[8,7]]},"1438":{"position":[[0,1],[2,1],[9,7]]},"1440":{"position":[[0,1],[6,7],[14,7]]},"1442":{"position":[[0,1],[3,14]]},"1445":{"position":[[0,1]]},"1447":{"position":[[0,1]]},"1449":{"position":[[0,1]]},"1451":{"position":[[0,1]]},"1453":{"position":[[0,1]]},"1455":{"position":[[0,1]]},"1457":{"position":[[0,1]]},"1459":{"position":[[0,1]]},"1462":{"position":[[0,1]]},"1464":{"position":[[0,1]]},"1465":{"position":[[0,1],[2,1],[4,4]]},"1467":{"position":[[0,1],[2,1]]},"1469":{"position":[[0,1]]},"1471":{"position":[[0,1],[2,1],[6,9]]},"1473":{"position":[[0,1],[2,1],[6,11]]},"1475":{"position":[[0,1]]},"1476":{"position":[[0,1],[2,1]]},"1478":{"position":[[0,1],[2,1]]},"1480":{"position":[[0,1]]},"1481":{"position":[[0,1],[2,1]]},"1483":{"position":[[0,1],[2,1]]},"1485":{"position":[[0,1]]},"1486":{"position":[[0,1],[2,1]]},"1488":{"position":[[0,1],[2,1]]},"1490":{"position":[[0,1]]},"1491":{"position":[[0,1],[2,1]]},"1493":{"position":[[0,1]]},"1498":{"position":[[0,1]]},"1500":{"position":[[0,1]]},"1502":{"position":[[0,1]]},"1503":{"position":[[0,1],[2,1],[8,6]]},"1505":{"position":[[0,1],[2,1],[7,6]]},"1507":{"position":[[0,1],[11,6]]},"1509":{"position":[[0,1]]},"1510":{"position":[[0,1],[2,1]]},"1512":{"position":[[0,1],[2,1],[10,7]]},"1514":{"position":[[0,1],[2,1]]},"1516":{"position":[[0,1],[2,1]]},"1518":{"position":[[0,1]]},"1520":{"position":[[0,1]]},"1523":{"position":[[0,1],[3,4],[8,6]]},"1525":{"position":[[0,1],[9,3],[13,4]]},"1526":{"position":[[0,1],[2,1]]},"1528":{"position":[[0,1],[2,1]]},"1530":{"position":[[0,1],[6,3]]},"1531":{"position":[[0,1],[2,1]]},"1533":{"position":[[0,1],[2,1]]},"1535":{"position":[[0,1]]},"1536":{"position":[[0,1],[2,1],[6,4]]},"1538":{"position":[[0,1],[2,1],[6,6]]},"1540":{"position":[[0,1]]},"1542":{"position":[[0,1]]},"1544":{"position":[[0,1]]},"1549":{"position":[[0,1],[3,3]]},"1551":{"position":[[0,1],[2,1],[4,3]]},"1553":{"position":[[0,1],[2,1],[4,3]]},"1555":{"position":[[0,1],[3,3]]},"1556":{"position":[[0,1],[2,1]]},"1558":{"position":[[0,1],[2,1]]},"1560":{"position":[[0,1],[3,3]]},"1561":{"position":[[0,1],[2,1],[6,3]]},"1563":{"position":[[0,1],[2,1]]},"1565":{"position":[[0,1],[2,1]]},"1567":{"position":[[0,1],[2,1]]},"1569":{"position":[[0,1],[2,1]]},"1571":{"position":[[0,1],[2,1]]},"1573":{"position":[[0,1],[2,1]]},"1575":{"position":[[0,1]]},"1576":{"position":[[0,1],[2,1]]},"1578":{"position":[[0,1],[2,1]]},"1580":{"position":[[0,1],[2,1],[8,11]]},"1582":{"position":[[0,1],[2,1],[8,11]]},"1584":{"position":[[0,1],[2,1]]},"1586":{"position":[[0,1],[2,1]]},"1588":{"position":[[0,1],[2,1]]},"1590":{"position":[[0,1]]},"1591":{"position":[[0,1],[2,1]]},"1593":{"position":[[0,1],[2,1]]},"1595":{"position":[[0,1],[2,1]]},"1597":{"position":[[0,1]]},"1598":{"position":[[0,1],[2,1]]},"1600":{"position":[[0,1],[2,1]]},"1602":{"position":[[0,1],[2,1]]},"1604":{"position":[[0,1],[3,3]]},"1605":{"position":[[0,1],[2,1],[4,6]]},"1607":{"position":[[0,1],[2,1]]},"1609":{"position":[[0,1]]},"1612":{"position":[[0,1]]},"1614":{"position":[[0,1]]},"1616":{"position":[[0,1],[6,6],[13,6],[20,3],[24,1],[26,3],[30,4]]},"1617":{"position":[[0,1]]},"1619":{"position":[[0,1]]},"1621":{"position":[[0,1],[6,4]]},"1622":{"position":[[0,1],[2,1],[9,2]]},"1624":{"position":[[0,1],[2,1]]},"1626":{"position":[[0,1],[2,1]]},"1628":{"position":[[0,1],[2,1]]},"1630":{"position":[[0,1],[2,1]]},"1632":{"position":[[0,1],[3,4],[11,7]]},"1634":{"position":[[0,1]]},"1636":{"position":[[0,1]]},"1638":{"position":[[3,4]]},"1639":{"position":[[0,1],[2,1],[9,2]]},"1641":{"position":[[0,1],[2,1]]},"1643":{"position":[[0,1],[2,1]]},"1645":{"position":[[0,1],[2,1]]},"1647":{"position":[[0,1],[2,1]]},"1649":{"position":[[0,1],[3,4],[11,7]]},"1651":{"position":[[0,1]]},"1653":{"position":[[0,1]]}}}],["一万句",{"_index":6,"t":{"840":{"position":[[3,3]]}}}],["一个",{"_index":75,"t":{"1028":{"position":[[7,2]]},"1291":{"position":[[7,2]]},"1507":{"position":[[5,2]]}}}],["一句",{"_index":4,"t":{"840":{"position":[[0,2]]}}}],["不到",{"_index":178,"t":{"1385":{"position":[[10,2]]}}}],["中",{"_index":165,"t":{"1368":{"position":[[3,1]]},"1505":{"position":[[16,1]]},"1565":{"position":[[8,1]]}}}],["主程序",{"_index":37,"t":{"953":{"position":[[4,3]]},"970":{"position":[[4,3]]},"1191":{"position":[[4,3]]},"1233":{"position":[[4,3]]}}}],["举例",{"_index":282,"t":{"1659":{"position":[[0,2]]}}}],["事件",{"_index":127,"t":{"1151":{"position":[[16,2]]}}}],["交互",{"_index":146,"t":{"1199":{"position":[[11,2]]},"1433":{"position":[[11,2]]}}}],["人类",{"_index":0,"t":{"836":{"position":[[0,2]]}}}],["代码",{"_index":43,"t":{"965":{"position":[[3,2]]},"980":{"position":[[3,2]]},"991":{"position":[[3,2]]},"1023":{"position":[[3,2]]},"1035":{"position":[[3,2]]},"1045":{"position":[[3,2]]},"1057":{"position":[[3,2]]},"1186":{"position":[[3,2]]},"1213":{"position":[[3,2]]},"1244":{"position":[[3,2]]},"1252":{"position":[[3,2]]},"1286":{"position":[[3,2]]},"1320":{"position":[[3,2]]},"1332":{"position":[[3,2]]}}}],["任意",{"_index":170,"t":{"1376":{"position":[[17,2]]}}}],["优化",{"_index":45,"t":{"974":{"position":[[4,2]]},"1195":{"position":[[4,2]]},"1204":{"position":[[17,2]]},"1438":{"position":[[17,2]]},"1480":{"position":[[5,2]]},"1540":{"position":[[5,2]]}}}],["优缺点",{"_index":156,"t":{"1347":{"position":[[0,3]]},"1351":{"position":[[0,3]]},"1355":{"position":[[0,3]]}}}],["传递",{"_index":112,"t":{"1123":{"position":[[4,2]]}}}],["体",{"_index":163,"t":{"1366":{"position":[[2,1]]},"1380":{"position":[[3,1]]},"1396":{"position":[[9,1]]},"1397":{"position":[[8,1]]},"1399":{"position":[[8,1]]},"1455":{"position":[[5,1]]},"1467":{"position":[[6,1]]},"1476":{"position":[[8,1]]}}}],["何时",{"_index":166,"t":{"1368":{"position":[[4,2]]}}}],["作为",{"_index":277,"t":{"1632":{"position":[[8,2]]},"1649":{"position":[[8,2]]}}}],["使用",{"_index":111,"t":{"1119":{"position":[[4,2]]},"1121":{"position":[[4,2]]},"1131":{"position":[[4,2]]},"1204":{"position":[[5,2]]},"1368":{"position":[[6,2]]},"1370":{"position":[[4,2]]},"1413":{"position":[[4,2]]},"1415":{"position":[[12,2]]},"1417":{"position":[[4,2]]},"1438":{"position":[[5,2]]},"1449":{"position":[[5,2]]},"1481":{"position":[[4,2]]},"1483":{"position":[[4,2]]},"1509":{"position":[[3,2]]},"1525":{"position":[[3,2]]},"1530":{"position":[[3,2]]},"1556":{"position":[[4,2]]}}}],["依赖",{"_index":22,"t":{"930":{"position":[[4,2]]},"935":{"position":[[6,2]]}}}],["保存",{"_index":94,"t":{"1083":{"position":[[10,2]]},"1309":{"position":[[10,2]]}}}],["信号处理",{"_index":276,"t":{"1628":{"position":[[4,4]]},"1645":{"position":[[4,4]]}}}],["信息",{"_index":135,"t":{"1169":{"position":[[5,2]]},"1171":{"position":[[5,2]]},"1178":{"position":[[7,2]]},"1397":{"position":[[11,2]]},"1457":{"position":[[7,2]]}}}],["修改",{"_index":102,"t":{"1101":{"position":[[4,2]]},"1394":{"position":[[5,2]]}}}],["值",{"_index":180,"t":{"1392":{"position":[[12,1]]}}}],["停止",{"_index":93,"t":{"1083":{"position":[[4,2]]},"1309":{"position":[[4,2]]}}}],["僵尸",{"_index":281,"t":{"1657":{"position":[[2,2]]}}}],["儿子",{"_index":284,"t":{"1663":{"position":[[2,2]]}}}],["关键",{"_index":50,"t":{"998":{"position":[[19,2]]},"1261":{"position":[[19,2]]}}}],["其他",{"_index":196,"t":{"1425":{"position":[[3,2]]}}}],["兼容性",{"_index":62,"t":{"1006":{"position":[[13,3]]},"1269":{"position":[[13,3]]}}}],["内存",{"_index":129,"t":{"1167":{"position":[[3,2]]},"1174":{"position":[[5,2]]},"1571":{"position":[[7,2]]},"1600":{"position":[[4,2]]},"1630":{"position":[[4,2]]},"1647":{"position":[[4,2]]}}}],["内核",{"_index":85,"t":{"1078":{"position":[[3,2]]},"1304":{"position":[[3,2]]}}}],["内置",{"_index":200,"t":{"1451":{"position":[[6,2]]}}}],["冒号",{"_index":19,"t":{"925":{"position":[[6,2],[15,2]]},"927":{"position":[[6,2]]},"932":{"position":[[7,2]]}}}],["函数",{"_index":46,"t":{"974":{"position":[[6,2]]},"1195":{"position":[[6,2]]},"1364":{"position":[[2,2]]}}}],["分离",{"_index":267,"t":{"1593":{"position":[[4,2]]}}}],["切换",{"_index":261,"t":{"1588":{"position":[[4,2]]}}}],["列表",{"_index":195,"t":{"1423":{"position":[[6,2]]}}}],["创建",{"_index":228,"t":{"1507":{"position":[[3,2]]}}}],["初始化",{"_index":87,"t":{"1079":{"position":[[11,3]]},"1305":{"position":[[11,3]]}}}],["判断",{"_index":147,"t":{"1201":{"position":[[17,2]]},"1204":{"position":[[7,2]]},"1382":{"position":[[3,2]]},"1435":{"position":[[17,2]]},"1438":{"position":[[7,2]]}}}],["功能",{"_index":12,"t":{"856":{"position":[[0,2]]},"863":{"position":[[0,2]]},"870":{"position":[[0,2]]},"877":{"position":[[0,2]]},"886":{"position":[[0,2]]},"893":{"position":[[0,2]]},"900":{"position":[[0,2]]},"907":{"position":[[0,2]]},"914":{"position":[[0,2]]}}}],["加载",{"_index":92,"t":{"1081":{"position":[[13,2]]},"1307":{"position":[[13,2]]},"1595":{"position":[[4,2]]}}}],["包",{"_index":107,"t":{"1110":{"position":[[11,1]]},"1556":{"position":[[6,1]]}}}],["化",{"_index":56,"t":{"1004":{"position":[[7,1]]},"1085":{"position":[[8,1]]},"1267":{"position":[[7,1]]},"1311":{"position":[[8,1]]}}}],["区别",{"_index":16,"t":{"881":{"position":[[0,2]]},"925":{"position":[[19,2]]}}}],["协议",{"_index":60,"t":{"1006":{"position":[[5,2]]},"1269":{"position":[[5,2]]}}}],["单",{"_index":18,"t":{"925":{"position":[[5,1]]},"927":{"position":[[5,1]]}}}],["单元测试",{"_index":220,"t":{"1491":{"position":[[4,4]]}}}],["南",{"_index":2,"t":{"838":{"position":[[0,1]]}}}],["历史",{"_index":243,"t":{"1551":{"position":[[8,2]]}}}],["原则",{"_index":51,"t":{"998":{"position":[[21,2]]},"1261":{"position":[[21,2]]}}}],["原理",{"_index":224,"t":{"1500":{"position":[[5,2]]},"1604":{"position":[[9,2]]},"1607":{"position":[[8,2]]}}}],["参数",{"_index":190,"t":{"1415":{"position":[[9,2]]},"1423":{"position":[[8,2]]},"1563":{"position":[[7,2]]}}}],["参考",{"_index":273,"t":{"1609":{"position":[[3,2]]},"1636":{"position":[[3,2]]},"1653":{"position":[[3,2]]}}}],["双",{"_index":20,"t":{"925":{"position":[[14,1]]},"932":{"position":[[6,1]]}}}],["反",{"_index":72,"t":{"1016":{"position":[[3,1]]},"1279":{"position":[[3,1]]}}}],["反射",{"_index":179,"t":{"1388":{"position":[[3,2]]},"1390":{"position":[[3,2]]},"1394":{"position":[[3,2]]},"1396":{"position":[[3,2]]},"1401":{"position":[[3,2]]},"1403":{"position":[[3,2]]},"1405":{"position":[[3,2]]}}}],["发展",{"_index":244,"t":{"1551":{"position":[[11,2]]}}}],["变量",{"_index":47,"t":{"974":{"position":[[9,2]]},"1195":{"position":[[9,2]]},"1392":{"position":[[6,2]]},"1571":{"position":[[4,2]]}}}],["变量值",{"_index":181,"t":{"1394":{"position":[[7,3]]}}}],["可扩展性",{"_index":54,"t":{"1002":{"position":[[5,4]]},"1265":{"position":[[5,4]]}}}],["司法",{"_index":7,"t":{"846":{"position":[[0,2]]}}}],["启动",{"_index":248,"t":{"1561":{"position":[[4,2]]}}}],["命令",{"_index":118,"t":{"1127":{"position":[[10,2]]},"1131":{"position":[[12,2]]},"1417":{"position":[[7,2]]},"1567":{"position":[[8,2]]}}}],["命令行",{"_index":189,"t":{"1415":{"position":[[6,3]]}}}],["命名",{"_index":48,"t":{"974":{"position":[[11,2]]},"1195":{"position":[[11,2]]}}}],["哈希",{"_index":99,"t":{"1097":{"position":[[6,2]]},"1103":{"position":[[6,2]]}}}],["器",{"_index":71,"t":{"1014":{"position":[[5,1]]},"1277":{"position":[[5,1]]}}}],["回收",{"_index":131,"t":{"1167":{"position":[[8,2]]},"1663":{"position":[[0,2]]}}}],["场景",{"_index":26,"t":{"937":{"position":[[13,2]]},"1105":{"position":[[5,2]]},"1145":{"position":[[15,2]]},"1370":{"position":[[7,2]]},"1372":{"position":[[6,2]]},"1509":{"position":[[5,2]]},"1544":{"position":[[7,2]]},"1553":{"position":[[9,2]]}}}],["垃圾",{"_index":130,"t":{"1167":{"position":[[6,2]]}}}],["基本",{"_index":21,"t":{"928":{"position":[[4,2]]},"933":{"position":[[4,2]]},"1096":{"position":[[3,2]]},"1112":{"position":[[16,2]]},"1390":{"position":[[6,2]]},"1412":{"position":[[3,2]]},"1449":{"position":[[3,2]]},"1502":{"position":[[3,2]]},"1507":{"position":[[7,2]]},"1567":{"position":[[4,2]]}}}],["基本功能",{"_index":247,"t":{"1560":{"position":[[7,4]]}}}],["基础",{"_index":124,"t":{"1141":{"position":[[4,2]]},"1526":{"position":[[4,2]]},"1531":{"position":[[4,2]]}}}],["堆栈",{"_index":134,"t":{"1169":{"position":[[3,2]]}}}],["增加",{"_index":74,"t":{"1028":{"position":[[4,2]]},"1129":{"position":[[4,2]]},"1201":{"position":[[4,2]]},"1291":{"position":[[4,2]]},"1435":{"position":[[4,2]]}}}],["增强",{"_index":142,"t":{"1176":{"position":[[5,2]]}}}],["处理",{"_index":143,"t":{"1176":{"position":[[13,2]]},"1396":{"position":[[5,2]]},"1421":{"position":[[4,2]]},"1475":{"position":[[7,2]]},"1478":{"position":[[8,2]]},"1488":{"position":[[8,2]]}}}],["处理错误",{"_index":203,"t":{"1457":{"position":[[3,4]]}}}],["复合",{"_index":207,"t":{"1475":{"position":[[3,2]]}}}],["多",{"_index":254,"t":{"1576":{"position":[[4,1]]}}}],["多个",{"_index":121,"t":{"1131":{"position":[[10,2]]}}}],["多线程",{"_index":255,"t":{"1578":{"position":[[4,3]]}}}],["子",{"_index":191,"t":{"1417":{"position":[[6,1]]}}}],["字",{"_index":182,"t":{"1397":{"position":[[9,1]]}}}],["存储",{"_index":81,"t":{"1073":{"position":[[5,2]]},"1074":{"position":[[4,2]]},"1299":{"position":[[5,2]]},"1300":{"position":[[4,2]]}}}],["孤儿",{"_index":283,"t":{"1660":{"position":[[0,2]]}}}],["安装",{"_index":97,"t":{"1094":{"position":[[3,2]]},"1410":{"position":[[3,2]]},"1447":{"position":[[3,2]]},"1555":{"position":[[6,2]]},"1556":{"position":[[10,2]]},"1558":{"position":[[8,2]]},"1614":{"position":[[3,2]]},"1619":{"position":[[3,2]]}}}],["完整",{"_index":222,"t":{"1495":{"position":[[3,2]]}}}],["定义",{"_index":35,"t":{"949":{"position":[[4,2]]},"1229":{"position":[[4,2]]},"1415":{"position":[[4,2]]}}}],["定时",{"_index":95,"t":{"1085":{"position":[[4,2]]},"1311":{"position":[[4,2]]}}}],["实现",{"_index":34,"t":{"948":{"position":[[6,2]]},"951":{"position":[[4,2]]},"1228":{"position":[[6,2]]},"1231":{"position":[[4,2]]},"1471":{"position":[[4,2]]},"1473":{"position":[[4,2]]},"1525":{"position":[[18,2]]},"1526":{"position":[[6,2]]},"1530":{"position":[[12,2]]},"1531":{"position":[[6,2]]},"1604":{"position":[[7,2]]},"1607":{"position":[[6,2]]}}}],["实践",{"_index":188,"t":{"1405":{"position":[[7,2]]},"1493":{"position":[[5,2]]}}}],["实际",{"_index":138,"t":{"1173":{"position":[[3,2]]},"1544":{"position":[[3,2]]}}}],["客户端",{"_index":240,"t":{"1535":{"position":[[3,3]]},"1536":{"position":[[10,3]]},"1538":{"position":[[12,3]]}}}],["家庭",{"_index":10,"t":{"852":{"position":[[0,2]]}}}],["寄存器",{"_index":252,"t":{"1573":{"position":[[4,3]]}}}],["密码",{"_index":100,"t":{"1097":{"position":[[8,2]]},"1099":{"position":[[6,2]]},"1101":{"position":[[6,2]]}}}],["对比",{"_index":157,"t":{"1347":{"position":[[3,2]]},"1351":{"position":[[3,2]]},"1355":{"position":[[3,2]]},"1357":{"position":[[11,2]]}}}],["尝试",{"_index":90,"t":{"1081":{"position":[[9,2]]},"1307":{"position":[[9,2]]}}}],["局限性",{"_index":186,"t":{"1403":{"position":[[6,3]]}}}],["展示",{"_index":144,"t":{"1178":{"position":[[9,2]]}}}],["嵌套",{"_index":202,"t":{"1455":{"position":[[6,2]]},"1476":{"position":[[4,2]]}}}],["工作",{"_index":223,"t":{"1500":{"position":[[3,2]]}}}],["工具",{"_index":141,"t":{"1174":{"position":[[9,2]]}}}],["布尔",{"_index":193,"t":{"1421":{"position":[[6,2]]}}}],["带",{"_index":116,"t":{"1127":{"position":[[6,1]]},"1563":{"position":[[6,1]]}}}],["帧",{"_index":263,"t":{"1588":{"position":[[7,1]]}}}],["常见",{"_index":199,"t":{"1451":{"position":[[3,2]]},"1542":{"position":[[3,2]]},"1616":{"position":[[3,2]]},"1621":{"position":[[3,2]]}}}],["常见问题",{"_index":212,"t":{"1485":{"position":[[3,4]]}}}],["并发",{"_index":63,"t":{"1008":{"position":[[5,2]]},"1271":{"position":[[5,2]]}}}],["序列化",{"_index":206,"t":{"1464":{"position":[[7,3]]},"1465":{"position":[[8,3]]},"1469":{"position":[[8,3]]}}}],["库",{"_index":154,"t":{"1344":{"position":[[14,1]]},"1357":{"position":[[10,1]]},"1464":{"position":[[5,1]]},"1483":{"position":[[9,1]]},"1525":{"position":[[7,1]]}}}],["应用",{"_index":139,"t":{"1173":{"position":[[5,2]]},"1544":{"position":[[5,2]]},"1553":{"position":[[7,2]]}}}],["应用程序",{"_index":236,"t":{"1516":{"position":[[12,4]]}}}],["建议",{"_index":239,"t":{"1533":{"position":[[8,2]]},"1540":{"position":[[7,2]]}}}],["引用",{"_index":215,"t":{"1486":{"position":[[6,2]]}}}],["引言",{"_index":204,"t":{"1462":{"position":[[3,2]]}}}],["循环",{"_index":214,"t":{"1486":{"position":[[4,2]]}}}],["微内核",{"_index":29,"t":{"943":{"position":[[3,3]]},"953":{"position":[[10,3]]},"970":{"position":[[10,3]]},"1191":{"position":[[10,3]]},"1223":{"position":[[3,3]]},"1233":{"position":[[10,3]]}}}],["性",{"_index":67,"t":{"1010":{"position":[[8,1]]},"1273":{"position":[[8,1]]}}}],["性能",{"_index":209,"t":{"1480":{"position":[[3,2]]},"1540":{"position":[[3,2]]}}}],["总结",{"_index":27,"t":{"937":{"position":[[15,2]]},"959":{"position":[[3,2]]},"1018":{"position":[[3,2]]},"1107":{"position":[[3,2]]},"1163":{"position":[[0,2]]},"1239":{"position":[[3,2]]},"1281":{"position":[[3,2]]},"1359":{"position":[[0,2]]},"1428":{"position":[[3,2]]},"1430":{"position":[[2,2]]},"1520":{"position":[[3,2]]},"1546":{"position":[[0,2]]}}}],["恢复",{"_index":230,"t":{"1510":{"position":[[7,2]]}}}],["执行命令",{"_index":227,"t":{"1505":{"position":[[17,4]]}}}],["扩展",{"_index":40,"t":{"957":{"position":[[3,2]]},"1237":{"position":[[3,2]]}}}],["找",{"_index":177,"t":{"1385":{"position":[[9,1]]}}}],["技巧",{"_index":253,"t":{"1575":{"position":[[7,2]]}}}],["报错",{"_index":167,"t":{"1374":{"position":[[12,2]]}}}],["持久",{"_index":96,"t":{"1085":{"position":[[6,2]]},"1311":{"position":[[6,2]]}}}],["捕获",{"_index":257,"t":{"1582":{"position":[[4,2]]}}}],["接口",{"_index":169,"t":{"1376":{"position":[[1,2]]},"1471":{"position":[[15,2]]},"1473":{"position":[[17,2]]}}}],["接口类型",{"_index":208,"t":{"1478":{"position":[[4,4]]}}}],["控制",{"_index":275,"t":{"1626":{"position":[[6,2]]},"1643":{"position":[[6,2]]}}}],["推荐",{"_index":122,"t":{"1137":{"position":[[11,2]]},"1359":{"position":[[3,2]]},"1370":{"position":[[2,2]]},"1372":{"position":[[3,2]]}}}],["操作",{"_index":133,"t":{"1167":{"position":[[12,2]]},"1169":{"position":[[7,2]]},"1571":{"position":[[9,2]]},"1573":{"position":[[7,2]]},"1624":{"position":[[6,2]]},"1641":{"position":[[6,2]]}}}],["支持",{"_index":150,"t":{"1206":{"position":[[3,2]]},"1440":{"position":[[3,2]]},"1464":{"position":[[10,2]]}}}],["改动",{"_index":44,"t":{"965":{"position":[[5,2]]},"980":{"position":[[5,2]]},"991":{"position":[[5,2]]},"1023":{"position":[[5,2]]},"1035":{"position":[[5,2]]},"1045":{"position":[[5,2]]},"1057":{"position":[[5,2]]},"1186":{"position":[[5,2]]},"1213":{"position":[[5,2]]},"1244":{"position":[[5,2]]},"1252":{"position":[[5,2]]},"1286":{"position":[[5,2]]},"1320":{"position":[[5,2]]},"1332":{"position":[[5,2]]}}}],["数据格式",{"_index":61,"t":{"1006":{"position":[[8,4]]},"1269":{"position":[[8,4]]}}}],["文件",{"_index":82,"t":{"1074":{"position":[[6,2]]},"1300":{"position":[[6,2]]},"1624":{"position":[[4,2]]},"1641":{"position":[[4,2]]}}}],["文化",{"_index":8,"t":{"848":{"position":[[0,2]]}}}],["断点",{"_index":251,"t":{"1569":{"position":[[4,2]]},"1607":{"position":[[4,2]]}}}],["断言",{"_index":172,"t":{"1378":{"position":[[2,2]]}}}],["方向",{"_index":41,"t":{"957":{"position":[[5,2]]},"1237":{"position":[[5,2]]}}}],["方式",{"_index":123,"t":{"1137":{"position":[[13,2]]},"1535":{"position":[[8,2]]}}}],["方案",{"_index":279,"t":{"1632":{"position":[[22,2]]},"1649":{"position":[[22,2]]}}}],["方法",{"_index":164,"t":{"1366":{"position":[[3,2]]},"1385":{"position":[[12,2]]},"1401":{"position":[[7,2]]},"1415":{"position":[[19,2]]}}}],["日志",{"_index":77,"t":{"1060":{"position":[[4,2]]},"1335":{"position":[[4,2]]}}}],["时",{"_index":89,"t":{"1081":{"position":[[8,1]]},"1083":{"position":[[8,1]]},"1307":{"position":[[8,1]]},"1309":{"position":[[8,1]]},"1591":{"position":[[6,1]]}}}],["时间",{"_index":217,"t":{"1488":{"position":[[4,2]]}}}],["明史",{"_index":3,"t":{"838":{"position":[[1,2]]}}}],["是否",{"_index":104,"t":{"1103":{"position":[[8,2]]}}}],["普通",{"_index":161,"t":{"1364":{"position":[[0,2]]}}}],["更新",{"_index":106,"t":{"1103":{"position":[[12,2]]}}}],["替代",{"_index":278,"t":{"1632":{"position":[[20,2]]},"1649":{"position":[[20,2]]}}}],["最佳",{"_index":187,"t":{"1405":{"position":[[5,2]]},"1493":{"position":[[3,2]]}}}],["服务",{"_index":36,"t":{"951":{"position":[[8,2]]},"953":{"position":[[16,2]]},"970":{"position":[[16,2]]},"1038":{"position":[[4,2]]},"1048":{"position":[[8,2]]},"1060":{"position":[[6,2]]},"1081":{"position":[[6,2]]},"1083":{"position":[[6,2]]},"1191":{"position":[[16,2]]},"1231":{"position":[[8,2]]},"1233":{"position":[[16,2]]},"1255":{"position":[[4,2]]},"1307":{"position":[[6,2]]},"1309":{"position":[[6,2]]},"1323":{"position":[[8,2]]},"1335":{"position":[[6,2]]}}}],["机制",{"_index":49,"t":{"998":{"position":[[16,2]]},"1261":{"position":[[16,2]]}}}],["松",{"_index":52,"t":{"1000":{"position":[[6,1]]},"1263":{"position":[[6,1]]}}}],["构建",{"_index":136,"t":{"1171":{"position":[[3,2]]},"1178":{"position":[[5,2]]}}}],["查杀",{"_index":280,"t":{"1657":{"position":[[0,2]]}}}],["标准",{"_index":205,"t":{"1464":{"position":[[3,2]]},"1525":{"position":[[5,2]]},"1536":{"position":[[4,2]]}}}],["标志",{"_index":194,"t":{"1421":{"position":[[8,2]]}}}],["标签",{"_index":184,"t":{"1399":{"position":[[9,2]]},"1451":{"position":[[10,2]]},"1467":{"position":[[7,2]]}}}],["栈",{"_index":262,"t":{"1588":{"position":[[6,1]]}}}],["校验",{"_index":101,"t":{"1099":{"position":[[4,2]]}}}],["核心",{"_index":30,"t":{"943":{"position":[[6,2]]},"946":{"position":[[4,2]]},"949":{"position":[[14,2]]},"966":{"position":[[11,2]]},"982":{"position":[[11,2]]},"992":{"position":[[11,2]]},"1024":{"position":[[11,2]]},"1036":{"position":[[11,2]]},"1046":{"position":[[11,2]]},"1058":{"position":[[11,2]]},"1187":{"position":[[11,2]]},"1215":{"position":[[11,2]]},"1223":{"position":[[6,2]]},"1226":{"position":[[4,2]]},"1229":{"position":[[14,2]]},"1245":{"position":[[11,2]]},"1253":{"position":[[11,2]]},"1287":{"position":[[11,2]]},"1321":{"position":[[11,2]]},"1333":{"position":[[11,2]]}}}],["格式",{"_index":218,"t":{"1488":{"position":[[6,2]]}}}],["框架",{"_index":237,"t":{"1530":{"position":[[10,2]]}}}],["案例",{"_index":268,"t":{"1597":{"position":[[5,2]]}}}],["检查",{"_index":270,"t":{"1600":{"position":[[8,2]]}}}],["检测",{"_index":272,"t":{"1602":{"position":[[6,2]]}}}],["概述",{"_index":17,"t":{"923":{"position":[[3,2]]},"1092":{"position":[[3,2]]},"1388":{"position":[[14,2]]},"1498":{"position":[[3,2]]},"1549":{"position":[[7,2]]}}}],["模块",{"_index":84,"t":{"1076":{"position":[[8,2]]},"1302":{"position":[[8,2]]}}}],["模型",{"_index":64,"t":{"1008":{"position":[[7,2]]},"1271":{"position":[[7,2]]}}}],["模式",{"_index":73,"t":{"1016":{"position":[[4,2]]},"1208":{"position":[[18,2]]},"1279":{"position":[[4,2]]},"1442":{"position":[[18,2]]}}}],["死锁",{"_index":271,"t":{"1602":{"position":[[4,2]]}}}],["段",{"_index":183,"t":{"1397":{"position":[[10,1]]},"1598":{"position":[[4,1]]}}}],["池",{"_index":211,"t":{"1481":{"position":[[8,1]]}}}],["泄漏",{"_index":269,"t":{"1600":{"position":[[6,2]]}}}],["注册",{"_index":88,"t":{"1081":{"position":[[4,2]]},"1307":{"position":[[4,2]]}}}],["注意事项",{"_index":145,"t":{"1180":{"position":[[3,4]]},"1518":{"position":[[3,4]]}}}],["流式",{"_index":159,"t":{"1353":{"position":[[32,2]]}}}],["测试",{"_index":219,"t":{"1490":{"position":[[3,2]]}}}],["添加",{"_index":266,"t":{"1591":{"position":[[7,2]]}}}],["源码",{"_index":246,"t":{"1558":{"position":[[4,2]]}}}],["点",{"_index":258,"t":{"1582":{"position":[[6,1]]}}}],["版本",{"_index":235,"t":{"1516":{"position":[[9,2]]}}}],["特定",{"_index":234,"t":{"1516":{"position":[[7,2]]}}}],["特点",{"_index":32,"t":{"944":{"position":[[4,2]]},"1139":{"position":[[13,2]]},"1224":{"position":[[4,2]]},"1430":{"position":[[0,2]]}}}],["状态",{"_index":80,"t":{"1073":{"position":[[3,2]]},"1076":{"position":[[4,2]]},"1081":{"position":[[15,2]]},"1083":{"position":[[12,2]]},"1085":{"position":[[9,2]]},"1201":{"position":[[15,2]]},"1299":{"position":[[3,2]]},"1302":{"position":[[4,2]]},"1307":{"position":[[15,2]]},"1309":{"position":[[12,2]]},"1311":{"position":[[9,2]]},"1435":{"position":[[15,2]]}}}],["环境",{"_index":226,"t":{"1503":{"position":[[15,2]]},"1505":{"position":[[14,2]]},"1507":{"position":[[18,2]]},"1512":{"position":[[7,2]]},"1533":{"position":[[6,2]]}}}],["环境变量",{"_index":115,"t":{"1125":{"position":[[6,4]]},"1419":{"position":[[6,4]]}}}],["理解",{"_index":148,"t":{"1202":{"position":[[5,2]]},"1436":{"position":[[5,2]]}}}],["生产",{"_index":238,"t":{"1533":{"position":[[4,2]]}}}],["生成",{"_index":98,"t":{"1097":{"position":[[4,2]]}}}],["用法",{"_index":15,"t":{"865":{"position":[[0,2]]},"872":{"position":[[0,2]]},"879":{"position":[[0,2]]},"888":{"position":[[0,2]]},"895":{"position":[[0,2]]},"902":{"position":[[0,2]]},"909":{"position":[[0,2]]},"916":{"position":[[0,2]]},"927":{"position":[[10,2]]},"932":{"position":[[11,2]]},"1096":{"position":[[5,2]]},"1112":{"position":[[18,2]]},"1118":{"position":[[5,2]]},"1143":{"position":[[22,2]]},"1412":{"position":[[5,2]]},"1425":{"position":[[7,2]]},"1502":{"position":[[5,2]]},"1621":{"position":[[11,2]]},"1638":{"position":[[8,2]]}}}],["监控",{"_index":140,"t":{"1174":{"position":[[7,2]]}}}],["目标",{"_index":42,"t":{"963":{"position":[[3,2]]},"978":{"position":[[3,2]]},"989":{"position":[[3,2]]},"1021":{"position":[[3,2]]},"1033":{"position":[[3,2]]},"1043":{"position":[[3,2]]},"1055":{"position":[[3,2]]},"1071":{"position":[[3,2]]},"1184":{"position":[[3,2]]},"1211":{"position":[[3,2]]},"1242":{"position":[[3,2]]},"1250":{"position":[[3,2]]},"1284":{"position":[[3,2]]},"1297":{"position":[[3,2]]},"1318":{"position":[[3,2]]},"1330":{"position":[[3,2]]}}}],["相关",{"_index":132,"t":{"1167":{"position":[[10,2]]}}}],["硬",{"_index":58,"t":{"1004":{"position":[[10,1]]},"1267":{"position":[[10,1]]}}}],["确定",{"_index":103,"t":{"1103":{"position":[[4,2]]}}}],["示例",{"_index":14,"t":{"860":{"position":[[0,2]]},"867":{"position":[[0,2]]},"874":{"position":[[0,2]]},"883":{"position":[[0,2]]},"890":{"position":[[0,2]]},"897":{"position":[[0,2]]},"904":{"position":[[0,2]]},"911":{"position":[[0,2]]},"918":{"position":[[0,2]]},"928":{"position":[[6,2]]},"933":{"position":[[6,2]]},"951":{"position":[[6,2]]},"1014":{"position":[[6,2]]},"1141":{"position":[[6,2]]},"1157":{"position":[[0,2]]},"1161":{"position":[[0,2]]},"1173":{"position":[[7,2]]},"1204":{"position":[[19,2]]},"1231":{"position":[[6,2]]},"1277":{"position":[[6,2]]},"1438":{"position":[[19,2]]},"1491":{"position":[[8,2]]},"1495":{"position":[[5,2]]}}}],["程序",{"_index":249,"t":{"1563":{"position":[[10,2]]}}}],["空",{"_index":168,"t":{"1376":{"position":[[0,1]]},"1380":{"position":[[0,1]]}}}],["符号",{"_index":265,"t":{"1590":{"position":[[8,2]]}}}],["第三方",{"_index":153,"t":{"1344":{"position":[[3,3]]},"1483":{"position":[[6,3]]}}}],["简介",{"_index":108,"t":{"1110":{"position":[[12,2]]},"1408":{"position":[[3,2]]},"1445":{"position":[[3,2]]},"1523":{"position":[[15,2]]},"1612":{"position":[[3,2]]},"1617":{"position":[[3,2]]}}}],["简化",{"_index":175,"t":{"1382":{"position":[[7,2]]}}}],["简史",{"_index":1,"t":{"836":{"position":[[2,2]]}}}],["管理",{"_index":83,"t":{"1076":{"position":[[6,2]]},"1302":{"position":[[6,2]]},"1569":{"position":[[6,2]]},"1630":{"position":[[6,2]]},"1647":{"position":[[6,2]]}}}],["管理器",{"_index":245,"t":{"1556":{"position":[[7,3]]}}}],["管道",{"_index":120,"t":{"1131":{"position":[[6,2]]}}}],["类似",{"_index":76,"t":{"1028":{"position":[[9,2]]},"1291":{"position":[[9,2]]}}}],["类型",{"_index":171,"t":{"1376":{"position":[[19,2]]},"1378":{"position":[[0,2]]},"1390":{"position":[[8,2]]},"1392":{"position":[[9,2]]},"1469":{"position":[[6,2]]},"1475":{"position":[[5,2]]}}}],["系统",{"_index":229,"t":{"1510":{"position":[[5,2]]},"1605":{"position":[[10,2]]}}}],["组件",{"_index":33,"t":{"946":{"position":[[6,2]]},"1226":{"position":[[6,2]]}}}],["组合",{"_index":24,"t":{"935":{"position":[[4,2]]}}}],["经济",{"_index":9,"t":{"850":{"position":[[0,2]]}}}],["绑定",{"_index":192,"t":{"1419":{"position":[[4,2]]}}}],["结合",{"_index":125,"t":{"1143":{"position":[[11,2]]}}}],["结构",{"_index":162,"t":{"1366":{"position":[[0,2]]},"1380":{"position":[[1,2]]},"1396":{"position":[[7,2]]},"1397":{"position":[[6,2]]},"1399":{"position":[[6,2]]},"1455":{"position":[[3,2]]},"1467":{"position":[[4,2]]},"1476":{"position":[[6,2]]}}}],["结果",{"_index":39,"t":{"955":{"position":[[6,2]]},"972":{"position":[[6,2]]},"986":{"position":[[6,2]]},"994":{"position":[[6,2]]},"1030":{"position":[[6,2]]},"1040":{"position":[[6,2]]},"1052":{"position":[[6,2]]},"1064":{"position":[[6,2]]},"1089":{"position":[[6,2]]},"1193":{"position":[[6,2]]},"1219":{"position":[[6,2]]},"1235":{"position":[[6,2]]},"1247":{"position":[[6,2]]},"1257":{"position":[[6,2]]},"1293":{"position":[[6,2]]},"1315":{"position":[[6,2]]},"1327":{"position":[[6,2]]},"1339":{"position":[[6,2]]}}}],["结论",{"_index":28,"t":{"939":{"position":[[3,2]]},"1133":{"position":[[3,2]]},"1459":{"position":[[3,2]]},"1634":{"position":[[3,2]]},"1651":{"position":[[3,2]]}}}],["缓冲",{"_index":210,"t":{"1481":{"position":[[6,2]]}}}],["编码",{"_index":59,"t":{"1004":{"position":[[11,2]]},"1267":{"position":[[11,2]]}}}],["编程",{"_index":69,"t":{"1012":{"position":[[8,2]]},"1275":{"position":[[8,2]]}}}],["编译",{"_index":233,"t":{"1514":{"position":[[8,2]]},"1558":{"position":[[6,2]]},"1591":{"position":[[4,2]]}}}],["耦合",{"_index":53,"t":{"1000":{"position":[[7,2]]},"1263":{"position":[[7,2]]}}}],["聚合",{"_index":70,"t":{"1014":{"position":[[3,2]]},"1277":{"position":[[3,2]]}}}],["自动",{"_index":91,"t":{"1081":{"position":[[11,2]]},"1307":{"position":[[11,2]]}}}],["自动化",{"_index":259,"t":{"1584":{"position":[[4,3]]}}}],["自定义",{"_index":197,"t":{"1426":{"position":[[4,3]]},"1453":{"position":[[3,3]]},"1469":{"position":[[3,3]]}}}],["获取",{"_index":109,"t":{"1114":{"position":[[4,2]]},"1116":{"position":[[5,2]]},"1392":{"position":[[4,2]]},"1397":{"position":[[4,2]]},"1622":{"position":[[4,2]]},"1639":{"position":[[4,2]]}}}],["行为",{"_index":149,"t":{"1202":{"position":[[16,2]]},"1436":{"position":[[16,2]]}}}],["覆盖",{"_index":23,"t":{"930":{"position":[[7,2]]}}}],["观察点",{"_index":256,"t":{"1580":{"position":[[4,3]]}}}],["观测",{"_index":66,"t":{"1010":{"position":[[6,2]]},"1273":{"position":[[6,2]]}}}],["解决",{"_index":213,"t":{"1485":{"position":[[7,2]]}}}],["解析",{"_index":152,"t":{"1342":{"position":[[18,2]]},"1344":{"position":[[12,2]]},"1349":{"position":[[41,2]]},"1353":{"position":[[40,2]]},"1357":{"position":[[8,2]]},"1399":{"position":[[4,2]]},"1423":{"position":[[4,2]]}}}],["解析器",{"_index":198,"t":{"1426":{"position":[[7,3]]}}}],["警告",{"_index":176,"t":{"1385":{"position":[[7,2]]}}}],["设置",{"_index":114,"t":{"1125":{"position":[[4,2]]}}}],["设计",{"_index":31,"t":{"943":{"position":[[8,2]]},"1016":{"position":[[23,2]]},"1073":{"position":[[7,2]]},"1074":{"position":[[8,2]]},"1223":{"position":[[8,2]]},"1279":{"position":[[23,2]]},"1299":{"position":[[7,2]]},"1300":{"position":[[8,2]]}}}],["语法",{"_index":174,"t":{"1382":{"position":[[5,2]]}}}],["读取",{"_index":137,"t":{"1171":{"position":[[7,2]]},"1345":{"position":[[37,2]]}}}],["调用",{"_index":185,"t":{"1401":{"position":[[5,2]]},"1605":{"position":[[12,2]]}}}],["调试",{"_index":13,"t":{"858":{"position":[[0,2]]},"1563":{"position":[[4,2]]},"1565":{"position":[[4,2]]},"1567":{"position":[[6,2]]},"1575":{"position":[[5,2]]},"1576":{"position":[[7,2]]},"1578":{"position":[[7,2]]},"1584":{"position":[[7,2]]},"1586":{"position":[[6,2]]},"1597":{"position":[[3,2]]},"1598":{"position":[[7,2]]}}}],["调试信息",{"_index":264,"t":{"1590":{"position":[[3,4]]},"1591":{"position":[[9,4]]},"1593":{"position":[[6,4]]},"1595":{"position":[[6,4]]}}}],["资源",{"_index":274,"t":{"1609":{"position":[[5,2]]}}}],["超时",{"_index":117,"t":{"1127":{"position":[[7,2]]}}}],["转换",{"_index":173,"t":{"1378":{"position":[[5,2]]}}}],["软件包",{"_index":232,"t":{"1514":{"position":[[5,3]]}}}],["输入",{"_index":113,"t":{"1123":{"position":[[6,2]]}}}],["运行",{"_index":38,"t":{"953":{"position":[[8,2]]},"955":{"position":[[4,2]]},"970":{"position":[[8,2]]},"972":{"position":[[4,2]]},"986":{"position":[[4,2]]},"994":{"position":[[4,2]]},"1030":{"position":[[4,2]]},"1040":{"position":[[4,2]]},"1052":{"position":[[4,2]]},"1064":{"position":[[4,2]]},"1089":{"position":[[4,2]]},"1127":{"position":[[4,2]]},"1191":{"position":[[8,2]]},"1193":{"position":[[4,2]]},"1219":{"position":[[4,2]]},"1233":{"position":[[8,2]]},"1235":{"position":[[4,2]]},"1247":{"position":[[4,2]]},"1257":{"position":[[4,2]]},"1293":{"position":[[4,2]]},"1315":{"position":[[4,2]]},"1327":{"position":[[4,2]]},"1339":{"position":[[4,2]]},"1516":{"position":[[5,2]]},"1565":{"position":[[6,2]]}}}],["进入",{"_index":225,"t":{"1503":{"position":[[5,2]]}}}],["进程",{"_index":250,"t":{"1565":{"position":[[10,2]]},"1576":{"position":[[5,2]]},"1622":{"position":[[6,2]]},"1626":{"position":[[4,2]]},"1639":{"position":[[6,2]]},"1643":{"position":[[4,2]]},"1657":{"position":[[4,2]]},"1660":{"position":[[2,2]]}}}],["进行",{"_index":126,"t":{"1151":{"position":[[14,2]]}}}],["远程",{"_index":260,"t":{"1586":{"position":[[4,2]]}}}],["连接",{"_index":78,"t":{"1067":{"position":[[7,2]]},"1131":{"position":[[8,2]]},"1535":{"position":[[6,2]]}}}],["适应性",{"_index":65,"t":{"1008":{"position":[[11,3]]},"1271":{"position":[[11,3]]}}}],["适用",{"_index":25,"t":{"937":{"position":[[11,2]]},"1105":{"position":[[3,2]]},"1145":{"position":[[13,2]]}}}],["通用",{"_index":241,"t":{"1538":{"position":[[4,2]]}}}],["通知",{"_index":128,"t":{"1151":{"position":[[18,2]]}}}],["配置",{"_index":55,"t":{"1004":{"position":[[5,2]]},"1267":{"position":[[5,2]]},"1528":{"position":[[6,2]]}}}],["错误",{"_index":79,"t":{"1067":{"position":[[9,2]]},"1598":{"position":[[5,2]]}}}],["错误判断",{"_index":119,"t":{"1129":{"position":[[6,4]]}}}],["错误处理",{"_index":160,"t":{"1362":{"position":[[0,4]]}}}],["问题",{"_index":216,"t":{"1486":{"position":[[8,2]]}}}],["问题解答",{"_index":242,"t":{"1542":{"position":[[5,4]]}}}],["防御性",{"_index":68,"t":{"1012":{"position":[[5,3]]},"1275":{"position":[[5,3]]}}}],["附录",{"_index":221,"t":{"1495":{"position":[[0,2]]}}}],["隔离",{"_index":231,"t":{"1512":{"position":[[5,2]]}}}],["集成",{"_index":86,"t":{"1078":{"position":[[5,2]]},"1079":{"position":[[14,2]]},"1304":{"position":[[5,2]]},"1305":{"position":[[14,2]]}}}],["需要",{"_index":105,"t":{"1103":{"position":[[10,2]]}}}],["非",{"_index":57,"t":{"1004":{"position":[[9,1]]},"1016":{"position":[[7,1]]},"1267":{"position":[[9,1]]},"1279":{"position":[[7,1]]}}}],["顶",{"_index":5,"t":{"840":{"position":[[2,1]]}}}],["验证",{"_index":201,"t":{"1451":{"position":[[8,2]]},"1453":{"position":[[6,2]]},"1455":{"position":[[8,2]]},"1490":{"position":[[5,2]]}}}],["高性能",{"_index":158,"t":{"1349":{"position":[[32,3]]}}}],["高效",{"_index":155,"t":{"1345":{"position":[[29,2]]}}}],["高级",{"_index":110,"t":{"1118":{"position":[[3,2]]},"1425":{"position":[[5,2]]},"1528":{"position":[[4,2]]},"1575":{"position":[[3,2]]}}}],["默认",{"_index":151,"t":{"1342":{"position":[[10,2]]},"1413":{"position":[[6,2]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":833,"t":"Archive","s":"","u":"/en/blog/archive","p":833},{"i":842,"t":"能说的上话很重要。","s":"一句顶一万句","u":"/en/blog/一句顶一万句","p":842},{"i":844,"t":"『人类简史』纵览文化、宗教、社会等多元领域，虽在专业深度上有不足，却为我理解『人类社会』提供了宝贵视角。","s":"人类简史","u":"/en/blog/人类简史","p":844},{"i":854,"t":"info/warning","s":"Makefile 常用方法","u":"/en/docs/note/build/makefile_function","p":854},{"i":920,"t":"历史书如同一面哈哈镜，常常放大特定利益阶层的功绩，却忽视或淡化了平凡人的力量与贡献。","s":"南明史","u":"/en/blog/南明史","p":920},{"i":922,"t":"1. 概述","s":"Makefile 中 : 和 :: 的使用指南","u":"/en/docs/note/build/makefile:","p":922},{"i":941,"t":"microkernel（微内核）架构的核心思想是 核心功能最小化，其他功能以插件或服务的形式运行在用户态，通过 进程间通信（IPC） 与内核交互。","s":"microkernel 设计1","u":"/en/docs/note/design/microkernel/microkernel1","p":941},{"i":961,"t":"microkernel 设计1 目前只支持服务发送消息，内核接受消息。","s":"microkernel 设计2","u":"/en/docs/note/design/microkernel/microkernel2","p":961},{"i":977,"t":"1. 目标","s":"microkernel 设计3","u":"/en/docs/note/design/microkernel/microkernel3","p":977},{"i":988,"t":"1. 目标","s":"microkernel 设计5","u":"/en/docs/note/design/microkernel/microkernel5","p":988},{"i":996,"t":"在编程和系统设计中，Future-Proof 机制指的是通过合理的架构设计和技术选择，使代码或系统能够适应未来的需求变化、技术演进和规模扩展，而无需大规模重构或重写。其核心目标是降低长期维护成本，提高可扩展性。","s":"Future-Proof 机制","u":"/en/docs/note/design/future_proof","p":996},{"i":1020,"t":"1. 目标","s":"microkernel 设计4","u":"/en/docs/note/design/microkernel/microkernel4","p":1020},{"i":1032,"t":"1. 目标","s":"microkernel 设计6","u":"/en/docs/note/design/microkernel/microkernel6","p":1032},{"i":1042,"t":"1. 目标","s":"microkernel 设计8","u":"/en/docs/note/design/microkernel/microkernel8","p":1042},{"i":1054,"t":"1. 目标","s":"microkernel 设计7","u":"/en/docs/note/design/microkernel/microkernel7","p":1054},{"i":1066,"t":"1. tls 连接错误","s":"git 错误","u":"/en/docs/note/git/git_err","p":1066},{"i":1069,"t":"服务状态持久化","s":"microkernel 设计9","u":"/en/docs/note/design/microkernel/microkernel9","p":1069},{"i":1091,"t":"1. 概述","s":"Golang bcrypt","u":"/en/docs/note/golang/bcrypt","p":1091},{"i":1109,"t":"1. os/exec 包简介","s":"Golang os/exec 用法","u":"/en/docs/note/golang/cmd","p":1109},{"i":1135,"t":"在 Golang 中，多协程 goroutine之间的交互主要通过以下几种方式实现：","s":"Golang 并发编程","u":"/en/docs/note/golang/concurrency","p":1135},{"i":1165,"t":"runtime/debug 是 Go 标准库中用于调试和运行时信息收集的重要包，提供了多种实用功能。下面我将详细介绍其主要功能和用法：","s":"Golang runtime/debug 用法","u":"/en/docs/note/golang/debug","p":1165},{"i":1182,"t":"microkernel 设计1 目前只支持服务发送消息，内核接受消息。","s":"microkernel 设计2","u":"/en/docs/note/golang/design/microkernel/microkernel2","p":1182},{"i":1198,"t":"1. channel 交互","s":"Golang 多goroutine交互模型","u":"/en/docs/note/design/multi_goroutine","p":1198},{"i":1210,"t":"1. 目标","s":"microkernel 设计3","u":"/en/docs/note/golang/design/microkernel/microkernel3","p":1210},{"i":1221,"t":"microkernel（微内核）架构的核心思想是 核心功能最小化，其他功能以插件或服务的形式运行在用户态，通过 进程间通信（IPC） 与内核交互。","s":"microkernel 设计1","u":"/en/docs/note/golang/design/microkernel/microkernel1","p":1221},{"i":1241,"t":"1. 目标","s":"microkernel 设计5","u":"/en/docs/note/golang/design/microkernel/microkernel5","p":1241},{"i":1249,"t":"1. 目标","s":"microkernel 设计6","u":"/en/docs/note/golang/design/microkernel/microkernel6","p":1249},{"i":1259,"t":"在编程和系统设计中，Future-Proof 机制指的是通过合理的架构设计和技术选择，使代码或系统能够适应未来的需求变化、技术演进和规模扩展，而无需大规模重构或重写。其核心目标是降低长期维护成本，提高可扩展性。","s":"Future-Proof 机制","u":"/en/docs/note/golang/design/future_proof","p":1259},{"i":1283,"t":"1. 目标","s":"microkernel 设计4","u":"/en/docs/note/golang/design/microkernel/microkernel4","p":1283},{"i":1295,"t":"服务状态持久化","s":"microkernel 设计9","u":"/en/docs/note/golang/design/microkernel/microkernel9","p":1295},{"i":1317,"t":"1. 目标","s":"microkernel 设计8","u":"/en/docs/note/golang/design/microkernel/microkernel8","p":1317},{"i":1329,"t":"1. 目标","s":"microkernel 设计7","u":"/en/docs/note/golang/design/microkernel/microkernel7","p":1329},{"i":1341,"t":"1. Golang 默认 JSON 解析 (encoding/json)","s":"Golang JSON 解析","u":"/en/docs/note/golang/json","p":1341},{"i":1361,"t":"------","s":"Golang 随笔","u":"/en/docs/note/golang/jotting","p":1361},{"i":1384,"t":"1. ide 警告找不到方法","s":"goland 问题处理记录","u":"/en/docs/note/golang/goland","p":1384},{"i":1387,"t":"1. 反射（Reflect）概述","s":"Golang Reflect","u":"/en/docs/note/golang/reflect","p":1387},{"i":1407,"t":"1. 简介","s":"kingpin 用法","u":"/en/docs/note/golang/kingpin","p":1407},{"i":1432,"t":"1. channel 交互","s":"Golang 多goroutine交互模型","u":"/en/docs/note/golang/design/multi_goroutine","p":1432},{"i":1444,"t":"1. 简介","s":"Golang Validator","u":"/en/docs/note/golang/validator","p":1444},{"i":1461,"t":"1. 引言","s":"Golang 序列化/反序列化","u":"/en/docs/note/golang/serialization","p":1461},{"i":1497,"t":"1. 概述","s":"chroot 用法","u":"/en/docs/note/os/chroot","p":1497},{"i":1522,"t":"1. Unix Socket 简介","s":"Golang Unix Socket 服务","u":"/en/docs/note/golang/web_server_unix","p":1522},{"i":1548,"t":"1. GDB 概述","s":"GDB 调试工具","u":"/en/docs/note/os/debug/gdb","p":1548},{"i":1611,"t":"1. 简介","s":"Golang sys/unix syscall","u":"/en/docs/note/golang/syscall","p":1611},{"i":1655,"t":"孤儿进程： 父亲先死，儿子被1号收养。","s":"僵尸进程","u":"/en/docs/note/os/zombie","p":1655}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/833",[0,0.234]],["t/842",[1,4.128,2,4.128,3,4.128,4,3.512]],["t/844",[5,3.233,6,2.058,7,2.058,8,2.058,9,2.058,10,3.233,11,2.058,12,2.058,13,2.058,14,2.058,15,2.058,16,2.058,17,2.058,18,1.751,19,2.058,20,2.058]],["t/854",[0,0.262]],["t/920",[21,2.217,22,2.217,23,2.217,24,2.217,25,2.217,26,2.217,27,2.217,28,2.217,29,2.217,30,2.217,31,2.217,32,2.217,33,2.217,34,2.217,35,2.217,36,2.217]],["t/922",[0,0.215,37,2.991]],["t/941",[0,0.133,38,1.581,39,1.581,40,1.581,41,1.262,42,2.243,43,1.581,44,1.581,45,1.581,46,1.062,47,1.581,48,1.398,49,1.581,50,1.581,51,1.153,52,1.398,53,1.581,54,1.262,55,1.153]],["t/961",[0,0.179,46,1.57,54,1.865,56,1.865,57,2.337,58,2.337,59,2.337,60,3.425,61,2.337]],["t/977",[0,0.215,62,1.626]],["t/988",[0,0.215,62,1.626]],["t/996",[0,0.096,41,0.85,51,0.776,56,0.85,62,0.422,63,1.065,64,1.826,65,0.85,66,1.065,67,1.065,68,1.065,69,1.065,70,1.826,71,1.065,72,1.065,73,1.065,74,1.065,75,1.065,76,1.065,77,1.065,78,1.065,79,1.065,80,1.065,81,1.065,82,1.065,83,1.065,84,1.065,85,1.065,86,1.065,87,1.065,88,1.065,89,1.065,90,1.065]],["t/1020",[0,0.215,62,1.626]],["t/1032",[0,0.215,62,1.626]],["t/1042",[0,0.215,62,1.626]],["t/1054",[0,0.215,62,1.626]],["t/1066",[0,0.237,91,4.128,92,4.128]],["t/1069",[46,2.36,93,3.512,94,3.512,95,3.512]],["t/1091",[0,0.215,37,2.991]],["t/1109",[0,0.254,96,3.277,97,2.39]],["t/1135",[0,0.162,51,1.49,55,1.49,65,1.631,98,2.402,99,2.402,100,2.402,101,2.402,102,2.044,103,2.402,104,2.402,105,2.402,106,2.402]],["t/1165",[0,0.156,4,1.441,18,1.441,42,1.275,48,1.275,65,1.15,96,1.441,102,1.441,107,1.694,108,1.694,109,1.694,110,1.694,111,1.694,112,1.694,113,1.694,114,1.694,115,1.694,116,1.694,117,1.694,118,1.694,119,1.694,120,1.694]],["t/1182",[0,0.179,46,1.57,54,1.865,56,1.865,57,2.337,58,2.337,59,2.337,60,3.425,61,2.337]],["t/1198",[0,0.249,55,2.76]],["t/1210",[0,0.215,62,1.626]],["t/1221",[0,0.133,38,1.581,39,1.581,40,1.581,41,1.262,42,2.243,43,1.581,44,1.581,45,1.581,46,1.062,47,1.581,48,1.398,49,1.581,50,1.581,51,1.153,52,1.398,53,1.581,54,1.262,55,1.153]],["t/1241",[0,0.215,62,1.626]],["t/1249",[0,0.215,62,1.626]],["t/1259",[0,0.096,41,0.85,51,0.776,56,0.85,62,0.422,63,1.065,64,1.826,65,0.85,66,1.065,67,1.065,68,1.065,69,1.065,70,1.826,71,1.065,72,1.065,73,1.065,74,1.065,75,1.065,76,1.065,77,1.065,78,1.065,79,1.065,80,1.065,81,1.065,82,1.065,83,1.065,84,1.065,85,1.065,86,1.065,87,1.065,88,1.065,89,1.065,90,1.065]],["t/1283",[0,0.215,62,1.626]],["t/1295",[46,2.36,93,3.512,94,3.512,95,3.512]],["t/1317",[0,0.215,62,1.626]],["t/1329",[0,0.215,62,1.626]],["t/1341",[0,0.27,121,3.396,122,3.396]],["t/1361",[]],["t/1384",[0,0.217,123,3.61,124,3.61,125,3.61,126,3.61]],["t/1387",[0,0.237,37,2.561,127,4.128]],["t/1407",[0,0.215,97,2.991]],["t/1432",[0,0.249,55,2.76]],["t/1444",[0,0.215,97,2.991]],["t/1461",[0,0.215,128,4.821]],["t/1497",[0,0.215,37,2.991]],["t/1522",[0,0.263,97,2.561]],["t/1548",[0,0.249,37,2.76]],["t/1611",[0,0.215,97,2.991]],["t/1655",[0,0.135,52,2.285,129,3.037,130,3.037,131,3.037,132,3.037,133,3.037,134,3.037,135,3.037]]],"invertedIndex":[["",{"_index":0,"t":{"833":{"position":[[0,7]]},"854":{"position":[[0,4],[5,7]]},"922":{"position":[[0,1]]},"941":{"position":[[0,11],[62,3]]},"961":{"position":[[0,11],[14,1]]},"977":{"position":[[0,1]]},"988":{"position":[[0,1]]},"996":{"position":[[10,6],[17,5]]},"1020":{"position":[[0,1]]},"1032":{"position":[[0,1]]},"1042":{"position":[[0,1]]},"1054":{"position":[[0,1]]},"1066":{"position":[[0,1],[3,3]]},"1091":{"position":[[0,1]]},"1109":{"position":[[0,1],[3,2],[6,4]]},"1135":{"position":[[2,6],[15,9]]},"1165":{"position":[[0,7],[8,5],[16,2]]},"1182":{"position":[[0,11],[14,1]]},"1198":{"position":[[0,1],[3,7]]},"1210":{"position":[[0,1]]},"1221":{"position":[[0,11],[62,3]]},"1241":{"position":[[0,1]]},"1249":{"position":[[0,1]]},"1259":{"position":[[10,6],[17,5]]},"1283":{"position":[[0,1]]},"1317":{"position":[[0,1]]},"1329":{"position":[[0,1]]},"1341":{"position":[[0,1],[3,6],[13,4],[22,8],[31,4]]},"1384":{"position":[[0,1],[3,3]]},"1387":{"position":[[0,1],[6,7]]},"1407":{"position":[[0,1]]},"1432":{"position":[[0,1],[3,7]]},"1444":{"position":[[0,1]]},"1461":{"position":[[0,1]]},"1497":{"position":[[0,1]]},"1522":{"position":[[0,1],[3,4],[8,6]]},"1548":{"position":[[0,1],[3,3]]},"1611":{"position":[[0,1]]},"1655":{"position":[[14,1]]}}}],["一面",{"_index":24,"t":{"920":{"position":[[5,2]]}}}],["下面",{"_index":116,"t":{"1165":{"position":[[50,2]]}}}],["不到",{"_index":125,"t":{"1384":{"position":[[10,2]]}}}],["不足",{"_index":16,"t":{"844":{"position":[[30,2]]}}}],["专业",{"_index":14,"t":{"844":{"position":[[24,2]]}}}],["中",{"_index":65,"t":{"996":{"position":[[8,1]]},"1135":{"position":[[9,1]]},"1165":{"position":[[22,1]]},"1259":{"position":[[8,1]]}}}],["主要",{"_index":102,"t":{"1135":{"position":[[29,2]]},"1165":{"position":[[59,2]]}}}],["之间",{"_index":101,"t":{"1135":{"position":[[24,2]]}}}],["书",{"_index":22,"t":{"920":{"position":[[2,1]]}}}],["交互",{"_index":55,"t":{"941":{"position":[[70,2]]},"1135":{"position":[[27,2]]},"1198":{"position":[[11,2]]},"1221":{"position":[[70,2]]},"1432":{"position":[[11,2]]}}}],["人类",{"_index":5,"t":{"844":{"position":[[1,2],[39,2]]}}}],["介绍",{"_index":119,"t":{"1165":{"position":[[56,2]]}}}],["代码",{"_index":72,"t":{"996":{"position":[[44,2]]},"1259":{"position":[[44,2]]}}}],["以下",{"_index":103,"t":{"1135":{"position":[[33,2]]}}}],["信息",{"_index":112,"t":{"1165":{"position":[[31,2]]}}}],["儿子",{"_index":133,"t":{"1655":{"position":[[11,2]]}}}],["先",{"_index":131,"t":{"1655":{"position":[[8,1]]}}}],["其他",{"_index":44,"t":{"941":{"position":[[33,2]]},"1221":{"position":[[33,2]]}}}],["内核",{"_index":54,"t":{"941":{"position":[[68,2]]},"961":{"position":[[28,2]]},"1182":{"position":[[28,2]]},"1221":{"position":[[68,2]]}}}],["几种",{"_index":104,"t":{"1135":{"position":[[35,2]]}}}],["利益",{"_index":29,"t":{"920":{"position":[[17,2]]}}}],["力量",{"_index":35,"t":{"920":{"position":[[36,2]]}}}],["功绩",{"_index":31,"t":{"920":{"position":[[22,2]]}}}],["功能",{"_index":42,"t":{"941":{"position":[[27,2],[35,2]]},"1165":{"position":[[61,2]]},"1221":{"position":[[27,2],[35,2]]}}}],["包",{"_index":96,"t":{"1109":{"position":[[11,1]]},"1165":{"position":[[38,1]]}}}],["化",{"_index":95,"t":{"1069":{"position":[[6,1]]},"1295":{"position":[[6,1]]}}}],["协",{"_index":99,"t":{"1135":{"position":[[12,1]]}}}],["历史",{"_index":21,"t":{"920":{"position":[[0,2]]}}}],["反射",{"_index":127,"t":{"1387":{"position":[[3,2]]}}}],["发送",{"_index":59,"t":{"961":{"position":[[23,2]]},"1182":{"position":[[23,2]]}}}],["变化",{"_index":77,"t":{"996":{"position":[[58,2]]},"1259":{"position":[[58,2]]}}}],["可扩展性",{"_index":90,"t":{"996":{"position":[[100,4]]},"1259":{"position":[[100,4]]}}}],["号",{"_index":134,"t":{"1655":{"position":[[15,1]]}}}],["合理",{"_index":68,"t":{"996":{"position":[[30,2]]},"1259":{"position":[[30,2]]}}}],["哈哈镜",{"_index":25,"t":{"920":{"position":[[7,3]]}}}],["多",{"_index":98,"t":{"1135":{"position":[[11,1]]}}}],["多元",{"_index":12,"t":{"844":{"position":[[17,2]]}}}],["多种",{"_index":114,"t":{"1165":{"position":[[43,2]]}}}],["大规模",{"_index":82,"t":{"996":{"position":[[74,3]]},"1259":{"position":[[74,3]]}}}],["如同",{"_index":23,"t":{"920":{"position":[[3,2]]}}}],["孤儿",{"_index":129,"t":{"1655":{"position":[[0,2]]}}}],["宗教",{"_index":9,"t":{"844":{"position":[[11,2]]}}}],["宝贵",{"_index":19,"t":{"844":{"position":[[47,2]]}}}],["实现",{"_index":106,"t":{"1135":{"position":[[39,2]]}}}],["实用功能",{"_index":115,"t":{"1165":{"position":[[45,4]]}}}],["将",{"_index":117,"t":{"1165":{"position":[[53,1]]}}}],["常常",{"_index":26,"t":{"920":{"position":[[11,2]]}}}],["平凡人",{"_index":34,"t":{"920":{"position":[[32,3]]}}}],["库",{"_index":108,"t":{"1165":{"position":[[21,1]]}}}],["引言",{"_index":128,"t":{"1461":{"position":[[3,2]]}}}],["形式",{"_index":47,"t":{"941":{"position":[[44,2]]},"1221":{"position":[[44,2]]}}}],["微内核",{"_index":38,"t":{"941":{"position":[[12,3]]},"1221":{"position":[[12,3]]}}}],["忽视",{"_index":32,"t":{"920":{"position":[[26,2]]}}}],["态",{"_index":50,"t":{"941":{"position":[[51,1]]},"1221":{"position":[[51,1]]}}}],["成本",{"_index":88,"t":{"996":{"position":[[95,2]]},"1259":{"position":[[95,2]]}}}],["扩展",{"_index":80,"t":{"996":{"position":[[68,2]]},"1259":{"position":[[68,2]]}}}],["找",{"_index":124,"t":{"1384":{"position":[[9,1]]}}}],["技术",{"_index":70,"t":{"996":{"position":[[38,2],[61,2]]},"1259":{"position":[[38,2],[61,2]]}}}],["持久",{"_index":94,"t":{"1069":{"position":[[4,2]]},"1295":{"position":[[4,2]]}}}],["指",{"_index":67,"t":{"996":{"position":[[25,1]]},"1259":{"position":[[25,1]]}}}],["接受",{"_index":61,"t":{"961":{"position":[[30,2]]},"1182":{"position":[[30,2]]}}}],["提供",{"_index":18,"t":{"844":{"position":[[44,2]]},"1165":{"position":[[40,2]]}}}],["提高",{"_index":89,"t":{"996":{"position":[[98,2]]},"1259":{"position":[[98,2]]}}}],["插件",{"_index":45,"t":{"941":{"position":[[38,2]]},"1221":{"position":[[38,2]]}}}],["支持",{"_index":58,"t":{"961":{"position":[[19,2]]},"1182":{"position":[[19,2]]}}}],["收养",{"_index":135,"t":{"1655":{"position":[[16,2]]}}}],["收集",{"_index":113,"t":{"1165":{"position":[[33,2]]}}}],["放大",{"_index":27,"t":{"920":{"position":[[13,2]]}}}],["文化",{"_index":8,"t":{"844":{"position":[[8,2]]}}}],["方式",{"_index":105,"t":{"1135":{"position":[[37,2]]}}}],["方法",{"_index":126,"t":{"1384":{"position":[[12,2]]}}}],["无需",{"_index":81,"t":{"996":{"position":[[72,2]]},"1259":{"position":[[72,2]]}}}],["时",{"_index":111,"t":{"1165":{"position":[[30,1]]}}}],["最小化",{"_index":43,"t":{"941":{"position":[[29,3]]},"1221":{"position":[[29,3]]}}}],["服务",{"_index":46,"t":{"941":{"position":[[41,2]]},"961":{"position":[[21,2]]},"1069":{"position":[[0,2]]},"1182":{"position":[[21,2]]},"1221":{"position":[[41,2]]},"1295":{"position":[[0,2]]}}}],["未来",{"_index":75,"t":{"996":{"position":[[53,2]]},"1259":{"position":[[53,2]]}}}],["机制",{"_index":66,"t":{"996":{"position":[[23,2]]},"1259":{"position":[[23,2]]}}}],["架构",{"_index":39,"t":{"941":{"position":[[16,2]]},"1221":{"position":[[16,2]]}}}],["架构设计",{"_index":69,"t":{"996":{"position":[[33,4]]},"1259":{"position":[[33,4]]}}}],["标准",{"_index":107,"t":{"1165":{"position":[[19,2]]}}}],["核心",{"_index":41,"t":{"941":{"position":[[25,2]]},"996":{"position":[[84,2]]},"1221":{"position":[[25,2]]},"1259":{"position":[[84,2]]}}}],["核心思想",{"_index":40,"t":{"941":{"position":[[19,4]]},"1221":{"position":[[19,4]]}}}],["概述",{"_index":37,"t":{"922":{"position":[[3,2]]},"1091":{"position":[[3,2]]},"1387":{"position":[[14,2]]},"1497":{"position":[[3,2]]},"1548":{"position":[[7,2]]}}}],["死",{"_index":132,"t":{"1655":{"position":[[9,1]]}}}],["消息",{"_index":60,"t":{"961":{"position":[[25,2],[32,2]]},"1182":{"position":[[25,2],[32,2]]}}}],["淡化",{"_index":33,"t":{"920":{"position":[[29,2]]}}}],["深度",{"_index":15,"t":{"844":{"position":[[26,2]]}}}],["演进",{"_index":78,"t":{"996":{"position":[[63,2]]},"1259":{"position":[[63,2]]}}}],["父亲",{"_index":130,"t":{"1655":{"position":[[6,2]]}}}],["特定",{"_index":28,"t":{"920":{"position":[[15,2]]}}}],["状态",{"_index":93,"t":{"1069":{"position":[[2,2]]},"1295":{"position":[[2,2]]}}}],["理解",{"_index":17,"t":{"844":{"position":[[36,2]]}}}],["用于",{"_index":109,"t":{"1165":{"position":[[23,2]]}}}],["用户",{"_index":49,"t":{"941":{"position":[[49,2]]},"1221":{"position":[[49,2]]}}}],["用法",{"_index":120,"t":{"1165":{"position":[[64,2]]}}}],["目前",{"_index":57,"t":{"961":{"position":[[16,2]]},"1182":{"position":[[16,2]]}}}],["目标",{"_index":62,"t":{"977":{"position":[[3,2]]},"988":{"position":[[3,2]]},"996":{"position":[[86,2]]},"1020":{"position":[[3,2]]},"1032":{"position":[[3,2]]},"1042":{"position":[[3,2]]},"1054":{"position":[[3,2]]},"1210":{"position":[[3,2]]},"1241":{"position":[[3,2]]},"1249":{"position":[[3,2]]},"1259":{"position":[[86,2]]},"1283":{"position":[[3,2]]},"1317":{"position":[[3,2]]},"1329":{"position":[[3,2]]}}}],["社会",{"_index":10,"t":{"844":{"position":[[14,2],[41,2]]}}}],["程",{"_index":100,"t":{"1135":{"position":[[13,1]]}}}],["等",{"_index":11,"t":{"844":{"position":[[16,1]]}}}],["简介",{"_index":97,"t":{"1109":{"position":[[12,2]]},"1407":{"position":[[3,2]]},"1444":{"position":[[3,2]]},"1522":{"position":[[15,2]]},"1611":{"position":[[3,2]]}}}],["简史",{"_index":6,"t":{"844":{"position":[[3,2]]}}}],["系统",{"_index":64,"t":{"996":{"position":[[4,2],[47,2]]},"1259":{"position":[[4,2],[47,2]]}}}],["纵览",{"_index":7,"t":{"844":{"position":[[6,2]]}}}],["维护",{"_index":87,"t":{"996":{"position":[[93,2]]},"1259":{"position":[[93,2]]}}}],["编程",{"_index":63,"t":{"996":{"position":[[1,2]]},"1259":{"position":[[1,2]]}}}],["能",{"_index":1,"t":{"842":{"position":[[0,1]]}}}],["能够",{"_index":73,"t":{"996":{"position":[[49,2]]},"1259":{"position":[[49,2]]}}}],["规模",{"_index":79,"t":{"996":{"position":[[66,2]]},"1259":{"position":[[66,2]]}}}],["视角",{"_index":20,"t":{"844":{"position":[[49,2]]}}}],["解析",{"_index":122,"t":{"1341":{"position":[[18,2]]}}}],["警告",{"_index":123,"t":{"1384":{"position":[[7,2]]}}}],["设计",{"_index":56,"t":{"961":{"position":[[12,2]]},"996":{"position":[[6,2]]},"1182":{"position":[[12,2]]},"1259":{"position":[[6,2]]}}}],["话",{"_index":3,"t":{"842":{"position":[[4,1]]}}}],["详细",{"_index":118,"t":{"1165":{"position":[[54,2]]}}}],["说",{"_index":2,"t":{"842":{"position":[[1,1]]}}}],["调试",{"_index":110,"t":{"1165":{"position":[[25,2]]}}}],["贡献",{"_index":36,"t":{"920":{"position":[[39,2]]}}}],["运行",{"_index":48,"t":{"941":{"position":[[46,2]]},"1165":{"position":[[28,2]]},"1221":{"position":[[46,2]]}}}],["进程",{"_index":52,"t":{"941":{"position":[[56,2]]},"1221":{"position":[[56,2]]},"1655":{"position":[[2,2]]}}}],["连接",{"_index":91,"t":{"1066":{"position":[[7,2]]}}}],["适应",{"_index":74,"t":{"996":{"position":[[51,2]]},"1259":{"position":[[51,2]]}}}],["选择",{"_index":71,"t":{"996":{"position":[[40,2]]},"1259":{"position":[[40,2]]}}}],["通过",{"_index":51,"t":{"941":{"position":[[53,2]]},"996":{"position":[[28,2]]},"1135":{"position":[[31,2]]},"1221":{"position":[[53,2]]},"1259":{"position":[[28,2]]}}}],["重写",{"_index":84,"t":{"996":{"position":[[80,2]]},"1259":{"position":[[80,2]]}}}],["重构",{"_index":83,"t":{"996":{"position":[[77,2]]},"1259":{"position":[[77,2]]}}}],["重要",{"_index":4,"t":{"842":{"position":[[6,2]]},"1165":{"position":[[36,2]]}}}],["错误",{"_index":92,"t":{"1066":{"position":[[9,2]]}}}],["长期",{"_index":86,"t":{"996":{"position":[[91,2]]},"1259":{"position":[[91,2]]}}}],["间通信",{"_index":53,"t":{"941":{"position":[[58,3]]},"1221":{"position":[[58,3]]}}}],["阶层",{"_index":30,"t":{"920":{"position":[[19,2]]}}}],["降低",{"_index":85,"t":{"996":{"position":[[89,2]]},"1259":{"position":[[89,2]]}}}],["需求",{"_index":76,"t":{"996":{"position":[[56,2]]},"1259":{"position":[[56,2]]}}}],["领域",{"_index":13,"t":{"844":{"position":[[19,2]]}}}],["默认",{"_index":121,"t":{"1341":{"position":[[10,2]]}}}]],"pipeline":["stemmer"]}},{"documents":[],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]}},{"documents":[{"i":837,"t":"April 25, 2025 · 6 min read weidongkl I can see your smile.","s":"人类简史","u":"/en/blog/authors/weidongkl","h":"","p":835},{"i":839,"t":"February 22, 2025 · 2 min read weidongkl I can see your smile.","s":"南明史","u":"/en/blog/authors/weidongkl","h":"","p":835},{"i":841,"t":"February 16, 2025 · One min read weidongkl I can see your smile.","s":"一句顶一万句","u":"/en/blog/authors/weidongkl","h":"","p":835},{"i":843,"t":"能说的上话很重要。 能说的上话很重要。","s":"一句顶一万句","u":"/en/blog/一句顶一万句","h":"","p":842},{"i":845,"t":"『人类简史』纵览文化、宗教、社会等多元领域，虽在专业深度上有不足，却为我理解『人类社会』提供了宝贵视角。","s":"人类简史","u":"/en/blog/人类简史","h":"","p":844},{"i":847,"t":"大航海时代的开启，使西班牙和葡萄牙率先步入强盛时期。然而，好景不长，荷兰后来居上。其中，一个关键因素在于其司法独立。荷兰重视并保护个人权利，尤其是私人财产，而独裁政权往往缺乏这种保障。这导致资本和财富自然流向更能提供安全与稳定的地区，从而推动了荷兰的崛起。 自由与平等是最基本的价值观，但两者之间存在内在矛盾。为了实现平等，必须对部分人的自由加以限制；而如果人人都享有绝对的自由，社会必然会走向不平等。因此，现实中的制度往往在两者之间寻求平衡，而非极端地追求其一。","s":"司法","u":"/en/blog/人类简史","h":"#司法","p":844},{"i":849,"t":"小国寡民的文化并非某些人刻意设计的剥削工具，而是历史巧合的产物，是在人类心理中寄生并繁衍的观念体系。成功的文化，如同人类与小麦一样，擅长自我复制与传播。然而，文化的成功并不意味着对人类有益——繁荣的文化未必是善良的文化，成功不等于优越。","s":"文化","u":"/en/blog/人类简史","h":"#文化","p":844},{"i":851,"t":"对大多数人而言，经济发展确实改善了生活，使他们比先辈更幸福。然而，这并非绝对。即便集体经济的蛋糕再大，若分配不公，仍会有人陷入困境。原始智人的迁徙与采集生活或许并不艰难，但农业革命后，人类开始聚居，随之而来的统治与压迫逐渐显现。工业革命提升了整体生活水平，却也加剧了财富的不均衡。 经济泡沫指的是虚拟资本（如股票、房地产）价格远超其实际价值，严重脱离实体经济的现象。它源于人性的贪婪和资本主义市场机制，同时也建立在人们对未来持续向好的信念之上。过去两百年间，武装掠夺与工业发展让投资者产生了一种盲目自信，坚信经济会不断繁荣。然而，工业技术的进步并非线性，而是类似于台阶式发展——经历一段稳定期后才会再次跃升。当经济进入稳定期，而预期中的高速增长未能兑现，泡沫便随之产生，仿佛是在透支未来。或许，只有日新月异的科技进步，才能缓解这一困局。 近代科技的飞速发展与资本主义密不可分。资本逐利，而技术领先往往意味着更高的回报。在这种相互促进的关系下，资本推动科技进步，科技反过来助力资本增长，两者共同塑造了现代社会的高速发展。 让普通人过上健康富足的生活，应当是圣人追求的至善之一。从这个角度来看，资本主义似乎扮演了“圣人”的角色，甚至被奉为唯一的“真理”。在这样的逻辑下，财富不仅意味着物质充裕，甚至成为道德的象征。 现代财富的根基在于人们希望增加个人财富的本能驱动。正是这种自私的动力推动了市场竞争与创新，而贪婪在一定程度上成为经济增长的重要催化剂。","s":"经济","u":"/en/blog/人类简史","h":"#经济","p":844},{"i":853,"t":"家庭关系颇为复杂。在古代，婚姻大多由父母做主，媒妁之言决定了一生，孩子对自己的婚姻和生活几乎没有自主权，这不免令人唏嘘。如今，情况大不相同。父母仍能影响孩子的生活，但孩子有更多自主权，人生的选择权掌握在自己手中。旁人的意见，不过是建议。然而，当生活遇到挫折时，孩子却往往仍会将责任归咎于父母，颇具讽刺意味。","s":"家庭","u":"/en/blog/人类简史","h":"#家庭","p":844},{"i":857,"t":"用于打印调试信息。 info 打印内容，warning 打印内容并附加行号。","s":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能","p":854},{"i":859,"t":"可以使用 make -n 来打印命令但不执行，从而帮助调试。","s":"调试：","u":"/en/docs/note/build/makefile_function","h":"#调试","p":854},{"i":861,"t":"$(warning $(LANGUAGES)) # 29行 $(info $(LANGUAGES)) # 30行 $(warning xxx) # 31行 $ make -n Makefile:29: zh wd zh wd Makefile:31: xxx","s":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例","p":854},{"i":864,"t":"执行文本替换：将文本中所有出现的 from 替换为 to。","s":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-1","p":854},{"i":866,"t":"$(subst from,to,text)","s":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法","p":854},{"i":868,"t":"$(subst ee,EE,feet on the street) 输出：fEEt on the strEEt","s":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-1","p":854},{"i":871,"t":"通过通配符返回文件列表，类似于 Python 的 glob。","s":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-2","p":854},{"i":873,"t":"$(wildcard pattern)","s":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-1","p":854},{"i":875,"t":"获取 po 目录下所有以 .po 结尾的文件： $(warning $(wildcard po/*.po)) # Makefile:20: po/zh.po po/wd.po","s":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-2","p":854},{"i":878,"t":"替换字符串，可以使用 % 通配符，支持模式替换。","s":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-3","p":854},{"i":880,"t":"$(patsubst pattern,replacement,text)","s":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-2","p":854},{"i":882,"t":"subst 仅支持完全匹配替换。 patsubst 支持模式匹配。","s":"区别：","u":"/en/docs/note/build/makefile_function","h":"#区别","p":854},{"i":884,"t":"text := Hello, world! result := $(subst world,Makefile,$(text)) all: @echo $(result) # 输出: Hello, Makefile! files := src/foo.c src/bar.c src/baz.c objects := $(patsubst src/%.c,build/%.o,$(files)) all: @echo $(objects) # 输出: build/foo.o build/bar.o build/baz.o","s":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-3","p":854},{"i":887,"t":"为每个文件名添加后缀。","s":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-4","p":854},{"i":889,"t":"$(addsuffix suffix, names...)","s":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-3","p":854},{"i":891,"t":"$(addsuffix .c,foo bar) 返回值：foo.c bar.c","s":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-4","p":854},{"i":894,"t":"从文件名中提取前缀部分（即点号 . 之前的部分）。","s":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-5","p":854},{"i":896,"t":"$(basename names...)","s":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-4","p":854},{"i":898,"t":"$(basename src/foo.c src-1.0/bar.c /home/jack/.font.cache-1 hacks) 提取文件名和去掉后缀： filepath := src/foo.c # 提取文件名 filename := $(notdir $(filepath)) # 去掉后缀 name_without_ext := $(basename $(filename)) all: @echo \"Filename: $(filename)\" # 输出: foo.c @echo \"Name without extension: $(name_without_ext)\" # 输出: foo","s":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-5","p":854},{"i":901,"t":"从字符串中提取第一个单词。","s":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-6","p":854},{"i":903,"t":"$(firstword text)","s":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-5","p":854},{"i":905,"t":"words := foo bar baz first := $(firstword $(words)) all: @echo $(first) # 输出: foo","s":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-6","p":854},{"i":908,"t":"去除字符串开头和结尾的空格。","s":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-7","p":854},{"i":910,"t":"$(strip text)","s":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-6","p":854},{"i":912,"t":"text := foo bar baz stripped := $(strip $(text)) all: @echo \"$(stripped)\" # 输出: foo bar baz","s":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-7","p":854},{"i":915,"t":"提取字符串中的第 N 个单词（单词以空格分隔）。","s":"功能：","u":"/en/docs/note/build/makefile_function","h":"#功能-8","p":854},{"i":917,"t":"$(word N,text)","s":"用法：","u":"/en/docs/note/build/makefile_function","h":"#用法-7","p":854},{"i":919,"t":"words := foo bar baz second_word := $(word 2,$(words)) all: @echo $(second_word) # 输出: bar","s":"示例：","u":"/en/docs/note/build/makefile_function","h":"#示例-8","p":854},{"i":921,"t":"历史书如同一面哈哈镜，常常放大特定利益阶层的功绩，却忽视或淡化了平凡人的力量与贡献。 从《活着》中的普通人到李自成的大顺军，一再证明，平凡个体同样可以成就伟大。明代初年，名将多出自淮西，但若将他们置于一个稳定的时代，他们或许只是普通的农民或奴隶；若将他们放在不同的阵营，他们可能只是他人辉煌的背景。我们通常将伟大定义为时代赋予的成功与名声，但这种定义或许过于狭隘。伟大不应仅限于功成名就，而应更加包容和务实，更贴近人类共同的经验。勇敢、智慧，甚至失败，都值得被赋予伟大的意义。伟大存在于每个个体为生存、理想和信念所付出的努力中，无论成败。","s":"南明史","u":"/en/blog/南明史","h":"","p":920},{"i":924,"t":"在 Makefile 中，:（单冒号）和 ::（双冒号）都用于定义目标（target），但它们的行为存在关键区别。理解它们的用法可以帮助我们更好地组织 Makefile，提高可维护性和灵活性。","s":"1. 概述","u":"/en/docs/note/build/makefile:","h":"#1-概述","p":922},{"i":926,"t":"语法 行为 :（单冒号） 定义唯一规则，如果同一目标出现多次，后面的规则会覆盖前面的规则 ::（双冒号） 定义多个独立规则，同一目标可以有多个规则，所有规则都会被执行","s":"2. :（单冒号）与 ::（双冒号）的区别","u":"/en/docs/note/build/makefile:","h":"#2-单冒号与-双冒号的区别","p":922},{"i":929,"t":"all: build @echo \"Running build\" all: test @echo \"Running test\" 执行 make all 结果： Running test 解释： all: 目标被定义了两次。 后面的 all: test 覆盖 了前面的 all: build，因此只执行 test 相关的命令。","s":"3.1 基本示例","u":"/en/docs/note/build/makefile:","h":"#31-基本示例","p":922},{"i":931,"t":"all: build test: @echo \"Testing...\" all: test # 覆盖前面的规则 执行 make all 结果： Testing... 解释： all: build 先定义了 build 依赖。 all: test 覆盖了前面的 all: build，最终 all 只依赖 test。 适用场景： 适用于单一规则的目标，如 CC = gcc 这类变量定义。 确保不执行重复规则，仅保留最后一次的定义。","s":"3.2 依赖的覆盖","u":"/en/docs/note/build/makefile:","h":"#32-依赖的覆盖","p":922},{"i":934,"t":"all:: build @echo \"Running build\" all:: test @echo \"Running test\" 执行 make all 结果： Running build Running test 解释： all:: 目标被定义了两次，但不会相互覆盖。 make all 会依次执行所有 all:: 规则。","s":"4.1 基本示例","u":"/en/docs/note/build/makefile:","h":"#41-基本示例","p":922},{"i":936,"t":"test:: unit-test t@echo \"Integration testing...\" test:: integration-test t@echo \"Unit testing...\" 执行 make test 结果： Integration testing... Unit testing... 解释： test:: 目标多次定义，每个规则都会被执行。 适用场景： 适用于模块化规则，比如 make test 可能需要多个测试步骤。 扩展性更强，多个 Makefile 片段可以独立定义 test::，不会相互覆盖。","s":"4.2 组合依赖","u":"/en/docs/note/build/makefile:","h":"#42-组合依赖","p":922},{"i":938,"t":"适用场景 使用 :（单冒号） 使用 ::（双冒号） 唯一规则目标 ✅ ❌ 可累积执行的目标 ❌ ✅ 变量赋值（如 CC=gcc） ✅ ❌ 多 Makefile 规则合并 ❌ ✅ 防止规则覆盖 ❌ ✅","s":"5. : vs :: 适用场景总结","u":"/en/docs/note/build/makefile:","h":"#5--vs--适用场景总结","p":922},{"i":940,"t":":（单冒号） 适用于唯一规则，如果目标重复定义，后面的规则会覆盖前面的。 ::（双冒号） 允许多次定义相同目标，并且所有规则都会被执行。 如果 Makefile 可能被多个文件拆分并包含（include Makefile.common），推荐使用 :: 以避免目标覆盖。 🚀 掌握 : 和 :: 的区别，有助于编写更灵活和可维护的 Makefile！","s":"6. 结论","u":"/en/docs/note/build/makefile:","h":"#6-结论","p":922},{"i":942,"t":"microkernel（微内核）架构的核心思想是 核心功能最小化，其他功能以插件或服务的形式运行在用户态，通过 进程间通信（IPC） 与内核交互。","s":"microkernel 设计1","u":"/en/docs/note/design/microkernel/microkernel1","h":"","p":941},{"i":945,"t":"内核小、职责单一 内核只负责最基本的功能，比如线程调度、地址空间管理、IPC。 模块化、可扩展 文件系统、驱动程序等作为用户空间服务，易于替换和调试。 可靠性高 一个用户态服务崩溃不会影响整个系统。 通信开销大 模块间依赖消息传递，相比传统内核切换用户态和内核态的代价更大。","s":"1.1 特点","u":"/en/docs/note/design/microkernel/microkernel1","h":"#11-特点","p":941},{"i":947,"t":"Kernel（内核） 负责 服务注册、消息路由、生命周期管理。 Services（服务） 独立模块（如 LogService、StorageService），运行在用户态。 通信机制（IPC） 使用 Go 的 Channel 或 gRPC 进行通信。","s":"1.2 核心组件","u":"/en/docs/note/design/microkernel/microkernel1","h":"#12-核心组件","p":941},{"i":950,"t":"package kernel import ( \"context\" \"errors\" \"fmt\" \"sync\" ) // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string } // Kernel 微内核核心 type Kernel struct { // 注册的服务通道 services map[string]Service // 保护 services 的并发访问 mutex sync.RWMutex // 全局事件总线 eventCh chan Event } // Event 定义内核事件（用于服务间通信） type Event struct { From string Type string Content string } // NewKernel 创建微内核实例 func NewKernel() *Kernel { return &Kernel{ services: make(map[string]Service), eventCh: make(chan Event, 100), } } // RegisterService 注册服务 func (k *Kernel) RegisterService(s Service) error { k.mutex.Lock() defer k.mutex.Unlock() name := s.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = s return nil } // StartAll 启动所有服务 func (k *Kernel) StartAll() error { k.mutex.RLock() defer k.mutex.RUnlock() for _, s := range k.services { if err := s.Start(); err != nil { return err } } return nil } // StopAll 停止所有服务 func (k *Kernel) StopAll() error { k.mutex.RLock() defer k.mutex.RUnlock() var err error for _, s := range k.services { if e := s.Stop(); e != nil { err = e } } return err } // SendEvent 发送事件（模拟 IPC） func (k *Kernel) SendEvent(evt Event) { k.eventCh <- evt } // EventLoop 事件循环（处理服务间通信） func (k *Kernel) EventLoop(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: %s - %s\\n\", evt.From, evt.Type, evt.Content) } } }","s":"2.1 定义 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel1","h":"#21-定义-kernel核心","p":941},{"i":952,"t":"package service import ( \"fmt\" \"microkernel/kernel\" ) // LogService 日志服务 type LogService struct { name string kernel *kernel.Kernel logCh chan string stopCh chan struct{} } func NewLogService(name string, kernel *kernel.Kernel) *LogService { return &LogService{ name: name, kernel: kernel, logCh: make(chan string, 100), stopCh: make(chan struct{}), } } func (l *LogService) Start() error { fmt.Printf(\"[%s] starting...\\n\", l.name) go l.run() return nil } func (l *LogService) Stop() error { fmt.Printf(\"[%s] stopping...\\n\", l.name) close(l.stopCh) return nil } func (l *LogService) Name() string { return l.name } func (l *LogService) run() { for { select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 l.kernel.SendEvent(kernel.Event{ From: l.name, Type: \"log\", Content: log, }) } } } func (l *LogService) Log(msg string) { l.logCh <- msg }","s":"2.2 实现示例服务（LogService）","u":"/en/docs/note/design/microkernel/microkernel1","h":"#22-实现示例服务logservice","p":941},{"i":954,"t":"package main import ( \"context\" \"microkernel/kernel\" \"microkernel/service\" \"time\" ) func main() { // 1. 创建微内核 kernel := kernel.NewKernel() // 2. 注册服务 logSvc := service.NewLogService(\"logger\", kernel) if err := kernel.RegisterService(logSvc); err != nil { panic(err) } // 3. 启动所有服务 if err := kernel.StartAll(); err != nil { panic(err) } // 4. 启动事件循环 ctx, cancel := context.WithCancel(context.Background()) defer cancel() go kernel.EventLoop(ctx) // 5. 测试日志服务 logSvc.Log(\"Hello, Microkernel!\") time.Sleep(1 * time.Second) // 6. 停止所有服务 if err := kernel.StopAll(); err != nil { panic(err) } }","s":"2.3 主程序（运行微内核 + 服务）","u":"/en/docs/note/design/microkernel/microkernel1","h":"#23-主程序运行微内核--服务","p":941},{"i":956,"t":"[logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] stopping...","s":"2.4 运行结果","u":"/en/docs/note/design/microkernel/microkernel1","h":"#24-运行结果","p":941},{"i":958,"t":"使用 gRPC 替代 Channel（实现跨进程通信）。 动态加载服务（如插件化架构）。 增加服务发现机制（如 Consul/Etcd）。 支持更复杂的事件路由（如基于 Topic 的 Pub/Sub）。","s":"3. 扩展方向","u":"/en/docs/note/design/microkernel/microkernel1","h":"#3-扩展方向","p":941},{"i":960,"t":"微内核的核心：Kernel 只管理 Service 的生命周期和通信。 服务独立：每个 Service 运行在自己的 Goroutine 中，互不干扰。 通信方式： 简单场景：Channel（如示例）。 复杂场景：gRPC、NATS、WebSocket 等。 查看完整代码","s":"4. 总结","u":"/en/docs/note/design/microkernel/microkernel1","h":"#4-总结","p":941},{"i":962,"t":"microkernel 设计1 目前只支持服务发送消息，内核接受消息。 在本章节，我会增加内核发送消息到服务","s":"microkernel 设计2","u":"/en/docs/note/design/microkernel/microkernel2","h":"","p":961},{"i":964,"t":"内核发送消息到服务","s":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel2","h":"#1-目标","p":961},{"i":967,"t":"服务增加消息处理方法 // kernel/kernel.go type Service interface { Start() error Stop() error Name() string // 增加消息处理方法 Handle(msg string) string } 事件增加发送地址 // kernel/kernel.go // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string } 内核发送事件到服务 // kernel/kernel.go // HandleEvent 处理事件（模拟服务间通信） func (k *Kernel) HandleEvent(evt Event) (msg string) { k.mutex.RLock() defer k.mutex.RUnlock() if svc, ok := k.services[evt.To]; ok { return svc.Handle(evt.Content) } return \"service not found\" }","s":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel2","h":"#21-kernel核心","p":961},{"i":969,"t":"增加Handle方法实现 // service/log.go // service 增加Handle接口实现 func (l *LogService) Handle(msg string) string { fmt.Printf(\"[%s] LOG handle kernel event: %s\\n\", l.name, msg) return fmt.Sprintf(\"[%s] LOG Handle: %s\\n\", l.name, msg) }","s":"2.2 LogService","u":"/en/docs/note/design/microkernel/microkernel2","h":"#22-logservice","p":961},{"i":971,"t":"kernel发送消息到service // main.go // 6. microKernel 发送事件到指定服务 microKernel.HandleEvent(kernel.Event{ From: \"microKernel\", To: \"logger\", Type: \"log\", Content: \"Hello, Log!\", }) time.Sleep(1 * time.Millisecond)","s":"2.3 主程序（运行微内核 + 服务）","u":"/en/docs/note/design/microkernel/microkernel2","h":"#23-主程序运行微内核--服务","p":961},{"i":973,"t":"[logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... 查看完整代码","s":"2.4 运行结果","u":"/en/docs/note/design/microkernel/microkernel2","h":"#24-运行结果","p":961},{"i":975,"t":"HandleEvent 修改为 Send SendEvent 修改为 Push LoopEvent 修改为Listen mutex修改为 mu 查看完整代码","s":"2.5 优化函数和变量命名","u":"/en/docs/note/design/microkernel/microkernel2","h":"#25-优化函数和变量命名","p":961},{"i":979,"t":"服务 能读取 Kernel 的返回信息 实现方法参考链接： gitee weidongkl.github.io","s":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel3","h":"#1-目标","p":977},{"i":981,"t":"可以为每个 Service 提供一个专属的响应通道（channel），内核通过这个通道将处理结果或反馈信息“推送”回去。 每次发送消息附带一个 ReplyCh。 内核在收到消息后通过该通道写回响应。 Service 读取 ReplyCh 获取反馈。","s":"2. 代码改动","u":"/en/docs/note/design/microkernel/microkernel3","h":"#2-代码改动","p":977},{"i":983,"t":"事件增加读取返回的channel // kernel/kernel.go // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string // 增加响应通道 ReplyCh chan string } listen 增加返回值得写入 // kernel/kernel.go func (k *Kernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: %s - %s\\n\", evt.From, evt.Type, evt.Content) // 增加返回的写入 if evt.ReplyCh != nil { evt.ReplyCh <- fmt.Sprintf(\"ack: %s\", evt.Content) } } } }","s":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel3","h":"#21-kernel核心","p":977},{"i":985,"t":"服务增加返回的读取 func (l *LogService) run() { for { select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 replyCh := make(chan string, 1) l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", Content: log, ReplyCh: replyCh, }) // 等待内核回应 reply := <-replyCh fmt.Printf(\"[%s] got reply from kernel: %s\\n\", l.Name(), reply) } } }// service/log.go // service 增加Handle接口实现 func (l *LogService) Handle(msg string) string { fmt.Printf(\"[%s] LOG handle kernel event: %s\\n\", l.name, msg) return fmt.Sprintf(\"[%s] LOG Handle: %s\\n\", l.name, msg) }","s":"2.2 LogService","u":"/en/docs/note/design/microkernel/microkernel3","h":"#22-logservice","p":977},{"i":987,"t":"Registered: logger [logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] got reply from kernel: ack: Hello, Microkernel! [Kernel] Send Event to logger: Hello, Log! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... 查看完整代码","s":"2.3 运行结果","u":"/en/docs/note/design/microkernel/microkernel3","h":"#23-运行结果","p":977},{"i":990,"t":"服务状态管理 单独服务管理 优化项目结构","s":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel5","h":"#1-目标","p":988},{"i":993,"t":"定义服务状态和服务元数据 // kernel/service.go // ServiceState 定义微内核服务状态 type ServiceState int // 使用iota枚举类型，自动计算枚举值 const ( Created ServiceState = iota Running Stopped ) // ServiceState.String() func (s ServiceState) String() string { // 状态转换成字符串 // 其中[...]表示让编译器自动计算数组的长度 return [...]string{\"Created\", \"Running\", \"Stopped\"}[s] } // serviceMeta 定义微内核服务元数据 type serviceMeta struct { svc Service state ServiceState } 单个服务管理 // kernel/kernel.go func (k *MicroKernel) StartService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Running { return errors.New(\"service already started\") } if err := meta.svc.Start(); err != nil { return err } meta.state = Running fmt.Println(\"Started:\", meta.svc.Name()) return nil } func (k *MicroKernel) StopService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Stopped { return errors.New(\"service already stopped\") } if err := meta.svc.Stop(); err != nil { return err } meta.state = Stopped fmt.Println(\"Stopped:\", meta.svc.Name()) return nil } Listen 增加服务状态判断，未运行的服务，不再处理消息 // Listen 事件循环（处理服务间通信） // 监听事件，处理服务间通信 // 重命名 EventLoop 为 Listen func (k *MicroKernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[MicroKernel] Event from %s: - %s\\n\", evt.From, evt.Content) // 发送给 MicroKernel 自己 if evt.To == \"\" { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 0, Message: \"Handled by kernel\", Data: \"ok\"} } continue } // 路由到目标服务 k.mu.RLock() meta, ok := k.services[evt.To] k.mu.RUnlock() if !ok || meta.state != Running { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 404, Message: \"service unavailable\", Data: \"\"} } continue } // 调用目标服务处理，并返回 go func(s Service, m Event) { result := s.Handle(m) if m.ReplyCh != nil { select { case m.ReplyCh <- result: case <-time.After(time.Duration(m.TimeoutMs) * time.Millisecond): m.ReplyCh <- Reply{Code: 408, Message: \"timeout\", Data: \"\"} } } }(meta.svc, evt) } } }","s":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel5","h":"#21-kernel核心","p":988},{"i":995,"t":"Registered: logger Registered: echo Starting all services... [logger] starting... [echo] starting... [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } [logger] stopping... [echo] stopping... 查看完整代码","s":"2.2 运行结果","u":"/en/docs/note/design/microkernel/microkernel5","h":"#22-运行结果","p":988},{"i":997,"t":"在编程和系统设计中，Future-Proof 机制指的是通过合理的架构设计和技术选择，使代码或系统能够适应未来的需求变化、技术演进和规模扩展，而无需大规模重构或重写。其核心目标是降低长期维护成本，提高可扩展性。","s":"Future-Proof 机制","u":"/en/docs/note/design/future_proof","h":"","p":996},{"i":999,"t":"以下是实现 Future-Proof 代码的关键设计思想：","s":"1. Future-Proof 机制的关键原则","u":"/en/docs/note/design/future_proof","h":"","p":996},{"i":1001,"t":"目标：模块间通过清晰的接口交互，而非直接依赖具体实现。使用接口（Go 的 interface）而非具体类型，依赖注入而非硬编码。 优点： 业务逻辑与具体实现解耦 易于扩展新的实现方式 便于单元测试（可以mock Notifier） 设计点： 面向接口编程：依赖抽象而非具体实现 依赖注入：通过构造函数或方法参数注入依赖 单一职责：每个组件只关注自己的核心功能 最小知识原则：组件只与直接相关的组件交互 松耦合示例： 定义接口 // Notifier 通知接口 type Notifier interface { Send(message string) error } 接口实现 // EmailNotifier 邮件通知实现 type EmailNotifier struct{} func (e EmailNotifier) Send(message string) error { fmt.Printf(\"发送邮件通知: %s\\n\", message) return nil } // SMSNotifier 短信通知实现 type SMSNotifier struct{} func (s SMSNotifier) Send(message string) error { fmt.Printf(\"发送短信通知: %s\\n\", message) return nil } 业务逻辑调用接口 // NotificationService 通知服务 type NotificationService struct { notifier Notifier } func NewNotificationService(notifier Notifier) *NotificationService { return &NotificationService{notifier: notifier} } func (s *NotificationService) ProcessOrder(orderID string) { // 处理订单逻辑... message := fmt.Sprintf(\"订单 %s 已处理\", orderID) _ = s.notifier.Send(message) } 主函数调用 func main() { // 可以轻松替换通知实现 emailNotifier := EmailNotifier{} service := NewNotificationService(emailNotifier) service.ProcessOrder(\"12345\") // 切换为短信通知不需要修改业务逻辑 smsNotifier := SMSNotifier{} service = NewNotificationService(smsNotifier) service.ProcessOrder(\"67890\") } 紧耦合示例： 使用具体类型 // EmailSender 邮件发送器 type EmailSender struct{} func (e EmailSender) SendEmail(message string) error { fmt.Printf(\"发送邮件: %s\\n\", message) return nil } 业务类型依赖具体类 // OrderProcessor 订单处理器 type OrderProcessor struct { emailSender EmailSender } func (p *OrderProcessor) ProcessOrder(orderID string) { // 处理订单逻辑... message := fmt.Sprintf(\"订单 %s 已处理\", orderID) _ = p.emailSender.SendEmail(message) } 主函数调用 func main() { processor := OrderProcessor{emailSender: EmailSender{}} processor.ProcessOrder(\"12345\") // 如果要改为短信通知，必须修改OrderProcessor结构体和所有相关代码 }","s":"1.1.  松耦合（Loose Coupling）","u":"/en/docs/note/design/future_proof","h":"#11--松耦合loose-coupling","p":996},{"i":1003,"t":"目标：新增功能时无需修改现有代码。 示例：通过组合而非继承扩展行为（Go 的 embedding 或中间件模式）。 type LoggingAggregator struct { *EventAggregator // 嵌入原有功能 logger Logger } // 新增日志能力而不修改原始聚合器","s":"1.2. 可扩展性（Extensibility）","u":"/en/docs/note/design/future_proof","h":"#12-可扩展性extensibility","p":996},{"i":1005,"t":"目标：将易变的参数（如超时时间、规则路径）外置为配置。 示例：通过环境变量或配置文件驱动行为： timeout := os.Getenv(\"AGGREGATOR_TIMEOUT\")","s":"1.3. 配置化而非硬编码","u":"/en/docs/note/design/future_proof","h":"#13-配置化而非硬编码","p":996},{"i":1007,"t":"目标：数据交互格式（如 JSON、Protobuf）支持向后兼容。 示例：使用 Protocol Buffers 的字段编号机制，避免破坏旧版解析。","s":"1.4. 协议与数据格式的兼容性","u":"/en/docs/note/design/future_proof","h":"#14-协议与数据格式的兼容性","p":996},{"i":1009,"t":"目标：并发模型能随规模调整（如 Goroutine 池 vs 固定 Worker）。 示例：在之前的聚合器代码中，通过 Channel 通信可轻松扩展为多 Worker： for i := 0; i < runtime.NumCPU(); i++ { go aggregator.processRequests() }","s":"1.5. 并发模型的可适应性","u":"/en/docs/note/design/future_proof","h":"#15-并发模型的可适应性","p":996},{"i":1011,"t":"目标：内置日志、指标、链路追踪等，便于未来诊断问题。 示例：在 rulesUpdateRequest 中添加请求 ID 和计时： type rulesUpdateRequest struct { RequestID string // 用于追踪 StartTime time.Time // ...其他字段 }","s":"1.6. 可观测性（Observability）","u":"/en/docs/note/design/future_proof","h":"#16-可观测性observability","p":996},{"i":1013,"t":"目标：处理边界条件（如 nil Channel、超时）。 示例：在 Channel 通信中添加超时： func (a *EventAggregator) UpdateRules(rules []string) error { req := &rulesUpdateRequest{..., response: make(chan error, 1)} select { case a.updateChannel <- req: return <-req.response case <-time.After(1 * time.Second): return errors.New(\"update timeout\") } }","s":"1.7. 防御性编程","u":"/en/docs/note/design/future_proof","h":"#17-防御性编程","p":996},{"i":1015,"t":"package main import ( \"fmt\" \"time\" ) // EventAggregator manages a set of rules and processes updates through channels type EventAggregator struct { rules []string updateChannel chan *rulesUpdateRequest shutdownChan chan struct{} } // rulesUpdateRequest represents a request to update the rules type rulesUpdateRequest struct { newRules []string response chan error } // NewEventAggregator creates and starts a new EventAggregator func NewEventAggregator() *EventAggregator { agg := &EventAggregator{ rules: []string{}, updateChannel: make(chan *rulesUpdateRequest), shutdownChan: make(chan struct{}), } go agg.processRequests() return agg } // UpdateRules safely updates the rules by sending a request through the channel func (a *EventAggregator) UpdateRules(newRules []string) error { req := &rulesUpdateRequest{ newRules: newRules, response: make(chan error, 1), // Buffered to avoid blocking } a.updateChannel <- req return <-req.response } // Shutdown gracefully stops the aggregator func (a *EventAggregator) Shutdown() { close(a.shutdownChan) } // processRequests handles incoming requests in a thread-safe manner func (a *EventAggregator) processRequests() { for { select { case req := <-a.updateChannel: a.rules = req.newRules fmt.Println(\"Updated rules:\", a.rules) req.response <- nil case <-a.shutdownChan: fmt.Println(\"Shutting down aggregator\") return } } } func main() { // Create and start the aggregator aggregator := NewEventAggregator() defer aggregator.Shutdown() // Simulate some updates go func() { time.Sleep(500 * time.Millisecond) if err := aggregator.UpdateRules([]string{\"a\", \"b\", \"c\"}); err != nil { fmt.Println(\"Error updating rules:\", err) } }() go func() { time.Sleep(1 * time.Second) if err := aggregator.UpdateRules([]string{\"d\", \"e\", \"f\"}); err != nil { fmt.Println(\"Error updating rules:\", err) } }() // Give time for the updates to process time.Sleep(2 * time.Second) } 状态隔离：所有规则更新通过 Channel 串行化，避免竞态条件。 易于扩展：可新增 QueryRules() 方法而不影响现有逻辑。 并发友好：Channel 模型天然支持协程扩展。 关闭控制：通过 shutdownChan 实现优雅终止。 根据原则，执行部分优化 package main import ( \"context\" \"errors\" \"fmt\" \"sync\" \"time\" ) // RuleSet represents a collection of rules with metadata type RuleSet struct { Rules []string Version int // Track changes over time Modified time.Time // Last update timestamp } // SetRulesRequest encapsulates a rules update operation type SetRulesRequest struct { NewRules []string Response chan error RequestID string // For tracing Timestamp time.Time // For auditing } // AggregatorOptions configures aggregator behavior type AggregatorOptions struct { MaxPendingRequests int // Buffer size for requests RequestTimeout time.Duration // Timeout for rule updates EnableValidation bool // Future: validate rules before applying } // Aggregator manages rule sets with thread-safe operations type Aggregator struct { currentRuleSet RuleSet options AggregatorOptions requestChan chan *SetRulesRequest queryChan chan chan RuleSet // New channel for safe rule queries commandChan chan func() // Generic command channel for future extensions stopChan chan struct{} shutdownOnce sync.Once stopWg sync.WaitGroup } // NewAggregator creates a configured aggregator instance func NewAggregator(opts AggregatorOptions) *Aggregator { if opts.MaxPendingRequests <= 0 { opts.MaxPendingRequests = 10 } if opts.RequestTimeout <= 0 { opts.RequestTimeout = 2 * time.Second } return &Aggregator{ currentRuleSet: RuleSet{Version: 1}, options: opts, requestChan: make(chan *SetRulesRequest, opts.MaxPendingRequests), queryChan: make(chan chan RuleSet), commandChan: make(chan func()), stopChan: make(chan struct{}), } } // Run starts the aggregator's processing loop func (a *Aggregator) Run() { a.stopWg.Add(1) defer a.stopWg.Done() for { select { case req := <-a.requestChan: a.handleSetRules(req) case respChan := <-a.queryChan: a.handleGetRules(respChan) case cmd := <-a.commandChan: cmd() // Execute arbitrary commands case <-a.stopChan: return } } } func (a *Aggregator) handleSetRules(req *SetRulesRequest) { defer close(req.Response) // Future: could add validation here if a.options.EnableValidation { // Validate rules before applying } a.currentRuleSet = RuleSet{ Rules: req.NewRules, Version: a.currentRuleSet.Version + 1, Modified: time.Now(), } fmt.Printf(\"Updated rules (v%d): %v\\n\", a.currentRuleSet.Version, a.currentRuleSet.Rules) req.Response <- nil } func (a *Aggregator) handleGetRules(respChan chan RuleSet) { respChan <- a.currentRuleSet close(respChan) } // SetRules updates the rule set with timeout support func (a *Aggregator) SetRules(ctx context.Context, rules []string) error { req := &SetRulesRequest{ NewRules: rules, Response: make(chan error), RequestID: fmt.Sprintf(\"req-%d\", time.Now().UnixNano()), Timestamp: time.Now(), } select { case a.requestChan <- req: select { case err := <-req.Response: return err case <-ctx.Done(): return ctx.Err() } case <-a.stopChan: return errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return ctx.Err() } } // GetRules safely retrieves the current rule set func (a *Aggregator) GetRules(ctx context.Context) (RuleSet, error) { respChan := make(chan RuleSet) select { case a.queryChan <- respChan: select { case rules := <-respChan: return rules, nil case <-ctx.Done(): return RuleSet{}, ctx.Err() } case <-a.stopChan: return RuleSet{}, errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return RuleSet{}, ctx.Err() } } // Stop gracefully shuts down the aggregator func (a *Aggregator) Stop() { a.shutdownOnce.Do(func() { close(a.stopChan) a.stopWg.Wait() close(a.requestChan) close(a.queryChan) close(a.commandChan) fmt.Println(\"Aggregator stopped gracefully\") }) } // ExecuteCommand provides extension point for future operations func (a *Aggregator) ExecuteCommand(ctx context.Context, cmd func()) error { select { case a.commandChan <- cmd: return nil case <-a.stopChan: return errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return ctx.Err() } } func main() { // Configurable options opts := AggregatorOptions{ MaxPendingRequests: 20, RequestTimeout: 3 * time.Second, EnableValidation: false, // Could be enabled in future } aggregator := NewAggregator(opts) go aggregator.Run() // Example usage with context ctx, cancel := context.WithTimeout(context.Background(), 2*time.Second) defer cancel() // Set rules err := aggregator.SetRules(ctx, []string{\"a\", \"b\", \"c\"}) if err != nil { fmt.Println(\"Error setting rules:\", err) } // Get rules rules, err := aggregator.GetRules(ctx) if err != nil { fmt.Println(\"Error getting rules:\", err) } else { fmt.Printf(\"Current rules (v%d): %v\\n\", rules.Version, rules.Rules) } // Execute custom command aggregator.ExecuteCommand(ctx, func() { fmt.Println(\"Executing custom command\") }) aggregator.Stop() } Enhanced Rule Metadata: Added RuleSet struct with versioning and timestamps Supports audit trails and change tracking Configurable Options: AggregatorOptions allows tuning without code changes Supports future features like validation Multiple Communication Channels: Separate channels for commands (commandChan) and queries (queryChan) Prevents mixing of operation types Context Support: All operations respect context for timeouts/cancellation Better integration with modern Go applications Extension Points: ExecuteCommand method for adding future functionality Generic command channel pattern Improved Shutdown: sync.Once ensures safe single shutdown sync.WaitGroup for proper goroutine cleanup Thread-Safe Queries: Added safe GetRules method via channel No direct access to internal state Request Tracing: Added request IDs for debugging Timestamps for all operations 使用命令模式优化 package main import ( \"context\" \"errors\" \"fmt\" \"sync\" \"time\" ) // Command defines the interface all commands must implement type Command interface { Execute(ctx context.Context) error } // CommandHandler processes commands type CommandHandler struct { commands chan Command stopChan chan struct{} wg sync.WaitGroup } // NewCommandHandler creates a new handler with specified queue size func NewCommandHandler(queueSize int) *CommandHandler { return &CommandHandler{ commands: make(chan Command, queueSize), stopChan: make(chan struct{}), } } // Start begins processing commands func (h *CommandHandler) Start() { h.wg.Add(1) go func() { defer h.wg.Done() for { select { case cmd := <-h.commands: ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second) err := cmd.Execute(ctx) cancel() if err != nil { fmt.Printf(\"Command execution failed: %v\\n\", err) } case <-h.stopChan: return } } }() } // Submit sends a command for execution func (h *CommandHandler) Submit(ctx context.Context, cmd Command) error { select { case h.commands <- cmd: return nil case <-h.stopChan: return errors.New(\"handler is shutting down\") case <-ctx.Done(): return ctx.Err() } } // Stop gracefully shuts down the handler func (h *CommandHandler) Stop() { close(h.stopChan) h.wg.Wait() close(h.commands) } // --- Concrete Commands --- // SetRulesCommand implements Command for rule updates type SetRulesCommand struct { Aggregator *Aggregator NewRules []string } func (c *SetRulesCommand) Execute(ctx context.Context) error { return c.Aggregator.SetRules(ctx, c.NewRules) } // GetRulesCommand implements Command for rule queries type GetRulesCommand struct { Aggregator *Aggregator ResultChan chan<- RuleSet } func (c *GetRulesCommand) Execute(ctx context.Context) error { rules, err := c.Aggregator.GetRules(ctx) if err != nil { return err } c.ResultChan <- rules return nil } // --- Aggregator Implementation --- type RuleSet struct { Rules []string Version int Modified time.Time } type Aggregator struct { mu sync.Mutex currentRule RuleSet } func (a *Aggregator) SetRules(ctx context.Context, rules []string) error { a.mu.Lock() defer a.mu.Unlock() select { case <-ctx.Done(): return ctx.Err() default: a.currentRule = RuleSet{ Rules: rules, Version: a.currentRule.Version + 1, Modified: time.Now(), } fmt.Printf(\"Rules updated to version %d\\n\", a.currentRule.Version) return nil } } func (a *Aggregator) GetRules(ctx context.Context) (RuleSet, error) { a.mu.Lock() defer a.mu.Unlock() select { case <-ctx.Done(): return RuleSet{}, ctx.Err() default: return a.currentRule, nil } } // --- Usage Example --- func main() { // Create components handler := NewCommandHandler(10) aggregator := &Aggregator{ currentRule: RuleSet{Version: 0}, } // Start command processor handler.Start() defer handler.Stop() // Submit commands ctx := context.Background() // Set rules command setCmd := &SetRulesCommand{ Aggregator: aggregator, NewRules: []string{\"a\", \"b\", \"c\"}, } handler.Submit(ctx, setCmd) // Get rules command resultChan := make(chan RuleSet, 1) getCmd := &GetRulesCommand{ Aggregator: aggregator, ResultChan: resultChan, } handler.Submit(ctx, getCmd) // Wait for result select { case rules := <-resultChan: fmt.Printf(\"Current rules: %v\\n\", rules.Rules) case <-time.After(1 * time.Second): fmt.Println(\"Timeout waiting for rules\") } } The Command Handler pattern is a behavioral design pattern that encapsulates requests as objects, allowing for parameterization of clients with different requests, queuing of requests, and support for undoable operations. Here's how to implement it in your aggregator: Core Components Command Interface: Defines the execution contract Concrete Commands: Encapsulate specific actions and parameters Invoker: Receives and executes commands Receiver: Knows how to perform the operations Key Features Command Interface: type Command interface { Execute(ctx context.Context) error } Concrete Commands: Each command encapsulates all parameters needed for execution Commands can be serialized/deserialized for distributed systems Command Handler: Manages a queue of commands Processes commands sequentially in a goroutine Supports graceful shutdown Benefits: Decoupling: Separates command creation from execution Extensibility: Easy to add new command types Composability: Commands can be combined into macros Undo/Redo: Can be extended to support command history Advanced Extensions Command Middleware: type CommandMiddleware func(Command) Command func LoggingMiddleware(next Command) Command { return &loggedCommand{next} } Transaction Support: type TransactionCommand struct { Commands []Command } func (t *TransactionCommand) Execute(ctx context.Context) error { // Execute all or nothing } Priority Commands: type PriorityCommand struct { Command Priority int } // Use priority queue instead of channel","s":"2. 聚合器示例","u":"/en/docs/note/design/future_proof","h":"#2-聚合器示例","p":996},{"i":1017,"t":"// 硬编码实现，未来难以修改 var globalRules []string func UpdateRules(rules []string) { globalRules = rules // 直接修改全局状态，线程不安全 }","s":"3. 反模式：非 Future-Proof 的设计","u":"/en/docs/note/design/future_proof","h":"#3-反模式非-future-proof-的设计","p":996},{"i":1019,"t":"Future-Proof 不是过度设计，而是通过遵循 SOLID 原则和 并发安全实践，让代码具备： 适应变化的能力 平滑演进的路径 诊断问题的手段 在 Go 中，Channel 和 Interface 是构建 Future-Proof 系统的核心工具。","s":"4. 总结","u":"/en/docs/note/design/future_proof","h":"#4-总结","p":996},{"i":1022,"t":"服务间通信（通过内核转发） 标准化消息协议结构 支持状态码、错误、数据负载。 异步+超时机制 服务发出请求时可以设置超时时间，避免长期阻塞。","s":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel4","h":"#1-目标","p":1020},{"i":1025,"t":"定义标准消息格式 Reply 包含code/message/Data Event ReplyCh 使用标准格式的Reply // kernel/kernel.go // Reply 定义内核事件回复 type Reply struct { Code int // 0 表示成功，非0表示错误码 Message string // 描述信息 Data string // 可选负载 } // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string // 增加响应通道,使用 chan Reply，提高回复的灵活性 ReplyCh chan Reply // 可选：超时时间 TimeoutMs int } 服务改造 handle 从处理字符串修改为处理事件，返回标准Reply // kernel/kernel.go // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string Handle(Event) Reply } Listen 路由和事件总线设计 // Listen 事件循环（处理服务间通信） // 监听事件，处理服务间通信 // 重命名 EventLoop 为 Listen func (k *Kernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: - %s\\n\", evt.From, evt.Content) // 发送给 Kernel 自己 if evt.To == \"\" { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 0, Message: \"Handled by kernel\", Data: \"ok\"} } continue } // 路由到目标服务 k.mu.RLock() svc, ok := k.services[evt.To] k.mu.RUnlock() if !ok { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 404, Message: \"Service not found\", Data: \"\"} } continue } // 调用目标服务处理，并返回 go func(s Service, m Event) { result := s.Handle(m) if m.ReplyCh != nil { select { case m.ReplyCh <- result: case <-time.After(time.Duration(m.TimeoutMs) * time.Millisecond): m.ReplyCh <- Reply{Code: 408, Message: \"timeout\", Data: \"\"} } } }(svc, evt) } } }","s":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel4","h":"#21-kernel核心","p":1020},{"i":1027,"t":"根据count随机分发（Push 指定了发送位置） func (l *LogService) run() { var count = 1 for { count++ select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 replyCh := make(chan kernel.Reply, 1) if count%2 == 0 { l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", Content: log, ReplyCh: replyCh, TimeoutMs: 1000, }) } else { l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", To: \"echo\", Content: log, ReplyCh: replyCh, TimeoutMs: 1000, }) } // 等待内核回应 reply := <-replyCh fmt.Printf(\"[%s] got reply from kernel: %s\\n\", l.Name(), reply.Message) } } }","s":"2.2 LogService","u":"/en/docs/note/design/microkernel/microkernel4","h":"#22-logservice","p":1020},{"i":1029,"t":"func (e *EchoService) Handle(evt kernel.Event) kernel.Reply { return kernel.Reply{Code: 0, Message: \"echo service handled\", Data: fmt.Sprintf(\"from %s: %s\", evt.From, evt.Content)} }","s":"2.3 增加另一个类似的EchoService","u":"/en/docs/note/design/microkernel/microkernel4","h":"#23-增加另一个类似的echoservice","p":1020},{"i":1031,"t":"Registered: logger # 注册另一个服务 Registered: echo [logger] starting... [echo] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [Kernel] Event from logger: - Hello, Echo! # 转发到echoService 处理 [logger] got reply from kernel: echo service handled [Kernel] Send Event to logger: Hello, Log! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... [echo] stopping... 查看完整代码","s":"2.4 运行结果","u":"/en/docs/note/design/microkernel/microkernel4","h":"#24-运行结果","p":1020},{"i":1034,"t":"支持服务依赖关系管理","s":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel6","h":"#1-目标","p":1032},{"i":1037,"t":"定义服务依赖关系。依赖的是服务名称 // kernel/service.go // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string Handle(Event) Reply // Dependencies 返回依赖服务名称 Dependencies() []string // 新增接口 } // serviceMeta 定义微内核服务元数据 type serviceMeta struct { svc Service state ServiceState // 存储依赖，也可以不使用，直接使用svc.Dependencies deps []string } 注册Register增加deps // kernel/kernel.go // Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() name := svc.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil } 启动服务和停止服务增加拓扑排序 // kernel/kernel.go func (k *MicroKernel) topoSort() ([]string, error) { k.mu.RLock() defer k.mu.RUnlock() visited := make(map[string]bool) temp := make(map[string]bool) result := []string{} var visit func(string) error visit = func(name string) error { if temp[name] { return fmt.Errorf(\"circular dependency at %s\", name) } if visited[name] { return nil } temp[name] = true meta, ok := k.services[name] if !ok { return fmt.Errorf(\"service %s not registered\", name) } for _, dep := range meta.deps { if err := visit(dep); err != nil { return err } } visited[name] = true temp[name] = false result = append(result, name) return nil } for name := range k.services { if !visited[name] { if err := visit(name); err != nil { return nil, err } } } return result, nil } func (k *MicroKernel) StartAll() error { sorted, err := k.topoSort() // ... for _, name := range sorted { if err := k.StartService(name); err != nil { // ... } } return nil }","s":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel6","h":"#21-kernel核心","p":1032},{"i":1039,"t":"服务增加依赖方法实现 func (l *LogService) Dependencies() []string { return []string{\"echo\"} }","s":"2.2 服务","u":"/en/docs/note/design/microkernel/microkernel6","h":"#22-服务","p":1032},{"i":1041,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } Stopping all services... [logger] stopping... Stopped: logger [echo] stopping... Stopped: echo 查看完整代码","s":"2.3 运行结果","u":"/en/docs/note/design/microkernel/microkernel6","h":"#23-运行结果","p":1032},{"i":1044,"t":"服务热更新增加状态迁移 支持服务加密状态迁移","s":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel8","h":"#1-目标","p":1042},{"i":1047,"t":"新增状态接口 // 旧服务可选实现：导出状态 type Exportable interface { ExportState() any } // 新服务可选实现：导入状态 type Importable interface { ImportState(state any) error } 加密接口 type Crypter interface { Encrypt(data any) ([]byte, error) Decrypt(cipher []byte) (any, error) } 加密实现 使用aes type AESCrypter struct { key []byte // 16/24/32 字节 } func NewAESCrypter(key []byte) *AESCrypter { return &AESCrypter{key: key} } func (a *AESCrypter) Encrypt(data any) ([]byte, error) { plaintext, err := json.Marshal(data) if err != nil { return nil, err } block, err := aes.NewCipher(a.key) if err != nil { return nil, err } aesgcm, err := cipher.NewGCM(block) if err != nil { return nil, err } nonce := make([]byte, aesgcm.NonceSize()) if _, err := io.ReadFull(rand.Reader, nonce); err != nil { return nil, err } ciphertext := aesgcm.Seal(nonce, nonce, plaintext, nil) return ciphertext, nil } func (a *AESCrypter) Decrypt(ciphertext []byte) (any, error) { block, err := aes.NewCipher(a.key) if err != nil { return nil, err } aesgcm, err := cipher.NewGCM(block) if err != nil { return nil, err } nonceSize := aesgcm.NonceSize() if len(ciphertext) < nonceSize { return nil, fmt.Errorf(\"ciphertext too short\") } nonce := ciphertext[:nonceSize] cipherData := ciphertext[nonceSize:] plaintext, err := aesgcm.Open(nil, nonce, cipherData, nil) if err != nil { return nil, err } var result any if err := json.Unmarshal(plaintext, &result); err != nil { return nil, err } return result, nil } 替换服务 //func (k *MicroKernel) ReplaceService(newSvc Service) error { // k.mu.Lock() // defer k.mu.Unlock() // // name := newSvc.Name() // oldMeta, exists := k.services[name] // var state any // // if exists { // if exporter, ok := oldMeta.svc.(Exportable); ok { // state = exporter.ExportState() // } // oldMeta.svc.Stop() // fmt.Printf(\"Stopped old version of %s\\n\", name) // } // // // 状态迁移 // if importer, ok := newSvc.(Importable); ok && state != nil { // if err := importer.ImportState(state); err != nil { // return fmt.Errorf(\"state import failed: %w\\n\", err) // } // fmt.Printf(\"State migrated for service %s\\n\", name) // } // // // 替换服务元信息 // k.services[name] = &serviceMeta{ // svc: newSvc, // deps: newSvc.Dependencies(), // state: Created, // } // // // 重启服务 // if exists && oldMeta.state == Running { // newSvc.Start() // k.services[name].state = Running // fmt.Printf(\"Started new version of %s\", name) // } else { // fmt.Printf(\"Registered new version of %s (not started)\", name) // } // // return nil //} func (k *MicroKernel) ReplaceServiceEncrypted(newSvc Service, crypter Crypter) error { k.mu.Lock() defer k.mu.Unlock() name := newSvc.Name() oldMeta, exists := k.services[name] var encryptedState []byte if exists { if exporter, ok := oldMeta.svc.(Exportable); ok { rawState := exporter.ExportState() cipher, err := crypter.Encrypt(rawState) if err != nil { return fmt.Errorf(\"state encryption failed: %w\", err) } encryptedState = cipher } oldMeta.svc.Stop() fmt.Printf(\"Stopped old version of %s\\n\", name) } // 状态导入（解密） if importer, ok := newSvc.(Importable); ok && encryptedState != nil { decrypted, err := crypter.Decrypt(encryptedState) if err != nil { return fmt.Errorf(\"state decryption failed: %w\", err) } if err := importer.ImportState(decrypted); err != nil { return fmt.Errorf(\"state import failed: %w\", err) } fmt.Printf(\"Encrypted state migrated for service %s\\n\", name) } k.services[name] = &serviceMeta{ svc: newSvc, deps: newSvc.Dependencies(), state: Created, } if exists && oldMeta.state == Running { newSvc.Start() k.services[name].state = Running fmt.Printf(\"Started new version of %s\\n\", name) } else { fmt.Printf(\"Registered new version of %s (not started)\\n\", name) } return nil }","s":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel8","h":"#21-kernel核心","p":1042},{"i":1049,"t":"实现状态接口 func (e *EchoServiceV2) ImportState(state any) error { if val, ok := state.(int); ok { e.echoCount = val return nil } return fmt.Errorf(\"invalid state type\") } func (e *EchoService) ExportState() any { return e.echoCount }","s":"2.2 echo服务","u":"/en/docs/note/design/microkernel/microkernel8","h":"#22-echo服务","p":1042},{"i":1051,"t":"热替换服务 // 7. 热替换服务 // 热更新为 V2 aesKey := []byte(\"1234567890123456\") // 16 字节对称密钥 microKernel.ReplaceServiceEncrypted(service.NewEchoServiceV2(microKernel), microkernel.NewAESCrypter(aesKey))","s":"2.3 main","u":"/en/docs/note/design/microkernel/microkernel8","h":"#23-main","p":1042},{"i":1053,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to echo: Hello, Log! {0 echo service handled from microKernel: Hello, Log!} [echo] stopping... Stopped old version of echo State migrated for service echo [2025-04-24 21:28:38.032] [INFO] [echo] [echov2] starting... Started new version of echo[MicroKernel] Send Event to echo: Hello, Log! [echo] count is 10 {0 echo v2 service handled from microKernel: Hello, Log!} [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... Stopped: echo [log] stopping 查看完整代码","s":"2.4 运行结果","u":"/en/docs/note/design/microkernel/microkernel8","h":"#24-运行结果","p":1042},{"i":1056,"t":"支持服务热更新 所有服务和内核通过统一接口打印日志 时间戳、服务名、级别（INFO/WARN/ERROR） 动态控制日志级别 输出到 stdout、文件、远程服务等 xxx","s":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel7","h":"#1-目标","p":1054},{"i":1059,"t":"新增ReplaceService 用于热替换服务 // kernel/kernel.go func (k *MicroKernel) ReplaceService(newSvc Service) error { k.mu.Lock() defer k.mu.Unlock() name := newSvc.Name() oldMeta, exists := k.services[name] if exists && oldMeta.state == Running { // 停止旧服务 oldMeta.svc.Stop() fmt.Printf(\"Stopped old version of %s\\n\", name) } // 替换服务实现，重建元信息 k.services[name] = &serviceMeta{ svc: newSvc, deps: newSvc.Dependencies(), state: Created, } // 重启服务（如旧服务在运行） if exists && oldMeta.state == Running { newSvc.Start() k.services[name].state = Running fmt.Printf(\"Started new version of %s\\n\", name) } else { fmt.Printf(\"Registered new version of %s (not started)\\n\", name) } return nil } 注册Register增加deps // kernel/kernel.go // Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() name := svc.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil } 启动服务和停止服务增加拓扑排序 // kernel/kernel.go func (k *MicroKernel) topoSort() ([]string, error) { k.mu.RLock() defer k.mu.RUnlock() visited := make(map[string]bool) temp := make(map[string]bool) result := []string{} var visit func(string) error visit = func(name string) error { if temp[name] { return fmt.Errorf(\"circular dependency at %s\", name) } if visited[name] { return nil } temp[name] = true meta, ok := k.services[name] if !ok { return fmt.Errorf(\"service %s not registered\", name) } for _, dep := range meta.deps { if err := visit(dep); err != nil { return err } } visited[name] = true temp[name] = false result = append(result, name) return nil } for name := range k.services { if !visited[name] { if err := visit(name); err != nil { return nil, err } } } return result, nil } func (k *MicroKernel) StartAll() error { sorted, err := k.topoSort() // ... for _, name := range sorted { if err := k.StartService(name); err != nil { // ... } } return nil }","s":"2.1 Kernel（核心）","u":"/en/docs/note/design/microkernel/microkernel7","h":"#21-kernel核心","p":1054},{"i":1061,"t":"日志服务设计 type LogLevel int const ( INFO LogLevel = iota WARN ERROR ) type Logger struct { mu sync.Mutex level LogLevel service string out io.Writer } 方法实现 func NewLogger(service string, level LogLevel, out io.Writer) *Logger { return &Logger{ service: service, level: level, out: out, } } func (l *Logger) logf(level LogLevel, format string, args ...any) { if level < l.level { return } l.mu.Lock() defer l.mu.Unlock() levelStr := [...]string{\"INFO\", \"WARN\", \"ERROR\"}[level] msg := fmt.Sprintf(format, args...) ts := time.Now().Format(\"2006-01-02 15:04:05.000\") fmt.Fprintf(l.out, \"[%s] [%s] [%s] %s\\n\", ts, levelStr, l.service, msg) } func (l *Logger) Infof(format string, args ...any) { l.logf(INFO, format, args...) } func (l *Logger) Warnf(format string, args ...any) { l.logf(WARN, format, args...) } func (l *Logger) Errorf(format string, args ...any) { l.logf(ERROR, format, args...) } 服务中使用 type EchoServiceV3 struct { log *Logger } func NewEchoServiceV3() *EchoServiceV3 { return &EchoServiceV3{ log: NewLogger(\"echo\", INFO, os.Stdout), } } //... func (e *EchoServiceV3) Start() { e.log.Infof(\"started\") }","s":"2.2 日志服务","u":"/en/docs/note/design/microkernel/microkernel7","h":"#22-日志服务","p":1054},{"i":1063,"t":"热替换服务 // 7. 热替换服务 // 热更新为 V2 _ = microKernel.ReplaceService(service.NewEchoServiceV2(microKernel)) // 测试 V2 行为 replyCh2 := make(chan microkernel.Reply, 1) microKernel.Push(microkernel.Event{ From: \"main\", Type: \"log\", Content: \"log\", ReplyCh: replyCh2, TimeoutMs: 1000, }) fmt.Println(\"v2 reply:\", <-replyCh2)","s":"2.3 main","u":"/en/docs/note/design/microkernel/microkernel7","h":"#23-main","p":1054},{"i":1065,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } [echo] stopping... Stopped old version of echo [2025-04-23 21:46:11.935] [INFO] [echo] [echov2] starting... Started new version of echo [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... [log] stopping Stopped: echo Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } Stopping all services... [logger] stopping... Stopped: logger [echo] stopping... Stopped: echo 查看完整代码","s":"2.4 运行结果","u":"/en/docs/note/design/microkernel/microkernel7","h":"#24-运行结果","p":1054},{"i":1068,"t":"报错如下：​ gnutls_handshake() failed: The TLS connection was non-properly terminated. 解决方法：​ 关闭代理设置 unset all_proxy unset http_proxy unset https_proxy 排查方法：​ 报错是tls相关，猜测原因如下： 证书问题：过期。。。 协议或加密套不匹配 网络问题 证书问题排查： 通过浏览器查看证书信息，看证书是否受信任。 使用openssl s_client -connect <server>:<port> -showcerts 查看证书信息 设置调试日志排查 启用GnuTLS 的调试日志，查看详细的握手过程： export GNUTLS_DEBUG_LEVEL=3 # 使用`gnutls-cli -p <port> <server> -V` 通过关闭ssl认证测试是否可以下载 GIT_SSL_NO_VERIFY=1 git clone http:gitrepo 通过关闭所有代理，测试是否是代理导致的网络问题 显示关闭代理可以下载。也可以通过ssh来下载。ssh可以规避该问题。","s":"1. tls 连接错误","u":"/en/docs/note/git/git_err","h":"#1-tls-连接错误","p":1066},{"i":1070,"t":"服务状态持久化","s":"microkernel 设计9","u":"/en/docs/note/design/microkernel/microkernel9","h":"","p":1069},{"i":1072,"t":"服务状态在 Stop() 或热替换时 导出 + 加密 + 写入磁盘 注册服务时若检测到磁盘中有状态，则 读取 + 解密 + 导入 每个服务有自己的状态文件（支持多服务）","s":"1. 目标","u":"/en/docs/note/design/microkernel/microkernel9","h":"#1-目标","p":1069},{"i":1075,"t":"存储目录：/var/lib/microkernel/state/（示例） 文件名：<service_name>.state 文件内容：已加密的字节流","s":"2.1 存储文件设计","u":"/en/docs/note/design/microkernel/microkernel9","h":"#21-存储文件设计","p":1069},{"i":1077,"t":"type StateStore struct { dir string crypter Crypter } func NewStateStore(dir string, crypter Crypter) *StateStore { return &StateStore{dir: dir, crypter: crypter} } func (s *StateStore) path(name string) string { return filepath.Join(s.dir, name+\".state\") } func (s *StateStore) Save(name string, state any) error { encrypted, err := s.crypter.Encrypt(state) if err != nil { return err } if err := os.MkdirAll(s.dir, 0755); err != nil { return err } return os.WriteFile(s.path(name), encrypted, 0600) } func (s *StateStore) Load(name string) (any, error) { data, err := os.ReadFile(s.path(name)) if err != nil { return nil, err } return s.crypter.Decrypt(data) } func (s *StateStore) Exists(name string) bool { _, err := os.Stat(s.path(name)) return err == nil }","s":"2.2 状态管理模块：StateStore","u":"/en/docs/note/design/microkernel/microkernel9","h":"#22-状态管理模块statestore","p":1069},{"i":1080,"t":"type MicroKernel struct { ... stateStore *StateStore } func NewMicroKernelWithState(store *StateStore) *MicroKernel { return &MicroKernel{ services: make(map[string]*serviceMeta), stateStore: store, logger: NewLogger(\"kernel\", INFO, os.Stdout), } }","s":"3.1 kernel 初始化集成StateStore","u":"/en/docs/note/design/microkernel/microkernel9","h":"#31-kernel-初始化集成statestore","p":1069},{"i":1082,"t":"// Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() // name 可以放在锁前面，优化性能 name := svc.Name() // 增加状态导入 // 如果使用的接口，这边就使用的接口方法 if k.stateStore != nil && k.stateStore.Exists(name) { // 查看服务是否支持状态导入 // 状态导入不要求每个服务必须实现 // 如果没有实现，就直接忽略 if importer, ok := svc.(Importable); ok { raw, err := k.stateStore.Load(name) if err != nil { return fmt.Errorf(\"state load failed: %w\\n\", err) } err = importer.ImportState(raw) if err != nil { return fmt.Errorf(\"state import failed: %w\\n\", err) } fmt.Printf(\"State migrated for service %s\\n\", name) } } if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil }","s":"3.2 注册服务时尝试自动加载状态","u":"/en/docs/note/design/microkernel/microkernel9","h":"#32-注册服务时尝试自动加载状态","p":1069},{"i":1084,"t":"func (k *MicroKernel) StopService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Stopped { return errors.New(\"service already stopped\") } // 增加状态导出判断 if exporter, ok := meta.svc.(Exportable); ok && k.stateStore != nil { if err := k.stateStore.Save(name, exporter.ExportState()); err == nil { fmt.Printf(\"State persisted for %s\\n\", name) } } if err := meta.svc.Stop(); err != nil { return err } meta.state = Stopped fmt.Println(\"Stopped:\", meta.svc.Name()) return nil }","s":"3.3 停止服务时，保存状态","u":"/en/docs/note/design/microkernel/microkernel9","h":"#33-停止服务时保存状态","p":1069},{"i":1086,"t":"func (k *MicroKernel) Listen(ctx context.Context) { // 间隔可以加在kernel的struct中，也可以使用方法来获取 ticker := time.NewTicker(2 * time.Second) for { select { case <-ctx.Done(): return case <-ticker.C: fmt.Println(\"Timed writing state\") if k.stateStore != nil { for name, meta := range k.services { if meta.state == Running { if exporter, ok := meta.svc.(Exportable); ok { if err := k.stateStore.Save(name, exporter.ExportState()); err == nil { fmt.Printf(\"State persisted for %s\\n\", name) } } } } }","s":"3.4 定时持久化状态","u":"/en/docs/note/design/microkernel/microkernel9","h":"#34-定时持久化状态","p":1069},{"i":1088,"t":"crypter := microkernel.NewAESCrypter([]byte(\"1234567890123456\")) store := microkernel.NewStateStore(\"./state\", crypter) // 1. 创建微内核 microKernel := microkernel.NewMicroKernel(store) // 增加加密存储","s":"4. main","u":"/en/docs/note/design/microkernel/microkernel9","h":"#4-main","p":1069},{"i":1090,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to echo: Hello, Log! {0 echo service handled from microKernel: Hello, Log!} [echo] stopping... Stopped old version of echo Encrypted state migrated for service echo [2025-04-26 19:47:00.801] [INFO] [echo] [echov2] starting... Started new version of echo [MicroKernel] Send Event to echo: Hello, Log! [echo] count is 10 {0 echo v2 service handled from microKernel: Hello, Log!} [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... Stopped: echo 查看完整代码","s":"4.1 运行结果","u":"/en/docs/note/design/microkernel/microkernel9","h":"#41-运行结果","p":1069},{"i":1093,"t":"bcrypt 是一种安全的密码哈希算法，适用于存储用户密码，防止明文泄露。Golang 提供 golang.org/x/crypto/bcrypt 包来简化 bcrypt 的使用。","s":"1. 概述","u":"/en/docs/note/golang/bcrypt","h":"#1-概述","p":1091},{"i":1095,"t":"bcrypt 属于 Go 的扩展库，需要手动安装： go get golang.org/x/crypto/bcrypt","s":"2. 安装","u":"/en/docs/note/golang/bcrypt","h":"#2-安装","p":1091},{"i":1098,"t":"package main import ( \"fmt\" \"golang.org/x/crypto/bcrypt\" ) func main() { password := \"my_secure_password\" // 生成 bcrypt 哈希 hashedPassword, err := bcrypt.GenerateFromPassword([]byte(password), bcrypt.DefaultCost) if err != nil { fmt.Println(\"Error generating hash:\", err) return } fmt.Println(\"Hashed Password:\", string(hashedPassword)) } 说明 bcrypt.GenerateFromPassword([]byte(password), bcrypt.DefaultCost) 生成哈希密码。 bcrypt.DefaultCost 是默认的计算成本（10），可以调整为 bcrypt.MinCost（较快）或 bcrypt.MaxCost（更安全但更慢）。 生成的哈希密码会自动包含 bcrypt 版本、成本因子和盐值。","s":"3.1 生成哈希密码","u":"/en/docs/note/golang/bcrypt","h":"#31-生成哈希密码","p":1091},{"i":1100,"t":"package main import ( \"fmt\" \"golang.org/x/crypto/bcrypt\" ) func main() { password := \"my_secure_password\" hashedPassword := \"$2a$10$P8HU5POQ9mC9dp5BqGkgYOdxz9b7zRbhq2bEn5B2c5rYrXsEoaQve\" // 之前存储的哈希 // 验证密码 err := bcrypt.CompareHashAndPassword([]byte(hashedPassword), []byte(password)) if err != nil { fmt.Println(\"Password incorrect\") } else { fmt.Println(\"Password correct\") } } 说明 bcrypt.CompareHashAndPassword(hashedPassword, password) 验证密码是否匹配哈希值。 如果密码匹配，返回 nil，否则返回 error。","s":"3.2 校验密码","u":"/en/docs/note/golang/bcrypt","h":"#32-校验密码","p":1091},{"i":1102,"t":"要修改密码，直接生成新哈希并存储： newPassword := \"new_secure_password\" newHashedPassword, _ := bcrypt.GenerateFromPassword([]byte(newPassword), bcrypt.DefaultCost) fmt.Println(\"Updated Hashed Password:\", string(newHashedPassword))","s":"3.3 修改密码","u":"/en/docs/note/golang/bcrypt","h":"#33-修改密码","p":1091},{"i":1104,"t":"如果哈希密码的成本过低，可以使用 bcrypt.Cost() 确定是否需要更新： cost, err := bcrypt.Cost([]byte(hashedPassword)) if err == nil && cost < bcrypt.DefaultCost { fmt.Println(\"Password hash is outdated, consider updating\") } 监测哈希成本并升级 如果 bcrypt.Cost 返回的值小于当前推荐值（如 12），则需要重新哈希密码： const recommendedCost = 12 func upgradePasswordHash(storedHash string, password string) string { cost, err := bcrypt.Cost([]byte(storedHash)) if err != nil { fmt.Println(\"Error getting cost:\", err) return storedHash } // 如果成本因子过低，则重新生成哈希 if cost < recommendedCost { newHash, err := bcrypt.GenerateFromPassword([]byte(password), recommendedCost) if err != nil { fmt.Println(\"Error upgrading hash:\", err) return storedHash } fmt.Println(\"Password hash upgraded.\") return string(newHash) } return storedHash }","s":"3.4 确定哈希是否需要更新","u":"/en/docs/note/golang/bcrypt","h":"#34-确定哈希是否需要更新","p":1091},{"i":1106,"t":"场景 说明 用户密码存储 安全存储用户密码，防止明文泄露 密码验证 在用户登录时进行哈希匹配 密码更新 检测哈希是否过时，并重新加密 防止暴力破解 bcrypt 计算开销高，能有效阻止暴力攻击","s":"4. 适用场景","u":"/en/docs/note/golang/bcrypt","h":"#4-适用场景","p":1091},{"i":1108,"t":"bcrypt.GenerateFromPassword() 生成哈希密码。 bcrypt.CompareHashAndPassword() 验证密码。 bcrypt.Cost() 检查哈希成本，确定是否需要升级。 Linux /etc/shadow 存储的是加密后的密码哈希，格式如下： $<加密算法>$<成本因子或迭代次数>$<salt+hash> 常见的加密算法： $1$ → MD5 $2a$ / $2b$ / $2y$ → bcrypt $5$ → SHA-256 $6$ → SHA-512 示例（bcrypt）： $2y$10$XGnVZqM9JpWcPKCqGRBBtuNA7E6x2ZK.7JsZh9y1X1Ij0wY2brJve $2y$ → 使用 bcrypt 加密 10 → 计算成本（cost factor） XGnVZqM9JpWcPKCqGRBBtu → 盐（salt） NA7E6x2ZK.7JsZh9y1X1Ij0wY2brJve → 哈希后的密码","s":"5. 总结","u":"/en/docs/note/golang/bcrypt","h":"#5-总结","p":1091},{"i":1111,"t":"os/exec 包提供了运行外部命令的方法，允许 Go 程序执行系统命令并与之交互。","s":"1. os/exec 包简介","u":"/en/docs/note/golang/cmd","h":"#1-osexec-包简介","p":1109},{"i":1113,"t":"exec.Command 用于创建一个代表外部命令的 Cmd 结构。","s":"2. exec.Command 基本用法","u":"/en/docs/note/golang/cmd","h":"#2-execcommand-基本用法","p":1109},{"i":1115,"t":"package main import ( \"fmt\" \"os/exec\" ) func main() { cmd := exec.Command(\"ls\", \"-l\") // 在 Linux/macOS 上列出当前目录内容 // 获取正确和错误输出 output, err := cmd.CombinedOutput() if err != nil { fmt.Println(\"Error:\", err) return } fmt.Println(string(output)) }","s":"2.1 获取stdout和stderr","u":"/en/docs/note/golang/cmd","h":"#21-获取stdout和stderr","p":1109},{"i":1117,"t":"package main import ( \"fmt\" \"os/exec\" ) func main() { cmd := exec.Command(\"ls\", \"-l\") output, err := cmd.Output() if err != nil { fmt.Println(\"Error:\", err) return } fmt.Println(\"Output:\", string(output)) }","s":"2.2 只获取stdout","u":"/en/docs/note/golang/cmd","h":"#22-只获取stdout","p":1109},{"i":1120,"t":"package main import ( \"bytes\" \"fmt\" \"os/exec\" ) func main() { cmd := exec.Command(\"echo\", \"Hello, World!\") var out bytes.Buffer cmd.Stdout = &out if err := cmd.Run(); err != nil { fmt.Println(\"Error:\", err) } fmt.Println(\"Output:\", out.String()) }","s":"3.1 使用cmd.Stdout","u":"/en/docs/note/golang/cmd","h":"#31-使用cmdstdout","p":1109},{"i":1122,"t":"StdoutPipe 允许我们以流式方式读取命令的标准输出。 package main import ( \"bufio\" \"fmt\" \"os/exec\" ) func main() { cmd := exec.Command(\"ping\", \"baidu.com\", \"-c\", \"30\") stdout, err := cmd.StdoutPipe() if err != nil { fmt.Println(\"Error creating StdoutPipe:\", err) return } if err := cmd.Start(); err != nil { fmt.Println(\"Error starting command:\", err) return } scanner := bufio.NewScanner(stdout) for scanner.Scan() { fmt.Println(\"Output line:\", scanner.Text()) } if err := cmd.Wait(); err != nil { fmt.Println(\"Error waiting for command:\", err) } }","s":"3.2 使用 StdoutPipe","u":"/en/docs/note/golang/cmd","h":"#32-使用-stdoutpipe","p":1109},{"i":1124,"t":"package main import ( \"bytes\" \"fmt\" \"os/exec\" ) func main() { cmd := exec.Command(\"cat\") var out bytes.Buffer cmd.Stdout = &out cmd.Stdin = bytes.NewBufferString(\"Hello from stdin!\") if err := cmd.Run(); err != nil { fmt.Println(\"Error:\", err) } fmt.Println(\"Output:\", out.String()) }","s":"3.3 传递输入 (stdin)","u":"/en/docs/note/golang/cmd","h":"#33-传递输入-stdin","p":1109},{"i":1126,"t":"cmd := exec.Command(\"printenv\") cmd.Env = append(cmd.Env, \"MY_VAR=HelloWorld\")","s":"3.4 设置环境变量","u":"/en/docs/note/golang/cmd","h":"#34-设置环境变量","p":1109},{"i":1128,"t":"package main import ( \"context\" \"fmt\" \"os/exec\" \"time\" ) func main() { ctx, cancel := context.WithTimeout(context.Background(), 2*time.Second) defer cancel() cmd := exec.CommandContext(ctx, \"sleep\", \"5\") if err := cmd.Run(); err != nil { fmt.Println(\"Command timed out or failed:\", err) } }","s":"3.5 运行带超时的命令","u":"/en/docs/note/golang/cmd","h":"#35-运行带超时的命令","p":1109},{"i":1130,"t":"package utils import ( \"os\" \"os/exec\" \"strings\" ) // Run executes a shell command without capturing its output. func Run(command string) error { cmd := prepareCommand(command) return cmd.Run() } // RunWithOutput executes a shell command and returns its combined stdout and stderr output. func RunWithOutput(command string) ([]byte, error) { cmd := prepareCommand(command) return cmd.CombinedOutput() } // RunWithExitCode executes a shell command and returns its output along with the exit code. func RunWithExitCode(command string) ([]byte, int, error) { cmd := prepareCommand(command) output, err := cmd.CombinedOutput() if err != nil { if exitErr, ok := err.(*exec.ExitError); ok { return output, exitErr.ExitCode(), err } return output, -1, err } return output, 0, nil } // prepareCommand initializes an *exec.Cmd with environment variables. func prepareCommand(command string) *exec.Cmd { args := strings.Fields(command) if len(args) == 0 { return exec.Command(\"\") // 处理空字符串情况，避免 panic } cmd := exec.Command(args[0], args[1:]...) cmd.Env = append(os.Environ(), \"LC_ALL=C\", \"LANG=C\") return cmd }","s":"3.6 增加错误判断","u":"/en/docs/note/golang/cmd","h":"#36-增加错误判断","p":1109},{"i":1132,"t":"package main // echo \"hello world!\" | grep World import ( \"bytes\" \"fmt\" \"os/exec\" ) func main() { cmd1 := exec.Command(\"echo\", \"Hello, World!\") cmd2 := exec.Command(\"grep\", \"World\") // 创建管道 pipe, err := cmd1.StdoutPipe() if err != nil { fmt.Println(\"Error creating pipe:\", err) return } cmd2.Stdin = pipe var out bytes.Buffer cmd2.Stdout = &out // 启动第一个命令 if err := cmd1.Start(); err != nil { fmt.Println(\"Error starting cmd1:\", err) return } // 启动第二个命令 if err := cmd2.Start(); err != nil { fmt.Println(\"Error starting cmd2:\", err) return } // 等待所有命令完成 if err := cmd1.Wait(); err != nil { fmt.Println(\"Error waiting for cmd1:\", err) return } if err := cmd2.Wait(); err != nil { fmt.Println(\"Error waiting for cmd2:\", err) return } fmt.Println(\"Filtered Output:\", out.String()) }","s":"3.7 使用管道连接多个命令","u":"/en/docs/note/golang/cmd","h":"#37-使用管道连接多个命令","p":1109},{"i":1134,"t":"exec.Command 用于创建并运行外部命令。 Stdout 和 Stderr 可以用于捕获命令输出。 StdoutPipe 适用于流式读取命令输出。 Output() 仅获取标准输出，而 CombinedOutput() 同时获取标准输出和标准错误。 Stdin 可以用于传递输入数据。 exec.CommandContext 可用于超时控制。 os/exec 包适用于需要在 Go 代码中执行外部命令的场景，例如自动化任务、系统管理和数据处理。","s":"4. 结论","u":"/en/docs/note/golang/cmd","h":"#4-结论","p":1109},{"i":1136,"t":"在 Golang 中，多协程 goroutine之间的交互主要通过以下几种方式实现：","s":"Golang 并发编程","u":"/en/docs/note/golang/concurrency","h":"","p":1135},{"i":1138,"t":"Golang 提供了 channel 作为 goroutine 之间通信的主要方式。它是线程安全的，并且可以避免数据竞争。","s":"1. Channel（推荐方式）","u":"/en/docs/note/golang/concurrency","h":"#1-channel推荐方式","p":1135},{"i":1140,"t":"避免竞争：channel 通过消息传递，而不是共享变量，减少数据竞争的可能性。 更符合 Go 语言哲学。 代码更简洁：避免手动加锁和解锁。","s":"1.1 Channel 的特点","u":"/en/docs/note/golang/concurrency","h":"#11-channel-的特点","p":1135},{"i":1142,"t":"package main import ( \"fmt\" \"time\" ) func worker(ch chan string) { time.Sleep(2 * time.Second) ch <- \"任务完成\" } func main() { ch := make(chan string) // 创建一个无缓冲 channel go worker(ch) // 启动 goroutine fmt.Println(\"等待任务完成...\") msg := <-ch // 接收数据（阻塞） fmt.Println(\"收到消息:\", msg) } 解释： ch := make(chan string) 创建了一个无缓冲的 channel。 go worker(ch) 启动一个协程 worker，并通过 channel 发送消息。 msg := <-ch 在主线程阻塞等待，直到 worker 发送数据。","s":"1.2 基础示例：","u":"/en/docs/note/golang/concurrency","h":"#12-基础示例","p":1135},{"i":1144,"t":"select 语句允许从多个 channel 读取数据，或者在通道无数据时执行默认操作。 package main import ( \"fmt\" \"time\" ) func main() { ch1 := make(chan string) ch2 := make(chan string) // 启动 goroutine 向 ch1 发送数据 go func() { time.Sleep(2 * time.Second) ch1 <- \"Message from ch1\" }() // 启动 goroutine 向 ch2 发送数据 go func() { time.Sleep(1 * time.Second) ch2 <- \"Message from ch2\" }() // `select` 监听多个 `channel` select { case msg1 := <-ch1: fmt.Println(\"Received:\", msg1) case msg2 := <-ch2: fmt.Println(\"Received:\", msg2) case <-time.After(3 * time.Second): fmt.Println(\"Timeout: No message received\") } } 代码解析 select 监听 ch1 和 ch2，哪个 channel 先有数据，就会执行对应的 case。 如果 3 秒内没有消息到达，则 case <-time.After(3 * time.Second) 触发，防止永久阻塞。 使用场景 监听多个 channel，避免阻塞。 超时控制：如 time.After 结合 select 限制请求时间。","s":"1.3 select 结合 channel 用法","u":"/en/docs/note/golang/concurrency","h":"#13-select-结合-channel-用法","p":1135},{"i":1146,"t":"任务队列（生产者-消费者模型）。 多个 worker 处理任务，避免共享变量。 限制并发任务的数量。","s":"1.4 Channel 的适用场景","u":"/en/docs/note/golang/concurrency","h":"#14-channel-的适用场景","p":1135},{"i":1148,"t":"如果多个 goroutine 需要同步执行完毕后再继续，sync.WaitGroup 是一种简单的方法。 示例： package main import ( \"fmt\" \"sync\" \"time\" ) func worker(id int, wg *sync.WaitGroup) { defer wg.Done() // 执行完成后减少计数 fmt.Printf(\"Worker %d 开始工作...\\n\", id) time.Sleep(2 * time.Second) fmt.Printf(\"Worker %d 完成工作!\\n\", id) } func main() { var wg sync.WaitGroup for i := 1; i <= 3; i++ { wg.Add(1) // 增加计数 go worker(i, &wg) // 启动 goroutine } wg.Wait() // 等待所有任务完成 fmt.Println(\"所有任务完成\") } 解释： wg.Add(1) 增加计数，每个 goroutine 开始时调用一次。 defer wg.Done() 在 goroutine 结束时减少计数。 wg.Wait() 阻塞主线程，直到所有 wg.Done() 调用完毕。","s":"2. sync.WaitGroup`","u":"/en/docs/note/golang/concurrency","h":"#2-syncwaitgroup","p":1135},{"i":1150,"t":"当多个 goroutine 需要修改共享数据时，可以使用 sync.Mutex 防止竞态条件（race condition）。 示例： package main import ( \"fmt\" \"sync\" \"time\" ) var ( counter int mu sync.Mutex ) func worker(id int, wg *sync.WaitGroup) { defer wg.Done() mu.Lock() counter++ fmt.Printf(\"Worker %d 计数: %d\\n\", id, counter) mu.Unlock() } func main() { var wg sync.WaitGroup for i := 1; i <= 5; i++ { wg.Add(1) go worker(i, &wg) } wg.Wait() fmt.Println(\"最终计数:\", counter) } 解释： mu.Lock() 保护 counter，防止多个 goroutine 并发修改时发生竞态条件。 mu.Unlock() 释放锁，允许其他 goroutine 继续执行。","s":"3.  sync.Mutex","u":"/en/docs/note/golang/concurrency","h":"#3--syncmutex","p":1135},{"i":1152,"t":"sync.Cond 适用于等待某个条件满足后再执行的场景，例如多个线程等待某个事件触发。 示例： package main import ( \"fmt\" \"sync\" \"time\" ) var ( ready = false cond = sync.NewCond(&sync.Mutex{}) ) func worker(id int) { cond.L.Lock() for !ready { cond.Wait() // 等待条件变为 true } fmt.Printf(\"Worker %d 开始工作!\\n\", id) cond.L.Unlock() } func main() { var wg sync.WaitGroup for i := 1; i <= 3; i++ { wg.Add(1) go func(id int) { defer wg.Done() worker(id) }(i) } time.Sleep(2 * time.Second) // 触发事件 cond.L.Lock() ready = true cond.L.Unlock() cond.Broadcast() // 通知所有等待的 goroutine wg.Wait() } 解释： cond.Wait() 等待条件 ready == true。 cond.Broadcast() 唤醒所有等待的 goroutine。","s":"4.  sync.Cond 进行事件通知","u":"/en/docs/note/golang/concurrency","h":"#4--synccond-进行事件通知","p":1135},{"i":1154,"t":"sync.Once 确保某个操作在多个 goroutine 中只执行一次，例如初始化操作。 示例： package main import ( \"fmt\" \"sync\" ) var once sync.Once func initialize() { fmt.Println(\"初始化操作\") } func worker(wg *sync.WaitGroup) { defer wg.Done() once.Do(initialize) fmt.Println(\"Worker 执行\") } func main() { var wg sync.WaitGroup for i := 0; i < 5; i++ { wg.Add(1) go worker(&wg) } wg.Wait() } 解释： once.Do(initialize) 确保 initialize() 只执行一次，无论多少个 goroutine 访问它。","s":"5.  sync.Once","u":"/en/docs/note/golang/concurrency","h":"#5--synconce","p":1135},{"i":1156,"t":"对于简单的数值操作，可以使用 sync/atomic 提供的原子操作代替 sync.Mutex，提升性能。","s":"6.  atomic","u":"/en/docs/note/golang/concurrency","h":"#6--atomic","p":1135},{"i":1158,"t":"package main import ( \"fmt\" \"sync\" \"sync/atomic\" ) var counter int64 func worker(wg *sync.WaitGroup) { defer wg.Done() atomic.AddInt64(&counter, 1) // 原子递增 } func main() { var wg sync.WaitGroup for i := 0; i < 10; i++ { wg.Add(1) go worker(&wg) } wg.Wait() fmt.Println(\"最终计数:\", counter) } 解释： atomic.AddInt64(&counter, 1) 确保 counter 在多个 goroutine 中安全递增，无需使用 sync.Mutex。","s":"示例：","u":"/en/docs/note/golang/concurrency","h":"#示例","p":1135},{"i":1160,"t":"context.Context 适用于控制多个 goroutine 的生命周期，例如超时、取消任务等。","s":"7.  context","u":"/en/docs/note/golang/concurrency","h":"#7--context","p":1135},{"i":1162,"t":"package main import ( \"context\" \"fmt\" \"time\" ) func worker(ctx context.Context) { for { select { case <-ctx.Done(): fmt.Println(\"Worker 任务超时，退出\") return default: fmt.Println(\"Worker 正在工作...\") time.Sleep(500 * time.Millisecond) } } } func main() { ctx, cancel := context.WithTimeout(context.Background(), 2*time.Second) defer cancel() go worker(ctx) time.Sleep(3 * time.Second) // 主线程等待 fmt.Println(\"主线程退出\") } 解释： context.WithTimeout 2 秒后会自动取消 ctx，通知 worker 退出。","s":"示例：","u":"/en/docs/note/golang/concurrency","h":"#示例-1","p":1135},{"i":1164,"t":"方式 适用场景 Channel 安全的数据传递，避免竞态条件 WaitGroup 等待多个 goroutine 结束 Mutex 保护共享资源，防止竞态 Cond 事件触发，等待通知 Once 只执行一次（单例模式） Atomic 高效数值计算，无锁并发 Context 超时、取消任务 如果主要是 goroutine 之间的通信，使用 channel（更安全，避免锁竞争）。 如果是多个 goroutine 操作同一个变量，使用 mutex（更高效）。 如果要限制并发数，二者可以结合使用，如 channel 控制并发，mutex 保护数据。 select 适用于监听多个 channel 和超时控制。 推荐做法： 优先考虑 channel，符合 Go 语言风格。 如果性能瓶颈明显（高频数据访问），使用 sync.Mutex 进行优化。 如果有并发控制需求，可以结合 channel 和 mutex。 select 适用于监听多个 channel 和超时控制。","s":"总结","u":"/en/docs/note/golang/concurrency","h":"#总结","p":1135},{"i":1166,"t":"runtime/debug 是 Go 标准库中用于调试和运行时信息收集的重要包，提供了多种实用功能。下面我将详细介绍其主要功能和用法：","s":"Golang runtime/debug 用法","u":"/en/docs/note/golang/debug","h":"","p":1165},{"i":1168,"t":"强制垃圾回收 debug.GC() // 显式触发一次垃圾回收 强制将未使用的内存返回给操作系统。 注意：Go 会自动做内存管理，这个函数一般用于调试或特殊情况。 debug.FreeOSMemory() // 将未使用的内存返回给操作系统 设置垃圾回收器的触发频率。 默认值是 100，表示内存分配增长 100% 就触发 GC。 设置为负数会关闭 GC。 // 设置GC目标百分比（默认100） // 值越大GC越不频繁，但内存使用更多 debug.SetGCPercent(200) // Go 1.19+ 设置内存软限制 debug.SetMemoryLimit(512 * 1024 * 1024) // 512MB 读取GC统计信息 var stats debug.GCStats debug.ReadGCStats(&stats) fmt.Printf(\"上次GC时间: %v\\n\", stats.LastGC) fmt.Printf(\"GC总次数: %d\\n\", stats.NumGC) fmt.Printf(\"GC总暂停时间: %v\\n\", stats.PauseTotal) fmt.Printf(\"最近GC暂停时间: %v\\n\", stats.Pause) 生成堆转储 func writeHeapDump(filename string) error { f, err := os.Create(filename) if err != nil { return err } defer f.Close() return debug.WriteHeapDump(f.Fd()) // 需要文件描述符 }","s":"1. 内存和垃圾回收相关操作","u":"/en/docs/note/golang/debug","h":"#1-内存和垃圾回收相关操作","p":1165},{"i":1170,"t":"获取当前调用栈 stack := debug.Stack() // 返回[]byte fmt.Printf(\"%s\\n\", stack) 打印当前的堆栈信息（stack trace），常用于调试 panic 或 goroutine 调度问题。 // 打印对应goroutine 堆栈 debug.PrintStack() 设置最大堆栈深度 设置每个 goroutine 的最大堆栈大小。一般调试 goroutine stack 溢出问题才用。 debug.SetMaxStack(64 * 1024 * 1024) // 64MB 示例： package main import ( \"fmt\" \"runtime/debug\" \"time\" ) func main() { fmt.Println(\"Start\") go func() { defer func() { fmt.Println(\"Recovered\") }() fmt.Println(\"Hello World\") debug.PrintStack() }() time.Sleep(1 * time.Second) debug.PrintStack() fmt.Println(\"End\") } 设置panic堆栈跟踪级别 // 可选值: \"none\", \"single\", \"all\", \"system\", \"crash\" debug.SetTraceback(\"all\") // 显示所有goroutine的堆栈","s":"2. 堆栈信息操作","u":"/en/docs/note/golang/debug","h":"#2-堆栈信息操作","p":1165},{"i":1172,"t":"读取模块构建信息 package main import ( \"fmt\" \"github.com/sirupsen/logrus\" \"runtime/debug\" ) func main() { logrus.Info(\"Hello World\") bi, ok := debug.ReadBuildInfo() if ok { fmt.Printf(\"Go Version: %s\\n\", bi.GoVersion) fmt.Printf(\"Main Module: %s@%s\\n\", bi.Main.Path, bi.Main.Version) for _, dep := range bi.Deps { fmt.Printf(\"Dependency: %s@%s\\n\", dep.Path, dep.Version) } for _, set := range bi.Settings { fmt.Printf(\"Settings: %s@%s\\n\", set.Key, set.Value) } } } 打印如下： INFO[0000] Hello World Go Version: go1.20.4 Main Module: demo@(devel) Dependency: github.com/sirupsen/logrus@v1.9.3 Dependency: golang.org/x/sys@v0.29.0 Settings: -buildmode@exe Settings: -compiler@gc Settings: CGO_ENABLED@1 Settings: CGO_CFLAGS@ Settings: CGO_CPPFLAGS@ Settings: CGO_CXXFLAGS@ Settings: CGO_LDFLAGS@ Settings: GOARCH@amd64 Settings: GOOS@linux Settings: GOAMD64@v1 Settings: vcs@git Settings: vcs.revision@47a4d73f30696cd2bf2ec09a16f6d3ba7ae563e6 Settings: vcs.time@2025-04-07T09:35:26Z Settings: vcs.modified@false $ git log commit 47a4d73f30696cd2bf2ec09a16f6d3ba7ae563e6 (HEAD -> master) Author: Your Name <you@example.com> Date: Mon Apr 7 17:35:26 2025 +0800 1","s":"3. 构建信息读取","u":"/en/docs/note/golang/debug","h":"#3-构建信息读取","p":1165},{"i":1175,"t":"func monitorMemory(threshold uint64) { for { var m runtime.MemStats runtime.ReadMemStats(&m) if m.Alloc > threshold { debug.FreeOSMemory() debug.GC() f, _ := os.Create(\"heapdump.out\") debug.WriteHeapDump(f.Fd()) f.Close() return } time.Sleep(5 * time.Second) } }","s":"4.1. 内存监控工具","u":"/en/docs/note/golang/debug","h":"#41-内存监控工具","p":1165},{"i":1177,"t":"func setupPanicRecovery() { defer func() { if r := recover(); r != nil { fmt.Fprintf(os.Stderr, \"Panic: %v\\n\", r) debug.PrintStack() // 保存堆栈到文件 stack := debug.Stack() os.WriteFile(\"panic.log\", stack, 0644) os.Exit(1) } }() // 应用主逻辑 runApplication() }","s":"4.2. 增强的panic处理","u":"/en/docs/note/golang/debug","h":"#42-增强的panic处理","p":1165},{"i":1179,"t":"func showVersion() { bi, ok := debug.ReadBuildInfo() if !ok { fmt.Println(\"无法获取构建信息\") return } fmt.Printf(\"应用: %s\\n版本: %s\\nGo版本: %s\\n\", bi.Main.Path, bi.Main.Version, bi.GoVersion) fmt.Println(\"\\n依赖项:\") for _, dep := range bi.Deps { fmt.Printf(\"- %s@%s\\n\", dep.Path, dep.Version) } }","s":"4.3. 构建信息展示","u":"/en/docs/note/golang/debug","h":"#43-构建信息展示","p":1165},{"i":1181,"t":"WriteHeapDump 功能在不同平台上表现可能不同 设置过高的 SetGCPercent 可能导致内存使用过多 SetMemoryLimit 仅在 Go 1.19+ 可用 生产环境中谨慎使用 FreeOSMemory，可能导致性能下降 runtime/debug 包是 Go 开发者工具箱中的重要组成部分，特别适用于： 内存泄漏调试 性能问题诊断 构建版本管理 生产环境问题排查 自定义错误处理机制 通过合理使用这些功能，可以显著提升 Go 应用程序的可调试性和可靠性。","s":"5. 注意事项","u":"/en/docs/note/golang/debug","h":"#5-注意事项","p":1165},{"i":1183,"t":"microkernel 设计1 目前只支持服务发送消息，内核接受消息。 在本章节，我会增加内核发送消息到服务","s":"microkernel 设计2","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"","p":1182},{"i":1185,"t":"内核发送消息到服务","s":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#1-目标","p":1182},{"i":1188,"t":"服务增加消息处理方法 // kernel/kernel.go type Service interface { Start() error Stop() error Name() string // 增加消息处理方法 Handle(msg string) string } 事件增加发送地址 // kernel/kernel.go // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string } 内核发送事件到服务 // kernel/kernel.go // HandleEvent 处理事件（模拟服务间通信） func (k *Kernel) HandleEvent(evt Event) (msg string) { k.mutex.RLock() defer k.mutex.RUnlock() if svc, ok := k.services[evt.To]; ok { return svc.Handle(evt.Content) } return \"service not found\" }","s":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#21-kernel核心","p":1182},{"i":1190,"t":"增加Handle方法实现 // service/log.go // service 增加Handle接口实现 func (l *LogService) Handle(msg string) string { fmt.Printf(\"[%s] LOG handle kernel event: %s\\n\", l.name, msg) return fmt.Sprintf(\"[%s] LOG Handle: %s\\n\", l.name, msg) }","s":"2.2 LogService","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#22-logservice","p":1182},{"i":1192,"t":"kernel发送消息到service // main.go // 6. microKernel 发送事件到指定服务 microKernel.HandleEvent(kernel.Event{ From: \"microKernel\", To: \"logger\", Type: \"log\", Content: \"Hello, Log!\", }) time.Sleep(1 * time.Millisecond)","s":"2.3 主程序（运行微内核 + 服务）","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#23-主程序运行微内核--服务","p":1182},{"i":1194,"t":"[logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... 查看完整代码","s":"2.4 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#24-运行结果","p":1182},{"i":1196,"t":"HandleEvent 修改为 Send SendEvent 修改为 Push LoopEvent 修改为Listen mutex修改为 mu 查看完整代码","s":"2.5 优化函数和变量命名","u":"/en/docs/note/golang/design/microkernel/microkernel2","h":"#25-优化函数和变量命名","p":1182},{"i":1200,"t":"使用channel 在 goroutine 间进行通信和同步操作 package main import ( \"fmt\" \"time\" ) // SetRulesRequest 表示设置规则的请求结构 type SetRulesRequest struct { NewRules []string Response chan error // 用于同步返回是否成功 } // Aggregator 用于管理规则并支持并发设置 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} } // SetRules 是向 aggregator 发送新规则的接口 func (a *Aggregator) SetRules(r []string) error { req := &SetRulesRequest{ NewRules: r, Response: make(chan error), } a.setRulesChan <- req return <-req.Response // 等待响应结束 } // Run 启动 aggregator 的工作协程 func (a *Aggregator) Run() { for { select { case req := <-a.setRulesChan: a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) req.Response <- nil // 成功响应 case <-a.stopChan: return } } } // Stop 关闭 aggregator 的后台协程 func (a *Aggregator) Stop() { close(a.stopChan) } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), } go aggregator.Run() // 模拟使用 time.Sleep(500 * time.Millisecond) aggregator.SetRules([]string{\"a\", \"b\", \"c\"}) aggregator.SetRules([]string{\"d\", \"e\", \"f\"}) // 停止后台协程 aggregator.Stop() } 🔍 说明重点： 通信模型：调用者通过 SetRules 向 Aggregator 的 channel 发送数据，然后通过一个 Response channel 同步等待执行结果。 响应式设计：Aggregator 处理请求后通过 channel 回复，避免竞态。 易扩展性：你可以将更多操作（如查询、追加等）封装成不同的 request 结构体，并通过不同 channel 或类型区分处理。","s":"1. channel 交互","u":"/en/docs/note/design/multi_goroutine","h":"#1-channel-交互","p":1198},{"i":1203,"t":"发送端（ch <- v）向已关闭 channel 发送数据： 会 panic！ 接收端（<-chan）读取已关闭 channel： 不会 panic， 立即返回零值 第二个返回值判断是否关闭。即：v, ok := <-ch，如果 ok == false，说明 channel 已关闭。 不判断。即: v := <-ch，立即返回零值，无法判断 channel 是否关闭。 即：v, ok := <-ch，如果 ok == false，说明 channel 已关闭。 举例 package main import ( \"log\" \"time\" ) func main() { //ch := make(chan int, 2) ch := make(chan int) go func() { ch <- 20 time.Sleep(1 * time.Second) defer close(ch) }() // 只接收数据，不检查通道状态 rules := <-ch log.Println(\"Rules:\", rules) // 输出：14:47:31 Rules: 20 rules = <-ch log.Println(\"Rules:\", rules) // 输出：14:47:32 Rules: 0 rules = <-ch log.Println(\"Rules:\", rules) // 输出：14:47:32 Rules: 0 // 读取时检查通道是否仍然开放 rules, open := <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:39 Rules: 20 Open: true rules, open = <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:40 Rules: 0 Open: false rules, open = <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:40 Rules: 0 Open: false }","s":"2.1. 理解 channel 行为","u":"/en/docs/note/design/multi_goroutine","h":"#21-理解-channel-行为","p":1198},{"i":1205,"t":"✅ 特性亮点： 安全关闭 goroutine： setRulesChan 和 stopChan 都支持关闭，防止死锁或 panic。 带 ok 判断防止接收已关闭的 channel 导致数据为 nil。 封装清晰： Run() 执行逻辑清晰，Stop() 方法负责安全退出和资源清理。 package main import ( \"fmt\" \"time\" ) // 请求结构体，设置规则并通过 Response 返回结果 type SetRulesRequest struct { NewRules []string Response chan error } // 聚合器结构 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} doneChan chan struct{} // 通知主线程已退出 } // Run 启动 Aggregator 的工作协程 func (a *Aggregator) Run() { defer close(a.doneChan) // 通知主线程：后台协程已退出 for { select { case req, ok := <-a.setRulesChan: if !ok { fmt.Println(\"setRulesChan closed, exiting Run()\") return } a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) // 响应调用者 req.Response <- nil case <-a.stopChan: fmt.Println(\"Received stop signal, exiting Run()\") return } } } // SetRules 发送规则请求 func (a *Aggregator) SetRules(r []string) error { req := &SetRulesRequest{ NewRules: r, Response: make(chan error), } select { case a.setRulesChan <- req: return <-req.Response case <-a.stopChan: return fmt.Errorf(\"aggregator is shutting down\") } } // Stop 关闭 aggregator，确保 goroutine 优雅退出 func (a *Aggregator) Stop() { close(a.stopChan) // 通知退出 close(a.setRulesChan) // 防止阻塞在 <-setRulesChan <-a.doneChan // 等待后台处理完成 fmt.Println(\"Aggregator stopped gracefully\") } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), doneChan: make(chan struct{}), } go aggregator.Run() time.Sleep(500 * time.Millisecond) aggregator.SetRules([]string{\"a\", \"b\", \"c\"}) aggregator.SetRules([]string{\"x\", \"y\", \"z\"}) aggregator.Stop() }","s":"2.2. 使用判断channel 优化示例","u":"/en/docs/note/design/multi_goroutine","h":"#22-使用判断channel-优化示例","p":1198},{"i":1207,"t":"🧠 为啥用 context.Context？ 防止调用者被永久阻塞：例如 aggregator goroutine 迟迟不响应。 可设置 timeout 或 cancel，适合服务端编程模型。 可组合多种取消方式（定时取消 + 主动取消）。 ✅ 增强功能： SetRules 支持超时 / 取消（避免卡死等待响应）。 context.Context 控制响应等待过程。 依然保留 graceful shutdown 支持（Stop()）。 package main import ( \"context\" \"fmt\" \"time\" ) // 请求结构体，设置规则并通过 Response 返回结果 type SetRulesRequest struct { NewRules []string Response chan error } // 聚合器结构体 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} doneChan chan struct{} } // Run 启动 aggregator 的工作协程 func (a *Aggregator) Run() { defer close(a.doneChan) for { select { case req, ok := <-a.setRulesChan: if !ok { fmt.Println(\"setRulesChan closed, exiting Run()\") return } a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) req.Response <- nil case <-a.stopChan: fmt.Println(\"Received stop signal, exiting Run()\") return } } } // SetRulesCtx 支持 context 超时 / 取消控制 func (a *Aggregator) SetRulesCtx(ctx context.Context, rules []string) error { req := &SetRulesRequest{ NewRules: rules, Response: make(chan error, 1), // 非阻塞回写 } // 模拟耗时操作 time.Sleep(2 * time.Millisecond) select { case a.setRulesChan <- req: // 等待响应 or context 超时 select { case err := <-req.Response: return err case <-ctx.Done(): return fmt.Errorf(\"set rules timeout or cancelled: %w\", ctx.Err()) } case <-a.stopChan: return fmt.Errorf(\"aggregator shutting down\") case <-ctx.Done(): return fmt.Errorf(\"send timeout or cancelled: %w\", ctx.Err()) } } // Stop 优雅关闭 func (a *Aggregator) Stop() { close(a.stopChan) close(a.setRulesChan) <-a.doneChan fmt.Println(\"Aggregator stopped gracefully\") } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), doneChan: make(chan struct{}), } go aggregator.Run() // 模拟正常调用 ctx := context.Background() aggregator.SetRulesCtx(ctx, []string{\"a\", \"b\", \"c\"}) // 模拟带 timeout 的调用（1ms 会超时） ctxTimeout, cancel := context.WithTimeout(context.Background(), 1*time.Millisecond) defer cancel() err := aggregator.SetRulesCtx(ctxTimeout, []string{\"should\", \"fail\", \"fast\"}) if err != nil { fmt.Println(\"Timeout err:\", err) } // 正常调用 ctx2, cancel2 := context.WithTimeout(context.Background(), 2*time.Second) defer cancel2() aggregator.SetRulesCtx(ctx2, []string{\"x\", \"y\", \"z\"}) aggregator.Stop() }","s":"3. 支持 context.Context","u":"/en/docs/note/design/multi_goroutine","h":"#3-支持-contextcontext","p":1198},{"i":1209,"t":"CommandHandler 模式是命令模式（Command Pattern）的一种实现方式，常用于将请求（命令）与处理逻辑解耦，从而提高系统的灵活性和可扩展性。它通过将命令封装为对象，并由专门的 CommandHandler 负责执行这些命令，使得系统能够更轻松地管理命令的生命周期、支持撤销/重做操作、实现事务管理或异步处理。 核心概念 Command（命令） 定义一个接口或抽象类，声明执行命令的方法（如 execute()）。 具体命令类实现该接口，封装请求的具体逻辑。 CommandHandler（命令处理器） 负责接收命令对象并调用其 execute() 方法。 可以扩展为支持命令的调度、排队、事务管理或异步执行。 Invoker（调用者） 触发命令的对象，通常持有对 CommandHandler 的引用。 Receiver（接收者） 执行命令实际逻辑的对象，命令对象通过依赖注入或组合的方式与接收者交互。 🎯 目标： 支持不同类型请求的统一处理通道 类似“命令模式”：将操作封装为一个结构体 可扩展、可测试、context 支持、graceful shutdown ✅ 架构设计： +--------------------+ | CommandHandler | |--------------------| | chan Command |<----------- Send() | goroutine: dispatch| (通用异步接口) +--------------------+ | V +--------------------+ | Command (接口) |<-- 多种请求实现： | Execute(context) | - SetRulesCommand +--------------------+ - GetRulesCommand - AppendRulesCommand ✨ 通用实现（含 SetRules 和 GetRules）： package main import ( \"context\" \"errors\" \"fmt\" ) // Command 是所有请求的接口 type Command interface { Execute(ctx context.Context, h *Handler) Done() <-chan struct{} Err() error } // Handler 管理状态和调度命令执行 type Handler struct { rules []string cmdChan chan Command stop chan struct{} done chan struct{} } // 基础命令结构 type baseCommand struct { err error done chan struct{} } func (c *baseCommand) Done() <-chan struct{} { return c.done } func (c *baseCommand) Err() error { return c.err } // SetRulesCommand 设置规则 type SetRulesCommand struct { baseCommand NewRules []string } func (c *SetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) h.rules = c.NewRules fmt.Println(\"SetRulesCommand executed:\", h.rules) } // GetRulesCommand 获取规则 type GetRulesCommand struct { baseCommand Result chan []string } func (c *GetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) c.Result <- h.rules close(c.Result) } func NewHandler() *Handler { return &Handler{ rules: []string{}, cmdChan: make(chan Command), stop: make(chan struct{}), done: make(chan struct{}), } } // Run 启动处理循环 func (h *Handler) Run() { defer close(h.done) for { select { case cmd := <-h.cmdChan: ctx := context.Background() // 可支持 ctx 控制 cmd.Execute(ctx, h) case <-h.stop: return } } } // Send 提交命令（带超时支持） func (h *Handler) Send(ctx context.Context, cmd Command) error { select { case h.cmdChan <- cmd: select { case <-cmd.Done(): return cmd.Err() case <-ctx.Done(): return ctx.Err() } case <-h.stop: return errors.New(\"handler is stopped\") case <-ctx.Done(): return ctx.Err() } } // Stop 优雅关闭 func (h *Handler) Stop() { close(h.stop) <-h.done } func main() { handler := NewHandler() go handler.Run() ctx := context.Background() setCmd := &SetRulesCommand{ baseCommand: baseCommand{done: make(chan struct{})}, NewRules: []string{\"a\", \"b\", \"c\"}, } handler.Send(ctx, setCmd) // 获取规则 getCmd := &GetRulesCommand{ baseCommand: baseCommand{done: make(chan struct{})}, Result: make(chan []string, 1), } handler.Send(ctx, getCmd) fmt.Println(\"Current rules:\", <-getCmd.Result) handler.Stop() } ✅ 泛型式响应的 ResultCommand[T] 设计 实现目标： 命令支持携带强类型返回值（例如：[]string、int、bool 等）； 支持 context 控制； 解耦命令发送与执行，类型安全 的异步响应； 易扩展、结构清晰。 package main import ( \"context\" \"errors\" \"fmt\" \"time\" ) // 通用 Command 接口 type Command interface { Execute(context.Context, *Handler) Done() <-chan struct{} Err() error } // Handler：命令处理器 type Handler struct { rules []string cmdChan chan Command stop chan struct{} done chan struct{} } func NewHandler() *Handler { return &Handler{ rules: []string{}, cmdChan: make(chan Command), stop: make(chan struct{}), done: make(chan struct{}), } } func (h *Handler) Run() { defer close(h.done) for { select { case cmd := <-h.cmdChan: cmd.Execute(context.Background(), h) case <-h.stop: return } } } func (h *Handler) Stop() { close(h.stop) <-h.done } // Send 支持泛型命令发送 func (h *Handler) Send(ctx context.Context, cmd Command) error { select { case h.cmdChan <- cmd: select { case <-cmd.Done(): return cmd.Err() case <-ctx.Done(): return ctx.Err() } case <-ctx.Done(): return ctx.Err() case <-h.stop: return errors.New(\"handler stopped\") } } // 泛型命令 ResultCommand[T] // -------------------------------- type ResultCommand[T any] struct { result T err error done chan struct{} resultC chan T } func NewResultCommand[T any]() *ResultCommand[T] { return &ResultCommand[T]{ done: make(chan struct{}), resultC: make(chan T, 1), // 非阻塞写入 } } func (c *ResultCommand[T]) Done() <-chan struct{} { return c.done } func (c *ResultCommand[T]) Err() error { return c.err } // Wait 等待结果 func (c *ResultCommand[T]) Wait(ctx context.Context) (T, error) { select { case <-ctx.Done(): var zero T return zero, ctx.Err() case res := <-c.resultC: return res, c.err } } // -------------------------------- // 示例命令：GetRulesCommand 返回 []string // -------------------------------- type GetRulesCommand struct { *ResultCommand[[]string] } func NewGetRulesCommand() *GetRulesCommand { return &GetRulesCommand{ ResultCommand: NewResultCommand[[]string](), } } func (c *GetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) c.result = h.rules c.resultC <- h.rules } // -------------------------------- // 示例命令：SetRulesCommand // -------------------------------- type SetRulesCommand struct { newRules []string done chan struct{} err error } func NewSetRulesCommand(rules []string) *SetRulesCommand { return &SetRulesCommand{ newRules: rules, done: make(chan struct{}), } } func (c *SetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) h.rules = c.newRules fmt.Println(\"Rules updated:\", h.rules) } func (c *SetRulesCommand) Done() <-chan struct{} { return c.done } func (c *SetRulesCommand) Err() error { return c.err } // 🧪 Main 演示：SetRules 和 GetRules 泛型返回 func main() { h := NewHandler() go h.Run() ctx := context.Background() // Set rules setCmd := NewSetRulesCommand([]string{\"x\", \"y\", \"z\"}) _ = h.Send(ctx, setCmd) // Get rules getCmd := NewGetRulesCommand() _ = h.Send(ctx, getCmd) rules, err := getCmd.Wait(ctx) if err != nil { fmt.Println(\"GetRules error:\", err) } else { fmt.Println(\"Got rules:\", rules) } // 超时测试 timeoutCtx, cancel := context.WithTimeout(ctx, 1*time.Millisecond) defer cancel() getCmd2 := NewGetRulesCommand() _ = h.Send(timeoutCtx, getCmd2) rules2, err := getCmd2.Wait(timeoutCtx) fmt.Println(\"With timeout:\", rules2, err) h.Stop() } 输出示例： Rules updated: [x y z] Got rules: [x y z] With timeout: [] context deadline exceeded 📦 可扩展示例命令 GetStatsCommand struct{ ResultCommand[map[string]int] } FlushToDiskCommand struct{ ResultCommand[bool] } LoadConfigCommand struct{ ResultCommand[Config] } AppendRulesCommand struct{ Rules []string }","s":"4. CommandHandler 模式","u":"/en/docs/note/design/multi_goroutine","h":"#4-commandhandler-模式","p":1198},{"i":1212,"t":"服务 能读取 Kernel 的返回信息 实现方法参考链接： gitee weidongkl.github.io","s":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel3","h":"#1-目标","p":1210},{"i":1214,"t":"可以为每个 Service 提供一个专属的响应通道（channel），内核通过这个通道将处理结果或反馈信息“推送”回去。 每次发送消息附带一个 ReplyCh。 内核在收到消息后通过该通道写回响应。 Service 读取 ReplyCh 获取反馈。","s":"2. 代码改动","u":"/en/docs/note/golang/design/microkernel/microkernel3","h":"#2-代码改动","p":1210},{"i":1216,"t":"事件增加读取返回的channel // kernel/kernel.go // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string // 增加响应通道 ReplyCh chan string } listen 增加返回值得写入 // kernel/kernel.go func (k *Kernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: %s - %s\\n\", evt.From, evt.Type, evt.Content) // 增加返回的写入 if evt.ReplyCh != nil { evt.ReplyCh <- fmt.Sprintf(\"ack: %s\", evt.Content) } } } }","s":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel3","h":"#21-kernel核心","p":1210},{"i":1218,"t":"服务增加返回的读取 func (l *LogService) run() { for { select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 replyCh := make(chan string, 1) l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", Content: log, ReplyCh: replyCh, }) // 等待内核回应 reply := <-replyCh fmt.Printf(\"[%s] got reply from kernel: %s\\n\", l.Name(), reply) } } }// service/log.go // service 增加Handle接口实现 func (l *LogService) Handle(msg string) string { fmt.Printf(\"[%s] LOG handle kernel event: %s\\n\", l.name, msg) return fmt.Sprintf(\"[%s] LOG Handle: %s\\n\", l.name, msg) }","s":"2.2 LogService","u":"/en/docs/note/golang/design/microkernel/microkernel3","h":"#22-logservice","p":1210},{"i":1220,"t":"Registered: logger [logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] got reply from kernel: ack: Hello, Microkernel! [Kernel] Send Event to logger: Hello, Log! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... 查看完整代码","s":"2.3 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel3","h":"#23-运行结果","p":1210},{"i":1222,"t":"microkernel（微内核）架构的核心思想是 核心功能最小化，其他功能以插件或服务的形式运行在用户态，通过 进程间通信（IPC） 与内核交互。","s":"microkernel 设计1","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"","p":1221},{"i":1225,"t":"内核小、职责单一 内核只负责最基本的功能，比如线程调度、地址空间管理、IPC。 模块化、可扩展 文件系统、驱动程序等作为用户空间服务，易于替换和调试。 可靠性高 一个用户态服务崩溃不会影响整个系统。 通信开销大 模块间依赖消息传递，相比传统内核切换用户态和内核态的代价更大。","s":"1.1 特点","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#11-特点","p":1221},{"i":1227,"t":"Kernel（内核） 负责 服务注册、消息路由、生命周期管理。 Services（服务） 独立模块（如 LogService、StorageService），运行在用户态。 通信机制（IPC） 使用 Go 的 Channel 或 gRPC 进行通信。","s":"1.2 核心组件","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#12-核心组件","p":1221},{"i":1230,"t":"package kernel import ( \"context\" \"errors\" \"fmt\" \"sync\" ) // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string } // Kernel 微内核核心 type Kernel struct { // 注册的服务通道 services map[string]Service // 保护 services 的并发访问 mutex sync.RWMutex // 全局事件总线 eventCh chan Event } // Event 定义内核事件（用于服务间通信） type Event struct { From string Type string Content string } // NewKernel 创建微内核实例 func NewKernel() *Kernel { return &Kernel{ services: make(map[string]Service), eventCh: make(chan Event, 100), } } // RegisterService 注册服务 func (k *Kernel) RegisterService(s Service) error { k.mutex.Lock() defer k.mutex.Unlock() name := s.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = s return nil } // StartAll 启动所有服务 func (k *Kernel) StartAll() error { k.mutex.RLock() defer k.mutex.RUnlock() for _, s := range k.services { if err := s.Start(); err != nil { return err } } return nil } // StopAll 停止所有服务 func (k *Kernel) StopAll() error { k.mutex.RLock() defer k.mutex.RUnlock() var err error for _, s := range k.services { if e := s.Stop(); e != nil { err = e } } return err } // SendEvent 发送事件（模拟 IPC） func (k *Kernel) SendEvent(evt Event) { k.eventCh <- evt } // EventLoop 事件循环（处理服务间通信） func (k *Kernel) EventLoop(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: %s - %s\\n\", evt.From, evt.Type, evt.Content) } } }","s":"2.1 定义 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#21-定义-kernel核心","p":1221},{"i":1232,"t":"package service import ( \"fmt\" \"microkernel/kernel\" ) // LogService 日志服务 type LogService struct { name string kernel *kernel.Kernel logCh chan string stopCh chan struct{} } func NewLogService(name string, kernel *kernel.Kernel) *LogService { return &LogService{ name: name, kernel: kernel, logCh: make(chan string, 100), stopCh: make(chan struct{}), } } func (l *LogService) Start() error { fmt.Printf(\"[%s] starting...\\n\", l.name) go l.run() return nil } func (l *LogService) Stop() error { fmt.Printf(\"[%s] stopping...\\n\", l.name) close(l.stopCh) return nil } func (l *LogService) Name() string { return l.name } func (l *LogService) run() { for { select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 l.kernel.SendEvent(kernel.Event{ From: l.name, Type: \"log\", Content: log, }) } } } func (l *LogService) Log(msg string) { l.logCh <- msg }","s":"2.2 实现示例服务（LogService）","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#22-实现示例服务logservice","p":1221},{"i":1234,"t":"package main import ( \"context\" \"microkernel/kernel\" \"microkernel/service\" \"time\" ) func main() { // 1. 创建微内核 kernel := kernel.NewKernel() // 2. 注册服务 logSvc := service.NewLogService(\"logger\", kernel) if err := kernel.RegisterService(logSvc); err != nil { panic(err) } // 3. 启动所有服务 if err := kernel.StartAll(); err != nil { panic(err) } // 4. 启动事件循环 ctx, cancel := context.WithCancel(context.Background()) defer cancel() go kernel.EventLoop(ctx) // 5. 测试日志服务 logSvc.Log(\"Hello, Microkernel!\") time.Sleep(1 * time.Second) // 6. 停止所有服务 if err := kernel.StopAll(); err != nil { panic(err) } }","s":"2.3 主程序（运行微内核 + 服务）","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#23-主程序运行微内核--服务","p":1221},{"i":1236,"t":"[logger] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: log - Hello, Microkernel! [logger] stopping...","s":"2.4 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#24-运行结果","p":1221},{"i":1238,"t":"使用 gRPC 替代 Channel（实现跨进程通信）。 动态加载服务（如插件化架构）。 增加服务发现机制（如 Consul/Etcd）。 支持更复杂的事件路由（如基于 Topic 的 Pub/Sub）。","s":"3. 扩展方向","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#3-扩展方向","p":1221},{"i":1240,"t":"微内核的核心：Kernel 只管理 Service 的生命周期和通信。 服务独立：每个 Service 运行在自己的 Goroutine 中，互不干扰。 通信方式： 简单场景：Channel（如示例）。 复杂场景：gRPC、NATS、WebSocket 等。 查看完整代码","s":"4. 总结","u":"/en/docs/note/golang/design/microkernel/microkernel1","h":"#4-总结","p":1221},{"i":1243,"t":"服务状态管理 单独服务管理 优化项目结构","s":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel5","h":"#1-目标","p":1241},{"i":1246,"t":"定义服务状态和服务元数据 // kernel/service.go // ServiceState 定义微内核服务状态 type ServiceState int // 使用iota枚举类型，自动计算枚举值 const ( Created ServiceState = iota Running Stopped ) // ServiceState.String() func (s ServiceState) String() string { // 状态转换成字符串 // 其中[...]表示让编译器自动计算数组的长度 return [...]string{\"Created\", \"Running\", \"Stopped\"}[s] } // serviceMeta 定义微内核服务元数据 type serviceMeta struct { svc Service state ServiceState } 单个服务管理 // kernel/kernel.go func (k *MicroKernel) StartService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Running { return errors.New(\"service already started\") } if err := meta.svc.Start(); err != nil { return err } meta.state = Running fmt.Println(\"Started:\", meta.svc.Name()) return nil } func (k *MicroKernel) StopService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Stopped { return errors.New(\"service already stopped\") } if err := meta.svc.Stop(); err != nil { return err } meta.state = Stopped fmt.Println(\"Stopped:\", meta.svc.Name()) return nil } Listen 增加服务状态判断，未运行的服务，不再处理消息 // Listen 事件循环（处理服务间通信） // 监听事件，处理服务间通信 // 重命名 EventLoop 为 Listen func (k *MicroKernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[MicroKernel] Event from %s: - %s\\n\", evt.From, evt.Content) // 发送给 MicroKernel 自己 if evt.To == \"\" { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 0, Message: \"Handled by kernel\", Data: \"ok\"} } continue } // 路由到目标服务 k.mu.RLock() meta, ok := k.services[evt.To] k.mu.RUnlock() if !ok || meta.state != Running { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 404, Message: \"service unavailable\", Data: \"\"} } continue } // 调用目标服务处理，并返回 go func(s Service, m Event) { result := s.Handle(m) if m.ReplyCh != nil { select { case m.ReplyCh <- result: case <-time.After(time.Duration(m.TimeoutMs) * time.Millisecond): m.ReplyCh <- Reply{Code: 408, Message: \"timeout\", Data: \"\"} } } }(meta.svc, evt) } } }","s":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel5","h":"#21-kernel核心","p":1241},{"i":1248,"t":"Registered: logger Registered: echo Starting all services... [logger] starting... [echo] starting... [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } [logger] stopping... [echo] stopping... 查看完整代码","s":"2.2 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel5","h":"#22-运行结果","p":1241},{"i":1251,"t":"支持服务依赖关系管理","s":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel6","h":"#1-目标","p":1249},{"i":1254,"t":"定义服务依赖关系。依赖的是服务名称 // kernel/service.go // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string Handle(Event) Reply // Dependencies 返回依赖服务名称 Dependencies() []string // 新增接口 } // serviceMeta 定义微内核服务元数据 type serviceMeta struct { svc Service state ServiceState // 存储依赖，也可以不使用，直接使用svc.Dependencies deps []string } 注册Register增加deps // kernel/kernel.go // Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() name := svc.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil } 启动服务和停止服务增加拓扑排序 // kernel/kernel.go func (k *MicroKernel) topoSort() ([]string, error) { k.mu.RLock() defer k.mu.RUnlock() visited := make(map[string]bool) temp := make(map[string]bool) result := []string{} var visit func(string) error visit = func(name string) error { if temp[name] { return fmt.Errorf(\"circular dependency at %s\", name) } if visited[name] { return nil } temp[name] = true meta, ok := k.services[name] if !ok { return fmt.Errorf(\"service %s not registered\", name) } for _, dep := range meta.deps { if err := visit(dep); err != nil { return err } } visited[name] = true temp[name] = false result = append(result, name) return nil } for name := range k.services { if !visited[name] { if err := visit(name); err != nil { return nil, err } } } return result, nil } func (k *MicroKernel) StartAll() error { sorted, err := k.topoSort() // ... for _, name := range sorted { if err := k.StartService(name); err != nil { // ... } } return nil }","s":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel6","h":"#21-kernel核心","p":1249},{"i":1256,"t":"服务增加依赖方法实现 func (l *LogService) Dependencies() []string { return []string{\"echo\"} }","s":"2.2 服务","u":"/en/docs/note/golang/design/microkernel/microkernel6","h":"#22-服务","p":1249},{"i":1258,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } Stopping all services... [logger] stopping... Stopped: logger [echo] stopping... Stopped: echo 查看完整代码","s":"2.3 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel6","h":"#23-运行结果","p":1249},{"i":1260,"t":"在编程和系统设计中，Future-Proof 机制指的是通过合理的架构设计和技术选择，使代码或系统能够适应未来的需求变化、技术演进和规模扩展，而无需大规模重构或重写。其核心目标是降低长期维护成本，提高可扩展性。","s":"Future-Proof 机制","u":"/en/docs/note/golang/design/future_proof","h":"","p":1259},{"i":1262,"t":"以下是实现 Future-Proof 代码的关键设计思想：","s":"1. Future-Proof 机制的关键原则","u":"/en/docs/note/golang/design/future_proof","h":"","p":1259},{"i":1264,"t":"目标：模块间通过清晰的接口交互，而非直接依赖具体实现。使用接口（Go 的 interface）而非具体类型，依赖注入而非硬编码。 优点： 业务逻辑与具体实现解耦 易于扩展新的实现方式 便于单元测试（可以mock Notifier） 设计点： 面向接口编程：依赖抽象而非具体实现 依赖注入：通过构造函数或方法参数注入依赖 单一职责：每个组件只关注自己的核心功能 最小知识原则：组件只与直接相关的组件交互 松耦合示例： 定义接口 // Notifier 通知接口 type Notifier interface { Send(message string) error } 接口实现 // EmailNotifier 邮件通知实现 type EmailNotifier struct{} func (e EmailNotifier) Send(message string) error { fmt.Printf(\"发送邮件通知: %s\\n\", message) return nil } // SMSNotifier 短信通知实现 type SMSNotifier struct{} func (s SMSNotifier) Send(message string) error { fmt.Printf(\"发送短信通知: %s\\n\", message) return nil } 业务逻辑调用接口 // NotificationService 通知服务 type NotificationService struct { notifier Notifier } func NewNotificationService(notifier Notifier) *NotificationService { return &NotificationService{notifier: notifier} } func (s *NotificationService) ProcessOrder(orderID string) { // 处理订单逻辑... message := fmt.Sprintf(\"订单 %s 已处理\", orderID) _ = s.notifier.Send(message) } 主函数调用 func main() { // 可以轻松替换通知实现 emailNotifier := EmailNotifier{} service := NewNotificationService(emailNotifier) service.ProcessOrder(\"12345\") // 切换为短信通知不需要修改业务逻辑 smsNotifier := SMSNotifier{} service = NewNotificationService(smsNotifier) service.ProcessOrder(\"67890\") } 紧耦合示例： 使用具体类型 // EmailSender 邮件发送器 type EmailSender struct{} func (e EmailSender) SendEmail(message string) error { fmt.Printf(\"发送邮件: %s\\n\", message) return nil } 业务类型依赖具体类 // OrderProcessor 订单处理器 type OrderProcessor struct { emailSender EmailSender } func (p *OrderProcessor) ProcessOrder(orderID string) { // 处理订单逻辑... message := fmt.Sprintf(\"订单 %s 已处理\", orderID) _ = p.emailSender.SendEmail(message) } 主函数调用 func main() { processor := OrderProcessor{emailSender: EmailSender{}} processor.ProcessOrder(\"12345\") // 如果要改为短信通知，必须修改OrderProcessor结构体和所有相关代码 }","s":"1.1.  松耦合（Loose Coupling）","u":"/en/docs/note/golang/design/future_proof","h":"#11--松耦合loose-coupling","p":1259},{"i":1266,"t":"目标：新增功能时无需修改现有代码。 示例：通过组合而非继承扩展行为（Go 的 embedding 或中间件模式）。 type LoggingAggregator struct { *EventAggregator // 嵌入原有功能 logger Logger } // 新增日志能力而不修改原始聚合器","s":"1.2. 可扩展性（Extensibility）","u":"/en/docs/note/golang/design/future_proof","h":"#12-可扩展性extensibility","p":1259},{"i":1268,"t":"目标：将易变的参数（如超时时间、规则路径）外置为配置。 示例：通过环境变量或配置文件驱动行为： timeout := os.Getenv(\"AGGREGATOR_TIMEOUT\")","s":"1.3. 配置化而非硬编码","u":"/en/docs/note/golang/design/future_proof","h":"#13-配置化而非硬编码","p":1259},{"i":1270,"t":"目标：数据交互格式（如 JSON、Protobuf）支持向后兼容。 示例：使用 Protocol Buffers 的字段编号机制，避免破坏旧版解析。","s":"1.4. 协议与数据格式的兼容性","u":"/en/docs/note/golang/design/future_proof","h":"#14-协议与数据格式的兼容性","p":1259},{"i":1272,"t":"目标：并发模型能随规模调整（如 Goroutine 池 vs 固定 Worker）。 示例：在之前的聚合器代码中，通过 Channel 通信可轻松扩展为多 Worker： for i := 0; i < runtime.NumCPU(); i++ { go aggregator.processRequests() }","s":"1.5. 并发模型的可适应性","u":"/en/docs/note/golang/design/future_proof","h":"#15-并发模型的可适应性","p":1259},{"i":1274,"t":"目标：内置日志、指标、链路追踪等，便于未来诊断问题。 示例：在 rulesUpdateRequest 中添加请求 ID 和计时： type rulesUpdateRequest struct { RequestID string // 用于追踪 StartTime time.Time // ...其他字段 }","s":"1.6. 可观测性（Observability）","u":"/en/docs/note/golang/design/future_proof","h":"#16-可观测性observability","p":1259},{"i":1276,"t":"目标：处理边界条件（如 nil Channel、超时）。 示例：在 Channel 通信中添加超时： func (a *EventAggregator) UpdateRules(rules []string) error { req := &rulesUpdateRequest{..., response: make(chan error, 1)} select { case a.updateChannel <- req: return <-req.response case <-time.After(1 * time.Second): return errors.New(\"update timeout\") } }","s":"1.7. 防御性编程","u":"/en/docs/note/golang/design/future_proof","h":"#17-防御性编程","p":1259},{"i":1278,"t":"package main import ( \"fmt\" \"time\" ) // EventAggregator manages a set of rules and processes updates through channels type EventAggregator struct { rules []string updateChannel chan *rulesUpdateRequest shutdownChan chan struct{} } // rulesUpdateRequest represents a request to update the rules type rulesUpdateRequest struct { newRules []string response chan error } // NewEventAggregator creates and starts a new EventAggregator func NewEventAggregator() *EventAggregator { agg := &EventAggregator{ rules: []string{}, updateChannel: make(chan *rulesUpdateRequest), shutdownChan: make(chan struct{}), } go agg.processRequests() return agg } // UpdateRules safely updates the rules by sending a request through the channel func (a *EventAggregator) UpdateRules(newRules []string) error { req := &rulesUpdateRequest{ newRules: newRules, response: make(chan error, 1), // Buffered to avoid blocking } a.updateChannel <- req return <-req.response } // Shutdown gracefully stops the aggregator func (a *EventAggregator) Shutdown() { close(a.shutdownChan) } // processRequests handles incoming requests in a thread-safe manner func (a *EventAggregator) processRequests() { for { select { case req := <-a.updateChannel: a.rules = req.newRules fmt.Println(\"Updated rules:\", a.rules) req.response <- nil case <-a.shutdownChan: fmt.Println(\"Shutting down aggregator\") return } } } func main() { // Create and start the aggregator aggregator := NewEventAggregator() defer aggregator.Shutdown() // Simulate some updates go func() { time.Sleep(500 * time.Millisecond) if err := aggregator.UpdateRules([]string{\"a\", \"b\", \"c\"}); err != nil { fmt.Println(\"Error updating rules:\", err) } }() go func() { time.Sleep(1 * time.Second) if err := aggregator.UpdateRules([]string{\"d\", \"e\", \"f\"}); err != nil { fmt.Println(\"Error updating rules:\", err) } }() // Give time for the updates to process time.Sleep(2 * time.Second) } 状态隔离：所有规则更新通过 Channel 串行化，避免竞态条件。 易于扩展：可新增 QueryRules() 方法而不影响现有逻辑。 并发友好：Channel 模型天然支持协程扩展。 关闭控制：通过 shutdownChan 实现优雅终止。 根据原则，执行部分优化 package main import ( \"context\" \"errors\" \"fmt\" \"sync\" \"time\" ) // RuleSet represents a collection of rules with metadata type RuleSet struct { Rules []string Version int // Track changes over time Modified time.Time // Last update timestamp } // SetRulesRequest encapsulates a rules update operation type SetRulesRequest struct { NewRules []string Response chan error RequestID string // For tracing Timestamp time.Time // For auditing } // AggregatorOptions configures aggregator behavior type AggregatorOptions struct { MaxPendingRequests int // Buffer size for requests RequestTimeout time.Duration // Timeout for rule updates EnableValidation bool // Future: validate rules before applying } // Aggregator manages rule sets with thread-safe operations type Aggregator struct { currentRuleSet RuleSet options AggregatorOptions requestChan chan *SetRulesRequest queryChan chan chan RuleSet // New channel for safe rule queries commandChan chan func() // Generic command channel for future extensions stopChan chan struct{} shutdownOnce sync.Once stopWg sync.WaitGroup } // NewAggregator creates a configured aggregator instance func NewAggregator(opts AggregatorOptions) *Aggregator { if opts.MaxPendingRequests <= 0 { opts.MaxPendingRequests = 10 } if opts.RequestTimeout <= 0 { opts.RequestTimeout = 2 * time.Second } return &Aggregator{ currentRuleSet: RuleSet{Version: 1}, options: opts, requestChan: make(chan *SetRulesRequest, opts.MaxPendingRequests), queryChan: make(chan chan RuleSet), commandChan: make(chan func()), stopChan: make(chan struct{}), } } // Run starts the aggregator's processing loop func (a *Aggregator) Run() { a.stopWg.Add(1) defer a.stopWg.Done() for { select { case req := <-a.requestChan: a.handleSetRules(req) case respChan := <-a.queryChan: a.handleGetRules(respChan) case cmd := <-a.commandChan: cmd() // Execute arbitrary commands case <-a.stopChan: return } } } func (a *Aggregator) handleSetRules(req *SetRulesRequest) { defer close(req.Response) // Future: could add validation here if a.options.EnableValidation { // Validate rules before applying } a.currentRuleSet = RuleSet{ Rules: req.NewRules, Version: a.currentRuleSet.Version + 1, Modified: time.Now(), } fmt.Printf(\"Updated rules (v%d): %v\\n\", a.currentRuleSet.Version, a.currentRuleSet.Rules) req.Response <- nil } func (a *Aggregator) handleGetRules(respChan chan RuleSet) { respChan <- a.currentRuleSet close(respChan) } // SetRules updates the rule set with timeout support func (a *Aggregator) SetRules(ctx context.Context, rules []string) error { req := &SetRulesRequest{ NewRules: rules, Response: make(chan error), RequestID: fmt.Sprintf(\"req-%d\", time.Now().UnixNano()), Timestamp: time.Now(), } select { case a.requestChan <- req: select { case err := <-req.Response: return err case <-ctx.Done(): return ctx.Err() } case <-a.stopChan: return errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return ctx.Err() } } // GetRules safely retrieves the current rule set func (a *Aggregator) GetRules(ctx context.Context) (RuleSet, error) { respChan := make(chan RuleSet) select { case a.queryChan <- respChan: select { case rules := <-respChan: return rules, nil case <-ctx.Done(): return RuleSet{}, ctx.Err() } case <-a.stopChan: return RuleSet{}, errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return RuleSet{}, ctx.Err() } } // Stop gracefully shuts down the aggregator func (a *Aggregator) Stop() { a.shutdownOnce.Do(func() { close(a.stopChan) a.stopWg.Wait() close(a.requestChan) close(a.queryChan) close(a.commandChan) fmt.Println(\"Aggregator stopped gracefully\") }) } // ExecuteCommand provides extension point for future operations func (a *Aggregator) ExecuteCommand(ctx context.Context, cmd func()) error { select { case a.commandChan <- cmd: return nil case <-a.stopChan: return errors.New(\"aggregator is shutting down\") case <-ctx.Done(): return ctx.Err() } } func main() { // Configurable options opts := AggregatorOptions{ MaxPendingRequests: 20, RequestTimeout: 3 * time.Second, EnableValidation: false, // Could be enabled in future } aggregator := NewAggregator(opts) go aggregator.Run() // Example usage with context ctx, cancel := context.WithTimeout(context.Background(), 2*time.Second) defer cancel() // Set rules err := aggregator.SetRules(ctx, []string{\"a\", \"b\", \"c\"}) if err != nil { fmt.Println(\"Error setting rules:\", err) } // Get rules rules, err := aggregator.GetRules(ctx) if err != nil { fmt.Println(\"Error getting rules:\", err) } else { fmt.Printf(\"Current rules (v%d): %v\\n\", rules.Version, rules.Rules) } // Execute custom command aggregator.ExecuteCommand(ctx, func() { fmt.Println(\"Executing custom command\") }) aggregator.Stop() } Enhanced Rule Metadata: Added RuleSet struct with versioning and timestamps Supports audit trails and change tracking Configurable Options: AggregatorOptions allows tuning without code changes Supports future features like validation Multiple Communication Channels: Separate channels for commands (commandChan) and queries (queryChan) Prevents mixing of operation types Context Support: All operations respect context for timeouts/cancellation Better integration with modern Go applications Extension Points: ExecuteCommand method for adding future functionality Generic command channel pattern Improved Shutdown: sync.Once ensures safe single shutdown sync.WaitGroup for proper goroutine cleanup Thread-Safe Queries: Added safe GetRules method via channel No direct access to internal state Request Tracing: Added request IDs for debugging Timestamps for all operations 使用命令模式优化 package main import ( \"context\" \"errors\" \"fmt\" \"sync\" \"time\" ) // Command defines the interface all commands must implement type Command interface { Execute(ctx context.Context) error } // CommandHandler processes commands type CommandHandler struct { commands chan Command stopChan chan struct{} wg sync.WaitGroup } // NewCommandHandler creates a new handler with specified queue size func NewCommandHandler(queueSize int) *CommandHandler { return &CommandHandler{ commands: make(chan Command, queueSize), stopChan: make(chan struct{}), } } // Start begins processing commands func (h *CommandHandler) Start() { h.wg.Add(1) go func() { defer h.wg.Done() for { select { case cmd := <-h.commands: ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second) err := cmd.Execute(ctx) cancel() if err != nil { fmt.Printf(\"Command execution failed: %v\\n\", err) } case <-h.stopChan: return } } }() } // Submit sends a command for execution func (h *CommandHandler) Submit(ctx context.Context, cmd Command) error { select { case h.commands <- cmd: return nil case <-h.stopChan: return errors.New(\"handler is shutting down\") case <-ctx.Done(): return ctx.Err() } } // Stop gracefully shuts down the handler func (h *CommandHandler) Stop() { close(h.stopChan) h.wg.Wait() close(h.commands) } // --- Concrete Commands --- // SetRulesCommand implements Command for rule updates type SetRulesCommand struct { Aggregator *Aggregator NewRules []string } func (c *SetRulesCommand) Execute(ctx context.Context) error { return c.Aggregator.SetRules(ctx, c.NewRules) } // GetRulesCommand implements Command for rule queries type GetRulesCommand struct { Aggregator *Aggregator ResultChan chan<- RuleSet } func (c *GetRulesCommand) Execute(ctx context.Context) error { rules, err := c.Aggregator.GetRules(ctx) if err != nil { return err } c.ResultChan <- rules return nil } // --- Aggregator Implementation --- type RuleSet struct { Rules []string Version int Modified time.Time } type Aggregator struct { mu sync.Mutex currentRule RuleSet } func (a *Aggregator) SetRules(ctx context.Context, rules []string) error { a.mu.Lock() defer a.mu.Unlock() select { case <-ctx.Done(): return ctx.Err() default: a.currentRule = RuleSet{ Rules: rules, Version: a.currentRule.Version + 1, Modified: time.Now(), } fmt.Printf(\"Rules updated to version %d\\n\", a.currentRule.Version) return nil } } func (a *Aggregator) GetRules(ctx context.Context) (RuleSet, error) { a.mu.Lock() defer a.mu.Unlock() select { case <-ctx.Done(): return RuleSet{}, ctx.Err() default: return a.currentRule, nil } } // --- Usage Example --- func main() { // Create components handler := NewCommandHandler(10) aggregator := &Aggregator{ currentRule: RuleSet{Version: 0}, } // Start command processor handler.Start() defer handler.Stop() // Submit commands ctx := context.Background() // Set rules command setCmd := &SetRulesCommand{ Aggregator: aggregator, NewRules: []string{\"a\", \"b\", \"c\"}, } handler.Submit(ctx, setCmd) // Get rules command resultChan := make(chan RuleSet, 1) getCmd := &GetRulesCommand{ Aggregator: aggregator, ResultChan: resultChan, } handler.Submit(ctx, getCmd) // Wait for result select { case rules := <-resultChan: fmt.Printf(\"Current rules: %v\\n\", rules.Rules) case <-time.After(1 * time.Second): fmt.Println(\"Timeout waiting for rules\") } } The Command Handler pattern is a behavioral design pattern that encapsulates requests as objects, allowing for parameterization of clients with different requests, queuing of requests, and support for undoable operations. Here's how to implement it in your aggregator: Core Components Command Interface: Defines the execution contract Concrete Commands: Encapsulate specific actions and parameters Invoker: Receives and executes commands Receiver: Knows how to perform the operations Key Features Command Interface: type Command interface { Execute(ctx context.Context) error } Concrete Commands: Each command encapsulates all parameters needed for execution Commands can be serialized/deserialized for distributed systems Command Handler: Manages a queue of commands Processes commands sequentially in a goroutine Supports graceful shutdown Benefits: Decoupling: Separates command creation from execution Extensibility: Easy to add new command types Composability: Commands can be combined into macros Undo/Redo: Can be extended to support command history Advanced Extensions Command Middleware: type CommandMiddleware func(Command) Command func LoggingMiddleware(next Command) Command { return &loggedCommand{next} } Transaction Support: type TransactionCommand struct { Commands []Command } func (t *TransactionCommand) Execute(ctx context.Context) error { // Execute all or nothing } Priority Commands: type PriorityCommand struct { Command Priority int } // Use priority queue instead of channel","s":"2. 聚合器示例","u":"/en/docs/note/golang/design/future_proof","h":"#2-聚合器示例","p":1259},{"i":1280,"t":"// 硬编码实现，未来难以修改 var globalRules []string func UpdateRules(rules []string) { globalRules = rules // 直接修改全局状态，线程不安全 }","s":"3. 反模式：非 Future-Proof 的设计","u":"/en/docs/note/golang/design/future_proof","h":"#3-反模式非-future-proof-的设计","p":1259},{"i":1282,"t":"Future-Proof 不是过度设计，而是通过遵循 SOLID 原则和 并发安全实践，让代码具备： 适应变化的能力 平滑演进的路径 诊断问题的手段 在 Go 中，Channel 和 Interface 是构建 Future-Proof 系统的核心工具。","s":"4. 总结","u":"/en/docs/note/golang/design/future_proof","h":"#4-总结","p":1259},{"i":1285,"t":"服务间通信（通过内核转发） 标准化消息协议结构 支持状态码、错误、数据负载。 异步+超时机制 服务发出请求时可以设置超时时间，避免长期阻塞。","s":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel4","h":"#1-目标","p":1283},{"i":1288,"t":"定义标准消息格式 Reply 包含code/message/Data Event ReplyCh 使用标准格式的Reply // kernel/kernel.go // Reply 定义内核事件回复 type Reply struct { Code int // 0 表示成功，非0表示错误码 Message string // 描述信息 Data string // 可选负载 } // Event 定义内核事件（用于服务间通信） type Event struct { To string From string Type string Content string // 增加响应通道,使用 chan Reply，提高回复的灵活性 ReplyCh chan Reply // 可选：超时时间 TimeoutMs int } 服务改造 handle 从处理字符串修改为处理事件，返回标准Reply // kernel/kernel.go // Service 定义微内核的服务接口 // 使用接口定义代替固定的struct,低耦合设计。 type Service interface { Start() error Stop() error Name() string Handle(Event) Reply } Listen 路由和事件总线设计 // Listen 事件循环（处理服务间通信） // 监听事件，处理服务间通信 // 重命名 EventLoop 为 Listen func (k *Kernel) Listen(ctx context.Context) { for { select { case <-ctx.Done(): return case evt := <-k.eventCh: fmt.Printf(\"[Kernel] Event from %s: - %s\\n\", evt.From, evt.Content) // 发送给 Kernel 自己 if evt.To == \"\" { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 0, Message: \"Handled by kernel\", Data: \"ok\"} } continue } // 路由到目标服务 k.mu.RLock() svc, ok := k.services[evt.To] k.mu.RUnlock() if !ok { if evt.ReplyCh != nil { evt.ReplyCh <- Reply{Code: 404, Message: \"Service not found\", Data: \"\"} } continue } // 调用目标服务处理，并返回 go func(s Service, m Event) { result := s.Handle(m) if m.ReplyCh != nil { select { case m.ReplyCh <- result: case <-time.After(time.Duration(m.TimeoutMs) * time.Millisecond): m.ReplyCh <- Reply{Code: 408, Message: \"timeout\", Data: \"\"} } } }(svc, evt) } } }","s":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel4","h":"#21-kernel核心","p":1283},{"i":1290,"t":"根据count随机分发（Push 指定了发送位置） func (l *LogService) run() { var count = 1 for { count++ select { case <-l.stopCh: return case log := <-l.logCh: fmt.Printf(\"[%s] LOG: %s\\n\", l.name, log) // 模拟发送事件到内核 replyCh := make(chan kernel.Reply, 1) if count%2 == 0 { l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", Content: log, ReplyCh: replyCh, TimeoutMs: 1000, }) } else { l.kernel.Push(kernel.Event{ From: l.name, Type: \"log\", To: \"echo\", Content: log, ReplyCh: replyCh, TimeoutMs: 1000, }) } // 等待内核回应 reply := <-replyCh fmt.Printf(\"[%s] got reply from kernel: %s\\n\", l.Name(), reply.Message) } } }","s":"2.2 LogService","u":"/en/docs/note/golang/design/microkernel/microkernel4","h":"#22-logservice","p":1283},{"i":1292,"t":"func (e *EchoService) Handle(evt kernel.Event) kernel.Reply { return kernel.Reply{Code: 0, Message: \"echo service handled\", Data: fmt.Sprintf(\"from %s: %s\", evt.From, evt.Content)} }","s":"2.3 增加另一个类似的EchoService","u":"/en/docs/note/golang/design/microkernel/microkernel4","h":"#23-增加另一个类似的echoservice","p":1283},{"i":1294,"t":"Registered: logger # 注册另一个服务 Registered: echo [logger] starting... [echo] starting... [logger] LOG: Hello, Microkernel! [Kernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [Kernel] Event from logger: - Hello, Echo! # 转发到echoService 处理 [logger] got reply from kernel: echo service handled [Kernel] Send Event to logger: Hello, Log! [logger] LOG handle kernel event: Hello, Log! [logger] stopping... [echo] stopping... 查看完整代码","s":"2.4 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel4","h":"#24-运行结果","p":1283},{"i":1296,"t":"服务状态持久化","s":"microkernel 设计9","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"","p":1295},{"i":1298,"t":"服务状态在 Stop() 或热替换时 导出 + 加密 + 写入磁盘 注册服务时若检测到磁盘中有状态，则 读取 + 解密 + 导入 每个服务有自己的状态文件（支持多服务）","s":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#1-目标","p":1295},{"i":1301,"t":"存储目录：/var/lib/microkernel/state/（示例） 文件名：<service_name>.state 文件内容：已加密的字节流","s":"2.1 存储文件设计","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#21-存储文件设计","p":1295},{"i":1303,"t":"type StateStore struct { dir string crypter Crypter } func NewStateStore(dir string, crypter Crypter) *StateStore { return &StateStore{dir: dir, crypter: crypter} } func (s *StateStore) path(name string) string { return filepath.Join(s.dir, name+\".state\") } func (s *StateStore) Save(name string, state any) error { encrypted, err := s.crypter.Encrypt(state) if err != nil { return err } if err := os.MkdirAll(s.dir, 0755); err != nil { return err } return os.WriteFile(s.path(name), encrypted, 0600) } func (s *StateStore) Load(name string) (any, error) { data, err := os.ReadFile(s.path(name)) if err != nil { return nil, err } return s.crypter.Decrypt(data) } func (s *StateStore) Exists(name string) bool { _, err := os.Stat(s.path(name)) return err == nil }","s":"2.2 状态管理模块：StateStore","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#22-状态管理模块statestore","p":1295},{"i":1306,"t":"type MicroKernel struct { ... stateStore *StateStore } func NewMicroKernelWithState(store *StateStore) *MicroKernel { return &MicroKernel{ services: make(map[string]*serviceMeta), stateStore: store, logger: NewLogger(\"kernel\", INFO, os.Stdout), } }","s":"3.1 kernel 初始化集成StateStore","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#31-kernel-初始化集成statestore","p":1295},{"i":1308,"t":"// Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() // name 可以放在锁前面，优化性能 name := svc.Name() // 增加状态导入 // 如果使用的接口，这边就使用的接口方法 if k.stateStore != nil && k.stateStore.Exists(name) { // 查看服务是否支持状态导入 // 状态导入不要求每个服务必须实现 // 如果没有实现，就直接忽略 if importer, ok := svc.(Importable); ok { raw, err := k.stateStore.Load(name) if err != nil { return fmt.Errorf(\"state load failed: %w\\n\", err) } err = importer.ImportState(raw) if err != nil { return fmt.Errorf(\"state import failed: %w\\n\", err) } fmt.Printf(\"State migrated for service %s\\n\", name) } } if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil }","s":"3.2 注册服务时尝试自动加载状态","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#32-注册服务时尝试自动加载状态","p":1295},{"i":1310,"t":"func (k *MicroKernel) StopService(name string) error { k.mu.Lock() defer k.mu.Unlock() meta, ok := k.services[name] if !ok { return errors.New(\"service not registered\") } if meta.state == Stopped { return errors.New(\"service already stopped\") } // 增加状态导出判断 if exporter, ok := meta.svc.(Exportable); ok && k.stateStore != nil { if err := k.stateStore.Save(name, exporter.ExportState()); err == nil { fmt.Printf(\"State persisted for %s\\n\", name) } } if err := meta.svc.Stop(); err != nil { return err } meta.state = Stopped fmt.Println(\"Stopped:\", meta.svc.Name()) return nil }","s":"3.3 停止服务时，保存状态","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#33-停止服务时保存状态","p":1295},{"i":1312,"t":"func (k *MicroKernel) Listen(ctx context.Context) { // 间隔可以加在kernel的struct中，也可以使用方法来获取 ticker := time.NewTicker(2 * time.Second) for { select { case <-ctx.Done(): return case <-ticker.C: fmt.Println(\"Timed writing state\") if k.stateStore != nil { for name, meta := range k.services { if meta.state == Running { if exporter, ok := meta.svc.(Exportable); ok { if err := k.stateStore.Save(name, exporter.ExportState()); err == nil { fmt.Printf(\"State persisted for %s\\n\", name) } } } } }","s":"3.4 定时持久化状态","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#34-定时持久化状态","p":1295},{"i":1314,"t":"crypter := microkernel.NewAESCrypter([]byte(\"1234567890123456\")) store := microkernel.NewStateStore(\"./state\", crypter) // 1. 创建微内核 microKernel := microkernel.NewMicroKernel(store) // 增加加密存储","s":"4. main","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#4-main","p":1295},{"i":1316,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to echo: Hello, Log! {0 echo service handled from microKernel: Hello, Log!} [echo] stopping... Stopped old version of echo Encrypted state migrated for service echo [2025-04-26 19:47:00.801] [INFO] [echo] [echov2] starting... Started new version of echo [MicroKernel] Send Event to echo: Hello, Log! [echo] count is 10 {0 echo v2 service handled from microKernel: Hello, Log!} [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... Stopped: echo 查看完整代码","s":"4.1 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel9","h":"#41-运行结果","p":1295},{"i":1319,"t":"服务热更新增加状态迁移 支持服务加密状态迁移","s":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel8","h":"#1-目标","p":1317},{"i":1322,"t":"新增状态接口 // 旧服务可选实现：导出状态 type Exportable interface { ExportState() any } // 新服务可选实现：导入状态 type Importable interface { ImportState(state any) error } 加密接口 type Crypter interface { Encrypt(data any) ([]byte, error) Decrypt(cipher []byte) (any, error) } 加密实现 使用aes type AESCrypter struct { key []byte // 16/24/32 字节 } func NewAESCrypter(key []byte) *AESCrypter { return &AESCrypter{key: key} } func (a *AESCrypter) Encrypt(data any) ([]byte, error) { plaintext, err := json.Marshal(data) if err != nil { return nil, err } block, err := aes.NewCipher(a.key) if err != nil { return nil, err } aesgcm, err := cipher.NewGCM(block) if err != nil { return nil, err } nonce := make([]byte, aesgcm.NonceSize()) if _, err := io.ReadFull(rand.Reader, nonce); err != nil { return nil, err } ciphertext := aesgcm.Seal(nonce, nonce, plaintext, nil) return ciphertext, nil } func (a *AESCrypter) Decrypt(ciphertext []byte) (any, error) { block, err := aes.NewCipher(a.key) if err != nil { return nil, err } aesgcm, err := cipher.NewGCM(block) if err != nil { return nil, err } nonceSize := aesgcm.NonceSize() if len(ciphertext) < nonceSize { return nil, fmt.Errorf(\"ciphertext too short\") } nonce := ciphertext[:nonceSize] cipherData := ciphertext[nonceSize:] plaintext, err := aesgcm.Open(nil, nonce, cipherData, nil) if err != nil { return nil, err } var result any if err := json.Unmarshal(plaintext, &result); err != nil { return nil, err } return result, nil } 替换服务 //func (k *MicroKernel) ReplaceService(newSvc Service) error { // k.mu.Lock() // defer k.mu.Unlock() // // name := newSvc.Name() // oldMeta, exists := k.services[name] // var state any // // if exists { // if exporter, ok := oldMeta.svc.(Exportable); ok { // state = exporter.ExportState() // } // oldMeta.svc.Stop() // fmt.Printf(\"Stopped old version of %s\\n\", name) // } // // // 状态迁移 // if importer, ok := newSvc.(Importable); ok && state != nil { // if err := importer.ImportState(state); err != nil { // return fmt.Errorf(\"state import failed: %w\\n\", err) // } // fmt.Printf(\"State migrated for service %s\\n\", name) // } // // // 替换服务元信息 // k.services[name] = &serviceMeta{ // svc: newSvc, // deps: newSvc.Dependencies(), // state: Created, // } // // // 重启服务 // if exists && oldMeta.state == Running { // newSvc.Start() // k.services[name].state = Running // fmt.Printf(\"Started new version of %s\", name) // } else { // fmt.Printf(\"Registered new version of %s (not started)\", name) // } // // return nil //} func (k *MicroKernel) ReplaceServiceEncrypted(newSvc Service, crypter Crypter) error { k.mu.Lock() defer k.mu.Unlock() name := newSvc.Name() oldMeta, exists := k.services[name] var encryptedState []byte if exists { if exporter, ok := oldMeta.svc.(Exportable); ok { rawState := exporter.ExportState() cipher, err := crypter.Encrypt(rawState) if err != nil { return fmt.Errorf(\"state encryption failed: %w\", err) } encryptedState = cipher } oldMeta.svc.Stop() fmt.Printf(\"Stopped old version of %s\\n\", name) } // 状态导入（解密） if importer, ok := newSvc.(Importable); ok && encryptedState != nil { decrypted, err := crypter.Decrypt(encryptedState) if err != nil { return fmt.Errorf(\"state decryption failed: %w\", err) } if err := importer.ImportState(decrypted); err != nil { return fmt.Errorf(\"state import failed: %w\", err) } fmt.Printf(\"Encrypted state migrated for service %s\\n\", name) } k.services[name] = &serviceMeta{ svc: newSvc, deps: newSvc.Dependencies(), state: Created, } if exists && oldMeta.state == Running { newSvc.Start() k.services[name].state = Running fmt.Printf(\"Started new version of %s\\n\", name) } else { fmt.Printf(\"Registered new version of %s (not started)\\n\", name) } return nil }","s":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel8","h":"#21-kernel核心","p":1317},{"i":1324,"t":"实现状态接口 func (e *EchoServiceV2) ImportState(state any) error { if val, ok := state.(int); ok { e.echoCount = val return nil } return fmt.Errorf(\"invalid state type\") } func (e *EchoService) ExportState() any { return e.echoCount }","s":"2.2 echo服务","u":"/en/docs/note/golang/design/microkernel/microkernel8","h":"#22-echo服务","p":1317},{"i":1326,"t":"热替换服务 // 7. 热替换服务 // 热更新为 V2 aesKey := []byte(\"1234567890123456\") // 16 字节对称密钥 microKernel.ReplaceServiceEncrypted(service.NewEchoServiceV2(microKernel), microkernel.NewAESCrypter(aesKey))","s":"2.3 main","u":"/en/docs/note/golang/design/microkernel/microkernel8","h":"#23-main","p":1317},{"i":1328,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to echo: Hello, Log! {0 echo service handled from microKernel: Hello, Log!} [echo] stopping... Stopped old version of echo State migrated for service echo [2025-04-24 21:28:38.032] [INFO] [echo] [echov2] starting... Started new version of echo[MicroKernel] Send Event to echo: Hello, Log! [echo] count is 10 {0 echo v2 service handled from microKernel: Hello, Log!} [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... Stopped: echo [log] stopping 查看完整代码","s":"2.4 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel8","h":"#24-运行结果","p":1317},{"i":1331,"t":"支持服务热更新 所有服务和内核通过统一接口打印日志 时间戳、服务名、级别（INFO/WARN/ERROR） 动态控制日志级别 输出到 stdout、文件、远程服务等 xxx","s":"1. 目标","u":"/en/docs/note/golang/design/microkernel/microkernel7","h":"#1-目标","p":1329},{"i":1334,"t":"新增ReplaceService 用于热替换服务 // kernel/kernel.go func (k *MicroKernel) ReplaceService(newSvc Service) error { k.mu.Lock() defer k.mu.Unlock() name := newSvc.Name() oldMeta, exists := k.services[name] if exists && oldMeta.state == Running { // 停止旧服务 oldMeta.svc.Stop() fmt.Printf(\"Stopped old version of %s\\n\", name) } // 替换服务实现，重建元信息 k.services[name] = &serviceMeta{ svc: newSvc, deps: newSvc.Dependencies(), state: Created, } // 重启服务（如旧服务在运行） if exists && oldMeta.state == Running { newSvc.Start() k.services[name].state = Running fmt.Printf(\"Started new version of %s\\n\", name) } else { fmt.Printf(\"Registered new version of %s (not started)\\n\", name) } return nil } 注册Register增加deps // kernel/kernel.go // Register 注册服务 // 重命名 RegisterService 为 Register func (k *MicroKernel) Register(svc Service) error { k.mu.Lock() defer k.mu.Unlock() name := svc.Name() if _, ok := k.services[name]; ok { return errors.New(\"service already registered\") } k.services[name] = &serviceMeta{ svc: svc, state: Created, deps: svc.Dependencies(), } fmt.Println(\"Registered:\", svc.Name()) return nil } 启动服务和停止服务增加拓扑排序 // kernel/kernel.go func (k *MicroKernel) topoSort() ([]string, error) { k.mu.RLock() defer k.mu.RUnlock() visited := make(map[string]bool) temp := make(map[string]bool) result := []string{} var visit func(string) error visit = func(name string) error { if temp[name] { return fmt.Errorf(\"circular dependency at %s\", name) } if visited[name] { return nil } temp[name] = true meta, ok := k.services[name] if !ok { return fmt.Errorf(\"service %s not registered\", name) } for _, dep := range meta.deps { if err := visit(dep); err != nil { return err } } visited[name] = true temp[name] = false result = append(result, name) return nil } for name := range k.services { if !visited[name] { if err := visit(name); err != nil { return nil, err } } } return result, nil } func (k *MicroKernel) StartAll() error { sorted, err := k.topoSort() // ... for _, name := range sorted { if err := k.StartService(name); err != nil { // ... } } return nil }","s":"2.1 Kernel（核心）","u":"/en/docs/note/golang/design/microkernel/microkernel7","h":"#21-kernel核心","p":1329},{"i":1336,"t":"日志服务设计 type LogLevel int const ( INFO LogLevel = iota WARN ERROR ) type Logger struct { mu sync.Mutex level LogLevel service string out io.Writer } 方法实现 func NewLogger(service string, level LogLevel, out io.Writer) *Logger { return &Logger{ service: service, level: level, out: out, } } func (l *Logger) logf(level LogLevel, format string, args ...any) { if level < l.level { return } l.mu.Lock() defer l.mu.Unlock() levelStr := [...]string{\"INFO\", \"WARN\", \"ERROR\"}[level] msg := fmt.Sprintf(format, args...) ts := time.Now().Format(\"2006-01-02 15:04:05.000\") fmt.Fprintf(l.out, \"[%s] [%s] [%s] %s\\n\", ts, levelStr, l.service, msg) } func (l *Logger) Infof(format string, args ...any) { l.logf(INFO, format, args...) } func (l *Logger) Warnf(format string, args ...any) { l.logf(WARN, format, args...) } func (l *Logger) Errorf(format string, args ...any) { l.logf(ERROR, format, args...) } 服务中使用 type EchoServiceV3 struct { log *Logger } func NewEchoServiceV3() *EchoServiceV3 { return &EchoServiceV3{ log: NewLogger(\"echo\", INFO, os.Stdout), } } //... func (e *EchoServiceV3) Start() { e.log.Infof(\"started\") }","s":"2.2 日志服务","u":"/en/docs/note/golang/design/microkernel/microkernel7","h":"#22-日志服务","p":1329},{"i":1338,"t":"热替换服务 // 7. 热替换服务 // 热更新为 V2 _ = microKernel.ReplaceService(service.NewEchoServiceV2(microKernel)) // 测试 V2 行为 replyCh2 := make(chan microkernel.Reply, 1) microKernel.Push(microkernel.Event{ From: \"main\", Type: \"log\", Content: \"log\", ReplyCh: replyCh2, TimeoutMs: 1000, }) fmt.Println(\"v2 reply:\", <-replyCh2)","s":"2.3 main","u":"/en/docs/note/golang/design/microkernel/microkernel7","h":"#23-main","p":1329},{"i":1340,"t":"Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } [echo] stopping... Stopped old version of echo [2025-04-23 21:46:11.935] [INFO] [echo] [echov2] starting... Started new version of echo [MicroKernel] Event from main: - log v2 reply: {0 Handled by kernel ok} Stopping all services... [logger] stopping... Stopped: logger [echov2] stopping... [log] stopping Stopped: echo Registered: logger Registered: echo Starting all services... Services: [echo logger] [echo] starting... Started: echo [logger] starting... Started: logger [logger] LOG: Hello, Microkernel! [MicroKernel] Event from logger: - Hello, Microkernel! [logger] got reply from kernel: Handled by kernel [logger] LOG: Hello, Echo! [MicroKernel] Event from logger: - Hello, Echo! [logger] got reply from kernel: echo service handled [MicroKernel] Send Event to unknown: Hello, Log! {404 Not found service } Stopping all services... [logger] stopping... Stopped: logger [echo] stopping... Stopped: echo 查看完整代码","s":"2.4 运行结果","u":"/en/docs/note/golang/design/microkernel/microkernel7","h":"#24-运行结果","p":1329},{"i":1343,"t":"Golang 标准库提供 encoding/json 包，可用于解析和生成 JSON 数据。 示例：解析 JSON 到 map[string]interface{} package main import ( \"encoding/json\" \"fmt\" ) func main() { jsonData := `{\"name\": \"Alice\", \"age\": 25}` var result map[string]interface{} err := json.Unmarshal([]byte(jsonData), &result) if err != nil { fmt.Println(\"Error:\", err) return } fmt.Println(\"Name:\", result[\"name\"].(string)) fmt.Println(\"Age:\", result[\"age\"].(float64)) } 优缺点对比 优点 缺点 官方库，稳定可靠 需要手动类型断言 无需额外依赖 性能相对较低 适用于简单 JSON 解析 解析大 JSON 结构时性能不足","s":"1. Golang 默认 JSON 解析 (encoding/json)","u":"/en/docs/note/golang/json","h":"#1-golang-默认-json-解析-encodingjson","p":1341},{"i":1346,"t":"安装： go get github.com/tidwall/gjson 示例： package main import ( \"fmt\" \"github.com/tidwall/gjson\" ) func main() { jsonData := `{\"name\": \"Alice\", \"age\": 25}` if !gjson.Valid(jsonData) { fmt.Println(\"Invalid JSON data\") return } if gjson.Get(jsonData, \"name\").Exists() { fmt.Println(\"Name field exists\") } else { fmt.Println(\"Name field does not exist\") } name := gjson.Get(jsonData, \"name\") age := gjson.Get(jsonData, \"age\").Int() fmt.Println(\"Name:\", name.String()) fmt.Println(\"Age:\", age) }","s":"2.1 github.com/tidwall/gjson（高效 JSON 读取）","u":"/en/docs/note/golang/json","h":"#21-githubcomtidwallgjson高效-json-读取","p":1341},{"i":1348,"t":"优点 缺点 解析速度快 不能修改 JSON 支持 JSONPath 查询 适用于只读场景 代码简洁 -","s":"优缺点对比","u":"/en/docs/note/golang/json","h":"#优缺点对比","p":1341},{"i":1350,"t":"安装： go get github.com/json-iterator/go 示例： package main import ( \"fmt\" jsoniter \"github.com/json-iterator/go\" ) func main() { var json = jsoniter.ConfigCompatibleWithStandardLibrary jsonData := `{\"name\": \"Alice\", \"age\": 25}` var result map[string]interface{} json.Unmarshal([]byte(jsonData), &result) fmt.Println(\"Name:\", result[\"name\"]) fmt.Println(\"Age:\", result[\"age\"]) }","s":"2.2 github.com/json-iterator/go（高性能 JSON 解析）","u":"/en/docs/note/golang/json","h":"#22-githubcomjson-iteratorgo高性能-json-解析","p":1341},{"i":1352,"t":"优点 缺点 兼容 encoding/json，可直接替换 解析 JSON 数组不如 gjson 简洁 性能比 encoding/json 高 -","s":"优缺点对比","u":"/en/docs/note/golang/json","h":"#优缺点对比-1","p":1341},{"i":1354,"t":"安装： go get github.com/buger/jsonparser 示例： package main import ( \"fmt\" \"github.com/buger/jsonparser\" ) func main() { jsonData := []byte(`{\"name\": \"Alice\", \"age\": 25}`) name, _ := jsonparser.GetString(jsonData, \"name\") age, _ := jsonparser.GetInt(jsonData, \"age\") fmt.Println(\"Name:\", name) fmt.Println(\"Age:\", age) }","s":"2.3 github.com/buger/jsonparser（流式 JSON 解析）","u":"/en/docs/note/golang/json","h":"#23-githubcombugerjsonparser流式-json-解析","p":1341},{"i":1356,"t":"优点 缺点 适用于大 JSON 文件解析 不能修改 JSON 直接操作 []byte，性能高 代码较 gjson 复杂","s":"优缺点对比","u":"/en/docs/note/golang/json","h":"#优缺点对比-2","p":1341},{"i":1358,"t":"库 适用场景 优势 劣势 encoding/json 普通 JSON 解析 官方库，稳定 解析速度较慢，需要类型断言 gjson 只读 JSON 数据 语法简洁，性能高 不能修改 JSON json-iterator/go 高性能 JSON 解析 可直接替换标准库 解析 JSON 数组较繁琐 buger/jsonparser 解析大 JSON 直接操作 []byte，流式解析 代码较复杂","s":"3. JSON 解析库对比","u":"/en/docs/note/golang/json","h":"#3-json-解析库对比","p":1341},{"i":1360,"t":"只读取 JSON 数据（不修改）：✅ gjson 需要高性能 JSON 解析：✅ json-iterator/go 解析大 JSON 文件（如日志）：✅ buger/jsonparser 通用解析（兼容性好）：✅ encoding/json 根据具体需求选择合适的库，以提高 JSON 处理效率。","s":"总结与推荐","u":"/en/docs/note/golang/json","h":"#总结与推荐","p":1341},{"i":1363,"t":"在 Go 中，错误处理通常有两种方式：","s":"错误处理","u":"/en/docs/note/golang/jotting","h":"#错误处理","p":1361},{"i":1365,"t":"使用返回值返回一个 error 类型： func doSomething() (Result, error) { // ... }","s":"普通函数","u":"/en/docs/note/golang/jotting","h":"#普通函数","p":1361},{"i":1367,"t":"一种方式是像普通函数一样，直接返回一个 error。 另一种做法是，在结构体中增加一个 error 字段，在方法中设置这个字段的值。 type MyService struct { err error } func (s *MyService) Do() { // ... s.err = errors.New(\"something went wrong\") }","s":"结构体方法","u":"/en/docs/note/golang/jotting","h":"#结构体方法","p":1361},{"i":1369,"t":"在 Go 中，chan 是处理并发的核心工具之一，但并不是所有场景都适合使用它。以下是使用 chan 的建议与注意事项：","s":"Go 中何时使用 chan","u":"/en/docs/note/golang/jotting","h":"#go-中何时使用-chan","p":1361},{"i":1371,"t":"1. 异步操作 / 并发任务​ 函数中开启 goroutine 异步执行任务，通过返回的 chan 返回结果： func asyncAdd(a, b int) <-chan int { result := make(chan int) go func() { result <- a + b close(result) }() return result } 2. 流式数据传递​ 当函数生成一系列数据（如读取文件、流数据、分页 API 等），使用 chan 可以边生成边消费： func generate(n int) <-chan int { out := make(chan int) go func() { for i := 0; i < n; i++ { out <- i } close(out) }() return out } 3. 信号同步​ 当只需传递一个“完成”或“信号”，可以使用 chan struct{}： done := make(chan struct{}) go func() { // 做一些事 done <- struct{}{} }() <-done","s":"✅ 推荐使用的场景","u":"/en/docs/note/golang/jotting","h":"#-推荐使用的场景","p":1361},{"i":1373,"t":"只为传递一个返回值时：返回值即可，无需增加复杂度。 同步计算场景：没必要用 chan 包装同步调用。 为“函数式编程”风格强行引入 chan：Go 强调简洁，不宜滥用。","s":"❌ 不推荐的场景","u":"/en/docs/note/golang/jotting","h":"#-不推荐的场景","p":1361},{"i":1375,"t":"当你遇到如下报错： verifying module: invalid GOSUMDB: malformed verifier id 可能是 go.sum 校验失败。检查环境变量如下： $ go env GOSUMDB sum.golang.org $ go env GOPROXY https://goproxy.cn,direct 可尝试： 清空 go.sum 后重新运行 go mod tidy 切换 GOPROXY 为官方代理或关闭校验：GOSUMDB=off","s":"go mod tidy 报错 GOSUMDB","u":"/en/docs/note/golang/jotting","h":"#go-mod-tidy-报错-gosumdb","p":1361},{"i":1377,"t":"在 Go 中，空接口 interface{} 表示任意类型，类似于 Java 的 Object，但更加简洁高效。","s":"空接口 interface{} 与任意类型","u":"/en/docs/note/golang/jotting","h":"#空接口-interface-与任意类型","p":1361},{"i":1379,"t":"var arr = [3]int{1, 2, 3} value, ok := interface{}(arr).([3]int) ok 为 true 表示类型断言成功，value 即具体类型。 否则 ok 为 false。","s":"类型断言与转换","u":"/en/docs/note/golang/jotting","h":"#类型断言与转换","p":1361},{"i":1381,"t":"不占内存空间 在并发中常用于信号传递 ch := make(chan struct{}) ch <- struct{}{}","s":"空结构体 struct{}","u":"/en/docs/note/golang/jotting","h":"#空结构体-struct","p":1361},{"i":1383,"t":"Go 支持在 if 条件前定义变量： if n := \"abc\"; x < 0 { println(n[1]) } 等价于： n := \"abc\" if x < 0 { println(n[1]) } 注意：else if 与 else 的左大括号应与条件语句在同一行。","s":"if 判断语法简化","u":"/en/docs/note/golang/jotting","h":"#if-判断语法简化","p":1361},{"i":1386,"t":"ide 警告找不到方法，但是又可以通过跳转找到对应的方法。在ide运行，手动运行也正常。 问题原因 识别到的库版本出现了差异，出现了版本不兼容的问题。 可以通过 go.mod 强行指定版本。 清理goland缓存。 有可能是ide的索引损坏了。可以通过点击菜单栏File -> Invalidate Caches / Restart...，选择 Invalidate and Restart重新生成索引。","s":"1. ide 警告找不到方法","u":"/en/docs/note/golang/goland","h":"#1-ide-警告找不到方法","p":1384},{"i":1389,"t":"反射是 Go 语言中的一个强大特性，允许程序在运行时检查和操作变量的类型和值。 reflect 包提供了一系列 API，使得开发者可以动态获取变量的信息、修改变量的值，并在一定程度上实现动态调用。 适用场景： 处理接口类型的变量 解析结构体标签（struct tag） 生成通用工具，如序列化、反序列化、ORM 框架等 reflect 包的核心功能： 类型检查：获取变量的类型信息。 值操作：获取和修改变量的值。 方法调用：动态调用结构体的方法。 字段操作：动态访问和修改结构体的字段。 创建实例：通过反射创建新的变量实例。","s":"1. 反射（Reflect）概述","u":"/en/docs/note/golang/reflect","h":"#1-反射reflect概述","p":1387},{"i":1391,"t":"在 reflect 包中，主要有两个核心类型： reflect.Type：表示变量的类型（TypeOf 获取） reflect.Value：表示变量的值（ValueOf 获取）","s":"2. 反射的基本类型","u":"/en/docs/note/golang/reflect","h":"#2-反射的基本类型","p":1387},{"i":1393,"t":"package main import ( \"fmt\" \"reflect\" ) func main() { var num int = 42 typeInfo := reflect.TypeOf(num) valueInfo := reflect.ValueOf(num) fmt.Println(\"Type:\", typeInfo) // int fmt.Println(\"Value:\", valueInfo) // 42 typeInfo = reflect.TypeOf(&num) valueInfo = reflect.ValueOf(&num) fmt.Println(\"Point Type:\", typeInfo) // *int fmt.Println(\"Point Value:\", valueInfo) // 0xc00010a000 }","s":"2.1 获取变量的类型和值","u":"/en/docs/note/golang/reflect","h":"#21-获取变量的类型和值","p":1387},{"i":1395,"t":"反射可以修改变量的值，但前提是 reflect.Value 必须是可设置的（CanSet() 方法返回 true）。 package main import ( \"fmt\" \"reflect\" ) func main() { var num int = 42 // 传递指针才能修改原值 // 此时的valueInfo是一个reflect.Value类型。代表num指针 valueInfo := reflect.ValueOf(&num) // 此时的valueElem是一个reflect.Value类型。代表num的值 valueElem := valueInfo.Elem() /* * 当你需要通过指针修改原始变量的值时，你需要先获取指针的 reflect.Value， * 然后通过 .Elem() 方法获取到实际的值并进行操作。 */ if valueElem.CanSet() { valueElem.SetInt(100) } fmt.Println(\"Modified value:\", num) // 100 }","s":"3. 反射修改变量值","u":"/en/docs/note/golang/reflect","h":"#3-反射修改变量值","p":1387},{"i":1398,"t":"package main import ( \"fmt\" \"reflect\" ) type Person struct { Name string Age int } func main() { p := Person{Name: \"Alice\", Age: 30} typeInfo := reflect.TypeOf(p) // NumField returns the number of fields in the struct. // It panics if the type of v is not a struct. for i := 0; i < typeInfo.NumField(); i++ { field := typeInfo.Field(i) fmt.Printf(\"Field Name: %s, Type: %s\\n\", field.Name, field.Type) } }","s":"4.1 获取结构体字段信息","u":"/en/docs/note/golang/reflect","h":"#41-获取结构体字段信息","p":1387},{"i":1400,"t":"结构体字段可以带有标签，用于元数据存储，如 JSON、数据库映射等。 package main import ( \"fmt\" \"reflect\" ) type User struct { ID int `json:\"id\" yaml:\"id\"` Name string `json:\"name\"` } func main() { typeInfo := reflect.TypeOf(User{}) for i := 0; i < typeInfo.NumField(); i++ { field := typeInfo.Field(i) // 打印字段标签 fmt.Printf(\"Field Tag: %s\\n\", field.Tag) tag := field.Tag.Get(\"json\") fmt.Printf(\"Field: %s, JSON Tag: %s\\n\", field.Name, tag) } }","s":"4.2 解析结构体标签（Tag）","u":"/en/docs/note/golang/reflect","h":"#42-解析结构体标签tag","p":1387},{"i":1402,"t":"有参数调用 package main import ( \"fmt\" \"reflect\" ) type Calculator struct{} func (c Calculator) Add(a, b int) int { return a + b } func main() { calc := Calculator{} method := reflect.ValueOf(calc).MethodByName(\"Add\") args := []reflect.Value{reflect.ValueOf(10), reflect.ValueOf(20)} result := method.Call(args) fmt.Println(\"Result:\", result[0].Int()) // 30 } 无参数调用 package main import ( \"fmt\" \"reflect\" ) type User struct { Name string } func (u User) SayHello() { fmt.Println(\"Hello,\", u.Name) } func main() { u := User{Name: \"Alice\"} v := reflect.ValueOf(u) method := v.MethodByName(\"SayHello\") method.Call(nil) // 输出: Hello, Alice }","s":"5. 反射调用方法","u":"/en/docs/note/golang/reflect","h":"#5-反射调用方法","p":1387},{"i":1404,"t":"代码可读性降低，调试难度增大 性能损耗，相比普通方法调用慢10倍以上","s":"6. 反射的局限性","u":"/en/docs/note/golang/reflect","h":"#6-反射的局限性","p":1387},{"i":1406,"t":"只有在动态需求时使用反射，避免滥用 使用 interface{} 和 switch 语句作为反射的替代方案 结合 json、protobuf 等库时，合理利用 reflect 提取字段信息","s":"7. 反射最佳实践","u":"/en/docs/note/golang/reflect","h":"#7-反射最佳实践","p":1387},{"i":1409,"t":"kingpin 是一个用于解析命令行参数的 Golang 库，提供类似 flag 但更强大和直观的 API，支持子命令、默认值、环境变量等。","s":"1. 简介","u":"/en/docs/note/golang/kingpin","h":"#1-简介","p":1407},{"i":1411,"t":"go get github.com/alecthomas/kingpin","s":"2. 安装","u":"/en/docs/note/golang/kingpin","h":"#2-安装","p":1407},{"i":1414,"t":"kingpin 提供了默认的 kingpin.CommandLine，可以直接使用全局方法定义参数。 package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) var ( name = kingpin.Flag(\"name\", \"输入你的名字。\").Short('n').Default(\"World\").String() age = kingpin.Flag(\"age\", \"输入你的年龄。\").Int() ) func main() { kingpin.Parse() fmt.Printf(\"Hello %s! You are %d years old.\\n\", *name, *age) } 运行示例： ./example --name=Alice --age=30","s":"3.1 使用默认 App","u":"/en/docs/note/golang/kingpin","h":"#31-使用默认-app","p":1407},{"i":1416,"t":"package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"example\", \"示例应用程序。\") name := app.Flag(\"name\", \"输入你的名字。\").Short('n').Default(\"World\").String() age := app.Flag(\"age\", \"输入你的年龄。\").Int() kingpin.MustParse(app.Parse(os.Args[1:])) fmt.Printf(\"Hello %s! You are %d years old.\\n\", *name, *age) } 运行示例： ./example --name=Alice --age=30","s":"3.2 定义命令行参数（使用 New 方法）","u":"/en/docs/note/golang/kingpin","h":"#32-定义命令行参数使用-new-方法","p":1407},{"i":1418,"t":"package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"app\", \"一个支持子命令的示例。\") // 定义子命令 `greet` greetCmd := app.Command(\"greet\", \"打招呼。\") name := greetCmd.Flag(\"name\", \"你的名字。\").Default(\"World\").String() // 定义子命令 `bye` byeCmd := app.Command(\"bye\", \"告别。\") goodbye := byeCmd.Flag(\"message\", \"告别消息。\").Default(\"Goodbye!\").String() switch kingpin.MustParse(app.Parse(os.Args[1:])) { case greetCmd.FullCommand(): fmt.Printf(\"Hello, %s!\\n\", *name) case byeCmd.FullCommand(): fmt.Println(*goodbye) } } 运行示例： ./app greet --name=Bob ./app bye --message=\"See you!\"","s":"3.3 使用子命令","u":"/en/docs/note/golang/kingpin","h":"#33-使用子命令","p":1407},{"i":1420,"t":"package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"env-example\", \"示例环境变量支持。\") name := app.Flag(\"name\", \"你的名字。\").Envar(\"USER_NAME\").Default(\"Anonymous\").String() kingpin.MustParse(app.Parse(os.Args[1:])) fmt.Println(\"Hello,\", *name) } 运行示例： export USER_NAME=Charlie ./env-example","s":"3.4 绑定环境变量","u":"/en/docs/note/golang/kingpin","h":"#34-绑定环境变量","p":1407},{"i":1422,"t":"package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"bool-flag\", \"布尔标志示例。\") verbose := app.Flag(\"verbose\", \"开启详细模式。\").Short('v').Bool() kingpin.MustParse(app.Parse(os.Args[1:])) if *verbose { fmt.Println(\"Verbose mode enabled\") } else { fmt.Println(\"Verbose mode disabled\") } } 运行示例： ./bool-flag --verbose ./bool-flag -v","s":"3.5 处理布尔标志","u":"/en/docs/note/golang/kingpin","h":"#35-处理布尔标志","p":1407},{"i":1424,"t":"package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"list-example\", \"解析列表参数示例。\") items := app.Flag(\"items\", \"输入多个项。\").Strings() kingpin.MustParse(app.Parse(os.Args[1:])) fmt.Println(\"Items:\", *items) } 运行示例： ./list-example --items=apple --items=banana --items=cherry","s":"3.6 解析列表参数","u":"/en/docs/note/golang/kingpin","h":"#36-解析列表参数","p":1407},{"i":1427,"t":"可以使用 kingpin.Action() 在解析参数后执行特定逻辑。 package main import ( \"fmt\" \"os\" \"github.com/alecthomas/kingpin\" ) func main() { app := kingpin.New(\"custom-action\", \"示例：使用自定义解析逻辑。\") name := app.Flag(\"name\", \"输入你的名字。\").String() app.Action(func(c *kingpin.ParseContext) error { fmt.Println(\"解析完成，欢迎\", *name) return nil }) kingpin.MustParse(app.Parse(os.Args[1:])) }","s":"4.1 自定义解析器","u":"/en/docs/note/golang/kingpin","h":"#41-自定义解析器","p":1407},{"i":1429,"t":"kingpin 提供了一种简单易用且功能强大的命令行解析方式，适用于各种 CLI 应用。","s":"5. 总结","u":"/en/docs/note/golang/kingpin","h":"#5-总结","p":1407},{"i":1431,"t":"✅ 支持子命令 ✅ 支持环境变量 ✅ 友好的 API 设计 ✅ 丰富的参数类型支持 ✅ 自动生成帮助文档 如果需要构建复杂的命令行工具，kingpin 是一个值得推荐的选择。","s":"特点总结","u":"/en/docs/note/golang/kingpin","h":"#特点总结","p":1407},{"i":1434,"t":"使用channel 在 goroutine 间进行通信和同步操作 package main import ( \"fmt\" \"time\" ) // SetRulesRequest 表示设置规则的请求结构 type SetRulesRequest struct { NewRules []string Response chan error // 用于同步返回是否成功 } // Aggregator 用于管理规则并支持并发设置 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} } // SetRules 是向 aggregator 发送新规则的接口 func (a *Aggregator) SetRules(r []string) error { req := &SetRulesRequest{ NewRules: r, Response: make(chan error), } a.setRulesChan <- req return <-req.Response // 等待响应结束 } // Run 启动 aggregator 的工作协程 func (a *Aggregator) Run() { for { select { case req := <-a.setRulesChan: a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) req.Response <- nil // 成功响应 case <-a.stopChan: return } } } // Stop 关闭 aggregator 的后台协程 func (a *Aggregator) Stop() { close(a.stopChan) } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), } go aggregator.Run() // 模拟使用 time.Sleep(500 * time.Millisecond) aggregator.SetRules([]string{\"a\", \"b\", \"c\"}) aggregator.SetRules([]string{\"d\", \"e\", \"f\"}) // 停止后台协程 aggregator.Stop() } 🔍 说明重点： 通信模型：调用者通过 SetRules 向 Aggregator 的 channel 发送数据，然后通过一个 Response channel 同步等待执行结果。 响应式设计：Aggregator 处理请求后通过 channel 回复，避免竞态。 易扩展性：你可以将更多操作（如查询、追加等）封装成不同的 request 结构体，并通过不同 channel 或类型区分处理。","s":"1. channel 交互","u":"/en/docs/note/golang/design/multi_goroutine","h":"#1-channel-交互","p":1432},{"i":1437,"t":"发送端（ch <- v）向已关闭 channel 发送数据： 会 panic！ 接收端（<-chan）读取已关闭 channel： 不会 panic， 立即返回零值 第二个返回值判断是否关闭。即：v, ok := <-ch，如果 ok == false，说明 channel 已关闭。 不判断。即: v := <-ch，立即返回零值，无法判断 channel 是否关闭。 即：v, ok := <-ch，如果 ok == false，说明 channel 已关闭。 举例 package main import ( \"log\" \"time\" ) func main() { //ch := make(chan int, 2) ch := make(chan int) go func() { ch <- 20 time.Sleep(1 * time.Second) defer close(ch) }() // 只接收数据，不检查通道状态 rules := <-ch log.Println(\"Rules:\", rules) // 输出：14:47:31 Rules: 20 rules = <-ch log.Println(\"Rules:\", rules) // 输出：14:47:32 Rules: 0 rules = <-ch log.Println(\"Rules:\", rules) // 输出：14:47:32 Rules: 0 // 读取时检查通道是否仍然开放 rules, open := <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:39 Rules: 20 Open: true rules, open = <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:40 Rules: 0 Open: false rules, open = <-ch log.Println(\"Rules:\", rules, \"Open:\", open) // 输出：14:46:40 Rules: 0 Open: false }","s":"2.1. 理解 channel 行为","u":"/en/docs/note/golang/design/multi_goroutine","h":"#21-理解-channel-行为","p":1432},{"i":1439,"t":"✅ 特性亮点： 安全关闭 goroutine： setRulesChan 和 stopChan 都支持关闭，防止死锁或 panic。 带 ok 判断防止接收已关闭的 channel 导致数据为 nil。 封装清晰： Run() 执行逻辑清晰，Stop() 方法负责安全退出和资源清理。 package main import ( \"fmt\" \"time\" ) // 请求结构体，设置规则并通过 Response 返回结果 type SetRulesRequest struct { NewRules []string Response chan error } // 聚合器结构 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} doneChan chan struct{} // 通知主线程已退出 } // Run 启动 Aggregator 的工作协程 func (a *Aggregator) Run() { defer close(a.doneChan) // 通知主线程：后台协程已退出 for { select { case req, ok := <-a.setRulesChan: if !ok { fmt.Println(\"setRulesChan closed, exiting Run()\") return } a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) // 响应调用者 req.Response <- nil case <-a.stopChan: fmt.Println(\"Received stop signal, exiting Run()\") return } } } // SetRules 发送规则请求 func (a *Aggregator) SetRules(r []string) error { req := &SetRulesRequest{ NewRules: r, Response: make(chan error), } select { case a.setRulesChan <- req: return <-req.Response case <-a.stopChan: return fmt.Errorf(\"aggregator is shutting down\") } } // Stop 关闭 aggregator，确保 goroutine 优雅退出 func (a *Aggregator) Stop() { close(a.stopChan) // 通知退出 close(a.setRulesChan) // 防止阻塞在 <-setRulesChan <-a.doneChan // 等待后台处理完成 fmt.Println(\"Aggregator stopped gracefully\") } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), doneChan: make(chan struct{}), } go aggregator.Run() time.Sleep(500 * time.Millisecond) aggregator.SetRules([]string{\"a\", \"b\", \"c\"}) aggregator.SetRules([]string{\"x\", \"y\", \"z\"}) aggregator.Stop() }","s":"2.2. 使用判断channel 优化示例","u":"/en/docs/note/golang/design/multi_goroutine","h":"#22-使用判断channel-优化示例","p":1432},{"i":1441,"t":"🧠 为啥用 context.Context？ 防止调用者被永久阻塞：例如 aggregator goroutine 迟迟不响应。 可设置 timeout 或 cancel，适合服务端编程模型。 可组合多种取消方式（定时取消 + 主动取消）。 ✅ 增强功能： SetRules 支持超时 / 取消（避免卡死等待响应）。 context.Context 控制响应等待过程。 依然保留 graceful shutdown 支持（Stop()）。 package main import ( \"context\" \"fmt\" \"time\" ) // 请求结构体，设置规则并通过 Response 返回结果 type SetRulesRequest struct { NewRules []string Response chan error } // 聚合器结构体 type Aggregator struct { rules []string setRulesChan chan *SetRulesRequest stopChan chan struct{} doneChan chan struct{} } // Run 启动 aggregator 的工作协程 func (a *Aggregator) Run() { defer close(a.doneChan) for { select { case req, ok := <-a.setRulesChan: if !ok { fmt.Println(\"setRulesChan closed, exiting Run()\") return } a.rules = req.NewRules fmt.Println(\"Updated rules:\", a.rules) req.Response <- nil case <-a.stopChan: fmt.Println(\"Received stop signal, exiting Run()\") return } } } // SetRulesCtx 支持 context 超时 / 取消控制 func (a *Aggregator) SetRulesCtx(ctx context.Context, rules []string) error { req := &SetRulesRequest{ NewRules: rules, Response: make(chan error, 1), // 非阻塞回写 } // 模拟耗时操作 time.Sleep(2 * time.Millisecond) select { case a.setRulesChan <- req: // 等待响应 or context 超时 select { case err := <-req.Response: return err case <-ctx.Done(): return fmt.Errorf(\"set rules timeout or cancelled: %w\", ctx.Err()) } case <-a.stopChan: return fmt.Errorf(\"aggregator shutting down\") case <-ctx.Done(): return fmt.Errorf(\"send timeout or cancelled: %w\", ctx.Err()) } } // Stop 优雅关闭 func (a *Aggregator) Stop() { close(a.stopChan) close(a.setRulesChan) <-a.doneChan fmt.Println(\"Aggregator stopped gracefully\") } func main() { aggregator := &Aggregator{ rules: []string{}, setRulesChan: make(chan *SetRulesRequest), stopChan: make(chan struct{}), doneChan: make(chan struct{}), } go aggregator.Run() // 模拟正常调用 ctx := context.Background() aggregator.SetRulesCtx(ctx, []string{\"a\", \"b\", \"c\"}) // 模拟带 timeout 的调用（1ms 会超时） ctxTimeout, cancel := context.WithTimeout(context.Background(), 1*time.Millisecond) defer cancel() err := aggregator.SetRulesCtx(ctxTimeout, []string{\"should\", \"fail\", \"fast\"}) if err != nil { fmt.Println(\"Timeout err:\", err) } // 正常调用 ctx2, cancel2 := context.WithTimeout(context.Background(), 2*time.Second) defer cancel2() aggregator.SetRulesCtx(ctx2, []string{\"x\", \"y\", \"z\"}) aggregator.Stop() }","s":"3. 支持 context.Context","u":"/en/docs/note/golang/design/multi_goroutine","h":"#3-支持-contextcontext","p":1432},{"i":1443,"t":"CommandHandler 模式是命令模式（Command Pattern）的一种实现方式，常用于将请求（命令）与处理逻辑解耦，从而提高系统的灵活性和可扩展性。它通过将命令封装为对象，并由专门的 CommandHandler 负责执行这些命令，使得系统能够更轻松地管理命令的生命周期、支持撤销/重做操作、实现事务管理或异步处理。 核心概念 Command（命令） 定义一个接口或抽象类，声明执行命令的方法（如 execute()）。 具体命令类实现该接口，封装请求的具体逻辑。 CommandHandler（命令处理器） 负责接收命令对象并调用其 execute() 方法。 可以扩展为支持命令的调度、排队、事务管理或异步执行。 Invoker（调用者） 触发命令的对象，通常持有对 CommandHandler 的引用。 Receiver（接收者） 执行命令实际逻辑的对象，命令对象通过依赖注入或组合的方式与接收者交互。 🎯 目标： 支持不同类型请求的统一处理通道 类似“命令模式”：将操作封装为一个结构体 可扩展、可测试、context 支持、graceful shutdown ✅ 架构设计： +--------------------+ | CommandHandler | |--------------------| | chan Command |<----------- Send() | goroutine: dispatch| (通用异步接口) +--------------------+ | V +--------------------+ | Command (接口) |<-- 多种请求实现： | Execute(context) | - SetRulesCommand +--------------------+ - GetRulesCommand - AppendRulesCommand ✨ 通用实现（含 SetRules 和 GetRules）： package main import ( \"context\" \"errors\" \"fmt\" ) // Command 是所有请求的接口 type Command interface { Execute(ctx context.Context, h *Handler) Done() <-chan struct{} Err() error } // Handler 管理状态和调度命令执行 type Handler struct { rules []string cmdChan chan Command stop chan struct{} done chan struct{} } // 基础命令结构 type baseCommand struct { err error done chan struct{} } func (c *baseCommand) Done() <-chan struct{} { return c.done } func (c *baseCommand) Err() error { return c.err } // SetRulesCommand 设置规则 type SetRulesCommand struct { baseCommand NewRules []string } func (c *SetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) h.rules = c.NewRules fmt.Println(\"SetRulesCommand executed:\", h.rules) } // GetRulesCommand 获取规则 type GetRulesCommand struct { baseCommand Result chan []string } func (c *GetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) c.Result <- h.rules close(c.Result) } func NewHandler() *Handler { return &Handler{ rules: []string{}, cmdChan: make(chan Command), stop: make(chan struct{}), done: make(chan struct{}), } } // Run 启动处理循环 func (h *Handler) Run() { defer close(h.done) for { select { case cmd := <-h.cmdChan: ctx := context.Background() // 可支持 ctx 控制 cmd.Execute(ctx, h) case <-h.stop: return } } } // Send 提交命令（带超时支持） func (h *Handler) Send(ctx context.Context, cmd Command) error { select { case h.cmdChan <- cmd: select { case <-cmd.Done(): return cmd.Err() case <-ctx.Done(): return ctx.Err() } case <-h.stop: return errors.New(\"handler is stopped\") case <-ctx.Done(): return ctx.Err() } } // Stop 优雅关闭 func (h *Handler) Stop() { close(h.stop) <-h.done } func main() { handler := NewHandler() go handler.Run() ctx := context.Background() setCmd := &SetRulesCommand{ baseCommand: baseCommand{done: make(chan struct{})}, NewRules: []string{\"a\", \"b\", \"c\"}, } handler.Send(ctx, setCmd) // 获取规则 getCmd := &GetRulesCommand{ baseCommand: baseCommand{done: make(chan struct{})}, Result: make(chan []string, 1), } handler.Send(ctx, getCmd) fmt.Println(\"Current rules:\", <-getCmd.Result) handler.Stop() } ✅ 泛型式响应的 ResultCommand[T] 设计 实现目标： 命令支持携带强类型返回值（例如：[]string、int、bool 等）； 支持 context 控制； 解耦命令发送与执行，类型安全 的异步响应； 易扩展、结构清晰。 package main import ( \"context\" \"errors\" \"fmt\" \"time\" ) // 通用 Command 接口 type Command interface { Execute(context.Context, *Handler) Done() <-chan struct{} Err() error } // Handler：命令处理器 type Handler struct { rules []string cmdChan chan Command stop chan struct{} done chan struct{} } func NewHandler() *Handler { return &Handler{ rules: []string{}, cmdChan: make(chan Command), stop: make(chan struct{}), done: make(chan struct{}), } } func (h *Handler) Run() { defer close(h.done) for { select { case cmd := <-h.cmdChan: cmd.Execute(context.Background(), h) case <-h.stop: return } } } func (h *Handler) Stop() { close(h.stop) <-h.done } // Send 支持泛型命令发送 func (h *Handler) Send(ctx context.Context, cmd Command) error { select { case h.cmdChan <- cmd: select { case <-cmd.Done(): return cmd.Err() case <-ctx.Done(): return ctx.Err() } case <-ctx.Done(): return ctx.Err() case <-h.stop: return errors.New(\"handler stopped\") } } // 泛型命令 ResultCommand[T] // -------------------------------- type ResultCommand[T any] struct { result T err error done chan struct{} resultC chan T } func NewResultCommand[T any]() *ResultCommand[T] { return &ResultCommand[T]{ done: make(chan struct{}), resultC: make(chan T, 1), // 非阻塞写入 } } func (c *ResultCommand[T]) Done() <-chan struct{} { return c.done } func (c *ResultCommand[T]) Err() error { return c.err } // Wait 等待结果 func (c *ResultCommand[T]) Wait(ctx context.Context) (T, error) { select { case <-ctx.Done(): var zero T return zero, ctx.Err() case res := <-c.resultC: return res, c.err } } // -------------------------------- // 示例命令：GetRulesCommand 返回 []string // -------------------------------- type GetRulesCommand struct { *ResultCommand[[]string] } func NewGetRulesCommand() *GetRulesCommand { return &GetRulesCommand{ ResultCommand: NewResultCommand[[]string](), } } func (c *GetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) c.result = h.rules c.resultC <- h.rules } // -------------------------------- // 示例命令：SetRulesCommand // -------------------------------- type SetRulesCommand struct { newRules []string done chan struct{} err error } func NewSetRulesCommand(rules []string) *SetRulesCommand { return &SetRulesCommand{ newRules: rules, done: make(chan struct{}), } } func (c *SetRulesCommand) Execute(ctx context.Context, h *Handler) { defer close(c.done) h.rules = c.newRules fmt.Println(\"Rules updated:\", h.rules) } func (c *SetRulesCommand) Done() <-chan struct{} { return c.done } func (c *SetRulesCommand) Err() error { return c.err } // 🧪 Main 演示：SetRules 和 GetRules 泛型返回 func main() { h := NewHandler() go h.Run() ctx := context.Background() // Set rules setCmd := NewSetRulesCommand([]string{\"x\", \"y\", \"z\"}) _ = h.Send(ctx, setCmd) // Get rules getCmd := NewGetRulesCommand() _ = h.Send(ctx, getCmd) rules, err := getCmd.Wait(ctx) if err != nil { fmt.Println(\"GetRules error:\", err) } else { fmt.Println(\"Got rules:\", rules) } // 超时测试 timeoutCtx, cancel := context.WithTimeout(ctx, 1*time.Millisecond) defer cancel() getCmd2 := NewGetRulesCommand() _ = h.Send(timeoutCtx, getCmd2) rules2, err := getCmd2.Wait(timeoutCtx) fmt.Println(\"With timeout:\", rules2, err) h.Stop() } 输出示例： Rules updated: [x y z] Got rules: [x y z] With timeout: [] context deadline exceeded 📦 可扩展示例命令 GetStatsCommand struct{ ResultCommand[map[string]int] } FlushToDiskCommand struct{ ResultCommand[bool] } LoadConfigCommand struct{ ResultCommand[Config] } AppendRulesCommand struct{ Rules []string }","s":"4. CommandHandler 模式","u":"/en/docs/note/golang/design/multi_goroutine","h":"#4-commandhandler-模式","p":1432},{"i":1446,"t":"validator 是 Go 语言中一个强大的数据验证库，它提供结构体字段标签验证功能，并支持自定义验证规则。","s":"1. 简介","u":"/en/docs/note/golang/validator","h":"#1-简介","p":1444},{"i":1448,"t":"go get github.com/go-playground/validator/v10","s":"2. 安装","u":"/en/docs/note/golang/validator","h":"#2-安装","p":1444},{"i":1450,"t":"package main import ( \"fmt\" \"github.com/go-playground/validator/v10\" ) type User struct { Name string `validate:\"required\"` Age int `validate:\"gte=18,lte=65\"` Email string `validate:\"required,email\"` } func main() { validate := validator.New() user := User{ Name: \"\", Age: 17, Email: \"invalid-email\", } err := validate.Struct(user) if err != nil { for _, err := range err.(validator.ValidationErrors) { fmt.Println(\"Validation error:\", err) } } else { fmt.Println(\"Validation passed\") } }","s":"3. 基本使用","u":"/en/docs/note/golang/validator","h":"#3-基本使用","p":1444},{"i":1452,"t":"标签 描述 required 必填字段 email 必须是合法的邮箱格式 gte=X 大于等于 X lte=X 小于等于 X min=X 字符串、切片、映射的最小长度 max=X 字符串、切片、映射的最大长度 len=X 长度必须等于 X url 必须是合法的 URL numeric 必须是数字 alphanum 仅允许字母和数字 alpha 仅允许字母 contains=X 必须包含 X 子串 startswith=X 必须以 X 开头 endswith=X 必须以 X 结尾 lowercase 必须为小写 uppercase 必须为大写 ipv4 必须是合法的 IPv4 地址 ipv6 必须是合法的 IPv6 地址 boolean 必须是布尔值 datetime=layout 必须是指定格式的日期时间 base64 必须是 Base64 编码格式 hexcolor 必须是十六进制颜色代码 uuid 必须是合法的 UUID json 必须是合法的 JSON 字符串 ascii 仅允许 ASCII 字符 printascii 仅允许可打印 ASCII 字符 multibyte 允许多字节字符 containsany=chars 必须包含 chars 中的至少一个字符 excludesall=chars 不能包含 chars 中的任何字符 excludes=X 不能包含 X 子串 isdefault 必须是字段类型的默认值 dive 用于切片或者map的验证","s":"4. 常见的内置验证标签","u":"/en/docs/note/golang/validator","h":"#4-常见的内置验证标签","p":1444},{"i":1454,"t":"可以自定义验证规则，例如验证字符串是否为 \"hello\": func helloValidator(fl validator.FieldLevel) bool { return fl.Field().String() == \"hello\" } func main() { validate := validator.New() validate.RegisterValidation(\"hello\", helloValidator) type Test struct { Msg string `validate:\"hello\"` } t := Test{Msg: \"world\"} err := validate.Struct(t) if err != nil { fmt.Println(\"Validation failed:\", err) } else { fmt.Println(\"Validation passed\") } }","s":"5. 自定义验证","u":"/en/docs/note/golang/validator","h":"#5-自定义验证","p":1444},{"i":1456,"t":"type Address struct { City string `validate:\"required\"` ZipCode string `validate:\"numeric\"` } type Person struct { Name string `validate:\"required\"` Age int `validate:\"gte=18\"` Address Address `validate:\"required\"` } required 关键字表示深入到嵌套结构体中进行验证。","s":"6. 结构体嵌套验证","u":"/en/docs/note/golang/validator","h":"#6-结构体嵌套验证","p":1444},{"i":1458,"t":"if err != nil { for _, e := range err.(validator.ValidationErrors) { fmt.Printf(\"Field %s failed on '%s' tag\\n\", e.Field(), e.Tag()) } }","s":"7. 处理错误信息","u":"/en/docs/note/golang/validator","h":"#7-处理错误信息","p":1444},{"i":1460,"t":"validator 提供了丰富的验证功能，适用于 Go 项目中的输入校验场景，可以结合 gin 或其他 Web 框架进行 API 参数验证，提高数据的可靠性。","s":"8. 结论","u":"/en/docs/note/golang/validator","h":"#8-结论","p":1444},{"i":1463,"t":"在 Golang 中，序列化（Serialization）和反序列化（Deserialization）是数据持久化和网络传输的关键技术。默认情况下，encoding/json 标准库可以处理大部分常见的 JSON 数据格式。但在复杂业务场景中，我们可能需要对数据格式、字段校验、嵌套类型等进行定制化处理。 本培训文档旨在介绍如何通过实现 json.Marshaler 和 json.Unmarshaler 接口，实现对自定义类型的灵活处理，涵盖常见及进阶场景。","s":"1. 引言","u":"/en/docs/note/golang/serialization","h":"#1-引言","p":1461},{"i":1466,"t":"import \"encoding/json\" func main() { p := Person{\"Alice\", 30} // 序列化 data, err := json.Marshal(p) // 反序列化 var p2 Person err = json.Unmarshal(data, &p2) }","s":"2.1 JSON序列化","u":"/en/docs/note/golang/serialization","h":"#21-json序列化","p":1461},{"i":1468,"t":"type Product struct { ID int `json:\"id\"` Name string `json:\"name\"` CreatedAt time.Time `json:\"created_at,omitempty\"` }","s":"2.2 结构体标签","u":"/en/docs/note/golang/serialization","h":"#22-结构体标签","p":1461},{"i":1470,"t":"通过实现 json.Marshaler 接口，可以自定义对象转换为 JSON 的逻辑。类似的，通过实现yaml.Marshaler接口，可以自定义对象转化为 yaml的逻辑。 接口实现中，还可以增加校验规则，实现类似validate的效果 type Person struct { Name string Age int } // 自定义反序列化，加入数据校验 func (p *Person) UnmarshalJSON(data []byte) error { var temp struct { FullName string `json:\"full_name\"` Age int `json:\"age\"` } if err := json.Unmarshal(data, &temp); err != nil { return err } if temp.Age < 0 || temp.Age > 150 { return errors.New(\"age must be between 0 and 150\") }","s":"3. 自定义类型序列化","u":"/en/docs/note/golang/serialization","h":"#3-自定义类型序列化","p":1461},{"i":1472,"t":"type CustomDate time.Time func (cd CustomDate) MarshalJSON() ([]byte, error) { return json.Marshal(time.Time(cd).Format(\"2006-01-02\")) }","s":"3.1 实现Marshaler接口","u":"/en/docs/note/golang/serialization","h":"#31-实现marshaler接口","p":1461},{"i":1474,"t":"func (cd *CustomDate) UnmarshalJSON(data []byte) error { var s string if err := json.Unmarshal(data, &s); err != nil { return err } t, err := time.Parse(\"2006-01-02\", s) if err != nil { return err } *cd = CustomDate(t) return nil }","s":"3.2 实现Unmarshaler接口","u":"/en/docs/note/golang/serialization","h":"#32-实现unmarshaler接口","p":1461},{"i":1477,"t":"type Order struct { ID int `json:\"id\"` Products []Product `json:\"products\"` Date CustomDate `json:\"date\"` }","s":"4.1 嵌套结构体","u":"/en/docs/note/golang/serialization","h":"#41-嵌套结构体","p":1461},{"i":1479,"t":"type Shape interface { Area() float64 } type Circle struct { Radius float64 `json:\"radius\"` } func (c Circle) Area() float64 { return math.Pi * c.Radius * c.Radius } // 自定义序列化逻辑 func (c *Circle) MarshalJSON() ([]byte, error) { type Alias Circle return json.Marshal(&struct { Type string `json:\"type\"` *Alias }{ Type: \"circle\", Alias: (*Alias)(c), }) }","s":"4.2 接口类型处理","u":"/en/docs/note/golang/serialization","h":"#42-接口类型处理","p":1461},{"i":1482,"t":"var bufferPool = sync.Pool{ New: func() interface{} { return new(bytes.Buffer) }, } func MarshalWithPool(v interface{}) ([]byte, error) { buf := bufferPool.Get().(*bytes.Buffer) defer bufferPool.Put(buf) buf.Reset() encoder := json.NewEncoder(buf) if err := encoder.Encode(v); err != nil { return nil, err } return buf.Bytes(), nil }","s":"5.1 使用缓冲池","u":"/en/docs/note/golang/serialization","h":"#51-使用缓冲池","p":1461},{"i":1484,"t":"json-iterator: 兼容标准库的高性能实现 easyjson: 代码生成方案 protobuf: 二进制序列化方案","s":"5.2 使用第三方库","u":"/en/docs/note/golang/serialization","h":"#52-使用第三方库","p":1461},{"i":1487,"t":"type Node struct { Value int `json:\"value\"` Next *Node `json:\"next,omitempty\"` // 使用omitempty避免无限递归 }","s":"6.1 循环引用问题","u":"/en/docs/note/golang/serialization","h":"#61-循环引用问题","p":1461},{"i":1489,"t":"type Timestamp time.Time func (t *Timestamp) UnmarshalJSON(b []byte) error { s := strings.Trim(string(b), \"\\\"\") tm, err := time.Parse(time.RFC3339, s) if err != nil { return err } *t = Timestamp(tm) return nil }","s":"6.2 时间格式处理","u":"/en/docs/note/golang/serialization","h":"#62-时间格式处理","p":1461},{"i":1492,"t":"func TestCustomDate_MarshalJSON(t *testing.T) { cd := CustomDate(time.Date(2023, 1, 1, 0, 0, 0, 0, time.UTC)) data, err := json.Marshal(cd) assert.Nil(t, err) assert.Equal(t, `\"2023-01-01\"`, string(data)) } func TestCustomDate_UnmarshalJSON(t *testing.T) { var cd CustomDate err := json.Unmarshal([]byte(`\"2023-01-01\"`), &cd) assert.Nil(t, err) assert.Equal(t, 2023, time.Time(cd).Year()) }","s":"7.1 单元测试示例","u":"/en/docs/note/golang/serialization","h":"#71-单元测试示例","p":1461},{"i":1494,"t":"始终处理错误返回值 对敏感字段使用json:\"-\" 使用omitempty处理可选字段 对大对象使用流式处理（json.Decoder） 避免在Marshal/Unmarshal方法中修改共享状态","s":"8. 最佳实践","u":"/en/docs/note/golang/serialization","h":"#8-最佳实践","p":1461},{"i":1496,"t":"package main import ( \"encoding/json\" \"fmt\" \"time\" ) type CustomDate time.Time func (cd CustomDate) MarshalJSON() ([]byte, error) { return json.Marshal(time.Time(cd).Format(\"2006-01-02\")) } func (cd *CustomDate) UnmarshalJSON(data []byte) error { var s string if err := json.Unmarshal(data, &s); err != nil { return err } t, err := time.Parse(\"2006-01-02\", s) if err != nil { return err } *cd = CustomDate(t) return nil } type Event struct { Name string `json:\"name\"` EventDate CustomDate `json:\"event_date\"` } func main() { event := Event{ Name: \"Go Conference\", EventDate: CustomDate(time.Now()), } data, _ := json.Marshal(event) fmt.Println(string(data)) // {\"name\":\"Go Conference\",\"event_date\":\"2023-07-20\"} var newEvent Event _ = json.Unmarshal(data, &newEvent) fmt.Printf(\"%+v\\n\", newEvent) // {Name:Go Conference EventDate:2023-07-20 00:00:00 +0000 UTC} } secret 密码示例: package web import ( \"encoding/json\" \"errors\" ) /* * Secret 用于存储敏感信息的结构体，实现 yaml.Marshaler、json.Marshaler、yaml.Unmarshaler、json.Unmarshaler 接口， * 用于在 YAML 和 JSON 文件中隐藏敏感信息，并实现加密和解密功能。 * 我们在开发中，对需要yaml，和json处理的数据，可以采用类似的方法 */ // Secret 用于存储敏感信息的结构体 type Secret struct { value string } // NewSecret 创建新的 Secret func NewSecret(val string) Secret { return Secret{value: val} } // MarshalYAML 实现 yaml.Marshaler 接口 func (s Secret) MarshalYAML() (interface{}, error) { //if s.value != \"\" { // return \"<secret>\", nil //} //return nil, nil return \"<secret>\", nil } // MarshalJSON 实现 json.Marshaler 接口 func (s Secret) MarshalJSON() ([]byte, error) { return []byte(\"<secret>\"), nil } // UnmarshalYAML 实现 yaml.Unmarshaler 接口 func (s *Secret) UnmarshalYAML(unmarshal func(interface{}) error) error { if s == nil { return errors.New(\"cannot unmarshal into nil Secret\") } // 可以通过定义一个中间类型，如 plain，来避免递归调用 //type plain Secret // 定义 plain 为 Secret 的别名 //return unmarshal((*plain)(s)) // 将 s 转换为 *plain 类型，避免递归调用 // 也可以直接定义一个string变量，然后通过json.Unmarshal()方法将数据解析到该变量中 // 这样相当于调用的是string 的unmarshal方法,避免了递归调用 var raw string if err := unmarshal(&raw); err != nil { return err } s.value = raw return nil } // UnmarshalJSON 实现 json.Unmarshaler 接口 func (s *Secret) UnmarshalJSON(data []byte) error { if s == nil { return errors.New(\"cannot unmarshal into nil Secret\") } var raw string if err := json.Unmarshal(data, &raw); err != nil { return err } s.value = raw return nil } // Get 返回实际值，减少直接暴露 func (s Secret) Get() string { return s.value }","s":"附录：完整示例","u":"/en/docs/note/golang/serialization","h":"#附录完整示例","p":1461},{"i":1499,"t":"chroot 是一个 Linux 命令，用于将进程和其子进程的根目录（/）更改为指定的目录。换句话说，它改变了程序的根目录路径，使得程序无法访问更高层级的文件系统。常用于隔离环境、创建沙箱、进行系统恢复等场景。","s":"1. 概述","u":"/en/docs/note/os/chroot","h":"#1-概述","p":1497},{"i":1501,"t":"使用 chroot 命令时，指定的路径将成为新的根目录。进程运行时，文件系统的访问将相对于新根目录（chroot 目录）进行，系统的其他部分不可见。 chroot <new_root> [command] <new_root>：指定新的根目录。 [command]：可选的命令，表示在新的根目录环境中执行的命令。如果没有指定命令，则默认将会启动一个交互式 shell。","s":"2. 工作原理","u":"/en/docs/note/os/chroot","h":"#2-工作原理","p":1497},{"i":1504,"t":"sudo chroot /path/to/new_root 此命令将切换根目录到 /path/to/new_root，并启动一个交互式 shell。","s":"3.1. 进入 chroot 环境","u":"/en/docs/note/os/chroot","h":"#31-进入-chroot-环境","p":1497},{"i":1506,"t":"sudo chroot /path/to/new_root /bin/bash 在 /path/to/new_root 目录中执行 /bin/bash，并进入一个新的环境。","s":"3.2. 在 chroot 环境中执行命令","u":"/en/docs/note/os/chroot","h":"#32-在-chroot-环境中执行命令","p":1497},{"i":1508,"t":"创建新的根目录 sudo mkdir -p /path/to/new_root 挂载必要的虚拟文件系统 有些系统文件，如 /proc，需要在 chroot 环境中挂载。 sudo mount -t proc /proc /path/to/new_root/proc sudo mount -t sysfs /sys /path/to/new_root/sys sudo mount -o bind /dev /path/to/new_root/dev sudo mount -o bind /dev/pts /path/to/new_root/dev/pts 挂载 /proc、/sys、/dev 和 /dev/pts 等目录是为了确保进程能够正确访问和使用这些虚拟文件系统，它们提供了重要的系统信息和设备接口。如果没有这些挂载，某些程序或命令可能会失效，因为它们依赖于这些目录中的文件来获取系统状态或与硬件交互。 /proc 是一个虚拟文件系统，提供有关系统进程、内核信息以及其他运行时信息的数据。在 chroot 环境中，如果没有挂载 /proc，很多程序和命令（如 ps、top、free 等）就无法正常工作，因为它们依赖于 /proc 中的信息来获取关于当前系统和进程的状态。 /sys 也是一个虚拟文件系统，它提供了关于系统硬件、内核参数、设备状态等的动态信息。许多设备驱动程序和系统服务依赖于 /sys 中的文件来进行硬件管理和系统配置。没有挂载 /sys，某些程序可能无法获取硬件信息或无法与设备进行交互。 例如： 系统的 CPU 核心数 网络接口的配置 电池状态（在笔记本电脑上） /dev 目录包含了所有设备文件（如硬盘、终端、USB 设备等）。这些设备文件是用户空间程序与硬件设备交互的接口。对于在 chroot 环境中运行的程序来说，访问设备文件是必需的。 例如： /dev/sda：硬盘设备文件 /dev/null：丢弃数据的设备 /dev/tty：终端设备 如果没有挂载 /dev，程序就无法访问硬件设备，也无法与终端、网络接口等进行交互。 /dev/pts 目录是用于管理伪终端设备（pty）。它存储了与终端相关的设备文件，如 /dev/pts/0 等。这对于支持多用户、多终端系统非常重要，尤其是对于运行交互式 shell 和命令行程序的环境。 例如，当你使用 ssh 或 tmux 登录到系统时，终端设备通常是通过 /dev/pts 来表示的。如果没有挂载 /dev/pts，你将无法启动或使用交互式终端（比如在 chroot 环境中执行 bash 或 sh 命令时）。 安装必要的库和命令 确保在新的根目录中安装了所需的库和程序。你可能需要复制或挂载一些文件，来使 chroot 环境能够正常运行。 sudo cp /bin/bash /path/to/new_root/bin/ sudo cp /lib/x86_64-linux-gnu/libtinfo.so.6 /path/to/new_root/lib/x86_64-linux-gnu/ sudo cp /lib/x86_64-linux-gnu/libc.so.6 /path/to/new_root/lib/x86_64-linux-gnu/ 进入 chroot 环境 sudo chroot /path/to/new_root /bin/bash 此时你已经进入了一个新的 chroot 环境，根目录为 /path/to/new_root。","s":"4. 创建一个基本的 chroot 环境","u":"/en/docs/note/os/chroot","h":"#4-创建一个基本的-chroot-环境","p":1497},{"i":1511,"t":"当系统无法启动或损坏时，可以使用 chroot 来进入系统并修复问题。例如，通过 chroot 进入系统的根文件系统，重新安装引导程序或修复损坏的文件。 sudo mount /dev/sda1 /mnt sudo mount --bind /dev /mnt/dev sudo mount --bind /proc /mnt/proc sudo mount --bind /sys /mnt/sys sudo chroot /mnt","s":"5.1. 系统恢复","u":"/en/docs/note/os/chroot","h":"#51-系统恢复","p":1497},{"i":1513,"t":"chroot 可以用来创建一个受限的环境，限制某个进程只能访问特定目录。它常用于容器化技术的基础实现，尽管现代容器使用更强大的工具（如 Docker）来提供隔离。","s":"5.2. 隔离环境（Sandbox）","u":"/en/docs/note/os/chroot","h":"#52-隔离环境sandbox","p":1497},{"i":1515,"t":"在构建特定版本的程序或测试时，可以创建一个干净的环境，避免系统中现有软件包的影响。","s":"5.3. 软件包编译","u":"/en/docs/note/os/chroot","h":"#53-软件包编译","p":1497},{"i":1517,"t":"如果需要运行一个特定版本的程序，可以使用 chroot 来隔离旧版本的库和二进制文件。","s":"5.4. 运行特定版本的应用程序","u":"/en/docs/note/os/chroot","h":"#54-运行特定版本的应用程序","p":1497},{"i":1519,"t":"权限问题 chroot 需要具有足够的权限，通常只有 root 用户才能执行此操作。 安全性 chroot 只是提供了一种简单的隔离方式，并不能完全防止进程逃逸或访问敏感信息。更强的安全措施（如使用 namespaces 或 containers）应该用于高安全性需求的环境。 文件系统依赖 某些进程需要特定的系统文件（如 /dev, /proc, /sys 等）。如果没有挂载这些虚拟文件系统，程序可能会崩溃或无法正常工作。 无法逃逸 chroot 本身并不能防止进程从 chroot 环境中逃逸，因此对于高安全性要求的场景（如沙箱、容器）不推荐单独依赖 chroot。","s":"6. 注意事项","u":"/en/docs/note/os/chroot","h":"#6-注意事项","p":1497},{"i":1521,"t":"chroot 是一个强大的工具，用于将进程隔离在特定的目录树中。它在系统恢复、隔离测试、构建环境等方面非常有用。然而，它并不是一个完美的安全隔离工具，现代容器化技术提供了更强的隔离和安全性。 你可以根据需求扩展文档的内容，如添加更详细的安全性讨论、使用示例等。","s":"7. 总结","u":"/en/docs/note/os/chroot","h":"#7-总结","p":1497},{"i":1524,"t":"Unix Domain Socket (UDS) 是一种进程间通信(IPC)机制，特点： 仅限同一主机上的进程通信 通过文件系统路径标识 比TCP本地环回更快(绕过网络协议栈) 通过文件权限控制访问 优势： 高性能：比localhost TCP快约2倍 安全性：文件系统权限控制 资源占用少：无端口冲突问题","s":"1. Unix Socket 简介","u":"/en/docs/note/golang/web_server_unix","h":"#1-unix-socket-简介","p":1522},{"i":1527,"t":"package main import ( \"fmt\" \"log\" \"net\" \"net/http\" \"os\" \"os/signal\" \"syscall\" ) func main() { // 配置 socketPath := \"/tmp/http.sock\" // 清理旧socket if err := os.RemoveAll(socketPath); err != nil { log.Fatalf(\"清理socket失败: %v\", err) } // 创建监听器 listener, err := net.Listen(\"unix\", socketPath) if err != nil { log.Fatalf(\"监听失败: %v\", err) } defer func() { listener.Close() os.Remove(socketPath) }() // 设置文件权限(可选) if err := os.Chmod(socketPath, 0770); err != nil { log.Printf(\"设置权限失败: %v\", err) } // 注册路由 mux := http.NewServeMux() mux.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) { fmt.Fprintf(w, \"Hello from Unix Socket HTTP Server!\\n\") }) mux.HandleFunc(\"/health\", func(w http.ResponseWriter, r *http.Request) { w.WriteHeader(http.StatusOK) w.Write([]byte(\"OK\")) }) // 配置服务器 server := &http.Server{ Handler: mux, } // 优雅关闭 setupGracefulShutdown(server) // 启动服务 log.Printf(\"Server listening on unix socket: %s\", socketPath) if err := server.Serve(listener); err != nil && err != http.ErrServerClosed { log.Fatalf(\"服务异常: %v\", err) } } func setupGracefulShutdown(server *http.Server) { sigChan := make(chan os.Signal, 1) signal.Notify(sigChan, os.Interrupt, syscall.SIGTERM) go func() { <-sigChan log.Println(\"接收到终止信号，关闭服务器...\") if err := server.Close(); err != nil { log.Printf(\"服务器关闭错误: %v\", err) } }() }","s":"2.1 基础实现","u":"/en/docs/note/golang/web_server_unix","h":"#21-基础实现","p":1522},{"i":1529,"t":"// 在http.Server配置中添加 server := &http.Server{ Handler: mux, ReadTimeout: 10 * time.Second, WriteTimeout: 10 * time.Second, IdleTimeout: 60 * time.Second, }","s":"2.2 高级配置","u":"/en/docs/note/golang/web_server_unix","h":"#22-高级配置","p":1522},{"i":1532,"t":"package main import ( \"log\" \"net\" \"net/http\" \"os\" \"os/signal\" \"syscall\" \"time\" \"github.com/gin-gonic/gin\" ) func main() { // 配置 socketPath := \"/tmp/gin.sock\" // 清理旧socket if err := os.RemoveAll(socketPath); err != nil { log.Fatalf(\"清理socket失败: %v\", err) } // 创建监听器 listener, err := net.Listen(\"unix\", socketPath) if err != nil { log.Fatalf(\"监听失败: %v\", err) } defer func() { listener.Close() os.Remove(socketPath) }() // 设置文件权限 if err := os.Chmod(socketPath, 0770); err != nil { log.Printf(\"设置权限失败: %v\", err) } // 初始化Gin router := gin.New() // 中间件 router.Use(gin.Logger()) router.Use(gin.Recovery()) // 路由 router.GET(\"/\", func(c *gin.Context) { c.String(http.StatusOK, \"Hello from Gin Unix Socket Server!\") }) router.GET(\"/api/data\", func(c *gin.Context) { c.JSON(http.StatusOK, gin.H{ \"status\": \"success\", \"message\": \"Data retrieved\", \"data\": []string{\"item1\", \"item2\", \"item3\"}, }) }) // 配置服务器 server := &http.Server{ Handler: router, ReadTimeout: 10 * time.Second, WriteTimeout: 10 * time.Second, } // 优雅关闭 setupGracefulShutdown(server) // 启动服务 log.Printf(\"Gin server listening on unix socket: %s\", socketPath) if err := server.Serve(listener); err != nil && err != http.ErrServerClosed { log.Fatalf(\"服务异常: %v\", err) } }","s":"3.1 基础实现","u":"/en/docs/note/golang/web_server_unix","h":"#31-基础实现","p":1522},{"i":1534,"t":"// 在生产环境中使用ReleaseMode gin.SetMode(gin.ReleaseMode) // 添加健康检查端点 router.GET(\"/health\", func(c *gin.Context) { c.JSON(http.StatusOK, gin.H{\"status\": \"healthy\"}) }) // 添加监控中间件 router.Use(monitoringMiddleware()) func monitoringMiddleware() gin.HandlerFunc { return func(c *gin.Context) { start := time.Now() c.Next() duration := time.Since(start) log.Printf(\"请求 %s 耗时 %v\", c.Request.URL.Path, duration) } }","s":"3.2 生产环境建议","u":"/en/docs/note/golang/web_server_unix","h":"#32-生产环境建议","p":1522},{"i":1537,"t":"func main() { transport := &http.Transport{ Dial: func(_, _ string) (net.Conn, error) { return net.Dial(\"unix\", \"/tmp/http.sock\") }, } client := &http.Client{ Transport: transport, Timeout: 5 * time.Second, } resp, err := client.Get(\"http://unix/health\") if err != nil { log.Fatal(err) } defer resp.Body.Close() body, _ := io.ReadAll(resp.Body) fmt.Println(\"响应:\", string(body)) }","s":"4.1 标准HTTP客户端","u":"/en/docs/note/golang/web_server_unix","h":"#41-标准http客户端","p":1522},{"i":1539,"t":"func main() { conn, err := net.Dial(\"unix\", \"/tmp/http.sock\") if err != nil { log.Fatal(err) } defer conn.Close() // 构造HTTP请求 request := \"GET / HTTP/1.1\\r\\nHost: unix\\r\\n\\r\\n\" _, err = conn.Write([]byte(request)) if err != nil { log.Fatal(err) } // 读取响应 response, err := io.ReadAll(conn) if err != nil { log.Fatal(err) } fmt.Println(\"响应:\", string(response)) }","s":"4.2 通用Socket客户端","u":"/en/docs/note/golang/web_server_unix","h":"#42-通用socket客户端","p":1522},{"i":1541,"t":"连接池配置： transport := &http.Transport{ Dial: func(_, _ string) (net.Conn, error) { return net.Dial(\"unix\", socketPath) }, MaxIdleConns: 100, IdleConnTimeout: 90 * time.Second, TLSHandshakeTimeout: 10 * time.Second, } Gin性能优化： 使用gin.SetMode(gin.ReleaseMode) 避免在热路径中使用反射 使用c.AbortWithStatus()而不是return来终止请求 服务器配置： 适当调整ReadTimeout和WriteTimeout 考虑使用http.TimeoutHandler添加全局超时 监控指标： 添加Prometheus或OpenTelemetry监控 记录请求延迟和错误率","s":"5. 性能优化建议","u":"/en/docs/note/golang/web_server_unix","h":"#5-性能优化建议","p":1522},{"i":1543,"t":"Q1: 如何调试Unix Socket通信问题？ A1: 使用nc -U /tmp/your.sock测试基本连接 检查socket文件权限ls -l /tmp/your.sock 使用strace跟踪系统调用 Q2: 如何处理\"address already in use\"错误？ A2: 确保程序退出时删除socket文件 添加错误处理自动清理旧socket 使用lsof -U | grep your.sock查找占用进程 Q3: 如何限制客户端访问？ A3: 设置严格的文件权限(如0700) 使用系统组权限控制 在应用层添加认证 Q4: Unix Socket与TCP性能对比如何？ A4: 延迟降低约30-50% 吞吐量提高约20-30% CPU使用率降低约10-20%","s":"6. 常见问题解答","u":"/en/docs/note/golang/web_server_unix","h":"#6-常见问题解答","p":1522},{"i":1545,"t":"容器间通信： Docker/Kubernetes环境中容器间高效通信 通过共享volume挂载socket文件 反向代理集成： server { listen 8080; location / { proxy_pass http://unix:/tmp/http.sock; } } 微服务架构： 同一主机上的服务间通信 替代gRPC的TCP传输 特权服务： 仅限本机访问的管理接口 高安全性要求的内部通信 高性能API网关： 网关与后端服务间的高速通道 减少网络协议栈开销","s":"7. 实际应用场景","u":"/en/docs/note/golang/web_server_unix","h":"#7-实际应用场景","p":1522},{"i":1547,"t":"Unix Socket为Golang服务提供了高性能的本地通信方案。无论是使用标准库还是Gin框架，实现起来都相对简单。关键注意点包括： 妥善管理socket文件生命周期 设置适当的文件权限 客户端使用正确的连接方式 生产环境添加适当的监控和日志 通过本培训文档，您应该能够： 理解Unix Socket的工作原理 实现基于Unix Socket的HTTP服务 编写对应的客户端代码 部署生产级Unix Socket服务 诊断常见问题","s":"总结","u":"/en/docs/note/golang/web_server_unix","h":"#总结","p":1522},{"i":1550,"t":"GDB（GNU Debugger）是一个强大的调试工具，广泛用于调试C、C++、Fortran等编程语言编写的程序。GDB可以在程序运行时执行控制，帮助开发人员诊断程序中的错误。","s":"1. GDB 概述","u":"/en/docs/note/os/debug/gdb","h":"#1-gdb-概述","p":1548},{"i":1552,"t":"GDB 是由 Free Software Foundation 开发和维护的，最早由 Richard Stallman 和 Roland H. Pesch 在 1986 年开始设计。如今，GDB已经成为Linux及其他操作系统上最广泛使用的调试工具。","s":"1.1 GDB的历史和发展","u":"/en/docs/note/os/debug/gdb","h":"#11-gdb的历史和发展","p":1548},{"i":1554,"t":"软件开发：用于程序调试和性能优化 嵌入式开发：调试在嵌入式系统上运行的应用程序 远程调试：通过网络调试远程机器上的程序 多线程调试：在多线程环境下调试并发问题","s":"1.2 GDB应用场景","u":"/en/docs/note/os/debug/gdb","h":"#12-gdb应用场景","p":1548},{"i":1557,"t":"yum install gdb","s":"2.1 使用包管理器安装","u":"/en/docs/note/os/debug/gdb","h":"#21-使用包管理器安装","p":1548},{"i":1559,"t":"（TODO：添加源码编译详细步骤）","s":"2.2 源码编译安装","u":"/en/docs/note/os/debug/gdb","h":"#22-源码编译安装","p":1548},{"i":1562,"t":"# 启动 GDB 调试指定程序 $ gdb <your_program> # 启动程序执行 `run`后面的参数会像进程正常执行一样传递给进程。通常，我们会在设置好断点之后。执行此命令 (gdb) run","s":"3.1 启动GDB","u":"/en/docs/note/os/debug/gdb","h":"#31-启动gdb","p":1548},{"i":1564,"t":"# 方法1：直接传参 (gdb) run arg1 arg2 arg3 # 方法2：预设参数 (gdb) set args arg1 arg2 arg3 (gdb) run # 方法3：修改参数 (gdb) set args new_arg1 new_arg2","s":"3.2 调试带参数的程序","u":"/en/docs/note/os/debug/gdb","h":"#32-调试带参数的程序","p":1548},{"i":1566,"t":"# 可以直接-p 指定pid $ gdb -p pid # 也可以启动gdb 后，attach pid $ gdb -q (gdb) <pid>","s":"3.3 调试运行中的进程","u":"/en/docs/note/os/debug/gdb","h":"#33-调试运行中的进程","p":1548},{"i":1568,"t":"命令 功能描述 b/break 设置断点 r/run 开始程序运行 start 在main函数开始前停止 c/continue 继续执行直到下一个断点 n/next 单步执行(不进入函数) s/step 单步执行(进入函数) p/print 打印变量的值 l/list 查看源代码 bt/backtrace 显示调用栈 until location 执行到指定位置 fini/finish 执行完成当前函数 q/quit 退出gdb","s":"3.4 基本调试命令","u":"/en/docs/note/os/debug/gdb","h":"#34-基本调试命令","p":1548},{"i":1570,"t":"通过 break 命令在特定位置设置断点（如函数或代码行）。 (gdb) break func_name # 设置函数断点 (gdb) break file.c:line # 设置文件行断点 (gdb) break file:line if condition # 条件断点 (gdb) info breakpoints # 查看断点信息 (gdb) delete <num> # 删除指定断点","s":"3.5 断点管理","u":"/en/docs/note/os/debug/gdb","h":"#35-断点管理","p":1548},{"i":1572,"t":"(gdb) print var # 打印变量 (gdb) info locals # 显示局部变量 (gdb) info args # 显示函数参数 (gdb) set var = value # 修改变量值 (gdb) x/10x <addr> # 查看内存内容（16进制）","s":"3.6 变量与内存操作","u":"/en/docs/note/os/debug/gdb","h":"#36-变量与内存操作","p":1548},{"i":1574,"t":"(gdb) info registers # 查看所有寄存器的值 (gdb) print $eax # 查看特定寄存器（如 x86 架构） (gdb) p/x $eax # 十六进制显示寄存器值 (gdb) set $eax = 0x10 # 修改寄存器值 # 特殊寄存器 (gdb) info registers float # 浮点寄存器 (gdb) info registers vector # 向量寄存器 (gdb) info registers eflags # 标志寄存器 (gdb) x/i $pc # 查看栈指针指向的内存 (gdb) x/i $pc # 反汇编当前指令 (gdb) stepi # 单步执行一条汇编指令 使用 $<寄存器名> 可以访问 CPU 寄存器；$pc 表示程序计数器，$sp 表示栈指针，$fp 为帧指针。 在GDB内部，$pc 实际上是一个宏，会根据当前调试目标的架构自动映射到正确的寄存器： x86-64 → 映射到 $rip ARM → 映射到 $r15 或 $pc MIPS → 映射到 $pc 示例 $ # gdb -q ./a.out Reading symbols from ./a.out... (gdb) l 1 #include <signal.h> 2 #include <stdlib.h> 3 #include <stdio.h> 4 5 int main() { 6 int a; 7 a=10; 8 printf(\"Hello World\\n\"); 9 printf(\"%d\\n\",a); 10 return 0; (gdb) b 8 Breakpoint 1 at 0x401145: file main.c, line 8. (gdb) r Starting program: /home/a.out [Thread debugging using libthread_db enabled] Breakpoint 1, main () at main.c:8 8 printf(\"Hello World\\n\"); (gdb) p a $1 = 10 (gdb) info locals a = 10 (gdb) set var a=11 (gdb) p a $2 = 11 (gdb) p &a $3 = (int *) 0x7fffffffe23c (gdb) x 0x7fffffffe23c 0x7fffffffe23c: 0x0000000b (gdb) x/10x 0x7fffffffe23c 0x7fffffffe23c: 0x0000000b 0x00000001 0x00000000 0xf7c29590 0x7fffffffe24c: 0x00007fff 0x00000000 0x00000000 0x00401136 0x7fffffffe25c: 0x00000000 0x00000000 (gdb) n Hello World 9 printf(\"%d\\n\",a); (gdb) 11 10 return 0; (gdb)","s":"3.7 寄存器操作","u":"/en/docs/note/os/debug/gdb","h":"#37-寄存器操作","p":1548},{"i":1577,"t":"# 使用 `info inferior` 命令查看当前程序中的所有进程。 (gdb) info inferior # 使用 `inferior` 命令切换不同进程进行调试 (gdb) inferior <process_id> # `follow-fork-mode` 参数用来设置gdb跟踪父进程还是子进程 # `set follow-fork-mode parent` 在fork之后，调试父进程，这也是gdb的默认值 (gdb) set follow-fork-mode child/parent # gdb是否控制未调试的进程 # `set detach-on-fork on` gdb默认值，gdb不控制未调试的进 (gdb) set detach-on-fork on/off gdb 默认只会跟踪父进程。当断点处在子进程路径时，程序可能会直接执行结束退出。 此时，可以通过设置 set follow-fork-mode child 再执行 run运行调试。 也可以 break fork 断点到fork时。","s":"4.1 多进程调试","u":"/en/docs/note/os/debug/gdb","h":"#41-多进程调试","p":1548},{"i":1579,"t":"# 使用 `info threads` 命令查看当前程序中的所有线程。 (gdb) info threads # 使用 `thread` 命令切换到特定线程。 (gdb) thread thread_id (gdb) break location thread thread_id","s":"4.2 多线程调试","u":"/en/docs/note/os/debug/gdb","h":"#42-多线程调试","p":1548},{"i":1581,"t":"# 标记观察断点，监控数值更改（wirte） (gdb) watch expression or variable # 标记观察断点，监控数值读取（read） (gdb) rwatch expression or variable # 标记观察断点。同时监控数据读取与更改（read and write） (gdb) awatch expression or variable 示例 $ gdb -q a.out Reading symbols from a.out...done. (gdb) l 1 #include <stdio.h> 2 3 int get_sum(int n) { 4 int sum = 0, i; 5 for (i = 0; i < n; i++) { 6 sum += i; 7 } 8 return sum; 9 } 10 (gdb) b 6 Breakpoint 1 at 0x4005ad: file main.c, line 6. (gdb) r Starting program: /tmp/a.out Missing separate debuginfos, use: yum debuginfo-install glibc-2.28-164.el8.x86_64 Breakpoint 1, get_sum (n=100) at main.c:6 6 sum += i; (gdb) watch i==99 Hardware watchpoint 2: i==99 (gdb) clear 6 Deleted breakpoint 1 (gdb) c Continuing. Hardware watchpoint 2: i==99 Old value = 0 New value = 1 0x00000000004005b7 in get_sum (n=100) at main.c:5 5 for (i = 0; i < n; i++) { (gdb) p i $1 = 99 (gdb) p sum $2 = 4851","s":"4.3 观察点(Watchpoints)","u":"/en/docs/note/os/debug/gdb","h":"#43-观察点watchpoints","p":1548},{"i":1583,"t":"参考链接 # 用捕捉断点监控某一事件的发生，等同于在程序中该事件发生的位置打普通断点。 (gdb) catch event 普通断点作用于程序中的某一行，当程序运行至此行时停止执行，观察断点作用于某一变量或表达式，当该变量（表达式）的值发生改变时，程序暂停。而捕捉断点的作用是，监控程序中某一事件的发生，例如程序发生某种异常时、某一动态库被加载时等等，一旦目标时间发生，则程序停止执行。","s":"4.4 捕获点(Catchpoints)","u":"/en/docs/note/os/debug/gdb","h":"#44-捕获点catchpoints","p":1548},{"i":1585,"t":"# 使用 `source` 命令执行 GDB 脚本，实现自动化调试。 (gdb) source <script_file>","s":"4.5 自动化调试","u":"/en/docs/note/os/debug/gdb","h":"#45-自动化调试","p":1548},{"i":1587,"t":"# GDB支持与远程系统调试，使用 `target remote` 命令连接远程程序。 (gdb) target remote <hostname>:<port>","s":"4.6 远程调试","u":"/en/docs/note/os/debug/gdb","h":"#46-远程调试","p":1548},{"i":1589,"t":"f 切换 (gdb) bt #0 add (low=1, high=10) at test1.c:5 #1 0x00000000004005e6 in main (argc=1, argv=0x7fffffffe408) at test1.c:12 (gdb) frame 1 #1 0x00000000004005e6 in main (argc=1, argv=0x7fffffffe408) at test1.c:12 12 result[0] = add(1,10); (gdb) f 1 #1 0x00000000004005e6 in main (argc=1, argv=0x7fffffffe408) at test1.c:12 12 result[0] = add(1,10); (gdb) i locals result = {-134224088, 32767, 0, 0}","s":"4.7 切换栈帧","u":"/en/docs/note/os/debug/gdb","h":"#47-切换栈帧","p":1548},{"i":1592,"t":"# -O0禁用优化，可以帮助调试代码 gcc -O0 -g program.c -o program","s":"5.1 编译时添加调试信息","u":"/en/docs/note/os/debug/gdb","h":"#51-编译时添加调试信息","p":1548},{"i":1594,"t":"# 拷贝elf中的调试信息到debug文件 objcopy --only-keep-debug program program.debug # 瘦身二进制程序 strip --strip-debug program","s":"5.2 分离调试信息","u":"/en/docs/note/os/debug/gdb","h":"#52-分离调试信息","p":1548},{"i":1596,"t":"运行时加载 (gdb) symbol-file program.debug 提前做好关联，无需运行时加载 $ objcopy --add-gnu-debuglink=program.debug program $ objdump -s -j .gnu_debuglink program program: file format elf64-x86-64 Contents of section .gnu_debuglink: 0000 70726f67 72616d2e 64656275 67000000 program.debug... 0010 cb07fc34","s":"5.3 加载调试信息","u":"/en/docs/note/os/debug/gdb","h":"#53-加载调试信息","p":1548},{"i":1599,"t":"(gdb) run (gdb) bt","s":"6.1 段错误调试","u":"/en/docs/note/os/debug/gdb","h":"#61-段错误调试","p":1548},{"i":1601,"t":"（结合valgrind使用）","s":"6.2 内存泄漏检查","u":"/en/docs/note/os/debug/gdb","h":"#62-内存泄漏检查","p":1548},{"i":1603,"t":"（多线程调试示例）","s":"6.3 死锁检测","u":"/en/docs/note/os/debug/gdb","h":"#63-死锁检测","p":1548},{"i":1606,"t":"GDB通过ptrace系统调用实现进程控制： long ptrace(enum __ptrace_request request, pid_t pid, void *addr, void *data);","s":"7.1 ptrace系统调用","u":"/en/docs/note/os/debug/gdb","h":"#71-ptrace系统调用","p":1548},{"i":1608,"t":"将断点处指令替换为int 3 保存原始指令 触发SIGTRAP信号","s":"7.2 断点实现原理","u":"/en/docs/note/os/debug/gdb","h":"#72-断点实现原理","p":1548},{"i":1610,"t":"GNU GDB官方文档 《The Art of Debugging with GDB, DDD, and Eclipse》 GDB Cheat Sheet","s":"8. 参考资源","u":"/en/docs/note/os/debug/gdb","h":"#8-参考资源","p":1548},{"i":1613,"t":"golang.org/x/sys/unix 是 Go 官方提供的一个扩展包，专门用于执行 Unix/Linux 相关的系统调用。它是 syscall 包的替代方案，提供更丰富的功能，并保持持续维护和更新。","s":"1. 简介","u":"/en/docs/note/golang/syscall","h":"#1-简介","p":1611},{"i":1615,"t":"sys 不是 Go 标准库的一部分，需要手动安装： go get golang.org/x/sys/unix","s":"2. 安装","u":"/en/docs/note/golang/syscall","h":"#2-安装","p":1611},{"i":1618,"t":"golang.org/x/sys/unix 是 Go 官方提供的一个扩展包，专门用于执行 Unix/Linux 相关的系统调用。它是 syscall 包的替代方案，提供更丰富的功能，并保持持续维护和更新。","s":"1. 简介","u":"/en/docs/note/golang/syscall","h":"#1-简介-1","p":1611},{"i":1620,"t":"sys 不是 Go 标准库的一部分，需要手动安装： go get golang.org/x/sys/unix","s":"2. 安装","u":"/en/docs/note/golang/syscall","h":"#2-安装-1","p":1611},{"i":1623,"t":"package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { pid := unix.Getpid() fmt.Println(\"当前进程 ID:\", pid) ppid := unix.Getppid() fmt.Println(\"父进程 ID:\", ppid) }","s":"3.1 获取进程 ID","u":"/en/docs/note/golang/syscall","h":"#31-获取进程-id","p":1611},{"i":1625,"t":"3.2.1 使用 unix.Open 读取文件​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { fd, err := unix.Open(\"test.txt\", unix.O_RDONLY, 0) if err != nil { fmt.Println(\"打开文件失败:\", err) return } defer unix.Close(fd) var buf [100]byte n, err := unix.Read(fd, buf[:]) if err != nil { fmt.Println(\"读取文件失败:\", err) return } fmt.Println(\"文件内容:\", string(buf[:n])) }","s":"3.2 文件操作","u":"/en/docs/note/golang/syscall","h":"#32-文件操作","p":1611},{"i":1627,"t":"3.3.1 创建子进程​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { binary := \"/bin/ls\" args := []string{\"ls\", \"-l\"} err := unix.Exec(binary, args, nil) if err != nil { fmt.Println(\"执行失败:\", err) } }","s":"3.3 进程控制","u":"/en/docs/note/golang/syscall","h":"#33-进程控制","p":1611},{"i":1629,"t":"3.4.1 发送信号​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" \"time\" ) func main() { pid := unix.Getpid() fmt.Println(\"当前进程 ID:\", pid) go func() { time.Sleep(2 * time.Second) unix.Kill(pid, unix.SIGTERM) }() }","s":"3.4 信号处理","u":"/en/docs/note/golang/syscall","h":"#34-信号处理","p":1611},{"i":1631,"t":"3.5.1 mmap 映射文件​ package main import ( \"fmt\" \"os\" \"golang.org/x/sys/unix\" \"unsafe\" ) func main() { file, err := os.OpenFile(\"test.txt\", os.O_RDWR, 0666) if err != nil { fmt.Println(\"打开文件失败:\", err) return } defer file.Close() fi, _ := file.Stat() size := fi.Size() data, err := unix.Mmap(int(file.Fd()), 0, int(size), unix.PROT_READ, unix.MAP_SHARED) if err != nil { fmt.Println(\"mmap 失败:\", err) return } fmt.Println(\"文件内容:\", *(*string)(unsafe.Pointer(&data))) }","s":"3.5 内存管理","u":"/en/docs/note/golang/syscall","h":"#35-内存管理","p":1611},{"i":1633,"t":"功能 syscall (已废弃) x/sys/unix (推荐) 进程管理 ✅ ✅ 文件操作 ✅ ✅ 信号处理 ✅ ✅ 兼容性 ❌ 仅限 Linux/macOS/Windows ✅ 跨平台更好 未来维护 ❌ 停止维护 ✅ 推荐使用 示例（x/sys/unix 替代 syscall）： import \"golang.org/x/sys/unix\" func main() { unix.Getpid() // 替代 syscall.Getpid() }","s":"4. unix 作为 syscall 的替代方案","u":"/en/docs/note/golang/syscall","h":"#4-unix-作为-syscall-的替代方案","p":1611},{"i":1635,"t":"syscall 适用于低级系统调用，但已被废弃。 建议使用 golang.org/x/sys/unix，因为 syscall 不再维护。 适用于需要直接操作系统资源（如 mmap、fork、exec、signal）。 不适用于一般应用开发，Go 提供的标准库 os、io、net 足够大多数场景。","s":"5. 结论","u":"/en/docs/note/golang/syscall","h":"#5-结论","p":1611},{"i":1637,"t":"官方文档 GitHub 代码库","s":"6. 参考","u":"/en/docs/note/golang/syscall","h":"#6-参考","p":1611},{"i":1640,"t":"package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { pid := unix.Getpid() fmt.Println(\"当前进程 ID:\", pid) ppid := unix.Getppid() fmt.Println(\"父进程 ID:\", ppid) }","s":"3.1 获取进程 ID","u":"/en/docs/note/golang/syscall","h":"#31-获取进程-id-1","p":1611},{"i":1642,"t":"3.2.1 使用 unix.Open 读取文件​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { fd, err := unix.Open(\"test.txt\", unix.O_RDONLY, 0) if err != nil { fmt.Println(\"打开文件失败:\", err) return } defer unix.Close(fd) var buf [100]byte n, err := unix.Read(fd, buf[:]) if err != nil { fmt.Println(\"读取文件失败:\", err) return } fmt.Println(\"文件内容:\", string(buf[:n])) }","s":"3.2 文件操作","u":"/en/docs/note/golang/syscall","h":"#32-文件操作-1","p":1611},{"i":1644,"t":"3.3.1 创建子进程​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" ) func main() { binary := \"/bin/ls\" args := []string{\"ls\", \"-l\"} err := unix.Exec(binary, args, nil) if err != nil { fmt.Println(\"执行失败:\", err) } }","s":"3.3 进程控制","u":"/en/docs/note/golang/syscall","h":"#33-进程控制-1","p":1611},{"i":1646,"t":"3.4.1 发送信号​ package main import ( \"fmt\" \"golang.org/x/sys/unix\" \"time\" ) func main() { pid := unix.Getpid() fmt.Println(\"当前进程 ID:\", pid) go func() { time.Sleep(2 * time.Second) unix.Kill(pid, unix.SIGTERM) }() }","s":"3.4 信号处理","u":"/en/docs/note/golang/syscall","h":"#34-信号处理-1","p":1611},{"i":1648,"t":"3.5.1 mmap 映射文件​ package main import ( \"fmt\" \"os\" \"golang.org/x/sys/unix\" \"unsafe\" ) func main() { file, err := os.OpenFile(\"test.txt\", os.O_RDWR, 0666) if err != nil { fmt.Println(\"打开文件失败:\", err) return } defer file.Close() fi, _ := file.Stat() size := fi.Size() data, err := unix.Mmap(int(file.Fd()), 0, int(size), unix.PROT_READ, unix.MAP_SHARED) if err != nil { fmt.Println(\"mmap 失败:\", err) return } fmt.Println(\"文件内容:\", *(*string)(unsafe.Pointer(&data))) }","s":"3.5 内存管理","u":"/en/docs/note/golang/syscall","h":"#35-内存管理-1","p":1611},{"i":1650,"t":"功能 syscall (已废弃) x/sys/unix (推荐) 进程管理 ✅ ✅ 文件操作 ✅ ✅ 信号处理 ✅ ✅ 兼容性 ❌ 仅限 Linux/macOS/Windows ✅ 跨平台更好 未来维护 ❌ 停止维护 ✅ 推荐使用 示例（x/sys/unix 替代 syscall）： import \"golang.org/x/sys/unix\" func main() { unix.Getpid() // 替代 syscall.Getpid() }","s":"4. unix 作为 syscall 的替代方案","u":"/en/docs/note/golang/syscall","h":"#4-unix-作为-syscall-的替代方案-1","p":1611},{"i":1652,"t":"syscall 适用于低级系统调用，但已被废弃。 建议使用 golang.org/x/sys/unix，因为 syscall 不再维护。 适用于需要直接操作系统资源（如 mmap、fork、exec、signal）。 不适用于一般应用开发，Go 提供的标准库 os、io、net 足够大多数场景。","s":"5. 结论","u":"/en/docs/note/golang/syscall","h":"#5-结论-1","p":1611},{"i":1654,"t":"官方文档 GitHub 代码库","s":"6. 参考","u":"/en/docs/note/golang/syscall","h":"#6-参考-1","p":1611},{"i":1656,"t":"孤儿进程： 父亲先死，儿子被1号收养。 僵尸进程：儿子先死，父亲不管不顾。","s":"僵尸进程","u":"/en/docs/note/os/zombie","h":"","p":1655},{"i":1658,"t":"top查看是否有僵尸进程 通过命令查询僵尸进程在哪 ps -A -ostat,ppid,pid,cmd | grep -e '^[Zz]' # 命令注解： # -A 参数列出所有进程 # -o 自定义输出字段 我们设定显示字段为 stat（状态）, ppid（进程父id）, pid(进程id)，cmd（命令）这四个参数 # 因为状态为 z或者Z的进程为僵尸进程，所以我们使用grep抓取stat状态为zZ进程","s":"查杀僵尸进程","u":"/en/docs/note/os/zombie","h":"#查杀僵尸进程","p":1655},{"i":1661,"t":"通过sleep时间，控制父亲先死，此时儿子被1号孤儿院收养。可以通过 ps查看，a.out的父进程变成了 1 #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <sys/wait.h> int main() { pid_t pid = fork(); // 创建子进程 if (pid < 0) { // fork失败 perror(\"fork failed\"); exit(EXIT_FAILURE); } else if (pid == 0) { // 子进程 printf(\"I am the child process with PID %d\\n\", getpid()); sleep(2000); // 让子进程运行一段时间 ，此时父亲已死。 printf(\"Child process exiting...\\n\"); exit(EXIT_SUCCESS); // 子进程退出 } else { // 父进程直接退出 printf(\"I am the parent process with PID %d and my child has PID %d\\n\", getpid(), pid); } return 0; }","s":"孤儿进程","u":"/en/docs/note/os/zombie","h":"#孤儿进程","p":1655},{"i":1662,"t":"通过sleep时间，控制子进程先死。但是，父进程不回收子进程。 #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <sys/wait.h> int main() { pid_t pid = fork(); // 创建子进程 if (pid < 0) { // fork失败 perror(\"fork failed\"); exit(EXIT_FAILURE); } else if (pid == 0) { // 子进程 printf(\"I am the child process with PID %d\\n\", getpid()); sleep(2); // 让子进程运行一段时间 printf(\"Child process exiting...\\n\"); exit(EXIT_SUCCESS); // 子进程退出 } else { // 父进程 printf(\"I am the parent process with PID %d and my child has PID %d\\n\", getpid(), pid); // 注意：这里父进程没有调用wait()或waitpid()，所以子进程会变成僵尸进程 sleep(10000); } return 0; } 查询僵尸进程 $ ps -A -ostat,ppid,pid,cmd | grep -e '^[Zz]' Z+ 933981 933982 [a.out] <defunct> $ ps -ef | grep a.out root 933981 933844 0 11:11 pts/4 00:00:00 ./a.out root 933982 933981 0 11:11 pts/4 00:00:00 [a.out] <defunct> root 934096 933897 0 11:13 pts/5 00:00:00 grep --color=auto a.out","s":"僵尸进程","u":"/en/docs/note/os/zombie","h":"#僵尸进程-1","p":1655},{"i":1664,"t":"#include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <signal.h> #include <sys/wait.h> // SIGCHLD 信号处理函数 void sigchld_handler(int signum) { // 使用 waitpid 非阻塞回收所有已终止的子进程 while (waitpid(-1, NULL, WNOHANG) > 0); } int main() { // 设置 SIGCHLD 信号处理函数 struct sigaction sa; sa.sa_handler = sigchld_handler; sigemptyset(&sa.sa_mask); sa.sa_flags = SA_RESTART; // 自动重启被中断的系统调用 if (sigaction(SIGCHLD, &sa, NULL) == -1) { perror(\"sigaction\"); exit(EXIT_FAILURE); } // 创建子进程 pid_t pid = fork(); if (pid < 0) { perror(\"fork\"); exit(EXIT_FAILURE); } if (pid == 0) { // 子进程 printf(\"子进程: PID = %d\\n\", getpid()); sleep(10); // 模拟子进程执行一些任务 printf(\"子进程结束: PID = %d\\n\", getpid()); exit(EXIT_SUCCESS); } else { // 父进程 printf(\"父进程: PID = %d, 子进程 PID = %d\\n\", getpid(), pid); // 父进程继续执行其他任务 for (int i = 0; i < 5; ++i) { printf(\"父进程正在工作...\\n\"); sleep(10000) } // 父进程结束前的收尾工作 printf(\"父进程结束: PID = %d\\n\", getpid()); } return 0; }","s":"回收儿子","u":"/en/docs/note/os/zombie","h":"#回收儿子","p":1655}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/837",[0,0.17]],["t/839",[0,0.17]],["t/841",[0,0.17]],["t/843",[1,6.944,2,10.136,3,10.136,4,7.745]],["t/845",[5,7.746,6,8.054,7,8.054,8,7.307,9,8.054,10,8.188,11,3.911,12,8.054,13,8.054,14,8.054,15,7.307,16,7.307,17,6.815,18,3.911,19,8.054,20,8.054]],["t/847",[1,3.627,10,4.479,18,2.571,21,3.424,22,5.294,23,4.803,24,4.479,25,5.294,26,5.294,27,5.294,28,5.294,29,5.294,30,4.045,31,5.294,32,8.476,33,5.294,34,4.479,35,2.126,36,5.294,37,4.803,38,5.294,39,5.294,40,4.045,41,4.803,42,5.294,43,4.803,44,5.294,45,5.294,46,5.294,47,6.235,48,5.294,49,4.479,50,5.294,51,4.045,52,4.803,53,4.803,54,5.294,55,5.294,56,2.534,57,2.989,58,4.238,59,5.294,60,4.238,61,4.803,62,5.294,63,8.476,64,8.476,65,4.238,66,5.294,67,7.368,68,4.479,69,5.294,70,5.294,71,4.803,72,2.103,73,3.747,74,3.52,75,4.045,76,5.294,77,3.747,78,2.829,79,5.294,80,3.424,81,5.294,82,4.803,83,5.294,84,2.691,85,5.294,86,4.479,87,5.294,88,1.694,89,5.294,90,5.294,91,5.294,92,3.256,93,5.294,94,4.238,95,4.803,96,5.294]],["t/849",[5,7.658,8,9.477,30,5.143,74,4.475,88,2.154,97,6.731,98,6.107,99,5.696,100,6.731,101,3.269,102,6.731,103,4.353,104,5.389,105,6.107,106,6.731,107,6.731,108,6.731,109,6.731,110,6.731,111,6.731,112,6.731,113,6.771,114,6.107,115,6.731,116,5.696,117,6.731,118,6.731,119,6.107,120,6.731,121,6.107,122,6.731,123,6.107,124,6.731,125,6.731,126,6.107,127,6.731]],["t/851",[4,2.4,5,2.514,10,2.658,21,2.031,30,3.812,37,2.85,41,2.85,47,2.658,49,4.221,52,6.412,53,6.412,56,2.388,61,4.526,74,3.317,82,2.85,84,3.155,88,1.005,95,2.85,98,2.85,104,2.514,121,4.526,123,2.85,128,2.658,129,3.141,130,8.208,131,7.068,132,3.141,133,3.141,134,6.412,135,2.85,136,3.141,137,3.141,138,3.141,139,3.141,140,3.141,141,3.141,142,3.141,143,3.141,144,2.4,145,3.141,146,3.141,147,3.141,148,4.526,149,3.141,150,3.141,151,3.141,152,2.4,153,3.141,154,3.141,155,3.141,156,3.141,157,3.141,158,3.141,159,3.141,160,2.658,161,3.141,162,3.141,163,3.141,164,3.141,165,4.989,166,2.658,167,2.658,168,3.141,169,3.141,170,3.141,171,3.141,172,3.141,173,2.4,174,3.141,175,3.141,176,3.141,177,3.141,178,3.141,179,3.141,180,3.141,181,4.989,182,6.206,183,3.141,184,2.658,185,3.141,186,4.989,187,3.317,188,2.658,189,2.85,190,3.141,191,3.141,192,3.141,193,2.152,194,3.141,195,3.141,196,4.989,197,3.141,198,4.989,199,2.088,200,3.141,201,3.141,202,3.141,203,3.141,204,3.812,205,3.141,206,3.141,207,2.152,208,3.141,209,3.141,210,3.141,211,4.989,212,2.85,213,3.141,214,3.141,215,2.4,216,3.141,217,4.526,218,5.63,219,3.141,220,3.141,221,3.141,222,3.141,223,3.141,224,3.141,225,2.658,226,3.141,227,4.989,228,2.658,229,3.141,230,3.141,231,3.141,232,4.989,233,3.141,234,3.141,235,3.141,236,3.141,237,2.031,238,3.141,239,3.141,240,2.305,241,3.141,242,3.141,243,3.141,244,2.85,245,3.141,246,4.221,247,2.85,248,2.658,249,3.141,250,3.141,251,3.141,252,4.989,253,3.141,254,2.85,255,2.4,256,3.141,257,3.141,258,3.141,259,3.141,260,3.141,261,4.526,262,3.141,263,2.514,264,3.141,265,2.85,266,1.888,267,3.141,268,3.141,269,3.141,270,4.221,271,3.141,272,3.141,273,3.141,274,3.141,275,1.337,276,3.141,277,2.658,278,3.141,279,3.141,280,3.141,281,3.141,282,3.141,283,2.85,284,2.85,285,3.141]],["t/853",[1,4.212,30,4.698,47,5.203,56,2.943,74,4.088,84,3.126,134,8.306,240,4.512,286,6.149,287,6.149,288,4.088,289,6.149,290,8.158,291,6.149,292,9.155,293,6.149,294,6.149,295,6.149,296,6.149,297,9.751,298,5.141,299,6.149,300,4.212,301,8.158,302,6.149,303,6.149,304,6.149,305,5.579,306,4.922,307,6.149,308,4.512,309,3.616,310,6.149,311,6.149,312,5.579,313,6.149,314,6.149,315,6.149,316,6.149,317,4.922,318,5.579,319,6.149,320,2.862,321,3.23,322,6.149,323,6.149,324,6.149,325,6.149,326,6.149]],["t/857",[0,0.145,327,3.576,328,6.864,329,7.715,330,6.463,331,8.503,332,8.503]],["t/859",[0,0.146,60,6.862,328,5.543,333,2.981,334,2.433,335,4.225,336,3.405,337,6.55,338,4.502]],["t/861",[0,0.172,339,8.637]],["t/864",[0,0.145,88,2.721,321,4.466,336,3.378,340,9.994,341,5.249,342,3.904,343,7.195]],["t/866",[0,0.162]],["t/868",[0,0.17,344,4.673]],["t/871",[0,0.148,207,5.968,345,3.001,346,7.904,347,3.847,348,3.847,349,7.904]],["t/873",[0,0.152]],["t/875",[0,0.17,342,3.67,348,3.53,350,4.604,351,5.315,352,6.764]],["t/878",[333,3.029,334,2.472,341,5.324,346,7.904,353,5.49,354,3.538,355,5.792]],["t/880",[0,0.162]],["t/882",[0,0.147,341,4.539,354,4.098,356,6.603,357,7.84,358,6.918,359,8.641]],["t/884",[0,0.173,344,4.795]],["t/887",[360,5.188,361,6.882,362,5.539,363,8.171]],["t/889",[0,0.159]],["t/891",[0,0.168,364,5.92]],["t/894",[75,7.709,88,2.765,361,6.603,365,6.603,366,8.641,367,6.918,368,7.312,369,6.918]],["t/896",[0,0.152]],["t/898",[0,0.173,344,4.626,361,6.38,363,7.575,365,6.38,370,8.35]],["t/901",[88,2.858,353,5.628,365,6.824,371,8.103,372,8.103]],["t/903",[0,0.152]],["t/905",[0,0.17,344,4.673]],["t/908",[352,7.557,353,5.628,373,8.931,374,8.103,375,8.103]],["t/910",[0,0.152]],["t/912",[0,0.17,344,4.6]],["t/915",[0,0.126,88,2.765,353,5.446,365,6.603,372,9.153,375,7.84,376,8.641,377,8.641]],["t/917",[0,0.159]],["t/919",[0,0.171,344,4.495]],["t/921",[5,3.855,23,6.253,35,1.934,49,4.075,56,2.305,58,3.855,68,4.075,80,3.114,88,2.205,105,4.369,113,3.408,114,4.369,135,7.972,148,6.253,189,4.369,244,4.369,247,4.369,261,4.369,309,2.832,321,4.228,333,1.674,360,2.774,378,4.815,379,4.815,380,4.815,381,4.815,382,4.815,383,3.114,384,4.815,385,4.815,386,4.815,387,4.815,388,4.815,389,4.815,390,4.815,391,4.815,392,4.815,393,4.815,394,4.815,395,4.815,396,4.815,397,4.815,398,6.892,399,4.815,400,4.815,401,9.298,402,4.815,403,4.815,404,4.815,405,4.815,406,4.815,407,4.815,408,4.815,409,6.253,410,3.68,411,4.815,412,4.815,413,4.075,414,3.408,415,4.815,416,3.114,417,4.815,418,4.815,419,4.815,420,3.408,421,3.408,422,3.208,423,6.892,424,4.815,425,4.815,426,4.815,427,6.253,428,4.815,429,4.815,430,4.369,431,4.815,432,4.815,433,4.815,434,4.815,435,4.815,436,4.815,437,2.962,438,3.855,439,4.815,440,4.815,441,4.815,442,4.815,443,4.815,444,4.369,445,4.815]],["t/924",[0,0.146,17,6.292,68,6.292,80,4.809,88,2.379,94,5.953,327,3.127,333,2.586,337,5.682,420,5.263,422,3.461,446,5.682,447,7.378,448,5.953,449,3.243,450,8.361,451,5.094,452,5.953,453,6.746,454,6.746,455,6.292,456,7.436,457,4.809,458,7.436,459,5.682]],["t/926",[78,3.839,80,4.647,84,4.586,263,5.752,333,2.498,336,2.854,342,3.299,343,6.08,422,4.199,446,5.49,447,7.222,448,5.752,449,3.934,451,4.922,460,6.519,461,5.617,462,7.222,463,6.08,464,5.752,465,5.086,466,5.272,467,5.422,468,5.272]],["t/929",[0,0.171,86,6.121,335,3.565,336,3.598,422,3.367,449,3.155,464,5.791,465,5.12,466,5.308,469,4.348,470,4.559,471,6.563,472,5.12]],["t/931",[0,0.169,336,3.33,356,4.896,422,4.348,449,2.794,461,4.826,465,5.933,466,6.151,469,3.851,470,4.038,473,4.702,474,4.733,475,5.422,476,4.479,477,3.31,478,4.896,479,4.896,480,3.851,481,4.535,482,5.813,483,5.422,484,6.408,485,4.896]],["t/934",[0,0.17,84,3.652,336,3.583,342,3.299,422,3.344,449,3.133,461,3.712,465,5.086,469,4.319,470,4.528,471,6.519,486,5.272,487,6.519,488,7.185]],["t/936",[0,0.17,56,2.977,80,4.023,84,3.162,333,2.163,336,3.265,360,3.583,416,4.023,422,3.826,449,2.713,461,4.247,463,5.264,465,4.403,467,4.941,468,4.565,469,3.739,470,3.92,476,4.393,477,3.214,486,4.565,487,5.644,489,5.264,490,4.98,491,3.066,492,6.221,493,5.264,494,4.753,495,6.221]],["t/938",[0,0.148,263,6.123,309,4.498,334,2.662,336,3.038,446,5.845,447,7.508,448,6.123,449,4.09,461,5.24,465,5.414,476,4.087,477,3.951,480,4.598,496,7.649,497,7.649,498,7.649,499,4.82]],["t/940",[0,0.15,56,3.104,78,4.515,80,4.194,84,4.295,263,5.192,312,5.884,334,1.841,336,2.576,342,2.978,348,2.864,416,4.194,422,3.932,446,4.956,447,6.764,448,5.192,449,4.098,453,5.884,461,4.855,463,5.488,464,5.192,465,5.98,466,4.759,467,3.898,476,3.465,482,5.884,500,4.59,501,6.485,502,5.884,503,6.485,504,4.759,505,4.759,506,3.246,507,6.485,508,5.488,509,6.485,510,4.194]],["t/942",[0,0.139,345,2.712,511,4.447,512,5.779,513,7.145,514,4.283,515,4.932,516,7.145,517,5.236,518,6.304,519,2.311,520,7.145,521,3.568,522,5.236,523,4.844,524,3.665,525,4.447,526,3.522,527,4.963]],["t/945",[0,0.092,11,3.057,21,5.358,35,2.528,56,3.013,65,5.039,193,4.312,237,4.07,308,4.618,338,3.306,341,3.306,474,3.554,478,4.809,486,4.618,489,5.326,490,5.039,515,3.251,519,2.431,522,6.158,523,5.696,526,4.402,528,5.039,529,4.312,530,4.455,531,4.809,532,4.809,533,7.01,534,3.15,535,3.423,536,4.312,537,5.326,538,5.039,539,4.618,540,5.039,541,5.326,542,5.71,543,3.15,544,3.306,545,5.039,546,4.455,547,5.326,548,5.326,549,5.71,550,4.185,551,5.71]],["t/947",[0,0.164,334,2.14,468,5.533,519,2.728,521,3.417,522,5.014,523,4.638,526,3.373,529,5.166,534,3.774,544,4.883,546,5.337,552,4.177,553,3.896,554,4.877,555,5.166,556,4.638,557,4.435]],["t/950",[0,0.174,40,2.248,101,1.429,327,1.237,334,0.835,342,2.174,422,2.203,511,3.354,514,1.6,519,2.46,525,2.673,526,1.316,552,2.623,558,1.333,559,2.158,560,2.082,561,2.015,562,2.015,563,2.015,564,1.73,565,1.63,566,1.768,567,2.158,568,3.306,569,2.355,570,1.472,571,2.489,572,1.369,573,1.73,574,1.316,575,1.694,576,1.902,577,1.351]],["t/952",[0,0.174,519,1.249,526,1.904,568,2.068,574,1.904,575,2.452,578,2.559]],["t/954",[0,0.173,342,3.395,511,3.004,519,2.695,552,2.947,568,2.584,570,2.662,572,3.441,573,3.129,576,3.441,579,4.827]],["t/956",[0,0.171]],["t/958",[0,0.162,56,3.559,72,2.953,275,3.164,288,4.944,334,2.11,354,3.02,512,5.456,518,5.953,519,2.704,524,3.461,544,3.906,554,4.809,556,4.573,568,3.611,580,5.094,581,6.746,582,5.456,583,5.953,584,5.263,585,6.746,586,6.292]],["t/960",[0,0.163,11,3.537,88,2.33,288,4.842,298,4.59,360,4.195,468,5.344,477,4.7,511,4.112,514,3.961,519,2.137,521,3.3,534,3.645,544,4.779,555,4.99,587,6.608,588,6.608,589,4.035,590,4.99,591,2.801,592,3.257,593,3.825,594,2.801]],["t/962",[0,0.14,101,3.882,275,3.402,354,3.247,519,2.826,526,4.308,553,5.341,574,4.308,595,7.252,596,7.252,597,6.108,598,7.252,599,7.252]],["t/964",[519,2.643,526,4.028,553,4.653,574,4.028]],["t/967",[0,0.173,275,3.541,327,2.151,422,2.381,519,2.649,525,4.062,526,3.218,532,3.909,553,3.717,568,4.041,574,3.218,575,2.947,577,3.303,600,3.099,601,4.095]],["t/969",[0,0.173,72,3.466,275,3.713,558,3.089,600,2.937]],["t/971",[0,0.172,519,2.167,553,3.815,568,3.586,574,4.104,602,4.542]],["t/973",[0,0.172,592,3.421,593,4.018,594,2.941]],["t/975",[0,0.167,592,3.686,593,4.328,594,3.169,603,5.512]],["t/979",[0,0.162,1,5.689,72,3.299,347,3.667,519,2.437,600,3.577,604,4.222,605,4.222,606,7.027,607,7.027]],["t/981",[0,0.154,18,3.398,35,3.563,255,5.346,321,3.675,333,2.433,345,3.055,350,4.03,360,4.03,526,3.968,553,4.583,564,5.729,574,3.129,604,3.557,605,3.557,608,6.347,609,5.009,610,6.347,611,8.048,612,6.347,613,6.347,614,6.347,615,6.347,616,5.92,617,5.601,618,5.346]],["t/983",[0,0.173,275,3.9,327,2.226,347,3.743,422,2.464,438,4.238,519,1.553,525,2.989,526,2.368,564,3.113,568,3.578,604,2.691,609,2.989,619,5.407]],["t/985",[0,0.173,72,1.93,275,2.952,347,2.146,519,1.426,526,3.103,558,2.202,568,2.36,574,2.173,575,2.799,604,2.47,620,2.643,621,3.89]],["t/987",[0,0.173,592,3.049,593,3.581,594,2.621]],["t/990",[519,2.96,534,5.049,622,3.865,623,7.312,624,5.588,625,7.312,626,4.393]],["t/993",[0,0.174,34,1.981,275,0.996,298,1.475,334,0.664,347,1.034,353,1.475,422,2.358,449,1.711,511,2.216,519,2.577,521,1.061,525,2.216,534,1.171,553,1.209,554,1.514,568,1.905,576,1.514,577,2.722,622,2.651,627,2.609,628,1.826,629,3.56,630,1.23,631,2.609,632,2.998,633,1.297,634,2.124,635,1.377,636,2.124,637,1.874,638,1.981,639,2.124,640,1.604,641,1.874,642,1.874,643,1.604,644,1.514,645,1.874,646,1.12]],["t/995",[0,0.173,592,2.658,593,3.122,594,2.285]],["t/997",[0,0.13,88,2.268,101,3.443,166,5.999,187,4.714,204,6.835,345,2.442,449,3.092,457,4.585,510,4.585,514,3.856,535,3.856,543,4.477,556,4.36,594,2.726,647,5.018,648,5.675,649,5.675,650,5.417,651,5.202,652,5.675,653,5.018,654,5.675,655,5.675,656,5.675,657,4.857,658,6.432,659,6.432,660,6.432,661,5.675,662,5.675,663,5.417,664,5.675]],["t/999",[0,0.148,72,3.46,101,4.231,452,6.974,594,3.35,665,6.974,666,7.904]],["t/1001",[0,0.172,72,3.288,73,1.821,78,1.375,92,3.866,101,1.249,193,1.762,266,4.181,298,1.621,333,1.476,334,1.204,341,1.351,342,1.181,345,1.462,360,1.482,367,2.059,422,1.197,449,1.122,472,3.004,474,4.228,478,1.966,479,1.966,491,1.268,514,1.399,515,1.329,519,0.755,527,2.675,528,2.059,535,1.399,539,1.888,546,1.821,550,1.71,558,3.589,563,2.907,574,2.423,577,2.886,589,1.425,591,1.632,594,0.989,600,1.108,603,2.157,626,1.308,630,2.845,646,1.231,647,1.821,667,1.888,668,2.192,669,5.494,670,4.337,671,2.059,672,1.966,673,1.888,674,5.319,675,2.059,676,2.059,677,1.582,678,2.059,679,2.334,680,2.334,681,2.334,682,2.334,683,1.453,684,4.915,685,2.334,686,2.177,687,2.334,688,1.888,689,2.334,690,6.073,691,5.703,692,5.703,693,6.311,694,3.591,695,3.85,696,1.888,697,2.334,698,2.334,699,2.059,700,2.059,701,2.177,702,1.453]],["t/1003",[0,0.162,92,4.39,144,5.453,320,3.322,345,2.458,355,4.745,449,3.112,451,4.889,515,4.641,535,3.882,578,4.29,591,2.744,594,2.744,603,4.566,657,4.889,703,5.809,704,5.453,705,5.237,706,6.475,707,5.713,708,6.475,709,6.475,710,5.713,711,4.889,712,4.745]],["t/1005",[0,0.162,277,6.615,321,4.106,345,2.692,449,3.409,451,5.355,461,4.038,591,3.006,683,4.414,713,7.092,714,4.252,715,4.597,716,5.198,717,7.092,718,5.533,719,5.736,720,7.092]],["t/1007",[0,0.156,334,2.252,354,3.222,449,3.46,506,3.97,527,5,556,4.88,591,3.051,628,3.693,721,5.822,722,6.062,723,4.769,724,4.769,725,7.198,726,7.198,727,7.198,728,4.57]],["t/1009",[0,0.169,1,4.922,88,2.299,309,4.226,345,2.475,369,5.752,449,3.133,535,3.908,544,3.774,561,4.922,565,3.98,591,2.763,594,2.763,656,5.752,696,5.272,711,4.922,712,4.777,729,5.086,730,5.752,731,6.519]],["t/1011",[0,0.166,11,3.561,88,2.346,187,4.876,327,3.084,362,4.51,449,3.198,517,4.876,578,4.408,591,2.82,678,5.871,723,4.408,724,4.408,732,6.653,733,6.205,734,6.653,735,8.29,736,5.19,737,4.408,738,4.313,739,6.653]],["t/1013",[0,0.172,88,2.14,362,4.114,449,2.917,544,3.513,577,3.071,591,2.572,714,4.688,740,6.069]],["t/1015",[0,0.174,72,0.245,75,0.471,266,0.37,308,0.452,334,0.175,335,0.304,336,0.245,342,0.283,345,0.404,354,0.25,355,0.41,461,0.318,506,0.308,523,0.379,535,0.638,539,0.452,565,0.341,600,0.265,622,0.276,624,0.759,688,0.452,703,0.399,704,0.471,729,0.436,741,0.436,742,0.362,743,0.559,744,0.452,745,0.436,746,0.522,747,0.559,748,0.399,749,0.379,750,0.341,751,0.341,752,0.399,753,0.471,754,0.436]],["t/1017",[0,0.166,57,4.447,72,3.128,187,5.236,530,5.574,567,5.779,603,4.853,622,3.522,668,4.068,671,6.304,672,6.017,755,7.145]],["t/1019",[0,0.162,57,4.057,88,2.299,101,3.489,103,4.647,104,5.752,345,2.475,514,3.908,543,3.596,565,3.98,594,2.763,652,5.752,654,5.752,655,5.752,688,5.272,710,5.752,716,4.777,736,5.086,737,4.319,756,4.922,757,6.519,758,6.519,759,6.519,760,6.519,761,6.519,762,6.519,763,4.922]],["t/1022",[320,3.485,333,2.604,345,2.579,354,3.041,506,3.747,519,2.716,525,4.228,526,3.349,553,3.868,556,4.605,622,3.349,626,3.806,628,3.485,662,5.994,714,5.034,715,4.404,764,5.994,765,6.793,766,6.336,767,6.793,768,5.3,769,5.994,770,5.722,771,6.793,772,3.636,773,4.605]],["t/1025",[0,0.173,92,1.747,101,2.234,113,2.01,275,1.208,298,1.79,327,1.194,334,1.646,347,2.032,353,1.79,422,3.104,449,2.006,457,1.836,459,2.17,504,2.084,511,1.603,519,2.424,525,3.275,526,2.058,553,1.467,554,2.976,558,1.287,559,2.084,560,2.01,561,1.945,562,1.945,563,1.945,564,1.67,568,3.559,569,2.273,576,1.836,577,3.063,601,2.273,603,1.444,605,1.444,609,1.603,635,2.706,643,1.945,644,1.836,645,2.273,646,1.359,714,1.544,715,1.67,721,3.376,769,2.273,774,3.411,775,3.683,776,2.576,777,2.273,778,3.257,779,2.576]],["t/1027",[0,0.173,526,3.133,568,2.393,574,3.133,575,2.838,602,3.03,620,2.68,621,3.944,754,3.487,780,4.47,781,4.47,782,3.765]],["t/1029",[0,0.173]],["t/1031",[0,0.173,35,2.31,519,1.687,552,3.186,577,2.641,592,2.572,593,3.021,594,2.211,764,4.604]],["t/1034",[240,6.553,354,3.627,474,5.043,519,2.621,534,4.469]],["t/1037",[0,0.174,101,1.326,240,2.004,275,1.897,333,0.95,334,1.603,347,1.206,422,2.628,474,3.68,511,2.517,519,2.487,552,2.469,558,2.019,559,2.004,560,1.933,561,1.871,562,1.871,563,1.871,572,1.271,573,1.606,627,1.816,628,1.271,644,1.766,668,1.411,703,1.766,783,4.044,784,1.641,785,2.186,786,2.186]],["t/1039",[0,0.167,72,3.324,275,3.562,474,4.726,519,2.456,600,3.605]],["t/1041",[0,0.174,592,2.466,593,2.896,594,2.12]],["t/1044",[275,3.619,354,3.454,519,2.932,622,4.47,742,5.001,787,5.111,788,8,789,5.001]],["t/1047",[0,0.174,72,1.569,334,0.478,341,1.552,519,1.587,558,1.339,605,0.856,622,2.419,627,1.119,677,1.035,703,1.088,778,2.092,788,1.347,789,1.738,790,1.191,791,1.235,792,2.169,793,1.191,794,1.286,795,1.286]],["t/1049",[0,0.173,72,2.835,558,3.234,622,3.192]],["t/1051",[0,0.169,341,4.926,519,2.752,742,4.498,787,6.097,793,5.414,796,6.94,797,6.94]],["t/1053",[0,0.174,592,1.838,593,2.159,594,1.58]],["t/1056",[0,0.156,11,3.586,328,4.775,342,3.391,344,4.091,345,2.543,348,3.261,354,2.999,519,3.065,526,3.303,558,3.346,578,5.516,715,4.343,742,4.343,787,4.438,798,5.911,799,6.699,800,6.248,801,7.765,802,6.699,803,5.911]],["t/1059",[0,0.174,72,0.982,275,1.747,327,1.039,341,2.156,519,2.39,521,1.12,552,2.274,572,1.15,573,2.414,605,1.256,627,1.643,644,1.598,703,1.598,785,1.978,786,1.978,787,1.485,790,2.906,794,1.888,804,2.242]],["t/1061",[0,0.174,72,1.494,88,1.204,101,1.827,334,1.068,519,1.685,578,2.261,600,1.62]],["t/1063",[0,0.172,341,4.546,451,4.611,519,2.54,742,3.959,787,5.75,805,4.611]],["t/1065",[0,0.174,592,1.556,593,1.828,594,1.338]],["t/1068",[0,0.171,51,3.24,333,2.877,334,1.783,338,3.3,342,1.947,345,2.85,358,3.395,472,3.002,578,3.776,592,3.347,600,2.706,605,3.194,737,5.311,750,4.584,766,3.588,772,3.051,789,2.494,805,4.304,806,5.7,807,5.03,808,4.241,809,7.002,810,6.79,811,4.241,812,3.847,813,8.835,814,4.241,815,4.241,816,5.316,817,4.241,818,3.695,819,4.241,820,4.241,821,4.241,822,3.24,823,4.241,824,3.588,825,3.847,826,7.484,827,4.241,828,3.112,829,4.241]],["t/1070",[519,2.643,584,6.375,622,4.028,830,7.621]],["t/1072",[0,0.109,88,2.396,298,4.719,309,4.404,320,4.308,341,3.933,348,3.306,354,3.041,360,4.313,519,3.08,552,4.148,604,3.806,619,5.494,622,4.494,787,4.501,789,4.404,791,5.494,792,5.494,795,5.722,831,8.398,832,6.336]],["t/1075",[0,0.166,330,5.248,348,3.583,351,5.395,361,6.201,591,3.12,784,4.878,789,4.772,793,5.744,833,6.867]],["t/1077",[0,0.174]],["t/1080",[0,0.172]],["t/1082",[0,0.173,72,2.417,73,2.876,78,3.252,275,1.729,300,2.783,333,1.413,334,1.727,354,1.65,360,2.34,413,3.438,466,2.981,519,2.141,552,2.251,558,2.757,592,1.817,600,1.75,622,3.263,624,2.628,644,2.628,668,2.099,792,5.354,818,2.389,834,3.252,835,2.499,836,3.686,837,4.65,838,3.252,839,3.686]],["t/1084",[0,0.174,275,2.231,622,2.344,640,3.591,791,3.846]],["t/1086",[0,0.173,88,1.792,333,2.663,334,1.589,350,3.225,600,2.412,840,5.08,841,5.08]],["t/1088",[0,0.17,275,3.376,511,4.48,570,3.97,784,4.769,789,4.666]],["t/1090",[0,0.174,592,1.845,593,2.167,594,1.586]],["t/1093",[0,0.165,18,3.769,57,4.382,199,5.16,334,2.202,476,4.147,499,4.891,842,6.482,843,5.493,844,7.76,845,7.041,846,7.041,847,7.041,848,5.019,849,7.76]],["t/1095",[0,0.168,491,4.062,535,4.482,850,8.24,851,4.257,852,6.047,853,5.833]],["t/1098",[0,0.173,56,2.612,57,3.081,84,2.774,333,1.897,504,4.004,631,3.628,633,3.023,663,4.169,730,4.368,842,5.155,843,6.096,854,5.57,855,3.862,856,3.862,857,4.95,858,4.368,859,4.617,860,5.456,861,4.004,862,4.617,863,4.95]],["t/1100",[0,0.172,78,3.211,347,3.548,358,6.432,369,4.811,633,3.329,784,3.613,818,3.535,842,6.201,843,5.687,855,4.254,864,5.505,865,5.453]],["t/1102",[0,0.171,603,3.806,668,3.868,677,4.605,700,5.994,784,4.501,842,5.13,843,5.3,854,4.842]],["t/1104",[0,0.173,78,4.195,248,5.649,333,1.602,334,1.308,347,2.034,491,3.291,562,4.574,633,2.552,663,5.999,742,2.71,818,2.71,842,4.574,843,6.094,854,2.98,862,3.899,866,4.18,867,4.607,868,4.18,869,4.18,870,2.903,871,4.607,872,5.345]],["t/1106",[0,0.102,1,4.793,57,3.951,237,4.525,320,3.256,358,5.601,477,3.614,499,5.59,522,5.898,545,5.601,557,4.115,632,5.346,742,4.115,784,4.205,789,4.115,818,4.115,832,5.92,842,7.017,843,6.279,845,6.347,846,6.347,847,6.347,855,4.952,864,4.793,872,5.601,873,6.347,874,6.996,875,6.996,876,6.996,877,6.996,878,6.996,879,6.996]],["t/1108",[0,0.171,334,1.65,491,2.865,591,2.235,663,6.004,721,4.266,784,3.494,789,4.621,807,4.654,818,3.419,842,6.531,843,6.748,854,3.76,857,5.274,862,4.919,863,5.274,864,3.983,866,5.274,868,5.274,880,4.266,881,7.857,882,5.813,883,5.274,884,5.274]],["t/1111",[0,0.154,18,4.097,500,5.971,521,3.822,527,5.316,600,3.634,848,5.456,885,7.138,886,7.654,887,8.436]],["t/1113",[0,0.155,35,3.471,327,3.634,570,4.324,626,4.393,885,7.312,888,7.84]],["t/1115",[0,0.172,330,4.525,344,3.876,350,4.03,768,4.952,889,6.347,890,6.996,891,5.601]],["t/1117",[0,0.173]],["t/1120",[0,0.173]],["t/1122",[0,0.173,335,2.717,344,3.054,420,3.902,500,3.902,589,3.054,604,2.802,774,3.242,892,4.212]],["t/1124",[0,0.173]],["t/1126",[0,0.17]],["t/1128",[0,0.173]],["t/1130",[0,0.174,306,3.18,353,2.503,506,1.988,577,1.824,893,3.604]],["t/1132",[0,0.174,335,3.832,342,2.08,371,4.109,570,2.267,572,3.069,620,2.463,894,4.529,895,3.832,896,3.103]],["t/1134",[0,0.164,88,1.979,184,5.233,327,4.11,333,2.848,335,4.036,336,2.456,344,5.414,350,4.717,356,4.726,476,4.376,477,3.195,491,3.048,521,2.802,570,3.095,594,2.378,604,3.144,628,2.878,714,3.364,751,3.426,768,4.377,774,5.4,848,4,885,6.93,892,4.726,897,6.184,898,4.377,899,4.538,900,3.804,901,5.611,902,4.112,903,6.184,904,6.184]],["t/1136",[0,0.143,72,3.299,88,2.657,309,4.884,345,2.86,527,5.234,589,4.6,665,6.648,748,5.371,749,5.108,905,7.027,906,6.346,907,8.305]],["t/1138",[0,0.152,18,3.971,57,4.617,333,2.843,502,7.419,506,4.092,530,5.788,538,6.546,544,4.295,589,4.53,628,3.806,905,6.919,906,6.248,908,6.919]],["t/1140",[0,0.137,56,4.509,345,2.654,480,4.631,506,4.714,547,6.519,594,2.963,628,3.586,756,5.278,852,5.653,908,7.971,909,5.887,910,6.168,911,7.704,912,6.99,913,6.168,914,7.704,915,5.653,916,7.704,917,7.704]],["t/1142",[0,0.172,35,3.497,345,1.919,470,3.51,553,3.943,570,3.82,572,3.552,574,2.491,616,4.713,620,4.151,748,3.602,749,4.694,773,4.694,896,5.229,902,5.075,918,7.632,919,4.713,920,4.256,921,4.713,922,4.087]],["t/1144",[0,0.173,77,3.002,78,2.266,84,2.156,300,2.905,320,1.974,334,1.204,336,2.495,467,4.498,473,3.112,477,2.191,499,2.672,500,3.002,506,2.122,553,2.191,564,2.494,572,2.924,594,1.631,628,2.924,643,5.127,714,2.306,715,2.494,728,2.443,738,2.494,751,2.349,773,3.864,837,3.24,856,3.002,922,4.61,923,3.588,924,4.241,925,3.588,926,2.306,927,4.241,928,3.395,929,3.847,930,4.241,931,4.241,932,3.002,933,3.588,934,3.24]],["t/1146",[0,0.119,77,5.788,467,4.915,480,4.915,506,4.092,565,4.53,577,3.755,729,5.788,902,6.942,909,6.248,935,8.177,936,8.177,937,8.177,938,8.177]],["t/1148",[0,0.172,78,2.43,152,5.054,199,3.024,275,2.815,320,3.078,336,2.627,342,3.579,360,2.62,467,2.734,470,2.866,485,3.475,491,2.242,572,2.117,590,3.116,591,1.749,600,1.959,620,2.474,646,3.166,749,2.797,773,2.797,896,5.862,902,4.398,910,5.295,920,3.475,921,3.849,939,3.475,940,6.614,941,4.548,942,7.241,943,3.976,944,3.337]],["t/1150",[0,0.173,40,3.747,320,3.25,333,1.705,334,1.392,467,4.197,470,3.091,475,4.15,491,2.417,499,4.4,500,3.471,517,3.261,523,4.295,565,2.717,591,1.886,603,3.549,628,2.282,744,5.123,745,4.942,834,3.926,909,3.747,942,5.908,945,4.449,946,4.904,947,4.15]],["t/1152",[0,0.173,152,3.505,336,1.822,342,3.056,467,2.757,470,2.891,476,2.451,477,2.37,530,3.247,568,3.232,591,1.764,620,5.175,690,3.247,745,5.544,900,2.822,932,4.711,943,2.757,948,5.632,949,4.587,950,4.587,951,4.587]],["t/1154",[0,0.173,88,1.792,336,3.468,444,5.08,467,3.366,470,3.529,481,5.422,485,5.853,566,3.366,591,2.153,900,3.444,926,4.748,948,4.738,952,6.949,953,5.6]],["t/1156",[0,0.157,18,3.971,160,6.919,333,2.843,334,2.321,560,5.788,590,5.602,835,5.029,926,5.311,954,6.919,955,6.919,956,7.419]],["t/1158",[0,0.173,57,3.356,88,1.902,334,1.687,467,3.572,470,3.745,475,5.029,481,4.207,657,4.071,942,5.029,956,5.392,957,7.975]],["t/1160",[0,0.154,11,4.097,467,5.071,476,4.508,555,5.779,714,4.588,751,4.673,900,5.189,902,5.609,958,6.446]],["t/1162",[0,0.173,84,2.862,470,3.548,620,3.062,631,3.743,690,3.984,714,3.062,749,4.728,902,3.743,920,5.874,929,5.107,943,3.384,958,4.301,959,5.997,960,5.107]],["t/1164",[0,0.165,40,5.007,56,3.137,57,3.7,77,3.179,78,4.833,333,2.279,334,2.414,336,1.784,355,2.986,446,3.431,467,5.113,476,4.134,477,2.32,480,2.699,485,3.431,499,2.83,505,3.295,506,3.279,523,4.031,544,2.359,557,2.641,565,4.712,566,2.699,568,2.181,589,2.488,620,3.564,624,2.904,628,3.601,632,3.431,643,4.489,653,3.179,690,3.179,700,3.595,714,4.208,744,4.809,745,3.179,751,4.712,834,5.246,835,2.762,898,3.179,902,2.986,905,3.8,906,3.431,908,3.8,912,4.074,913,3.595,926,2.442,932,3.179,934,5.007,944,3.295,955,3.8,958,3.431,961,4.491,962,4.491,963,5.545,964,4.491,965,4.074,966,4.491,967,4.074,968,4.491,969,4.074,970,4.074,971,4.491,972,4.491,973,4.491]],["t/1166",[0,0.148,4,5.887,18,3.741,88,2.465,320,3.586,321,4.047,327,3.24,338,4.047,454,6.99,515,3.98,521,3.491,605,3.916,774,4.531,822,5.887,848,4.982,851,3.98,906,5.887,974,7.704,975,5.887,976,7.704,977,7.704,978,6.99]],["t/1168",[0,0.172,21,2.416,56,1.788,77,2.644,84,2.903,218,3.389,255,2.854,306,2.99,309,2.197,321,2.999,327,1.571,334,1.967,338,1.962,347,2.522,348,1.649,449,1.629,485,2.854,491,1.841,534,1.869,604,1.899,605,1.899,631,2.484,633,2.069,635,2.197,641,4.571,712,2.484,715,4.077,750,2.069,772,3.77,837,2.854,854,2.416,856,2.644,883,3.389,932,4.907,979,5.71,980,6.932,981,5.866,982,3.735,983,2.99,984,7.06,985,4.571,986,2.99,987,2.99,988,2.644,989,2.99,990,3.389,991,3.735,992,2.99,993,3.735,994,3.735,995,3.735,996,5.71,997,3.735,998,3.735,999,3.735,1000,3.735,1001,5.71,1002,5.181,1003,3.735,1004,3.735,1005,3.735,1006,3.735]],["t/1170",[0,0.173,15,4.31,212,4.31,328,4.414,338,3.585,342,2.182,347,2.098,350,2.737,360,2.737,531,3.63,591,1.827,605,2.415,633,2.632,646,2.274,737,4.103,772,3.879,778,3.363,801,4.02,828,3.486,870,4.302,928,3.803,989,3.803,1007,3.63,1008,8.736,1009,3.63,1010,6.193,1011,4.751,1012,4.751,1013,4.02]],["t/1172",[0,0.174,328,2.287,546,2.504,604,1.798,605,1.798,763,2.423,807,2.832]],["t/1175",[0,0.173]],["t/1177",[0,0.172,266,4.205,348,3.089,694,5.92,1008,6.347,1014,6.347,1015,5.346]],["t/1179",[0,0.173,350,3.647,474,3.575,605,3.219,763,4.337,861,6.103,1015,4.838,1016,4.646,1017,5.744]],["t/1181",[0,0.16,4,4.347,51,5.917,88,2.478,160,4.814,237,3.679,248,6.552,309,3.346,333,1.978,334,2.498,338,4.067,345,1.96,356,4.347,414,5.481,416,5.693,476,3.04,515,4,534,2.847,540,4.555,556,3.499,648,4.555,736,4.027,737,4.654,763,3.898,772,2.763,810,5.162,835,4.763,848,3.679,861,4.175,984,6.199,1018,5.689,1019,5.689,1020,5.689,1021,6.552,1022,4.654,1023,5.689,1024,5.689,1025,5.162,1026,5.689,1027,5.689,1028,5.689,1029,5.689,1030,3.898,1031,4.814,1032,4.347,1033,5.689,1034,4.814,1035,5.689]],["t/1183",[0,0.14,101,3.882,275,3.402,354,3.247,519,2.826,526,4.308,553,5.341,574,4.308,595,7.252,596,7.252,597,6.108,598,7.252,599,7.252]],["t/1185",[519,2.643,526,4.028,553,4.653,574,4.028]],["t/1188",[0,0.173,275,3.541,327,2.151,422,2.381,519,2.649,525,4.062,526,3.218,532,3.909,553,3.717,568,4.041,574,3.218,575,2.947,577,3.303,600,3.099,601,4.095]],["t/1190",[0,0.173,72,3.466,275,3.713,558,3.089,600,2.937]],["t/1192",[0,0.172,519,2.167,553,3.815,568,3.586,574,4.104,602,4.542]],["t/1194",[0,0.172,592,3.421,593,4.018,594,2.941]],["t/1196",[0,0.167,592,3.686,593,4.328,594,3.169,603,5.512]],["t/1200",[0,0.173,11,1.544,35,1.277,56,1.521,101,1.544,113,3.564,193,2.177,309,1.869,321,1.669,327,2.118,333,1.105,334,1.429,336,1.262,345,2.451,347,1.404,354,1.291,414,3.564,461,3.231,469,1.911,493,2.69,506,1.591,523,1.955,534,1.591,544,1.669,557,1.869,558,1.44,565,1.761,572,1.479,573,1.869,574,1.422,575,1.831,577,2.312,609,3.532,620,2.739,626,2.56,630,1.669,635,1.869,677,1.955,702,1.795,738,2.962,744,2.332,748,4.045,749,3.847,750,1.761,772,2.446,775,2.544,818,1.869,855,2.25,922,2.332,926,1.729,939,3.848,943,1.911,944,2.332,983,2.544,1036,2.884,1037,4.032,1038,2.884,1039,2.884,1040,2.177,1041,2.544,1042,2.544,1043,2.429,1044,2.884,1045,2.332,1046,2.884,1047,2.884]],["t/1203",[0,0.173,78,2.964,84,1.828,320,1.674,344,4.813,347,2.449,364,2.464,486,2.639,564,3.262,574,1.609,604,2.82,622,1.609,633,3.073,640,4.639,750,4.813,818,3.982,855,3.926,880,4.07,895,3.043,919,3.043,922,2.639,1016,2.639,1048,3.043,1049,3.263,1050,5.033,1051,5.033,1052,3.263,1053,3.263,1054,3.263]],["t/1205",[0,0.173,51,2.223,57,2.65,80,1.882,266,1.749,336,1.156,345,1.002,347,1.285,354,1.182,461,2.424,469,1.749,481,2.059,499,3.716,529,1.993,572,1.354,574,1.301,577,1.336,600,1.253,609,1.643,620,1.582,626,2.385,628,1.354,640,1.993,667,3.443,690,4.174,702,1.643,711,1.993,712,1.934,738,2.76,748,3.035,749,4.161,750,3.748,752,1.882,772,1.413,773,1.79,896,1.993,920,3.585,943,1.749,959,5.084,1037,3.756,1040,1.993,1045,2.135,1055,2.462,1056,2.64,1057,2.64,1058,2.135,1059,2.223,1060,2.223,1061,2.135]],["t/1207",[0,0.174,84,1.182,92,1.43,345,0.801,347,1.027,354,2.048,461,1.201,469,1.398,483,1.968,499,1.466,506,1.164,515,1.201,572,1.082,575,2.904,589,1.288,609,3.333,617,1.862,618,1.777,620,2.742,626,1.984,646,2.413,647,1.646,702,2.203,705,1.706,711,1.593,712,1.546,714,3.211,729,1.646,738,1.368,748,1.504,749,1.43,750,1.288,751,2.162,752,1.504,772,1.895,773,2.4,824,1.968,900,1.43,926,1.265,933,1.968,943,1.398,958,5.026,975,1.777,1040,1.593,1058,1.706,1062,2.11,1063,2.11,1064,1.968,1065,2.11,1066,2.11,1067,2.11,1068,2.11,1069,2.11,1070,2.11,1071,1.968,1072,2.863]],["t/1209",[0,0.174,11,0.481,35,0.735,56,0.474,57,0.559,60,0.793,72,1.482,74,0.658,92,0.609,94,0.793,101,0.481,173,0.757,199,0.658,207,0.678,266,1.535,321,1.341,333,0.344,335,4.068,336,1.264,342,0.455,344,0.549,345,0.631,347,0.809,350,1.055,354,2.189,355,1.698,364,0.678,414,0.701,421,0.701,422,0.461,449,0.432,457,0.64,459,0.757,461,1.319,469,0.595,474,0.559,479,0.757,494,0.757,514,0.539,527,0.624,529,1.254,531,1.399,534,0.916,535,1.73,543,0.916,555,0.678,558,1.911,564,0.582,572,0.461,574,0.819,576,0.64,577,1.461,589,1.014,591,1.223,600,0.789,609,1.034,619,0.727,620,0.539,622,0.443,626,1.298,630,1.341,646,0.474,649,0.793,651,0.727,664,0.793,667,0.727,669,1.344,670,0.793,675,1.466,676,1.466,696,0.727,699,1.466,702,0.559,705,0.727,714,0.996,738,2.195,750,0.549,751,1.014,752,0.64,770,2.431,772,0.481,773,0.609,798,0.793,805,1.254,900,0.609,926,0.996,932,0.701,975,0.757,987,0.793,1009,0.757,1032,0.757,1040,0.678,1042,0.793,1045,1.874,1058,0.727,1059,0.757,1073,2.987,1074,0.793,1075,0.793,1076,0.898,1077,0.898,1078,1.661,1079,0.898,1080,0.898,1081,0.898,1082,1.661,1083,0.898,1084,0.898,1085,0.898,1086,1.661,1087,2.044,1088,0.898,1089,0.838,1090,0.898,1091,2.886,1092,0.898,1093,0.898,1094,0.898,1095,2.317,1096,0.898]],["t/1212",[0,0.162,1,5.689,72,3.299,347,3.667,519,2.437,600,3.577,604,4.222,605,4.222,606,7.027,607,7.027]],["t/1214",[0,0.154,18,3.398,35,3.563,255,5.346,321,3.675,333,2.433,345,3.055,350,4.03,360,4.03,526,3.968,553,4.583,564,5.729,574,3.129,604,3.557,605,3.557,608,6.347,609,5.009,610,6.347,611,8.048,612,6.347,613,6.347,614,6.347,615,6.347,616,5.92,617,5.601,618,5.346]],["t/1216",[0,0.173,275,3.9,327,2.226,347,3.743,422,2.464,438,4.238,519,1.553,525,2.989,526,2.368,564,3.113,568,3.578,604,2.691,609,2.989,619,5.407]],["t/1218",[0,0.173,72,1.93,275,2.952,347,2.146,519,1.426,526,3.103,558,2.202,568,2.36,574,2.173,575,2.799,604,2.47,620,2.643,621,3.89]],["t/1220",[0,0.173,592,3.049,593,3.581,594,2.621]],["t/1222",[0,0.139,345,2.712,511,4.447,512,5.779,513,7.145,514,4.283,515,4.932,516,7.145,517,5.236,518,6.304,519,2.311,520,7.145,521,3.568,522,5.236,523,4.844,524,3.665,525,4.447,526,3.522,527,4.963]],["t/1225",[0,0.092,11,3.057,21,5.358,35,2.528,56,3.013,65,5.039,193,4.312,237,4.07,308,4.618,338,3.306,341,3.306,474,3.554,478,4.809,486,4.618,489,5.326,490,5.039,515,3.251,519,2.431,522,6.158,523,5.696,526,4.402,528,5.039,529,4.312,530,4.455,531,4.809,532,4.809,533,7.01,534,3.15,535,3.423,536,4.312,537,5.326,538,5.039,539,4.618,540,5.039,541,5.326,542,5.71,543,3.15,544,3.306,545,5.039,546,4.455,547,5.326,548,5.326,549,5.71,550,4.185,551,5.71]],["t/1227",[0,0.164,334,2.14,468,5.533,519,2.728,521,3.417,522,5.014,523,4.638,526,3.373,529,5.166,534,3.774,544,4.883,546,5.337,552,4.177,553,3.896,554,4.877,555,5.166,556,4.638,557,4.435]],["t/1230",[0,0.174,40,2.248,101,1.429,327,1.237,334,0.835,342,2.174,422,2.203,511,3.354,514,1.6,519,2.46,525,2.673,526,1.316,552,2.623,558,1.333,559,2.158,560,2.082,561,2.015,562,2.015,563,2.015,564,1.73,565,1.63,566,1.768,567,2.158,568,3.306,569,2.355,570,1.472,571,2.489,572,1.369,573,1.73,574,1.316,575,1.694,576,1.902,577,1.351]],["t/1232",[0,0.174,519,1.249,526,1.904,568,2.068,574,1.904,575,2.452,578,2.559]],["t/1234",[0,0.173,342,3.395,511,3.004,519,2.695,552,2.947,568,2.584,570,2.662,572,3.441,573,3.129,576,3.441,579,4.827]],["t/1236",[0,0.171]],["t/1238",[0,0.162,56,3.559,72,2.953,275,3.164,288,4.944,334,2.11,354,3.02,512,5.456,518,5.953,519,2.704,524,3.461,544,3.906,554,4.809,556,4.573,568,3.611,580,5.094,581,6.746,582,5.456,583,5.953,584,5.263,585,6.746,586,6.292]],["t/1240",[0,0.163,11,3.537,88,2.33,288,4.842,298,4.59,360,4.195,468,5.344,477,4.7,511,4.112,514,3.961,519,2.137,521,3.3,534,3.645,544,4.779,555,4.99,587,6.608,588,6.608,589,4.035,590,4.99,591,2.801,592,3.257,593,3.825,594,2.801]],["t/1243",[519,2.96,534,5.049,622,3.865,623,7.312,624,5.588,625,7.312,626,4.393]],["t/1246",[0,0.174,34,1.981,275,0.996,298,1.475,334,0.664,347,1.034,353,1.475,422,2.358,449,1.711,511,2.216,519,2.577,521,1.061,525,2.216,534,1.171,553,1.209,554,1.514,568,1.905,576,1.514,577,2.722,622,2.651,627,2.609,628,1.826,629,3.56,630,1.23,631,2.609,632,2.998,633,1.297,634,2.124,635,1.377,636,2.124,637,1.874,638,1.981,639,2.124,640,1.604,641,1.874,642,1.874,643,1.604,644,1.514,645,1.874,646,1.12]],["t/1248",[0,0.173,592,2.658,593,3.122,594,2.285]],["t/1251",[240,6.553,354,3.627,474,5.043,519,2.621,534,4.469]],["t/1254",[0,0.174,101,1.326,240,2.004,275,1.897,333,0.95,334,1.603,347,1.206,422,2.628,474,3.68,511,2.517,519,2.487,552,2.469,558,2.019,559,2.004,560,1.933,561,1.871,562,1.871,563,1.871,572,1.271,573,1.606,627,1.816,628,1.271,644,1.766,668,1.411,703,1.766,783,4.044,784,1.641,785,2.186,786,2.186]],["t/1256",[0,0.167,72,3.324,275,3.562,474,4.726,519,2.456,600,3.605]],["t/1258",[0,0.174,592,2.466,593,2.896,594,2.12]],["t/1260",[0,0.13,88,2.268,101,3.443,166,5.999,187,4.714,204,6.835,345,2.442,449,3.092,457,4.585,510,4.585,514,3.856,535,3.856,543,4.477,556,4.36,594,2.726,647,5.018,648,5.675,649,5.675,650,5.417,651,5.202,652,5.675,653,5.018,654,5.675,655,5.675,656,5.675,657,4.857,658,6.432,659,6.432,660,6.432,661,5.675,662,5.675,663,5.417,664,5.675]],["t/1262",[0,0.148,72,3.46,101,4.231,452,6.974,594,3.35,665,6.974,666,7.904]],["t/1264",[0,0.172,72,3.288,73,1.821,78,1.375,92,3.866,101,1.249,193,1.762,266,4.181,298,1.621,333,1.476,334,1.204,341,1.351,342,1.181,345,1.462,360,1.482,367,2.059,422,1.197,449,1.122,472,3.004,474,4.228,478,1.966,479,1.966,491,1.268,514,1.399,515,1.329,519,0.755,527,2.675,528,2.059,535,1.399,539,1.888,546,1.821,550,1.71,558,3.589,563,2.907,574,2.423,577,2.886,589,1.425,591,1.632,594,0.989,600,1.108,603,2.157,626,1.308,630,2.845,646,1.231,647,1.821,667,1.888,668,2.192,669,5.494,670,4.337,671,2.059,672,1.966,673,1.888,674,5.319,675,2.059,676,2.059,677,1.582,678,2.059,679,2.334,680,2.334,681,2.334,682,2.334,683,1.453,684,4.915,685,2.334,686,2.177,687,2.334,688,1.888,689,2.334,690,6.073,691,5.703,692,5.703,693,6.311,694,3.591,695,3.85,696,1.888,697,2.334,698,2.334,699,2.059,700,2.059,701,2.177,702,1.453]],["t/1266",[0,0.162,92,4.39,144,5.453,320,3.322,345,2.458,355,4.745,449,3.112,451,4.889,515,4.641,535,3.882,578,4.29,591,2.744,594,2.744,603,4.566,657,4.889,703,5.809,704,5.453,705,5.237,706,6.475,707,5.713,708,6.475,709,6.475,710,5.713,711,4.889,712,4.745]],["t/1268",[0,0.162,277,6.615,321,4.106,345,2.692,449,3.409,451,5.355,461,4.038,591,3.006,683,4.414,713,7.092,714,4.252,715,4.597,716,5.198,717,7.092,718,5.533,719,5.736,720,7.092]],["t/1270",[0,0.156,334,2.252,354,3.222,449,3.46,506,3.97,527,5,556,4.88,591,3.051,628,3.693,721,5.822,722,6.062,723,4.769,724,4.769,725,7.198,726,7.198,727,7.198,728,4.57]],["t/1272",[0,0.169,1,4.922,88,2.299,309,4.226,345,2.475,369,5.752,449,3.133,535,3.908,544,3.774,561,4.922,565,3.98,591,2.763,594,2.763,656,5.752,696,5.272,711,4.922,712,4.777,729,5.086,730,5.752,731,6.519]],["t/1274",[0,0.166,11,3.561,88,2.346,187,4.876,327,3.084,362,4.51,449,3.198,517,4.876,578,4.408,591,2.82,678,5.871,723,4.408,724,4.408,732,6.653,733,6.205,734,6.653,735,8.29,736,5.19,737,4.408,738,4.313,739,6.653]],["t/1276",[0,0.172,88,2.14,362,4.114,449,2.917,544,3.513,577,3.071,591,2.572,714,4.688,740,6.069]],["t/1278",[0,0.174,72,0.245,75,0.471,266,0.37,308,0.452,334,0.175,335,0.304,336,0.245,342,0.283,345,0.404,354,0.25,355,0.41,461,0.318,506,0.308,523,0.379,535,0.638,539,0.452,565,0.341,600,0.265,622,0.276,624,0.759,688,0.452,703,0.399,704,0.471,729,0.436,741,0.436,742,0.362,743,0.559,744,0.452,745,0.436,746,0.522,747,0.559,748,0.399,749,0.379,750,0.341,751,0.341,752,0.399,753,0.471,754,0.436]],["t/1280",[0,0.166,57,4.447,72,3.128,187,5.236,530,5.574,567,5.779,603,4.853,622,3.522,668,4.068,671,6.304,672,6.017,755,7.145]],["t/1282",[0,0.162,57,4.057,88,2.299,101,3.489,103,4.647,104,5.752,345,2.475,514,3.908,543,3.596,565,3.98,594,2.763,652,5.752,654,5.752,655,5.752,688,5.272,710,5.752,716,4.777,736,5.086,737,4.319,756,4.922,757,6.519,758,6.519,759,6.519,760,6.519,761,6.519,762,6.519,763,4.922]],["t/1285",[320,3.485,333,2.604,345,2.579,354,3.041,506,3.747,519,2.716,525,4.228,526,3.349,553,3.868,556,4.605,622,3.349,626,3.806,628,3.485,662,5.994,714,5.034,715,4.404,764,5.994,765,6.793,766,6.336,767,6.793,768,5.3,769,5.994,770,5.722,771,6.793,772,3.636,773,4.605]],["t/1288",[0,0.173,92,1.747,101,2.234,113,2.01,275,1.208,298,1.79,327,1.194,334,1.646,347,2.032,353,1.79,422,3.104,449,2.006,457,1.836,459,2.17,504,2.084,511,1.603,519,2.424,525,3.275,526,2.058,553,1.467,554,2.976,558,1.287,559,2.084,560,2.01,561,1.945,562,1.945,563,1.945,564,1.67,568,3.559,569,2.273,576,1.836,577,3.063,601,2.273,603,1.444,605,1.444,609,1.603,635,2.706,643,1.945,644,1.836,645,2.273,646,1.359,714,1.544,715,1.67,721,3.376,769,2.273,774,3.411,775,3.683,776,2.576,777,2.273,778,3.257,779,2.576]],["t/1290",[0,0.173,526,3.133,568,2.393,574,3.133,575,2.838,602,3.03,620,2.68,621,3.944,754,3.487,780,4.47,781,4.47,782,3.765]],["t/1292",[0,0.173]],["t/1294",[0,0.173,35,2.31,519,1.687,552,3.186,577,2.641,592,2.572,593,3.021,594,2.211,764,4.604]],["t/1296",[519,2.643,584,6.375,622,4.028,830,7.621]],["t/1298",[0,0.109,88,2.396,298,4.719,309,4.404,320,4.308,341,3.933,348,3.306,354,3.041,360,4.313,519,3.08,552,4.148,604,3.806,619,5.494,622,4.494,787,4.501,789,4.404,791,5.494,792,5.494,795,5.722,831,8.398,832,6.336]],["t/1301",[0,0.166,330,5.248,348,3.583,351,5.395,361,6.201,591,3.12,784,4.878,789,4.772,793,5.744,833,6.867]],["t/1303",[0,0.174]],["t/1306",[0,0.172]],["t/1308",[0,0.173,72,2.417,73,2.876,78,3.252,275,1.729,300,2.783,333,1.413,334,1.727,354,1.65,360,2.34,413,3.438,466,2.981,519,2.141,552,2.251,558,2.757,592,1.817,600,1.75,622,3.263,624,2.628,644,2.628,668,2.099,792,5.354,818,2.389,834,3.252,835,2.499,836,3.686,837,4.65,838,3.252,839,3.686]],["t/1310",[0,0.174,275,2.231,622,2.344,640,3.591,791,3.846]],["t/1312",[0,0.173,88,1.792,333,2.663,334,1.589,350,3.225,600,2.412,840,5.08,841,5.08]],["t/1314",[0,0.17,275,3.376,511,4.48,570,3.97,784,4.769,789,4.666]],["t/1316",[0,0.174,592,1.845,593,2.167,594,1.586]],["t/1319",[275,3.619,354,3.454,519,2.932,622,4.47,742,5.001,787,5.111,788,8,789,5.001]],["t/1322",[0,0.174,72,1.569,334,0.478,341,1.552,519,1.587,558,1.339,605,0.856,622,2.419,627,1.119,677,1.035,703,1.088,778,2.092,788,1.347,789,1.738,790,1.191,791,1.235,792,2.169,793,1.191,794,1.286,795,1.286]],["t/1324",[0,0.173,72,2.835,558,3.234,622,3.192]],["t/1326",[0,0.169,341,4.926,519,2.752,742,4.498,787,6.097,793,5.414,796,6.94,797,6.94]],["t/1328",[0,0.174,592,1.838,593,2.159,594,1.58]],["t/1331",[0,0.156,11,3.586,328,4.775,342,3.391,344,4.091,345,2.543,348,3.261,354,2.999,519,3.065,526,3.303,558,3.346,578,5.516,715,4.343,742,4.343,787,4.438,798,5.911,799,6.699,800,6.248,801,7.765,802,6.699,803,5.911]],["t/1334",[0,0.174,72,0.982,275,1.747,327,1.039,341,2.156,519,2.39,521,1.12,552,2.274,572,1.15,573,2.414,605,1.256,627,1.643,644,1.598,703,1.598,785,1.978,786,1.978,787,1.485,790,2.906,794,1.888,804,2.242]],["t/1336",[0,0.174,72,1.494,88,1.204,101,1.827,334,1.068,519,1.685,578,2.261,600,1.62]],["t/1338",[0,0.172,341,4.546,451,4.611,519,2.54,742,3.959,787,5.75,805,4.611]],["t/1340",[0,0.174,592,1.556,593,1.828,594,1.338]],["t/1343",[0,0.172,16,4.686,18,2.508,21,3.341,58,4.135,320,2.404,327,2.172,474,2.917,476,2.76,491,2.546,562,3.539,590,3.539,591,1.986,626,2.626,628,2.404,630,2.713,657,3.539,673,3.79,728,5.223,774,3.038,835,4.455,848,3.341,851,3.742,852,3.79,854,3.341,858,4.135,1097,5.165,1098,4.686,1099,4.135,1100,3.539,1101,5.165,1102,4.371,1103,5.165,1104,4.371]],["t/1346",[0,0.174,591,2.199,853,4.049]],["t/1348",[0,0.142,354,3.321,476,4.369,477,4.224,594,3.144,603,4.157,673,6,728,4.71,859,6.919,915,6,1043,6.248,1099,6.546,1105,7.419,1106,6.248,1107,7.419]],["t/1350",[0,0.173,591,2.494,853,4.59]],["t/1352",[0,0.163,237,5.248,341,4.262,637,6.496,668,4.192,673,5.955,722,6.201,728,4.674,915,5.955,1099,6.496,1108,8.115,1109,8.115]],["t/1354",[0,0.173,591,2.588,853,4.764]],["t/1356",[0,0.156,21,5.169,237,5.169,288,5.315,348,3.53,476,4.271,594,3.074,603,4.063,668,4.129,673,5.865,728,4.604,835,4.916,858,6.399,926,4.347,1099,6.399,1106,6.108]],["t/1358",[0,0.166,21,4,58,4.951,237,4,288,4.112,341,3.248,410,4.726,460,5.611,476,3.305,477,3.195,491,3.048,594,2.378,603,3.144,628,2.878,630,3.248,637,4.951,668,4.231,728,6.018,774,3.637,835,3.804,851,4.743,858,6.556,892,4.726,915,4.538,926,3.364,1100,4.237,1102,5.233,1105,5.611,1106,4.726,1107,5.611,1110,5.611,1111,6.184,1112,6.184,1113,4.538,1114,6.184]],["t/1360",[0,0.167,21,4.647,348,3.173,457,4.647,491,3.541,577,3.299,578,4.319,603,3.652,604,3.652,628,3.344,650,5.49,653,5.086,669,5.272,728,5.68,754,5.086,851,3.712,1087,5.752,1113,5.272,1115,6.08,1116,7.185,1117,7.185]],["t/1363",[0,0.129,88,2.834,421,6.269,589,4.906,1031,7.494,1118,8.857]],["t/1365",[0,0.163,35,3.443,334,2.433,347,3.785,364,5.872,630,4.502]],["t/1367",[0,0.169,35,3.49,88,2.781,116,5.732,199,5.778,255,5.176,275,2.883,347,2.991,410,5.176,589,3.753,600,2.918,626,3.444,633,3.753,668,3.499,702,3.825,723,5.224,724,5.224,772,3.29,967,6.146,988,4.795,1119,6.146]],["t/1369",[0,0.15,80,5.169,88,2.558,103,5.169,254,7.252,317,6.399,334,2.734,342,3.67,477,4.129,514,4.347,565,4.428,577,3.67,665,6.399,756,5.476,1064,6.764,1120,7.993]],["t/1371",[0,0.172,11,2.338,24,4.075,35,1.934,88,1.541,333,2.397,334,1.956,336,1.913,345,1.659,347,3.043,348,2.126,469,2.894,565,2.668,604,2.448,628,3.746,770,5.266,833,4.075,854,4.457,892,3.68,896,3.299,898,4.878,902,4.582,926,2.619,939,3.68,987,3.855,988,4.878,1121,4.369,1122,4.815,1123,6.892,1124,4.815,1125,5.057,1126,4.369,1127,4.075,1128,4.815]],["t/1373",[0,0.145,35,2.966,275,3.142,320,3.437,364,6.287,477,3.815,632,5.642,646,3.534,647,5.226,657,5.059,898,5.226,915,5.418,939,7.012,970,6.699,983,5.911,988,5.226,1129,7.384,1130,7.384,1131,7.384,1132,6.699,1133,7.384,1134,6.699,1135,7.384,1136,7.384,1137,7.384,1138,6.699]],["t/1375",[0,0.172,318,5.956,416,4.246,437,4.038,521,2.975,550,4.365,719,4.818,750,3.637,806,5.956,807,6.818,809,5.555,872,5.256,880,4.818,1100,4.498,1139,6.818,1140,6.565,1141,6.565]],["t/1377",[0,0.158,88,2.657,207,5.689,430,7.534,558,3.763,630,4.362,635,4.884,893,7.534,915,6.094,963,7.027,1142,8.305]],["t/1379",[0,0.171,113,5.414,630,4.926,635,4.498,669,5.613,865,6.94,1102,6.472]],["t/1381",[0,0.164,327,3.52,565,4.637,898,5.924,1125,6.142,1143,8.37,1144,8.37,1145,8.37]],["t/1383",[0,0.171,339,6.039,354,2.899,422,3.322,427,6.475,462,5.713,480,4.29,745,6.358,923,6.039,986,5.713,1146,6.039,1147,7.137,1148,7.137,1149,7.137]],["t/1386",[0,0.164,333,3.202,343,6.956,345,3.171,416,4.023,521,3.725,600,3.541,602,3.826,650,4.753,722,4.753,737,4.941,812,5.644,851,3.214,852,4.565,854,4.023,861,6.757,872,4.98,928,4.98,1061,4.565,1072,4.565,1134,5.644,1150,6.221,1151,6.221,1152,6.221,1153,5.644,1154,6.221,1155,6.221,1156,6.221,1157,6.221,1158,6.221,1159,8.221,1160,5.644,1161,6.221,1162,6.221]],["t/1389",[0,0.147,11,2.461,18,2.461,35,2.035,72,2.013,88,1.621,103,3.277,283,4.597,284,4.597,320,2.358,333,1.762,345,1.745,350,4.768,476,2.708,477,2.618,480,6.076,500,3.587,514,2.756,515,2.618,521,2.296,566,3.046,570,3.576,571,6.047,577,2.327,582,6.597,600,3.078,603,4.208,605,2.576,626,4.208,630,3.753,633,4.98,646,3.962,677,3.117,702,4.674,723,4.295,724,4.295,728,2.919,848,4.622,854,3.277,880,3.718,913,4.057,926,4.502,1025,4.597,1055,4.288,1075,4.057,1087,4.057,1121,4.597,1163,5.721,1164,3.718,1165,2.807,1166,5.067,1167,5.067,1168,4.057,1169,5.244,1170,4.057,1171,4.288,1172,5.067]],["t/1391",[0,0.164,88,2.52,350,5.499,480,5.738,514,4.283,630,5.014,633,4.363,635,5.614,848,5.093,906,6.017,1173,7.875]],["t/1393",[0,0.173]],["t/1395",[0,0.171,35,2.929,73,3.692,144,3.986,173,3.986,228,4.414,320,2.428,333,1.814,345,2.512,347,2.303,350,4.201,473,3.827,480,4.384,491,3.595,557,3.068,600,3.141,603,4.275,630,3.831,633,5.044,772,2.533,888,6.616,898,3.692,926,2.837,1041,4.176,1163,4.176,1174,5.216,1175,8.261,1176,5.216,1177,5.838]],["t/1398",[0,0.174]],["t/1400",[0,0.173,11,2.691,327,2.33,328,3.584,333,1.927,626,2.817,627,3.684,628,2.579,702,3.129,723,4.571,724,4.571,784,3.331,1168,6.088,1178,5.541,1179,5.541,1180,4.234]],["t/1402",[0,0.174,344,2.862,646,3.467,683,4.09]],["t/1404",[0,0.119,338,4.295,410,6.248,548,6.919,594,3.144,600,3.522,646,3.914,661,6.546,835,5.029,1181,8.177,1182,8.177,1183,8.177,1184,8.177,1185,8.177,1186,7.419,1187,8.177]],["t/1406",[0,0.157,11,3.611,225,6.292,320,4.289,334,2.616,365,5.682,506,3.721,538,5.953,580,5.094,582,5.456,605,3.78,648,5.953,653,5.263,723,4.469,724,4.469,851,3.841,923,6.292,934,5.682,1138,6.746,1163,7.378,1188,5.682,1189,7.436]],["t/1409",[0,0.155,11,3.824,18,3.824,35,3.163,56,3.769,207,5.395,327,3.312,335,3.882,354,3.199,683,4.447,719,5.779,728,4.536,851,4.068,992,6.304,1164,5.779,1190,6.304,1191,7.875,1192,5.236]],["t/1411",[0,0.166]],["t/1414",[0,0.173,18,2.919,333,2.09,334,1.706,422,2.797,521,2.723,567,4.41,591,2.311,600,2.589,668,3.105,683,3.394,856,4.254,899,5.896,1193,4.592,1194,5.453]],["t/1416",[0,0.173,521,2.754,591,3.113,899,5.941,1034,5.144,1193,4.645,1194,5.515]],["t/1418",[0,0.173,35,2.105,335,4.156,354,2.129,422,3.406,521,2.375,553,2.708,591,2.814,1192,5.606,1193,4.005,1195,5.242,1196,7.318]],["t/1420",[0,0.173,354,2.618,521,2.921,591,3.236,719,4.73,1193,4.926]],["t/1422",[0,0.173,24,5.264,355,4.136,521,2.819,591,3.161,822,4.753,1197,6.221,1198,5.644]],["t/1424",[0,0.173,349,5.92,467,3.922,521,2.957,591,3.262,683,3.684,728,3.759,899,4.788,1017,5.92]],["t/1427",[0,0.172,266,4.904,333,2.138,334,2.315,336,2.442,383,3.977,591,2.364,683,3.472,728,5.273,896,4.212,899,4.512,1030,4.212,1193,4.698,1199,6.149]],["t/1429",[0,0.144,18,4.065,199,5.565,476,4.472,589,4.637,590,5.734,728,4.821,1015,6.395,1190,6.7,1200,8.37,1201,8.37,1202,8.37]],["t/1431",[0,0.135,35,3.029,78,4.029,101,3.662,103,4.877,288,5.014,335,3.717,337,5.762,354,4.094,438,6.037,491,3.717,505,5.533,630,3.961,631,5.014,650,5.762,683,4.258,719,5.533,746,6.381,763,5.166,854,4.877,1190,6.037,1192,5.014,1203,6.037,1204,5.337]],["t/1434",[0,0.173,11,1.544,35,1.277,56,1.521,101,1.544,113,3.564,193,2.177,309,1.869,321,1.669,327,2.118,333,1.105,334,1.429,336,1.262,345,2.451,347,1.404,354,1.291,414,3.564,461,3.231,469,1.911,493,2.69,506,1.591,523,1.955,534,1.591,544,1.669,557,1.869,558,1.44,565,1.761,572,1.479,573,1.869,574,1.422,575,1.831,577,2.312,609,3.532,620,2.739,626,2.56,630,1.669,635,1.869,677,1.955,702,1.795,738,2.962,744,2.332,748,4.045,749,3.847,750,1.761,772,2.446,775,2.544,818,1.869,855,2.25,922,2.332,926,1.729,939,3.848,943,1.911,944,2.332,983,2.544,1036,2.884,1037,4.032,1038,2.884,1039,2.884,1040,2.177,1041,2.544,1042,2.544,1043,2.429,1044,2.884,1045,2.332,1046,2.884,1047,2.884]],["t/1437",[0,0.173,78,2.964,84,1.828,320,1.674,344,4.813,347,2.449,364,2.464,486,2.639,564,3.262,574,1.609,604,2.82,622,1.609,633,3.073,640,4.639,750,4.813,818,3.982,855,3.926,880,4.07,895,3.043,919,3.043,922,2.639,1016,2.639,1048,3.043,1049,3.263,1050,5.033,1051,5.033,1052,3.263,1053,3.263,1054,3.263]],["t/1439",[0,0.173,51,2.223,57,2.65,80,1.882,266,1.749,336,1.156,345,1.002,347,1.285,354,1.182,461,2.424,469,1.749,481,2.059,499,3.716,529,1.993,572,1.354,574,1.301,577,1.336,600,1.253,609,1.643,620,1.582,626,2.385,628,1.354,640,1.993,667,3.443,690,4.174,702,1.643,711,1.993,712,1.934,738,2.76,748,3.035,749,4.161,750,3.748,752,1.882,772,1.413,773,1.79,896,1.993,920,3.585,943,1.749,959,5.084,1037,3.756,1040,1.993,1045,2.135,1055,2.462,1056,2.64,1057,2.64,1058,2.135,1059,2.223,1060,2.223,1061,2.135]],["t/1441",[0,0.174,84,1.182,92,1.43,345,0.801,347,1.027,354,2.048,461,1.201,469,1.398,483,1.968,499,1.466,506,1.164,515,1.201,572,1.082,575,2.904,589,1.288,609,3.333,617,1.862,618,1.777,620,2.742,626,1.984,646,2.413,647,1.646,702,2.203,705,1.706,711,1.593,712,1.546,714,3.211,729,1.646,738,1.368,748,1.504,749,1.43,750,1.288,751,2.162,752,1.504,772,1.895,773,2.4,824,1.968,900,1.43,926,1.265,933,1.968,943,1.398,958,5.026,975,1.777,1040,1.593,1058,1.706,1062,2.11,1063,2.11,1064,1.968,1065,2.11,1066,2.11,1067,2.11,1068,2.11,1069,2.11,1070,2.11,1071,1.968,1072,2.863]],["t/1443",[0,0.174,11,0.481,35,0.735,56,0.474,57,0.559,60,0.793,72,1.482,74,0.658,92,0.609,94,0.793,101,0.481,173,0.757,199,0.658,207,0.678,266,1.535,321,1.341,333,0.344,335,4.068,336,1.264,342,0.455,344,0.549,345,0.631,347,0.809,350,1.055,354,2.189,355,1.698,364,0.678,414,0.701,421,0.701,422,0.461,449,0.432,457,0.64,459,0.757,461,1.319,469,0.595,474,0.559,479,0.757,494,0.757,514,0.539,527,0.624,529,1.254,531,1.399,534,0.916,535,1.73,543,0.916,555,0.678,558,1.911,564,0.582,572,0.461,574,0.819,576,0.64,577,1.461,589,1.014,591,1.223,600,0.789,609,1.034,619,0.727,620,0.539,622,0.443,626,1.298,630,1.341,646,0.474,649,0.793,651,0.727,664,0.793,667,0.727,669,1.344,670,0.793,675,1.466,676,1.466,696,0.727,699,1.466,702,0.559,705,0.727,714,0.996,738,2.195,750,0.549,751,1.014,752,0.64,770,2.431,772,0.481,773,0.609,798,0.793,805,1.254,900,0.609,926,0.996,932,0.701,975,0.757,987,0.793,1009,0.757,1032,0.757,1040,0.678,1042,0.793,1045,1.874,1058,0.727,1059,0.757,1073,2.987,1074,0.793,1075,0.793,1076,0.898,1077,0.898,1078,1.661,1079,0.898,1080,0.898,1081,0.898,1082,1.661,1083,0.898,1084,0.898,1085,0.898,1086,1.661,1087,2.044,1088,0.898,1089,0.838,1090,0.898,1091,2.886,1092,0.898,1093,0.898,1094,0.898,1095,2.317,1096,0.898]],["t/1446",[0,0.139,18,3.824,35,3.163,88,2.52,354,3.199,461,4.068,515,4.068,626,4.003,628,3.665,702,4.447,723,4.734,724,4.734,851,4.068,864,7.038,913,6.304,1030,5.395,1164,5.779,1168,6.304]],["t/1448",[0,0.168]],["t/1450",[0,0.174]],["t/1452",[0,0.17,35,1.516,73,7.683,88,1.842,126,6.331,309,2.22,327,1.587,328,2.441,352,3.194,353,4.397,356,5.964,374,3.425,500,5.948,504,5.727,532,4.399,602,2.322,630,1.983,638,5.904,672,2.885,686,3.194,715,2.22,721,5.12,723,3.46,724,3.46,777,3.022,793,2.672,864,2.586,869,3.425,925,3.194,992,3.022,1010,3.425,1106,4.399,1168,3.022,1180,4.399,1205,3.775,1206,8.856,1207,3.775,1208,3.775,1209,6.978,1210,5.757,1211,5.757,1212,5.757,1213,3.775,1214,3.775,1215,3.775,1216,3.775,1217,3.425,1218,3.775,1219,8.403,1220,3.775,1221,3.775]],["t/1454",[0,0.173,333,2.163,353,3.92,461,3.214,818,3.658,864,5.632,900,3.826,1030,4.262]],["t/1456",[0,0.172,88,2.253,557,4.142,626,3.58,635,4.142,702,3.977,864,4.825,1222,7.043,1223,7.043,1224,6.389]],["t/1458",[0,0.172]],["t/1460",[0,0.158,18,3.715,88,2.448,333,2.66,457,4.947,476,4.087,477,3.951,515,3.951,517,5.086,540,6.123,557,4.498,625,6.472,628,3.56,683,4.319,864,6.425,899,5.613,934,5.845,1139,6.123,1171,6.472,1203,6.123]],["t/1463",[0,0.16,11,2.87,72,3.156,74,5.283,88,2.542,288,3.93,306,4.731,333,2.055,345,2.036,416,3.822,420,4.183,477,4.104,491,2.913,557,3.476,558,2.678,577,3.648,584,5.624,597,4.516,628,2.751,630,4.173,674,5.001,723,3.552,724,3.552,774,3.476,816,5.001,830,5.001,851,3.053,856,4.183,884,7.208,978,5.362,1030,4.049,1139,4.731,1169,5.83,1170,4.731,1204,4.183,1224,5.362,1225,5.362,1226,5.91,1227,5.91,1228,7.945,1229,5.91,1230,5.362,1231,5.91,1232,5.362,1233,5.91,1234,5.91,1235,5.91]],["t/1466",[0,0.172,1169,6.882,1170,6.123]],["t/1468",[0,0.172]],["t/1470",[0,0.172,72,3.586,88,1.637,207,4.929,266,4.324,275,2.177,333,2.894,345,2.478,461,2.643,558,3.771,628,2.381,1030,5.701,1073,5.759,1139,5.759,1169,3.754,1170,4.095,1236,4.641,1237,5.116,1238,5.116,1239,5.116]],["t/1472",[0,0.172]],["t/1474",[0,0.173]],["t/1477",[0,0.171]],["t/1479",[0,0.173,266,3.898,1030,4.443,1169,4.759]],["t/1482",[0,0.173]],["t/1484",[0,0.158,72,3.299,722,6.346,774,4.884,851,4.29,1113,6.094,1169,6.094,1188,7.53,1240,8.305,1241,7.027]],["t/1487",[0,0.17,334,2.303,506,4.061,1242,8.115,1243,7.362]],["t/1489",[0,0.173]],["t/1492",[0,0.174]],["t/1494",[0,0.159,21,4.775,74,6.101,88,2.363,334,2.834,364,5.059,506,3.695,577,4.213,600,3.181,603,3.754,622,3.303,723,4.438,724,5.516,892,5.642,909,5.642,1073,5.911,1244,7.384,1245,7.384,1246,6.248,1247,7.384]],["t/1496",[0,0.174,35,1.429,72,2.671,74,1.386,88,1.489,173,1.593,207,1.428,265,1.891,321,1.868,327,1.957,333,1.618,345,1.225,347,0.92,348,0.92,420,1.475,422,2.165,480,2.138,491,1.027,506,2.328,515,1.077,558,2.798,570,1.043,577,0.957,591,0.802,600,2.004,605,2.365,626,1.808,628,1.656,630,1.868,633,1.155,646,2.632,668,1.838,677,1.282,702,2.009,728,1.201,784,2.138,789,1.226,795,1.593,842,1.428,910,1.669,1041,1.669,1236,1.891,1243,4.221,1246,3.937,1248,2.084,1249,1.593,1250,2.084,1251,2.084,1252,2.084,1253,2.084,1254,2.084]],["t/1499",[0,0.13,11,3.443,35,2.847,56,4.282,321,3.724,327,2.981,335,3.494,351,4.714,477,3.662,524,4.163,536,4.857,543,3.548,557,4.169,570,3.548,602,4.36,701,5.999,716,4.714,741,5.018,1009,5.417,1022,4.261,1075,5.675,1165,4.955,1255,7.089,1256,7.161,1257,7.089,1258,6.432,1259,6.432,1260,7.089,1261,6.432,1262,6.432,1263,6.432]],["t/1501",[0,0.163,35,2.484,75,4.726,78,3.305,84,3.144,88,1.979,270,5.233,300,4.237,320,3.812,321,4.823,334,1.755,335,4.817,336,2.456,351,4.112,517,4.112,521,2.802,524,2.878,536,4.237,543,3.095,557,3.637,566,3.717,572,2.878,602,5.647,635,3.637,677,6.011,716,4.112,778,4.377,856,4.377,1022,3.717,1104,5.233,1256,7.824,1264,6.184,1265,5.233]],["t/1504",[0,0.169,35,3.186,321,4.167,335,3.91,550,5.275,572,3.693,1256,6.351,1265,6.713]],["t/1506",[0,0.17,35,3.117,88,2.483,215,5.93,336,3.082,351,5.16,677,4.773,1022,4.665]],["t/1508",[0,0.171,4,2.532,11,3.121,18,2.123,35,1.756,43,1.741,71,1.741,78,2.781,84,0.976,88,2.204,99,2.804,119,1.741,167,4.404,215,2.532,300,4.025,309,1.129,320,2.035,321,1.008,327,0.807,334,1.241,335,2.565,336,0.762,342,0.881,345,0.661,348,3.215,350,2.519,351,3.46,354,0.78,416,2.828,421,1.358,450,3.967,472,1.358,481,2.345,490,1.536,491,1.633,504,1.408,514,1.044,517,1.276,519,0.563,521,1.981,522,1.276,524,2.035,526,1.482,527,3.28,533,1.624,534,1.658,536,3.565,537,1.624,543,3.813,557,2.572,558,1.502,566,1.992,570,0.961,572,0.893,582,1.408,605,3.267,622,2.328,628,1.542,635,1.129,651,2.432,677,2.689,683,1.084,718,1.358,784,1.154,837,2.532,851,1.712,853,2.345,870,1.21,873,1.741,891,1.536,900,2.689,943,1.154,954,3.7,965,1.741,1016,4.311,1022,4.141,1032,3.977,1072,2.432,1126,1.741,1127,1.624,1132,3.006,1165,4.034,1177,1.536,1190,1.536,1256,3.501,1259,1.741,1265,2.804,1266,6.447,1267,1.919,1268,1.741,1269,8.602,1270,1.919,1271,2.653,1272,4.373,1273,6.426,1274,1.919,1275,1.919,1276,1.919,1277,3.314,1278,1.919,1279,1.919,1280,3.314,1281,1.919,1282,1.919,1283,3.314,1284,5.875,1285,1.919,1286,1.919,1287,1.919,1288,1.919,1289,4.373,1290,1.919,1291,1.919,1292,1.741,1293,1.741]],["t/1511",[0,0.171,215,6.43,320,3,333,2.242,334,1.83,345,2.22,348,2.847,536,4.416,543,4.689,572,3,737,3.875,900,3.965,1016,4.73,1160,7.635,1165,3.571,1294,8.416,1295,6.446,1296,6.446,1297,6.446]],["t/1513",[0,0.134,18,3.586,35,2.966,56,3.534,72,2.933,77,5.226,103,4.775,204,5.642,246,6.248,333,2.568,334,2.096,351,4.91,383,4.775,524,3.437,566,4.438,570,3.695,584,5.226,741,5.226,948,6.248,1009,5.642,1022,4.438,1089,6.248,1164,5.418,1298,6.699,1299,7.384,1300,7.384,1301,7.346,1302,7.384]],["t/1515",[35,3.259,88,2.597,308,5.955,320,3.777,333,2.822,383,5.248,506,4.061,543,4.061,570,4.061,704,6.201,763,5.559,805,5.559,861,5.955,1022,4.878,1165,4.495,1303,8.115,1304,8.115]],["t/1517",[0,0.12,35,3.31,78,4.403,333,2.865,334,2.339,348,3.639,383,5.329,491,4.062,521,3.734,741,5.833,851,4.257,861,6.047,1165,4.565,1241,6.973,1305,8.24]],["t/1519",[0,0.158,11,2.545,18,2.545,56,2.509,78,2.801,84,2.665,86,4.435,88,1.677,99,4.435,167,4.435,199,3.485,225,4.435,228,4.435,237,4.733,300,3.591,327,2.204,334,1.488,336,2.082,357,4.756,383,3.39,409,4.756,416,3.39,421,3.71,474,4.132,477,2.708,491,3.607,494,4.005,499,4.612,505,3.846,522,3.485,524,3.924,536,5.013,541,4.435,566,3.151,589,2.904,590,3.591,605,2.665,623,4.435,653,3.71,737,3.151,741,3.71,838,4.196,926,2.851,943,3.151,954,4.435,1016,5.37,1022,4.399,1032,4.005,1072,3.846,1106,5.592,1165,2.904,1246,4.435,1262,4.756,1266,4.435,1268,4.756,1301,4.196,1306,5.37,1307,5.242,1308,4.435,1309,6.749,1310,8.431,1311,5.242,1312,4.756,1313,5.242]],["t/1521",[0,0.093,11,4.071,18,3.112,30,4.896,35,3.367,56,4.012,57,3.618,88,2.05,103,5.421,204,4.896,246,5.422,321,3.366,327,2.694,330,4.144,333,2.228,334,1.819,351,4.26,362,3.941,383,4.144,494,4.896,524,2.982,535,3.485,543,3.207,584,4.535,591,2.464,653,4.535,741,7.014,754,4.535,756,4.39,763,4.39,805,4.39,822,4.896,1022,3.851,1164,4.702,1204,4.535,1263,5.813,1292,5.813,1301,5.129,1309,6.711,1314,6.408,1315,6.408,1316,6.408,1317,6.408,1318,6.408]],["t/1524",[0,0.161,56,3.085,199,4.286,345,2.899,348,2.847,462,5.161,524,3.917,525,3.64,536,5.765,544,3.386,556,3.965,566,3.875,618,4.926,716,4.286,737,3.875,751,4.662,859,7.121,1007,4.926,1060,4.926,1110,5.848,1113,4.73,1186,5.848,1306,6.175,1309,5.161,1319,6.446,1320,5.161,1321,5.848,1322,6.446,1323,5.848,1324,6.446,1325,6.446,1326,5.848,1327,5.848,1328,5.848,1329,6.446,1330,6.446,1331,6.446]],["t/1527",[0,0.174,348,1.497,437,4.012,519,1.555,552,1.878,554,2.193,570,1.697,572,1.578,643,2.323,718,3.751,750,3.613,752,2.193,753,2.591,768,2.4,772,2.573,778,2.4,790,2.4,1059,2.591,1061,3.888,1125,2.488,1306,3.888,1332,3.076,1333,5.519,1334,2.869]],["t/1529",[0,0.171,88,2.501,362,4.808,718,5.533]],["t/1532",[0,0.174,348,1.572,437,4.138,519,1.615,554,2.303,570,1.782,572,1.657,643,2.439,707,2.85,718,3.896,750,1.973,752,2.303,772,2.673,790,2.52,952,3.23,1061,4.039,1306,4.039,1332,3.23,1333,3.013,1334,3.013]],["t/1534",[0,0.173,88,1.934,334,1.715,362,4.961,707,4.839,738,3.555,1021,5.114,1022,3.633,1071,5.114,1335,6.044,1336,6.044,1337,4.618]],["t/1537",[0,0.173,609,3.512]],["t/1539",[0,0.173,604,3.038,609,4.52,738,3.515,1338,5.976]],["t/1541",[0,0.172,88,1.83,334,2.688,362,4.78,506,2.862,567,4.197,624,3.699,714,3.111,716,3.803,718,5.501,730,4.579,733,4.84,738,4.57,753,4.371,756,3.919,787,3.438,835,3.518,969,5.189,1163,4.579,1333,4.84,1337,5.938,1339,5.72,1340,5.189,1341,5.72,1342,5.189,1343,5.72]],["t/1543",[0,0.171,65,3.89,77,3.439,320,2.262,334,2.504,338,2.552,348,3.572,362,4.267,457,3.143,481,3.439,524,2.262,543,3.472,544,2.552,566,2.921,577,2.231,631,3.231,646,2.326,661,5.553,737,2.921,751,2.692,768,3.439,772,2.36,790,3.439,805,3.329,825,4.409,835,2.989,880,3.566,959,3.329,1013,4.112,1031,4.112,1061,3.566,1098,4.409,1165,2.692,1232,8.005,1306,5.936,1327,7.34,1328,4.409,1342,4.409,1344,4.112,1345,4.409,1346,4.859,1347,4.409,1348,4.859,1349,4.859,1350,4.859,1351,4.859,1352,4.859]],["t/1545",[0,0.167,88,1.87,193,5.403,217,5.303,237,3.78,345,2.013,348,2.581,462,4.679,512,4.289,519,2.804,525,4.453,534,2.925,544,4.142,545,4.679,558,2.649,564,3.438,566,3.514,580,4.004,597,4.466,809,4.946,838,4.679,909,4.466,910,4.679,963,4.946,1007,4.466,1022,3.514,1048,4.946,1113,4.289,1225,5.303,1266,4.946,1301,6.313,1309,4.679,1320,4.679,1321,5.303,1326,5.303,1353,5.845,1354,5.845,1355,5.845,1356,5.845,1357,5.845,1358,5.303,1359,7.886]],["t/1547",[0,0.161,17,4.789,18,2.748,72,3.064,80,3.66,334,2.19,345,1.949,348,3.407,362,3.481,367,4.53,452,4.53,508,4.789,519,2.576,534,2.832,544,2.972,555,3.877,578,3.402,586,4.789,589,3.135,590,3.877,594,2.176,597,4.324,651,4.153,736,4.006,772,2.748,774,3.328,851,2.923,891,4.53,928,4.53,943,3.402,986,4.53,1021,6.528,1022,3.402,1104,4.789,1113,4.153,1171,4.789,1188,4.324,1204,4.006,1230,5.134,1261,5.134,1306,4.153,1312,5.134,1323,5.134,1337,4.324,1340,7,1344,4.789,1347,7,1360,5.659,1361,5.134,1362,5.659,1363,5.659,1364,5.659,1365,5.659,1366,5.659,1367,5.659]],["t/1550",[0,0.162,11,3.611,35,2.986,88,2.379,103,4.809,320,3.461,327,3.127,333,2.586,336,2.953,337,5.682,338,4.841,508,6.292,736,5.263,751,4.119,768,5.263,1164,5.456,1165,5.105,1368,6.746,1369,7.436,1370,6.292,1371,7.436]],["t/1552",[0,0.168,101,3.662,103,4.877,152,5.762,270,6.381,305,6.841,334,2.14,338,3.961,510,4.877,985,6.037,1249,5.762,1293,6.841,1368,6.841,1372,7.541,1373,7.541,1374,7.541]],["t/1554",[327,3.171,338,5.676,345,2.597,521,3.417,543,3.774,565,4.177,624,4.877,737,4.533,803,7.442,816,6.381,835,4.638,1022,4.533,1034,6.381,1165,4.177,1249,5.762,1375,7.541,1376,7.541,1377,9.296,1378,7.541,1379,8.434]],["t/1557",[0,0.159]],["t/1559",[0,0.129,362,5.447,822,6.767,1380,8.857,1381,8.857,1382,8.857]],["t/1562",[0,0.163,84,4.625,116,6.163,335,3.59,336,3.614,338,3.825,420,5.155,421,5.155,464,5.83,524,4.234,572,4.234,602,4.48,683,4.112,772,3.537,886,6.608,898,5.155,1072,5.344,1119,6.608,1165,4.035,1383,5.155,1384,6.608]],["t/1564",[0,0.172,600,4.235,603,3.628,668,3.687,683,5.072,1385,7.137,1386,7.137,1387,7.137]],["t/1566",[0,0.169,333,3.38,572,3.777,602,4.991,668,4.192]],["t/1568",[0,0.169,35,2.4,152,6.117,215,6.117,328,3.865,335,2.946,336,3.829,480,3.592,515,3.087,573,3.515,592,2.673,602,3.676,633,3.311,646,2.861,772,2.902,777,4.784,782,4.567,828,4.385,870,3.766,896,4.094,921,5.057,947,5.057,959,4.094,988,6.824,1007,4.567,1146,5.057,1370,5.057,1383,5.666,1388,7.262,1389,5.976]],["t/1570",[0,0.17,335,3.256,339,7.235,345,2.275,348,2.917,383,4.272,592,2.955,594,2.54,602,4.063,605,3.358,745,4.676,772,4.604,782,5.048,988,6.052,1345,5.993,1383,7.53]],["t/1572",[0,0.17,328,4.775,330,4.775,480,4.438,592,3.303,603,3.754,828,6.733,984,5.911,1390,7.384,1391,7.384,1392,7.384,1393,7.384]],["t/1574",[0,0.173,35,1.126,84,1.425,333,0.974,334,0.795,336,1.113,338,1.472,342,1.287,383,1.812,449,1.222,512,3.34,566,1.684,591,1.078,592,2.571,603,1.425,631,1.863,633,3.184,635,2.677,754,1.984,800,2.371,828,2.056,870,2.869,891,2.243,984,2.243,990,2.542,1007,3.478,1165,1.552,1175,5.215,1180,5.057,1198,2.542,1217,2.542,1358,2.542,1388,2.542,1394,9.306,1395,2.802,1396,2.802,1397,2.802,1398,2.802,1399,4.13,1400,2.802,1401,2.802,1402,2.802,1403,2.802,1404,2.802,1405,2.802]],["t/1577",[0,0.171,84,3.352,88,1.449,320,3.069,333,2.293,334,1.871,335,3.25,336,2.619,338,4.767,342,2.08,345,1.56,414,3.206,416,2.929,521,2.052,524,4.663,550,3.011,557,2.664,592,2.026,641,5.278,668,2.34,683,2.557,716,3.011,751,3.653,772,3.202,818,2.664,856,3.206,870,2.854,944,3.323,959,3.103,992,5.278,1013,5.579,1165,3.653,1177,3.626,1192,4.384,1298,4.109,1361,4.109,1383,4.667,1384,4.109,1406,5.503,1407,4.529,1408,4.529]],["t/1579",[0,0.17,88,2.346,334,2.593,335,4.504,342,3.367,383,4.743,530,6.467,550,4.876,592,3.28,870,4.621,1165,4.062]],["t/1581",[0,0.174,184,2.954,591,1.342,604,2.755,628,1.625,955,4.586,1337,5.077,1383,4.703,1409,6.644,1410,6.028,1411,5.42]],["t/1583",[0,0.13,88,2.856,320,4.154,336,3.132,410,6.026,449,2.549,480,4.74,568,4.334,573,4.638,582,4.289,583,4.679,606,4.946,607,4.946,633,3.238,715,3.438,782,4.466,851,3.02,900,3.595,945,9.326,1002,5.303,1165,5.694,1258,5.303,1334,4.946,1337,6.026,1370,4.946,1383,7.061,1410,5.303,1412,7.886,1413,5.845,1414,8.925,1415,5.845,1416,5.845,1417,5.845,1418,7.886,1419,5.845,1420,5.845,1421,5.845]],["t/1585",[0,0.165,72,3.299,334,2.357,335,4.093,336,3.299,338,4.362,901,7.534,1422,8.305]],["t/1587",[0,0.166,334,2.303,335,4,338,4.262,354,3.296,543,4.061,803,7.782,1165,4.495,1344,6.867]],["t/1589",[0,0.174,550,3.723]],["t/1592",[0,0.167,333,2.888,337,6.346,338,4.362,594,3.193,624,5.371,1423,8.305]],["t/1594",[0,0.169,88,2.539,329,7.198,348,3.503,1165,4.395,1241,6.713,1424,7.934,1425,7.934]],["t/1596",[0,0.173,320,3.932,521,3.828,583,6.764,657,4.443,1426,6.485,1427,6.485,1428,6.485]],["t/1599",[0,0.162]],["t/1601",[0,0.132,334,2.578,934,6.94]],["t/1603",[338,4.771,591,3.493,1379,8.241]],["t/1606",[0,0.171,72,3.082,345,2.673,524,3.612,543,3.884,646,3.714,751,4.299]],["t/1608",[0,0.153,144,6.395,321,4.396,341,4.396,932,5.924,1014,7.594,1125,6.142,1383,5.924,1399,8.983,1429,8.37]],["t/1610",[0,0.17,1100,5.602,1204,5.788]],["t/1613",[0,0.164,18,4.437,35,2.945,56,3.51,188,6.205,327,3.084,336,2.913,472,5.19,510,4.743,515,3.788,535,3.988,543,3.67,580,5.024,646,3.51,742,4.313,848,5.909,1074,5.871,1100,5.024,1188,5.603,1203,5.871,1430,6.653]],["t/1615",[0,0.167,491,4.03,756,5.602,774,4.809,851,4.224,852,6,853,5.788,1431,7.419]],["t/1618",[0,0.164,18,4.437,35,2.945,56,3.51,188,6.205,327,3.084,336,2.913,472,5.19,510,4.743,515,3.788,535,3.988,543,3.67,580,5.024,646,3.51,742,4.313,848,5.909,1074,5.871,1100,5.024,1188,5.603,1203,5.871,1430,6.653]],["t/1620",[0,0.167,491,4.03,756,5.602,774,4.809,851,4.224,852,6,853,5.788,1431,7.419]],["t/1623",[0,0.172,524,4.289,870,4.686,1406,5.263]],["t/1625",[0,0.173,330,3.719,334,1.632,348,4.191,437,4.797,604,3.965,1432,4.604]],["t/1627",[0,0.173,336,2.779,437,4.303,524,3.256,570,3.501,1192,4.652]],["t/1629",[0,0.173,524,3.256,574,3.129,870,4.409,1125,5.134]],["t/1631",[0,0.173,330,3.458,348,3.763,437,4.564,1180,4.086,1432,4.28]],["t/1633",[0,0.17,187,4.475,334,1.91,348,2.972,455,5.696,505,6.351,510,5.597,515,3.477,524,3.133,534,3.369,573,3.959,580,5.929,591,2.588,926,3.661,1115,5.696,1320,5.389,1433,5.389,1434,5.696,1435,6.107]],["t/1635",[0,0.168,18,3.332,128,5.806,317,5.493,327,2.885,334,1.947,476,4.682,477,3.545,491,3.382,510,4.437,543,3.434,642,5.493,646,3.284,668,3.545,774,4.035,851,3.545,985,5.493,989,5.493,1015,5.243,1060,5.243,1249,5.243,1271,5.493,1308,5.806,1433,5.493,1436,6.225,1437,6.225]],["t/1637",[0,0.13,594,3.434,851,4.614,1100,6.118,1204,6.321]],["t/1640",[0,0.172,524,4.289,870,4.686,1406,5.263]],["t/1642",[0,0.173,330,3.719,334,1.632,348,4.191,437,4.797,604,3.965,1432,4.604]],["t/1644",[0,0.173,336,2.779,437,4.303,524,3.256,570,3.501,1192,4.652]],["t/1646",[0,0.173,524,3.256,574,3.129,870,4.409,1125,5.134]],["t/1648",[0,0.173,330,3.458,348,3.763,437,4.564,1180,4.086,1432,4.28]],["t/1650",[0,0.17,187,4.475,334,1.91,348,2.972,455,5.696,505,6.351,510,5.597,515,3.477,524,3.133,534,3.369,573,3.959,580,5.929,591,2.588,926,3.661,1115,5.696,1320,5.389,1433,5.389,1434,5.696,1435,6.107]],["t/1652",[0,0.168,18,3.332,128,5.806,317,5.493,327,2.885,334,1.947,476,4.682,477,3.545,491,3.382,510,4.437,543,3.434,642,5.493,646,3.284,668,3.545,774,4.035,851,3.545,985,5.493,989,5.493,1015,5.243,1060,5.243,1249,5.243,1271,5.493,1308,5.806,1433,5.493,1436,6.225,1437,6.225]],["t/1654",[0,0.13,594,3.434,851,4.614,1100,6.118,1204,6.321]],["t/1656",[0,0.119,368,6.919,473,7.165,524,4.545,1438,8.177,1439,8.859,1440,8.263,1441,8.859,1442,7.419,1443,6.919,1444,8.177]],["t/1658",[0,0.169,334,1.677,335,4.424,342,2.714,344,3.274,345,2.036,420,5.624,524,4.985,592,2.643,622,4.014,683,4.486,723,4.776,724,4.776,818,3.476,828,4.337,889,5.362,925,5.001,1030,4.049,1043,4.516,1271,4.731,1406,4.183,1443,7.595,1445,5.91,1446,5.91,1447,5.91,1448,5.362,1449,5.91]],["t/1661",[0,0.173,333,1.575,345,2.271,368,3.832,437,2.786,473,3.323,521,2.052,524,4.409,570,2.267,592,2.026,668,2.34,715,2.664,751,2.509,959,4.517,1177,5.278,1192,5.678,1406,4.667,1439,5.982,1440,5.579,1441,4.109,1442,4.109,1450,4.529,1451,4.109,1452,4.109]],["t/1662",[0,0.173,84,1.78,300,2.399,345,1.206,437,2.154,473,2.57,521,1.587,524,4.68,570,1.753,646,1.676,715,2.06,751,1.94,959,2.399,981,2.963,986,2.804,1043,2.676,1153,3.177,1192,5.962,1406,4.713,1440,2.963,1443,4.598,1448,3.177,1451,3.177,1452,3.177,1453,3.502]],["t/1664",[0,0.173,92,2.19,334,1.011,336,1.414,342,1.635,517,2.367,524,4.76,543,1.782,570,1.782,575,2.051,631,2.367,646,1.704,753,2.721,772,1.729,773,2.19,794,2.721,902,3.66,943,3.308,944,4.937,947,3.013,960,3.23,981,3.013,988,3.896,1127,3.013,1146,3.013,1192,5.998,1406,6.124,1434,4.657,1454,3.561,1455,3.561]]],"invertedIndex":[["",{"_index":0,"t":{"837":{"position":[[0,5],[6,2],[10,4],[17,1],[19,3],[23,4],[28,9],[38,1],[40,3],[44,3],[48,4],[53,5]]},"839":{"position":[[0,8],[9,2],[13,4],[20,1],[22,3],[26,4],[31,9],[41,1],[43,3],[47,3],[51,4],[56,5]]},"841":{"position":[[0,8],[9,2],[13,4],[20,3],[24,3],[28,4],[33,9],[43,1],[45,3],[49,3],[53,4],[58,5]]},"857":{"position":[[10,4],[20,7]]},"859":{"position":[[5,4],[11,1]]},"861":{"position":[[2,7],[12,9],[26,2],[32,4],[39,9],[53,2],[59,7],[67,3],[74,2],[80,4],[86,1],[88,8],[97,2],[101,2],[104,2],[107,2],[110,2],[113,8],[122,2],[126,3]]},"864":{"position":[[17,4],[26,2]]},"866":{"position":[[2,5],[8,4],[13,2],[16,4]]},"868":{"position":[[2,5],[8,2],[11,2],[14,4],[19,2],[22,3],[26,6],[37,4],[42,2],[45,3],[49,6]]},"871":{"position":[[16,6],[25,4]]},"873":{"position":[[2,8],[11,7]]},"875":{"position":[[3,2],[14,2],[26,7],[36,8],[45,2],[50,2],[57,8],[66,2],[70,2],[73,2],[76,2],[79,2],[82,2],[85,2]]},"880":{"position":[[2,8],[11,7],[19,11],[31,4]]},"882":{"position":[[0,5],[17,8]]},"884":{"position":[[0,4],[8,5],[15,5],[22,6],[34,5],[40,5],[46,8],[57,4],[64,3],[70,4],[77,6],[91,5],[98,8],[108,5],[117,3],[121,3],[125,1],[127,3],[131,3],[135,1],[137,3],[141,3],[145,1],[147,7],[160,8],[169,3],[175,1],[177,5],[185,1],[189,5],[197,3],[203,4],[210,7],[225,5],[231,3],[235,1],[237,5],[243,3],[247,1],[249,5],[255,3],[259,1]]},"889":{"position":[[2,9],[12,6],[20,5]]},"891":{"position":[[2,9],[13,1],[15,3],[19,3],[28,3],[32,1],[34,3],[38,1]]},"896":{"position":[[2,8],[11,5]]},"898":{"position":[[2,8],[11,3],[15,3],[19,1],[21,3],[25,1],[27,1],[29,3],[33,1],[36,4],[41,4],[47,4],[52,5],[58,1],[60,5],[79,8],[91,3],[95,3],[99,1],[109,8],[123,6],[132,8],[150,16],[150,4],[155,7],[163,3],[172,8],[183,8],[194,3],[200,4],[206,8],[218,8],[235,3],[239,1],[242,4],[248,4],[253,7],[261,9],[274,16],[274,4],[279,7],[287,3],[299,3]]},"903":{"position":[[2,9],[12,4]]},"905":{"position":[[0,5],[9,3],[13,3],[17,3],[21,5],[32,9],[44,5],[52,3],[58,4],[65,5],[78,3]]},"910":{"position":[[2,5],[8,4]]},"912":{"position":[[0,4],[8,3],[12,3],[16,3],[20,8],[34,5],[42,4],[49,3],[55,4],[63,8],[80,3],[84,3],[88,3]]},"915":{"position":[[9,1]]},"917":{"position":[[2,4],[7,1],[9,4]]},"919":{"position":[[0,5],[9,3],[13,3],[17,3],[21,11],[21,6],[28,4],[38,4],[43,1],[47,5],[55,3],[61,4],[68,11],[68,6],[75,4],[87,3]]},"924":{"position":[[2,8],[36,6],[76,8]]},"929":{"position":[[0,3],[5,5],[12,4],[18,7],[26,5],[33,3],[38,4],[44,4],[50,7],[58,4],[67,4],[72,3],[80,7],[88,4],[97,3],[116,3],[121,4],[134,3],[139,5],[151,4]]},"931":{"position":[[0,3],[5,5],[11,4],[18,4],[24,7],[36,3],[41,4],[59,4],[64,3],[72,7],[87,3],[92,5],[103,5],[113,3],[118,4],[130,3],[135,5],[144,3],[152,4],[177,2],[182,3]]},"934":{"position":[[0,3],[6,5],[13,4],[19,7],[27,5],[34,3],[40,4],[46,4],[52,7],[60,4],[69,4],[74,3],[82,7],[90,5],[96,7],[104,4],[113,3],[137,4],[142,3],[154,3]]},"936":{"position":[[0,4],[7,4],[12,4],[17,1],[19,4],[25,11],[37,7],[49,4],[56,11],[68,4],[73,1],[75,4],[81,4],[86,7],[101,4],[106,4],[115,11],[127,7],[138,4],[143,7],[158,4],[201,4],[206,4],[232,8],[250,4]]},"938":{"position":[[57,2],[60,3],[71,8]]},"940":{"position":[[72,8],[94,7],[102,8],[111,6],[167,8]]},"942":{"position":[[0,11],[62,3]]},"945":{"position":[[35,3]]},"947":{"position":[[0,6],[32,8],[52,10],[63,14],[92,3],[100,2],[105,7],[115,4]]},"950":{"position":[[0,7],[8,6],[15,6],[25,7],[35,6],[44,3],[50,4],[61,7],[94,6],[108,4],[113,7],[121,9],[133,5],[141,5],[147,4],[154,5],[160,4],[167,6],[179,6],[192,4],[197,6],[204,6],[224,8],[233,3],[237,6],[244,7],[258,8],[273,5],[279,4],[284,7],[302,7],[310,4],[315,5],[326,5],[348,4],[353,5],[359,6],[368,4],[373,6],[380,4],[385,6],[392,7],[400,6],[412,9],[430,4],[435,9],[448,6],[457,6],[465,6],[473,8],[483,4],[488,3],[492,6],[499,7],[509,7],[518,4],[523,4],[528,5],[535,3],[548,15],[569,4],[575,1],[578,6],[586,15],[602,1],[604,7],[613,5],[621,1],[623,5],[629,4],[636,5],[642,1],[644,5],[650,6],[659,4],[667,1],[669,4],[676,2],[679,1],[682,2],[688,1],[690,8],[699,4],[706,2],[711,6],[718,6],[725,3],[730,7],[738,7],[746,10],[761,1],[763,8],[772,4],[780,1],[782,6],[789,3],[798,8],[814,4],[820,1],[823,6],[831,8],[842,5],[850,1],[852,5],[858,5],[866,5],[872,1],[874,5],[880,7],[890,3],[894,1],[897,1],[902,5],[908,1],[910,8],[921,2],[924,3],[931,1],[933,5],[942,3],[949,3],[955,6],[962,3],[970,6],[977,3],[986,7],[1001,4],[1007,1],[1010,6],[1018,7],[1028,5],[1036,1],[1038,5],[1044,5],[1052,5],[1058,1],[1060,5],[1066,7],[1076,3],[1080,3],[1084,5],[1090,3],[1094,1],[1097,1],[1102,5],[1108,1],[1110,8],[1121,2],[1124,1],[1129,1],[1131,4],[1139,1],[1144,3],[1150,3],[1156,1],[1162,6],[1169,3],[1178,9],[1196,3],[1201,4],[1207,1],[1210,6],[1218,9],[1228,3],[1232,5],[1241,1],[1243,7],[1254,3],[1263,9],[1287,4],[1293,1],[1296,6],[1304,9],[1314,3],[1318,7],[1326,7],[1337,3],[1343,6],[1352,4],[1359,3],[1363,4],[1371,6],[1378,4],[1383,3],[1392,1],[1394,7],[1403,3],[1407,6],[1416,6],[1424,5],[1430,4],[1436,1],[1440,1],[1445,1],[1447,1],[1451,3],[1455,4],[1461,3],[1465,4],[1471,3],[1475,7]]},"952":{"position":[[0,7],[8,7],[16,6],[26,3],[32,11],[44,6],[57,10],[73,4],[78,10],[89,6],[98,4],[103,6],[110,6],[118,6],[125,6],[132,5],[138,4],[143,6],[150,6],[157,4],[162,6],[173,4],[178,13],[192,4],[197,6],[205,6],[213,6],[220,6],[229,10],[242,6],[250,10],[262,4],[268,4],[274,6],[282,6],[290,5],[297,4],[302,4],[307,6],[315,3],[321,6],[329,4],[334,4],[339,6],[354,4],[360,1],[363,10],[375,5],[383,5],[391,3],[395,6],[405,1],[408,8],[420,1],[424,1],[426,4],[432,2],[435,1],[437,3],[443,6],[450,3],[456,4],[462,1],[465,10],[477,4],[484,5],[492,3],[496,6],[506,1],[509,8],[521,1],[525,1],[527,4],[533,5],[539,1],[541,6],[549,6],[556,3],[562,4],[568,1],[571,10],[583,4],[590,6],[599,6],[606,1],[608,4],[615,4],[621,1],[624,10],[636,3],[644,3],[650,6],[659,4],[666,1],[668,6],[676,6],[683,4],[688,3],[697,1],[699,5],[706,3],[710,6],[720,1],[723,3],[729,1],[731,1],[735,1],[737,4],[743,3],[761,1],[763,6],[770,9],[780,6],[787,5],[794,4],[800,1],[802,4],[808,4],[815,3],[821,7],[830,3],[844,4],[850,1],[853,10],[865,3],[869,3],[873,6],[883,1],[885,5],[894,3]]},"954":{"position":[[0,7],[8,4],[13,6],[23,7],[33,11],[45,6],[54,11],[66,7],[76,4],[84,4],[89,4],[101,1],[110,6],[120,6],[127,9],[142,1],[150,6],[160,7],[168,13],[183,6],[192,6],[200,2],[203,3],[210,6],[217,15],[233,6],[242,3],[249,3],[255,5],[261,3],[271,1],[281,2],[284,3],[291,6],[298,8],[310,3],[317,3],[323,5],[329,3],[339,1],[349,3],[354,6],[364,7],[372,10],[383,7],[391,10],[405,5],[411,6],[420,2],[423,6],[430,9],[440,3],[448,1],[458,6],[465,3],[470,5],[477,11],[492,4],[497,5],[503,1],[507,4],[512,6],[523,1],[533,2],[536,3],[543,6],[550,7],[561,3],[568,3],[574,5],[580,3]]},"956":{"position":[[1,6],[9,8],[22,6],[30,3],[35,5],[42,11],[56,6],[64,5],[70,4],[75,6],[83,3],[89,5],[96,11],[110,6],[118,8]]},"958":{"position":[[3,4],[11,7],[56,6],[63,4],[85,5],[93,3],[97,3]]},"960":{"position":[[7,6],[18,7],[44,7],[59,9],[88,7],[107,4],[112,4],[117,9]]},"962":{"position":[[0,11],[14,1]]},"967":{"position":[[14,6],[21,6],[28,2],[31,4],[36,7],[44,9],[56,5],[64,5],[70,4],[77,5],[83,4],[90,6],[109,6],[116,3],[120,6],[128,6],[149,6],[156,6],[163,2],[169,5],[191,4],[196,5],[202,6],[211,2],[214,6],[221,4],[226,6],[233,4],[238,6],[245,7],[253,6],[275,6],[282,6],[289,2],[295,11],[321,4],[327,1],[330,6],[338,11],[350,3],[354,5],[362,3],[366,6],[376,1],[378,5],[384,5],[392,5],[398,1],[400,5],[406,7],[416,2],[419,3],[424,2],[430,1],[432,8],[441,3],[445,2],[450,2],[455,6],[462,3],[466,6],[473,3],[477,7],[488,6],[496,7],[504,3],[508,5]]},"969":{"position":[[2,6],[16,7],[24,3],[28,2],[34,7],[44,6],[55,4],[61,1],[64,10],[76,6],[83,3],[87,6],[95,6],[104,3],[108,6],[118,1],[121,3],[125,6],[132,6],[139,5],[147,1],[149,1],[153,1],[155,4],[161,3],[166,6],[173,3],[177,7],[188,1],[191,3],[195,6],[204,1],[206,1],[210,1],[212,4],[218,3]]},"971":{"position":[[0,6],[11,7],[22,4],[27,2],[33,1],[36,11],[58,11],[70,11],[82,6],[89,5],[96,4],[103,11],[117,2],[122,6],[131,4],[138,3],[144,7],[154,5],[161,3],[171,4],[176,5],[182,1],[186,4],[191,11]]},"973":{"position":[[1,6],[9,8],[22,6],[30,3],[35,5],[42,11],[56,6],[64,5],[70,4],[75,6],[83,3],[89,5],[96,11],[110,6],[118,3],[122,6],[129,6],[136,5],[143,5],[150,3],[156,6],[164,8]]},"975":{"position":[[0,11],[16,4],[21,9],[35,4],[40,9],[53,6],[60,5],[69,2]]},"979":{"position":[[7,6],[30,5],[36,9],[46,6],[53,2]]},"981":{"position":[[6,7],[26,7],[72,7],[100,7],[111,7]]},"983":{"position":[[9,7],[20,6],[27,6],[34,2],[40,5],[62,4],[67,5],[73,6],[82,2],[85,6],[92,4],[97,6],[104,4],[109,6],[116,7],[124,6],[141,7],[149,4],[154,6],[163,6],[182,6],[189,6],[196,2],[199,4],[205,1],[208,6],[216,6],[223,3],[227,7],[235,7],[246,3],[252,6],[261,4],[268,3],[272,4],[280,6],[287,4],[292,3],[301,1],[303,7],[312,3],[316,6],[325,6],[333,5],[339,4],[345,1],[349,1],[354,1],[356,1],[360,3],[364,4],[370,3],[374,4],[380,3],[384,7],[404,2],[407,3],[411,7],[422,3],[428,3],[432,7],[443,3],[447,7],[456,3],[462,1],[466,3],[470,7]]},"985":{"position":[[10,4],[16,1],[19,10],[31,3],[39,3],[45,6],[54,4],[61,1],[63,6],[71,6],[78,4],[83,3],[92,1],[94,5],[101,3],[105,6],[115,1],[118,3],[124,1],[126,1],[130,1],[132,4],[138,3],[156,7],[167,4],[172,4],[177,6],[185,1],[188,1],[190,6],[197,4],[202,6],[209,5],[216,4],[222,1],[224,4],[230,4],[237,3],[243,7],[252,3],[257,7],[266,7],[288,5],[299,7],[307,3],[311,6],[321,1],[324,3],[328,5],[334,4],[339,6],[348,1],[350,1],[354,1],[356,4],[364,5],[379,7],[387,3],[391,2],[397,7],[407,6],[418,4],[424,1],[427,10],[439,6],[446,3],[450,6],[458,6],[467,3],[471,6],[481,1],[484,3],[488,6],[495,6],[502,5],[510,1],[512,1],[516,1],[518,4],[524,3],[529,6],[536,3],[540,7],[551,1],[554,3],[558,6],[567,1],[569,1],[573,1],[575,4],[581,3]]},"987":{"position":[[0,10],[12,6],[20,6],[28,8],[41,6],[49,3],[54,5],[61,11],[75,6],[83,5],[89,4],[94,6],[102,3],[108,5],[115,11],[129,6],[137,3],[141,5],[147,4],[152,6],[160,3],[165,5],[172,11],[186,6],[194,4],[199,5],[205,2],[208,6],[216,5],[223,3],[229,6],[237,3],[241,6],[248,6],[255,5],[262,5],[269,3],[275,6],[283,8]]},"993":{"position":[[16,6],[23,7],[31,2],[37,12],[60,4],[65,12],[78,3],[87,4],[104,5],[112,7],[120,12],[135,4],[140,7],[148,7],[161,12],[174,6],[183,4],[189,1],[191,12],[205,6],[214,6],[261,6],[273,6],[281,7],[292,7],[303,7],[313,1],[321,11],[344,4],[349,11],[361,6],[370,3],[374,7],[382,5],[388,12],[413,6],[420,6],[427,2],[430,4],[436,1],[439,11],[452,12],[465,4],[470,6],[478,5],[486,1],[488,2],[491,4],[498,5],[504,1],[506,2],[509,6],[518,4],[524,2],[530,1],[532,8],[541,4],[547,2],[551,2],[556,6],[563,6],[570,3],[575,7],[583,3],[587,10],[602,2],[605,4],[610,5],[619,7],[629,6],[636,6],[643,3],[648,7],[656,7],[664,7],[676,2],[679,3],[686,4],[691,3],[695,5],[704,3],[711,3],[717,6],[724,3],[730,4],[735,5],[743,7],[751,3],[755,7],[764,7],[775,4],[780,3],[784,4],[792,6],[799,3],[805,4],[811,1],[814,11],[827,11],[839,4],[844,6],[852,5],[860,1],[862,2],[865,4],[872,5],[878,1],[880,2],[883,6],[892,4],[898,2],[904,1],[906,8],[915,4],[921,2],[925,2],[930,6],[937,6],[944,3],[949,7],[957,3],[961,10],[976,2],[979,4],[984,5],[993,7],[1003,6],[1010,6],[1017,3],[1022,7],[1030,7],[1038,7],[1050,2],[1053,3],[1060,4],[1065,3],[1069,4],[1077,3],[1084,3],[1090,6],[1097,3],[1103,4],[1108,5],[1116,7],[1124,3],[1128,7],[1137,7],[1148,4],[1153,3],[1157,4],[1165,6],[1172,3],[1178,6],[1211,6],[1255,9],[1267,6],[1274,4],[1280,1],[1283,11],[1296,6],[1303,3],[1307,7],[1315,7],[1326,3],[1332,6],[1341,4],[1348,3],[1352,4],[1360,6],[1367,4],[1372,3],[1381,1],[1383,7],[1392,3],[1396,6],[1405,11],[1418,5],[1424,4],[1430,1],[1436,1],[1438,1],[1442,3],[1446,4],[1452,3],[1456,7],[1472,11],[1487,2],[1490,3],[1494,2],[1505,2],[1508,3],[1512,7],[1523,3],[1529,3],[1533,7],[1544,5],[1550,4],[1556,1],[1559,7],[1569,7],[1577,2],[1580,6],[1589,4],[1596,2],[1603,8],[1625,1],[1627,2],[1630,5],[1638,4],[1644,2],[1650,1],[1652,8],[1661,3],[1665,2],[1669,1],[1671,2],[1674,7],[1684,2],[1688,2],[1694,4],[1699,5],[1708,7],[1718,2],[1721,3],[1725,7],[1736,3],[1742,3],[1746,7],[1757,5],[1763,4],[1769,3],[1774,7],[1784,7],[1792,11],[1806,4],[1818,8],[1845,2],[1848,4],[1853,1],[1855,7],[1864,1],[1866,5],[1875,6],[1885,1],[1887,6],[1894,1],[1897,2],[1900,1],[1902,7],[1913,3],[1919,6],[1928,4],[1933,1],[1935,7],[1946,6],[1954,4],[1961,4],[1966,5],[1972,4],[1977,8],[1986,1],[1988,9],[2001,4],[2006,11],[2020,1],[2022,7],[2033,5],[2039,4],[2045,3],[2050,7],[2060,7],[2070,4],[2086,4],[2091,3],[2096,3]]},"995":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[62,6],[70,8],[83,4],[89,8],[102,6],[110,3],[115,5],[122,11],[136,11],[149,5],[155,4],[160,6],[170,5],[177,11],[191,6],[199,3],[203,5],[209,4],[214,6],[222,7],[230,2],[233,6],[241,6],[249,3],[254,5],[261,4],[268,11],[281,5],[287,4],[292,6],[302,5],[309,4],[316,6],[324,3],[328,5],[334,4],[339,6],[347,4],[352,7],[360,7],[369,11],[382,4],[387,5],[393,2],[396,7],[405,5],[412,3],[418,3],[422,3],[426,5],[432,7],[443,6],[451,8],[464,4],[470,8]]},"997":{"position":[[10,6],[17,5]]},"999":{"position":[[6,6],[13,5]]},"1001":{"position":[[32,2],[37,9],[101,4],[106,8],[216,8],[230,4],[235,8],[244,9],[256,4],[261,7],[269,6],[277,5],[293,13],[314,4],[319,13],[333,6],[342,4],[348,1],[350,13],[365,4],[370,7],[378,6],[386,5],[394,3],[398,6],[415,1],[417,1],[421,7],[430,6],[437,3],[446,11],[465,4],[470,11],[482,6],[491,4],[497,1],[499,11],[512,4],[517,7],[525,6],[533,5],[541,3],[545,6],[562,1],[564,1],[568,7],[577,6],[584,3],[602,19],[627,4],[632,19],[652,6],[661,8],[670,8],[681,4],[686,22],[709,8],[718,8],[729,19],[751,6],[759,19],[779,8],[789,8],[801,4],[807,1],[810,19],[831,12],[844,7],[852,6],[875,7],[886,3],[890,7],[903,1],[911,7],[920,1],[924,1],[926,8],[935,4],[940,7],[957,4],[962,4],[985,13],[1002,13],[1018,7],[1029,22],[1052,13],[1067,7],[1075,12],[1089,5],[1117,11],[1132,11],[1146,7],[1156,22],[1179,11],[1192,7],[1200,12],[1214,5],[1241,11],[1259,4],[1264,11],[1276,6],[1285,4],[1291,1],[1293,11],[1306,9],[1316,7],[1324,6],[1332,5],[1340,3],[1344,6],[1359,1],[1361,1],[1365,7],[1374,6],[1381,3],[1400,14],[1421,4],[1426,14],[1441,6],[1450,11],[1462,11],[1476,4],[1482,1],[1485,14],[1501,12],[1514,7],[1522,6],[1545,7],[1556,3],[1560,7],[1573,1],[1581,7],[1590,1],[1594,1],[1596,11],[1608,9],[1618,7],[1635,4],[1640,4],[1649,9],[1662,14],[1677,11],[1690,11],[1705,9],[1715,12],[1729,5],[1754,14]]},"1003":{"position":[[34,2],[39,9],[58,4],[63,17],[81,6],[91,15],[117,6],[124,6]]},"1005":{"position":[[48,7],[59,2],[62,6],[70,18],[70,10],[81,7]]},"1007":{"position":[[12,4],[17,8],[40,8],[49,7]]},"1009":{"position":[[16,9],[28,2],[34,6],[60,7],[78,6],[86,3],[90,1],[95,1],[98,1],[102,7],[110,6],[120,1],[126,2],[129,10],[140,15]]},"1011":{"position":[[32,18],[57,2],[65,4],[70,18],[89,6],[98,9],[108,6],[123,9],[133,4],[138,4]]},"1013":{"position":[[12,3],[16,7],[34,7],[51,4],[57,1],[60,15],[77,11],[89,5],[97,6],[105,5],[113,3],[121,18],[145,8],[155,4],[160,4],[165,5],[172,1],[176,6],[185,4],[190,1],[192,13],[209,3],[214,6],[223,3],[227,8],[236,4],[243,4],[248,5],[254,1],[258,4],[263,6],[272,6],[279,6],[286,3],[291,6],[298,7]]},"1015":{"position":[[0,7],[8,4],[13,6],[23,3],[29,4],[40,15],[56,7],[64,1],[66,3],[70,2],[73,5],[79,3],[83,9],[93,7],[101,7],[109,8],[118,4],[123,15],[139,6],[148,5],[156,6],[163,13],[177,4],[183,18],[202,12],[215,4],[220,6],[234,18],[253,10],[264,1],[266,7],[274,2],[277,6],[284,3],[288,5],[294,4],[299,18],[318,6],[327,8],[338,6],[345,8],[354,4],[359,5],[370,18],[389,7],[397,3],[401,6],[408,1],[410,3],[414,15],[430,4],[435,18],[457,15],[475,3],[483,15],[500,5],[509,6],[519,13],[534,4],[539,4],[545,18],[566,12],[580,4],[585,4],[590,6],[603,2],[606,3],[610,15],[628,6],[635,3],[644,11],[656,6],[663,7],[671,3],[675,5],[681,2],[684,7],[692,1],[694,7],[702,7],[710,3],[714,7],[722,4],[728,1],[731,15],[748,11],[760,8],[771,6],[779,5],[787,3],[795,18],[815,8],[825,8],[835,8],[845,4],[850,4],[855,5],[862,1],[869,8],[878,2],[881,5],[887,8],[898,1],[900,13],[917,3],[921,6],[930,3],[934,8],[948,8],[957,10],[968,5],[974,3],[978,10],[989,4],[995,1],[998,15],[1015,8],[1028,5],[1034,1],[1036,12],[1055,15],[1071,7],[1079,8],[1088,8],[1097,2],[1100,1],[1102,6],[1109,4],[1114,6],[1121,4],[1127,1],[1130,15],[1147,15],[1167,3],[1173,6],[1182,4],[1187,3],[1196,1],[1198,13],[1213,1],[1215,5],[1223,3],[1227,8],[1236,3],[1240,7],[1249,7],[1257,5],[1266,1],[1268,5],[1275,3],[1279,8],[1291,3],[1295,4],[1302,1],[1304,12],[1318,3],[1322,7],[1331,8],[1340,4],[1345,10],[1358,6],[1371,4],[1376,4],[1388,6],[1395,3],[1399,5],[1405,3],[1409,10],[1420,10],[1434,18],[1455,5],[1461,10],[1472,8],[1486,8],[1495,4],[1500,7],[1508,2],[1511,4],[1520,4],[1525,5],[1531,3],[1537,4],[1542,11],[1555,2],[1558,3],[1565,10],[1576,11],[1590,6],[1598,1],[1603,1],[1608,1],[1614,3],[1621,3],[1627,3],[1631,7],[1640,5],[1646,8],[1655,5],[1664,3],[1675,2],[1678,4],[1687,4],[1692,5],[1698,1],[1702,4],[1707,6],[1715,2],[1718,3],[1725,10],[1736,11],[1750,6],[1758,1],[1763,1],[1768,1],[1774,3],[1781,3],[1787,3],[1791,7],[1800,5],[1806,8],[1815,5],[1824,3],[1838,4],[1843,4],[1848,3],[1852,3],[1856,7],[1864,2],[1867,7],[1875,4],[1880,5],[1886,1],[1890,4],[1895,6],[1919,7],[1948,10],[1978,7],[2006,12],[2039,7],[2047,4],[2052,6],[2062,7],[2072,6],[2081,3],[2087,4],[2094,4],[2105,7],[2113,10],[2124,1],[2126,10],[2137,2],[2140,5],[2146,4],[2151,8],[2160,4],[2165,7],[2173,6],[2182,5],[2190,6],[2197,7],[2205,3],[2212,5],[2218,7],[2226,4],[2231,4],[2236,8],[2245,4],[2250,4],[2258,4],[2263,6],[2270,9],[2285,15],[2301,12],[2314,1],[2316,5],[2322,6],[2329,9],[2339,4],[2344,15],[2360,6],[2369,8],[2380,6],[2387,8],[2396,4],[2401,5],[2407,9],[2417,6],[2427,3],[2431,7],[2439,9],[2449,4],[2454,4],[2462,3],[2466,8],[2480,17],[2498,10],[2509,10],[2520,8],[2529,4],[2534,17],[2552,6],[2561,18],[2580,3],[2587,6],[2594,4],[2599,3],[2603,8],[2612,14],[2627,4],[2632,8],[2644,7],[2652,3],[2656,4],[2661,7],[2669,16],[2686,4],[2694,6],[2702,8],[2711,5],[2717,6],[2724,8],[2738,10],[2749,7],[2757,4],[2762,4],[2767,4],[2772,6],[2779,4],[2784,10],[2795,4],[2800,10],[2811,6],[2820,14],[2835,7],[2843,7],[2851,17],[2869,11],[2881,4],[2887,15],[2903,9],[2913,4],[2918,4],[2923,7],[2934,3],[2938,7],[2946,3],[2950,4],[2955,4],[2960,7],[2968,11],[2980,4],[2985,4],[2995,7],[3003,7],[3011,7],[3019,3],[3023,6],[3030,10],[3041,8],[3050,4],[3055,6],[3064,12],[3077,4],[3082,4],[3087,6],[3094,4],[3099,9],[3114,13],[3128,7],[3136,1],[3138,10],[3149,10],[3160,8],[3169,4],[3174,13],[3188,4],[3193,17],[3213,10],[3226,2],[3229,4],[3234,18],[3256,1],[3260,4],[3265,18],[3286,2],[3291,2],[3294,4],[3299,14],[3317,1],[3321,4],[3326,14],[3343,1],[3347,4],[3352,6],[3361,6],[3369,10],[3381,14],[3397,7],[3405,7],[3414,1],[3418,7],[3427,4],[3433,11],[3446,4],[3451,4],[3457,15],[3474,4],[3479,18],[3500,9],[3511,4],[3516,4],[3521,4],[3526,7],[3536,11],[3549,4],[3554,4],[3559,4],[3568,8],[3578,4],[3583,4],[3588,6],[3606,3],[3610,6],[3617,3],[3621,10],[3632,1],[3634,10],[3645,4],[3650,4],[3656,1],[3659,10],[3671,3],[3679,1],[3681,6],[3688,3],[3692,1],[3695,5],[3701,1],[3703,6],[3710,4],[3717,3],[3723,6],[3732,4],[3737,3],[3746,1],[3748,11],[3761,1],[3763,14],[3778,3],[3783,4],[3788,8],[3802,1],[3804,9],[3815,1],[3817,14],[3832,8],[3842,4],[3847,3],[3856,1],[3858,11],[3871,3],[3880,7],[3888,9],[3898,8],[3907,4],[3914,1],[3916,8],[3926,6],[3939,4],[3945,1],[3948,10],[3960,14],[3975,3],[3980,15],[3999,5],[4005,5],[4011,3],[4015,8],[4028,6],[4036,5],[4042,3],[4046,10],[4057,4],[4062,2],[4065,1],[4067,7],[4075,16],[4097,8],[4106,5],[4112,6],[4119,8],[4130,1],[4132,14],[4149,7],[4158,5],[4165,3],[4169,8],[4179,7],[4188,1],[4190,14],[4205,7],[4215,1],[4218,8],[4228,4],[4233,3],[4242,3],[4246,6],[4254,7],[4262,5],[4269,1],[4271,1],[4276,1],[4278,1],[4282,1],[4284,14],[4299,7],[4308,1],[4310,14],[4325,5],[4332,3],[4336,8],[4348,3],[4354,4],[4360,1],[4363,10],[4375,14],[4390,8],[4399,4],[4404,7],[4415,8],[4427,1],[4429,14],[4444,5],[4450,8],[4465,8],[4474,7],[4482,3],[4486,4],[4491,3],[4495,4],[4500,7],[4508,7],[4516,4],[4522,1],[4525,10],[4537,8],[4546,3],[4550,7],[4558,7],[4567,5],[4575,6],[4583,5],[4591,3],[4599,15],[4616,8],[4626,5],[4633,8],[4643,4],[4648,4],[4653,5],[4661,9],[4672,3],[4676,7],[4685,3],[4690,1],[4694,4],[4699,3],[4705,8],[4718,9],[4729,4],[4734,3],[4743,6],[4752,4],[4757,1],[4759,11],[4774,3],[4779,6],[4788,4],[4793,3],[4802,3],[4806,8],[4816,6],[4823,3],[4827,4],[4834,3],[4838,4],[4846,6],[4853,3],[4857,3],[4865,4],[4872,1],[4874,8],[4884,6],[4891,6],[4898,3],[4903,10],[4914,2],[4917,8],[4926,4],[4933,4],[4940,3],[4944,4],[4952,6],[4959,3],[4963,3],[4976,8],[4985,6],[4992,9],[5002,3],[5006,7],[5014,4],[5019,3],[5023,4],[5029,1],[5032,10],[5044,8],[5053,3],[5057,7],[5065,7],[5075,7],[5084,5],[5093,8],[5105,4],[5110,4],[5115,7],[5124,6],[5133,4],[5138,1],[5140,9],[5153,8],[5163,6],[5172,4],[5177,5],[5188,8],[5198,6],[5205,5],[5212,3],[5216,4],[5223,3],[5227,4],[5235,6],[5242,7],[5253,3],[5257,3],[5265,4],[5272,1],[5274,8],[5284,6],[5291,7],[5302,6],[5309,3],[5314,10],[5325,2],[5328,8],[5337,4],[5344,4],[5351,3],[5355,4],[5363,6],[5370,7],[5381,3],[5385,3],[5398,4],[5403,10],[5414,5],[5420,4],[5425,3],[5429,10],[5440,4],[5446,1],[5449,10],[5461,4],[5470,1],[5472,12],[5485,2],[5488,4],[5497,5],[5503,1],[5505,8],[5515,1],[5517,6],[5524,4],[5531,5],[5537,1],[5539,11],[5552,5],[5558,1],[5560,9],[5571,5],[5577,1],[5579,11],[5592,3],[5596,7],[5605,10],[5616,7],[5624,10],[5645,14],[5660,8],[5669,9],[5679,5],[5685,3],[5689,6],[5696,10],[5707,4],[5713,1],[5716,10],[5728,14],[5743,3],[5747,7],[5755,7],[5764,3],[5768,4],[5776,5],[5784,6],[5793,4],[5798,1],[5800,11],[5815,3],[5820,6],[5827,3],[5831,4],[5838,1],[5840,8],[5850,6],[5857,6],[5864,3],[5869,10],[5880,2],[5883,8],[5892,4],[5899,4],[5906,3],[5910,4],[5918,6],[5925,3],[5929,3],[5939,4],[5944,4],[5956,12],[5969,7],[5977,4],[5985,17],[6004,18],[6024,2],[6028,14],[6044,1],[6048,4],[6053,6],[6061,16],[6079,5],[6089,5],[6095,2],[6098,7],[6106,2],[6109,6],[6118,10],[6132,13],[6146,4],[6152,2],[6155,10],[6166,3],[6175,7],[6183,5],[6189,4],[6194,7],[6202,3],[6207,6],[6217,7],[6225,11],[6237,7],[6245,10],[6259,1],[6261,4],[6266,6],[6274,5],[6280,6],[6292,3],[6296,5],[6302,3],[6309,10],[6320,8],[6329,3],[6336,6],[6344,1],[6349,1],[6354,1],[6359,2],[6362,3],[6369,3],[6375,3],[6379,7],[6388,5],[6394,7],[6402,5],[6411,3],[6421,3],[6425,5],[6431,5],[6438,3],[6445,10],[6456,8],[6465,3],[6470,2],[6473,3],[6480,3],[6486,3],[6490,7],[6499,5],[6505,7],[6513,5],[6522,3],[6529,4],[6536,3],[6540,6],[6548,7],[6556,5],[6563,1],[6565,1],[6570,1],[6572,1],[6576,5],[6582,7],[6591,5],[6597,5],[6609,7],[6617,6],[6624,7],[6632,10],[6643,14],[6658,3],[6663,4],[6672,3],[6676,7],[6685,9],[6695,6],[6702,7],[6715,10],[6726,4],[6735,8],[6744,4],[6749,8],[6759,5],[6765,7],[6773,6],[6780,4],[6785,10],[6796,3],[6800,10],[6811,8],[6820,5],[6826,6],[6833,3],[6837,6],[6844,8],[6853,12],[6866,7],[6875,17],[6893,6],[6900,6],[6907,7],[6915,4],[6920,7],[6928,8],[6937,6],[6944,8],[6953,4],[6958,10],[6969,8],[6978,13],[6992,8],[7002,8],[7011,8],[7020,3],[7024,8],[7034,11],[7047,3],[7051,7],[7060,9],[7071,8],[7080,6],[7087,2],[7090,9],[7100,5],[7106,7],[7114,7],[7123,3],[7127,10],[7138,7],[7146,7],[7154,3],[7158,8],[7167,12],[7180,6],[7187,11],[7199,4],[7204,6],[7211,2],[7214,12],[7227,9],[7237,6],[7245,14],[7260,6],[7267,3],[7271,6],[7278,6],[7285,13],[7299,7],[7307,7],[7315,7],[7323,7],[7331,8],[7340,8],[7350,4],[7355,4],[7360,7],[7368,4],[7373,6],[7380,8],[7389,4],[7394,9],[7404,3],[7408,6],[7415,9],[7425,7],[7433,6],[7440,4],[7445,7],[7454,5],[7460,4],[7465,8],[7474,6],[7481,3],[7485,7],[7493,2],[7496,6],[7503,6],[7510,2],[7513,8],[7522,5],[7528,7],[7536,7],[7545,5],[7551,7],[7559,3],[7563,3],[7567,9],[7577,10],[7588,3],[7592,3],[7596,10],[7616,7],[7624,4],[7629,6],[7639,7],[7649,6],[7658,3],[7664,4],[7671,4],[7682,7],[7690,7],[7698,3],[7702,9],[7712,3],[7716,8],[7725,4],[7730,9],[7740,4],[7745,7],[7753,9],[7765,7],[7773,3],[7777,7],[7785,7],[7794,5],[7805,14],[7820,9],[7830,8],[7839,4],[7844,14],[7859,6],[7868,8],[7877,4],[7882,7],[7890,8],[7899,4],[7904,6],[7913,2],[7916,4],[7921,9],[7936,17],[7954,7],[7962,1],[7964,3],[7968,7],[7976,4],[7981,9],[7991,5],[7997,4],[8002,4],[8007,17],[8025,9],[8035,3],[8041,14],[8058,6],[8066,14],[8082,8],[8092,4],[8097,4],[8102,7],[8111,9],[8123,8],[8133,4],[8138,4],[8143,6],[8161,5],[8167,6],[8174,10],[8185,8],[8194,4],[8200,1],[8203,14],[8219,5],[8229,1],[8231,2],[8234,3],[8238,1],[8241,2],[8244,4],[8253,5],[8259,1],[8261,2],[8264,4],[8271,3],[8277,6],[8286,4],[8291,3],[8300,1],[8302,8],[8312,3],[8317,6],[8327,7],[8335,11],[8347,7],[8355,10],[8369,1],[8371,4],[8376,6],[8384,3],[8391,3],[8395,7],[8403,3],[8408,6],[8417,2],[8420,3],[8427,3],[8433,3],[8437,6],[8445,7],[8453,9],[8463,6],[8472,1],[8474,1],[8478,3],[8485,4],[8492,1],[8494,8],[8504,6],[8524,6],[8531,5],[8537,1],[8539,7],[8547,3],[8551,9],[8561,4],[8567,1],[8570,14],[8586,6],[8593,3],[8597,7],[8605,7],[8614,3],[8618,7],[8627,5],[8635,6],[8644,4],[8649,1],[8651,8],[8663,3],[8668,6],[8675,3],[8679,4],[8686,1],[8688,8],[8698,6],[8705,6],[8712,3],[8717,7],[8725,2],[8728,8],[8737,4],[8744,4],[8751,3],[8755,4],[8763,6],[8770,3],[8774,3],[8787,4],[8792,10],[8803,5],[8809,4],[8814,3],[8818,7],[8826,4],[8832,1],[8835,14],[8851,4],[8860,5],[8866,1],[8868,8],[8878,1],[8880,2],[8883,4],[8890,5],[8896,1],[8898,8],[8917,8],[8926,8],[8942,15],[8958,10],[8969,7],[8977,3],[8981,4],[8986,7],[8994,4],[8999,15],[9015,6],[9024,10],[9036,10],[9047,8],[9058,6],[9067,4],[9073,1],[9076,15],[9093,7],[9101,3],[9105,7],[9113,7],[9122,5],[9130,6],[9137,1],[9139,10],[9150,8],[9159,3],[9164,1],[9166,8],[9181,15],[9197,10],[9208,7],[9216,3],[9220,4],[9225,7],[9233,4],[9238,15],[9254,6],[9263,10],[9275,10],[9286,10],[9297,4],[9304,7],[9314,4],[9320,1],[9323,15],[9340,7],[9348,3],[9352,7],[9360,7],[9369,5],[9377,5],[9384,3],[9391,1],[9393,10],[9404,8],[9413,3],[9418,2],[9421,3],[9428,3],[9434,6],[9441,3],[9447,1],[9449,10],[9463,5],[9469,6],[9476,3],[9489,10],[9500,14],[9519,4],[9524,7],[9532,6],[9541,5],[9549,6],[9556,7],[9564,3],[9568,8],[9577,4],[9582,4],[9589,4],[9594,10],[9605,6],[9614,2],[9617,4],[9622,5],[9628,11],[9640,7],[9650,4],[9656,1],[9659,10],[9671,8],[9680,3],[9684,7],[9692,7],[9701,5],[9709,6],[9717,5],[9725,1],[9727,2],[9730,4],[9737,5],[9743,1],[9745,2],[9748,6],[9757,6],[9766,4],[9773,3],[9777,4],[9785,6],[9792,3],[9796,3],[9802,7],[9811,1],[9813,11],[9827,7],[9836,5],[9843,5],[9850,7],[9859,1],[9861,11],[9873,7],[9883,1],[9886,8],[9896,4],[9901,3],[9910,3],[9914,6],[9922,5],[9928,7],[9936,2],[9939,7],[9948,1],[9950,1],[9954,1],[9956,11],[9968,7],[9977,6],[9984,3],[9992,4],[9998,1],[10001,10],[10013,8],[10022,3],[10026,7],[10034,7],[10044,7],[10053,5],[10062,1],[10064,2],[10067,4],[10074,5],[10080,1],[10082,2],[10085,6],[10094,6],[10103,4],[10110,3],[10114,4],[10122,6],[10129,7],[10140,3],[10144,3],[10150,7],[10159,6],[10166,1],[10168,11],[10181,3],[10196,5],[10202,7],[10214,4],[10219,4],[10231,6],[10238,10],[10249,7],[10260,17],[10278,2],[10282,10],[10297,10],[10309,11],[10322,7],[10330,7],[10339,1],[10348,5],[10354,7],[10362,9],[10372,7],[10380,5],[10388,5],[10394,7],[10402,4],[10412,6],[10419,8],[10428,3],[10435,7],[10443,10],[10459,3],[10463,5],[10469,7],[10477,6],[10488,15],[10505,10],[10517,10],[10529,8],[10541,6],[10549,1],[10554,1],[10559,1],[10566,7],[10574,6],[10581,3],[10586,6],[10597,3],[10601,5],[10607,7],[10615,10],[10629,4],[10634,4],[10639,7],[10648,1],[10651,6],[10662,15],[10679,10],[10691,10],[10703,10],[10715,10],[10729,7],[10737,6],[10744,3],[10749,6],[10760,4],[10765,3],[10769,6],[10776,6],[10785,4],[10790,5],[10801,10],[10813,3],[10817,6],[10825,7],[10833,5],[10841,1],[10843,1],[10847,5],[10853,5],[10860,4],[10867,4],[10872,5],[10878,1],[10882,4],[10887,6],[10896,3],[10900,7],[10909,7],[10917,7],[10925,3],[10929,5],[10941,3],[10945,7],[10953,7],[10961,7],[10969,2],[10972,1],[10974,10],[10985,6],[10992,7],[11000,4],[11005,12],[11018,8],[11027,2],[11030,7],[11039,8],[11048,3],[11052,16],[11069,2],[11072,7],[11080,4],[11085,9],[11095,8],[11105,7],[11113,2],[11116,8],[11126,3],[11130,7],[11138,3],[11142,8],[11151,10],[11163,4],[11168,1],[11170,3],[11174,2],[11177,9],[11187,2],[11190,2],[11193,4],[11198,10],[11210,4],[11215,10],[11226,7],[11234,9],[11245,7],[11253,3],[11257,9],[11267,8],[11276,8],[11285,8],[11295,11],[11307,8],[11316,7],[11324,3],[11328,10],[11339,7],[11348,8],[11357,3],[11361,8],[11370,8],[11379,8],[11389,5],[11395,3],[11399,2],[11402,7],[11410,3],[11414,10],[11425,3],[11429,8],[11438,7],[11446,9],[11457,4],[11462,7],[11470,9],[11482,7],[11490,3],[11494,7],[11502,7],[11511,5],[11519,8],[11528,8],[11538,4],[11543,7],[11551,12],[11564,3],[11568,10],[11579,6],[11586,3],[11590,9],[11600,8],[11609,3],[11613,2],[11616,10],[11627,12],[11640,3],[11644,11],[11656,7],[11664,7],[11672,7],[11681,7],[11689,1],[11691,5],[11697,2],[11700,8],[11709,9],[11719,8],[11728,12],[11741,2],[11744,1],[11746,9],[11756,8],[11765,8],[11774,8],[11783,8],[11793,10],[11805,9],[11815,7],[11823,8],[11832,4],[11837,9],[11847,13],[11862,4],[11867,2],[11870,3],[11874,3],[11878,7],[11886,5],[11892,13],[11907,8],[11916,3],[11920,2],[11923,8],[11932,4],[11937,6],[11944,4],[11949,4],[11955,3],[11959,2],[11962,8],[11971,2],[11974,7],[11982,7],[11990,7],[11998,8],[12007,10],[12018,7],[12026,10],[12038,4],[12043,17],[12061,4],[12066,7],[12075,7],[12083,4],[12088,17],[12106,4],[12111,7],[12120,7],[12130,6],[12138,13],[12152,4],[12160,11],[12172,7],[12181,4],[12186,18],[12205,6],[12214,8],[12225,7],[12235,4],[12241,1],[12244,18],[12264,7],[12272,3],[12276,7],[12284,7],[12293,5],[12304,7],[12312,3],[12316,2],[12319,7],[12329,8],[12338,8],[12348,4],[12353,15],[12369,6],[12378,7],[12386,8],[12395,3],[12404,3],[12408,8],[12417,5],[12423,7],[12431,2],[12434,7]]},"1017":{"position":[[16,3],[20,11],[34,6],[41,4],[46,11],[58,5],[66,6],[76,11],[90,5]]},"1019":{"position":[[0,6],[7,5],[27,5],[77,2],[82,7],[92,9],[106,6],[113,5]]},"1025":{"position":[[9,5],[17,4],[22,7],[30,4],[35,5],[41,7],[56,5],[65,6],[72,6],[79,2],[85,5],[100,4],[105,5],[111,6],[120,4],[125,3],[132,1],[140,1],[147,7],[155,6],[170,4],[175,6],[195,5],[217,4],[222,5],[228,6],[237,2],[240,6],[247,4],[252,6],[259,4],[264,6],[271,7],[279,6],[299,4],[304,5],[319,7],[327,4],[332,5],[349,9],[359,3],[370,6],[395,5],[404,6],[411,6],[418,2],[424,7],[457,6],[471,4],[476,7],[484,9],[496,5],[504,5],[510,4],[517,5],[523,4],[530,6],[537,6],[544,5],[551,5],[559,6],[579,6],[623,9],[635,6],[642,4],[648,1],[651,6],[659,6],[666,3],[670,7],[678,7],[689,3],[695,6],[704,4],[711,3],[715,4],[723,6],[730,4],[735,3],[744,1],[746,7],[755,3],[759,6],[768,6],[776,5],[782,4],[788,1],[794,1],[796,1],[800,3],[804,4],[810,3],[814,7],[830,6],[840,2],[843,3],[847,2],[858,2],[861,3],[865,7],[876,3],[882,3],[886,7],[897,5],[903,4],[909,1],[912,7],[922,7],[930,2],[933,6],[942,4],[949,2],[956,8],[978,1],[980,2],[983,5],[991,3],[996,2],[1002,1],[1004,8],[1013,3],[1017,2],[1021,1],[1023,2],[1026,7],[1036,2],[1040,2],[1045,2],[1048,3],[1052,7],[1063,3],[1069,3],[1073,7],[1084,5],[1090,4],[1096,3],[1101,7],[1111,7],[1119,3],[1123,5],[1131,4],[1143,8],[1170,2],[1173,4],[1178,1],[1180,7],[1189,1],[1191,5],[1200,6],[1210,1],[1212,6],[1219,1],[1222,2],[1225,1],[1227,7],[1238,3],[1244,6],[1253,4],[1258,1],[1260,7],[1271,6],[1279,4],[1286,4],[1291,5],[1297,4],[1302,8],[1311,1],[1313,9],[1326,4],[1331,11],[1345,1],[1347,7],[1358,5],[1364,4],[1370,3],[1375,7],[1385,7],[1395,4],[1411,3],[1416,3]]},"1027":{"position":[[2,5],[12,4],[26,4],[32,1],[35,10],[47,3],[55,3],[59,5],[67,1],[69,3],[75,5],[83,6],[92,4],[99,1],[101,6],[109,6],[116,4],[121,3],[130,1],[132,5],[139,3],[143,6],[153,1],[156,3],[162,1],[164,1],[168,1],[170,4],[176,3],[194,7],[205,4],[210,4],[215,6],[222,5],[229,1],[232,2],[235,5],[241,1],[246,1],[250,1],[252,6],[259,4],[264,6],[271,5],[278,4],[284,1],[286,4],[292,4],[299,3],[305,7],[314,3],[319,7],[328,7],[337,9],[348,4],[359,4],[366,1],[368,6],[375,4],[380,6],[387,5],[394,4],[400,1],[402,4],[408,4],[415,3],[421,2],[426,4],[433,7],[442,3],[447,7],[456,7],[465,9],[476,4],[497,5],[508,7],[516,3],[520,6],[530,1],[533,3],[537,5],[543,4],[548,6],[557,1],[559,1],[563,1],[565,4],[573,5],[579,7]]},"1029":{"position":[[0,4],[6,1],[9,11],[22,6],[29,3],[33,6],[40,5],[47,6],[54,5],[62,6],[69,6],[76,5],[82,4],[88,1],[91,7],[101,4],[106,7],[114,7],[124,4],[130,3],[134,7],[143,4],[149,1],[153,1],[157,3],[161,4],[167,3],[171,7]]},"1031":{"position":[[0,10],[12,6],[29,10],[41,4],[47,6],[55,8],[68,4],[74,8],[87,6],[95,3],[100,5],[107,11],[121,6],[129,5],[135,4],[140,6],[150,5],[157,11],[171,6],[179,3],[183,5],[189,4],[194,6],[202,7],[210,2],[213,6],[221,6],[229,3],[234,5],[241,4],[248,6],[256,5],[262,4],[267,6],[277,5],[284,4],[295,11],[311,6],[319,3],[323,5],[329,4],[334,6],[342,4],[347,7],[355,7],[364,6],[372,4],[377,5],[383,2],[386,6],[394,5],[401,3],[407,6],[415,3],[419,6],[426,6],[433,5],[440,5],[447,3],[453,6],[461,8],[474,4],[480,8]]},"1037":{"position":[[21,6],[28,7],[36,2],[42,7],[75,6],[89,4],[94,7],[102,9],[114,5],[122,5],[128,4],[135,5],[141,4],[148,6],[155,6],[162,5],[169,5],[178,12],[200,12],[217,6],[237,11],[260,4],[265,11],[277,6],[286,3],[290,7],[298,5],[304,12],[336,3],[340,12],[353,4],[360,6],[371,8],[381,4],[389,6],[396,6],[403,2],[409,8],[430,15],[448,8],[457,4],[463,1],[466,11],[479,8],[488,3],[492,7],[501,5],[509,1],[511,2],[514,4],[521,5],[527,1],[529,2],[532,6],[541,4],[549,3],[553,4],[560,2],[563,1],[566,2],[572,1],[574,8],[583,4],[590,2],[595,6],[602,6],[609,3],[614,7],[622,7],[630,10],[645,1],[647,8],[656,4],[665,11],[678,3],[683,3],[688,5],[695,7],[704,4],[710,3],[714,12],[732,3],[736,7],[745,10],[759,3],[763,4],[771,6],[778,3],[803,6],[810,6],[817,2],[820,4],[826,1],[829,11],[842,8],[856,6],[864,5],[873,1],[875,2],[878,5],[886,5],[892,1],[894,2],[897,7],[907,7],[918,4],[923,3],[927,6],[934,4],[940,4],[948,4],[953,3],[957,6],[964,4],[970,6],[982,6],[991,3],[995,5],[1001,4],[1006,6],[1014,5],[1020,5],[1028,4],[1033,4],[1038,6],[1046,5],[1054,2],[1057,4],[1062,4],[1070,6],[1077,3],[1081,6],[1089,8],[1098,10],[1109,2],[1113,1],[1117,4],[1125,2],[1128,7],[1136,4],[1144,6],[1151,3],[1157,4],[1162,4],[1170,4],[1175,4],[1181,2],[1187,1],[1189,8],[1198,4],[1204,2],[1208,2],[1213,6],[1220,3],[1224,6],[1232,7],[1241,1],[1243,3],[1247,10],[1260,4],[1268,3],[1272,1],[1275,3],[1282,5],[1288,4],[1293,4],[1300,2],[1303,3],[1310,5],[1316,3],[1322,3],[1329,3],[1335,6],[1342,3],[1350,7],[1358,4],[1366,4],[1371,4],[1376,4],[1384,5],[1390,6],[1399,6],[1406,6],[1414,4],[1420,6],[1427,3],[1433,3],[1437,4],[1445,5],[1451,1],[1453,8],[1464,2],[1468,7],[1476,4],[1484,2],[1487,3],[1494,5],[1500,4],[1507,3],[1514,3],[1520,6],[1527,3],[1532,3],[1542,6],[1549,6],[1557,3],[1563,4],[1569,1],[1572,11],[1585,8],[1596,5],[1604,6],[1612,3],[1619,1],[1621,8],[1639,3],[1643,1],[1646,4],[1654,5],[1660,6],[1669,2],[1672,3],[1679,1],[1681,12],[1694,4],[1701,3],[1708,3],[1725,6],[1732,3]]},"1039":{"position":[[11,4],[17,1],[20,10],[32,12],[49,6],[58,6],[67,6],[75,4]]},"1041":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,7],[459,5],[466,3],[472,3],[476,3],[480,5],[486,7],[496,8],[505,3],[509,8],[522,6],[530,8],[542,7],[551,6],[559,4],[565,8],[577,7],[586,4]]},"1047":{"position":[[23,4],[28,10],[39,9],[51,11],[65,3],[87,4],[92,10],[103,9],[115,11],[127,5],[133,3],[138,5],[151,4],[156,7],[164,9],[176,7],[184,4],[189,3],[197,4],[203,5],[210,7],[218,6],[227,4],[234,3],[239,5],[255,3],[259,4],[264,10],[275,6],[284,3],[290,4],[298,2],[301,2],[304,2],[312,4],[317,13],[331,3],[337,4],[344,10],[357,6],[365,10],[376,3],[381,3],[388,4],[394,1],[397,10],[409,7],[417,4],[422,3],[430,4],[436,5],[445,9],[456,3],[463,4],[468,7],[476,4],[482,2],[485,3],[492,3],[498,6],[505,3],[510,3],[516,5],[523,3],[530,3],[534,9],[544,1],[546,3],[551,2],[554,3],[561,3],[567,6],[574,3],[579,3],[585,6],[593,3],[600,6],[607,6],[614,5],[621,2],[624,3],[631,3],[637,6],[644,3],[649,3],[655,5],[664,4],[671,4],[677,6],[684,9],[697,2],[700,1],[703,3],[710,2],[713,8],[722,4],[727,6],[735,5],[743,3],[750,3],[756,6],[763,3],[768,3],[774,10],[788,6],[795,4],[800,5],[807,5],[814,9],[825,3],[830,6],[837,10],[849,3],[855,4],[861,1],[864,10],[876,7],[884,10],[897,4],[904,3],[909,5],[918,5],[925,3],[932,3],[936,9],[946,1],[948,3],[953,2],[956,3],[963,3],[969,6],[976,3],[981,3],[987,6],[995,3],[1002,6],[1009,6],[1016,5],[1023,2],[1026,3],[1033,3],[1039,6],[1046,3],[1051,3],[1057,9],[1070,6],[1077,9],[1089,2],[1092,3],[1096,10],[1110,9],[1122,6],[1129,3],[1134,3],[1138,6],[1146,10],[1157,3],[1161,5],[1171,5],[1180,10],[1192,9],[1203,10],[1217,10],[1228,9],[1240,9],[1251,3],[1258,6],[1265,4],[1270,3],[1275,5],[1282,10],[1294,3],[1299,2],[1302,3],[1309,3],[1315,6],[1322,3],[1327,3],[1333,3],[1337,6],[1344,3],[1348,2],[1351,3],[1358,4],[1363,9],[1373,9],[1385,6],[1394,3],[1401,3],[1407,6],[1414,3],[1419,3],[1425,6],[1432,6],[1440,3],[1453,4],[1459,1],[1462,11],[1475,14],[1490,6],[1497,7],[1506,5],[1517,1],[1519,2],[1522,4],[1532,5],[1538,1],[1540,2],[1543,6],[1558,4],[1566,6],[1573,4],[1583,7],[1592,6],[1602,1],[1604,8],[1613,4],[1622,3],[1626,5],[1632,3],[1642,2],[1645,6],[1657,2],[1660,8],[1670,2],[1676,7],[1684,3],[1689,10],[1702,2],[1710,5],[1718,8],[1727,11],[1749,7],[1757,3],[1761,4],[1771,3],[1775,6],[1783,7],[1791,3],[1795,7],[1803,2],[1807,1],[1809,1],[1813,4],[1841,2],[1844,8],[1854,2],[1860,6],[1868,10],[1881,2],[1887,5],[1896,3],[1905,2],[1908,3],[1915,8],[1924,11],[1936,5],[1944,3],[1951,3],[1960,6],[1967,3],[1971,6],[1979,5],[1985,6],[1992,6],[2001,1],[2003,1],[2007,3],[2020,3],[2024,6],[2032,5],[2038,8],[2047,3],[2051,7],[2060,1],[2062,1],[2066,4],[2097,1],[2099,8],[2108,4],[2117,11],[2133,3],[2138,6],[2149,4],[2155,6],[2162,12],[2181,5],[2188,7],[2219,2],[2222,6],[2232,7],[2240,5],[2249,7],[2262,6],[2269,5],[2280,1],[2282,8],[2291,4],[2297,5],[2305,7],[2316,3],[2320,6],[2328,7],[2336,3],[2340,7],[2348,2],[2352,1],[2356,4],[2367,4],[2377,3],[2381,6],[2389,10],[2400,3],[2404,7],[2412,2],[2416,1],[2419,3],[2423,7],[2434,4],[2451,6],[2458,3],[2466,4],[2472,1],[2475,11],[2488,23],[2512,6],[2519,7],[2528,7],[2536,7],[2545,5],[2553,1],[2555,2],[2558,4],[2565,5],[2571,1],[2573,2],[2576,6],[2585,4],[2593,6],[2600,4],[2607,7],[2616,6],[2626,1],[2628,8],[2637,4],[2643,3],[2647,14],[2664,4],[2669,2],[2672,6],[2681,2],[2684,8],[2694,2],[2700,7],[2708,3],[2713,10],[2726,2],[2731,8],[2743,8],[2752,11],[2766,6],[2774,3],[2781,7],[2789,7],[2797,8],[2807,2],[2810,3],[2817,3],[2823,6],[2830,3],[2834,6],[2842,5],[2848,10],[2859,6],[2868,1],[2872,3],[2879,14],[2896,6],[2905,7],[2913,3],[2917,4],[2924,3],[2928,6],[2936,7],[2944,3],[2948,7],[2956,2],[2960,1],[2962,1],[2966,4],[2986,2],[2989,8],[2999,2],[3005,6],[3013,10],[3026,2],[3032,14],[3050,3],[3056,9],[3067,3],[3074,7],[3082,7],[3090,14],[3106,2],[3109,3],[3116,3],[3122,6],[3129,3],[3133,6],[3141,5],[3147,10],[3158,6],[3167,1],[3171,3],[3178,2],[3181,3],[3188,8],[3197,11],[3209,9],[3221,3],[3228,3],[3234,6],[3241,3],[3245,6],[3253,5],[3259,6],[3266,6],[3275,1],[3279,3],[3286,3],[3290,6],[3298,9],[3308,5],[3314,8],[3323,3],[3327,7],[3336,1],[3338,1],[3342,4],[3350,1],[3352,8],[3361,4],[3370,11],[3383,3],[3388,6],[3396,4],[3402,6],[3409,12],[3425,5],[3432,7],[3443,2],[3446,6],[3456,7],[3464,5],[3473,7],[3483,6],[3490,5],[3498,1],[3500,8],[3509,4],[3515,5],[3523,7],[3531,3],[3535,6],[3543,7],[3551,3],[3555,7],[3563,2],[3567,1],[3569,1],[3573,4],[3581,4],[3588,3],[3592,6],[3600,10],[3611,3],[3615,7],[3623,2],[3627,1],[3630,3],[3634,7],[3643,1],[3647,4],[3655,6],[3662,3]]},"1049":{"position":[[7,4],[13,1],[16,13],[31,11],[43,5],[49,3],[54,5],[62,2],[65,3],[70,2],[76,5],[83,3],[89,2],[94,1],[96,9],[108,3],[112,6],[119,3],[125,6],[132,3],[136,6],[144,7],[152,5],[158,4],[167,4],[173,1],[176,11],[189,11],[203,3],[209,6],[216,1],[218,9]]},"1051":{"position":[[9,1],[26,2],[29,6],[41,4],[47,16],[69,2],[79,11],[91,23],[115,7],[123,16],[140,11],[154,11],[166,13],[180,6]]},"1053":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,4],[456,5],[463,3],[469,1],[471,4],[476,7],[484,7],[492,4],[497,11],[510,5],[517,3],[524,4],[530,8],[542,7],[550,3],[554,7],[562,2],[565,4],[570,5],[576,8],[585,3],[589,7],[597,4],[603,4],[608,2],[611,2],[614,2],[617,2],[620,2],[623,3],[629,4],[636,4],[643,6],[651,8],[663,7],[671,3],[675,7],[683,2],[686,4],[691,11],[704,4],[709,5],[715,2],[718,4],[724,5],[731,3],[737,4],[743,5],[749,2],[752,2],[756,1],[758,4],[763,2],[766,7],[774,7],[782,4],[787,11],[800,5],[807,3],[814,11],[827,5],[833,4],[838,4],[846,3],[850,2],[853,5],[861,1],[863,7],[871,2],[874,6],[881,2],[885,8],[894,3],[898,8],[911,6],[919,8],[931,7],[940,6],[948,6],[956,8],[968,7],[977,4],[983,3],[988,8]]},"1056":{"position":[[37,4],[42,4],[47,5],[67,6],[83,3]]},"1059":{"position":[[2,14],[28,6],[35,6],[42,2],[45,4],[51,1],[54,11],[67,14],[82,6],[89,7],[98,5],[106,1],[108,2],[111,4],[118,5],[124,1],[126,2],[129,6],[138,4],[146,6],[153,4],[160,7],[169,6],[179,1],[181,8],[190,4],[196,2],[199,6],[209,7],[217,5],[226,7],[245,7],[253,3],[257,4],[264,3],[268,6],[276,7],[284,3],[288,7],[296,2],[300,1],[302,1],[306,4],[330,1],[332,8],[341,4],[350,11],[363,3],[368,6],[376,4],[382,6],[389,12],[405,5],[412,7],[440,2],[443,6],[453,7],[461,5],[470,7],[480,6],[487,5],[495,1],[497,8],[506,4],[512,5],[520,7],[528,3],[532,6],[540,7],[548,3],[552,7],[560,2],[564,1],[566,1],[570,4],[578,4],[585,3],[589,6],[597,10],[608,3],[612,7],[620,2],[624,1],[627,3],[631,7],[640,1],[644,4],[652,6],[659,3],[667,8],[677,4],[685,6],[692,6],[699,2],[705,8],[726,15],[744,8],[753,4],[759,1],[762,11],[775,8],[784,3],[788,7],[797,5],[805,1],[807,2],[810,4],[817,5],[823,1],[825,2],[828,6],[837,4],[845,3],[849,4],[856,2],[859,1],[862,2],[868,1],[870,8],[879,4],[886,2],[891,6],[898,6],[905,3],[910,7],[918,7],[926,10],[941,1],[943,8],[952,4],[961,11],[974,3],[979,3],[984,5],[991,7],[1000,4],[1006,3],[1010,12],[1028,3],[1032,7],[1041,10],[1055,3],[1059,4],[1067,6],[1074,3],[1099,6],[1106,6],[1113,2],[1116,4],[1122,1],[1125,11],[1138,8],[1152,6],[1160,5],[1169,1],[1171,2],[1174,5],[1182,5],[1188,1],[1190,2],[1193,7],[1203,7],[1214,4],[1219,3],[1223,6],[1230,4],[1236,4],[1244,4],[1249,3],[1253,6],[1260,4],[1266,6],[1278,6],[1287,3],[1291,5],[1297,4],[1302,6],[1310,5],[1316,5],[1324,4],[1329,4],[1334,6],[1342,5],[1350,2],[1353,4],[1358,4],[1366,6],[1373,3],[1377,6],[1385,8],[1394,10],[1405,2],[1409,1],[1413,4],[1421,2],[1424,7],[1432,4],[1440,6],[1447,3],[1453,4],[1458,4],[1466,4],[1471,4],[1477,2],[1483,1],[1485,8],[1494,4],[1500,2],[1504,2],[1509,6],[1516,3],[1520,6],[1528,7],[1537,1],[1539,3],[1543,10],[1556,4],[1564,3],[1568,1],[1571,3],[1578,5],[1584,4],[1589,4],[1596,2],[1599,3],[1606,5],[1612,3],[1618,3],[1625,3],[1631,6],[1638,3],[1646,7],[1654,4],[1662,4],[1667,4],[1672,4],[1680,5],[1686,6],[1695,6],[1702,6],[1710,4],[1716,6],[1723,3],[1729,3],[1733,4],[1741,5],[1747,1],[1749,8],[1760,2],[1764,7],[1772,4],[1780,2],[1783,3],[1790,5],[1796,4],[1803,3],[1810,3],[1816,6],[1823,3],[1828,3],[1838,6],[1845,6],[1853,3],[1859,4],[1865,1],[1868,11],[1881,8],[1892,5],[1900,6],[1908,3],[1915,1],[1917,8],[1935,3],[1939,1],[1942,4],[1950,5],[1956,6],[1965,2],[1968,3],[1975,1],[1977,12],[1990,4],[1997,3],[2004,3],[2021,6],[2028,3]]},"1061":{"position":[[7,4],[12,8],[21,3],[25,5],[33,4],[38,8],[49,4],[54,4],[59,5],[67,4],[72,6],[79,6],[88,2],[91,4],[96,5],[102,5],[108,8],[117,7],[125,6],[132,3],[136,2],[139,6],[153,4],[158,9],[168,7],[176,6],[184,5],[190,8],[200,3],[204,2],[207,6],[216,6],[225,6],[233,6],[241,7],[250,7],[259,5],[266,5],[273,3],[278,3],[287,4],[293,1],[296,6],[304,4],[309,5],[315,8],[325,6],[332,6],[340,4],[348,3],[355,2],[358,5],[366,1],[368,5],[376,6],[385,1],[387,2],[390,4],[397,5],[403,1],[405,2],[408,6],[417,8],[434,6],[442,4],[450,4],[458,5],[466,5],[473,3],[480,3],[484,7],[492,6],[500,4],[509,2],[515,4],[520,3],[526,6],[534,4],[539,2],[542,2],[545,2],[548,2],[551,2],[554,3],[560,3],[564,7],[572,1],[574,3],[582,1],[587,1],[592,1],[596,1],[598,1],[602,2],[606,8],[616,1],[618,7],[627,3],[634,4],[640,1],[643,6],[651,5],[657,6],[664,6],[672,4],[680,3],[687,1],[689,4],[694,4],[700,6],[708,4],[719,4],[725,1],[728,6],[736,5],[742,6],[749,6],[757,4],[765,3],[772,1],[774,4],[779,4],[785,6],[793,4],[804,4],[810,1],[813,6],[821,6],[828,6],[835,6],[843,4],[851,3],[858,1],[860,4],[865,5],[872,6],[880,4],[897,4],[902,13],[916,6],[925,3],[930,6],[939,4],[944,16],[964,13],[980,6],[988,13],[1003,3],[1008,9],[1019,4],[1026,4],[1032,2],[1035,6],[1054,4],[1060,1],[1063,13],[1078,5],[1088,1],[1090,3],[1094,5],[1101,7]]},"1063":{"position":[[9,1],[26,2],[29,1],[33,11],[45,14],[60,7],[68,16],[85,11],[105,2],[111,8],[123,4],[128,4],[133,11],[145,5],[152,1],[155,11],[167,4],[172,11],[184,5],[191,4],[198,4],[205,4],[212,3],[218,7],[228,3],[234,7],[243,8],[253,9],[264,4],[273,3],[277,7],[286,2],[289,5],[300,8]]},"1065":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,7],[459,5],[466,3],[472,3],[476,3],[480,5],[486,7],[497,4],[503,8],[515,7],[523,3],[527,7],[535,2],[538,4],[544,4],[549,2],[552,2],[555,2],[558,2],[561,2],[564,3],[570,4],[577,4],[584,6],[592,8],[604,7],[612,3],[616,7],[624,2],[627,4],[633,11],[646,5],[652,4],[657,4],[665,3],[669,2],[672,5],[680,1],[682,7],[690,2],[693,6],[700,2],[704,8],[713,3],[717,8],[730,6],[738,8],[750,7],[759,6],[767,6],[775,8],[788,3],[793,8],[802,7],[811,4],[816,10],[828,6],[835,10],[847,4],[852,8],[861,3],[865,8],[877,8],[888,4],[893,6],[902,4],[908,8],[920,7],[929,4],[935,6],[943,8],[955,7],[964,6],[972,6],[980,3],[985,5],[992,11],[1006,11],[1019,5],[1025,4],[1030,6],[1040,5],[1047,11],[1061,6],[1069,3],[1073,5],[1079,4],[1084,6],[1092,7],[1100,2],[1103,6],[1111,6],[1119,3],[1124,5],[1131,4],[1138,11],[1151,5],[1157,4],[1162,6],[1172,5],[1179,4],[1186,6],[1194,3],[1198,5],[1204,4],[1209,6],[1217,4],[1222,7],[1230,7],[1239,11],[1252,4],[1257,5],[1263,2],[1266,7],[1275,5],[1282,3],[1288,3],[1292,3],[1296,5],[1302,7],[1312,8],[1321,3],[1325,8],[1338,6],[1346,8],[1358,7],[1367,6],[1375,4],[1381,8],[1393,7],[1402,4]]},"1068":{"position":[[7,16],[7,6],[14,9],[26,6],[34,3],[38,3],[42,10],[53,3],[57,3],[61,8],[70,10],[96,5],[102,9],[102,3],[106,5],[112,5],[118,10],[118,4],[123,5],[129,5],[135,11],[135,5],[141,5],[157,3],[229,7],[237,8],[237,1],[239,6],[247,7],[256,6],[265,4],[272,9],[300,6],[324,6],[331,18],[331,6],[338,5],[344,5],[350,1],[357,6],[364,3],[369,1],[372,4],[379,6],[388,1],[395,3],[409,17],[409,3],[413,3],[417,2],[420,6],[427,1],[429,3],[433,5],[439,4],[444,7],[492,3],[499,3]]},"1072":{"position":[[6,4]]},"1075":{"position":[[6,3],[10,3],[14,11],[26,5],[42,12],[42,7],[50,4],[56,5]]},"1077":{"position":[[0,4],[5,10],[16,6],[25,3],[29,6],[36,7],[44,7],[54,4],[59,13],[73,3],[77,6],[85,7],[93,7],[103,10],[116,6],[124,10],[135,3],[140,3],[145,7],[154,7],[165,4],[171,1],[174,10],[186,4],[191,4],[196,6],[204,6],[213,6],[220,8],[229,4],[234,1],[236,3],[241,4],[248,5],[258,4],[264,1],[267,10],[279,4],[284,4],[289,6],[297,5],[303,3],[308,5],[316,9],[327,3],[334,1],[336,7],[344,7],[352,5],[359,2],[362,3],[369,3],[375,6],[382,3],[388,2],[391,3],[398,2],[401,8],[410,1],[412,3],[417,4],[424,3],[431,3],[437,6],[444,3],[450,6],[457,2],[460,9],[470,1],[472,4],[477,4],[484,9],[495,4],[503,4],[509,1],[512,10],[524,4],[529,4],[534,6],[543,3],[548,5],[557,4],[563,3],[570,2],[573,8],[582,1],[584,4],[589,4],[596,2],[599,3],[606,3],[612,6],[619,3],[624,3],[630,6],[637,1],[639,7],[647,7],[655,4],[663,4],[669,1],[672,10],[684,6],[691,4],[696,6],[704,4],[711,1],[714,3],[721,2],[724,4],[729,1],[731,4],[736,4],[743,6],[750,3],[757,3]]},"1080":{"position":[[0,4],[5,11],[17,6],[30,10],[42,10],[55,4],[60,23],[84,5],[91,10],[104,11],[118,6],[126,11],[139,8],[149,4],[154,3],[158,6],[166,11],[180,10],[192,5],[199,6],[207,9],[218,6],[227,4],[233,2],[236,6]]},"1082":{"position":[[3,8],[24,15],[42,8],[51,4],[57,1],[60,11],[73,8],[82,3],[86,7],[95,5],[103,1],[105,2],[108,4],[115,5],[121,1],[123,2],[126,6],[138,4],[156,4],[164,3],[168,4],[207,2],[210,1],[212,10],[226,3],[233,1],[235,10],[246,6],[253,4],[312,2],[315,8],[325,2],[331,3],[336,10],[349,2],[354,3],[359,3],[366,1],[368,10],[379,4],[384,4],[390,2],[393,3],[400,3],[406,6],[413,3],[417,6],[425,5],[431,4],[436,6],[445,1],[447,1],[451,3],[458,3],[464,8],[473,11],[485,3],[490,2],[493,3],[500,3],[506,6],[513,3],[517,6],[525,5],[531,6],[538,6],[547,1],[549,1],[553,3],[560,3],[564,6],[572,5],[578,8],[587,3],[591,7],[600,1],[602,1],[606,4],[616,2],[619,1],[622,2],[628,1],[630,8],[639,4],[646,2],[651,6],[658,6],[665,3],[670,7],[678,7],[686,10],[701,1],[703,8],[712,4],[721,11],[734,3],[739,3],[744,5],[751,7],[760,4],[766,3],[770,12],[788,3],[792,7],[801,10],[815,3],[819,4],[827,6],[834,3]]},"1084":{"position":[[0,4],[6,1],[9,11],[22,11],[34,4],[39,6],[47,5],[55,1],[57,2],[60,4],[67,5],[73,1],[75,2],[78,6],[87,4],[93,2],[99,1],[101,8],[110,4],[116,2],[120,2],[125,6],[132,6],[139,3],[144,7],[152,3],[156,10],[171,2],[174,4],[179,5],[188,7],[198,6],[205,6],[212,3],[217,7],[225,7],[233,7],[257,2],[260,8],[270,2],[276,4],[281,3],[286,10],[299,2],[305,1],[307,10],[321,3],[327,2],[330,3],[337,1],[339,10],[350,4],[355,4],[361,8],[370,11],[386,3],[393,3],[399,3],[403,6],[411,5],[417,9],[427,3],[432,1],[434,1],[438,4],[448,2],[451,3],[458,4],[463,3],[467,4],[475,3],[482,3],[488,6],[495,3],[501,4],[506,5],[514,7],[522,3],[526,7],[535,7],[546,4],[551,3],[555,4],[563,6],[570,3]]},"1086":{"position":[[0,4],[6,1],[9,11],[22,6],[29,3],[33,7],[41,7],[61,6],[68,6],[87,6],[97,4],[102,9],[112,1],[116,4],[121,6],[129,3],[135,6],[144,4],[151,3],[155,4],[163,6],[170,4],[177,6],[184,1],[187,3],[191,7],[200,5],[206,7],[214,5],[222,2],[225,1],[227,10],[241,3],[247,3],[251,4],[257,4],[265,5],[271,1],[273,8],[284,2],[287,4],[292,5],[301,7],[311,2],[314,8],[324,2],[330,4],[335,3],[340,10],[353,2],[358,2],[361,3],[368,1],[370,10],[381,4],[386,4],[392,8],[401,11],[417,3],[424,3],[430,3],[434,6],[442,5],[448,9],[458,3],[463,1],[465,1],[469,4]]},"1088":{"position":[[0,7],[11,11],[23,13],[39,4],[45,16],[65,5],[74,11],[86,13],[103,5],[111,7],[123,1],[132,11],[147,11],[159,14],[174,5]]},"1090":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,4],[456,5],[463,3],[469,1],[471,4],[476,7],[484,7],[492,4],[497,11],[510,5],[517,3],[524,4],[530,8],[542,7],[550,3],[554,7],[562,2],[565,4],[570,9],[580,5],[586,8],[595,3],[599,7],[607,4],[613,4],[618,2],[621,2],[624,2],[627,2],[630,2],[633,3],[639,4],[646,4],[653,6],[661,8],[673,7],[681,3],[685,7],[693,2],[696,4],[702,11],[715,4],[720,5],[726,2],[729,4],[735,5],[742,3],[748,4],[754,5],[760,2],[763,2],[767,1],[769,4],[774,2],[777,7],[785,7],[793,4],[798,11],[811,5],[818,3],[825,11],[838,5],[844,4],[849,4],[857,3],[861,2],[864,5],[872,1],[874,7],[882,2],[885,6],[892,2],[896,8],[905,3],[909,8],[922,6],[930,8],[942,7],[951,6],[959,6],[967,8],[979,7],[988,4]]},"1093":{"position":[[0,6],[37,6],[47,6],[54,3],[58,1],[60,6],[67,6],[79,6]]},"1095":{"position":[[0,6],[10,2],[26,2],[29,3],[33,6],[40,3],[44,1],[46,6],[53,6]]},"1098":{"position":[[0,7],[8,4],[13,6],[23,3],[29,6],[36,3],[40,1],[42,6],[49,6],[59,4],[64,4],[73,8],[86,18],[86,2],[89,6],[96,8],[112,6],[122,14],[138,3],[145,6],[152,20],[175,4],[180,8],[191,6],[198,11],[211,2],[214,3],[221,3],[227,3],[231,7],[240,5],[246,10],[257,4],[265,3],[270,6],[279,3],[283,7],[292,6],[299,8],[311,6],[318,14],[340,6],[347,20],[370,4],[375,8],[386,6],[393,11],[414,6],[421,11],[442,2],[452,6],[459,7],[472,6],[479,7],[509,6]]},"1100":{"position":[[0,7],[8,4],[13,6],[23,3],[29,6],[36,3],[40,1],[42,6],[49,6],[59,4],[64,4],[73,8],[86,18],[86,2],[89,6],[96,8],[106,14],[126,2],[129,2],[132,53],[206,3],[213,6],[220,22],[245,4],[250,14],[269,4],[274,8],[285,2],[288,3],[295,3],[301,3],[305,7],[314,8],[323,9],[337,4],[344,3],[348,7],[357,8],[366,7],[383,6],[390,22],[413,14],[429,8],[462,3],[471,5]]},"1102":{"position":[[18,11],[34,19],[34,3],[38,6],[45,8],[55,17],[74,1],[79,6],[86,20],[109,4],[114,11],[128,6],[135,11],[148,3],[152,7],[161,7],[169,6],[176,8],[188,6],[195,17]]},"1104":{"position":[[17,6],[24,4],[41,4],[47,3],[54,6],[61,4],[68,4],[73,14],[90,2],[93,3],[100,3],[107,4],[114,6],[121,11],[135,3],[139,7],[148,8],[157,4],[162,2],[165,8],[175,8],[184,8],[210,6],[217,4],[236,2],[251,5],[257,15],[275,2],[278,4],[283,19],[303,10],[314,6],[322,8],[331,6],[339,6],[348,4],[354,3],[361,6],[368,4],[375,4],[380,10],[393,2],[396,3],[403,3],[409,3],[413,7],[422,5],[428,7],[436,4],[444,3],[449,6],[456,10],[489,2],[492,4],[499,15],[517,7],[526,3],[533,6],[540,20],[563,4],[568,8],[579,15],[596,2],[599,3],[606,3],[612,3],[616,7],[625,5],[631,9],[641,4],[649,3],[654,6],[661,10],[674,3],[678,7],[687,8],[696,4],[701,8],[713,6],[720,6],[727,7],[738,6],[745,10]]},"1106":{"position":[[74,6]]},"1108":{"position":[[0,6],[7,20],[38,6],[45,22],[76,6],[83,4],[107,5],[114,3],[118,6],[165,4],[170,4],[186,1],[191,3],[196,2],[203,2],[210,2],[216,6],[224,1],[229,3],[233,3],[238,1],[243,3],[247,3],[254,6],[264,2],[267,2],[270,31],[302,21],[325,2],[334,6],[344,2],[354,4],[359,6],[367,22],[394,4],[400,9],[410,21]]},"1111":{"position":[[0,2],[3,4],[25,2]]},"1113":{"position":[[0,4],[5,7],[27,3]]},"1115":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[32,4],[40,4],[45,4],[54,3],[61,4],[66,7],[75,2],[82,1],[91,5],[97,5],[126,6],[134,3],[141,3],[145,14],[162,2],[165,3],[172,3],[178,3],[182,7],[191,5],[200,3],[205,6],[214,3],[218,7],[226,6],[233,6]]},"1117":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[32,4],[40,4],[45,4],[54,3],[61,4],[66,7],[75,2],[82,1],[86,6],[94,3],[101,3],[105,6],[114,2],[117,3],[124,3],[130,3],[134,7],[143,5],[152,3],[157,6],[166,3],[170,7],[179,6],[189,6],[196,6]]},"1120":{"position":[[0,7],[8,4],[13,6],[23,5],[31,3],[37,2],[40,4],[48,4],[53,4],[62,3],[69,4],[74,7],[83,4],[91,5],[98,5],[107,3],[111,3],[115,5],[121,6],[128,3],[132,6],[142,3],[146,2],[149,3],[156,3],[160,3],[167,3],[174,3],[180,3],[184,7],[193,5],[202,3],[209,3],[213,7],[222,6],[232,3],[236,6]]},"1122":{"position":[[0,10],[31,7],[39,4],[44,6],[54,5],[62,3],[68,2],[71,4],[79,4],[84,4],[93,3],[100,4],[105,7],[114,4],[122,5],[128,3],[136,1],[141,2],[146,6],[154,3],[161,3],[165,10],[178,2],[181,3],[188,3],[194,3],[198,7],[207,5],[213,8],[222,10],[236,3],[241,6],[250,2],[253,3],[260,3],[264,5],[273,3],[280,3],[286,3],[290,7],[299,5],[305,8],[314,7],[325,3],[330,6],[339,7],[350,5],[356,10],[367,6],[375,3],[379,7],[387,4],[396,3],[400,7],[409,6],[416,4],[424,7],[432,4],[442,2],[445,3],[452,3],[456,4],[464,3],[471,3],[477,3],[481,7],[490,5],[496,7],[504,3],[508,7],[519,3]]},"1124":{"position":[[0,7],[8,4],[13,6],[23,5],[31,3],[37,2],[40,4],[48,4],[53,4],[62,3],[69,4],[74,7],[83,3],[89,3],[93,3],[97,5],[103,6],[110,3],[114,6],[124,3],[128,3],[132,5],[140,5],[146,15],[163,5],[169,4],[174,5],[183,2],[186,3],[193,3],[197,3],[204,3],[211,3],[217,3],[221,7],[230,5],[239,3],[246,3],[250,7],[259,6],[269,3],[273,6]]},"1126":{"position":[[0,3],[7,4],[12,7],[21,8],[32,3],[36,3],[42,6],[49,3],[53,3],[59,6],[59,2],[62,3],[66,10]]},"1128":{"position":[[0,7],[8,4],[13,6],[23,7],[33,3],[39,2],[42,4],[49,4],[57,4],[62,4],[71,3],[76,6],[86,7],[94,11],[106,7],[114,10],[128,1],[130,4],[135,6],[143,5],[149,6],[158,3],[165,4],[170,14],[185,3],[191,5],[200,1],[204,2],[207,3],[214,3],[218,3],[225,3],[232,3],[238,3],[242,7],[251,7],[259,5],[265,3],[269,2],[272,6],[282,3]]},"1130":{"position":[[0,7],[8,5],[14,6],[24,2],[29,2],[32,4],[39,7],[53,3],[57,8],[66,1],[68,5],[74,7],[82,7],[90,9],[100,3],[104,6],[112,4],[117,3],[121,7],[129,6],[137,5],[145,3],[152,14],[167,7],[176,6],[183,3],[187,3],[198,13],[212,8],[221,1],[223,5],[229,7],[237,3],[241,7],[249,3],[253,8],[262,6],[269,3],[273,6],[280,6],[288,4],[293,13],[307,7],[315,6],[326,4],[332,5],[341,3],[348,14],[363,7],[372,6],[379,3],[383,14],[405,15],[421,8],[430,1],[432,5],[438,7],[446,3],[450,7],[458,3],[462,6],[469,5],[475,4],[480,3],[484,4],[489,4],[495,4],[500,15],[516,7],[524,6],[535,4],[541,3],[546,5],[555,3],[562,14],[577,7],[586,6],[594,3],[601,3],[605,14],[622,2],[625,3],[632,3],[638,2],[641,7],[650,2],[656,3],[662,4],[667,9],[679,2],[684,6],[691,6],[699,7],[707,8],[719,3],[725,6],[732,6],[741,1],[744,3],[750,6],[757,6],[765,1],[768,3],[777,14],[792,11],[804,2],[808,4],[813,3],[817,4],[822,11],[834,9],[845,4],[850,14],[865,7],[873,6],[882,4],[887,3],[893,4],[901,7],[909,6],[916,7],[925,2],[928,3],[932,4],[941,1],[945,6],[952,4],[957,7],[984,5],[992,3],[999,4],[1004,7],[1012,4],[1017,1],[1021,4],[1026,1],[1034,3],[1038,3],[1044,6],[1051,2],[1054,7],[1066,6],[1066,2],[1069,3],[1073,1],[1078,4],[1083,1],[1087,6],[1094,3]]},"1132":{"position":[[0,7],[8,4],[16,4],[22,5],[28,5],[38,4],[43,5],[49,6],[59,5],[67,3],[73,2],[76,4],[84,4],[89,4],[98,4],[106,4],[111,7],[120,4],[128,5],[135,5],[144,4],[152,4],[157,7],[166,4],[174,5],[190,4],[196,3],[203,4],[208,10],[221,2],[224,3],[231,3],[237,3],[241,7],[250,5],[256,8],[265,4],[273,3],[278,6],[287,4],[292,5],[300,4],[305,3],[309,3],[313,5],[319,6],[326,4],[331,6],[341,3],[356,2],[359,3],[366,4],[371,5],[380,3],[387,3],[393,3],[397,7],[406,5],[412,8],[421,4],[429,3],[434,6],[454,2],[457,3],[464,4],[469,5],[478,3],[485,3],[491,3],[495,7],[504,5],[510,8],[519,4],[527,3],[532,6],[553,2],[556,3],[563,4],[568,4],[576,3],[583,3],[589,3],[593,7],[602,5],[608,7],[616,3],[620,4],[628,3],[633,6],[642,2],[645,3],[652,4],[657,4],[665,3],[672,3],[678,3],[682,7],[691,5],[697,7],[705,3],[709,4],[717,3],[722,6],[731,3],[735,7],[744,8],[753,6],[763,3],[767,6]]},"1134":{"position":[[0,4],[5,7],[26,6],[35,6],[54,10],[78,6],[97,14],[129,5],[147,4],[152,14],[176,2],[179,4],[192,2]]},"1136":{"position":[[2,6],[15,9]]},"1138":{"position":[[0,6],[11,7],[22,9]]},"1140":{"position":[[5,7],[44,2]]},"1142":{"position":[[0,7],[8,4],[13,6],[23,3],[29,4],[37,4],[42,6],[49,2],[52,4],[57,6],[67,4],[72,5],[78,1],[82,4],[87,6],[95,2],[110,4],[115,4],[124,2],[130,4],[135,4],[140,6],[159,7],[167,2],[170,6],[177,2],[187,9],[197,3],[201,7],[222,3],[231,2],[246,3],[250,7],[267,3],[278,2],[284,4],[289,4],[294,6],[312,7],[321,2],[324,6],[331,2],[342,6],[353,7],[367,3],[376,2],[391,6]]},"1144":{"position":[[0,6],[15,7],[45,7],[53,4],[58,6],[68,3],[74,4],[82,4],[87,4],[96,3],[103,4],[108,4],[113,6],[121,3],[128,4],[133,4],[138,6],[152,9],[164,3],[173,2],[176,4],[185,4],[190,5],[196,1],[200,4],[205,6],[213,3],[221,7],[229,4],[234,3],[249,9],[261,3],[270,2],[273,4],[282,4],[287,5],[293,1],[297,4],[302,6],[310,3],[318,7],[326,4],[331,3],[344,6],[358,7],[367,6],[376,4],[381,4],[391,3],[396,3],[400,7],[409,8],[421,4],[427,4],[432,4],[442,3],[447,3],[451,7],[460,8],[472,4],[478,4],[485,4],[490,5],[496,1],[500,4],[505,6],[514,3],[518,7],[527,7],[536,2],[539,7],[547,8],[567,6],[577,3],[583,3],[590,7],[611,4],[620,1],[633,4],[640,4],[645,5],[651,1],[655,4],[660,6],[689,7],[710,4],[715,5],[724,6]]},"1146":{"position":[[20,6]]},"1148":{"position":[[5,9],[28,4],[33,9],[57,7],[65,4],[70,6],[80,3],[86,4],[93,4],[101,4],[106,6],[113,2],[116,3],[121,2],[125,4],[130,9],[143,5],[149,2],[152,4],[172,3],[176,6],[184,6],[192,1],[202,1],[206,2],[210,4],[215,5],[221,1],[225,4],[230,6],[238,3],[242,6],[250,6],[258,1],[266,1],[270,2],[276,4],[281,4],[290,3],[294,2],[297,4],[302,9],[312,3],[316,1],[321,1],[324,1],[329,1],[332,1],[338,2],[341,3],[345,1],[356,2],[359,6],[366,1],[370,2],[380,9],[392,2],[395,4],[414,3],[418,7],[442,2],[445,3],[449,1],[460,9],[479,5],[485,2],[488,4],[497,9],[516,2],[519,4],[537,2],[540,4]]},"1150":{"position":[[4,9],[29,4],[34,5],[47,4],[52,9],[68,7],[76,4],[81,6],[91,3],[97,4],[104,4],[112,3],[118,7],[126,3],[130,2],[133,4],[138,5],[146,4],[151,6],[158,2],[161,3],[166,2],[170,4],[175,9],[188,5],[194,2],[197,4],[204,2],[207,4],[214,7],[224,3],[228,6],[236,6],[244,1],[251,1],[253,1],[257,2],[261,7],[270,2],[273,6],[284,4],[289,4],[298,3],[302,2],[305,4],[310,9],[320,3],[324,1],[329,1],[332,1],[337,1],[340,1],[346,2],[349,3],[353,1],[356,2],[359,6],[366,1],[370,2],[376,2],[379,4],[386,3],[390,7],[407,7],[422,2],[425,4],[435,7],[448,9],[471,2],[474,6],[492,9]]},"1152":{"position":[[0,4],[5,4],[49,7],[57,4],[62,6],[72,3],[78,4],[85,4],[93,3],[99,5],[107,5],[113,4],[120,4],[125,7],[134,4],[139,5],[150,4],[155,6],[162,2],[165,3],[172,4],[177,1],[179,4],[186,3],[191,5],[199,4],[204,4],[221,4],[228,3],[232,6],[240,6],[248,1],[256,1],[260,2],[264,4],[269,1],[271,6],[282,4],[287,4],[296,3],[300,2],[303,4],[308,9],[318,3],[322,1],[327,1],[330,1],[335,1],[338,1],[344,2],[347,3],[351,1],[354,2],[357,4],[362,2],[365,3],[372,5],[378,2],[381,4],[388,6],[395,2],[401,1],[406,4],[411,5],[417,1],[421,4],[426,6],[442,4],[447,1],[449,4],[456,5],[464,4],[469,4],[474,1],[476,6],[485,4],[490,9],[513,9],[523,2],[526,4],[539,4],[544,4],[556,5],[565,4],[571,4],[576,9],[596,9]]},"1154":{"position":[[0,4],[5,4],[20,9],[50,7],[58,4],[63,6],[73,3],[79,4],[87,3],[91,4],[96,4],[101,4],[106,4],[111,10],[126,3],[130,7],[149,4],[154,6],[161,2],[165,4],[170,9],[183,5],[189,2],[192,4],[199,4],[204,2],[207,10],[219,3],[223,7],[232,6],[246,4],[251,4],[260,3],[264,2],[267,4],[272,9],[282,3],[286,1],[291,1],[294,1],[298,1],[301,1],[307,2],[310,3],[314,1],[317,2],[320,6],[328,2],[334,2],[337,4],[350,4],[355,2],[358,10],[373,10],[398,9]]},"1156":{"position":[[15,4],[20,6],[37,4],[42,5]]},"1158":{"position":[[0,7],[8,4],[13,6],[23,3],[29,4],[36,4],[41,6],[51,3],[55,7],[63,5],[69,4],[74,6],[81,2],[85,4],[90,9],[103,5],[109,2],[112,4],[119,6],[126,8],[136,7],[145,1],[158,4],[163,4],[172,3],[176,2],[179,4],[184,9],[194,3],[198,1],[203,1],[206,1],[210,2],[214,1],[220,2],[223,3],[227,1],[230,2],[233,6],[241,2],[247,2],[250,4],[257,3],[261,7],[278,7],[293,6],[300,8],[310,7],[319,1],[325,7],[337,9],[358,4],[363,5]]},"1160":{"position":[[0,7],[8,7],[24,9]]},"1162":{"position":[[0,7],[8,4],[13,6],[23,7],[33,3],[39,4],[47,4],[52,6],[59,3],[63,7],[71,7],[82,3],[88,6],[97,4],[104,3],[108,4],[116,3],[120,7],[129,6],[146,6],[153,7],[162,3],[166,7],[175,6],[192,4],[197,5],[203,3],[209,4],[214,11],[233,4],[238,4],[247,3],[252,6],[262,7],[270,11],[282,7],[290,10],[304,1],[306,4],[311,6],[319,5],[325,6],[334,2],[337,6],[344,3],[349,4],[354,5],[360,1],[364,4],[369,6],[386,3],[390,7],[413,7],[421,11],[433,1],[443,3],[450,6]]},"1164":{"position":[[8,7],[31,9],[46,9],[59,5],[77,4],[92,4],[109,6],[128,7],[150,9],[169,7],[195,9],[216,5],[248,7],[261,5],[273,6],[288,7],[314,7],[325,2],[354,4],[359,5],[386,7],[396,5],[403,6],[418,7]]},"1166":{"position":[[0,7],[8,5],[16,2]]},"1168":{"position":[[7,5],[13,2],[53,2],[82,5],[88,12],[140,3],[153,3],[162,2],[175,2],[184,2],[194,3],[205,2],[220,5],[226,12],[239,3],[247,2],[250,1],[252,2],[264,5],[270,14],[285,3],[291,4],[298,4],[307,5],[315,2],[322,3],[326,5],[332,5],[338,7],[346,5],[352,11],[365,5],[372,3],[376,6],[386,2],[393,1],[395,1],[399,5],[405,6],[413,3],[417,6],[425,2],[433,1],[435,1],[439,5],[445,5],[452,3],[456,6],[464,2],[474,1],[476,1],[480,5],[486,10],[498,3],[502,6],[512,2],[521,1],[523,1],[527,5],[533,5],[546,4],[551,13],[565,8],[574,6],[582,5],[590,1],[593,3],[600,2],[603,6],[610,8],[620,2],[623,3],[630,3],[636,6],[643,3],[649,5],[655,1],[657,5],[665,6],[672,5],[678,13],[692,1],[694,2]]},"1170":{"position":[[8,5],[17,5],[23,5],[38,4],[43,3],[47,6],[56,1],[58,1],[62,5],[79,5],[85,5],[98,5],[106,9],[129,9],[142,5],[148,10],[175,9],[198,9],[208,5],[222,5],[228,11],[240,2],[245,4],[252,4],[261,4],[270,7],[278,4],[283,6],[293,3],[299,7],[307,5],[315,4],[323,4],[328,4],[337,3],[341,7],[350,5],[358,2],[361,4],[370,5],[376,4],[385,3],[389,7],[398,9],[414,3],[418,7],[427,5],[433,5],[441,5],[447,10],[464,4],[469,5],[475,1],[479,4],[484,6],[492,5],[498,10],[511,3],[515,7],[524,3],[534,5],[555,4],[563,6],[573,3],[580,6],[590,5],[597,5],[603,12],[617,3],[630,9]]},"1172":{"position":[[9,7],[17,4],[22,6],[32,3],[38,6],[45,3],[49,8],[58,6],[67,7],[75,5],[84,4],[89,4],[98,6],[105,4],[111,5],[117,5],[125,2],[129,2],[135,5],[141,13],[157,2],[160,2],[165,3],[169,6],[177,2],[180,7],[190,1],[192,1],[196,2],[199,9],[210,3],[214,6],[222,4],[227,6],[236,1],[239,1],[241,1],[245,2],[248,4],[253,4],[259,2],[262,4],[267,7],[276,3],[280,1],[283,3],[290,5],[296,2],[299,4],[306,3],[310,6],[318,10],[331,1],[334,1],[336,1],[340,3],[344,4],[350,3],[354,7],[365,3],[369,1],[372,3],[379,5],[385,2],[388,8],[399,3],[403,6],[411,8],[422,1],[425,1],[427,1],[431,3],[435,3],[440,3],[444,5],[463,4],[468,4],[474,5],[480,5],[486,2],[489,7],[498,3],[502,2],[505,1],[507,4],[512,6],[520,4],[526,5],[533,10],[545,6],[552,3],[556,8],[565,6],[572,2],[575,1],[577,1],[579,10],[591,6],[598,3],[602,1],[604,3],[608,2],[611,2],[614,1],[616,8],[627,9],[637,3],[641,8],[652,8],[661,2],[664,8],[674,11],[674,3],[678,7],[686,1],[688,8],[698,10],[698,3],[702,6],[710,8],[720,12],[720,3],[724,8],[734,8],[744,12],[744,3],[748,8],[758,8],[768,11],[768,3],[772,7],[781,8],[791,6],[798,5],[804,8],[814,4],[819,5],[825,8],[835,7],[843,2],[846,8],[856,3],[860,3],[864,8],[874,3],[878,8],[887,40],[928,8],[938,3],[942,4],[947,4],[952,2],[955,5],[961,2],[964,3],[968,8],[978,3],[982,8],[991,5],[999,3],[1003,3],[1007,6],[1014,40],[1056,4],[1064,6],[1072,6],[1080,4],[1085,4],[1091,3],[1095,7],[1103,3],[1108,4],[1114,3],[1118,3],[1122,1],[1124,2],[1127,2],[1130,2],[1133,4],[1139,4],[1144,1]]},"1175":{"position":[[0,4],[5,13],[19,9],[29,6],[39,3],[45,3],[49,1],[51,7],[59,8],[68,7],[76,12],[90,1],[93,2],[96,1],[98,5],[106,9],[118,5],[124,12],[139,5],[145,2],[150,1],[153,1],[158,2],[161,6],[169,8],[178,3],[184,5],[190,13],[204,1],[206,2],[212,1],[214,5],[222,6],[231,4],[236,5],[242,1],[246,4],[251,6]]},"1177":{"position":[[0,4],[5,18],[28,5],[34,4],[43,2],[46,1],[51,7],[62,1],[67,3],[73,3],[77,7],[85,2],[88,6],[97,5],[105,1],[107,1],[111,1],[114,5],[120,10],[144,5],[153,5],[159,5],[167,2],[170,9],[181,5],[187,3],[193,5],[200,4],[206,2],[209,4],[214,1],[232,14]]},"1179":{"position":[[0,4],[5,11],[21,2],[25,2],[31,5],[37,13],[53,2],[57,2],[62,3],[66,7],[86,6],[95,3],[99,6],[112,1],[114,1],[120,1],[122,3],[130,1],[132,1],[136,2],[139,4],[144,4],[150,2],[153,4],[158,7],[167,2],[170,9],[181,3],[185,7],[195,1],[203,3],[207,1],[210,3],[217,5],[223,2],[226,4],[233,3],[237,6],[248,1],[251,1],[253,1],[257,3],[261,4],[267,3],[271,7]]},"1181":{"position":[[0,13],[35,12],[59,14],[77,2],[80,1],[82,2],[99,12],[121,7],[129,5],[138,2],[221,2]]},"1183":{"position":[[0,11],[14,1]]},"1188":{"position":[[14,6],[21,6],[28,2],[31,4],[36,7],[44,9],[56,5],[64,5],[70,4],[77,5],[83,4],[90,6],[109,6],[116,3],[120,6],[128,6],[149,6],[156,6],[163,2],[169,5],[191,4],[196,5],[202,6],[211,2],[214,6],[221,4],[226,6],[233,4],[238,6],[245,7],[253,6],[275,6],[282,6],[289,2],[295,11],[321,4],[327,1],[330,6],[338,11],[350,3],[354,5],[362,3],[366,6],[376,1],[378,5],[384,5],[392,5],[398,1],[400,5],[406,7],[416,2],[419,3],[424,2],[430,1],[432,8],[441,3],[445,2],[450,2],[455,6],[462,3],[466,6],[473,3],[477,7],[488,6],[496,7],[504,3],[508,5]]},"1190":{"position":[[2,6],[16,7],[24,3],[28,2],[34,7],[44,6],[55,4],[61,1],[64,10],[76,6],[83,3],[87,6],[95,6],[104,3],[108,6],[118,1],[121,3],[125,6],[132,6],[139,5],[147,1],[149,1],[153,1],[155,4],[161,3],[166,6],[173,3],[177,7],[188,1],[191,3],[195,6],[204,1],[206,1],[210,1],[212,4],[218,3]]},"1192":{"position":[[0,6],[11,7],[22,4],[27,2],[33,1],[36,11],[58,11],[70,11],[82,6],[89,5],[96,4],[103,11],[117,2],[122,6],[131,4],[138,3],[144,7],[154,5],[161,3],[171,4],[176,5],[182,1],[186,4],[191,11]]},"1194":{"position":[[1,6],[9,8],[22,6],[30,3],[35,5],[42,11],[56,6],[64,5],[70,4],[75,6],[83,3],[89,5],[96,11],[110,6],[118,3],[122,6],[129,6],[136,5],[143,5],[150,3],[156,6],[164,8]]},"1196":{"position":[[0,11],[16,4],[21,9],[35,4],[40,9],[53,6],[60,5],[69,2]]},"1200":{"position":[[2,7],[12,9],[33,7],[41,4],[46,6],[56,3],[62,4],[73,15],[101,4],[106,15],[122,6],[131,8],[142,6],[149,8],[158,4],[163,5],[188,10],[213,4],[218,10],[229,6],[238,5],[246,6],[253,12],[266,4],[272,15],[288,8],[297,4],[302,6],[316,8],[328,10],[348,4],[354,1],[357,10],[369,8],[378,1],[382,6],[390,5],[398,3],[406,15],[423,8],[433,1],[436,8],[446,4],[451,4],[456,5],[466,1],[468,12],[484,3],[488,6],[497,3],[501,8],[525,3],[532,10],[549,4],[555,1],[558,10],[570,3],[578,3],[584,6],[593,4],[598,3],[607,1],[609,12],[623,1],[625,5],[633,3],[637,8],[646,3],[650,7],[659,7],[667,5],[676,1],[678,5],[685,3],[689,8],[701,3],[713,4],[720,1],[722,8],[732,6],[748,4],[756,10],[773,4],[779,1],[782,10],[794,4],[803,5],[809,1],[811,8],[823,4],[828,4],[837,10],[852,10],[864,5],[873,6],[883,12],[897,4],[902,4],[908,15],[926,8],[936,4],[941,4],[946,6],[959,2],[962,10],[973,3],[987,4],[992,5],[998,3],[1004,4],[1009,11],[1022,10],[1033,8],[1044,6],[1052,1],[1057,1],[1062,1],[1067,10],[1078,8],[1089,6],[1097,1],[1102,1],[1107,1],[1122,10],[1133,4],[1162,8],[1173,10],[1186,7],[1206,8],[1215,7],[1239,10],[1258,7],[1304,7],[1322,7]]},"1203":{"position":[[4,2],[10,1],[17,7],[33,5],[46,4],[57,7],[69,5],[98,1],[101,2],[109,2],[115,2],[121,5],[130,7],[150,1],[157,2],[172,7],[188,1],[191,2],[199,2],[205,2],[211,5],[220,7],[236,7],[244,4],[249,6],[259,3],[265,4],[273,4],[278,4],[289,2],[295,4],[300,4],[305,3],[310,1],[313,2],[319,4],[324,4],[329,3],[334,2],[337,4],[346,2],[352,2],[355,4],[360,5],[366,1],[370,4],[375,6],[383,5],[389,5],[395,2],[420,5],[431,2],[434,3],[438,7],[447,5],[456,5],[469,2],[472,2],[475,2],[478,5],[485,2],[488,5],[498,2],[501,3],[505,7],[514,5],[523,5],[536,2],[539,2],[542,2],[545,5],[552,1],[554,5],[564,2],[567,3],[571,7],[580,5],[589,5],[602,2],[605,2],[608,2],[611,5],[618,1],[637,5],[644,4],[654,2],[657,3],[661,7],[670,5],[679,5],[687,4],[695,4],[707,2],[710,2],[713,2],[716,5],[723,2],[726,4],[732,4],[737,5],[744,4],[753,2],[756,3],[760,7],[769,5],[778,5],[786,4],[794,4],[806,2],[809,2],[812,2],[815,5],[822,1],[824,4],[830,5],[836,5],[843,4],[852,2],[855,3],[859,7],[868,5],[877,5],[885,4],[893,4],[905,2],[908,2],[911,2],[914,5],[921,1],[923,4],[929,5]]},"1205":{"position":[[13,9],[24,12],[39,8],[60,5],[69,2],[83,7],[97,3],[108,3],[121,4],[143,7],[151,4],[156,6],[166,3],[172,4],[197,8],[211,4],[216,15],[232,6],[241,8],[252,6],[259,8],[268,4],[273,5],[290,4],[295,10],[306,6],[315,5],[323,6],[330,12],[343,4],[349,15],[365,8],[374,4],[379,6],[388,8],[397,4],[402,6],[428,3],[435,10],[452,4],[458,1],[461,10],[473,3],[481,5],[487,5],[493,1],[495,8],[522,3],[528,6],[537,4],[542,3],[547,2],[555,1],[557,12],[571,2],[575,2],[580,3],[584,7],[593,12],[606,6],[614,7],[622,3],[630,6],[639,1],[641,5],[649,3],[653,8],[662,3],[666,7],[675,7],[683,5],[692,1],[694,5],[710,3],[714,8],[726,3],[730,4],[737,1],[739,8],[749,3],[753,7],[762,8],[771,4],[776,6],[784,7],[792,3],[800,6],[816,8],[832,4],[838,1],[841,10],[853,8],[862,1],[866,6],[874,5],[882,3],[890,15],[907,8],[917,1],[920,8],[930,4],[935,4],[940,5],[950,6],[959,4],[964,1],[966,12],[982,3],[987,6],[996,3],[1000,8],[1009,4],[1016,1],[1018,8],[1028,6],[1035,3],[1039,6],[1047,10],[1058,2],[1061,8],[1070,4],[1084,4],[1092,10],[1106,9],[1121,4],[1127,1],[1130,10],[1142,4],[1151,5],[1157,1],[1159,8],[1177,5],[1183,1],[1185,12],[1210,12],[1225,1],[1227,8],[1248,3],[1252,7],[1261,10],[1272,7],[1280,10],[1295,4],[1300,4],[1309,10],[1324,10],[1336,5],[1345,6],[1355,12],[1369,4],[1374,4],[1380,15],[1398,8],[1408,4],[1413,4],[1418,6],[1429,8],[1439,4],[1444,4],[1449,6],[1462,2],[1465,10],[1476,3],[1482,4],[1487,5],[1493,3],[1499,4],[1504,11],[1517,10],[1528,8],[1539,6],[1547,1],[1552,1],[1557,1],[1562,10],[1573,8],[1584,6],[1592,1],[1597,1],[1602,1],[1607,10],[1618,4]]},"1207":{"position":[[7,7],[15,7],[38,10],[49,9],[70,7],[80,6],[130,8],[160,7],[168,7],[191,8],[200,8],[212,4],[221,7],[229,4],[234,6],[244,7],[254,3],[260,4],[285,8],[299,4],[304,15],[320,6],[329,8],[340,6],[347,8],[356,4],[361,5],[379,4],[384,10],[395,6],[404,5],[412,6],[419,12],[432,4],[438,15],[454,8],[463,4],[468,6],[477,8],[486,4],[491,6],[505,3],[512,10],[529,4],[535,1],[538,10],[550,3],[558,5],[564,5],[570,1],[572,8],[582,3],[588,6],[597,4],[602,3],[607,2],[615,1],[617,12],[631,2],[635,2],[640,3],[644,7],[653,12],[666,6],[674,7],[682,3],[690,6],[699,1],[701,5],[709,3],[713,8],[722,3],[726,7],[735,7],[743,5],[752,1],[754,5],[761,3],[765,8],[777,3],[781,4],[788,1],[790,8],[800,3],[804,7],[813,8],[822,4],[827,6],[835,7],[843,3],[851,6],[867,11],[882,7],[900,4],[906,1],[909,10],[921,11],[933,3],[937,7],[945,7],[954,5],[962,6],[970,5],[978,3],[986,15],[1003,8],[1013,5],[1020,8],[1030,4],[1035,4],[1040,5],[1047,1],[1072,4],[1077,5],[1083,1],[1087,4],[1092,11],[1105,6],[1114,4],[1119,1],[1121,12],[1137,3],[1150,2],[1153,7],[1164,6],[1173,4],[1178,3],[1187,3],[1191,8],[1201,6],[1208,3],[1212,4],[1219,3],[1223,4],[1231,6],[1238,3],[1242,6],[1250,3],[1254,5],[1260,7],[1268,2],[1271,9],[1283,1],[1287,3],[1291,3],[1300,4],[1307,1],[1309,8],[1319,6],[1326,3],[1330,6],[1338,10],[1349,8],[1358,4],[1365,4],[1372,3],[1376,4],[1384,6],[1391,3],[1395,6],[1403,4],[1408,7],[1416,2],[1419,9],[1431,1],[1435,3],[1439,3],[1453,4],[1463,4],[1469,1],[1472,10],[1484,4],[1493,5],[1499,1],[1501,8],[1511,5],[1517,1],[1519,12],[1535,1],[1537,8],[1546,3],[1550,7],[1559,10],[1570,7],[1578,10],[1593,4],[1598,4],[1607,10],[1622,10],[1634,5],[1643,6],[1653,12],[1667,4],[1672,4],[1678,15],[1696,8],[1706,4],[1711,4],[1716,6],[1727,8],[1737,4],[1742,4],[1747,6],[1760,2],[1763,10],[1774,3],[1790,3],[1797,7],[1805,10],[1818,10],[1829,11],[1841,3],[1848,6],[1856,1],[1861,1],[1866,1],[1878,7],[1890,3],[1899,10],[1911,6],[1921,7],[1929,11],[1941,7],[1949,10],[1963,1],[1965,4],[1970,11],[1983,5],[1989,6],[1998,3],[2005,10],[2016,11],[2028,10],[2042,6],[2050,6],[2060,4],[2068,4],[2076,2],[2079,3],[2086,3],[2092,3],[2096,7],[2105,7],[2113,3],[2120,3],[2135,4],[2141,7],[2152,7],[2160,11],[2172,7],[2180,10],[2194,1],[2196,4],[2201,6],[2209,5],[2215,7],[2225,10],[2236,11],[2248,4],[2256,6],[2264,1],[2269,1],[2274,1],[2279,10],[2290,4]]},"1209":{"position":[[0,14],[23,7],[31,7],[99,14],[171,7],[206,7],[240,14],[275,7],[316,7],[343,14],[363,8],[465,7],[476,8],[485,8],[527,14],[569,4],[574,7],[596,4],[605,9],[616,8],[660,1],[687,7],[715,7],[723,7],[736,15],[777,15],[795,18],[823,8],[834,8],[845,7],[853,4],[858,6],[868,7],[878,6],[887,3],[897,7],[914,4],[919,7],[927,9],[939,7],[947,3],[951,7],[959,7],[968,1],[971,7],[980,4],[989,4],[994,6],[1003,3],[1009,5],[1020,7],[1040,4],[1045,7],[1053,6],[1062,5],[1070,6],[1077,7],[1085,4],[1090,7],[1098,4],[1103,4],[1108,6],[1117,4],[1122,4],[1127,6],[1148,4],[1153,11],[1165,6],[1174,3],[1178,5],[1184,4],[1189,4],[1194,6],[1205,4],[1211,1],[1214,11],[1227,4],[1236,4],[1241,6],[1252,6],[1259,1],[1261,4],[1268,4],[1274,1],[1277,11],[1290,3],[1296,5],[1304,6],[1311,1],[1313,3],[1322,15],[1343,4],[1348,15],[1364,6],[1373,11],[1385,8],[1396,6],[1405,4],[1411,1],[1414,15],[1431,7],[1439,3],[1443,7],[1451,7],[1460,1],[1463,7],[1474,5],[1480,5],[1486,1],[1488,4],[1494,1],[1496,5],[1504,1],[1506,8],[1515,3],[1519,7],[1528,15],[1544,8],[1556,1],[1558,5],[1570,15],[1591,4],[1596,15],[1612,6],[1621,11],[1633,6],[1640,4],[1647,6],[1656,4],[1662,1],[1665,15],[1682,7],[1690,3],[1694,7],[1702,7],[1711,1],[1714,7],[1725,5],[1731,5],[1737,1],[1739,4],[1745,1],[1747,6],[1757,1],[1759,5],[1765,5],[1771,1],[1773,6],[1783,4],[1788,10],[1802,7],[1812,6],[1820,7],[1829,5],[1838,6],[1848,7],[1857,4],[1862,4],[1867,7],[1877,4],[1883,4],[1888,4],[1893,6],[1904,4],[1910,4],[1915,4],[1920,6],[1938,3],[1949,4],[1955,1],[1958,7],[1967,3],[1975,5],[1981,5],[1987,1],[1989,4],[1995,3],[2001,6],[2010,4],[2015,3],[2024,1],[2026,7],[2035,3],[2042,7],[2050,10],[2070,3],[2077,3],[2081,7],[2089,3],[2094,1],[2097,4],[2104,1],[2106,4],[2112,6],[2128,4],[2145,4],[2151,1],[2154,7],[2163,4],[2168,3],[2172,7],[2180,7],[2189,3],[2193,7],[2202,5],[2210,6],[2219,4],[2224,1],[2226,7],[2237,3],[2242,6],[2251,4],[2258,3],[2262,4],[2270,6],[2277,3],[2281,3],[2287,4],[2294,3],[2298,4],[2306,6],[2313,3],[2317,3],[2325,4],[2332,1],[2334,4],[2340,6],[2347,6],[2354,3],[2359,7],[2367,2],[2370,7],[2380,4],[2387,3],[2391,4],[2399,6],[2406,3],[2410,3],[2423,4],[2433,4],[2439,1],[2442,7],[2451,4],[2460,5],[2466,1],[2468,4],[2476,1],[2478,4],[2485,4],[2490,4],[2499,7],[2510,10],[2523,2],[2526,7],[2534,3],[2540,3],[2547,7],[2555,10],[2568,6],[2579,15],[2596,11],[2609,11],[2621,4],[2627,4],[2632,4],[2637,6],[2649,8],[2661,6],[2669,1],[2674,1],[2679,1],[2686,7],[2694,4],[2699,3],[2704,6],[2720,6],[2731,15],[2748,11],[2761,11],[2773,4],[2779,4],[2784,4],[2789,6],[2801,6],[2809,4],[2814,4],[2821,6],[2829,1],[2835,7],[2843,4],[2848,3],[2853,6],[2861,3],[2865,7],[2874,7],[2882,5],[2893,6],[2900,6],[2908,7],[2916,4],[2934,13],[2948,1],[2978,6],[2985,3],[2989,4],[3001,7],[3045,7],[3053,4],[3058,6],[3068,7],[3078,6],[3087,3],[3093,4],[3107,7],[3118,4],[3123,7],[3131,9],[3143,7],[3151,7],[3159,7],[3169,7],[3178,4],[3187,4],[3192,6],[3201,3],[3207,5],[3218,7],[3232,4],[3237,7],[3245,6],[3254,5],[3262,6],[3269,7],[3277,4],[3282,7],[3290,4],[3295,4],[3300,6],[3309,4],[3314,4],[3319,6],[3330,4],[3335,10],[3349,7],[3359,6],[3367,7],[3376,5],[3385,6],[3395,7],[3404,4],[3409,4],[3414,7],[3424,4],[3430,4],[3435,4],[3440,6],[3451,4],[3457,4],[3462,4],[3467,6],[3482,4],[3488,1],[3491,7],[3500,3],[3508,5],[3514,5],[3520,1],[3522,4],[3528,3],[3534,6],[3543,4],[3548,3],[3557,1],[3559,7],[3568,3],[3572,7],[3580,7],[3588,10],[3602,1],[3605,4],[3612,1],[3614,4],[3620,6],[3633,4],[3639,1],[3642,7],[3651,4],[3660,5],[3666,1],[3668,4],[3676,1],[3678,4],[3688,4],[3702,4],[3708,1],[3711,7],[3720,4],[3725,3],[3729,7],[3737,7],[3746,3],[3750,7],[3759,5],[3767,6],[3776,4],[3781,1],[3783,7],[3794,3],[3799,6],[3808,4],[3815,3],[3819,4],[3827,6],[3834,3],[3838,3],[3844,4],[3851,3],[3855,4],[3863,6],[3870,3],[3874,3],[3882,4],[3889,3],[3893,4],[3901,6],[3908,3],[3912,3],[3918,4],[3925,1],[3927,4],[3933,6],[3940,6],[3947,3],[3952,7],[3960,7],[3982,13],[3996,1],[4035,4],[4040,13],[4054,1],[4056,3],[4061,6],[4070,6],[4077,1],[4079,3],[4083,5],[4089,4],[4094,4],[4099,6],[4108,7],[4116,4],[4121,1],[4125,4],[4130,16],[4147,1],[4149,3],[4157,13],[4171,1],[4176,6],[4184,13],[4198,1],[4202,4],[4208,4],[4213,4],[4218,6],[4229,7],[4238,4],[4243,4],[4248,1],[4251,1],[4268,4],[4274,1],[4277,13],[4291,1],[4295,4],[4304,4],[4309,6],[4320,6],[4327,1],[4329,4],[4336,4],[4342,1],[4345,13],[4359,1],[4363,3],[4369,5],[4377,6],[4384,1],[4386,3],[4395,4],[4405,4],[4411,1],[4414,13],[4428,1],[4432,4],[4437,3],[4441,7],[4449,7],[4459,1],[4462,5],[4471,6],[4480,4],[4487,3],[4491,4],[4499,3],[4503,4],[4508,1],[4510,6],[4517,4],[4523,3],[4527,3],[4533,4],[4538,3],[4547,1],[4549,7],[4558,6],[4565,3],[4570,1],[4572,3],[4624,15],[4645,6],[4688,4],[4693,15],[4709,6],[4719,13],[4735,6],[4745,4],[4750,18],[4772,15],[4790,6],[4798,15],[4815,13],[4830,16],[4849,6],[4864,4],[4870,1],[4873,15],[4890,7],[4898,3],[4902,7],[4910,7],[4919,1],[4922,7],[4933,5],[4939,5],[4945,1],[4947,4],[4953,1],[4955,6],[4964,1],[4966,5],[4972,1],[4974,7],[4985,1],[4987,5],[5039,15],[5091,4],[5096,15],[5112,6],[5121,8],[5132,6],[5139,4],[5144,4],[5149,6],[5158,3],[5162,5],[5170,4],[5175,18],[5194,5],[5202,6],[5211,15],[5229,6],[5237,15],[5254,8],[5264,5],[5271,4],[5277,4],[5282,4],[5287,6],[5302,4],[5308,1],[5311,15],[5328,7],[5336,3],[5340,7],[5348,7],[5357,1],[5360,7],[5371,5],[5377,5],[5383,1],[5385,4],[5391,1],[5393,5],[5401,1],[5403,8],[5412,3],[5416,7],[5425,5],[5431,7],[5442,1],[5444,5],[5453,4],[5459,1],[5462,15],[5479,4],[5488,4],[5493,6],[5504,6],[5511,1],[5513,4],[5520,4],[5526,1],[5529,15],[5546,3],[5552,5],[5560,6],[5567,1],[5569,3],[5581,4],[5589,8],[5600,8],[5614,4],[5619,4],[5628,1],[5633,10],[5646,2],[5649,1],[5651,3],[5657,3],[5664,7],[5672,10],[5688,3],[5692,5],[5698,6],[5708,18],[5729,6],[5737,1],[5742,1],[5747,1],[5752,1],[5756,1],[5758,4],[5763,3],[5768,6],[5779,3],[5783,5],[5789,6],[5799,18],[5820,1],[5824,1],[5826,4],[5831,3],[5836,6],[5844,5],[5851,3],[5858,6],[5865,4],[5870,3],[5875,2],[5878,3],[5885,3],[5891,3],[5895,7],[5904,8],[5913,5],[5922,3],[5929,4],[5936,3],[5940,7],[5949,3],[5953,5],[5962,5],[5979,10],[5991,6],[6001,7],[6009,11],[6021,3],[6026,1],[6028,4],[6033,11],[6046,5],[6052,6],[6061,7],[6072,18],[6093,1],[6097,1],[6099,4],[6104,10],[6116,7],[6125,6],[6133,3],[6140,7],[6148,4],[6153,10],[6165,3],[6169,7],[6178,4],[6183,7],[6194,6],[6202,3],[6207,1],[6209,4],[6224,5],[6230,7],[6240,1],[6242,1],[6244,1],[6247,3],[6251,5],[6259,1],[6261,1],[6263,1],[6266,4],[6271,7],[6283,7],[6291,8],[6300,8],[6320,15],[6336,6],[6344,13],[6358,3],[6362,6],[6369,3],[6376,18],[6395,6],[6403,13],[6417,4],[6425,17],[6443,6],[6451,13],[6465,6],[6475,18],[6494,6],[6502,5],[6510,6]]},"1212":{"position":[[7,6],[30,5],[36,9],[46,6],[53,2]]},"1214":{"position":[[6,7],[26,7],[72,7],[100,7],[111,7]]},"1216":{"position":[[9,7],[20,6],[27,6],[34,2],[40,5],[62,4],[67,5],[73,6],[82,2],[85,6],[92,4],[97,6],[104,4],[109,6],[116,7],[124,6],[141,7],[149,4],[154,6],[163,6],[182,6],[189,6],[196,2],[199,4],[205,1],[208,6],[216,6],[223,3],[227,7],[235,7],[246,3],[252,6],[261,4],[268,3],[272,4],[280,6],[287,4],[292,3],[301,1],[303,7],[312,3],[316,6],[325,6],[333,5],[339,4],[345,1],[349,1],[354,1],[356,1],[360,3],[364,4],[370,3],[374,4],[380,3],[384,7],[404,2],[407,3],[411,7],[422,3],[428,3],[432,7],[443,3],[447,7],[456,3],[462,1],[466,3],[470,7]]},"1218":{"position":[[10,4],[16,1],[19,10],[31,3],[39,3],[45,6],[54,4],[61,1],[63,6],[71,6],[78,4],[83,3],[92,1],[94,5],[101,3],[105,6],[115,1],[118,3],[124,1],[126,1],[130,1],[132,4],[138,3],[156,7],[167,4],[172,4],[177,6],[185,1],[188,1],[190,6],[197,4],[202,6],[209,5],[216,4],[222,1],[224,4],[230,4],[237,3],[243,7],[252,3],[257,7],[266,7],[288,5],[299,7],[307,3],[311,6],[321,1],[324,3],[328,5],[334,4],[339,6],[348,1],[350,1],[354,1],[356,4],[364,5],[379,7],[387,3],[391,2],[397,7],[407,6],[418,4],[424,1],[427,10],[439,6],[446,3],[450,6],[458,6],[467,3],[471,6],[481,1],[484,3],[488,6],[495,6],[502,5],[510,1],[512,1],[516,1],[518,4],[524,3],[529,6],[536,3],[540,7],[551,1],[554,3],[558,6],[567,1],[569,1],[573,1],[575,4],[581,3]]},"1220":{"position":[[0,10],[12,6],[20,6],[28,8],[41,6],[49,3],[54,5],[61,11],[75,6],[83,5],[89,4],[94,6],[102,3],[108,5],[115,11],[129,6],[137,3],[141,5],[147,4],[152,6],[160,3],[165,5],[172,11],[186,6],[194,4],[199,5],[205,2],[208,6],[216,5],[223,3],[229,6],[237,3],[241,6],[248,6],[255,5],[262,5],[269,3],[275,6],[283,8]]},"1222":{"position":[[0,11],[62,3]]},"1225":{"position":[[35,3]]},"1227":{"position":[[0,6],[32,8],[52,10],[63,14],[92,3],[100,2],[105,7],[115,4]]},"1230":{"position":[[0,7],[8,6],[15,6],[25,7],[35,6],[44,3],[50,4],[61,7],[94,6],[108,4],[113,7],[121,9],[133,5],[141,5],[147,4],[154,5],[160,4],[167,6],[179,6],[192,4],[197,6],[204,6],[224,8],[233,3],[237,6],[244,7],[258,8],[273,5],[279,4],[284,7],[302,7],[310,4],[315,5],[326,5],[348,4],[353,5],[359,6],[368,4],[373,6],[380,4],[385,6],[392,7],[400,6],[412,9],[430,4],[435,9],[448,6],[457,6],[465,6],[473,8],[483,4],[488,3],[492,6],[499,7],[509,7],[518,4],[523,4],[528,5],[535,3],[548,15],[569,4],[575,1],[578,6],[586,15],[602,1],[604,7],[613,5],[621,1],[623,5],[629,4],[636,5],[642,1],[644,5],[650,6],[659,4],[667,1],[669,4],[676,2],[679,1],[682,2],[688,1],[690,8],[699,4],[706,2],[711,6],[718,6],[725,3],[730,7],[738,7],[746,10],[761,1],[763,8],[772,4],[780,1],[782,6],[789,3],[798,8],[814,4],[820,1],[823,6],[831,8],[842,5],[850,1],[852,5],[858,5],[866,5],[872,1],[874,5],[880,7],[890,3],[894,1],[897,1],[902,5],[908,1],[910,8],[921,2],[924,3],[931,1],[933,5],[942,3],[949,3],[955,6],[962,3],[970,6],[977,3],[986,7],[1001,4],[1007,1],[1010,6],[1018,7],[1028,5],[1036,1],[1038,5],[1044,5],[1052,5],[1058,1],[1060,5],[1066,7],[1076,3],[1080,3],[1084,5],[1090,3],[1094,1],[1097,1],[1102,5],[1108,1],[1110,8],[1121,2],[1124,1],[1129,1],[1131,4],[1139,1],[1144,3],[1150,3],[1156,1],[1162,6],[1169,3],[1178,9],[1196,3],[1201,4],[1207,1],[1210,6],[1218,9],[1228,3],[1232,5],[1241,1],[1243,7],[1254,3],[1263,9],[1287,4],[1293,1],[1296,6],[1304,9],[1314,3],[1318,7],[1326,7],[1337,3],[1343,6],[1352,4],[1359,3],[1363,4],[1371,6],[1378,4],[1383,3],[1392,1],[1394,7],[1403,3],[1407,6],[1416,6],[1424,5],[1430,4],[1436,1],[1440,1],[1445,1],[1447,1],[1451,3],[1455,4],[1461,3],[1465,4],[1471,3],[1475,7]]},"1232":{"position":[[0,7],[8,7],[16,6],[26,3],[32,11],[44,6],[57,10],[73,4],[78,10],[89,6],[98,4],[103,6],[110,6],[118,6],[125,6],[132,5],[138,4],[143,6],[150,6],[157,4],[162,6],[173,4],[178,13],[192,4],[197,6],[205,6],[213,6],[220,6],[229,10],[242,6],[250,10],[262,4],[268,4],[274,6],[282,6],[290,5],[297,4],[302,4],[307,6],[315,3],[321,6],[329,4],[334,4],[339,6],[354,4],[360,1],[363,10],[375,5],[383,5],[391,3],[395,6],[405,1],[408,8],[420,1],[424,1],[426,4],[432,2],[435,1],[437,3],[443,6],[450,3],[456,4],[462,1],[465,10],[477,4],[484,5],[492,3],[496,6],[506,1],[509,8],[521,1],[525,1],[527,4],[533,5],[539,1],[541,6],[549,6],[556,3],[562,4],[568,1],[571,10],[583,4],[590,6],[599,6],[606,1],[608,4],[615,4],[621,1],[624,10],[636,3],[644,3],[650,6],[659,4],[666,1],[668,6],[676,6],[683,4],[688,3],[697,1],[699,5],[706,3],[710,6],[720,1],[723,3],[729,1],[731,1],[735,1],[737,4],[743,3],[761,1],[763,6],[770,9],[780,6],[787,5],[794,4],[800,1],[802,4],[808,4],[815,3],[821,7],[830,3],[844,4],[850,1],[853,10],[865,3],[869,3],[873,6],[883,1],[885,5],[894,3]]},"1234":{"position":[[0,7],[8,4],[13,6],[23,7],[33,11],[45,6],[54,11],[66,7],[76,4],[84,4],[89,4],[101,1],[110,6],[120,6],[127,9],[142,1],[150,6],[160,7],[168,13],[183,6],[192,6],[200,2],[203,3],[210,6],[217,15],[233,6],[242,3],[249,3],[255,5],[261,3],[271,1],[281,2],[284,3],[291,6],[298,8],[310,3],[317,3],[323,5],[329,3],[339,1],[349,3],[354,6],[364,7],[372,10],[383,7],[391,10],[405,5],[411,6],[420,2],[423,6],[430,9],[440,3],[448,1],[458,6],[465,3],[470,5],[477,11],[492,4],[497,5],[503,1],[507,4],[512,6],[523,1],[533,2],[536,3],[543,6],[550,7],[561,3],[568,3],[574,5],[580,3]]},"1236":{"position":[[1,6],[9,8],[22,6],[30,3],[35,5],[42,11],[56,6],[64,5],[70,4],[75,6],[83,3],[89,5],[96,11],[110,6],[118,8]]},"1238":{"position":[[3,4],[11,7],[56,6],[63,4],[85,5],[93,3],[97,3]]},"1240":{"position":[[7,6],[18,7],[44,7],[59,9],[88,7],[107,4],[112,4],[117,9]]},"1246":{"position":[[16,6],[23,7],[31,2],[37,12],[60,4],[65,12],[78,3],[87,4],[104,5],[112,7],[120,12],[135,4],[140,7],[148,7],[161,12],[174,6],[183,4],[189,1],[191,12],[205,6],[214,6],[261,6],[273,6],[281,7],[292,7],[303,7],[313,1],[321,11],[344,4],[349,11],[361,6],[370,3],[374,7],[382,5],[388,12],[413,6],[420,6],[427,2],[430,4],[436,1],[439,11],[452,12],[465,4],[470,6],[478,5],[486,1],[488,2],[491,4],[498,5],[504,1],[506,2],[509,6],[518,4],[524,2],[530,1],[532,8],[541,4],[547,2],[551,2],[556,6],[563,6],[570,3],[575,7],[583,3],[587,10],[602,2],[605,4],[610,5],[619,7],[629,6],[636,6],[643,3],[648,7],[656,7],[664,7],[676,2],[679,3],[686,4],[691,3],[695,5],[704,3],[711,3],[717,6],[724,3],[730,4],[735,5],[743,7],[751,3],[755,7],[764,7],[775,4],[780,3],[784,4],[792,6],[799,3],[805,4],[811,1],[814,11],[827,11],[839,4],[844,6],[852,5],[860,1],[862,2],[865,4],[872,5],[878,1],[880,2],[883,6],[892,4],[898,2],[904,1],[906,8],[915,4],[921,2],[925,2],[930,6],[937,6],[944,3],[949,7],[957,3],[961,10],[976,2],[979,4],[984,5],[993,7],[1003,6],[1010,6],[1017,3],[1022,7],[1030,7],[1038,7],[1050,2],[1053,3],[1060,4],[1065,3],[1069,4],[1077,3],[1084,3],[1090,6],[1097,3],[1103,4],[1108,5],[1116,7],[1124,3],[1128,7],[1137,7],[1148,4],[1153,3],[1157,4],[1165,6],[1172,3],[1178,6],[1211,6],[1255,9],[1267,6],[1274,4],[1280,1],[1283,11],[1296,6],[1303,3],[1307,7],[1315,7],[1326,3],[1332,6],[1341,4],[1348,3],[1352,4],[1360,6],[1367,4],[1372,3],[1381,1],[1383,7],[1392,3],[1396,6],[1405,11],[1418,5],[1424,4],[1430,1],[1436,1],[1438,1],[1442,3],[1446,4],[1452,3],[1456,7],[1472,11],[1487,2],[1490,3],[1494,2],[1505,2],[1508,3],[1512,7],[1523,3],[1529,3],[1533,7],[1544,5],[1550,4],[1556,1],[1559,7],[1569,7],[1577,2],[1580,6],[1589,4],[1596,2],[1603,8],[1625,1],[1627,2],[1630,5],[1638,4],[1644,2],[1650,1],[1652,8],[1661,3],[1665,2],[1669,1],[1671,2],[1674,7],[1684,2],[1688,2],[1694,4],[1699,5],[1708,7],[1718,2],[1721,3],[1725,7],[1736,3],[1742,3],[1746,7],[1757,5],[1763,4],[1769,3],[1774,7],[1784,7],[1792,11],[1806,4],[1818,8],[1845,2],[1848,4],[1853,1],[1855,7],[1864,1],[1866,5],[1875,6],[1885,1],[1887,6],[1894,1],[1897,2],[1900,1],[1902,7],[1913,3],[1919,6],[1928,4],[1933,1],[1935,7],[1946,6],[1954,4],[1961,4],[1966,5],[1972,4],[1977,8],[1986,1],[1988,9],[2001,4],[2006,11],[2020,1],[2022,7],[2033,5],[2039,4],[2045,3],[2050,7],[2060,7],[2070,4],[2086,4],[2091,3],[2096,3]]},"1248":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[62,6],[70,8],[83,4],[89,8],[102,6],[110,3],[115,5],[122,11],[136,11],[149,5],[155,4],[160,6],[170,5],[177,11],[191,6],[199,3],[203,5],[209,4],[214,6],[222,7],[230,2],[233,6],[241,6],[249,3],[254,5],[261,4],[268,11],[281,5],[287,4],[292,6],[302,5],[309,4],[316,6],[324,3],[328,5],[334,4],[339,6],[347,4],[352,7],[360,7],[369,11],[382,4],[387,5],[393,2],[396,7],[405,5],[412,3],[418,3],[422,3],[426,5],[432,7],[443,6],[451,8],[464,4],[470,8]]},"1254":{"position":[[21,6],[28,7],[36,2],[42,7],[75,6],[89,4],[94,7],[102,9],[114,5],[122,5],[128,4],[135,5],[141,4],[148,6],[155,6],[162,5],[169,5],[178,12],[200,12],[217,6],[237,11],[260,4],[265,11],[277,6],[286,3],[290,7],[298,5],[304,12],[336,3],[340,12],[353,4],[360,6],[371,8],[381,4],[389,6],[396,6],[403,2],[409,8],[430,15],[448,8],[457,4],[463,1],[466,11],[479,8],[488,3],[492,7],[501,5],[509,1],[511,2],[514,4],[521,5],[527,1],[529,2],[532,6],[541,4],[549,3],[553,4],[560,2],[563,1],[566,2],[572,1],[574,8],[583,4],[590,2],[595,6],[602,6],[609,3],[614,7],[622,7],[630,10],[645,1],[647,8],[656,4],[665,11],[678,3],[683,3],[688,5],[695,7],[704,4],[710,3],[714,12],[732,3],[736,7],[745,10],[759,3],[763,4],[771,6],[778,3],[803,6],[810,6],[817,2],[820,4],[826,1],[829,11],[842,8],[856,6],[864,5],[873,1],[875,2],[878,5],[886,5],[892,1],[894,2],[897,7],[907,7],[918,4],[923,3],[927,6],[934,4],[940,4],[948,4],[953,3],[957,6],[964,4],[970,6],[982,6],[991,3],[995,5],[1001,4],[1006,6],[1014,5],[1020,5],[1028,4],[1033,4],[1038,6],[1046,5],[1054,2],[1057,4],[1062,4],[1070,6],[1077,3],[1081,6],[1089,8],[1098,10],[1109,2],[1113,1],[1117,4],[1125,2],[1128,7],[1136,4],[1144,6],[1151,3],[1157,4],[1162,4],[1170,4],[1175,4],[1181,2],[1187,1],[1189,8],[1198,4],[1204,2],[1208,2],[1213,6],[1220,3],[1224,6],[1232,7],[1241,1],[1243,3],[1247,10],[1260,4],[1268,3],[1272,1],[1275,3],[1282,5],[1288,4],[1293,4],[1300,2],[1303,3],[1310,5],[1316,3],[1322,3],[1329,3],[1335,6],[1342,3],[1350,7],[1358,4],[1366,4],[1371,4],[1376,4],[1384,5],[1390,6],[1399,6],[1406,6],[1414,4],[1420,6],[1427,3],[1433,3],[1437,4],[1445,5],[1451,1],[1453,8],[1464,2],[1468,7],[1476,4],[1484,2],[1487,3],[1494,5],[1500,4],[1507,3],[1514,3],[1520,6],[1527,3],[1532,3],[1542,6],[1549,6],[1557,3],[1563,4],[1569,1],[1572,11],[1585,8],[1596,5],[1604,6],[1612,3],[1619,1],[1621,8],[1639,3],[1643,1],[1646,4],[1654,5],[1660,6],[1669,2],[1672,3],[1679,1],[1681,12],[1694,4],[1701,3],[1708,3],[1725,6],[1732,3]]},"1256":{"position":[[11,4],[17,1],[20,10],[32,12],[49,6],[58,6],[67,6],[75,4]]},"1258":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,7],[459,5],[466,3],[472,3],[476,3],[480,5],[486,7],[496,8],[505,3],[509,8],[522,6],[530,8],[542,7],[551,6],[559,4],[565,8],[577,7],[586,4]]},"1260":{"position":[[10,6],[17,5]]},"1262":{"position":[[6,6],[13,5]]},"1264":{"position":[[32,2],[37,9],[101,4],[106,8],[216,8],[230,4],[235,8],[244,9],[256,4],[261,7],[269,6],[277,5],[293,13],[314,4],[319,13],[333,6],[342,4],[348,1],[350,13],[365,4],[370,7],[378,6],[386,5],[394,3],[398,6],[415,1],[417,1],[421,7],[430,6],[437,3],[446,11],[465,4],[470,11],[482,6],[491,4],[497,1],[499,11],[512,4],[517,7],[525,6],[533,5],[541,3],[545,6],[562,1],[564,1],[568,7],[577,6],[584,3],[602,19],[627,4],[632,19],[652,6],[661,8],[670,8],[681,4],[686,22],[709,8],[718,8],[729,19],[751,6],[759,19],[779,8],[789,8],[801,4],[807,1],[810,19],[831,12],[844,7],[852,6],[875,7],[886,3],[890,7],[903,1],[911,7],[920,1],[924,1],[926,8],[935,4],[940,7],[957,4],[962,4],[985,13],[1002,13],[1018,7],[1029,22],[1052,13],[1067,7],[1075,12],[1089,5],[1117,11],[1132,11],[1146,7],[1156,22],[1179,11],[1192,7],[1200,12],[1214,5],[1241,11],[1259,4],[1264,11],[1276,6],[1285,4],[1291,1],[1293,11],[1306,9],[1316,7],[1324,6],[1332,5],[1340,3],[1344,6],[1359,1],[1361,1],[1365,7],[1374,6],[1381,3],[1400,14],[1421,4],[1426,14],[1441,6],[1450,11],[1462,11],[1476,4],[1482,1],[1485,14],[1501,12],[1514,7],[1522,6],[1545,7],[1556,3],[1560,7],[1573,1],[1581,7],[1590,1],[1594,1],[1596,11],[1608,9],[1618,7],[1635,4],[1640,4],[1649,9],[1662,14],[1677,11],[1690,11],[1705,9],[1715,12],[1729,5],[1754,14]]},"1266":{"position":[[34,2],[39,9],[58,4],[63,17],[81,6],[91,15],[117,6],[124,6]]},"1268":{"position":[[48,7],[59,2],[62,6],[70,18],[70,10],[81,7]]},"1270":{"position":[[12,4],[17,8],[40,8],[49,7]]},"1272":{"position":[[16,9],[28,2],[34,6],[60,7],[78,6],[86,3],[90,1],[95,1],[98,1],[102,7],[110,6],[120,1],[126,2],[129,10],[140,15]]},"1274":{"position":[[32,18],[57,2],[65,4],[70,18],[89,6],[98,9],[108,6],[123,9],[133,4],[138,4]]},"1276":{"position":[[12,3],[16,7],[34,7],[51,4],[57,1],[60,15],[77,11],[89,5],[97,6],[105,5],[113,3],[121,18],[145,8],[155,4],[160,4],[165,5],[172,1],[176,6],[185,4],[190,1],[192,13],[209,3],[214,6],[223,3],[227,8],[236,4],[243,4],[248,5],[254,1],[258,4],[263,6],[272,6],[279,6],[286,3],[291,6],[298,7]]},"1278":{"position":[[0,7],[8,4],[13,6],[23,3],[29,4],[40,15],[56,7],[64,1],[66,3],[70,2],[73,5],[79,3],[83,9],[93,7],[101,7],[109,8],[118,4],[123,15],[139,6],[148,5],[156,6],[163,13],[177,4],[183,18],[202,12],[215,4],[220,6],[234,18],[253,10],[264,1],[266,7],[274,2],[277,6],[284,3],[288,5],[294,4],[299,18],[318,6],[327,8],[338,6],[345,8],[354,4],[359,5],[370,18],[389,7],[397,3],[401,6],[408,1],[410,3],[414,15],[430,4],[435,18],[457,15],[475,3],[483,15],[500,5],[509,6],[519,13],[534,4],[539,4],[545,18],[566,12],[580,4],[585,4],[590,6],[603,2],[606,3],[610,15],[628,6],[635,3],[644,11],[656,6],[663,7],[671,3],[675,5],[681,2],[684,7],[692,1],[694,7],[702,7],[710,3],[714,7],[722,4],[728,1],[731,15],[748,11],[760,8],[771,6],[779,5],[787,3],[795,18],[815,8],[825,8],[835,8],[845,4],[850,4],[855,5],[862,1],[869,8],[878,2],[881,5],[887,8],[898,1],[900,13],[917,3],[921,6],[930,3],[934,8],[948,8],[957,10],[968,5],[974,3],[978,10],[989,4],[995,1],[998,15],[1015,8],[1028,5],[1034,1],[1036,12],[1055,15],[1071,7],[1079,8],[1088,8],[1097,2],[1100,1],[1102,6],[1109,4],[1114,6],[1121,4],[1127,1],[1130,15],[1147,15],[1167,3],[1173,6],[1182,4],[1187,3],[1196,1],[1198,13],[1213,1],[1215,5],[1223,3],[1227,8],[1236,3],[1240,7],[1249,7],[1257,5],[1266,1],[1268,5],[1275,3],[1279,8],[1291,3],[1295,4],[1302,1],[1304,12],[1318,3],[1322,7],[1331,8],[1340,4],[1345,10],[1358,6],[1371,4],[1376,4],[1388,6],[1395,3],[1399,5],[1405,3],[1409,10],[1420,10],[1434,18],[1455,5],[1461,10],[1472,8],[1486,8],[1495,4],[1500,7],[1508,2],[1511,4],[1520,4],[1525,5],[1531,3],[1537,4],[1542,11],[1555,2],[1558,3],[1565,10],[1576,11],[1590,6],[1598,1],[1603,1],[1608,1],[1614,3],[1621,3],[1627,3],[1631,7],[1640,5],[1646,8],[1655,5],[1664,3],[1675,2],[1678,4],[1687,4],[1692,5],[1698,1],[1702,4],[1707,6],[1715,2],[1718,3],[1725,10],[1736,11],[1750,6],[1758,1],[1763,1],[1768,1],[1774,3],[1781,3],[1787,3],[1791,7],[1800,5],[1806,8],[1815,5],[1824,3],[1838,4],[1843,4],[1848,3],[1852,3],[1856,7],[1864,2],[1867,7],[1875,4],[1880,5],[1886,1],[1890,4],[1895,6],[1919,7],[1948,10],[1978,7],[2006,12],[2039,7],[2047,4],[2052,6],[2062,7],[2072,6],[2081,3],[2087,4],[2094,4],[2105,7],[2113,10],[2124,1],[2126,10],[2137,2],[2140,5],[2146,4],[2151,8],[2160,4],[2165,7],[2173,6],[2182,5],[2190,6],[2197,7],[2205,3],[2212,5],[2218,7],[2226,4],[2231,4],[2236,8],[2245,4],[2250,4],[2258,4],[2263,6],[2270,9],[2285,15],[2301,12],[2314,1],[2316,5],[2322,6],[2329,9],[2339,4],[2344,15],[2360,6],[2369,8],[2380,6],[2387,8],[2396,4],[2401,5],[2407,9],[2417,6],[2427,3],[2431,7],[2439,9],[2449,4],[2454,4],[2462,3],[2466,8],[2480,17],[2498,10],[2509,10],[2520,8],[2529,4],[2534,17],[2552,6],[2561,18],[2580,3],[2587,6],[2594,4],[2599,3],[2603,8],[2612,14],[2627,4],[2632,8],[2644,7],[2652,3],[2656,4],[2661,7],[2669,16],[2686,4],[2694,6],[2702,8],[2711,5],[2717,6],[2724,8],[2738,10],[2749,7],[2757,4],[2762,4],[2767,4],[2772,6],[2779,4],[2784,10],[2795,4],[2800,10],[2811,6],[2820,14],[2835,7],[2843,7],[2851,17],[2869,11],[2881,4],[2887,15],[2903,9],[2913,4],[2918,4],[2923,7],[2934,3],[2938,7],[2946,3],[2950,4],[2955,4],[2960,7],[2968,11],[2980,4],[2985,4],[2995,7],[3003,7],[3011,7],[3019,3],[3023,6],[3030,10],[3041,8],[3050,4],[3055,6],[3064,12],[3077,4],[3082,4],[3087,6],[3094,4],[3099,9],[3114,13],[3128,7],[3136,1],[3138,10],[3149,10],[3160,8],[3169,4],[3174,13],[3188,4],[3193,17],[3213,10],[3226,2],[3229,4],[3234,18],[3256,1],[3260,4],[3265,18],[3286,2],[3291,2],[3294,4],[3299,14],[3317,1],[3321,4],[3326,14],[3343,1],[3347,4],[3352,6],[3361,6],[3369,10],[3381,14],[3397,7],[3405,7],[3414,1],[3418,7],[3427,4],[3433,11],[3446,4],[3451,4],[3457,15],[3474,4],[3479,18],[3500,9],[3511,4],[3516,4],[3521,4],[3526,7],[3536,11],[3549,4],[3554,4],[3559,4],[3568,8],[3578,4],[3583,4],[3588,6],[3606,3],[3610,6],[3617,3],[3621,10],[3632,1],[3634,10],[3645,4],[3650,4],[3656,1],[3659,10],[3671,3],[3679,1],[3681,6],[3688,3],[3692,1],[3695,5],[3701,1],[3703,6],[3710,4],[3717,3],[3723,6],[3732,4],[3737,3],[3746,1],[3748,11],[3761,1],[3763,14],[3778,3],[3783,4],[3788,8],[3802,1],[3804,9],[3815,1],[3817,14],[3832,8],[3842,4],[3847,3],[3856,1],[3858,11],[3871,3],[3880,7],[3888,9],[3898,8],[3907,4],[3914,1],[3916,8],[3926,6],[3939,4],[3945,1],[3948,10],[3960,14],[3975,3],[3980,15],[3999,5],[4005,5],[4011,3],[4015,8],[4028,6],[4036,5],[4042,3],[4046,10],[4057,4],[4062,2],[4065,1],[4067,7],[4075,16],[4097,8],[4106,5],[4112,6],[4119,8],[4130,1],[4132,14],[4149,7],[4158,5],[4165,3],[4169,8],[4179,7],[4188,1],[4190,14],[4205,7],[4215,1],[4218,8],[4228,4],[4233,3],[4242,3],[4246,6],[4254,7],[4262,5],[4269,1],[4271,1],[4276,1],[4278,1],[4282,1],[4284,14],[4299,7],[4308,1],[4310,14],[4325,5],[4332,3],[4336,8],[4348,3],[4354,4],[4360,1],[4363,10],[4375,14],[4390,8],[4399,4],[4404,7],[4415,8],[4427,1],[4429,14],[4444,5],[4450,8],[4465,8],[4474,7],[4482,3],[4486,4],[4491,3],[4495,4],[4500,7],[4508,7],[4516,4],[4522,1],[4525,10],[4537,8],[4546,3],[4550,7],[4558,7],[4567,5],[4575,6],[4583,5],[4591,3],[4599,15],[4616,8],[4626,5],[4633,8],[4643,4],[4648,4],[4653,5],[4661,9],[4672,3],[4676,7],[4685,3],[4690,1],[4694,4],[4699,3],[4705,8],[4718,9],[4729,4],[4734,3],[4743,6],[4752,4],[4757,1],[4759,11],[4774,3],[4779,6],[4788,4],[4793,3],[4802,3],[4806,8],[4816,6],[4823,3],[4827,4],[4834,3],[4838,4],[4846,6],[4853,3],[4857,3],[4865,4],[4872,1],[4874,8],[4884,6],[4891,6],[4898,3],[4903,10],[4914,2],[4917,8],[4926,4],[4933,4],[4940,3],[4944,4],[4952,6],[4959,3],[4963,3],[4976,8],[4985,6],[4992,9],[5002,3],[5006,7],[5014,4],[5019,3],[5023,4],[5029,1],[5032,10],[5044,8],[5053,3],[5057,7],[5065,7],[5075,7],[5084,5],[5093,8],[5105,4],[5110,4],[5115,7],[5124,6],[5133,4],[5138,1],[5140,9],[5153,8],[5163,6],[5172,4],[5177,5],[5188,8],[5198,6],[5205,5],[5212,3],[5216,4],[5223,3],[5227,4],[5235,6],[5242,7],[5253,3],[5257,3],[5265,4],[5272,1],[5274,8],[5284,6],[5291,7],[5302,6],[5309,3],[5314,10],[5325,2],[5328,8],[5337,4],[5344,4],[5351,3],[5355,4],[5363,6],[5370,7],[5381,3],[5385,3],[5398,4],[5403,10],[5414,5],[5420,4],[5425,3],[5429,10],[5440,4],[5446,1],[5449,10],[5461,4],[5470,1],[5472,12],[5485,2],[5488,4],[5497,5],[5503,1],[5505,8],[5515,1],[5517,6],[5524,4],[5531,5],[5537,1],[5539,11],[5552,5],[5558,1],[5560,9],[5571,5],[5577,1],[5579,11],[5592,3],[5596,7],[5605,10],[5616,7],[5624,10],[5645,14],[5660,8],[5669,9],[5679,5],[5685,3],[5689,6],[5696,10],[5707,4],[5713,1],[5716,10],[5728,14],[5743,3],[5747,7],[5755,7],[5764,3],[5768,4],[5776,5],[5784,6],[5793,4],[5798,1],[5800,11],[5815,3],[5820,6],[5827,3],[5831,4],[5838,1],[5840,8],[5850,6],[5857,6],[5864,3],[5869,10],[5880,2],[5883,8],[5892,4],[5899,4],[5906,3],[5910,4],[5918,6],[5925,3],[5929,3],[5939,4],[5944,4],[5956,12],[5969,7],[5977,4],[5985,17],[6004,18],[6024,2],[6028,14],[6044,1],[6048,4],[6053,6],[6061,16],[6079,5],[6089,5],[6095,2],[6098,7],[6106,2],[6109,6],[6118,10],[6132,13],[6146,4],[6152,2],[6155,10],[6166,3],[6175,7],[6183,5],[6189,4],[6194,7],[6202,3],[6207,6],[6217,7],[6225,11],[6237,7],[6245,10],[6259,1],[6261,4],[6266,6],[6274,5],[6280,6],[6292,3],[6296,5],[6302,3],[6309,10],[6320,8],[6329,3],[6336,6],[6344,1],[6349,1],[6354,1],[6359,2],[6362,3],[6369,3],[6375,3],[6379,7],[6388,5],[6394,7],[6402,5],[6411,3],[6421,3],[6425,5],[6431,5],[6438,3],[6445,10],[6456,8],[6465,3],[6470,2],[6473,3],[6480,3],[6486,3],[6490,7],[6499,5],[6505,7],[6513,5],[6522,3],[6529,4],[6536,3],[6540,6],[6548,7],[6556,5],[6563,1],[6565,1],[6570,1],[6572,1],[6576,5],[6582,7],[6591,5],[6597,5],[6609,7],[6617,6],[6624,7],[6632,10],[6643,14],[6658,3],[6663,4],[6672,3],[6676,7],[6685,9],[6695,6],[6702,7],[6715,10],[6726,4],[6735,8],[6744,4],[6749,8],[6759,5],[6765,7],[6773,6],[6780,4],[6785,10],[6796,3],[6800,10],[6811,8],[6820,5],[6826,6],[6833,3],[6837,6],[6844,8],[6853,12],[6866,7],[6875,17],[6893,6],[6900,6],[6907,7],[6915,4],[6920,7],[6928,8],[6937,6],[6944,8],[6953,4],[6958,10],[6969,8],[6978,13],[6992,8],[7002,8],[7011,8],[7020,3],[7024,8],[7034,11],[7047,3],[7051,7],[7060,9],[7071,8],[7080,6],[7087,2],[7090,9],[7100,5],[7106,7],[7114,7],[7123,3],[7127,10],[7138,7],[7146,7],[7154,3],[7158,8],[7167,12],[7180,6],[7187,11],[7199,4],[7204,6],[7211,2],[7214,12],[7227,9],[7237,6],[7245,14],[7260,6],[7267,3],[7271,6],[7278,6],[7285,13],[7299,7],[7307,7],[7315,7],[7323,7],[7331,8],[7340,8],[7350,4],[7355,4],[7360,7],[7368,4],[7373,6],[7380,8],[7389,4],[7394,9],[7404,3],[7408,6],[7415,9],[7425,7],[7433,6],[7440,4],[7445,7],[7454,5],[7460,4],[7465,8],[7474,6],[7481,3],[7485,7],[7493,2],[7496,6],[7503,6],[7510,2],[7513,8],[7522,5],[7528,7],[7536,7],[7545,5],[7551,7],[7559,3],[7563,3],[7567,9],[7577,10],[7588,3],[7592,3],[7596,10],[7616,7],[7624,4],[7629,6],[7639,7],[7649,6],[7658,3],[7664,4],[7671,4],[7682,7],[7690,7],[7698,3],[7702,9],[7712,3],[7716,8],[7725,4],[7730,9],[7740,4],[7745,7],[7753,9],[7765,7],[7773,3],[7777,7],[7785,7],[7794,5],[7805,14],[7820,9],[7830,8],[7839,4],[7844,14],[7859,6],[7868,8],[7877,4],[7882,7],[7890,8],[7899,4],[7904,6],[7913,2],[7916,4],[7921,9],[7936,17],[7954,7],[7962,1],[7964,3],[7968,7],[7976,4],[7981,9],[7991,5],[7997,4],[8002,4],[8007,17],[8025,9],[8035,3],[8041,14],[8058,6],[8066,14],[8082,8],[8092,4],[8097,4],[8102,7],[8111,9],[8123,8],[8133,4],[8138,4],[8143,6],[8161,5],[8167,6],[8174,10],[8185,8],[8194,4],[8200,1],[8203,14],[8219,5],[8229,1],[8231,2],[8234,3],[8238,1],[8241,2],[8244,4],[8253,5],[8259,1],[8261,2],[8264,4],[8271,3],[8277,6],[8286,4],[8291,3],[8300,1],[8302,8],[8312,3],[8317,6],[8327,7],[8335,11],[8347,7],[8355,10],[8369,1],[8371,4],[8376,6],[8384,3],[8391,3],[8395,7],[8403,3],[8408,6],[8417,2],[8420,3],[8427,3],[8433,3],[8437,6],[8445,7],[8453,9],[8463,6],[8472,1],[8474,1],[8478,3],[8485,4],[8492,1],[8494,8],[8504,6],[8524,6],[8531,5],[8537,1],[8539,7],[8547,3],[8551,9],[8561,4],[8567,1],[8570,14],[8586,6],[8593,3],[8597,7],[8605,7],[8614,3],[8618,7],[8627,5],[8635,6],[8644,4],[8649,1],[8651,8],[8663,3],[8668,6],[8675,3],[8679,4],[8686,1],[8688,8],[8698,6],[8705,6],[8712,3],[8717,7],[8725,2],[8728,8],[8737,4],[8744,4],[8751,3],[8755,4],[8763,6],[8770,3],[8774,3],[8787,4],[8792,10],[8803,5],[8809,4],[8814,3],[8818,7],[8826,4],[8832,1],[8835,14],[8851,4],[8860,5],[8866,1],[8868,8],[8878,1],[8880,2],[8883,4],[8890,5],[8896,1],[8898,8],[8917,8],[8926,8],[8942,15],[8958,10],[8969,7],[8977,3],[8981,4],[8986,7],[8994,4],[8999,15],[9015,6],[9024,10],[9036,10],[9047,8],[9058,6],[9067,4],[9073,1],[9076,15],[9093,7],[9101,3],[9105,7],[9113,7],[9122,5],[9130,6],[9137,1],[9139,10],[9150,8],[9159,3],[9164,1],[9166,8],[9181,15],[9197,10],[9208,7],[9216,3],[9220,4],[9225,7],[9233,4],[9238,15],[9254,6],[9263,10],[9275,10],[9286,10],[9297,4],[9304,7],[9314,4],[9320,1],[9323,15],[9340,7],[9348,3],[9352,7],[9360,7],[9369,5],[9377,5],[9384,3],[9391,1],[9393,10],[9404,8],[9413,3],[9418,2],[9421,3],[9428,3],[9434,6],[9441,3],[9447,1],[9449,10],[9463,5],[9469,6],[9476,3],[9489,10],[9500,14],[9519,4],[9524,7],[9532,6],[9541,5],[9549,6],[9556,7],[9564,3],[9568,8],[9577,4],[9582,4],[9589,4],[9594,10],[9605,6],[9614,2],[9617,4],[9622,5],[9628,11],[9640,7],[9650,4],[9656,1],[9659,10],[9671,8],[9680,3],[9684,7],[9692,7],[9701,5],[9709,6],[9717,5],[9725,1],[9727,2],[9730,4],[9737,5],[9743,1],[9745,2],[9748,6],[9757,6],[9766,4],[9773,3],[9777,4],[9785,6],[9792,3],[9796,3],[9802,7],[9811,1],[9813,11],[9827,7],[9836,5],[9843,5],[9850,7],[9859,1],[9861,11],[9873,7],[9883,1],[9886,8],[9896,4],[9901,3],[9910,3],[9914,6],[9922,5],[9928,7],[9936,2],[9939,7],[9948,1],[9950,1],[9954,1],[9956,11],[9968,7],[9977,6],[9984,3],[9992,4],[9998,1],[10001,10],[10013,8],[10022,3],[10026,7],[10034,7],[10044,7],[10053,5],[10062,1],[10064,2],[10067,4],[10074,5],[10080,1],[10082,2],[10085,6],[10094,6],[10103,4],[10110,3],[10114,4],[10122,6],[10129,7],[10140,3],[10144,3],[10150,7],[10159,6],[10166,1],[10168,11],[10181,3],[10196,5],[10202,7],[10214,4],[10219,4],[10231,6],[10238,10],[10249,7],[10260,17],[10278,2],[10282,10],[10297,10],[10309,11],[10322,7],[10330,7],[10339,1],[10348,5],[10354,7],[10362,9],[10372,7],[10380,5],[10388,5],[10394,7],[10402,4],[10412,6],[10419,8],[10428,3],[10435,7],[10443,10],[10459,3],[10463,5],[10469,7],[10477,6],[10488,15],[10505,10],[10517,10],[10529,8],[10541,6],[10549,1],[10554,1],[10559,1],[10566,7],[10574,6],[10581,3],[10586,6],[10597,3],[10601,5],[10607,7],[10615,10],[10629,4],[10634,4],[10639,7],[10648,1],[10651,6],[10662,15],[10679,10],[10691,10],[10703,10],[10715,10],[10729,7],[10737,6],[10744,3],[10749,6],[10760,4],[10765,3],[10769,6],[10776,6],[10785,4],[10790,5],[10801,10],[10813,3],[10817,6],[10825,7],[10833,5],[10841,1],[10843,1],[10847,5],[10853,5],[10860,4],[10867,4],[10872,5],[10878,1],[10882,4],[10887,6],[10896,3],[10900,7],[10909,7],[10917,7],[10925,3],[10929,5],[10941,3],[10945,7],[10953,7],[10961,7],[10969,2],[10972,1],[10974,10],[10985,6],[10992,7],[11000,4],[11005,12],[11018,8],[11027,2],[11030,7],[11039,8],[11048,3],[11052,16],[11069,2],[11072,7],[11080,4],[11085,9],[11095,8],[11105,7],[11113,2],[11116,8],[11126,3],[11130,7],[11138,3],[11142,8],[11151,10],[11163,4],[11168,1],[11170,3],[11174,2],[11177,9],[11187,2],[11190,2],[11193,4],[11198,10],[11210,4],[11215,10],[11226,7],[11234,9],[11245,7],[11253,3],[11257,9],[11267,8],[11276,8],[11285,8],[11295,11],[11307,8],[11316,7],[11324,3],[11328,10],[11339,7],[11348,8],[11357,3],[11361,8],[11370,8],[11379,8],[11389,5],[11395,3],[11399,2],[11402,7],[11410,3],[11414,10],[11425,3],[11429,8],[11438,7],[11446,9],[11457,4],[11462,7],[11470,9],[11482,7],[11490,3],[11494,7],[11502,7],[11511,5],[11519,8],[11528,8],[11538,4],[11543,7],[11551,12],[11564,3],[11568,10],[11579,6],[11586,3],[11590,9],[11600,8],[11609,3],[11613,2],[11616,10],[11627,12],[11640,3],[11644,11],[11656,7],[11664,7],[11672,7],[11681,7],[11689,1],[11691,5],[11697,2],[11700,8],[11709,9],[11719,8],[11728,12],[11741,2],[11744,1],[11746,9],[11756,8],[11765,8],[11774,8],[11783,8],[11793,10],[11805,9],[11815,7],[11823,8],[11832,4],[11837,9],[11847,13],[11862,4],[11867,2],[11870,3],[11874,3],[11878,7],[11886,5],[11892,13],[11907,8],[11916,3],[11920,2],[11923,8],[11932,4],[11937,6],[11944,4],[11949,4],[11955,3],[11959,2],[11962,8],[11971,2],[11974,7],[11982,7],[11990,7],[11998,8],[12007,10],[12018,7],[12026,10],[12038,4],[12043,17],[12061,4],[12066,7],[12075,7],[12083,4],[12088,17],[12106,4],[12111,7],[12120,7],[12130,6],[12138,13],[12152,4],[12160,11],[12172,7],[12181,4],[12186,18],[12205,6],[12214,8],[12225,7],[12235,4],[12241,1],[12244,18],[12264,7],[12272,3],[12276,7],[12284,7],[12293,5],[12304,7],[12312,3],[12316,2],[12319,7],[12329,8],[12338,8],[12348,4],[12353,15],[12369,6],[12378,7],[12386,8],[12395,3],[12404,3],[12408,8],[12417,5],[12423,7],[12431,2],[12434,7]]},"1280":{"position":[[16,3],[20,11],[34,6],[41,4],[46,11],[58,5],[66,6],[76,11],[90,5]]},"1282":{"position":[[0,6],[7,5],[27,5],[77,2],[82,7],[92,9],[106,6],[113,5]]},"1288":{"position":[[9,5],[17,4],[22,7],[30,4],[35,5],[41,7],[56,5],[65,6],[72,6],[79,2],[85,5],[100,4],[105,5],[111,6],[120,4],[125,3],[132,1],[140,1],[147,7],[155,6],[170,4],[175,6],[195,5],[217,4],[222,5],[228,6],[237,2],[240,6],[247,4],[252,6],[259,4],[264,6],[271,7],[279,6],[299,4],[304,5],[319,7],[327,4],[332,5],[349,9],[359,3],[370,6],[395,5],[404,6],[411,6],[418,2],[424,7],[457,6],[471,4],[476,7],[484,9],[496,5],[504,5],[510,4],[517,5],[523,4],[530,6],[537,6],[544,5],[551,5],[559,6],[579,6],[623,9],[635,6],[642,4],[648,1],[651,6],[659,6],[666,3],[670,7],[678,7],[689,3],[695,6],[704,4],[711,3],[715,4],[723,6],[730,4],[735,3],[744,1],[746,7],[755,3],[759,6],[768,6],[776,5],[782,4],[788,1],[794,1],[796,1],[800,3],[804,4],[810,3],[814,7],[830,6],[840,2],[843,3],[847,2],[858,2],[861,3],[865,7],[876,3],[882,3],[886,7],[897,5],[903,4],[909,1],[912,7],[922,7],[930,2],[933,6],[942,4],[949,2],[956,8],[978,1],[980,2],[983,5],[991,3],[996,2],[1002,1],[1004,8],[1013,3],[1017,2],[1021,1],[1023,2],[1026,7],[1036,2],[1040,2],[1045,2],[1048,3],[1052,7],[1063,3],[1069,3],[1073,7],[1084,5],[1090,4],[1096,3],[1101,7],[1111,7],[1119,3],[1123,5],[1131,4],[1143,8],[1170,2],[1173,4],[1178,1],[1180,7],[1189,1],[1191,5],[1200,6],[1210,1],[1212,6],[1219,1],[1222,2],[1225,1],[1227,7],[1238,3],[1244,6],[1253,4],[1258,1],[1260,7],[1271,6],[1279,4],[1286,4],[1291,5],[1297,4],[1302,8],[1311,1],[1313,9],[1326,4],[1331,11],[1345,1],[1347,7],[1358,5],[1364,4],[1370,3],[1375,7],[1385,7],[1395,4],[1411,3],[1416,3]]},"1290":{"position":[[2,5],[12,4],[26,4],[32,1],[35,10],[47,3],[55,3],[59,5],[67,1],[69,3],[75,5],[83,6],[92,4],[99,1],[101,6],[109,6],[116,4],[121,3],[130,1],[132,5],[139,3],[143,6],[153,1],[156,3],[162,1],[164,1],[168,1],[170,4],[176,3],[194,7],[205,4],[210,4],[215,6],[222,5],[229,1],[232,2],[235,5],[241,1],[246,1],[250,1],[252,6],[259,4],[264,6],[271,5],[278,4],[284,1],[286,4],[292,4],[299,3],[305,7],[314,3],[319,7],[328,7],[337,9],[348,4],[359,4],[366,1],[368,6],[375,4],[380,6],[387,5],[394,4],[400,1],[402,4],[408,4],[415,3],[421,2],[426,4],[433,7],[442,3],[447,7],[456,7],[465,9],[476,4],[497,5],[508,7],[516,3],[520,6],[530,1],[533,3],[537,5],[543,4],[548,6],[557,1],[559,1],[563,1],[565,4],[573,5],[579,7]]},"1292":{"position":[[0,4],[6,1],[9,11],[22,6],[29,3],[33,6],[40,5],[47,6],[54,5],[62,6],[69,6],[76,5],[82,4],[88,1],[91,7],[101,4],[106,7],[114,7],[124,4],[130,3],[134,7],[143,4],[149,1],[153,1],[157,3],[161,4],[167,3],[171,7]]},"1294":{"position":[[0,10],[12,6],[29,10],[41,4],[47,6],[55,8],[68,4],[74,8],[87,6],[95,3],[100,5],[107,11],[121,6],[129,5],[135,4],[140,6],[150,5],[157,11],[171,6],[179,3],[183,5],[189,4],[194,6],[202,7],[210,2],[213,6],[221,6],[229,3],[234,5],[241,4],[248,6],[256,5],[262,4],[267,6],[277,5],[284,4],[295,11],[311,6],[319,3],[323,5],[329,4],[334,6],[342,4],[347,7],[355,7],[364,6],[372,4],[377,5],[383,2],[386,6],[394,5],[401,3],[407,6],[415,3],[419,6],[426,6],[433,5],[440,5],[447,3],[453,6],[461,8],[474,4],[480,8]]},"1298":{"position":[[6,4]]},"1301":{"position":[[6,3],[10,3],[14,11],[26,5],[42,12],[42,7],[50,4],[56,5]]},"1303":{"position":[[0,4],[5,10],[16,6],[25,3],[29,6],[36,7],[44,7],[54,4],[59,13],[73,3],[77,6],[85,7],[93,7],[103,10],[116,6],[124,10],[135,3],[140,3],[145,7],[154,7],[165,4],[171,1],[174,10],[186,4],[191,4],[196,6],[204,6],[213,6],[220,8],[229,4],[234,1],[236,3],[241,4],[248,5],[258,4],[264,1],[267,10],[279,4],[284,4],[289,6],[297,5],[303,3],[308,5],[316,9],[327,3],[334,1],[336,7],[344,7],[352,5],[359,2],[362,3],[369,3],[375,6],[382,3],[388,2],[391,3],[398,2],[401,8],[410,1],[412,3],[417,4],[424,3],[431,3],[437,6],[444,3],[450,6],[457,2],[460,9],[470,1],[472,4],[477,4],[484,9],[495,4],[503,4],[509,1],[512,10],[524,4],[529,4],[534,6],[543,3],[548,5],[557,4],[563,3],[570,2],[573,8],[582,1],[584,4],[589,4],[596,2],[599,3],[606,3],[612,6],[619,3],[624,3],[630,6],[637,1],[639,7],[647,7],[655,4],[663,4],[669,1],[672,10],[684,6],[691,4],[696,6],[704,4],[711,1],[714,3],[721,2],[724,4],[729,1],[731,4],[736,4],[743,6],[750,3],[757,3]]},"1306":{"position":[[0,4],[5,11],[17,6],[30,10],[42,10],[55,4],[60,23],[84,5],[91,10],[104,11],[118,6],[126,11],[139,8],[149,4],[154,3],[158,6],[166,11],[180,10],[192,5],[199,6],[207,9],[218,6],[227,4],[233,2],[236,6]]},"1308":{"position":[[3,8],[24,15],[42,8],[51,4],[57,1],[60,11],[73,8],[82,3],[86,7],[95,5],[103,1],[105,2],[108,4],[115,5],[121,1],[123,2],[126,6],[138,4],[156,4],[164,3],[168,4],[207,2],[210,1],[212,10],[226,3],[233,1],[235,10],[246,6],[253,4],[312,2],[315,8],[325,2],[331,3],[336,10],[349,2],[354,3],[359,3],[366,1],[368,10],[379,4],[384,4],[390,2],[393,3],[400,3],[406,6],[413,3],[417,6],[425,5],[431,4],[436,6],[445,1],[447,1],[451,3],[458,3],[464,8],[473,11],[485,3],[490,2],[493,3],[500,3],[506,6],[513,3],[517,6],[525,5],[531,6],[538,6],[547,1],[549,1],[553,3],[560,3],[564,6],[572,5],[578,8],[587,3],[591,7],[600,1],[602,1],[606,4],[616,2],[619,1],[622,2],[628,1],[630,8],[639,4],[646,2],[651,6],[658,6],[665,3],[670,7],[678,7],[686,10],[701,1],[703,8],[712,4],[721,11],[734,3],[739,3],[744,5],[751,7],[760,4],[766,3],[770,12],[788,3],[792,7],[801,10],[815,3],[819,4],[827,6],[834,3]]},"1310":{"position":[[0,4],[6,1],[9,11],[22,11],[34,4],[39,6],[47,5],[55,1],[57,2],[60,4],[67,5],[73,1],[75,2],[78,6],[87,4],[93,2],[99,1],[101,8],[110,4],[116,2],[120,2],[125,6],[132,6],[139,3],[144,7],[152,3],[156,10],[171,2],[174,4],[179,5],[188,7],[198,6],[205,6],[212,3],[217,7],[225,7],[233,7],[257,2],[260,8],[270,2],[276,4],[281,3],[286,10],[299,2],[305,1],[307,10],[321,3],[327,2],[330,3],[337,1],[339,10],[350,4],[355,4],[361,8],[370,11],[386,3],[393,3],[399,3],[403,6],[411,5],[417,9],[427,3],[432,1],[434,1],[438,4],[448,2],[451,3],[458,4],[463,3],[467,4],[475,3],[482,3],[488,6],[495,3],[501,4],[506,5],[514,7],[522,3],[526,7],[535,7],[546,4],[551,3],[555,4],[563,6],[570,3]]},"1312":{"position":[[0,4],[6,1],[9,11],[22,6],[29,3],[33,7],[41,7],[61,6],[68,6],[87,6],[97,4],[102,9],[112,1],[116,4],[121,6],[129,3],[135,6],[144,4],[151,3],[155,4],[163,6],[170,4],[177,6],[184,1],[187,3],[191,7],[200,5],[206,7],[214,5],[222,2],[225,1],[227,10],[241,3],[247,3],[251,4],[257,4],[265,5],[271,1],[273,8],[284,2],[287,4],[292,5],[301,7],[311,2],[314,8],[324,2],[330,4],[335,3],[340,10],[353,2],[358,2],[361,3],[368,1],[370,10],[381,4],[386,4],[392,8],[401,11],[417,3],[424,3],[430,3],[434,6],[442,5],[448,9],[458,3],[463,1],[465,1],[469,4]]},"1314":{"position":[[0,7],[11,11],[23,13],[39,4],[45,16],[65,5],[74,11],[86,13],[103,5],[111,7],[123,1],[132,11],[147,11],[159,14],[174,5]]},"1316":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,4],[456,5],[463,3],[469,1],[471,4],[476,7],[484,7],[492,4],[497,11],[510,5],[517,3],[524,4],[530,8],[542,7],[550,3],[554,7],[562,2],[565,4],[570,9],[580,5],[586,8],[595,3],[599,7],[607,4],[613,4],[618,2],[621,2],[624,2],[627,2],[630,2],[633,3],[639,4],[646,4],[653,6],[661,8],[673,7],[681,3],[685,7],[693,2],[696,4],[702,11],[715,4],[720,5],[726,2],[729,4],[735,5],[742,3],[748,4],[754,5],[760,2],[763,2],[767,1],[769,4],[774,2],[777,7],[785,7],[793,4],[798,11],[811,5],[818,3],[825,11],[838,5],[844,4],[849,4],[857,3],[861,2],[864,5],[872,1],[874,7],[882,2],[885,6],[892,2],[896,8],[905,3],[909,8],[922,6],[930,8],[942,7],[951,6],[959,6],[967,8],[979,7],[988,4]]},"1322":{"position":[[23,4],[28,10],[39,9],[51,11],[65,3],[87,4],[92,10],[103,9],[115,11],[127,5],[133,3],[138,5],[151,4],[156,7],[164,9],[176,7],[184,4],[189,3],[197,4],[203,5],[210,7],[218,6],[227,4],[234,3],[239,5],[255,3],[259,4],[264,10],[275,6],[284,3],[290,4],[298,2],[301,2],[304,2],[312,4],[317,13],[331,3],[337,4],[344,10],[357,6],[365,10],[376,3],[381,3],[388,4],[394,1],[397,10],[409,7],[417,4],[422,3],[430,4],[436,5],[445,9],[456,3],[463,4],[468,7],[476,4],[482,2],[485,3],[492,3],[498,6],[505,3],[510,3],[516,5],[523,3],[530,3],[534,9],[544,1],[546,3],[551,2],[554,3],[561,3],[567,6],[574,3],[579,3],[585,6],[593,3],[600,6],[607,6],[614,5],[621,2],[624,3],[631,3],[637,6],[644,3],[649,3],[655,5],[664,4],[671,4],[677,6],[684,9],[697,2],[700,1],[703,3],[710,2],[713,8],[722,4],[727,6],[735,5],[743,3],[750,3],[756,6],[763,3],[768,3],[774,10],[788,6],[795,4],[800,5],[807,5],[814,9],[825,3],[830,6],[837,10],[849,3],[855,4],[861,1],[864,10],[876,7],[884,10],[897,4],[904,3],[909,5],[918,5],[925,3],[932,3],[936,9],[946,1],[948,3],[953,2],[956,3],[963,3],[969,6],[976,3],[981,3],[987,6],[995,3],[1002,6],[1009,6],[1016,5],[1023,2],[1026,3],[1033,3],[1039,6],[1046,3],[1051,3],[1057,9],[1070,6],[1077,9],[1089,2],[1092,3],[1096,10],[1110,9],[1122,6],[1129,3],[1134,3],[1138,6],[1146,10],[1157,3],[1161,5],[1171,5],[1180,10],[1192,9],[1203,10],[1217,10],[1228,9],[1240,9],[1251,3],[1258,6],[1265,4],[1270,3],[1275,5],[1282,10],[1294,3],[1299,2],[1302,3],[1309,3],[1315,6],[1322,3],[1327,3],[1333,3],[1337,6],[1344,3],[1348,2],[1351,3],[1358,4],[1363,9],[1373,9],[1385,6],[1394,3],[1401,3],[1407,6],[1414,3],[1419,3],[1425,6],[1432,6],[1440,3],[1453,4],[1459,1],[1462,11],[1475,14],[1490,6],[1497,7],[1506,5],[1517,1],[1519,2],[1522,4],[1532,5],[1538,1],[1540,2],[1543,6],[1558,4],[1566,6],[1573,4],[1583,7],[1592,6],[1602,1],[1604,8],[1613,4],[1622,3],[1626,5],[1632,3],[1642,2],[1645,6],[1657,2],[1660,8],[1670,2],[1676,7],[1684,3],[1689,10],[1702,2],[1710,5],[1718,8],[1727,11],[1749,7],[1757,3],[1761,4],[1771,3],[1775,6],[1783,7],[1791,3],[1795,7],[1803,2],[1807,1],[1809,1],[1813,4],[1841,2],[1844,8],[1854,2],[1860,6],[1868,10],[1881,2],[1887,5],[1896,3],[1905,2],[1908,3],[1915,8],[1924,11],[1936,5],[1944,3],[1951,3],[1960,6],[1967,3],[1971,6],[1979,5],[1985,6],[1992,6],[2001,1],[2003,1],[2007,3],[2020,3],[2024,6],[2032,5],[2038,8],[2047,3],[2051,7],[2060,1],[2062,1],[2066,4],[2097,1],[2099,8],[2108,4],[2117,11],[2133,3],[2138,6],[2149,4],[2155,6],[2162,12],[2181,5],[2188,7],[2219,2],[2222,6],[2232,7],[2240,5],[2249,7],[2262,6],[2269,5],[2280,1],[2282,8],[2291,4],[2297,5],[2305,7],[2316,3],[2320,6],[2328,7],[2336,3],[2340,7],[2348,2],[2352,1],[2356,4],[2367,4],[2377,3],[2381,6],[2389,10],[2400,3],[2404,7],[2412,2],[2416,1],[2419,3],[2423,7],[2434,4],[2451,6],[2458,3],[2466,4],[2472,1],[2475,11],[2488,23],[2512,6],[2519,7],[2528,7],[2536,7],[2545,5],[2553,1],[2555,2],[2558,4],[2565,5],[2571,1],[2573,2],[2576,6],[2585,4],[2593,6],[2600,4],[2607,7],[2616,6],[2626,1],[2628,8],[2637,4],[2643,3],[2647,14],[2664,4],[2669,2],[2672,6],[2681,2],[2684,8],[2694,2],[2700,7],[2708,3],[2713,10],[2726,2],[2731,8],[2743,8],[2752,11],[2766,6],[2774,3],[2781,7],[2789,7],[2797,8],[2807,2],[2810,3],[2817,3],[2823,6],[2830,3],[2834,6],[2842,5],[2848,10],[2859,6],[2868,1],[2872,3],[2879,14],[2896,6],[2905,7],[2913,3],[2917,4],[2924,3],[2928,6],[2936,7],[2944,3],[2948,7],[2956,2],[2960,1],[2962,1],[2966,4],[2986,2],[2989,8],[2999,2],[3005,6],[3013,10],[3026,2],[3032,14],[3050,3],[3056,9],[3067,3],[3074,7],[3082,7],[3090,14],[3106,2],[3109,3],[3116,3],[3122,6],[3129,3],[3133,6],[3141,5],[3147,10],[3158,6],[3167,1],[3171,3],[3178,2],[3181,3],[3188,8],[3197,11],[3209,9],[3221,3],[3228,3],[3234,6],[3241,3],[3245,6],[3253,5],[3259,6],[3266,6],[3275,1],[3279,3],[3286,3],[3290,6],[3298,9],[3308,5],[3314,8],[3323,3],[3327,7],[3336,1],[3338,1],[3342,4],[3350,1],[3352,8],[3361,4],[3370,11],[3383,3],[3388,6],[3396,4],[3402,6],[3409,12],[3425,5],[3432,7],[3443,2],[3446,6],[3456,7],[3464,5],[3473,7],[3483,6],[3490,5],[3498,1],[3500,8],[3509,4],[3515,5],[3523,7],[3531,3],[3535,6],[3543,7],[3551,3],[3555,7],[3563,2],[3567,1],[3569,1],[3573,4],[3581,4],[3588,3],[3592,6],[3600,10],[3611,3],[3615,7],[3623,2],[3627,1],[3630,3],[3634,7],[3643,1],[3647,4],[3655,6],[3662,3]]},"1324":{"position":[[7,4],[13,1],[16,13],[31,11],[43,5],[49,3],[54,5],[62,2],[65,3],[70,2],[76,5],[83,3],[89,2],[94,1],[96,9],[108,3],[112,6],[119,3],[125,6],[132,3],[136,6],[144,7],[152,5],[158,4],[167,4],[173,1],[176,11],[189,11],[203,3],[209,6],[216,1],[218,9]]},"1326":{"position":[[9,1],[26,2],[29,6],[41,4],[47,16],[69,2],[79,11],[91,23],[115,7],[123,16],[140,11],[154,11],[166,13],[180,6]]},"1328":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,4],[456,5],[463,3],[469,1],[471,4],[476,7],[484,7],[492,4],[497,11],[510,5],[517,3],[524,4],[530,8],[542,7],[550,3],[554,7],[562,2],[565,4],[570,5],[576,8],[585,3],[589,7],[597,4],[603,4],[608,2],[611,2],[614,2],[617,2],[620,2],[623,3],[629,4],[636,4],[643,6],[651,8],[663,7],[671,3],[675,7],[683,2],[686,4],[691,11],[704,4],[709,5],[715,2],[718,4],[724,5],[731,3],[737,4],[743,5],[749,2],[752,2],[756,1],[758,4],[763,2],[766,7],[774,7],[782,4],[787,11],[800,5],[807,3],[814,11],[827,5],[833,4],[838,4],[846,3],[850,2],[853,5],[861,1],[863,7],[871,2],[874,6],[881,2],[885,8],[894,3],[898,8],[911,6],[919,8],[931,7],[940,6],[948,6],[956,8],[968,7],[977,4],[983,3],[988,8]]},"1331":{"position":[[37,4],[42,4],[47,5],[67,6],[83,3]]},"1334":{"position":[[2,14],[28,6],[35,6],[42,2],[45,4],[51,1],[54,11],[67,14],[82,6],[89,7],[98,5],[106,1],[108,2],[111,4],[118,5],[124,1],[126,2],[129,6],[138,4],[146,6],[153,4],[160,7],[169,6],[179,1],[181,8],[190,4],[196,2],[199,6],[209,7],[217,5],[226,7],[245,7],[253,3],[257,4],[264,3],[268,6],[276,7],[284,3],[288,7],[296,2],[300,1],[302,1],[306,4],[330,1],[332,8],[341,4],[350,11],[363,3],[368,6],[376,4],[382,6],[389,12],[405,5],[412,7],[440,2],[443,6],[453,7],[461,5],[470,7],[480,6],[487,5],[495,1],[497,8],[506,4],[512,5],[520,7],[528,3],[532,6],[540,7],[548,3],[552,7],[560,2],[564,1],[566,1],[570,4],[578,4],[585,3],[589,6],[597,10],[608,3],[612,7],[620,2],[624,1],[627,3],[631,7],[640,1],[644,4],[652,6],[659,3],[667,8],[677,4],[685,6],[692,6],[699,2],[705,8],[726,15],[744,8],[753,4],[759,1],[762,11],[775,8],[784,3],[788,7],[797,5],[805,1],[807,2],[810,4],[817,5],[823,1],[825,2],[828,6],[837,4],[845,3],[849,4],[856,2],[859,1],[862,2],[868,1],[870,8],[879,4],[886,2],[891,6],[898,6],[905,3],[910,7],[918,7],[926,10],[941,1],[943,8],[952,4],[961,11],[974,3],[979,3],[984,5],[991,7],[1000,4],[1006,3],[1010,12],[1028,3],[1032,7],[1041,10],[1055,3],[1059,4],[1067,6],[1074,3],[1099,6],[1106,6],[1113,2],[1116,4],[1122,1],[1125,11],[1138,8],[1152,6],[1160,5],[1169,1],[1171,2],[1174,5],[1182,5],[1188,1],[1190,2],[1193,7],[1203,7],[1214,4],[1219,3],[1223,6],[1230,4],[1236,4],[1244,4],[1249,3],[1253,6],[1260,4],[1266,6],[1278,6],[1287,3],[1291,5],[1297,4],[1302,6],[1310,5],[1316,5],[1324,4],[1329,4],[1334,6],[1342,5],[1350,2],[1353,4],[1358,4],[1366,6],[1373,3],[1377,6],[1385,8],[1394,10],[1405,2],[1409,1],[1413,4],[1421,2],[1424,7],[1432,4],[1440,6],[1447,3],[1453,4],[1458,4],[1466,4],[1471,4],[1477,2],[1483,1],[1485,8],[1494,4],[1500,2],[1504,2],[1509,6],[1516,3],[1520,6],[1528,7],[1537,1],[1539,3],[1543,10],[1556,4],[1564,3],[1568,1],[1571,3],[1578,5],[1584,4],[1589,4],[1596,2],[1599,3],[1606,5],[1612,3],[1618,3],[1625,3],[1631,6],[1638,3],[1646,7],[1654,4],[1662,4],[1667,4],[1672,4],[1680,5],[1686,6],[1695,6],[1702,6],[1710,4],[1716,6],[1723,3],[1729,3],[1733,4],[1741,5],[1747,1],[1749,8],[1760,2],[1764,7],[1772,4],[1780,2],[1783,3],[1790,5],[1796,4],[1803,3],[1810,3],[1816,6],[1823,3],[1828,3],[1838,6],[1845,6],[1853,3],[1859,4],[1865,1],[1868,11],[1881,8],[1892,5],[1900,6],[1908,3],[1915,1],[1917,8],[1935,3],[1939,1],[1942,4],[1950,5],[1956,6],[1965,2],[1968,3],[1975,1],[1977,12],[1990,4],[1997,3],[2004,3],[2021,6],[2028,3]]},"1336":{"position":[[7,4],[12,8],[21,3],[25,5],[33,4],[38,8],[49,4],[54,4],[59,5],[67,4],[72,6],[79,6],[88,2],[91,4],[96,5],[102,5],[108,8],[117,7],[125,6],[132,3],[136,2],[139,6],[153,4],[158,9],[168,7],[176,6],[184,5],[190,8],[200,3],[204,2],[207,6],[216,6],[225,6],[233,6],[241,7],[250,7],[259,5],[266,5],[273,3],[278,3],[287,4],[293,1],[296,6],[304,4],[309,5],[315,8],[325,6],[332,6],[340,4],[348,3],[355,2],[358,5],[366,1],[368,5],[376,6],[385,1],[387,2],[390,4],[397,5],[403,1],[405,2],[408,6],[417,8],[434,6],[442,4],[450,4],[458,5],[466,5],[473,3],[480,3],[484,7],[492,6],[500,4],[509,2],[515,4],[520,3],[526,6],[534,4],[539,2],[542,2],[545,2],[548,2],[551,2],[554,3],[560,3],[564,7],[572,1],[574,3],[582,1],[587,1],[592,1],[596,1],[598,1],[602,2],[606,8],[616,1],[618,7],[627,3],[634,4],[640,1],[643,6],[651,5],[657,6],[664,6],[672,4],[680,3],[687,1],[689,4],[694,4],[700,6],[708,4],[719,4],[725,1],[728,6],[736,5],[742,6],[749,6],[757,4],[765,3],[772,1],[774,4],[779,4],[785,6],[793,4],[804,4],[810,1],[813,6],[821,6],[828,6],[835,6],[843,4],[851,3],[858,1],[860,4],[865,5],[872,6],[880,4],[897,4],[902,13],[916,6],[925,3],[930,6],[939,4],[944,16],[964,13],[980,6],[988,13],[1003,3],[1008,9],[1019,4],[1026,4],[1032,2],[1035,6],[1054,4],[1060,1],[1063,13],[1078,5],[1088,1],[1090,3],[1094,5],[1101,7]]},"1338":{"position":[[9,1],[26,2],[29,1],[33,11],[45,14],[60,7],[68,16],[85,11],[105,2],[111,8],[123,4],[128,4],[133,11],[145,5],[152,1],[155,11],[167,4],[172,11],[184,5],[191,4],[198,4],[205,4],[212,3],[218,7],[228,3],[234,7],[243,8],[253,9],[264,4],[273,3],[277,7],[286,2],[289,5],[300,8]]},"1340":{"position":[[0,10],[12,6],[19,10],[31,4],[36,8],[45,3],[49,8],[61,8],[72,4],[77,6],[86,4],[92,8],[104,7],[113,4],[119,6],[127,8],[139,7],[148,6],[156,6],[164,3],[169,5],[176,11],[190,11],[203,5],[209,4],[214,6],[224,5],[231,11],[245,6],[253,3],[257,5],[263,4],[268,6],[276,7],[284,2],[287,6],[295,6],[303,3],[308,5],[315,4],[322,11],[335,5],[341,4],[346,6],[356,5],[363,4],[370,6],[378,3],[382,5],[388,4],[393,6],[401,4],[406,7],[414,7],[423,11],[436,4],[441,5],[447,2],[450,7],[459,5],[466,3],[472,3],[476,3],[480,5],[486,7],[497,4],[503,8],[515,7],[523,3],[527,7],[535,2],[538,4],[544,4],[549,2],[552,2],[555,2],[558,2],[561,2],[564,3],[570,4],[577,4],[584,6],[592,8],[604,7],[612,3],[616,7],[624,2],[627,4],[633,11],[646,5],[652,4],[657,4],[665,3],[669,2],[672,5],[680,1],[682,7],[690,2],[693,6],[700,2],[704,8],[713,3],[717,8],[730,6],[738,8],[750,7],[759,6],[767,6],[775,8],[788,3],[793,8],[802,7],[811,4],[816,10],[828,6],[835,10],[847,4],[852,8],[861,3],[865,8],[877,8],[888,4],[893,6],[902,4],[908,8],[920,7],[929,4],[935,6],[943,8],[955,7],[964,6],[972,6],[980,3],[985,5],[992,11],[1006,11],[1019,5],[1025,4],[1030,6],[1040,5],[1047,11],[1061,6],[1069,3],[1073,5],[1079,4],[1084,6],[1092,7],[1100,2],[1103,6],[1111,6],[1119,3],[1124,5],[1131,4],[1138,11],[1151,5],[1157,4],[1162,6],[1172,5],[1179,4],[1186,6],[1194,3],[1198,5],[1204,4],[1209,6],[1217,4],[1222,7],[1230,7],[1239,11],[1252,4],[1257,5],[1263,2],[1266,7],[1275,5],[1282,3],[1288,3],[1292,3],[1296,5],[1302,7],[1312,8],[1321,3],[1325,8],[1338,6],[1346,8],[1358,7],[1367,6],[1375,4],[1381,8],[1393,7],[1402,4]]},"1343":{"position":[[0,6],[13,8],[22,4],[38,4],[53,4],[60,3],[64,6],[71,9],[83,7],[91,4],[96,6],[106,8],[115,4],[122,3],[129,4],[134,4],[143,8],[158,4],[166,5],[175,3],[181,2],[186,3],[190,6],[197,3],[201,6],[208,9],[220,3],[227,4],[232,9],[244,4],[249,8],[261,6],[269,2],[272,3],[279,3],[285,3],[289,7],[298,5],[307,3],[312,6],[321,3],[325,7],[334,4],[342,6],[350,4],[358,6],[367,3],[371,7],[380,3],[387,6],[395,3],[402,7],[464,4],[476,4]]},"1346":{"position":[[4,2],[7,3],[11,6],[18,3],[22,7],[30,5],[40,7],[48,4],[53,6],[63,3],[69,6],[76,3],[80,7],[88,5],[97,4],[102,4],[111,8],[126,4],[134,5],[143,3],[149,2],[154,2],[158,5],[164,5],[170,8],[182,3],[186,7],[195,7],[203,4],[208,4],[215,6],[224,2],[227,5],[233,3],[237,8],[248,4],[255,6],[266,3],[270,7],[279,4],[284,5],[290,6],[301,4],[308,3],[312,7],[321,4],[326,5],[332,4],[337,3],[341,5],[351,4],[359,5],[365,3],[369,8],[380,4],[387,3],[394,5],[400,3],[404,8],[415,3],[421,3],[427,3],[431,7],[440,4],[448,4],[453,6],[463,3],[467,7],[476,3],[483,3]]},"1348":{"position":[[17,4],[25,8]]},"1350":{"position":[[4,2],[7,3],[11,6],[18,3],[22,4],[27,8],[36,2],[43,7],[51,4],[56,6],[66,3],[71,8],[81,6],[88,3],[92,4],[97,8],[106,2],[112,4],[117,4],[126,3],[130,4],[137,8],[146,35],[182,8],[197,4],[205,5],[214,3],[220,2],[225,3],[229,6],[236,3],[240,6],[247,9],[259,4],[264,9],[276,4],[281,8],[293,6],[301,3],[305,7],[314,4],[322,6],[330,4],[338,3],[342,7],[351,3],[358,6],[366,3]]},"1352":{"position":[[9,8],[18,4],[32,4],[42,5],[55,8],[64,4]]},"1354":{"position":[[4,2],[7,3],[11,6],[18,3],[22,5],[28,10],[43,7],[51,4],[56,6],[66,3],[72,6],[79,3],[83,5],[89,10],[103,4],[108,4],[117,8],[131,4],[139,4],[147,5],[156,3],[162,2],[168,4],[174,1],[179,10],[190,9],[200,8],[211,4],[218,3],[223,1],[228,10],[239,6],[246,8],[257,3],[263,3],[267,7],[276,4],[284,4],[290,3],[294,7],[303,3],[310,3]]},"1356":{"position":[[11,4],[26,4],[38,4],[51,5]]},"1358":{"position":[[13,8],[22,4],[30,4],[59,5],[68,4],[90,4],[95,4],[100,8],[109,2],[116,4],[136,4],[147,5],[153,10],[168,4],[180,4]]},"1360":{"position":[[4,4],[19,5],[31,4],[41,4],[46,8],[55,2],[62,4],[77,5],[83,10],[107,8],[116,4],[138,4]]},"1363":{"position":[[2,2]]},"1365":{"position":[[10,5],[20,4],[25,11],[40,6],[48,5]]},"1367":{"position":[[20,5],[44,5],[67,4],[72,9],[82,6],[91,3],[95,5],[103,4],[109,1],[112,9],[123,2],[137,1],[139,3],[145,6],[152,3],[157,9],[167,4],[172,5]]},"1369":{"position":[[2,2],[7,4],[46,4]]},"1371":{"position":[[0,1],[22,9],[45,4],[56,4],[61,8],[70,1],[73,1],[75,3],[82,4],[87,3],[93,6],[103,4],[108,4],[113,3],[118,2],[121,4],[130,6],[140,1],[144,1],[146,5],[152,6],[164,6],[171,6],[180,1],[215,3],[225,4],[240,4],[245,8],[254,1],[256,3],[263,4],[268,3],[274,3],[281,4],[286,4],[291,3],[296,2],[299,4],[308,3],[312,1],[317,1],[320,1],[324,1],[327,1],[333,3],[340,1],[344,5],[350,3],[359,6],[366,3],[372,1],[403,4],[408,6],[418,4],[426,4],[431,4],[436,6],[446,2],[449,4],[466,4],[474,6],[491,4]]},"1373":{"position":[[38,4],[66,4],[71,2]]},"1375":{"position":[[10,9],[20,6],[28,7],[36,7],[45,9],[55,8],[64,2],[71,2],[74,3],[95,2],[98,3],[102,7],[110,3],[114,6],[121,3],[127,2],[130,3],[134,7],[142,5],[150,7],[158,2],[161,6],[176,2],[179,3],[189,2],[192,3],[196,4],[204,7],[223,7],[231,3]]},"1377":{"position":[[2,2],[11,9],[34,4],[41,6]]},"1379":{"position":[[0,3],[4,3],[11,1],[13,3],[17,1],[20,1],[23,1],[26,5],[33,2],[39,9],[51,3],[58,1],[60,3],[65,2],[70,4],[84,5],[100,2],[105,5]]},"1381":{"position":[[19,2],[25,4],[30,4],[35,6],[45,2],[51,6]]},"1383":{"position":[[0,2],[7,2],[19,2],[22,1],[28,3],[34,1],[38,1],[42,7],[50,1],[52,1],[63,1],[69,3],[74,2],[77,1],[81,1],[85,7],[93,1],[95,1],[104,4],[109,2],[114,4]]},"1386":{"position":[[0,3],[30,3],[81,2],[84,3],[98,6],[112,3],[131,4],[139,10],[150,6],[159,7],[173,10],[184,3],[188,7]]},"1389":{"position":[[4,2],[40,7],[56,3],[123,6],[130,3],[152,3],[160,7]]},"1391":{"position":[[2,7],[24,7],[32,4],[45,6],[56,7],[64,5],[77,7]]},"1393":{"position":[[0,7],[8,4],[13,6],[23,3],[29,7],[40,4],[45,4],[54,3],[58,3],[62,3],[68,2],[71,8],[83,7],[91,6],[98,3],[103,9],[116,7],[124,7],[132,3],[137,3],[141,7],[150,4],[158,8],[171,3],[175,3],[179,7],[188,5],[197,9],[211,2],[214,8],[225,7],[233,6],[241,3],[246,9],[258,7],[266,7],[275,3],[280,3],[284,7],[293,5],[299,4],[307,8],[321,3],[325,3],[329,7],[338,5],[344,5],[353,9],[367,12]]},"1395":{"position":[[16,7],[24,5],[38,6],[52,4],[59,7],[67,4],[72,6],[82,3],[88,7],[99,4],[104,4],[113,3],[117,3],[121,3],[127,2],[150,9],[162,7],[170,5],[180,3],[186,9],[199,7],[207,7],[216,3],[227,9],[239,7],[247,5],[257,3],[263,9],[276,9],[286,4],[326,7],[334,5],[349,4],[375,2],[378,9],[388,6],[399,9],[409,6],[416,3],[423,3],[427,7],[436,8],[445,5],[454,3],[462,3]]},"1398":{"position":[[0,7],[8,4],[13,6],[23,3],[29,7],[40,4],[45,6],[52,6],[61,4],[66,6],[73,3],[77,3],[83,4],[88,4],[97,1],[102,6],[109,4],[116,5],[124,3],[129,2],[133,8],[145,7],[153,6],[160,1],[166,8],[175,7],[183,3],[187,6],[194,2],[197,6],[204,2],[207,3],[211,6],[222,2],[225,6],[232,2],[235,3],[239,4],[244,2],[247,1],[249,2],[252,3],[256,1],[258,6],[266,3],[270,1],[275,1],[278,1],[282,8],[291,8],[303,1],[309,5],[318,8],[327,5],[333,1],[336,3],[340,6],[348,5],[354,4],[361,1],[364,4],[371,1],[373,1],[377,5],[383,4],[389,5],[395,4]]},"1400":{"position":[[22,4],[35,7],[43,4],[48,6],[58,3],[64,7],[75,4],[80,4],[85,6],[94,2],[97,3],[102,4],[108,2],[112,4],[118,2],[123,4],[128,6],[136,4],[142,4],[151,4],[156,4],[165,8],[177,7],[185,6],[192,4],[200,3],[204,1],[209,1],[212,1],[216,8],[225,8],[237,1],[243,5],[252,8],[261,5],[267,1],[280,3],[284,6],[292,5],[298,3],[304,1],[306,1],[310,5],[316,3],[321,3],[328,5],[334,3],[338,3],[343,4],[350,3],[354,6],[362,5],[370,1],[373,4],[378,3],[384,1],[386,1],[390,5],[396,4],[402,3]]},"1402":{"position":[[6,7],[14,4],[19,6],[29,3],[35,7],[46,4],[51,10],[62,6],[71,4],[77,1],[79,10],[91,3],[95,1],[98,1],[100,3],[105,3],[111,6],[118,1],[122,1],[126,4],[131,4],[140,4],[148,10],[161,6],[171,7],[179,7],[187,4],[193,12],[207,3],[213,4],[223,7],[231,5],[237,7],[245,7],[253,2],[258,7],[266,7],[274,2],[279,6],[289,6],[296,4],[301,4],[307,3],[311,7],[320,6],[330,6],[337,1],[340,3],[350,2],[361,7],[369,4],[374,6],[384,3],[390,7],[401,4],[406,4],[411,6],[420,4],[425,6],[434,4],[440,1],[442,4],[448,8],[461,3],[465,7],[474,5],[483,1],[485,4],[493,4],[498,4],[507,1],[512,4],[517,4],[524,5],[532,1],[537,7],[545,7],[553,1],[556,6],[566,1],[568,12],[582,8],[593,6],[600,4],[605,3],[617,5],[624,5]]},"1404":{"position":[[29,2]]},"1406":{"position":[[21,9],[35,6],[57,4],[62,8],[80,7]]},"1409":{"position":[[0,7],[22,6],[36,4],[50,3]]},"1411":{"position":[[0,2],[3,3],[7,6],[14,3],[18,10],[29,7]]},"1414":{"position":[[0,7],[15,7],[23,11],[51,7],[59,4],[64,6],[74,3],[80,2],[85,6],[92,3],[96,10],[107,7],[118,3],[124,4],[131,7],[139,4],[145,4],[163,5],[170,1],[174,7],[183,5],[191,6],[200,3],[206,7],[214,4],[220,3],[237,3],[245,4],[250,4],[259,7],[267,5],[275,3],[279,6],[287,5],[294,1],[297,3],[301,3],[306,1],[308,5],[314,3],[319,1],[324,4],[331,3],[346,7],[356,4],[361,5],[369,3],[373,2]]},"1416":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[34,6],[41,3],[45,10],[56,7],[67,4],[72,4],[81,3],[88,7],[96,3],[101,7],[122,4],[130,3],[134,4],[140,4],[158,5],[165,1],[169,7],[178,5],[186,6],[195,3],[202,3],[206,4],[212,3],[229,3],[235,7],[243,9],[253,3],[257,5],[263,2],[266,4],[271,1],[277,3],[281,6],[289,5],[296,1],[299,3],[303,3],[308,1],[310,5],[316,3],[321,1],[326,4],[333,3],[348,7],[358,4],[363,5],[371,3],[375,2]]},"1418":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[34,6],[41,3],[45,10],[56,7],[67,4],[72,4],[81,3],[88,7],[96,3],[101,3],[132,5],[139,8],[151,3],[155,7],[164,5],[180,4],[188,8],[197,4],[203,4],[219,7],[228,5],[236,6],[255,3],[260,6],[270,3],[274,7],[283,3],[296,7],[307,6],[314,4],[320,7],[339,7],[348,7],[359,6],[368,6],[375,7],[383,9],[393,3],[397,5],[403,2],[406,4],[411,1],[419,4],[424,8],[433,11],[448,3],[452,6],[460,5],[468,1],[471,1],[476,4],[482,4],[487,6],[494,11],[509,3],[513,7],[522,7],[543,3],[547,5],[555,4],[560,3],[566,3],[570,3],[576,7],[585,3],[589,3]]},"1420":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[34,6],[41,3],[45,10],[56,7],[67,4],[72,4],[81,3],[88,7],[96,3],[101,3],[105,7],[128,4],[136,3],[140,4],[146,4],[162,5],[169,9],[169,4],[174,4],[181,7],[190,9],[202,6],[211,7],[219,9],[229,3],[233,5],[239,2],[242,4],[247,1],[253,3],[257,7],[266,5],[276,4],[290,6],[297,9],[297,4],[302,4],[307,7],[317,3],[321,7]]},"1422":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[34,6],[41,3],[45,10],[56,7],[67,4],[72,4],[81,3],[88,7],[96,3],[101,4],[106,4],[124,7],[135,3],[139,4],[145,7],[166,5],[173,1],[177,4],[184,7],[192,9],[202,3],[206,5],[212,2],[215,4],[220,1],[226,2],[230,7],[240,3],[244,7],[253,7],[261,4],[266,7],[278,4],[285,3],[289,7],[298,7],[306,4],[311,8],[334,4],[339,4],[346,7],[356,4],[361,4],[367,1]]},"1424":{"position":[[0,7],[8,4],[13,6],[23,3],[29,2],[34,6],[41,3],[45,10],[56,7],[67,4],[72,4],[81,3],[88,7],[96,3],[101,4],[106,7],[129,5],[138,3],[142,4],[148,5],[166,7],[176,7],[184,9],[194,3],[198,5],[204,2],[207,4],[212,1],[218,3],[222,7],[231,5],[241,5],[258,4],[263,7],[273,5],[279,5],[287,5],[293,6],[302,5],[308,6]]},"1427":{"position":[[5,7],[13,6],[36,7],[44,4],[49,6],[59,3],[65,2],[70,6],[77,3],[81,10],[92,7],[103,4],[108,4],[117,3],[124,7],[132,3],[137,6],[144,6],[170,4],[178,3],[182,4],[188,4],[206,6],[215,3],[219,6],[226,4],[231,1],[234,7],[242,12],[256,5],[264,3],[268,7],[288,4],[294,6],[301,3],[308,7],[316,9],[326,3],[330,5],[336,2],[339,4],[344,1]]},"1429":{"position":[[0,7],[37,3]]},"1431":{"position":[[23,3],[68,7]]},"1434":{"position":[[2,7],[12,9],[33,7],[41,4],[46,6],[56,3],[62,4],[73,15],[101,4],[106,15],[122,6],[131,8],[142,6],[149,8],[158,4],[163,5],[188,10],[213,4],[218,10],[229,6],[238,5],[246,6],[253,12],[266,4],[272,15],[288,8],[297,4],[302,6],[316,8],[328,10],[348,4],[354,1],[357,10],[369,8],[378,1],[382,6],[390,5],[398,3],[406,15],[423,8],[433,1],[436,8],[446,4],[451,4],[456,5],[466,1],[468,12],[484,3],[488,6],[497,3],[501,8],[525,3],[532,10],[549,4],[555,1],[558,10],[570,3],[578,3],[584,6],[593,4],[598,3],[607,1],[609,12],[623,1],[625,5],[633,3],[637,8],[646,3],[650,7],[659,7],[667,5],[676,1],[678,5],[685,3],[689,8],[701,3],[713,4],[720,1],[722,8],[732,6],[748,4],[756,10],[773,4],[779,1],[782,10],[794,4],[803,5],[809,1],[811,8],[823,4],[828,4],[837,10],[852,10],[864,5],[873,6],[883,12],[897,4],[902,4],[908,15],[926,8],[936,4],[941,4],[946,6],[959,2],[962,10],[973,3],[987,4],[992,5],[998,3],[1004,4],[1009,11],[1022,10],[1033,8],[1044,6],[1052,1],[1057,1],[1062,1],[1067,10],[1078,8],[1089,6],[1097,1],[1102,1],[1107,1],[1122,10],[1133,4],[1162,8],[1173,10],[1186,7],[1206,8],[1215,7],[1239,10],[1258,7],[1304,7],[1322,7]]},"1437":{"position":[[4,2],[10,1],[17,7],[33,5],[46,4],[57,7],[69,5],[98,1],[101,2],[109,2],[115,2],[121,5],[130,7],[150,1],[157,2],[172,7],[188,1],[191,2],[199,2],[205,2],[211,5],[220,7],[236,7],[244,4],[249,6],[259,3],[265,4],[273,4],[278,4],[289,2],[295,4],[300,4],[305,3],[310,1],[313,2],[319,4],[324,4],[329,3],[334,2],[337,4],[346,2],[352,2],[355,4],[360,5],[366,1],[370,4],[375,6],[383,5],[389,5],[395,2],[420,5],[431,2],[434,3],[438,7],[447,5],[456,5],[469,2],[472,2],[475,2],[478,5],[485,2],[488,5],[498,2],[501,3],[505,7],[514,5],[523,5],[536,2],[539,2],[542,2],[545,5],[552,1],[554,5],[564,2],[567,3],[571,7],[580,5],[589,5],[602,2],[605,2],[608,2],[611,5],[618,1],[637,5],[644,4],[654,2],[657,3],[661,7],[670,5],[679,5],[687,4],[695,4],[707,2],[710,2],[713,2],[716,5],[723,2],[726,4],[732,4],[737,5],[744,4],[753,2],[756,3],[760,7],[769,5],[778,5],[786,4],[794,4],[806,2],[809,2],[812,2],[815,5],[822,1],[824,4],[830,5],[836,5],[843,4],[852,2],[855,3],[859,7],[868,5],[877,5],[885,4],[893,4],[905,2],[908,2],[911,2],[914,5],[921,1],[923,4],[929,5]]},"1439":{"position":[[13,9],[24,12],[39,8],[60,5],[69,2],[83,7],[97,3],[108,3],[121,4],[143,7],[151,4],[156,6],[166,3],[172,4],[197,8],[211,4],[216,15],[232,6],[241,8],[252,6],[259,8],[268,4],[273,5],[290,4],[295,10],[306,6],[315,5],[323,6],[330,12],[343,4],[349,15],[365,8],[374,4],[379,6],[388,8],[397,4],[402,6],[428,3],[435,10],[452,4],[458,1],[461,10],[473,3],[481,5],[487,5],[493,1],[495,8],[522,3],[528,6],[537,4],[542,3],[547,2],[555,1],[557,12],[571,2],[575,2],[580,3],[584,7],[593,12],[606,6],[614,7],[622,3],[630,6],[639,1],[641,5],[649,3],[653,8],[662,3],[666,7],[675,7],[683,5],[692,1],[694,5],[710,3],[714,8],[726,3],[730,4],[737,1],[739,8],[749,3],[753,7],[762,8],[771,4],[776,6],[784,7],[792,3],[800,6],[816,8],[832,4],[838,1],[841,10],[853,8],[862,1],[866,6],[874,5],[882,3],[890,15],[907,8],[917,1],[920,8],[930,4],[935,4],[940,5],[950,6],[959,4],[964,1],[966,12],[982,3],[987,6],[996,3],[1000,8],[1009,4],[1016,1],[1018,8],[1028,6],[1035,3],[1039,6],[1047,10],[1058,2],[1061,8],[1070,4],[1084,4],[1092,10],[1106,9],[1121,4],[1127,1],[1130,10],[1142,4],[1151,5],[1157,1],[1159,8],[1177,5],[1183,1],[1185,12],[1210,12],[1225,1],[1227,8],[1248,3],[1252,7],[1261,10],[1272,7],[1280,10],[1295,4],[1300,4],[1309,10],[1324,10],[1336,5],[1345,6],[1355,12],[1369,4],[1374,4],[1380,15],[1398,8],[1408,4],[1413,4],[1418,6],[1429,8],[1439,4],[1444,4],[1449,6],[1462,2],[1465,10],[1476,3],[1482,4],[1487,5],[1493,3],[1499,4],[1504,11],[1517,10],[1528,8],[1539,6],[1547,1],[1552,1],[1557,1],[1562,10],[1573,8],[1584,6],[1592,1],[1597,1],[1602,1],[1607,10],[1618,4]]},"1441":{"position":[[7,7],[15,7],[38,10],[49,9],[70,7],[80,6],[130,8],[160,7],[168,7],[191,8],[200,8],[212,4],[221,7],[229,4],[234,6],[244,7],[254,3],[260,4],[285,8],[299,4],[304,15],[320,6],[329,8],[340,6],[347,8],[356,4],[361,5],[379,4],[384,10],[395,6],[404,5],[412,6],[419,12],[432,4],[438,15],[454,8],[463,4],[468,6],[477,8],[486,4],[491,6],[505,3],[512,10],[529,4],[535,1],[538,10],[550,3],[558,5],[564,5],[570,1],[572,8],[582,3],[588,6],[597,4],[602,3],[607,2],[615,1],[617,12],[631,2],[635,2],[640,3],[644,7],[653,12],[666,6],[674,7],[682,3],[690,6],[699,1],[701,5],[709,3],[713,8],[722,3],[726,7],[735,7],[743,5],[752,1],[754,5],[761,3],[765,8],[777,3],[781,4],[788,1],[790,8],[800,3],[804,7],[813,8],[822,4],[827,6],[835,7],[843,3],[851,6],[867,11],[882,7],[900,4],[906,1],[909,10],[921,11],[933,3],[937,7],[945,7],[954,5],[962,6],[970,5],[978,3],[986,15],[1003,8],[1013,5],[1020,8],[1030,4],[1035,4],[1040,5],[1047,1],[1072,4],[1077,5],[1083,1],[1087,4],[1092,11],[1105,6],[1114,4],[1119,1],[1121,12],[1137,3],[1150,2],[1153,7],[1164,6],[1173,4],[1178,3],[1187,3],[1191,8],[1201,6],[1208,3],[1212,4],[1219,3],[1223,4],[1231,6],[1238,3],[1242,6],[1250,3],[1254,5],[1260,7],[1268,2],[1271,9],[1283,1],[1287,3],[1291,3],[1300,4],[1307,1],[1309,8],[1319,6],[1326,3],[1330,6],[1338,10],[1349,8],[1358,4],[1365,4],[1372,3],[1376,4],[1384,6],[1391,3],[1395,6],[1403,4],[1408,7],[1416,2],[1419,9],[1431,1],[1435,3],[1439,3],[1453,4],[1463,4],[1469,1],[1472,10],[1484,4],[1493,5],[1499,1],[1501,8],[1511,5],[1517,1],[1519,12],[1535,1],[1537,8],[1546,3],[1550,7],[1559,10],[1570,7],[1578,10],[1593,4],[1598,4],[1607,10],[1622,10],[1634,5],[1643,6],[1653,12],[1667,4],[1672,4],[1678,15],[1696,8],[1706,4],[1711,4],[1716,6],[1727,8],[1737,4],[1742,4],[1747,6],[1760,2],[1763,10],[1774,3],[1790,3],[1797,7],[1805,10],[1818,10],[1829,11],[1841,3],[1848,6],[1856,1],[1861,1],[1866,1],[1878,7],[1890,3],[1899,10],[1911,6],[1921,7],[1929,11],[1941,7],[1949,10],[1963,1],[1965,4],[1970,11],[1983,5],[1989,6],[1998,3],[2005,10],[2016,11],[2028,10],[2042,6],[2050,6],[2060,4],[2068,4],[2076,2],[2079,3],[2086,3],[2092,3],[2096,7],[2105,7],[2113,3],[2120,3],[2135,4],[2141,7],[2152,7],[2160,11],[2172,7],[2180,10],[2194,1],[2196,4],[2201,6],[2209,5],[2215,7],[2225,10],[2236,11],[2248,4],[2256,6],[2264,1],[2269,1],[2274,1],[2279,10],[2290,4]]},"1443":{"position":[[0,14],[23,7],[31,7],[99,14],[171,7],[206,7],[240,14],[275,7],[316,7],[343,14],[363,8],[465,7],[476,8],[485,8],[527,14],[569,4],[574,7],[596,4],[605,9],[616,8],[660,1],[687,7],[715,7],[723,7],[736,15],[777,15],[795,18],[823,8],[834,8],[845,7],[853,4],[858,6],[868,7],[878,6],[887,3],[897,7],[914,4],[919,7],[927,9],[939,7],[947,3],[951,7],[959,7],[968,1],[971,7],[980,4],[989,4],[994,6],[1003,3],[1009,5],[1020,7],[1040,4],[1045,7],[1053,6],[1062,5],[1070,6],[1077,7],[1085,4],[1090,7],[1098,4],[1103,4],[1108,6],[1117,4],[1122,4],[1127,6],[1148,4],[1153,11],[1165,6],[1174,3],[1178,5],[1184,4],[1189,4],[1194,6],[1205,4],[1211,1],[1214,11],[1227,4],[1236,4],[1241,6],[1252,6],[1259,1],[1261,4],[1268,4],[1274,1],[1277,11],[1290,3],[1296,5],[1304,6],[1311,1],[1313,3],[1322,15],[1343,4],[1348,15],[1364,6],[1373,11],[1385,8],[1396,6],[1405,4],[1411,1],[1414,15],[1431,7],[1439,3],[1443,7],[1451,7],[1460,1],[1463,7],[1474,5],[1480,5],[1486,1],[1488,4],[1494,1],[1496,5],[1504,1],[1506,8],[1515,3],[1519,7],[1528,15],[1544,8],[1556,1],[1558,5],[1570,15],[1591,4],[1596,15],[1612,6],[1621,11],[1633,6],[1640,4],[1647,6],[1656,4],[1662,1],[1665,15],[1682,7],[1690,3],[1694,7],[1702,7],[1711,1],[1714,7],[1725,5],[1731,5],[1737,1],[1739,4],[1745,1],[1747,6],[1757,1],[1759,5],[1765,5],[1771,1],[1773,6],[1783,4],[1788,10],[1802,7],[1812,6],[1820,7],[1829,5],[1838,6],[1848,7],[1857,4],[1862,4],[1867,7],[1877,4],[1883,4],[1888,4],[1893,6],[1904,4],[1910,4],[1915,4],[1920,6],[1938,3],[1949,4],[1955,1],[1958,7],[1967,3],[1975,5],[1981,5],[1987,1],[1989,4],[1995,3],[2001,6],[2010,4],[2015,3],[2024,1],[2026,7],[2035,3],[2042,7],[2050,10],[2070,3],[2077,3],[2081,7],[2089,3],[2094,1],[2097,4],[2104,1],[2106,4],[2112,6],[2128,4],[2145,4],[2151,1],[2154,7],[2163,4],[2168,3],[2172,7],[2180,7],[2189,3],[2193,7],[2202,5],[2210,6],[2219,4],[2224,1],[2226,7],[2237,3],[2242,6],[2251,4],[2258,3],[2262,4],[2270,6],[2277,3],[2281,3],[2287,4],[2294,3],[2298,4],[2306,6],[2313,3],[2317,3],[2325,4],[2332,1],[2334,4],[2340,6],[2347,6],[2354,3],[2359,7],[2367,2],[2370,7],[2380,4],[2387,3],[2391,4],[2399,6],[2406,3],[2410,3],[2423,4],[2433,4],[2439,1],[2442,7],[2451,4],[2460,5],[2466,1],[2468,4],[2476,1],[2478,4],[2485,4],[2490,4],[2499,7],[2510,10],[2523,2],[2526,7],[2534,3],[2540,3],[2547,7],[2555,10],[2568,6],[2579,15],[2596,11],[2609,11],[2621,4],[2627,4],[2632,4],[2637,6],[2649,8],[2661,6],[2669,1],[2674,1],[2679,1],[2686,7],[2694,4],[2699,3],[2704,6],[2720,6],[2731,15],[2748,11],[2761,11],[2773,4],[2779,4],[2784,4],[2789,6],[2801,6],[2809,4],[2814,4],[2821,6],[2829,1],[2835,7],[2843,4],[2848,3],[2853,6],[2861,3],[2865,7],[2874,7],[2882,5],[2893,6],[2900,6],[2908,7],[2916,4],[2934,13],[2948,1],[2978,6],[2985,3],[2989,4],[3001,7],[3045,7],[3053,4],[3058,6],[3068,7],[3078,6],[3087,3],[3093,4],[3107,7],[3118,4],[3123,7],[3131,9],[3143,7],[3151,7],[3159,7],[3169,7],[3178,4],[3187,4],[3192,6],[3201,3],[3207,5],[3218,7],[3232,4],[3237,7],[3245,6],[3254,5],[3262,6],[3269,7],[3277,4],[3282,7],[3290,4],[3295,4],[3300,6],[3309,4],[3314,4],[3319,6],[3330,4],[3335,10],[3349,7],[3359,6],[3367,7],[3376,5],[3385,6],[3395,7],[3404,4],[3409,4],[3414,7],[3424,4],[3430,4],[3435,4],[3440,6],[3451,4],[3457,4],[3462,4],[3467,6],[3482,4],[3488,1],[3491,7],[3500,3],[3508,5],[3514,5],[3520,1],[3522,4],[3528,3],[3534,6],[3543,4],[3548,3],[3557,1],[3559,7],[3568,3],[3572,7],[3580,7],[3588,10],[3602,1],[3605,4],[3612,1],[3614,4],[3620,6],[3633,4],[3639,1],[3642,7],[3651,4],[3660,5],[3666,1],[3668,4],[3676,1],[3678,4],[3688,4],[3702,4],[3708,1],[3711,7],[3720,4],[3725,3],[3729,7],[3737,7],[3746,3],[3750,7],[3759,5],[3767,6],[3776,4],[3781,1],[3783,7],[3794,3],[3799,6],[3808,4],[3815,3],[3819,4],[3827,6],[3834,3],[3838,3],[3844,4],[3851,3],[3855,4],[3863,6],[3870,3],[3874,3],[3882,4],[3889,3],[3893,4],[3901,6],[3908,3],[3912,3],[3918,4],[3925,1],[3927,4],[3933,6],[3940,6],[3947,3],[3952,7],[3960,7],[3982,13],[3996,1],[4035,4],[4040,13],[4054,1],[4056,3],[4061,6],[4070,6],[4077,1],[4079,3],[4083,5],[4089,4],[4094,4],[4099,6],[4108,7],[4116,4],[4121,1],[4125,4],[4130,16],[4147,1],[4149,3],[4157,13],[4171,1],[4176,6],[4184,13],[4198,1],[4202,4],[4208,4],[4213,4],[4218,6],[4229,7],[4238,4],[4243,4],[4248,1],[4251,1],[4268,4],[4274,1],[4277,13],[4291,1],[4295,4],[4304,4],[4309,6],[4320,6],[4327,1],[4329,4],[4336,4],[4342,1],[4345,13],[4359,1],[4363,3],[4369,5],[4377,6],[4384,1],[4386,3],[4395,4],[4405,4],[4411,1],[4414,13],[4428,1],[4432,4],[4437,3],[4441,7],[4449,7],[4459,1],[4462,5],[4471,6],[4480,4],[4487,3],[4491,4],[4499,3],[4503,4],[4508,1],[4510,6],[4517,4],[4523,3],[4527,3],[4533,4],[4538,3],[4547,1],[4549,7],[4558,6],[4565,3],[4570,1],[4572,3],[4624,15],[4645,6],[4688,4],[4693,15],[4709,6],[4719,13],[4735,6],[4745,4],[4750,18],[4772,15],[4790,6],[4798,15],[4815,13],[4830,16],[4849,6],[4864,4],[4870,1],[4873,15],[4890,7],[4898,3],[4902,7],[4910,7],[4919,1],[4922,7],[4933,5],[4939,5],[4945,1],[4947,4],[4953,1],[4955,6],[4964,1],[4966,5],[4972,1],[4974,7],[4985,1],[4987,5],[5039,15],[5091,4],[5096,15],[5112,6],[5121,8],[5132,6],[5139,4],[5144,4],[5149,6],[5158,3],[5162,5],[5170,4],[5175,18],[5194,5],[5202,6],[5211,15],[5229,6],[5237,15],[5254,8],[5264,5],[5271,4],[5277,4],[5282,4],[5287,6],[5302,4],[5308,1],[5311,15],[5328,7],[5336,3],[5340,7],[5348,7],[5357,1],[5360,7],[5371,5],[5377,5],[5383,1],[5385,4],[5391,1],[5393,5],[5401,1],[5403,8],[5412,3],[5416,7],[5425,5],[5431,7],[5442,1],[5444,5],[5453,4],[5459,1],[5462,15],[5479,4],[5488,4],[5493,6],[5504,6],[5511,1],[5513,4],[5520,4],[5526,1],[5529,15],[5546,3],[5552,5],[5560,6],[5567,1],[5569,3],[5581,4],[5589,8],[5600,8],[5614,4],[5619,4],[5628,1],[5633,10],[5646,2],[5649,1],[5651,3],[5657,3],[5664,7],[5672,10],[5688,3],[5692,5],[5698,6],[5708,18],[5729,6],[5737,1],[5742,1],[5747,1],[5752,1],[5756,1],[5758,4],[5763,3],[5768,6],[5779,3],[5783,5],[5789,6],[5799,18],[5820,1],[5824,1],[5826,4],[5831,3],[5836,6],[5844,5],[5851,3],[5858,6],[5865,4],[5870,3],[5875,2],[5878,3],[5885,3],[5891,3],[5895,7],[5904,8],[5913,5],[5922,3],[5929,4],[5936,3],[5940,7],[5949,3],[5953,5],[5962,5],[5979,10],[5991,6],[6001,7],[6009,11],[6021,3],[6026,1],[6028,4],[6033,11],[6046,5],[6052,6],[6061,7],[6072,18],[6093,1],[6097,1],[6099,4],[6104,10],[6116,7],[6125,6],[6133,3],[6140,7],[6148,4],[6153,10],[6165,3],[6169,7],[6178,4],[6183,7],[6194,6],[6202,3],[6207,1],[6209,4],[6224,5],[6230,7],[6240,1],[6242,1],[6244,1],[6247,3],[6251,5],[6259,1],[6261,1],[6263,1],[6266,4],[6271,7],[6283,7],[6291,8],[6300,8],[6320,15],[6336,6],[6344,13],[6358,3],[6362,6],[6369,3],[6376,18],[6395,6],[6403,13],[6417,4],[6425,17],[6443,6],[6451,13],[6465,6],[6475,18],[6494,6],[6502,5],[6510,6]]},"1446":{"position":[[0,9],[12,2]]},"1448":{"position":[[0,2],[3,3],[7,6],[14,3],[18,2],[21,10],[32,9],[42,3]]},"1450":{"position":[[0,7],[8,4],[13,6],[23,3],[29,6],[36,3],[40,2],[43,10],[54,9],[64,3],[71,4],[76,4],[81,6],[90,4],[95,6],[103,8],[113,8],[124,3],[128,3],[133,8],[143,3],[147,2],[150,3],[154,2],[159,5],[165,6],[173,8],[183,8],[192,5],[202,4],[207,4],[216,8],[228,9],[238,3],[244,4],[252,4],[258,4],[268,3],[273,2],[277,5],[285,7],[293,5],[303,3],[310,8],[319,6],[326,4],[332,2],[335,3],[342,3],[348,3],[352,1],[355,3],[362,5],[368,3],[373,9],[383,16],[403,3],[407,7],[416,10],[427,5],[436,3],[445,4],[452,3],[456,7],[465,10],[476,6]]},"1452":{"position":[[6,8],[20,5],[37,3],[41,1],[48,1],[50,3],[54,1],[61,1],[63,3],[67,1],[84,3],[88,1],[105,3],[109,1],[118,1],[120,3],[131,3],[135,7],[149,8],[167,5],[179,8],[188,1],[195,1],[200,10],[211,1],[217,1],[222,8],[231,1],[237,1],[242,9],[258,9],[274,4],[286,4],[294,4],[306,4],[314,7],[329,8],[338,6],[358,6],[369,6],[381,8],[402,4],[414,4],[419,4],[431,4],[440,5],[450,5],[459,10],[477,5],[486,9],[504,11],[516,5],[527,5],[542,11],[554,5],[565,5],[578,8],[587,1],[594,1],[599,9],[621,4],[632,3]]},"1454":{"position":[[22,5],[30,4],[35,14],[50,2],[53,9],[63,10],[75,4],[82,6],[89,2],[92,5],[100,6],[113,5],[122,4],[127,4],[136,8],[148,9],[158,3],[164,8],[173,18],[193,5],[201,14],[217,4],[222,4],[227,6],[236,3],[240,6],[248,8],[258,5],[268,1],[273,4],[278,3],[284,5],[292,3],[299,8],[308,6],[315,1],[318,2],[321,3],[328,3],[334,3],[338,7],[347,10],[358,6],[368,3],[375,4],[382,3],[386,7],[395,10],[406,6]]},"1456":{"position":[[0,4],[5,7],[13,6],[22,4],[27,6],[35,8],[45,8],[56,7],[64,6],[72,8],[82,7],[94,4],[99,6],[106,6],[115,4],[120,6],[128,8],[138,8],[149,3],[153,3],[158,8],[168,3],[172,2],[177,7],[185,7],[194,8],[204,8],[217,8]]},"1458":{"position":[[0,2],[3,3],[10,3],[16,3],[20,1],[23,1],[28,5],[34,3],[39,9],[49,16],[69,3],[73,6],[81,5],[88,1],[90,6],[97,2],[102,1],[105,3],[109,1],[113,1],[115,5],[124,1],[126,3]]},"1460":{"position":[[0,9],[25,2],[44,3],[52,3],[61,3]]},"1463":{"position":[[2,6],[15,13],[35,15],[74,8],[83,4],[102,4],[169,4],[174,9],[186,4],[191,11]]},"1466":{"position":[[0,6],[8,8],[17,4],[23,4],[28,4],[37,1],[42,6],[50,5],[58,2],[69,4],[75,3],[82,4],[87,7],[95,1],[106,3],[110,2],[113,6],[120,3],[126,4],[131,9],[141,4],[148,2]]},"1468":{"position":[[0,4],[5,7],[13,6],[22,2],[25,3],[30,4],[36,2],[41,4],[46,6],[54,4],[60,4],[67,9],[77,4],[82,4],[88,4],[94,10],[94,7],[102,2],[105,9]]},"1470":{"position":[[5,4],[10,9],[34,4],[51,4],[56,9],[79,4],[108,8],[120,4],[125,6],[132,6],[141,4],[146,6],[153,3],[157,3],[181,4],[187,1],[190,6],[198,13],[212,4],[219,4],[225,5],[233,3],[237,4],[242,6],[251,8],[260,6],[268,4],[274,9],[274,4],[279,4],[286,3],[290,3],[295,4],[301,3],[309,2],[312,3],[319,4],[324,9],[334,4],[341,4],[348,3],[355,3],[361,6],[368,3],[374,2],[377,4],[382,3],[388,1],[393,4],[398,3],[404,3],[410,6],[417,6],[424,3],[429,3],[433,4],[438,2],[441,7],[449,1],[451,3],[455,3]]},"1472":{"position":[[0,4],[5,10],[16,4],[21,4],[26,4],[32,2],[35,10],[47,11],[64,4],[70,5],[79,6],[86,4],[91,7],[99,4],[104,4],[109,2],[113,6],[121,4],[126,2],[129,2]]},"1474":{"position":[[0,4],[6,2],[10,10],[22,13],[36,4],[43,4],[49,5],[57,3],[61,1],[63,6],[70,2],[73,3],[80,4],[85,9],[95,4],[102,1],[106,3],[113,3],[119,6],[126,3],[132,1],[135,3],[142,4],[147,5],[154,4],[159,2],[162,2],[167,1],[170,2],[173,3],[180,3],[186,6],[193,3],[200,2],[205,10],[216,1],[219,6],[226,3]]},"1477":{"position":[[0,4],[5,5],[11,6],[20,2],[23,3],[28,4],[34,2],[39,8],[50,7],[59,4],[65,8],[76,4],[81,10],[93,4],[99,4]]},"1479":{"position":[[0,4],[5,5],[11,9],[23,4],[30,7],[40,4],[45,6],[52,6],[61,6],[68,7],[77,4],[83,6],[94,4],[100,1],[102,6],[110,4],[117,7],[127,6],[134,4],[139,2],[144,1],[146,6],[155,1],[157,6],[178,4],[184,1],[187,6],[195,11],[212,4],[218,5],[227,4],[232,5],[238,6],[245,6],[252,4],[257,7],[266,6],[275,4],[280,6],[288,4],[294,4],[302,5],[311,4],[318,6],[327,5],[336,5],[343,1]]},"1482":{"position":[[0,3],[4,10],[17,4],[22,4],[28,3],[33,4],[40,9],[54,6],[61,3],[65,5],[71,6],[84,4],[89,15],[105,1],[107,9],[123,4],[129,5],[138,3],[145,10],[156,3],[164,5],[170,6],[178,5],[184,10],[195,3],[199,3],[204,3],[208,5],[216,7],[227,4],[232,10],[243,3],[248,2],[251,3],[258,7],[266,6],[273,1],[277,3],[284,3],[290,6],[297,3],[302,3],[308,6],[315,3],[319,5],[328,3]]},"1484":{"position":[[0,4],[5,8],[27,8],[44,8]]},"1487":{"position":[[0,4],[5,4],[10,6],[19,5],[25,3],[30,4],[36,5],[44,4],[50,4],[56,4],[62,4],[67,9],[84,9]]},"1489":{"position":[[0,4],[5,9],[15,4],[20,4],[25,4],[31,1],[34,9],[45,13],[59,1],[63,4],[69,5],[77,1],[82,7],[90,4],[95,6],[102,1],[112,2],[116,3],[123,4],[128,5],[134,4],[139,7],[148,1],[151,2],[154,3],[161,3],[167,6],[174,3],[181,1],[185,9],[195,2],[199,6],[206,3]]},"1492":{"position":[[0,4],[5,26],[5,14],[20,11],[32,1],[35,7],[43,1],[48,2],[54,10],[65,4],[70,4],[75,4],[81,1],[84,1],[87,1],[90,1],[93,1],[96,1],[99,4],[104,3],[110,4],[116,3],[123,4],[128,7],[136,2],[140,6],[147,3],[151,1],[154,3],[159,6],[166,5],[172,1],[177,4],[182,2],[185,2],[191,6],[198,4],[207,4],[212,28],[212,14],[227,13],[241,1],[244,7],[252,1],[257,3],[261,2],[264,10],[275,3],[282,4],[287,9],[299,4],[306,4],[311,2],[314,2],[322,2],[326,6],[333,3],[337,1],[340,3],[345,6],[352,5],[358,1],[361,4],[367,4],[372,4],[377,2],[381,4]]},"1494":{"position":[[17,4],[28,9],[55,4],[60,7],[72,7],[80,9]]},"1496":{"position":[[0,7],[8,4],[13,6],[23,8],[32,4],[39,3],[45,4],[53,4],[58,10],[69,4],[74,4],[79,4],[85,2],[88,10],[100,11],[117,4],[123,5],[132,6],[139,4],[144,7],[152,4],[157,4],[162,2],[166,6],[174,4],[179,2],[182,2],[190,4],[196,2],[200,10],[212,13],[226,4],[233,4],[239,5],[247,3],[251,1],[253,6],[260,2],[263,3],[270,4],[275,9],[285,4],[292,1],[296,3],[303,3],[309,6],[316,3],[322,1],[325,3],[332,4],[337,5],[344,4],[349,2],[352,2],[357,1],[360,2],[363,3],[370,3],[376,6],[383,3],[390,2],[395,10],[406,1],[409,6],[416,3],[422,4],[427,5],[433,6],[442,4],[447,6],[455,4],[461,4],[468,9],[478,10],[490,4],[496,10],[496,5],[502,4],[511,4],[516,4],[525,5],[534,5],[541,4],[548,2],[551,10],[564,9],[575,10],[586,4],[591,3],[601,4],[607,1],[612,4],[617,7],[625,5],[632,3],[636,7],[644,6],[651,4],[663,4],[670,2],[673,10],[686,10],[686,5],[692,4],[699,4],[704,2],[707,2],[712,3],[716,8],[725,5],[731,1],[735,4],[740,9],[750,4],[757,8],[767,3],[771,6],[781,1],[783,1],[787,8],[801,4],[806,2],[809,10],[820,9],[830,4],[835,2],[838,2],[841,2],[844,2],[847,2],[851,4],[856,3],[863,6],[876,7],[884,3],[888,6],[898,8],[907,4],[914,6],[929,6],[952,4],[957,9],[967,4],[972,9],[982,4],[987,11],[999,4],[1004,11],[1026,4],[1033,4],[1072,4],[1078,4],[1104,6],[1124,4],[1129,6],[1136,6],[1145,5],[1151,6],[1163,9],[1178,6],[1185,4],[1190,9],[1200,3],[1204,6],[1212,6],[1221,6],[1228,6],[1235,5],[1242,3],[1252,11],[1267,4],[1272,9],[1285,4],[1291,1],[1293,6],[1301,11],[1316,9],[1329,5],[1340,2],[1343,1],[1345,5],[1362,6],[1371,6],[1381,3],[1391,6],[1398,3],[1403,3],[1407,6],[1416,6],[1426,3],[1435,11],[1450,4],[1455,9],[1468,4],[1474,1],[1476,6],[1484,11],[1501,4],[1507,5],[1516,6],[1525,4],[1532,6],[1543,3],[1552,13],[1569,4],[1574,11],[1589,4],[1595,1],[1598,6],[1606,13],[1620,9],[1630,4],[1635,9],[1648,5],[1655,5],[1663,2],[1666,1],[1671,3],[1677,6],[1684,6],[1691,3],[1696,6],[1703,9],[1713,4],[1718,3],[1722,6],[1751,5],[1767,4],[1772,5],[1778,6],[1791,5],[1799,6],[1812,6],[1819,9],[1831,5],[1838,1],[1847,1],[1854,5],[1882,6],[1895,4],[1900,9],[1936,6],[1944,9],[1964,3],[1968,3],[1972,6],[1979,2],[1982,3],[1989,9],[2000,3],[2006,3],[2013,3],[2019,6],[2026,3],[2032,1],[2034,5],[2042,3],[2046,6],[2053,3],[2062,13],[2079,4],[2084,11],[2099,4],[2105,1],[2108,6],[2116,13],[2130,4],[2137,4],[2143,5],[2151,2],[2154,1],[2159,3],[2165,6],[2172,6],[2179,3],[2184,6],[2191,9],[2201,4],[2206,3],[2210,6],[2221,3],[2225,3],[2229,6],[2236,2],[2239,3],[2246,4],[2251,9],[2261,4],[2268,3],[2274,3],[2281,3],[2287,6],[2294,3],[2300,1],[2302,5],[2310,3],[2314,6],[2321,3],[2330,3],[2347,4],[2353,1],[2355,6],[2363,3],[2369,6],[2378,6],[2385,1],[2387,5]]},"1499":{"position":[[0,6],[11,5]]},"1501":{"position":[[3,6],[50,6],[75,6],[83,8],[83,3],[87,4],[94,7],[104,8],[104,3],[108,4],[124,7],[178,5]]},"1504":{"position":[[0,4],[5,6],[13,4],[18,2],[21,8],[21,3],[25,4],[42,4],[47,2],[50,8],[50,3],[54,4],[68,5]]},"1506":{"position":[[0,4],[5,6],[13,4],[18,2],[21,8],[21,3],[25,4],[31,3],[35,4],[43,4],[48,2],[51,8],[51,3],[55,4],[67,3],[71,4]]},"1508":{"position":[[8,4],[13,5],[20,1],[23,4],[28,2],[31,8],[31,3],[35,4],[62,4],[71,6],[85,4],[90,5],[97,1],[99,4],[105,4],[111,4],[116,2],[119,8],[119,3],[123,4],[128,4],[133,4],[138,5],[145,1],[147,5],[154,3],[159,4],[164,2],[167,8],[167,3],[171,4],[176,3],[180,4],[185,5],[192,1],[194,4],[200,3],[205,4],[210,2],[213,8],[213,3],[217,4],[222,3],[226,4],[231,5],[238,1],[240,4],[246,3],[250,3],[255,4],[260,2],[263,8],[263,3],[267,4],[272,3],[276,3],[284,4],[290,3],[295,3],[302,3],[306,3],[409,4],[452,6],[471,4],[486,2],[489,3],[493,4],[517,4],[544,3],[604,3],[631,3],[669,3],[700,3],[723,3],[760,6],[795,3],[799,3],[811,3],[815,4],[829,3],[833,3],[850,3],[885,3],[889,3],[906,3],[929,3],[933,3],[937,1],[971,5],[996,3],[1002,4],[1025,3],[1029,3],[1046,3],[1050,3],[1073,6],[1086,4],[1093,2],[1150,6],[1167,4],[1172,2],[1176,3],[1180,4],[1186,4],[1191,2],[1194,8],[1194,3],[1198,4],[1203,3],[1208,4],[1213,2],[1217,3],[1221,6],[1221,3],[1225,2],[1228,5],[1234,3],[1238,8],[1247,2],[1250,1],[1253,4],[1258,2],[1261,8],[1261,3],[1265,4],[1270,3],[1274,6],[1274,3],[1278,2],[1281,5],[1287,3],[1292,4],[1297,2],[1301,3],[1305,6],[1305,3],[1309,2],[1312,5],[1318,3],[1322,4],[1327,2],[1330,1],[1333,4],[1338,2],[1341,8],[1341,3],[1345,4],[1350,3],[1354,6],[1354,3],[1358,2],[1361,5],[1367,3],[1375,6],[1385,4],[1390,6],[1398,4],[1403,2],[1406,8],[1406,3],[1410,4],[1416,3],[1420,4],[1438,6],[1454,4],[1459,2],[1462,8],[1462,3],[1466,4]]},"1511":{"position":[[17,6],[41,6],[77,4],[82,5],[89,3],[93,4],[99,3],[103,4],[108,5],[116,4],[122,3],[127,3],[131,3],[135,4],[140,5],[148,4],[154,4],[160,3],[164,4],[169,4],[174,5],[182,4],[188,3],[193,3],[197,3],[201,4],[206,6],[214,3]]},"1513":{"position":[[0,6],[68,6]]},"1517":{"position":[[21,6]]},"1519":{"position":[[5,6],[27,4],[47,6],[100,10],[113,10],[163,3],[169,4],[176,3],[219,6],[237,6],[279,6]]},"1521":{"position":[[0,6]]},"1524":{"position":[[0,4],[5,6],[12,6],[20,3],[34,3],[70,3],[109,9],[119,3],[124,1]]},"1527":{"position":[[0,7],[8,4],[13,6],[23,3],[29,3],[35,3],[41,3],[45,4],[52,2],[57,2],[60,6],[69,7],[80,4],[85,4],[100,10],[116,3],[120,4],[125,4],[137,6],[144,2],[147,3],[154,2],[157,9],[167,10],[180,3],[187,3],[193,3],[197,6],[207,6],[218,1],[222,3],[238,8],[248,3],[255,3],[259,6],[267,4],[274,10],[286,2],[289,3],[296,3],[302,3],[306,6],[321,1],[325,3],[332,5],[338,4],[347,8],[356,5],[364,2],[367,6],[374,10],[404,2],[407,3],[414,2],[417,5],[423,10],[435,4],[442,3],[449,3],[455,3],[459,6],[476,1],[480,3],[495,3],[502,4],[507,11],[521,3],[525,10],[541,4],[546,1],[548,4],[553,14],[569,1],[572,4],[577,7],[588,3],[592,7],[600,1],[604,5],[610,4],[615,4],[620,6],[627,4],[632,6],[640,1],[647,3],[651,10],[664,6],[673,4],[678,1],[680,4],[685,14],[701,1],[704,4],[709,7],[720,1],[722,11],[734,4],[739,8],[749,1],[751,5],[759,4],[765,2],[783,6],[794,4],[799,6],[807,7],[816,3],[831,21],[853,6],[869,3],[873,6],[881,6],[888,9],[898,2],[901,4],[906,6],[915,1],[919,10],[931,2],[934,3],[941,6],[948,5],[954,8],[965,3],[972,3],[979,3],[986,4],[991,15],[1009,3],[1013,6],[1028,1],[1032,3],[1041,4],[1046,21],[1068,6],[1076,4],[1081,6],[1091,7],[1102,4],[1107,4],[1112,2],[1115,6],[1123,1],[1126,6],[1133,6],[1140,7],[1149,2],[1152,9],[1163,7],[1171,7],[1180,2],[1183,4],[1194,7],[1202,3],[1206,7],[1234,2],[1237,3],[1244,6],[1251,5],[1260,3],[1267,3],[1273,3],[1277,6],[1295,1],[1299,3]]},"1529":{"position":[[4,4],[9,6],[21,6],[32,4],[37,6],[45,7],[54,3],[59,11],[72,2],[77,4],[82,6],[90,12],[104,2],[109,4],[114,6],[122,11],[135,2],[140,4],[145,6]]},"1532":{"position":[[0,7],[8,4],[13,6],[23,3],[29,3],[35,3],[39,4],[46,2],[51,2],[54,6],[63,7],[73,4],[80,6],[87,3],[91,3],[95,5],[101,3],[108,4],[113,4],[128,10],[144,3],[148,3],[152,4],[164,6],[171,2],[174,3],[181,2],[184,9],[194,10],[207,3],[214,3],[220,3],[224,6],[234,6],[245,1],[249,3],[265,8],[275,3],[282,3],[286,6],[294,4],[301,10],[313,2],[316,3],[323,3],[329,3],[333,6],[348,1],[352,3],[359,5],[365,4],[374,8],[383,5],[391,2],[394,6],[401,10],[427,2],[430,3],[437,2],[440,5],[446,10],[458,4],[465,3],[472,3],[478,3],[482,6],[499,1],[503,3],[516,3],[520,6],[530,3],[534,3],[547,6],[554,3],[558,3],[562,6],[572,6],[579,3],[583,3],[587,8],[605,6],[612,3],[621,4],[626,1],[629,3],[633,7],[644,1],[646,6],[653,4],[658,8],[669,5],[675,4],[680,3],[684,4],[689,6],[696,6],[709,6],[716,3],[722,3],[726,4],[733,4],[738,1],[741,3],[745,7],[756,1],[758,4],[763,4],[768,8],[778,3],[782,1],[786,6],[796,7],[807,7],[818,4],[823,9],[836,4],[845,6],[853,5],[862,5],[871,5],[895,6],[906,4],[911,6],[919,7],[928,6],[936,11],[949,2],[954,4],[959,6],[967,12],[981,2],[986,4],[991,6],[1009,21],[1031,6],[1047,3],[1051,6],[1059,3],[1063,6],[1070,9],[1080,2],[1083,4],[1088,6],[1097,1],[1101,10],[1113,2],[1116,3],[1123,6],[1130,5],[1136,8],[1147,3],[1154,3],[1161,3],[1168,4],[1173,15],[1191,3],[1195,6],[1210,1],[1214,3]]},"1534":{"position":[[11,11],[23,3],[27,7],[35,3],[39,11],[64,6],[71,3],[77,6],[86,4],[91,1],[94,3],[98,7],[109,1],[111,4],[116,4],[121,8],[131,3],[135,1],[138,6],[148,7],[173,6],[180,3],[184,20],[208,4],[213,20],[236,3],[240,11],[254,6],[261,4],[266,1],[269,3],[273,7],[284,5],[293,4],[298,3],[304,1],[306,4],[313,8],[325,4],[330,5],[336,5],[343,3],[347,6],[359,1],[365,1],[369,1],[371,7],[379,3],[383,4],[389,8]]},"1537":{"position":[[0,4],[5,4],[14,9],[28,4],[33,9],[44,4],[50,4],[55,1],[58,1],[60,6],[69,3],[73,4],[79,5],[88,6],[95,3],[99,4],[105,4],[114,3],[118,4],[123,4],[135,6],[146,4],[151,6],[159,9],[170,9],[181,7],[190,1],[194,4],[199,6],[209,4],[215,3],[222,6],[229,3],[234,4],[241,4],[246,6],[255,2],[258,3],[265,3],[271,3],[275,5],[281,3],[288,5],[294,4],[299,4],[304,5],[312,4],[318,1],[323,2],[326,7],[334,4],[339,4],[345,3],[349,7],[364,6],[371,4]]},"1539":{"position":[[0,4],[5,4],[14,4],[20,3],[27,3],[31,4],[37,4],[46,3],[50,4],[55,4],[62,2],[65,3],[72,3],[78,3],[82,5],[88,3],[95,5],[101,4],[106,5],[119,4],[126,7],[138,3],[144,4],[149,1],[151,1],[153,1],[155,5],[162,4],[167,1],[169,1],[171,1],[173,1],[176,1],[179,3],[185,4],[190,5],[198,4],[203,7],[213,2],[216,3],[223,3],[229,3],[233,5],[239,3],[254,8],[264,3],[271,2],[274,7],[282,4],[288,2],[291,3],[298,3],[304,3],[308,5],[314,3],[321,3],[325,7],[340,6],[347,8]]},"1541":{"position":[[7,9],[21,4],[26,9],[37,4],[43,4],[48,1],[51,1],[53,6],[62,3],[66,4],[72,5],[81,6],[88,3],[92,4],[98,4],[105,10],[120,12],[134,3],[139,15],[156,2],[161,4],[166,6],[174,19],[195,2],[200,4],[205,6],[215,3],[226,3],[230,7],[238,3],[242,11],[269,1],[271,15],[291,6],[314,11],[326,12],[343,4],[348,14],[377,10],[388,13]]},"1543":{"position":[[0,2],[8,4],[13,6],[25,2],[31,2],[35,1],[38,3],[42,4],[47,4],[60,6],[70,2],[74,1],[77,3],[81,4],[86,4],[93,6],[106,2],[115,7],[123,7],[131,2],[134,3],[142,2],[155,6],[175,6],[184,4],[190,1],[194,4],[199,4],[204,4],[215,2],[230,2],[245,4],[270,2],[274,4],[279,6],[286,3],[297,2],[306,2],[309,2],[319,2],[322,2],[326,3],[335,2],[338,2]]},"1545":{"position":[[7,6],[14,10],[39,6],[47,6],[64,6],[73,6],[80,4],[86,8],[99,10],[99,5],[105,4],[110,4],[117,4],[123,3],[127,4],[132,4],[163,4],[168,3],[207,3]]},"1547":{"position":[[0,4],[5,6],[12,6],[44,3],[73,6],[141,4],[146,6],[162,4],[167,6],[174,4],[197,4],[202,6]]},"1550":{"position":[[0,3],[4,3],[8,8],[34,1],[36,1],[40,7],[58,3]]},"1552":{"position":[[0,3],[7,4],[12,8],[21,10],[43,7],[51,8],[62,6],[69,1],[72,5],[80,4],[94,3],[101,5]]},"1557":{"position":[[0,3],[4,7],[12,3]]},"1559":{"position":[[1,4]]},"1562":{"position":[[5,3],[18,3],[23,12],[23,4],[28,7],[47,3],[94,3],[99,3]]},"1564":{"position":[[4,1],[12,3],[17,3],[21,4],[26,4],[31,4],[40,1],[48,3],[53,3],[57,4],[62,4],[67,4],[72,4],[78,3],[83,3],[91,1],[99,3],[104,3],[108,4],[113,8],[113,3],[117,4],[122,8],[122,3],[126,4]]},"1566":{"position":[[7,1],[11,3],[17,3],[22,1],[24,3],[35,3],[41,6],[48,3],[54,3],[59,1],[62,3],[68,3]]},"1568":{"position":[[8,1],[10,5],[21,1],[23,3],[34,5],[41,4],[53,1],[55,8],[76,1],[78,4],[95,1],[97,4],[113,1],[115,5],[128,1],[130,4],[141,2],[144,9],[160,5],[166,8],[183,4],[188,6],[204,1],[206,4],[213,3]]},"1570":{"position":[[3,5],[32,3],[37,5],[43,9],[43,4],[48,4],[63,3],[68,5],[74,4],[79,1],[81,4],[97,3],[102,5],[108,4],[113,4],[118,2],[121,9],[139,3],[144,4],[149,11],[171,3],[176,6],[184,3]]},"1572":{"position":[[1,3],[6,5],[12,3],[24,3],[29,4],[34,6],[51,3],[56,4],[61,4],[76,3],[81,3],[85,3],[91,5],[106,3],[111,1],[113,3],[118,4],[133,2]]},"1574":{"position":[[1,3],[6,4],[11,9],[34,3],[39,5],[46,3],[62,3],[71,3],[76,1],[78,1],[81,3],[99,3],[104,3],[109,3],[115,4],[138,3],[143,4],[148,9],[158,5],[173,3],[178,4],[183,9],[193,6],[209,3],[214,4],[219,9],[229,6],[245,3],[250,1],[252,1],[255,2],[272,3],[277,1],[279,1],[282,2],[296,3],[301,5],[336,3],[345,2],[357,2],[367,2],[377,3],[384,2],[420,3],[424,2],[434,3],[438,3],[449,3],[456,2],[459,4],[471,2],[481,3],[486,1],[490,1],[492,3],[496,7],[504,7],[512,4],[519,1],[521,3],[529,3],[534,1],[536,1],[539,7],[548,6],[555,1],[558,1],[561,7],[570,6],[577,1],[580,1],[583,7],[592,5],[598,1],[601,1],[603,1],[605,3],[609,4],[618,1],[620,3],[624,1],[627,1],[629,1],[631,2],[635,1],[637,6],[645,5],[651,5],[657,1],[662,1],[664,6],[673,1],[675,1],[678,1],[682,2],[685,6],[692,1],[696,3],[701,1],[703,1],[705,10],[716,1],[718,2],[721,8],[731,4],[736,4],[741,1],[744,4],[749,1],[753,3],[758,1],[760,8],[769,7],[779,4],[784,1],[786,3],[791,6],[798,9],[808,5],[814,12],[814,9],[824,2],[827,7],[836,10],[847,1],[850,4],[858,2],[861,4],[866,1],[868,1],[870,1],[872,6],[880,5],[886,5],[892,1],[898,3],[903,1],[905,1],[908,1],[912,2],[916,3],[921,4],[926,6],[933,1],[937,2],[941,3],[946,3],[950,3],[954,1],[956,2],[960,3],[965,1],[967,1],[970,1],[974,2],[978,3],[983,1],[986,1],[989,1],[994,3],[1001,14],[1017,3],[1022,1],[1024,14],[1039,14],[1055,10],[1067,3],[1072,1],[1074,3],[1078,14],[1093,14],[1109,10],[1120,10],[1131,10],[1142,10],[1153,14],[1169,10],[1180,10],[1191,10],[1202,10],[1213,14],[1229,10],[1240,10],[1252,3],[1257,1],[1259,5],[1265,5],[1271,1],[1273,6],[1282,1],[1284,1],[1287,1],[1292,3],[1297,2],[1300,2],[1303,6],[1310,1],[1314,3]]},"1577":{"position":[[6,4],[11,8],[38,3],[43,4],[48,8],[63,8],[87,3],[92,8],[102,10],[102,7],[110,2],[117,6],[124,4],[129,4],[141,3],[158,3],[162,6],[169,4],[174,4],[179,6],[188,4],[204,3],[213,3],[218,3],[222,6],[229,4],[234,4],[239,5],[245,6],[254,3],[271,3],[275,6],[282,2],[285,4],[290,2],[294,3],[301,3],[314,3],[319,3],[323,6],[330,2],[333,4],[338,2],[341,3],[345,3],[396,3],[400,6],[407,4],[412,4],[417,5],[427,3],[440,5],[446,4],[454,4]]},"1579":{"position":[[6,4],[11,7],[37,3],[42,4],[47,7],[61,6],[81,3],[86,6],[93,9],[93,6],[100,2],[104,3],[109,5],[115,8],[124,6],[131,9],[131,6],[138,2]]},"1581":{"position":[[16,5],[24,3],[29,5],[35,10],[46,2],[49,8],[74,4],[81,3],[86,6],[93,10],[104,2],[107,8],[137,4],[142,3],[146,5],[154,3],[159,6],[166,10],[177,2],[180,8],[194,3],[199,1],[201,1],[203,3],[207,7],[215,7],[223,4],[228,1],[230,3],[236,4],[243,3],[248,1],[250,1],[253,7],[262,5],[268,1],[271,1],[273,1],[275,3],[279,7],[279,3],[283,3],[287,3],[291,1],[296,1],[298,3],[302,3],[308,1],[311,1],[314,1],[316,3],[321,1],[325,1],[328,1],[332,1],[335,1],[342,1],[344,3],[351,1],[354,1],[358,1],[360,6],[367,3],[372,1],[376,2],[380,3],[385,1],[387,1],[389,10],[400,1],[402,2],[405,8],[415,4],[420,4],[425,1],[428,4],[433,1],[437,3],[442,1],[444,8],[453,7],[463,3],[467,1],[469,3],[473,7],[481,8],[490,10],[502,3],[507,3],[511,9],[521,7],[529,5],[535,1],[537,2],[540,3],[544,3],[548,6],[548,3],[552,2],[555,10],[566,1],[569,7],[569,3],[573,3],[578,1],[580,3],[585,2],[588,4],[593,1],[595,1],[597,1],[599,3],[606,1],[610,3],[615,5],[621,1],[624,2],[627,8],[636,10],[647,1],[650,1],[653,2],[657,3],[662,5],[668,1],[670,7],[678,10],[689,1],[692,3],[697,1],[699,10],[711,8],[720,10],[731,1],[734,1],[737,2],[740,3],[744,5],[752,1],[754,3],[758,5],[766,1],[768,18],[787,2],[790,7],[790,3],[794,3],[799,1],[801,3],[806,2],[809,4],[814,1],[816,1],[818,1],[820,3],[825,1],[829,1],[832,1],[836,1],[839,1],[847,3],[852,1],[854,1],[857,1],[861,2],[865,3],[870,1],[872,3],[877,1],[881,4]]},"1583":{"position":[[45,3],[50,5],[56,5]]},"1585":{"position":[[6,6],[19,3],[36,3],[41,6],[49,11],[49,6],[56,4]]},"1587":{"position":[[2,3],[19,6],[26,6],[45,3],[50,6],[57,6],[65,8],[76,4]]},"1589":{"position":[[0,1],[6,3],[11,2],[15,1],[17,3],[22,3],[26,1],[29,4],[34,2],[38,2],[41,5],[47,1],[49,1],[52,1],[54,18],[73,2],[76,4],[82,4],[87,1],[90,4],[95,14],[111,2],[114,5],[120,1],[122,2],[126,3],[131,5],[137,1],[140,1],[142,18],[161,2],[164,4],[170,4],[175,1],[178,4],[183,14],[199,2],[202,5],[208,1],[210,2],[213,2],[216,6],[223,1],[228,3],[232,1],[234,2],[240,3],[245,1],[247,1],[250,1],[252,18],[271,2],[274,4],[280,4],[285,1],[288,4],[293,14],[309,2],[312,5],[318,1],[320,2],[323,2],[326,6],[333,1],[338,3],[342,1],[344,2],[350,3],[355,1],[357,6],[364,6],[375,9],[386,5],[393,1],[396,1]]},"1592":{"position":[[3,2],[19,3],[24,2],[28,1],[30,7],[38,1],[41,1],[43,7]]},"1594":{"position":[[4,3],[14,5],[22,7],[32,4],[37,4],[42,5],[48,7],[56,7],[64,5],[80,5],[88,5],[94,5],[100,7]]},"1596":{"position":[[7,3],[12,6],[19,4],[24,7],[32,5],[55,7],[65,3],[69,3],[73,9],[83,7],[91,5],[97,7],[107,7],[116,1],[119,1],[122,13],[122,3],[126,9],[136,7],[144,7],[153,4],[158,6],[165,5],[171,3],[175,2],[178,8],[187,2],[190,7],[199,13],[199,3],[203,9],[214,4],[219,8],[228,8],[237,8],[246,8],[255,7],[263,5],[272,4],[277,8]]},"1599":{"position":[[1,3],[6,3],[11,3],[16,2]]},"1601":{"position":[[3,8]]},"1606":{"position":[[0,3],[5,6],[23,4],[28,6],[35,4],[40,16],[42,6],[49,7],[57,7],[66,5],[66,3],[70,1],[72,3],[77,4],[83,4],[89,4],[95,4]]},"1608":{"position":[[9,3],[13,1],[24,7]]},"1610":{"position":[[0,3],[4,3],[13,3],[17,3],[21,2],[24,9],[34,4],[39,3],[44,3],[49,3],[53,7],[62,3],[66,5],[72,5]]},"1613":{"position":[[0,6],[7,3],[11,1],[13,3],[17,4],[24,2],[45,4],[50,5],[67,7]]},"1615":{"position":[[0,3],[7,2],[26,2],[29,3],[33,6],[40,3],[44,1],[46,3],[50,4]]},"1618":{"position":[[0,6],[7,3],[11,1],[13,3],[17,4],[24,2],[45,4],[50,5],[67,7]]},"1620":{"position":[[0,3],[7,2],[26,2],[29,3],[33,6],[40,3],[44,1],[46,3],[50,4]]},"1623":{"position":[[0,7],[8,4],[13,6],[23,3],[29,6],[36,3],[40,1],[42,3],[46,4],[54,4],[59,4],[68,3],[75,4],[80,6],[89,3],[93,7],[107,2],[113,3],[118,4],[126,4],[131,7],[141,3],[145,7],[158,2],[164,4]]},"1625":{"position":[[0,1],[2,1],[4,1],[9,4],[14,4],[25,7],[33,4],[38,6],[48,3],[54,6],[61,3],[65,1],[67,3],[71,4],[79,4],[84,4],[93,2],[97,3],[104,4],[109,4],[115,4],[120,3],[126,4],[131,8],[131,1],[133,6],[141,1],[144,2],[147,3],[154,3],[160,3],[164,7],[183,3],[188,6],[197,5],[203,4],[208,5],[214,2],[218,3],[222,3],[227,3],[231,4],[236,1],[239,3],[246,4],[251,4],[256,2],[260,3],[268,2],[271,3],[278,3],[284,3],[288,7],[307,3],[312,6],[321,3],[325,7],[342,6],[349,3],[354,1]]},"1627":{"position":[[0,1],[2,1],[4,1],[13,7],[21,4],[26,6],[36,3],[42,6],[49,3],[53,1],[55,3],[59,4],[67,4],[72,4],[81,6],[93,3],[97,2],[101,4],[111,6],[119,2],[126,1],[130,3],[137,4],[142,4],[147,6],[155,4],[161,3],[166,2],[169,3],[176,3],[182,3],[186,7],[203,3]]},"1629":{"position":[[0,1],[2,1],[4,1],[12,7],[20,4],[25,6],[35,3],[41,6],[48,3],[52,1],[54,3],[58,4],[65,4],[73,4],[78,4],[87,3],[94,4],[99,6],[108,3],[112,7],[126,2],[132,3],[137,2],[140,4],[149,4],[154,5],[160,1],[164,4],[169,6],[177,4],[182,4],[187,3],[192,4],[197,7]]},"1631":{"position":[[0,1],[2,1],[4,1],[6,4],[17,7],[25,4],[30,6],[40,3],[46,2],[51,6],[58,3],[62,1],[64,3],[68,4],[75,6],[85,4],[90,4],[99,4],[105,3],[112,2],[115,8],[125,4],[130,3],[136,2],[139,6],[139,1],[141,4],[147,4],[153,2],[156,3],[163,3],[169,3],[173,7],[192,3],[197,6],[206,5],[212,4],[217,5],[225,2],[229,1],[234,4],[239,4],[246,4],[254,2],[257,4],[264,4],[270,3],[277,4],[282,4],[287,3],[291,4],[296,2],[303,1],[306,3],[310,4],[317,4],[322,9],[322,4],[327,4],[333,4],[338,10],[338,3],[342,6],[350,2],[353,3],[360,3],[366,3],[370,7],[379,4],[390,3],[395,6],[404,3],[408,7],[428,6],[436,6],[443,7],[452,4]]},"1633":{"position":[[3,7],[17,1],[19,3],[23,4],[69,5],[75,5],[81,7],[119,1],[121,3],[125,4],[133,7],[143,6],[151,6],[158,3],[162,1],[164,3],[168,4],[174,4],[179,4],[188,4],[193,6],[208,7],[216,6]]},"1635":{"position":[[0,7],[30,6],[37,3],[41,1],[43,3],[47,4],[55,7],[85,4],[90,4],[95,4],[100,6],[120,2],[130,2],[133,2],[136,3]]},"1637":{"position":[[5,6]]},"1640":{"position":[[0,7],[8,4],[13,6],[23,3],[29,6],[36,3],[40,1],[42,3],[46,4],[54,4],[59,4],[68,3],[75,4],[80,6],[89,3],[93,7],[107,2],[113,3],[118,4],[126,4],[131,7],[141,3],[145,7],[158,2],[164,4]]},"1642":{"position":[[0,1],[2,1],[4,1],[9,4],[14,4],[25,7],[33,4],[38,6],[48,3],[54,6],[61,3],[65,1],[67,3],[71,4],[79,4],[84,4],[93,2],[97,3],[104,4],[109,4],[115,4],[120,3],[126,4],[131,8],[131,1],[133,6],[141,1],[144,2],[147,3],[154,3],[160,3],[164,7],[183,3],[188,6],[197,5],[203,4],[208,5],[214,2],[218,3],[222,3],[227,3],[231,4],[236,1],[239,3],[246,4],[251,4],[256,2],[260,3],[268,2],[271,3],[278,3],[284,3],[288,7],[307,3],[312,6],[321,3],[325,7],[342,6],[349,3],[354,1]]},"1644":{"position":[[0,1],[2,1],[4,1],[13,7],[21,4],[26,6],[36,3],[42,6],[49,3],[53,1],[55,3],[59,4],[67,4],[72,4],[81,6],[93,3],[97,2],[101,4],[111,6],[119,2],[126,1],[130,3],[137,4],[142,4],[147,6],[155,4],[161,3],[166,2],[169,3],[176,3],[182,3],[186,7],[203,3]]},"1646":{"position":[[0,1],[2,1],[4,1],[12,7],[20,4],[25,6],[35,3],[41,6],[48,3],[52,1],[54,3],[58,4],[65,4],[73,4],[78,4],[87,3],[94,4],[99,6],[108,3],[112,7],[126,2],[132,3],[137,2],[140,4],[149,4],[154,5],[160,1],[164,4],[169,6],[177,4],[182,4],[187,3],[192,4],[197,7]]},"1648":{"position":[[0,1],[2,1],[4,1],[6,4],[17,7],[25,4],[30,6],[40,3],[46,2],[51,6],[58,3],[62,1],[64,3],[68,4],[75,6],[85,4],[90,4],[99,4],[105,3],[112,2],[115,8],[125,4],[130,3],[136,2],[139,6],[139,1],[141,4],[147,4],[153,2],[156,3],[163,3],[169,3],[173,7],[192,3],[197,6],[206,5],[212,4],[217,5],[225,2],[229,1],[234,4],[239,4],[246,4],[254,2],[257,4],[264,4],[270,3],[277,4],[282,4],[287,3],[291,4],[296,2],[303,1],[306,3],[310,4],[317,4],[322,9],[322,4],[327,4],[333,4],[338,10],[338,3],[342,6],[350,2],[353,3],[360,3],[366,3],[370,7],[379,4],[390,3],[395,6],[404,3],[408,7],[428,6],[436,6],[443,7],[452,4]]},"1650":{"position":[[3,7],[17,1],[19,3],[23,4],[69,5],[75,5],[81,7],[119,1],[121,3],[125,4],[133,7],[143,6],[151,6],[158,3],[162,1],[164,3],[168,4],[174,4],[179,4],[188,4],[193,6],[208,7],[216,6]]},"1652":{"position":[[0,7],[30,6],[37,3],[41,1],[43,3],[47,4],[55,7],[85,4],[90,4],[95,4],[100,6],[120,2],[130,2],[133,2],[136,3]]},"1654":{"position":[[5,6]]},"1656":{"position":[[14,1]]},"1658":{"position":[[0,3],[26,2],[30,1],[33,5],[39,4],[44,3],[48,3],[54,4],[60,1],[65,2],[81,1],[95,1],[115,4],[125,4],[133,2],[138,3],[144,2],[148,3],[169,1],[172,1],[188,4],[194,4],[201,2]]},"1661":{"position":[[2,5],[22,1],[35,2],[40,1],[42,3],[53,1],[56,7],[65,5],[71,1],[75,7],[84,6],[91,1],[95,7],[104,6],[111,1],[115,7],[124,3],[128,4],[133,1],[136,3],[140,4],[149,5],[149,3],[153,1],[155,3],[161,4],[178,2],[182,3],[188,1],[196,4],[203,6],[211,4],[216,6],[226,4],[231,12],[231,4],[236,7],[248,4],[253,2],[257,3],[264,1],[276,6],[284,1],[286,2],[289,3],[293,5],[299,7],[307,4],[312,3],[317,1],[319,1],[323,6],[334,5],[340,4],[370,6],[378,5],[384,7],[392,7],[403,1],[408,4],[413,12],[413,4],[418,7],[439,4],[457,6],[465,1],[467,2],[470,3],[474,6],[481,7],[489,4],[494,3],[499,1],[501,3],[505,2],[508,5],[514,3],[518,3],[523,1],[525,1],[529,6],[539,3],[547,6],[554,1]]},"1662":{"position":[[2,5],[33,7],[42,5],[48,1],[52,7],[61,6],[68,1],[72,7],[81,6],[88,1],[92,7],[101,3],[105,4],[110,1],[113,3],[117,4],[126,5],[126,3],[130,1],[132,3],[138,4],[155,2],[159,3],[165,1],[173,4],[180,6],[188,4],[193,6],[203,4],[208,12],[208,4],[213,7],[225,4],[230,2],[234,3],[241,1],[253,6],[261,1],[263,2],[266,3],[270,5],[276,7],[284,4],[289,3],[294,1],[296,1],[300,6],[311,5],[317,1],[335,6],[343,5],[349,7],[357,7],[368,1],[373,4],[378,12],[378,4],[383,7],[404,4],[418,6],[426,1],[428,2],[431,3],[435,6],[442,7],[450,4],[455,3],[460,1],[462,3],[466,2],[469,5],[475,3],[479,3],[484,1],[486,1],[490,6],[500,3],[521,4],[528,7],[551,5],[557,5],[567,6],[574,1],[588,2],[592,1],[595,5],[601,4],[606,3],[610,3],[616,4],[622,1],[627,2],[632,1],[635,6],[642,6],[650,1],[652,3],[658,7],[669,2],[673,2],[678,4],[683,1],[685,3],[689,4],[694,6],[701,6],[708,1],[710,2],[713,2],[716,3],[720,1],[722,2],[725,2],[728,2],[733,1],[735,3],[739,4],[744,6],[751,6],[758,1],[760,2],[763,2],[766,3],[770,1],[772,2],[775,2],[778,2],[782,1],[784,3],[790,7],[799,4],[804,6],[811,6],[818,1],[820,2],[823,2],[826,3],[830,1],[832,2],[835,2],[838,2],[841,4],[848,5],[854,4],[859,1],[861,3]]},"1664":{"position":[[1,7],[10,5],[16,1],[20,7],[29,6],[36,1],[40,7],[49,6],[56,1],[60,7],[69,6],[76,1],[80,7],[89,3],[93,4],[98,1],[104,7],[119,4],[124,15],[124,7],[132,7],[140,3],[144,6],[160,7],[183,5],[190,7],[199,1],[202,4],[208,7],[219,1],[225,3],[229,4],[244,7],[259,6],[266,9],[276,2],[280,2],[283,10],[283,2],[286,7],[296,15],[296,7],[304,7],[313,11],[326,2],[329,7],[329,2],[332,4],[339,2],[342,8],[342,2],[345,5],[353,10],[353,2],[356,7],[381,2],[385,9],[395,7],[405,2],[409,4],[419,1],[424,6],[432,9],[445,4],[450,12],[450,4],[455,7],[476,5],[476,3],[480,1],[482,3],[488,4],[496,2],[500,3],[506,1],[511,6],[519,4],[527,4],[532,12],[532,4],[537,7],[549,2],[553,3],[560,1],[572,6],[585,3],[592,1],[594,1],[598,6],[609,5],[615,2],[635,6],[650,3],[657,1],[659,1],[663,6],[674,4],[679,12],[679,4],[684,7],[696,4],[710,6],[723,3],[730,1],[737,3],[744,1],[746,1],[750,6],[760,3],[781,3],[786,3],[790,1],[794,1],[797,1],[801,1],[806,1],[811,6],[830,1],[835,5],[841,5],[865,6],[880,3],[887,1],[889,1],[893,6],[906,6],[913,1]]}}}],["一个",{"_index":35,"t":{"847":{"position":[[44,2]]},"921":{"position":[[100,2]]},"945":{"position":[[81,2]]},"981":{"position":[[16,2],[69,2]]},"1031":{"position":[[24,2]]},"1113":{"position":[[17,2]]},"1142":{"position":[[153,2],[305,2],[337,2]]},"1200":{"position":[[1203,2]]},"1209":{"position":[[185,2],[451,2]]},"1214":{"position":[[16,2],[69,2]]},"1225":{"position":[[81,2]]},"1294":{"position":[[24,2]]},"1365":{"position":[[7,2]]},"1367":{"position":[[17,2],[41,2]]},"1371":{"position":[[386,2]]},"1373":{"position":[[4,2]]},"1389":{"position":[[11,2]]},"1395":{"position":[[160,2],[237,2]]},"1409":{"position":[[9,2]]},"1418":{"position":[[108,2]]},"1431":{"position":[[77,2]]},"1434":{"position":[[1203,2]]},"1443":{"position":[[185,2],[451,2]]},"1446":{"position":[[18,2]]},"1452":{"position":[[537,2]]},"1496":{"position":[[1742,2],[1880,2]]},"1499":{"position":[[8,2]]},"1501":{"position":[[172,2]]},"1504":{"position":[[62,2]]},"1506":{"position":[[79,2]]},"1508":{"position":[[415,2],[550,2],[1433,2]]},"1513":{"position":[[13,2]]},"1515":{"position":[[19,2]]},"1517":{"position":[[6,2]]},"1521":{"position":[[8,2],[63,2]]},"1550":{"position":[[18,2]]},"1568":{"position":[[71,2]]},"1574":{"position":[[391,2]]},"1613":{"position":[[32,2]]},"1618":{"position":[[32,2]]}}}],["一些",{"_index":1127,"t":{"1371":{"position":[[462,2]]},"1508":{"position":[[1142,2]]},"1664":{"position":[[630,2]]}}}],["一再",{"_index":395,"t":{"921":{"position":[[62,2]]}}}],["一定",{"_index":283,"t":{"851":{"position":[[605,2]]},"1389":{"position":[[86,2]]}}}],["一旦",{"_index":1421,"t":{"1583":{"position":[[176,2]]}}}],["一条",{"_index":1400,"t":{"1574":{"position":[[313,2]]}}}],["一样",{"_index":116,"t":{"849":{"position":[[63,2]]},"1367":{"position":[[10,2]]},"1562":{"position":[[64,2]]}}}],["一次",{"_index":485,"t":{"931":{"position":[[209,2]]},"1148":{"position":[[475,2]]},"1154":{"position":[[34,2],[389,2]]},"1164":{"position":[[100,2]]},"1168":{"position":[[25,2]]}}}],["一段",{"_index":210,"t":{"851":{"position":[[291,2]]}}}],["一段时间",{"_index":1452,"t":{"1661":{"position":[[356,4]]},"1662":{"position":[[330,4]]}}}],["一生",{"_index":296,"t":{"853":{"position":[[30,2]]}}}],["一种",{"_index":199,"t":{"851":{"position":[[245,2]]},"1093":{"position":[[8,2]]},"1148":{"position":[[44,2]]},"1209":{"position":[[40,2]]},"1367":{"position":[[0,2],[28,2]]},"1429":{"position":[[11,2]]},"1443":{"position":[[40,2]]},"1519":{"position":[[59,2]]},"1524":{"position":[[26,2]]}}}],["一系列",{"_index":1121,"t":{"1371":{"position":[[196,3]]},"1389":{"position":[[52,3]]}}}],["一般",{"_index":989,"t":{"1168":{"position":[[69,2]]},"1170":{"position":[[193,2]]},"1635":{"position":[[113,2]]},"1652":{"position":[[113,2]]}}}],["一行",{"_index":1415,"t":{"1583":{"position":[[74,2]]}}}],["一部分",{"_index":1431,"t":{"1615":{"position":[[14,3]]},"1620":{"position":[[14,3]]}}}],["一面",{"_index":379,"t":{"921":{"position":[[5,2]]}}}],["上次",{"_index":1000,"t":{"1168":{"position":[[384,2]]}}}],["下载",{"_index":826,"t":{"1068":{"position":[[406,2],[484,2],[496,2]]}}}],["下降",{"_index":1024,"t":{"1181":{"position":[[118,2]]}}}],["下面",{"_index":977,"t":{"1166":{"position":[[50,2]]}}}],["不仅",{"_index":267,"t":{"851":{"position":[[535,2]]}}}],["不会",{"_index":486,"t":{"934":{"position":[[129,2]]},"936":{"position":[[257,2]]},"945":{"position":[[90,2]]},"1203":{"position":[[66,2]]},"1225":{"position":[[90,2]]},"1437":{"position":[[66,2]]}}}],["不免",{"_index":302,"t":{"853":{"position":[[53,2]]}}}],["不再",{"_index":642,"t":{"993":{"position":[[1201,2]]},"1246":{"position":[[1201,2]]},"1635":{"position":[[63,2]]},"1652":{"position":[[63,2]]}}}],["不到",{"_index":1152,"t":{"1386":{"position":[[7,2]]}}}],["不同",{"_index":414,"t":{"921":{"position":[[129,2]]},"1181":{"position":[[17,2],[26,2]]},"1200":{"position":[[1300,2],[1319,2]]},"1209":{"position":[[422,2]]},"1434":{"position":[[1300,2],[1319,2]]},"1443":{"position":[[422,2]]},"1577":{"position":[[77,2]]}}}],["不如",{"_index":1108,"t":{"1352":{"position":[[39,2]]}}}],["不宜",{"_index":1137,"t":{"1373":{"position":[[79,2]]}}}],["不断",{"_index":203,"t":{"851":{"position":[[257,2]]}}}],["不是",{"_index":756,"t":{"1019":{"position":[[13,2]]},"1140":{"position":[[21,2]]},"1282":{"position":[[13,2]]},"1369":{"position":[[27,2]]},"1521":{"position":[[61,2]]},"1541":{"position":[[289,2]]},"1615":{"position":[[4,2]]},"1620":{"position":[[4,2]]}}}],["不管不顾",{"_index":1444,"t":{"1656":{"position":[[32,4]]}}}],["不能",{"_index":1106,"t":{"1348":{"position":[[12,2]]},"1356":{"position":[[21,2]]},"1358":{"position":[[85,2]]},"1452":{"position":[[560,2],[589,2]]},"1519":{"position":[[70,2],[229,2]]}}}],["不足",{"_index":16,"t":{"845":{"position":[[30,2]]},"1343":{"position":[[486,2]]}}}],["不过",{"_index":316,"t":{"853":{"position":[[112,2]]}}}],["不适",{"_index":1437,"t":{"1635":{"position":[[109,2]]},"1652":{"position":[[109,2]]}}}],["专业",{"_index":14,"t":{"845":{"position":[[24,2]]}}}],["专属",{"_index":608,"t":{"981":{"position":[[18,2]]},"1214":{"position":[[18,2]]}}}],["专门",{"_index":1074,"t":{"1209":{"position":[[95,2]]},"1443":{"position":[[95,2]]},"1613":{"position":[[38,2]]},"1618":{"position":[[38,2]]}}}],["业务",{"_index":674,"t":{"1001":{"position":[[69,2],[590,2],[1112,2],[1387,2]]},"1264":{"position":[[69,2],[590,2],[1112,2],[1387,2]]},"1463":{"position":[[116,2]]}}}],["丢弃",{"_index":1288,"t":{"1508":{"position":[[820,2]]}}}],["两个",{"_index":1173,"t":{"1391":{"position":[[16,2]]}}}],["两次",{"_index":471,"t":{"929":{"position":[[108,2]]},"934":{"position":[[125,2]]}}}],["两百年",{"_index":192,"t":{"851":{"position":[[224,3]]}}}],["两种",{"_index":1118,"t":{"1363":{"position":[[14,2]]}}}],["两者",{"_index":243,"t":{"851":{"position":[[442,2]]}}}],["两者之间",{"_index":67,"t":{"847":{"position":[[144,4],[213,4]]}}}],["严格",{"_index":1348,"t":{"1543":{"position":[[236,2]]}}}],["严重",{"_index":175,"t":{"851":{"position":[[171,2]]}}}],["个人",{"_index":41,"t":{"847":{"position":[[65,2]]},"851":{"position":[[571,2]]}}}],["个体",{"_index":398,"t":{"921":{"position":[[69,2],[245,2]]}}}],["中",{"_index":88,"t":{"847":{"position":[[206,1]]},"849":{"position":[[38,1]]},"851":{"position":[[316,1]]},"864":{"position":[[10,1]]},"894":{"position":[[4,1]]},"901":{"position":[[4,1]]},"915":{"position":[[5,1]]},"921":{"position":[[48,1],[262,1]]},"924":{"position":[[11,1]]},"960":{"position":[[69,1]]},"997":{"position":[[8,1]]},"1009":{"position":[[55,1]]},"1011":{"position":[[51,1]]},"1013":{"position":[[44,1]]},"1019":{"position":[[80,1]]},"1061":{"position":[[893,1]]},"1072":{"position":[[45,1]]},"1086":{"position":[[74,1]]},"1134":{"position":[[197,1]]},"1136":{"position":[[9,1]]},"1154":{"position":[[30,1]]},"1158":{"position":[[347,1]]},"1166":{"position":[[22,1]]},"1181":{"position":[[93,1],[147,1]]},"1240":{"position":[[69,1]]},"1260":{"position":[[8,1]]},"1272":{"position":[[55,1]]},"1274":{"position":[[51,1]]},"1276":{"position":[[44,1]]},"1282":{"position":[[80,1]]},"1298":{"position":[[45,1]]},"1312":{"position":[[74,1]]},"1336":{"position":[[893,1]]},"1363":{"position":[[5,1]]},"1367":{"position":[[38,1],[56,1]]},"1369":{"position":[[5,1]]},"1371":{"position":[[18,1]]},"1377":{"position":[[5,1]]},"1389":{"position":[[9,1]]},"1391":{"position":[[11,1]]},"1446":{"position":[[17,1]]},"1452":{"position":[[533,1],[571,1]]},"1456":{"position":[[239,1]]},"1460":{"position":[[30,1]]},"1463":{"position":[[9,1],[120,1]]},"1470":{"position":[[92,1]]},"1494":{"position":[[91,1]]},"1496":{"position":[[1040,1],[1067,1],[1922,1]]},"1501":{"position":[[149,1]]},"1506":{"position":[[62,1]]},"1508":{"position":[[80,1],[389,1],[461,1],[522,1],[608,1],[1082,1],[1120,1]]},"1515":{"position":[[31,1]]},"1519":{"position":[[246,1]]},"1521":{"position":[[30,1]]},"1529":{"position":[[17,1]]},"1534":{"position":[[8,1]]},"1541":{"position":[[261,1]]},"1545":{"position":[[26,1]]},"1550":{"position":[[84,1]]},"1577":{"position":[[29,1]]},"1579":{"position":[[28,1]]},"1583":{"position":[[28,1],[71,1],[143,1]]},"1594":{"position":[[7,1]]}}}],["中常",{"_index":1145,"t":{"1381":{"position":[[10,2]]}}}],["中断",{"_index":1454,"t":{"1664":{"position":[[373,2]]}}}],["中间",{"_index":1251,"t":{"1496":{"position":[[1744,2]]}}}],["中间件",{"_index":707,"t":{"1003":{"position":[[50,3]]},"1266":{"position":[[50,3]]},"1532":{"position":[[543,3]]},"1534":{"position":[[169,3]]}}}],["丰富",{"_index":1203,"t":{"1431":{"position":[[32,2]]},"1460":{"position":[[13,2]]},"1613":{"position":[[85,2]]},"1618":{"position":[[85,2]]}}}],["串行化",{"_index":743,"t":{"1015":{"position":[[1927,3]]},"1278":{"position":[[1927,3]]}}}],["为了",{"_index":71,"t":{"847":{"position":[[155,2]]},"1508":{"position":[[314,2]]}}}],["为啥",{"_index":1062,"t":{"1207":{"position":[[3,2]]},"1441":{"position":[[3,2]]}}}],["主",{"_index":694,"t":{"1001":{"position":[[951,1],[1629,1]]},"1177":{"position":[[228,1]]},"1264":{"position":[[951,1],[1629,1]]}}}],["主动",{"_index":1067,"t":{"1207":{"position":[[115,2]]},"1441":{"position":[[115,2]]}}}],["主机",{"_index":1321,"t":{"1524":{"position":[[49,2]]},"1545":{"position":[[151,2]]}}}],["主线",{"_index":920,"t":{"1142":{"position":[[380,2]]},"1148":{"position":[[528,2]]},"1162":{"position":[[380,2],[399,2]]},"1205":{"position":[[416,2],[510,2]]},"1439":{"position":[[416,2],[510,2]]}}}],["主要",{"_index":906,"t":{"1136":{"position":[[29,2]]},"1138":{"position":[[37,2]]},"1164":{"position":[[146,2]]},"1166":{"position":[[59,2]]},"1391":{"position":[[13,2]]}}}],["举例",{"_index":1052,"t":{"1203":{"position":[[233,2]]},"1437":{"position":[[233,2]]}}}],["之一",{"_index":254,"t":{"851":{"position":[[484,2]]},"1369":{"position":[[22,2]]}}}],["之上",{"_index":190,"t":{"851":{"position":[[219,2]]}}}],["之前",{"_index":369,"t":{"894":{"position":[[18,2]]},"1009":{"position":[[47,2]]},"1100":{"position":[[190,2]]},"1272":{"position":[[47,2]]}}}],["之后",{"_index":1384,"t":{"1562":{"position":[[84,2]]},"1577":{"position":[[192,2]]}}}],["之间",{"_index":905,"t":{"1136":{"position":[[24,2]]},"1138":{"position":[[32,2]]},"1164":{"position":[[160,2]]}}}],["书",{"_index":378,"t":{"921":{"position":[[2,1]]}}}],["事",{"_index":1128,"t":{"1371":{"position":[[464,1]]}}}],["事件",{"_index":568,"t":{"950":{"position":[[297,2],[336,2],[1190,2],[1273,2]]},"952":{"position":[[755,2]]},"954":{"position":[[344,2]]},"958":{"position":[[76,2]]},"967":{"position":[[137,2],[179,2],[266,2]]},"971":{"position":[[50,2]]},"983":{"position":[[0,2],[50,2]]},"985":{"position":[[150,2]]},"993":{"position":[[1218,2],[1237,2]]},"1025":{"position":[[95,2],[205,2],[569,2],[586,2],[605,2]]},"1027":{"position":[[188,2]]},"1152":{"position":[[39,2],[439,2]]},"1164":{"position":[[82,2]]},"1188":{"position":[[137,2],[179,2],[266,2]]},"1192":{"position":[[50,2]]},"1216":{"position":[[0,2],[50,2]]},"1218":{"position":[[150,2]]},"1230":{"position":[[297,2],[336,2],[1190,2],[1273,2]]},"1232":{"position":[[755,2]]},"1234":{"position":[[344,2]]},"1238":{"position":[[76,2]]},"1246":{"position":[[1218,2],[1237,2]]},"1288":{"position":[[95,2],[205,2],[569,2],[586,2],[605,2]]},"1290":{"position":[[188,2]]},"1583":{"position":[[16,2],[30,2],[146,2]]}}}],["事务管理",{"_index":1078,"t":{"1209":{"position":[[155,4],[305,4]]},"1443":{"position":[[155,4],[305,4]]}}}],["二者",{"_index":966,"t":{"1164":{"position":[[237,2]]}}}],["二进制",{"_index":1241,"t":{"1484":{"position":[[54,3]]},"1517":{"position":[[37,3]]},"1594":{"position":[[74,3]]}}}],["互不",{"_index":587,"t":{"960":{"position":[[71,2]]},"1240":{"position":[[71,2]]}}}],["交互",{"_index":527,"t":{"942":{"position":[[70,2]]},"1001":{"position":[[13,2],[198,2]]},"1007":{"position":[[5,2]]},"1111":{"position":[[39,2]]},"1136":{"position":[[27,2]]},"1209":{"position":[[409,2]]},"1222":{"position":[[70,2]]},"1264":{"position":[[13,2],[198,2]]},"1270":{"position":[[5,2]]},"1443":{"position":[[409,2]]},"1508":{"position":[[404,2],[657,2],[750,2],[880,2]]}}}],["交互式",{"_index":1265,"t":{"1501":{"position":[[174,3]]},"1504":{"position":[[64,3]]},"1508":{"position":[[967,3],[1063,3]]}}}],["产物",{"_index":107,"t":{"849":{"position":[[29,2]]}}}],["产生",{"_index":198,"t":{"851":{"position":[[242,2],[332,2]]}}}],["享有",{"_index":81,"t":{"847":{"position":[[182,2]]}}}],["亮点",{"_index":1056,"t":{"1205":{"position":[[4,2]]},"1439":{"position":[[4,2]]}}}],["人人",{"_index":79,"t":{"847":{"position":[[179,2]]}}}],["人们",{"_index":186,"t":{"851":{"position":[[207,2],[565,2]]}}}],["人性",{"_index":180,"t":{"851":{"position":[[186,2]]}}}],["人生",{"_index":310,"t":{"853":{"position":[[92,2]]}}}],["人类",{"_index":5,"t":{"845":{"position":[[1,2],[39,2]]},"849":{"position":[[34,2],[58,2],[90,2]]},"851":{"position":[[92,2]]},"921":{"position":[[207,2]]}}}],["仅",{"_index":356,"t":{"882":{"position":[[6,1]]},"931":{"position":[[204,1]]},"1134":{"position":[[87,1]]},"1181":{"position":[[74,1]]},"1452":{"position":[[158,1],[173,1],[446,1],[470,1]]}}}],["仅限",{"_index":1320,"t":{"1524":{"position":[[45,2]]},"1545":{"position":[[180,2]]},"1633":{"position":[[66,2]]},"1650":{"position":[[66,2]]}}}],["仅限于",{"_index":428,"t":{"921":{"position":[[186,3]]}}}],["介绍",{"_index":978,"t":{"1166":{"position":[[56,2]]},"1463":{"position":[[160,2]]}}}],["仍然",{"_index":1053,"t":{"1203":{"position":[[632,2]]},"1437":{"position":[[632,2]]}}}],["从而",{"_index":60,"t":{"847":{"position":[[117,2]]},"859":{"position":[[23,2]]},"1209":{"position":[[65,2]]},"1443":{"position":[[65,2]]}}}],["他人",{"_index":417,"t":{"921":{"position":[[141,2]]}}}],["他们",{"_index":135,"t":{"851":{"position":[[21,2]]},"921":{"position":[[96,2],[108,2],[125,2],[135,2]]}}}],["付出",{"_index":442,"t":{"921":{"position":[[257,2]]}}}],["代价",{"_index":551,"t":{"945":{"position":[[132,2]]},"1225":{"position":[[132,2]]}}}],["代替",{"_index":560,"t":{"950":{"position":[[89,2]]},"1025":{"position":[[452,2]]},"1037":{"position":[[70,2]]},"1156":{"position":[[34,2]]},"1230":{"position":[[89,2]]},"1254":{"position":[[70,2]]},"1288":{"position":[[452,2]]}}}],["代理",{"_index":809,"t":{"1068":{"position":[[91,2],[458,2],[466,2],[480,2]]},"1375":{"position":[[215,2]]},"1545":{"position":[[58,2]]}}}],["代码",{"_index":594,"t":{"960":{"position":[[134,2]]},"973":{"position":[[180,2]]},"975":{"position":[[76,2]]},"987":{"position":[[299,2]]},"995":{"position":[[486,2]]},"997":{"position":[[44,2]]},"999":{"position":[[19,2]]},"1001":{"position":[[1776,2]]},"1003":{"position":[[14,2]]},"1009":{"position":[[53,2]]},"1019":{"position":[[45,2]]},"1031":{"position":[[496,2]]},"1041":{"position":[[595,2]]},"1053":{"position":[[1001,2]]},"1065":{"position":[[1411,2]]},"1090":{"position":[[997,2]]},"1134":{"position":[[195,2]]},"1140":{"position":[[53,2]]},"1144":{"position":[[562,2]]},"1194":{"position":[[180,2]]},"1196":{"position":[[76,2]]},"1220":{"position":[[299,2]]},"1240":{"position":[[134,2]]},"1248":{"position":[[486,2]]},"1258":{"position":[[595,2]]},"1260":{"position":[[44,2]]},"1262":{"position":[[19,2]]},"1264":{"position":[[1776,2]]},"1266":{"position":[[14,2]]},"1272":{"position":[[53,2]]},"1282":{"position":[[45,2]]},"1294":{"position":[[496,2]]},"1316":{"position":[[997,2]]},"1328":{"position":[[1001,2]]},"1340":{"position":[[1411,2]]},"1348":{"position":[[45,2]]},"1356":{"position":[[47,2]]},"1358":{"position":[[190,2]]},"1404":{"position":[[0,2]]},"1547":{"position":[[189,2]]},"1570":{"position":[[25,2]]},"1592":{"position":[[16,2]]},"1637":{"position":[[12,2]]},"1654":{"position":[[12,2]]}}}],["代码生成",{"_index":1240,"t":{"1484":{"position":[[37,4]]}}}],["代表",{"_index":888,"t":{"1113":{"position":[[19,2]]},"1395":{"position":[[178,2],[255,2]]}}}],["令人",{"_index":303,"t":{"853":{"position":[[55,2]]}}}],["以上",{"_index":1187,"t":{"1404":{"position":[[32,2]]}}}],["以下",{"_index":665,"t":{"999":{"position":[[0,2]]},"1136":{"position":[[33,2]]},"1262":{"position":[[0,2]]},"1369":{"position":[[40,2]]}}}],["以及",{"_index":1275,"t":{"1508":{"position":[[437,2]]}}}],["价值",{"_index":174,"t":{"851":{"position":[[168,2]]}}}],["价值观",{"_index":66,"t":{"847":{"position":[[139,3]]}}}],["价格",{"_index":170,"t":{"851":{"position":[[161,2]]}}}],["任何",{"_index":1221,"t":{"1452":{"position":[[573,2]]}}}],["任务",{"_index":902,"t":{"1134":{"position":[[213,2]]},"1142":{"position":[[102,2],[212,2]]},"1146":{"position":[[0,2],[29,2],[44,2]]},"1148":{"position":[[409,2],[429,2]]},"1160":{"position":[[47,2]]},"1162":{"position":[[136,2]]},"1164":{"position":[[141,2]]},"1371":{"position":[[12,2],[36,2]]},"1664":{"position":[[632,2],[778,2]]}}}],["任意",{"_index":1142,"t":{"1377":{"position":[[25,2]]}}}],["仿佛",{"_index":223,"t":{"851":{"position":[[335,2]]}}}],["优先",{"_index":968,"t":{"1164":{"position":[[309,2]]}}}],["优势",{"_index":1110,"t":{"1358":{"position":[[7,2]]},"1524":{"position":[[100,2]]}}}],["优化",{"_index":624,"t":{"990":{"position":[[14,2]]},"1015":{"position":[[2036,2],[7613,2]]},"1082":{"position":[[151,2]]},"1164":{"position":[[367,2]]},"1243":{"position":[[14,2]]},"1278":{"position":[[2036,2],[7613,2]]},"1308":{"position":[[151,2]]},"1541":{"position":[[220,2]]},"1554":{"position":[[14,2]]},"1592":{"position":[[7,2]]}}}],["优点",{"_index":673,"t":{"1001":{"position":[[65,2]]},"1264":{"position":[[65,2]]},"1343":{"position":[[420,2]]},"1348":{"position":[[0,2]]},"1352":{"position":[[0,2]]},"1356":{"position":[[0,2]]}}}],["优缺点",{"_index":1097,"t":{"1343":{"position":[[414,3]]}}}],["优越",{"_index":127,"t":{"849":{"position":[[115,2]]}}}],["优雅",{"_index":752,"t":{"1015":{"position":[[2021,2]]},"1205":{"position":[[1116,2]]},"1207":{"position":[[1458,2]]},"1209":{"position":[[2428,2]]},"1278":{"position":[[2021,2]]},"1439":{"position":[[1116,2]]},"1441":{"position":[[1458,2]]},"1443":{"position":[[2428,2]]},"1527":{"position":[[826,2]]},"1532":{"position":[[1004,2]]}}}],["会",{"_index":84,"t":{"847":{"position":[[194,1]]},"851":{"position":[[58,1],[256,1],[298,1]]},"853":{"position":[[136,1]]},"926":{"position":[[36,1],[79,1]]},"934":{"position":[[146,1]]},"936":{"position":[[177,1]]},"940":{"position":[[29,1],[63,1]]},"1098":{"position":[[503,1]]},"1144":{"position":[[604,1]]},"1162":{"position":[[437,1]]},"1168":{"position":[[56,1],[171,1]]},"1203":{"position":[[31,1]]},"1207":{"position":[[1894,1]]},"1437":{"position":[[31,1]]},"1441":{"position":[[1894,1]]},"1501":{"position":[[169,1]]},"1508":{"position":[[374,1]]},"1519":{"position":[[202,1]]},"1562":{"position":[[56,1],[77,1]]},"1574":{"position":[[395,1]]},"1577":{"position":[[352,1],[375,1]]},"1662":{"position":[[543,1]]}}}],["伟大",{"_index":401,"t":{"921":{"position":[[77,2],[154,2],[182,2],[232,2],[238,2]]}}}],["传",{"_index":1385,"t":{"1564":{"position":[[8,1]]}}}],["传播",{"_index":120,"t":{"849":{"position":[[73,2]]}}}],["传统",{"_index":549,"t":{"945":{"position":[[118,2]]},"1225":{"position":[[118,2]]}}}],["传输",{"_index":1225,"t":{"1463":{"position":[[60,2]]},"1545":{"position":[[171,2]]}}}],["传递",{"_index":898,"t":{"1134":{"position":[[139,2]]},"1164":{"position":[[21,2]]},"1371":{"position":[[187,2],[384,2]]},"1373":{"position":[[2,2]]},"1381":{"position":[[16,2]]},"1395":{"position":[[133,2]]},"1562":{"position":[[66,2]]}}}],["伪",{"_index":1290,"t":{"1508":{"position":[[900,1]]}}}],["似乎",{"_index":258,"t":{"851":{"position":[[499,2]]}}}],["但是",{"_index":1153,"t":{"1386":{"position":[[12,2]]},"1662":{"position":[[18,2]]}}}],["位置",{"_index":782,"t":{"1027":{"position":[[22,2]]},"1290":{"position":[[22,2]]},"1568":{"position":[[180,2]]},"1570":{"position":[[14,2]]},"1583":{"position":[[35,2]]}}}],["低",{"_index":562,"t":{"950":{"position":[[101,1]]},"1025":{"position":[[464,1]]},"1037":{"position":[[82,1]]},"1104":{"position":[[10,1],[479,1]]},"1230":{"position":[[101,1]]},"1254":{"position":[[82,1]]},"1288":{"position":[[464,1]]},"1343":{"position":[[456,1]]}}}],["低级",{"_index":1436,"t":{"1635":{"position":[[11,2]]},"1652":{"position":[[11,2]]}}}],["体",{"_index":702,"t":{"1001":{"position":[[1770,1]]},"1200":{"position":[[1314,1]]},"1205":{"position":[[187,1]]},"1207":{"position":[[275,1],[377,1]]},"1209":{"position":[[455,1]]},"1264":{"position":[[1770,1]]},"1367":{"position":[[37,1]]},"1389":{"position":[[119,1],[218,1],[238,1]]},"1400":{"position":[[2,1]]},"1434":{"position":[[1314,1]]},"1439":{"position":[[187,1]]},"1441":{"position":[[275,1],[377,1]]},"1443":{"position":[[455,1]]},"1446":{"position":[[34,1]]},"1456":{"position":[[238,1]]},"1496":{"position":[[947,1],[1122,1]]}}}],["体系",{"_index":112,"t":{"849":{"position":[[47,2]]}}}],["作为",{"_index":538,"t":{"945":{"position":[[58,2]]},"1138":{"position":[[19,2]]},"1225":{"position":[[58,2]]},"1406":{"position":[[44,2]]}}}],["作用",{"_index":1414,"t":{"1583":{"position":[[66,2],[95,2],[135,2]]}}}],["使得",{"_index":1075,"t":{"1209":{"position":[[123,2]]},"1389":{"position":[[60,2]]},"1443":{"position":[[123,2]]},"1499":{"position":[[64,2]]}}}],["使用",{"_index":334,"t":{"859":{"position":[[2,2]]},"878":{"position":[[8,2]]},"938":{"position":[[5,2],[15,2]]},"940":{"position":[[121,2]]},"947":{"position":[[97,2]]},"950":{"position":[[83,2]]},"958":{"position":[[0,2]]},"993":{"position":[[85,2]]},"1001":{"position":[[27,2],[1231,2]]},"1007":{"position":[[37,2]]},"1015":{"position":[[7607,2]]},"1025":{"position":[[49,2],[296,2],[446,2]]},"1037":{"position":[[64,2],[329,2],[334,2]]},"1047":{"position":[[253,2]]},"1061":{"position":[[894,2]]},"1068":{"position":[[227,2],[354,2]]},"1082":{"position":[[190,2],[199,2]]},"1086":{"position":[[79,2]]},"1093":{"position":[[87,2]]},"1104":{"position":[[14,2]]},"1108":{"position":[[331,2]]},"1144":{"position":[[679,2]]},"1150":{"position":[[26,2]]},"1156":{"position":[[12,2]]},"1158":{"position":[[355,2]]},"1164":{"position":[[166,2],[213,2],[243,2],[351,2]]},"1168":{"position":[[36,2],[108,2],[215,2]]},"1181":{"position":[[54,2],[96,2],[207,2]]},"1200":{"position":[[0,2],[984,2]]},"1227":{"position":[[97,2]]},"1230":{"position":[[83,2]]},"1238":{"position":[[0,2]]},"1246":{"position":[[85,2]]},"1254":{"position":[[64,2],[329,2],[334,2]]},"1264":{"position":[[27,2],[1231,2]]},"1270":{"position":[[37,2]]},"1278":{"position":[[7607,2]]},"1288":{"position":[[49,2],[296,2],[446,2]]},"1308":{"position":[[190,2],[199,2]]},"1312":{"position":[[79,2]]},"1322":{"position":[[253,2]]},"1336":{"position":[[894,2]]},"1365":{"position":[[0,2]]},"1369":{"position":[[36,2],[43,2]]},"1371":{"position":[[222,2],[400,2]]},"1406":{"position":[[8,2],[18,2]]},"1414":{"position":[[39,2]]},"1427":{"position":[[2,2],[157,2]]},"1434":{"position":[[0,2],[984,2]]},"1487":{"position":[[82,2]]},"1494":{"position":[[15,2],[26,2],[48,2]]},"1501":{"position":[[0,2]]},"1508":{"position":[[327,2],[993,2],[1061,2]]},"1511":{"position":[[14,2]]},"1513":{"position":[[57,2]]},"1517":{"position":[[18,2]]},"1519":{"position":[[97,2]]},"1521":{"position":[[124,2]]},"1534":{"position":[[9,2]]},"1541":{"position":[[224,2],[262,2],[267,2],[341,2]]},"1543":{"position":[[29,2],[91,2],[182,2],[251,2]]},"1547":{"position":[[37,2],[99,2]]},"1552":{"position":[[117,2]]},"1574":{"position":[[320,2]]},"1577":{"position":[[2,2],[59,2]]},"1579":{"position":[[2,2],[57,2]]},"1585":{"position":[[2,2]]},"1587":{"position":[[15,2]]},"1601":{"position":[[11,2]]},"1625":{"position":[[6,2]]},"1633":{"position":[[113,2]]},"1635":{"position":[[27,2]]},"1642":{"position":[[6,2]]},"1650":{"position":[[113,2]]},"1652":{"position":[[27,2]]},"1658":{"position":[[186,2]]},"1664":{"position":[[157,2]]}}}],["使用率",{"_index":1352,"t":{"1543":{"position":[[329,3]]}}}],["例",{"_index":962,"t":{"1164":{"position":[[104,1]]}}}],["例如",{"_index":900,"t":{"1134":{"position":[[208,2]]},"1152":{"position":[[29,2]]},"1154":{"position":[[37,2]]},"1160":{"position":[[40,2]]},"1207":{"position":[[35,2]]},"1209":{"position":[[2973,2]]},"1441":{"position":[[35,2]]},"1443":{"position":[[2973,2]]},"1454":{"position":[[10,2]]},"1508":{"position":[[661,2],[790,2],[988,2]]},"1511":{"position":[[35,2]]},"1583":{"position":[[152,2]]}}}],["依次",{"_index":488,"t":{"934":{"position":[[147,2]]}}}],["依然",{"_index":1070,"t":{"1207":{"position":[[186,2]]},"1441":{"position":[[186,2]]}}}],["依赖",{"_index":474,"t":{"931":{"position":[[109,2],[149,2]]},"945":{"position":[[109,2]]},"1001":{"position":[[20,2],[54,2],[128,2],[139,2],[157,2],[1391,2]]},"1034":{"position":[[4,2]]},"1037":{"position":[[4,2],[9,2],[193,2],[322,2]]},"1039":{"position":[[4,2]]},"1179":{"position":[[196,2]]},"1209":{"position":[[395,2]]},"1225":{"position":[[109,2]]},"1251":{"position":[[4,2]]},"1254":{"position":[[4,2],[9,2],[193,2],[322,2]]},"1256":{"position":[[4,2]]},"1264":{"position":[[20,2],[54,2],[128,2],[139,2],[157,2],[1391,2]]},"1343":{"position":[[448,2]]},"1443":{"position":[[395,2]]},"1519":{"position":[[143,2],[276,2]]}}}],["依赖于",{"_index":1272,"t":{"1508":{"position":[[382,3],[512,3],[599,3]]}}}],["便",{"_index":221,"t":{"851":{"position":[[329,1]]}}}],["便于",{"_index":678,"t":{"1001":{"position":[[92,2]]},"1011":{"position":[[17,2]]},"1264":{"position":[[92,2]]},"1274":{"position":[[17,2]]}}}],["保存",{"_index":1014,"t":{"1177":{"position":[[136,2]]},"1608":{"position":[[15,2]]}}}],["保护",{"_index":40,"t":{"847":{"position":[[63,2]]},"950":{"position":[[255,2]]},"1150":{"position":[[432,2]]},"1164":{"position":[[65,2],[267,2]]},"1230":{"position":[[255,2]]}}}],["保持",{"_index":1430,"t":{"1613":{"position":[[92,2]]},"1618":{"position":[[92,2]]}}}],["保留",{"_index":483,"t":{"931":{"position":[[205,2]]},"1207":{"position":[[188,2]]},"1441":{"position":[[188,2]]}}}],["保障",{"_index":50,"t":{"847":{"position":[[89,2]]}}}],["信任",{"_index":820,"t":{"1068":{"position":[[223,2]]}}}],["信号",{"_index":1125,"t":{"1371":{"position":[[375,2],[394,2]]},"1381":{"position":[[14,2]]},"1527":{"position":[[1220,2]]},"1608":{"position":[[31,2]]},"1629":{"position":[[8,2]]},"1646":{"position":[[8,2]]}}}],["信号处理",{"_index":1434,"t":{"1633":{"position":[[51,4]]},"1650":{"position":[[51,4]]},"1664":{"position":[[112,4],[252,4]]}}}],["信念",{"_index":189,"t":{"851":{"position":[[217,2]]},"921":{"position":[[254,2]]}}}],["信息",{"_index":605,"t":{"979":{"position":[[17,2]]},"981":{"position":[[51,2]]},"1025":{"position":[[167,2]]},"1047":{"position":[[2091,2]]},"1059":{"position":[[327,2]]},"1068":{"position":[[214,2],[286,2]]},"1166":{"position":[[31,2]]},"1168":{"position":[[319,2]]},"1170":{"position":[[76,2]]},"1172":{"position":[[6,2]]},"1179":{"position":[[81,2]]},"1212":{"position":[[17,2]]},"1214":{"position":[[51,2]]},"1288":{"position":[[167,2]]},"1322":{"position":[[2091,2]]},"1334":{"position":[[327,2]]},"1389":{"position":[[74,2]]},"1406":{"position":[[92,2]]},"1496":{"position":[[942,2],[1045,2],[1117,2]]},"1508":{"position":[[348,2],[435,2],[444,2],[524,2],[583,2],[647,2]]},"1519":{"position":[[85,2]]},"1570":{"position":[[167,2]]}}}],["修复",{"_index":1294,"t":{"1511":{"position":[[30,2],[68,2]]}}}],["修改",{"_index":603,"t":{"975":{"position":[[12,2],[31,2],[50,2],[65,2]]},"1001":{"position":[[1110,2],[1752,2]]},"1003":{"position":[[10,2],[144,2]]},"1017":{"position":[[13,2],[101,2]]},"1025":{"position":[[383,2]]},"1102":{"position":[[1,2]]},"1150":{"position":[[16,2],[460,2]]},"1196":{"position":[[12,2],[31,2],[50,2],[65,2]]},"1264":{"position":[[1110,2],[1752,2]]},"1266":{"position":[[10,2],[144,2]]},"1280":{"position":[[13,2],[101,2]]},"1288":{"position":[[383,2]]},"1348":{"position":[[14,2]]},"1356":{"position":[[23,2]]},"1358":{"position":[[87,2]]},"1360":{"position":[[13,2]]},"1389":{"position":[[77,2],[199,2],[234,2]]},"1395":{"position":[[4,2],[139,2],[306,2]]},"1494":{"position":[[92,2]]},"1564":{"position":[[93,2]]},"1572":{"position":[[99,2]]},"1574":{"position":[[122,2]]}}}],["倍",{"_index":1186,"t":{"1404":{"position":[[31,1]]},"1524":{"position":[[125,1]]}}}],["值",{"_index":633,"t":{"993":{"position":[[102,1]]},"1098":{"position":[[525,1]]},"1100":{"position":[[449,1]]},"1104":{"position":[[225,1]]},"1168":{"position":[[202,1]]},"1170":{"position":[[551,1]]},"1203":{"position":[[81,1],[165,1]]},"1246":{"position":[[102,1]]},"1367":{"position":[[64,1]]},"1389":{"position":[[37,1],[82,1],[192,1],[204,1]]},"1391":{"position":[[75,1]]},"1395":{"position":[[9,1],[261,1],[313,1],[364,1]]},"1437":{"position":[[81,1],[165,1]]},"1496":{"position":[[2338,1]]},"1568":{"position":[[126,1]]},"1574":{"position":[[31,1],[96,1],[127,1]]},"1583":{"position":[[117,1]]}}}],["值得",{"_index":438,"t":{"921":{"position":[[227,2]]},"983":{"position":[[174,2]]},"1216":{"position":[[174,2]]},"1431":{"position":[[79,2]]}}}],["做",{"_index":987,"t":{"1168":{"position":[[59,1]]},"1209":{"position":[[149,1]]},"1371":{"position":[[461,1]]},"1443":{"position":[[149,1]]}}}],["做主",{"_index":293,"t":{"853":{"position":[[20,2]]}}}],["做好",{"_index":1427,"t":{"1596":{"position":[[40,2]]}}}],["做法",{"_index":967,"t":{"1164":{"position":[[305,2]]},"1367":{"position":[[30,2]]}}}],["停止",{"_index":573,"t":{"950":{"position":[[994,2]]},"954":{"position":[[526,2]]},"1037":{"position":[[789,2]]},"1059":{"position":[[239,2],[1085,2]]},"1200":{"position":[[1115,2]]},"1230":{"position":[[994,2]]},"1234":{"position":[[526,2]]},"1254":{"position":[[789,2]]},"1334":{"position":[[239,2],[1085,2]]},"1434":{"position":[[1115,2]]},"1568":{"position":[[50,2]]},"1583":{"position":[[86,2],[188,2]]},"1633":{"position":[[104,2]]},"1650":{"position":[[104,2]]}}}],["健康",{"_index":249,"t":{"851":{"position":[[466,2]]}}}],["健康检查",{"_index":1335,"t":{"1534":{"position":[[57,4]]}}}],["催化剂",{"_index":285,"t":{"851":{"position":[[619,3]]}}}],["像",{"_index":1119,"t":{"1367":{"position":[[5,1]]},"1562":{"position":[[57,1]]}}}],["僵尸",{"_index":1443,"t":{"1656":{"position":[[20,2]]},"1658":{"position":[[8,2],[19,2],[177,2]]},"1662":{"position":[[546,2],[581,2]]}}}],["儿子",{"_index":1441,"t":{"1656":{"position":[[11,2],[25,2]]},"1661":{"position":[[19,2]]}}}],["允许",{"_index":500,"t":{"940":{"position":[[45,2]]},"1111":{"position":[[22,2]]},"1122":{"position":[[11,2]]},"1144":{"position":[[9,2]]},"1150":{"position":[[487,2]]},"1389":{"position":[[18,2]]},"1452":{"position":[[159,2],[174,2],[447,2],[471,2],[496,2]]}}}],["元",{"_index":627,"t":{"993":{"position":[[9,1],[340,1]]},"1037":{"position":[[256,1]]},"1047":{"position":[[2090,1]]},"1059":{"position":[[326,1]]},"1246":{"position":[[9,1],[340,1]]},"1254":{"position":[[256,1]]},"1322":{"position":[[2090,1]]},"1334":{"position":[[326,1]]},"1400":{"position":[[14,1]]}}}],["充裕",{"_index":269,"t":{"851":{"position":[[542,2]]}}}],["先",{"_index":473,"t":{"931":{"position":[[98,1]]},"1144":{"position":[[598,1]]},"1395":{"position":[[319,1]]},"1656":{"position":[[8,1],[27,1]]},"1661":{"position":[[14,1]]},"1662":{"position":[[15,1]]}}}],["先辈",{"_index":136,"t":{"851":{"position":[[24,2]]}}}],["兑现",{"_index":220,"t":{"851":{"position":[[324,2]]}}}],["全局",{"_index":567,"t":{"950":{"position":[[295,2]]},"1017":{"position":[[103,2]]},"1230":{"position":[[295,2]]},"1280":{"position":[[103,2]]},"1414":{"position":[[41,2]]},"1541":{"position":[[364,2]]}}}],["共享",{"_index":909,"t":{"1140":{"position":[[23,2]]},"1146":{"position":[[34,2]]},"1150":{"position":[[18,2]]},"1494":{"position":[[94,2]]},"1545":{"position":[[37,2]]}}}],["共享资源",{"_index":961,"t":{"1164":{"position":[[67,4]]}}}],["共同",{"_index":244,"t":{"851":{"position":[[444,2]]},"921":{"position":[[209,2]]}}}],["关于",{"_index":1277,"t":{"1508":{"position":[[529,2],[563,2]]}}}],["关注",{"_index":685,"t":{"1001":{"position":[[170,2]]},"1264":{"position":[[170,2]]}}}],["关系",{"_index":240,"t":{"851":{"position":[[417,2]]},"853":{"position":[[2,2]]},"1034":{"position":[[6,2]]},"1037":{"position":[[6,2]]},"1251":{"position":[[6,2]]},"1254":{"position":[[6,2]]}}}],["关联",{"_index":1428,"t":{"1596":{"position":[[42,2]]}}}],["关键",{"_index":452,"t":{"924":{"position":[[52,2]]},"999":{"position":[[22,2]]},"1262":{"position":[[22,2]]},"1547":{"position":[[60,2]]}}}],["关键因素",{"_index":36,"t":{"847":{"position":[[46,4]]}}}],["关键字",{"_index":1222,"t":{"1456":{"position":[[226,3]]}}}],["关键技术",{"_index":1226,"t":{"1463":{"position":[[63,4]]}}}],["关闭",{"_index":750,"t":{"1015":{"position":[[1998,2]]},"1068":{"position":[[89,2],[393,2],[454,2],[478,2]]},"1168":{"position":[[172,2]]},"1200":{"position":[[753,2]]},"1203":{"position":[[14,2],[54,2],[93,2],[139,2],[182,2],[229,2]]},"1205":{"position":[[10,2],[51,2],[79,2],[1089,2]]},"1207":{"position":[[1460,2]]},"1209":{"position":[[2430,2]]},"1278":{"position":[[1998,2]]},"1375":{"position":[[218,2]]},"1434":{"position":[[753,2]]},"1437":{"position":[[14,2],[54,2],[93,2],[139,2],[182,2],[229,2]]},"1439":{"position":[[10,2],[51,2],[79,2],[1089,2]]},"1441":{"position":[[1460,2]]},"1443":{"position":[[2430,2]]},"1527":{"position":[[828,2],[1223,2],[1288,2]]},"1532":{"position":[[1006,2]]}}}],["其一",{"_index":96,"t":{"847":{"position":[[229,2]]}}}],["其中",{"_index":34,"t":{"847":{"position":[[41,2]]},"993":{"position":[[238,2]]},"1246":{"position":[[238,2]]}}}],["其他",{"_index":517,"t":{"942":{"position":[[33,2]]},"1011":{"position":[[149,2]]},"1150":{"position":[[489,2]]},"1222":{"position":[[33,2]]},"1274":{"position":[[149,2]]},"1460":{"position":[[49,2]]},"1501":{"position":[[66,2]]},"1508":{"position":[[439,2]]},"1664":{"position":[[776,2]]}}}],["其子",{"_index":1255,"t":{"1499":{"position":[[26,2]]}}}],["具体",{"_index":669,"t":{"1001":{"position":[[22,2],[49,2],[74,2],[134,2],[1233,2],[1393,2]]},"1209":{"position":[[218,2],[234,2]]},"1264":{"position":[[22,2],[49,2],[74,2],[134,2],[1233,2],[1393,2]]},"1360":{"position":[[123,2]]},"1379":{"position":[[91,2]]},"1443":{"position":[[218,2],[234,2]]}}}],["具备",{"_index":760,"t":{"1019":{"position":[[47,2]]},"1282":{"position":[[47,2]]}}}],["具有",{"_index":1307,"t":{"1519":{"position":[[14,2]]}}}],["兼容",{"_index":722,"t":{"1007":{"position":[[30,2]]},"1270":{"position":[[30,2]]},"1352":{"position":[[6,2]]},"1386":{"position":[[69,2]]},"1484":{"position":[[15,2]]}}}],["兼容性",{"_index":1115,"t":{"1360":{"position":[[99,3]]},"1633":{"position":[[60,3]]},"1650":{"position":[[60,3]]}}}],["内",{"_index":930,"t":{"1144":{"position":[[623,1]]}}}],["内在",{"_index":69,"t":{"847":{"position":[[150,2]]}}}],["内存",{"_index":984,"t":{"1168":{"position":[[39,2],[60,2],[111,2],[146,2],[213,2],[258,2]]},"1181":{"position":[[52,2],[163,2]]},"1572":{"position":[[128,2]]},"1574":{"position":[[268,2]]}}}],["内存空间",{"_index":1144,"t":{"1381":{"position":[[2,4]]}}}],["内容",{"_index":330,"t":{"857":{"position":[[17,2],[30,2]]},"1075":{"position":[[64,2]]},"1115":{"position":[[110,2]]},"1301":{"position":[[64,2]]},"1521":{"position":[[108,2]]},"1572":{"position":[[130,2]]},"1625":{"position":[[336,2]]},"1631":{"position":[[419,2]]},"1642":{"position":[[336,2]]},"1648":{"position":[[419,2]]}}}],["内核",{"_index":526,"t":{"942":{"position":[[68,2]]},"945":{"position":[[0,2],[9,2],[120,2],[128,2]]},"947":{"position":[[7,2]]},"950":{"position":[[334,2]]},"952":{"position":[[758,2]]},"962":{"position":[[28,2],[45,2]]},"964":{"position":[[0,2]]},"967":{"position":[[177,2],[262,2]]},"981":{"position":[[35,2],[81,2]]},"983":{"position":[[48,2]]},"985":{"position":[[153,2],[283,2]]},"1022":{"position":[[8,2]]},"1025":{"position":[[93,2],[203,2]]},"1027":{"position":[[191,2],[492,2]]},"1056":{"position":[[13,2]]},"1183":{"position":[[28,2],[45,2]]},"1185":{"position":[[0,2]]},"1188":{"position":[[177,2],[262,2]]},"1214":{"position":[[35,2],[81,2]]},"1216":{"position":[[48,2]]},"1218":{"position":[[153,2],[283,2]]},"1222":{"position":[[68,2]]},"1225":{"position":[[0,2],[9,2],[120,2],[128,2]]},"1227":{"position":[[7,2]]},"1230":{"position":[[334,2]]},"1232":{"position":[[758,2]]},"1285":{"position":[[8,2]]},"1288":{"position":[[93,2],[203,2]]},"1290":{"position":[[191,2],[492,2]]},"1331":{"position":[[13,2]]},"1508":{"position":[[433,2],[570,2]]}}}],["内置",{"_index":732,"t":{"1011":{"position":[[3,2]]},"1274":{"position":[[3,2]]}}}],["内部",{"_index":1358,"t":{"1545":{"position":[[199,2]]},"1574":{"position":[[380,2]]}}}],["再次",{"_index":213,"t":{"851":{"position":[[299,2]]}}}],["冒号",{"_index":447,"t":{"924":{"position":[[16,2],[25,2]]},"926":{"position":[[9,2],[49,2]]},"938":{"position":[[11,2],[22,2]]},"940":{"position":[[3,2],[41,2]]}}}],["写",{"_index":617,"t":{"981":{"position":[[94,1]]},"1207":{"position":[[1058,1]]},"1214":{"position":[[94,1]]},"1441":{"position":[[1058,1]]}}}],["写入",{"_index":619,"t":{"983":{"position":[[176,2],[401,2]]},"1072":{"position":[[29,2]]},"1209":{"position":[[4261,2]]},"1216":{"position":[[176,2],[401,2]]},"1298":{"position":[[29,2]]},"1443":{"position":[[4261,2]]}}}],["农业",{"_index":150,"t":{"851":{"position":[[86,2]]}}}],["农民",{"_index":411,"t":{"921":{"position":[[117,2]]}}}],["冲突",{"_index":1331,"t":{"1524":{"position":[[149,2]]}}}],["决定",{"_index":295,"t":{"853":{"position":[[27,2]]}}}],["减少",{"_index":910,"t":{"1140":{"position":[[28,2]]},"1148":{"position":[[167,2],[510,2]]},"1496":{"position":[[2340,2]]},"1545":{"position":[[228,2]]}}}],["几乎",{"_index":299,"t":{"853":{"position":[[44,2]]}}}],["几种",{"_index":907,"t":{"1136":{"position":[[35,2]]}}}],["出现",{"_index":343,"t":{"864":{"position":[[13,2]]},"926":{"position":[[26,2]]},"1386":{"position":[[57,2],[63,2]]}}}],["出自",{"_index":405,"t":{"921":{"position":[[88,2]]}}}],["函数",{"_index":988,"t":{"1168":{"position":[[67,2]]},"1367":{"position":[[8,2]]},"1371":{"position":[[16,2],[192,2]]},"1373":{"position":[[53,2]]},"1568":{"position":[[45,2],[91,2],[109,2],[201,2]]},"1570":{"position":[[22,2],[57,2]]},"1664":{"position":[[116,2],[256,2]]}}}],["函数参数",{"_index":1391,"t":{"1572":{"position":[[70,4]]}}}],["函数调用",{"_index":695,"t":{"1001":{"position":[[952,4],[1630,4]]},"1264":{"position":[[952,4],[1630,4]]}}}],["分发",{"_index":781,"t":{"1027":{"position":[[9,2]]},"1290":{"position":[[9,2]]}}}],["分配",{"_index":993,"t":{"1168":{"position":[[148,2]]}}}],["分配不公",{"_index":141,"t":{"851":{"position":[[52,4]]}}}],["分隔",{"_index":377,"t":{"915":{"position":[[20,2]]}}}],["分页",{"_index":1122,"t":{"1371":{"position":[[212,2]]}}}],["切换",{"_index":550,"t":{"945":{"position":[[122,2]]},"1001":{"position":[[1100,2]]},"1225":{"position":[[122,2]]},"1264":{"position":[[1100,2]]},"1375":{"position":[[201,2]]},"1504":{"position":[[34,2]]},"1577":{"position":[[75,2]]},"1579":{"position":[[71,2]]},"1589":{"position":[[2,2]]}}}],["切片",{"_index":1209,"t":{"1452":{"position":[[73,2],[94,2],[628,2]]}}}],["列出",{"_index":889,"t":{"1115":{"position":[[104,2]]},"1658":{"position":[[85,2]]}}}],["列表",{"_index":349,"t":{"871":{"position":[[9,2]]},"1424":{"position":[[119,2]]}}}],["创建",{"_index":570,"t":{"950":{"position":[[422,2]]},"954":{"position":[[104,2]]},"1088":{"position":[[126,2]]},"1113":{"position":[[15,2]]},"1132":{"position":[[185,2]]},"1134":{"position":[[15,2]]},"1142":{"position":[[151,2],[302,2]]},"1230":{"position":[[422,2]]},"1234":{"position":[[104,2]]},"1314":{"position":[[126,2]]},"1389":{"position":[[244,2],[253,2]]},"1496":{"position":[[1173,2]]},"1499":{"position":[[90,2]]},"1508":{"position":[[0,2]]},"1513":{"position":[[11,2]]},"1515":{"position":[[17,2]]},"1527":{"position":[[232,2]]},"1532":{"position":[[259,2]]},"1627":{"position":[[6,2]]},"1644":{"position":[[6,2]]},"1661":{"position":[[172,2]]},"1662":{"position":[[149,2]]},"1664":{"position":[[470,2]]}}}],["创新",{"_index":282,"t":{"851":{"position":[[598,2]]}}}],["初始化",{"_index":952,"t":{"1154":{"position":[[39,3],[139,3]]},"1532":{"position":[[513,3]]}}}],["初年",{"_index":403,"t":{"921":{"position":[[82,2]]}}}],["删除",{"_index":1345,"t":{"1543":{"position":[[153,2]]},"1570":{"position":[[191,2]]}}}],["判断",{"_index":640,"t":{"993":{"position":[[1191,2]]},"1084":{"position":[[254,2]]},"1203":{"position":[[89,2],[144,2],[169,2]]},"1205":{"position":[[72,2]]},"1246":{"position":[[1191,2]]},"1310":{"position":[[254,2]]},"1437":{"position":[[89,2],[144,2],[169,2]]},"1439":{"position":[[72,2]]}}}],["利用",{"_index":1189,"t":{"1406":{"position":[[77,2]]}}}],["利益",{"_index":384,"t":{"921":{"position":[[17,2]]}}}],["别名",{"_index":1252,"t":{"1496":{"position":[[1807,2]]}}}],["到达",{"_index":931,"t":{"1144":{"position":[[628,2]]}}}],["制度",{"_index":89,"t":{"847":{"position":[[208,2]]}}}],["刻意",{"_index":100,"t":{"849":{"position":[[12,2]]}}}],["前",{"_index":1146,"t":{"1383":{"position":[[12,1]]},"1568":{"position":[[49,1]]},"1664":{"position":[[858,1]]}}}],["前提",{"_index":1174,"t":{"1395":{"position":[[12,2]]}}}],["前缀",{"_index":366,"t":{"894":{"position":[[7,2]]}}}],["前面",{"_index":466,"t":{"926":{"position":[[39,2]]},"929":{"position":[[130,2]]},"931":{"position":[[50,2],[126,2]]},"940":{"position":[[32,2]]},"1082":{"position":[[148,2]]},"1308":{"position":[[148,2]]}}}],["剥削",{"_index":102,"t":{"849":{"position":[[17,2]]}}}],["力量",{"_index":390,"t":{"921":{"position":[[36,2]]}}}],["功成名就",{"_index":429,"t":{"921":{"position":[[189,4]]}}}],["功绩",{"_index":386,"t":{"921":{"position":[[22,2]]}}}],["功能",{"_index":515,"t":{"942":{"position":[[27,2],[35,2]]},"945":{"position":[[18,2]]},"1001":{"position":[[177,2]]},"1003":{"position":[[5,2],[114,2]]},"1166":{"position":[[61,2]]},"1181":{"position":[[14,2],[211,2]]},"1207":{"position":[[126,2]]},"1222":{"position":[[27,2],[35,2]]},"1225":{"position":[[18,2]]},"1264":{"position":[[177,2]]},"1266":{"position":[[5,2],[114,2]]},"1389":{"position":[[172,2]]},"1441":{"position":[[126,2]]},"1446":{"position":[[41,2]]},"1460":{"position":[[18,2]]},"1496":{"position":[[1056,2]]},"1568":{"position":[[3,2]]},"1613":{"position":[[88,2]]},"1618":{"position":[[88,2]]},"1633":{"position":[[0,2]]},"1650":{"position":[[0,2]]}}}],["功能强大",{"_index":1201,"t":{"1429":{"position":[[18,4]]}}}],["加",{"_index":841,"t":{"1086":{"position":[[59,1]]},"1312":{"position":[[59,1]]}}}],["加以",{"_index":76,"t":{"847":{"position":[[171,2]]}}}],["加入",{"_index":1239,"t":{"1470":{"position":[[174,2]]}}}],["加剧",{"_index":163,"t":{"851":{"position":[[130,2]]}}}],["加密",{"_index":789,"t":{"1044":{"position":[[16,2]]},"1047":{"position":[[146,2],[248,2]]},"1068":{"position":[[185,2]]},"1072":{"position":[[24,2]]},"1075":{"position":[[68,2]]},"1088":{"position":[[186,2]]},"1106":{"position":[[64,2]]},"1108":{"position":[[129,2],[341,2]]},"1298":{"position":[[24,2]]},"1301":{"position":[[68,2]]},"1314":{"position":[[186,2]]},"1319":{"position":[[16,2]]},"1322":{"position":[[146,2],[248,2]]},"1496":{"position":[[1051,2]]}}}],["加密算法",{"_index":881,"t":{"1108":{"position":[[146,4],[179,4]]}}}],["加载",{"_index":583,"t":{"958":{"position":[[31,2]]},"1238":{"position":[[31,2]]},"1583":{"position":[[170,2]]},"1596":{"position":[[3,2],[50,2]]}}}],["加锁",{"_index":916,"t":{"1140":{"position":[[63,2]]}}}],["务实",{"_index":432,"t":{"921":{"position":[[201,2]]}}}],["劣势",{"_index":1111,"t":{"1358":{"position":[[10,2]]}}}],["动力",{"_index":280,"t":{"851":{"position":[[588,2]]}}}],["动态",{"_index":582,"t":{"958":{"position":[[29,2]]},"1238":{"position":[[29,2]]},"1389":{"position":[[67,2],[93,2],[212,2],[229,2]]},"1406":{"position":[[3,2]]},"1508":{"position":[[581,2]]},"1583":{"position":[[166,2]]}}}],["动态控制",{"_index":802,"t":{"1056":{"position":[[54,4]]},"1331":{"position":[[54,4]]}}}],["助力",{"_index":242,"t":{"851":{"position":[[435,2]]}}}],["努力",{"_index":443,"t":{"921":{"position":[[260,2]]}}}],["勇敢",{"_index":435,"t":{"921":{"position":[[215,2]]}}}],["包",{"_index":848,"t":{"1093":{"position":[[74,1]]},"1111":{"position":[[8,1]]},"1134":{"position":[[184,1]]},"1166":{"position":[[38,1]]},"1181":{"position":[[135,1]]},"1343":{"position":[[27,1]]},"1389":{"position":[[48,1],[168,1]]},"1391":{"position":[[10,1]]},"1613":{"position":[[36,1],[75,1]]},"1618":{"position":[[36,1],[75,1]]}}}],["包含",{"_index":504,"t":{"940":{"position":[[91,2]]},"1025":{"position":[[15,2]]},"1098":{"position":[[506,2]]},"1288":{"position":[[15,2]]},"1452":{"position":[[192,2],[524,2],[562,2],[591,2]]},"1508":{"position":[[706,2]]}}}],["包容",{"_index":431,"t":{"921":{"position":[[198,2]]}}}],["包括",{"_index":1363,"t":{"1547":{"position":[[65,2]]}}}],["包装",{"_index":1133,"t":{"1373":{"position":[[43,2]]}}}],["化",{"_index":584,"t":{"958":{"position":[[39,1]]},"1070":{"position":[[6,1]]},"1238":{"position":[[39,1]]},"1296":{"position":[[6,1]]},"1463":{"position":[[56,1],[148,1]]},"1513":{"position":[[42,1]]},"1521":{"position":[[79,1]]}}}],["匹配",{"_index":358,"t":{"882":{"position":[[11,2]]},"1068":{"position":[[189,2]]},"1100":{"position":[[445,2],[456,2]]},"1106":{"position":[[44,2]]}}}],["区分",{"_index":1047,"t":{"1200":{"position":[[1333,2]]},"1434":{"position":[[1333,2]]}}}],["区别",{"_index":453,"t":{"924":{"position":[[54,2]]},"940":{"position":[[150,2]]}}}],["十六进制",{"_index":1217,"t":{"1452":{"position":[[393,4]]},"1574":{"position":[[87,4]]}}}],["升级",{"_index":868,"t":{"1104":{"position":[[204,2]]},"1108":{"position":[[103,2]]}}}],["协",{"_index":748,"t":{"1015":{"position":[[1992,1]]},"1136":{"position":[[12,1]]},"1142":{"position":[[339,1]]},"1200":{"position":[[546,1],[770,1],[1119,1]]},"1205":{"position":[[449,1],[516,1]]},"1207":{"position":[[526,1]]},"1278":{"position":[[1992,1]]},"1434":{"position":[[546,1],[770,1],[1119,1]]},"1439":{"position":[[449,1],[516,1]]},"1441":{"position":[[526,1]]}}}],["协议",{"_index":766,"t":{"1022":{"position":[[19,2]]},"1068":{"position":[[182,2]]},"1285":{"position":[[19,2]]}}}],["单",{"_index":446,"t":{"924":{"position":[[15,1]]},"926":{"position":[[8,1]]},"938":{"position":[[10,1]]},"940":{"position":[[2,1]]},"1164":{"position":[[103,1]]}}}],["单一",{"_index":478,"t":{"931":{"position":[[167,2]]},"945":{"position":[[6,2]]},"1001":{"position":[[160,2]]},"1225":{"position":[[6,2]]},"1264":{"position":[[160,2]]}}}],["单个",{"_index":639,"t":{"993":{"position":[[403,2]]},"1246":{"position":[[403,2]]}}}],["单元测试",{"_index":679,"t":{"1001":{"position":[[94,4]]},"1264":{"position":[[94,4]]}}}],["单步",{"_index":1388,"t":{"1568":{"position":[[83,2],[102,2]]},"1574":{"position":[[309,2]]}}}],["单独",{"_index":623,"t":{"990":{"position":[[7,2]]},"1243":{"position":[[7,2]]},"1519":{"position":[[274,2]]}}}],["单词",{"_index":372,"t":{"901":{"position":[[10,2]]},"915":{"position":[[12,2],[15,2]]}}}],["占",{"_index":1143,"t":{"1381":{"position":[[1,1]]}}}],["占用",{"_index":1328,"t":{"1524":{"position":[[142,2]]},"1543":{"position":[[210,2]]}}}],["卡死",{"_index":1069,"t":{"1207":{"position":[[151,2]]},"1441":{"position":[[151,2]]}}}],["即便",{"_index":138,"t":{"851":{"position":[[39,2]]}}}],["即可",{"_index":1129,"t":{"1373":{"position":[[14,2]]}}}],["历史",{"_index":105,"t":{"849":{"position":[[24,2]]},"921":{"position":[[0,2]]}}}],["压迫",{"_index":156,"t":{"851":{"position":[[107,2]]}}}],["原值",{"_index":1176,"t":{"1395":{"position":[[141,2]]}}}],["原则",{"_index":688,"t":{"1001":{"position":[[184,2]]},"1015":{"position":[[2029,2]]},"1019":{"position":[[33,2]]},"1264":{"position":[[184,2]]},"1278":{"position":[[2029,2]]},"1282":{"position":[[33,2]]}}}],["原因",{"_index":812,"t":{"1068":{"position":[[165,2]]},"1386":{"position":[[47,2]]}}}],["原始",{"_index":144,"t":{"851":{"position":[[66,2]]},"1003":{"position":[[146,2]]},"1266":{"position":[[146,2]]},"1395":{"position":[[308,2]]},"1608":{"position":[[17,2]]}}}],["原子",{"_index":956,"t":{"1156":{"position":[[30,2]]},"1158":{"position":[[151,2]]}}}],["原有",{"_index":709,"t":{"1003":{"position":[[112,2]]},"1266":{"position":[[112,2]]}}}],["原理",{"_index":1365,"t":{"1547":{"position":[[155,2]]}}}],["去掉",{"_index":370,"t":{"898":{"position":[[73,2],[145,2]]}}}],["去除",{"_index":373,"t":{"908":{"position":[[0,2]]}}}],["参",{"_index":1386,"t":{"1564":{"position":[[9,1]]}}}],["参数",{"_index":683,"t":{"1001":{"position":[[153,2]]},"1005":{"position":[[7,2]]},"1264":{"position":[[153,2]]},"1268":{"position":[[7,2]]},"1402":{"position":[[1,2],[356,2]]},"1409":{"position":[[18,2]]},"1414":{"position":[[47,2]]},"1424":{"position":[[121,2]]},"1427":{"position":[[25,2]]},"1431":{"position":[[35,2]]},"1460":{"position":[[65,2]]},"1508":{"position":[[572,2]]},"1562":{"position":[[54,2]]},"1564":{"position":[[44,2],[95,2]]},"1577":{"position":[[135,2]]},"1658":{"position":[[83,2],[158,2]]}}}],["参考",{"_index":606,"t":{"979":{"position":[[24,2]]},"1212":{"position":[[24,2]]},"1583":{"position":[[0,2]]}}}],["及其",{"_index":1374,"t":{"1552":{"position":[[106,2]]}}}],["友好",{"_index":746,"t":{"1015":{"position":[[1975,2]]},"1278":{"position":[[1975,2]]},"1431":{"position":[[19,2]]}}}],["双",{"_index":448,"t":{"924":{"position":[[24,1]]},"926":{"position":[[48,1]]},"938":{"position":[[21,1]]},"940":{"position":[[40,1]]}}}],["反",{"_index":1170,"t":{"1389":{"position":[[147,1]]},"1463":{"position":[[30,1]]},"1466":{"position":[[101,1]]},"1470":{"position":[[169,1]]}}}],["反向",{"_index":1353,"t":{"1545":{"position":[[56,2]]}}}],["反射",{"_index":1163,"t":{"1389":{"position":[[0,2],[251,2]]},"1395":{"position":[[0,2]]},"1406":{"position":[[10,2],[46,2]]},"1541":{"position":[[264,2]]}}}],["反汇编",{"_index":1398,"t":{"1574":{"position":[[287,3]]}}}],["反过来",{"_index":241,"t":{"851":{"position":[[432,3]]}}}],["反馈",{"_index":611,"t":{"981":{"position":[[49,2],[121,2]]},"1214":{"position":[[49,2],[121,2]]}}}],["发出请求",{"_index":771,"t":{"1022":{"position":[[49,4]]},"1285":{"position":[[49,4]]}}}],["发展",{"_index":131,"t":{"851":{"position":[[10,2],[236,2],[285,2],[456,2]]}}}],["发现",{"_index":585,"t":{"958":{"position":[[49,2]]},"1238":{"position":[[49,2]]}}}],["发生",{"_index":945,"t":{"1150":{"position":[[463,2]]},"1583":{"position":[[19,2],[32,2],[118,2],[149,2],[156,2],[182,2]]}}}],["发送",{"_index":574,"t":{"950":{"position":[[1188,2]]},"952":{"position":[[753,2]]},"962":{"position":[[23,2],[47,2]]},"964":{"position":[[2,2]]},"967":{"position":[[141,2],[264,2]]},"971":{"position":[[6,2],[48,2]]},"981":{"position":[[63,2]]},"985":{"position":[[148,2]]},"1001":{"position":[[406,2],[553,2],[1352,2]]},"1027":{"position":[[20,2],[186,2]]},"1142":{"position":[[361,2]]},"1183":{"position":[[23,2],[47,2]]},"1185":{"position":[[2,2]]},"1188":{"position":[[141,2],[264,2]]},"1192":{"position":[[6,2],[48,2]]},"1200":{"position":[[339,2]]},"1203":{"position":[[0,2]]},"1205":{"position":[[825,2]]},"1209":{"position":[[3017,2],[3699,2]]},"1214":{"position":[[63,2]]},"1218":{"position":[[148,2]]},"1230":{"position":[[1188,2]]},"1232":{"position":[[753,2]]},"1264":{"position":[[406,2],[553,2],[1352,2]]},"1290":{"position":[[20,2],[186,2]]},"1434":{"position":[[339,2]]},"1437":{"position":[[0,2]]},"1439":{"position":[[825,2]]},"1443":{"position":[[3017,2],[3699,2]]},"1629":{"position":[[6,2]]},"1646":{"position":[[6,2]]}}}],["发送器",{"_index":698,"t":{"1001":{"position":[[1255,3]]},"1264":{"position":[[1255,3]]}}}],["发送数据",{"_index":922,"t":{"1142":{"position":[[398,4]]},"1144":{"position":[[168,4],[265,4]]},"1200":{"position":[[1194,4]]},"1203":{"position":[[25,4]]},"1434":{"position":[[1194,4]]},"1437":{"position":[[25,4]]}}}],["发送给",{"_index":645,"t":{"993":{"position":[[1468,3]]},"1025":{"position":[[826,3]]},"1246":{"position":[[1468,3]]},"1288":{"position":[[826,3]]}}}],["取消",{"_index":958,"t":{"1160":{"position":[[45,2]]},"1162":{"position":[[440,2]]},"1164":{"position":[[139,2]]},"1207":{"position":[[103,2],[110,2],[117,2],[146,2],[895,2]]},"1441":{"position":[[103,2],[110,2],[117,2],[146,2],[895,2]]}}}],["受",{"_index":819,"t":{"1068":{"position":[[222,1]]}}}],["受限",{"_index":1299,"t":{"1513":{"position":[[15,2]]}}}],["变为",{"_index":950,"t":{"1152":{"position":[[218,2]]}}}],["变化",{"_index":654,"t":{"997":{"position":[[58,2]]},"1019":{"position":[[53,2]]},"1260":{"position":[[58,2]]},"1282":{"position":[[53,2]]}}}],["变成",{"_index":1451,"t":{"1661":{"position":[[49,2]]},"1662":{"position":[[544,2]]}}}],["变量",{"_index":480,"t":{"931":{"position":[[188,2]]},"938":{"position":[[50,2]]},"1140":{"position":[[25,2]]},"1146":{"position":[[36,2]]},"1164":{"position":[[210,2]]},"1383":{"position":[[15,2]]},"1389":{"position":[[31,2],[71,2],[79,2],[112,2],[183,2],[201,2],[257,2]]},"1391":{"position":[[39,2],[72,2]]},"1395":{"position":[[6,2],[310,2]]},"1496":{"position":[[1888,2],[1920,2]]},"1568":{"position":[[123,2]]},"1572":{"position":[[20,2]]},"1583":{"position":[[100,2],[109,2]]}}}],["变量值",{"_index":1392,"t":{"1572":{"position":[[101,3]]}}}],["古代",{"_index":289,"t":{"853":{"position":[[10,2]]}}}],["只是",{"_index":409,"t":{"921":{"position":[[112,2],[139,2]]},"1519":{"position":[[54,2]]}}}],["只有",{"_index":225,"t":{"851":{"position":[[347,2]]},"1406":{"position":[[0,2]]},"1519":{"position":[[24,2]]}}}],["只能",{"_index":1300,"t":{"1513":{"position":[[27,2]]}}}],["只读",{"_index":1107,"t":{"1348":{"position":[[40,2]]},"1358":{"position":[[65,2]]}}}],["可以",{"_index":333,"t":{"859":{"position":[[0,2]]},"878":{"position":[[6,2]]},"921":{"position":[[73,2]]},"924":{"position":[[64,2]]},"926":{"position":[[66,2]]},"936":{"position":[[243,2]]},"981":{"position":[[0,2]]},"1001":{"position":[[99,2],[974,2]]},"1022":{"position":[[54,2]]},"1037":{"position":[[326,2]]},"1068":{"position":[[404,2],[482,2],[488,2],[502,2]]},"1082":{"position":[[143,2]]},"1086":{"position":[[57,2],[77,2]]},"1098":{"position":[[446,2]]},"1104":{"position":[[12,2]]},"1134":{"position":[[42,2],[135,2]]},"1138":{"position":[[52,2]]},"1150":{"position":[[24,2]]},"1156":{"position":[[10,2]]},"1164":{"position":[[239,2],[381,2]]},"1181":{"position":[[214,2]]},"1200":{"position":[[1281,2]]},"1209":{"position":[[289,2]]},"1214":{"position":[[0,2]]},"1254":{"position":[[326,2]]},"1264":{"position":[[99,2],[974,2]]},"1285":{"position":[[54,2]]},"1308":{"position":[[143,2]]},"1312":{"position":[[57,2],[77,2]]},"1371":{"position":[[230,2],[398,2]]},"1386":{"position":[[15,2],[76,2],[122,2]]},"1389":{"position":[[65,2]]},"1395":{"position":[[2,2]]},"1400":{"position":[[5,2]]},"1414":{"position":[[35,2]]},"1427":{"position":[[0,2]]},"1434":{"position":[[1281,2]]},"1443":{"position":[[289,2]]},"1454":{"position":[[0,2]]},"1460":{"position":[[39,2]]},"1463":{"position":[[91,2]]},"1470":{"position":[[23,2],[68,2],[95,2]]},"1496":{"position":[[1088,2],[1736,2],[1874,2]]},"1511":{"position":[[12,2]]},"1513":{"position":[[7,2]]},"1515":{"position":[[15,2]]},"1517":{"position":[[16,2]]},"1521":{"position":[[97,2]]},"1550":{"position":[[61,2]]},"1566":{"position":[[2,2],[31,2]]},"1574":{"position":[[331,2]]},"1577":{"position":[[389,2],[437,2]]},"1592":{"position":[[10,2]]},"1661":{"position":[[30,2]]}}}],["可扩展性",{"_index":664,"t":{"997":{"position":[[100,4]]},"1209":{"position":[[76,4]]},"1260":{"position":[[100,4]]},"1443":{"position":[[76,4]]}}}],["可用",{"_index":1020,"t":{"1181":{"position":[[86,2]]}}}],["可维护性",{"_index":458,"t":{"924":{"position":[[87,4]]}}}],["可能",{"_index":416,"t":{"921":{"position":[[137,2]]},"936":{"position":[[211,2]]},"940":{"position":[[81,2]]},"1181":{"position":[[24,2],[48,2],[112,2]]},"1375":{"position":[[67,2]]},"1386":{"position":[[109,2]]},"1463":{"position":[[124,2]]},"1508":{"position":[[372,2],[639,2],[1133,2]]},"1519":{"position":[[200,2]]},"1577":{"position":[[373,2]]}}}],["可能性",{"_index":911,"t":{"1140":{"position":[[35,3]]}}}],["可见",{"_index":1264,"t":{"1501":{"position":[[71,2]]}}}],["可读性",{"_index":1181,"t":{"1404":{"position":[[2,3]]}}}],["可靠",{"_index":1101,"t":{"1343":{"position":[[432,2]]}}}],["可靠性",{"_index":540,"t":{"945":{"position":[[76,3]]},"1181":{"position":[[234,3]]},"1225":{"position":[[76,3]]},"1460":{"position":[[75,3]]}}}],["台阶式",{"_index":208,"t":{"851":{"position":[[282,3]]}}}],["号",{"_index":368,"t":{"894":{"position":[[14,1]]},"1656":{"position":[[15,1]]},"1661":{"position":[[23,1]]}}}],["司法独立",{"_index":38,"t":{"847":{"position":[[53,4]]}}}],["各种",{"_index":1202,"t":{"1429":{"position":[[34,2]]}}}],["合并",{"_index":498,"t":{"938":{"position":[[82,2]]}}}],["合法",{"_index":1206,"t":{"1452":{"position":[[29,2],[127,2],[282,2],[302,2],[410,2],[427,2]]}}}],["合理",{"_index":648,"t":{"997":{"position":[[30,2]]},"1181":{"position":[[205,2]]},"1260":{"position":[[30,2]]},"1406":{"position":[[75,2]]}}}],["合适",{"_index":1116,"t":{"1360":{"position":[[129,2]]}}}],["同一",{"_index":462,"t":{"926":{"position":[[22,2],[62,2]]},"1383":{"position":[[131,2]]},"1524":{"position":[[47,2]]},"1545":{"position":[[149,2]]}}}],["同一个",{"_index":964,"t":{"1164":{"position":[[207,3]]}}}],["同时",{"_index":184,"t":{"851":{"position":[[201,2]]},"1134":{"position":[[114,2]]},"1581":{"position":[[125,2]]}}}],["同样",{"_index":399,"t":{"921":{"position":[[71,2]]}}}],["同步",{"_index":939,"t":{"1148":{"position":[[17,2]]},"1200":{"position":[[174,2],[1223,2]]},"1371":{"position":[[377,2]]},"1373":{"position":[[26,2],[45,2]]},"1434":{"position":[[174,2],[1223,2]]}}}],["同步操作",{"_index":1036,"t":{"1200":{"position":[[28,4]]},"1434":{"position":[[28,4]]}}}],["名",{"_index":800,"t":{"1056":{"position":[[32,1]]},"1331":{"position":[[32,1]]},"1574":{"position":[[328,1]]}}}],["名声",{"_index":424,"t":{"921":{"position":[[167,2]]}}}],["名字",{"_index":1193,"t":{"1414":{"position":[[157,2]]},"1416":{"position":[[152,2]]},"1418":{"position":[[213,2]]},"1420":{"position":[[156,2]]},"1427":{"position":[[200,2]]}}}],["名将",{"_index":404,"t":{"921":{"position":[[85,2]]}}}],["名称",{"_index":783,"t":{"1037":{"position":[[15,2],[197,2]]},"1254":{"position":[[15,2],[197,2]]}}}],["后台",{"_index":1037,"t":{"1200":{"position":[[768,2],[1117,2]]},"1205":{"position":[[514,2],[1241,2]]},"1434":{"position":[[768,2],[1117,2]]},"1439":{"position":[[514,2],[1241,2]]}}}],["后来居上",{"_index":33,"t":{"847":{"position":[[36,4]]}}}],["后缀",{"_index":363,"t":{"887":{"position":[[8,2]]},"898":{"position":[[75,2],[147,2]]}}}],["后面",{"_index":464,"t":{"926":{"position":[[31,2]]},"929":{"position":[[112,2]]},"940":{"position":[[24,2]]},"1562":{"position":[[51,2]]}}}],["向量",{"_index":1396,"t":{"1574":{"position":[[202,2]]}}}],["吞吐量",{"_index":1351,"t":{"1543":{"position":[[313,3]]}}}],["否则",{"_index":865,"t":{"1100":{"position":[[466,2]]},"1379":{"position":[[97,2]]}}}],["含",{"_index":1088,"t":{"1209":{"position":[[821,1]]},"1443":{"position":[[821,1]]}}}],["启动",{"_index":572,"t":{"950":{"position":[[807,2]]},"954":{"position":[[274,2],[342,2]]},"1037":{"position":[[784,2]]},"1059":{"position":[[1080,2]]},"1132":{"position":[[348,2],[446,2]]},"1142":{"position":[[184,2],[335,2]]},"1144":{"position":[[149,2],[246,2]]},"1148":{"position":[[377,2]]},"1200":{"position":[[529,2]]},"1205":{"position":[[432,2]]},"1207":{"position":[[509,2]]},"1209":{"position":[[1942,2]]},"1230":{"position":[[807,2]]},"1234":{"position":[[274,2],[342,2]]},"1254":{"position":[[784,2]]},"1334":{"position":[[1080,2]]},"1434":{"position":[[529,2]]},"1439":{"position":[[432,2]]},"1441":{"position":[[509,2]]},"1443":{"position":[[1942,2]]},"1501":{"position":[[170,2]]},"1504":{"position":[[60,2]]},"1508":{"position":[[1058,2]]},"1511":{"position":[[5,2]]},"1527":{"position":[[864,2]]},"1532":{"position":[[1042,2]]},"1562":{"position":[[2,2],[39,2]]},"1566":{"position":[[33,2]]}}}],["启用",{"_index":821,"t":{"1068":{"position":[[298,2]]}}}],["告别",{"_index":1196,"t":{"1418":{"position":[[290,2],[331,2]]}}}],["命令",{"_index":335,"t":{"859":{"position":[[16,2]]},"929":{"position":[[159,2]]},"1015":{"position":[[7609,2]]},"1122":{"position":[[22,2]]},"1132":{"position":[[353,2],[451,2],[548,2]]},"1134":{"position":[[48,2],[72,2]]},"1209":{"position":[[18,2],[54,2],[85,2],[120,2],[135,2],[179,2],[220,2],[255,2],[266,2],[296,2],[331,2],[389,2],[439,2],[1035,2],[1143,2],[2135,2],[2960,2],[3015,2],[3226,2],[3697,2],[3979,2],[4621,2],[5036,2],[6317,2]]},"1278":{"position":[[7609,2]]},"1409":{"position":[[57,2]]},"1418":{"position":[[113,2],[128,2],[251,2]]},"1431":{"position":[[5,2]]},"1443":{"position":[[18,2],[54,2],[85,2],[120,2],[135,2],[179,2],[220,2],[255,2],[266,2],[296,2],[331,2],[389,2],[439,2],[1035,2],[1143,2],[2135,2],[2960,2],[3015,2],[3226,2],[3697,2],[3979,2],[4621,2],[5036,2],[6317,2]]},"1499":{"position":[[17,2]]},"1501":{"position":[[10,2],[136,2],[153,2],[162,2]]},"1504":{"position":[[31,2]]},"1508":{"position":[[370,2],[481,2],[1096,2],[1109,2]]},"1562":{"position":[[90,2]]},"1568":{"position":[[0,2]]},"1570":{"position":[[9,2]]},"1577":{"position":[[21,2],[73,2]]},"1579":{"position":[[20,2],[69,2]]},"1585":{"position":[[14,2]]},"1587":{"position":[[34,2]]},"1658":{"position":[[15,2],[72,2],[152,2]]}}}],["命令行",{"_index":1190,"t":{"1409":{"position":[[15,3]]},"1429":{"position":[[23,3]]},"1431":{"position":[[62,3]]},"1508":{"position":[[978,3]]}}}],["哈哈镜",{"_index":380,"t":{"921":{"position":[[7,3]]}}}],["哈希",{"_index":843,"t":{"1093":{"position":[[15,2]]},"1098":{"position":[[119,2],[408,2],[499,2]]},"1100":{"position":[[195,2],[447,2]]},"1102":{"position":[[11,2]]},"1104":{"position":[[2,2],[199,2],[245,2],[486,2]]},"1106":{"position":[[42,2],[54,2]]},"1108":{"position":[[32,2],[92,2],[135,2],[434,2]]}}}],["响应",{"_index":609,"t":{"981":{"position":[[21,2],[96,2]]},"983":{"position":[[136,2]]},"1025":{"position":[[291,2]]},"1200":{"position":[[515,2],[710,2],[1233,2]]},"1205":{"position":[[704,2]]},"1207":{"position":[[62,2],[155,2],[178,2],[1147,2]]},"1209":{"position":[[2930,2],[3031,2]]},"1214":{"position":[[21,2],[96,2]]},"1216":{"position":[[136,2]]},"1288":{"position":[[291,2]]},"1434":{"position":[[515,2],[710,2],[1233,2]]},"1439":{"position":[[704,2]]},"1441":{"position":[[62,2],[155,2],[178,2],[1147,2]]},"1443":{"position":[[2930,2],[3031,2]]},"1537":{"position":[[358,2]]},"1539":{"position":[[251,2],[334,2]]}}}],["哪个",{"_index":927,"t":{"1144":{"position":[[587,2]]}}}],["哲学",{"_index":914,"t":{"1140":{"position":[[49,2]]}}}],["唏嘘",{"_index":304,"t":{"853":{"position":[[57,2]]}}}],["唤醒",{"_index":951,"t":{"1152":{"position":[[588,2]]}}}],["唯一",{"_index":263,"t":{"851":{"position":[[517,2]]},"926":{"position":[[15,2]]},"938":{"position":[[26,2]]},"940":{"position":[[10,2]]}}}],["善",{"_index":253,"t":{"851":{"position":[[483,1]]}}}],["善良",{"_index":125,"t":{"849":{"position":[[104,2]]}}}],["器",{"_index":712,"t":{"1003":{"position":[[150,1]]},"1009":{"position":[[52,1]]},"1168":{"position":[[127,1]]},"1205":{"position":[[286,1]]},"1207":{"position":[[374,1]]},"1266":{"position":[[150,1]]},"1272":{"position":[[52,1]]},"1439":{"position":[[286,1]]},"1441":{"position":[[374,1]]}}}],["四个",{"_index":1447,"t":{"1658":{"position":[[156,2]]}}}],["回",{"_index":618,"t":{"981":{"position":[[95,1]]},"1207":{"position":[[1057,1]]},"1214":{"position":[[95,1]]},"1441":{"position":[[1057,1]]},"1524":{"position":[[76,1]]}}}],["回去",{"_index":613,"t":{"981":{"position":[[57,2]]},"1214":{"position":[[57,2]]}}}],["回复",{"_index":775,"t":{"1025":{"position":[[97,2],[312,2]]},"1200":{"position":[[1266,2]]},"1288":{"position":[[97,2],[312,2]]},"1434":{"position":[[1266,2]]}}}],["回应",{"_index":621,"t":{"985":{"position":[[285,2]]},"1027":{"position":[[494,2]]},"1218":{"position":[[285,2]]},"1290":{"position":[[494,2]]}}}],["回报",{"_index":238,"t":{"851":{"position":[[406,2]]}}}],["回收",{"_index":981,"t":{"1168":{"position":[[4,2],[29,2],[125,2]]},"1662":{"position":[[25,2]]},"1664":{"position":[[171,2]]}}}],["因为",{"_index":1271,"t":{"1508":{"position":[[378,2],[508,2]]},"1635":{"position":[[52,2]]},"1652":{"position":[[52,2]]},"1658":{"position":[[163,2]]}}}],["因子",{"_index":862,"t":{"1098":{"position":[[521,2]]},"1104":{"position":[[476,2]]},"1108":{"position":[[155,2]]}}}],["因此",{"_index":86,"t":{"847":{"position":[[201,2]]},"929":{"position":[[145,2]]},"1519":{"position":[[250,2]]}}}],["困局",{"_index":230,"t":{"851":{"position":[[365,2]]}}}],["固定",{"_index":561,"t":{"950":{"position":[[91,2]]},"1009":{"position":[[31,2]]},"1025":{"position":[[454,2]]},"1037":{"position":[[72,2]]},"1230":{"position":[[91,2]]},"1254":{"position":[[72,2]]},"1272":{"position":[[31,2]]},"1288":{"position":[[454,2]]}}}],["圣人",{"_index":252,"t":{"851":{"position":[[477,2],[505,2]]}}}],["在于",{"_index":37,"t":{"847":{"position":[[50,2]]},"851":{"position":[[563,2]]}}}],["地",{"_index":94,"t":{"847":{"position":[[226,1]]},"924":{"position":[[72,1]]},"1209":{"position":[[132,1]]},"1443":{"position":[[132,1]]}}}],["地区",{"_index":59,"t":{"847":{"position":[[114,2]]}}}],["地址",{"_index":532,"t":{"945":{"position":[[28,2]]},"967":{"position":[[143,2]]},"1188":{"position":[[143,2]]},"1225":{"position":[[28,2]]},"1452":{"position":[[291,2],[311,2]]}}}],["场景",{"_index":477,"t":{"931":{"position":[[160,2]]},"936":{"position":[[185,2]]},"938":{"position":[[2,2]]},"960":{"position":[[85,2],[104,2]]},"1106":{"position":[[0,2]]},"1134":{"position":[[205,2]]},"1144":{"position":[[681,2]]},"1152":{"position":[[26,2]]},"1164":{"position":[[5,2]]},"1240":{"position":[[85,2],[104,2]]},"1348":{"position":[[42,2]]},"1358":{"position":[[4,2]]},"1369":{"position":[[31,2]]},"1373":{"position":[[30,2]]},"1389":{"position":[[101,2]]},"1460":{"position":[[36,2]]},"1463":{"position":[[118,2],[227,2]]},"1499":{"position":[[102,2]]},"1519":{"position":[[261,2]]},"1635":{"position":[[145,2]]},"1652":{"position":[[145,2]]}}}],["均衡",{"_index":164,"t":{"851":{"position":[[137,2]]}}}],["坚信",{"_index":202,"t":{"851":{"position":[[252,2]]}}}],["垃圾",{"_index":980,"t":{"1168":{"position":[[2,2],[27,2],[123,2]]}}}],["型",{"_index":1095,"t":{"1209":{"position":[[3696,1],[3978,1],[5610,1]]},"1443":{"position":[[3696,1],[3978,1],[5610,1]]}}}],["型式",{"_index":1092,"t":{"1209":{"position":[[2928,2]]},"1443":{"position":[[2928,2]]}}}],["培训",{"_index":1230,"t":{"1463":{"position":[[154,2]]},"1547":{"position":[[127,2]]}}}],["基于",{"_index":586,"t":{"958":{"position":[[82,2]]},"1238":{"position":[[82,2]]},"1547":{"position":[[160,2]]}}}],["基本",{"_index":65,"t":{"847":{"position":[[136,2]]},"945":{"position":[[15,2]]},"1225":{"position":[[15,2]]},"1543":{"position":[[53,2]]}}}],["基础",{"_index":1089,"t":{"1209":{"position":[[1141,2]]},"1443":{"position":[[1141,2]]},"1513":{"position":[[46,2]]}}}],["堆",{"_index":1004,"t":{"1168":{"position":[[542,1]]}}}],["堆栈",{"_index":1008,"t":{"1170":{"position":[[74,2],[139,2],[165,2],[188,2],[539,2],[640,2]]},"1177":{"position":[[138,2]]}}}],["塑造",{"_index":245,"t":{"851":{"position":[[446,2]]}}}],["增加",{"_index":275,"t":{"851":{"position":[[569,2]]},"958":{"position":[[45,2]]},"962":{"position":[[43,2]]},"967":{"position":[[2,2],[100,2],[139,2]]},"969":{"position":[[0,2],[42,2]]},"983":{"position":[[2,2],[134,2],[170,2],[396,2]]},"985":{"position":[[2,2],[405,2]]},"993":{"position":[[1185,2]]},"1025":{"position":[[289,2]]},"1037":{"position":[[379,2],[793,2]]},"1039":{"position":[[2,2]]},"1044":{"position":[[5,2]]},"1059":{"position":[[675,2],[1089,2]]},"1082":{"position":[[178,2]]},"1084":{"position":[[248,2]]},"1088":{"position":[[184,2]]},"1148":{"position":[[351,2],[452,2]]},"1183":{"position":[[43,2]]},"1188":{"position":[[2,2],[100,2],[139,2]]},"1190":{"position":[[0,2],[42,2]]},"1216":{"position":[[2,2],[134,2],[170,2],[396,2]]},"1218":{"position":[[2,2],[405,2]]},"1238":{"position":[[45,2]]},"1246":{"position":[[1185,2]]},"1254":{"position":[[379,2],[793,2]]},"1256":{"position":[[2,2]]},"1288":{"position":[[289,2]]},"1308":{"position":[[178,2]]},"1310":{"position":[[248,2]]},"1314":{"position":[[184,2]]},"1319":{"position":[[5,2]]},"1334":{"position":[[675,2],[1089,2]]},"1367":{"position":[[39,2]]},"1373":{"position":[[19,2]]},"1470":{"position":[[97,2]]}}}],["增大",{"_index":1183,"t":{"1404":{"position":[[12,2]]}}}],["增强",{"_index":1068,"t":{"1207":{"position":[[124,2]]},"1441":{"position":[[124,2]]}}}],["增长",{"_index":218,"t":{"851":{"position":[[320,2],[439,2],[614,2]]},"1168":{"position":[[150,2]]}}}],["声明",{"_index":1081,"t":{"1209":{"position":[[194,2]]},"1443":{"position":[[194,2]]}}}],["处",{"_index":1429,"t":{"1608":{"position":[[3,1]]}}}],["处在",{"_index":1408,"t":{"1577":{"position":[[362,2]]}}}],["处理",{"_index":577,"t":{"950":{"position":[[1278,2]]},"967":{"position":[[6,2],[104,2]]},"993":{"position":[[1203,2],[1223,2],[1240,2],[1838,2]]},"1001":{"position":[[865,2],[906,2],[1535,2],[1576,2]]},"1013":{"position":[[3,2]]},"1025":{"position":[[378,2],[591,2],[608,2],[1163,2]]},"1031":{"position":[[307,2]]},"1130":{"position":[[972,2]]},"1146":{"position":[[27,2]]},"1188":{"position":[[6,2],[104,2]]},"1200":{"position":[[1250,2],[1335,2]]},"1205":{"position":[[1243,2]]},"1209":{"position":[[58,2],[162,2],[431,2],[1944,2]]},"1230":{"position":[[1278,2]]},"1246":{"position":[[1203,2],[1223,2],[1240,2],[1838,2]]},"1264":{"position":[[865,2],[906,2],[1535,2],[1576,2]]},"1276":{"position":[[3,2]]},"1288":{"position":[[378,2],[591,2],[608,2],[1163,2]]},"1294":{"position":[[307,2]]},"1360":{"position":[[143,2]]},"1369":{"position":[[13,2]]},"1389":{"position":[[105,2]]},"1434":{"position":[[1250,2],[1335,2]]},"1439":{"position":[[1243,2]]},"1443":{"position":[[58,2],[162,2],[431,2],[1944,2]]},"1463":{"position":[[93,2],[149,2]]},"1494":{"position":[[37,2],[52,2]]},"1496":{"position":[[1082,2]]},"1543":{"position":[[112,2]]}}}],["处理事件",{"_index":601,"t":{"967":{"position":[[307,4]]},"1025":{"position":[[386,4]]},"1188":{"position":[[307,4]]},"1288":{"position":[[386,4]]}}}],["处理器",{"_index":699,"t":{"1001":{"position":[[1417,3]]},"1209":{"position":[[257,3],[3228,3]]},"1264":{"position":[[1417,3]]},"1443":{"position":[[257,3],[3228,3]]}}}],["处理结果",{"_index":610,"t":{"981":{"position":[[44,4]]},"1214":{"position":[[44,4]]}}}],["处理错误",{"_index":1245,"t":{"1494":{"position":[[2,4]]}}}],["复制",{"_index":119,"t":{"849":{"position":[[70,2]]},"1508":{"position":[[1137,2]]}}}],["复杂",{"_index":288,"t":{"853":{"position":[[6,2]]},"958":{"position":[[73,2]]},"960":{"position":[[102,2]]},"1238":{"position":[[73,2]]},"1240":{"position":[[102,2]]},"1356":{"position":[[57,2]]},"1358":{"position":[[193,2]]},"1431":{"position":[[59,2]]},"1463":{"position":[[114,2]]}}}],["复杂度",{"_index":1130,"t":{"1373":{"position":[[21,3]]}}}],["外置",{"_index":717,"t":{"1005":{"position":[[21,2]]},"1268":{"position":[[21,2]]}}}],["外部命令",{"_index":885,"t":{"1111":{"position":[[14,4]]},"1113":{"position":[[21,4]]},"1134":{"position":[[20,4],[200,4]]}}}],["多",{"_index":309,"t":{"853":{"position":[[87,1]]},"921":{"position":[[87,1]]},"938":{"position":[[69,1]]},"1009":{"position":[[76,1]]},"1072":{"position":[[80,1]]},"1136":{"position":[[11,1]]},"1168":{"position":[[218,1]]},"1181":{"position":[[57,1]]},"1200":{"position":[[1285,1]]},"1272":{"position":[[76,1]]},"1298":{"position":[[80,1]]},"1434":{"position":[[1285,1]]},"1452":{"position":[[498,1]]},"1508":{"position":[[950,1]]}}}],["多个",{"_index":467,"t":{"926":{"position":[[55,2],[69,2]]},"936":{"position":[[215,2],[229,2]]},"940":{"position":[[84,2]]},"1144":{"position":[[12,2],[354,2],[686,2]]},"1146":{"position":[[17,2]]},"1148":{"position":[[2,2]]},"1150":{"position":[[1,2],[445,2]]},"1152":{"position":[[31,2]]},"1154":{"position":[[17,2]]},"1158":{"position":[[334,2]]},"1160":{"position":[[21,2]]},"1164":{"position":[[43,2],[192,2],[285,2],[415,2]]},"1424":{"position":[[159,2]]}}}],["多元",{"_index":12,"t":{"845":{"position":[[17,2]]}}}],["多少",{"_index":953,"t":{"1154":{"position":[[394,2]]}}}],["多次",{"_index":463,"t":{"926":{"position":[[28,2]]},"936":{"position":[[167,2]]},"940":{"position":[[47,2]]}}}],["多用户",{"_index":1291,"t":{"1508":{"position":[[946,3]]}}}],["多种",{"_index":975,"t":{"1166":{"position":[[43,2]]},"1207":{"position":[[101,2]]},"1209":{"position":[[705,2]]},"1441":{"position":[[101,2]]},"1443":{"position":[[705,2]]}}}],["多线程",{"_index":1379,"t":{"1554":{"position":[[60,3],[67,3]]},"1603":{"position":[[1,3]]}}}],["大",{"_index":21,"t":{"847":{"position":[[0,1]]},"851":{"position":[[49,1]]},"945":{"position":[[104,1],[135,1]]},"1168":{"position":[[204,1]]},"1225":{"position":[[104,1],[135,1]]},"1343":{"position":[[474,1]]},"1356":{"position":[[9,1]]},"1358":{"position":[[166,1]]},"1360":{"position":[[60,1]]},"1494":{"position":[[45,1]]}}}],["大不相同",{"_index":307,"t":{"853":{"position":[[65,4]]}}}],["大于",{"_index":1208,"t":{"1452":{"position":[[43,2]]}}}],["大写",{"_index":1214,"t":{"1452":{"position":[[271,2]]}}}],["大多",{"_index":291,"t":{"853":{"position":[[15,2]]}}}],["大多数",{"_index":128,"t":{"851":{"position":[[1,3]]},"1635":{"position":[[142,3]]},"1652":{"position":[[142,3]]}}}],["大小",{"_index":1011,"t":{"1170":{"position":[[190,2]]}}}],["大括号",{"_index":1149,"t":{"1383":{"position":[[121,3]]}}}],["大规模",{"_index":658,"t":{"997":{"position":[[74,3]]},"1260":{"position":[[74,3]]}}}],["大部分",{"_index":1227,"t":{"1463":{"position":[[95,3]]}}}],["大顺军",{"_index":394,"t":{"921":{"position":[[58,3]]}}}],["天然",{"_index":747,"t":{"1015":{"position":[[1988,2]]},"1278":{"position":[[1988,2]]}}}],["失效",{"_index":1270,"t":{"1508":{"position":[[375,2]]}}}],["失败",{"_index":437,"t":{"921":{"position":[[223,2]]},"1375":{"position":[[80,2]]},"1527":{"position":[[213,2],[316,2],[471,2]]},"1532":{"position":[[240,2],[343,2],[494,2]]},"1625":{"position":[[177,2],[301,2]]},"1627":{"position":[[197,2]]},"1631":{"position":[[186,2],[384,2]]},"1642":{"position":[[177,2],[301,2]]},"1644":{"position":[[197,2]]},"1648":{"position":[[186,2],[384,2]]},"1661":{"position":[[200,2]]},"1662":{"position":[[177,2]]}}}],["奉",{"_index":262,"t":{"851":{"position":[[515,1]]}}}],["套",{"_index":815,"t":{"1068":{"position":[[187,1]]}}}],["奴隶",{"_index":412,"t":{"921":{"position":[[120,2]]}}}],["好景不长",{"_index":31,"t":{"847":{"position":[[29,4]]}}}],["如下",{"_index":807,"t":{"1068":{"position":[[2,2],[167,2]]},"1108":{"position":[[140,2]]},"1172":{"position":[[459,2]]},"1375":{"position":[[4,2],[89,2]]}}}],["如今",{"_index":305,"t":{"853":{"position":[[60,2]]},"1552":{"position":[[91,2]]}}}],["如何",{"_index":1232,"t":{"1463":{"position":[[162,2]]},"1543":{"position":[[4,2],[110,2],[219,2],[293,2]]}}}],["如同",{"_index":114,"t":{"849":{"position":[[56,2]]},"921":{"position":[[3,2]]}}}],["如果",{"_index":78,"t":{"847":{"position":[[177,2]]},"926":{"position":[[20,2]]},"940":{"position":[[15,2],[69,2]]},"1001":{"position":[[1740,2]]},"1082":{"position":[[188,2],[299,2]]},"1100":{"position":[[452,2]]},"1104":{"position":[[0,2],[207,2],[472,2]]},"1144":{"position":[[617,2]]},"1148":{"position":[[0,2]]},"1164":{"position":[[144,2],[189,2],[228,2],[334,2],[371,2]]},"1203":{"position":[[112,2],[202,2]]},"1264":{"position":[[1740,2]]},"1308":{"position":[[188,2],[299,2]]},"1431":{"position":[[53,2]]},"1437":{"position":[[112,2],[202,2]]},"1501":{"position":[[156,2]]},"1508":{"position":[[356,2],[463,2],[842,2],[1038,2]]},"1517":{"position":[[0,2]]},"1519":{"position":[[183,2]]}}}],["妥善",{"_index":1364,"t":{"1547":{"position":[[69,2]]}}}],["始终",{"_index":1244,"t":{"1494":{"position":[[0,2]]}}}],["婚姻",{"_index":290,"t":{"853":{"position":[[13,2],[39,2]]}}}],["媒妁之言",{"_index":294,"t":{"853":{"position":[[23,4]]}}}],["子",{"_index":1192,"t":{"1409":{"position":[[56,1]]},"1418":{"position":[[112,1],[127,1],[250,1]]},"1431":{"position":[[4,1]]},"1577":{"position":[[151,1],[364,1]]},"1627":{"position":[[8,1]]},"1644":{"position":[[8,1]]},"1661":{"position":[[174,1],[272,1],[351,1],[431,1]]},"1662":{"position":[[12,1],[27,1],[151,1],[249,1],[325,1],[396,1],[540,1]]},"1664":{"position":[[179,1],[472,1],[568,1],[580,1],[625,1],[643,1],[733,1]]}}}],["子串",{"_index":1212,"t":{"1452":{"position":[[197,2],[596,2]]}}}],["字",{"_index":723,"t":{"1007":{"position":[[58,1]]},"1011":{"position":[[151,1]]},"1270":{"position":[[58,1]]},"1274":{"position":[[151,1]]},"1367":{"position":[[50,1],[61,1]]},"1389":{"position":[[224,1],[240,1]]},"1400":{"position":[[3,1],[275,1]]},"1406":{"position":[[90,1]]},"1446":{"position":[[35,1]]},"1452":{"position":[[17,1],[612,1]]},"1463":{"position":[[134,1]]},"1494":{"position":[[13,1]]},"1658":{"position":[[102,1],[111,1]]}}}],["字母",{"_index":1211,"t":{"1452":{"position":[[161,2],[176,2]]}}}],["字符",{"_index":1219,"t":{"1452":{"position":[[456,2],[483,2],[501,2],[539,2],[575,2]]}}}],["字符串",{"_index":353,"t":{"878":{"position":[[2,3]]},"901":{"position":[[1,3]]},"908":{"position":[[2,3]]},"915":{"position":[[2,3]]},"993":{"position":[[231,3]]},"1025":{"position":[[380,3]]},"1130":{"position":[[975,3]]},"1246":{"position":[[231,3]]},"1288":{"position":[[380,3]]},"1452":{"position":[[69,3],[90,3],[436,3]]},"1454":{"position":[[14,3]]}}}],["字节",{"_index":793,"t":{"1047":{"position":[[307,2]]},"1051":{"position":[[72,2]]},"1075":{"position":[[71,2]]},"1301":{"position":[[71,2]]},"1322":{"position":[[307,2]]},"1326":{"position":[[72,2]]},"1452":{"position":[[499,2]]}}}],["存储",{"_index":784,"t":{"1037":{"position":[[320,2]]},"1075":{"position":[[0,2]]},"1088":{"position":[[188,2]]},"1100":{"position":[[192,2]]},"1102":{"position":[[14,2]]},"1106":{"position":[[10,2]]},"1108":{"position":[[125,2]]},"1254":{"position":[[320,2]]},"1301":{"position":[[0,2]]},"1314":{"position":[[188,2]]},"1400":{"position":[[17,2]]},"1496":{"position":[[938,2],[1113,2]]},"1508":{"position":[[912,2]]}}}],["存储用户",{"_index":845,"t":{"1093":{"position":[[23,4]]},"1106":{"position":[[15,4]]}}}],["存在",{"_index":68,"t":{"847":{"position":[[148,2]]},"921":{"position":[[240,2]]},"924":{"position":[[50,2]]}}}],["孤儿",{"_index":1438,"t":{"1656":{"position":[[0,2]]}}}],["孤儿院",{"_index":1450,"t":{"1661":{"position":[[24,3]]}}}],["孩子",{"_index":297,"t":{"853":{"position":[[33,2],[76,2],[83,2],[130,2]]}}}],["它们",{"_index":450,"t":{"924":{"position":[[45,2],[59,2]]},"1508":{"position":[[338,2],[380,2],[510,2]]}}}],["安全",{"_index":57,"t":{"847":{"position":[[108,2]]},"1017":{"position":[[111,2]]},"1019":{"position":[[39,2]]},"1093":{"position":[[10,2]]},"1098":{"position":[[488,2]]},"1106":{"position":[[13,2]]},"1138":{"position":[[46,2]]},"1158":{"position":[[348,2]]},"1164":{"position":[[16,2],[178,2]]},"1205":{"position":[[8,2],[132,2]]},"1209":{"position":[[3025,2]]},"1280":{"position":[[111,2]]},"1282":{"position":[[39,2]]},"1439":{"position":[[8,2],[132,2]]},"1443":{"position":[[3025,2]]},"1521":{"position":[[68,2]]}}}],["安全性",{"_index":1309,"t":{"1519":{"position":[[43,3],[129,3],[255,3]]},"1521":{"position":[[91,3],[118,3]]},"1524":{"position":[[127,3]]},"1545":{"position":[[193,3]]}}}],["安全措施",{"_index":1311,"t":{"1519":{"position":[[91,4]]}}}],["安装",{"_index":853,"t":{"1095":{"position":[[22,2]]},"1346":{"position":[[0,2]]},"1350":{"position":[[0,2]]},"1354":{"position":[[0,2]]},"1508":{"position":[[1102,2],[1121,2]]},"1615":{"position":[[22,2]]},"1620":{"position":[[22,2]]}}}],["完全",{"_index":357,"t":{"882":{"position":[[9,2]]},"1519":{"position":[[72,2]]}}}],["完成",{"_index":896,"t":{"1132":{"position":[[550,2]]},"1142":{"position":[[104,2],[214,2]]},"1148":{"position":[[164,2],[260,2],[411,2],[431,2]]},"1205":{"position":[[1245,2]]},"1371":{"position":[[389,2]]},"1427":{"position":[[279,2]]},"1439":{"position":[[1245,2]]},"1568":{"position":[[197,2]]}}}],["完整",{"_index":593,"t":{"960":{"position":[[132,2]]},"973":{"position":[[178,2]]},"975":{"position":[[74,2]]},"987":{"position":[[297,2]]},"995":{"position":[[484,2]]},"1031":{"position":[[494,2]]},"1041":{"position":[[593,2]]},"1053":{"position":[[999,2]]},"1065":{"position":[[1409,2]]},"1090":{"position":[[995,2]]},"1194":{"position":[[178,2]]},"1196":{"position":[[74,2]]},"1220":{"position":[[297,2]]},"1240":{"position":[[132,2]]},"1248":{"position":[[484,2]]},"1258":{"position":[[593,2]]},"1294":{"position":[[494,2]]},"1316":{"position":[[995,2]]},"1328":{"position":[[999,2]]},"1340":{"position":[[1409,2]]}}}],["完毕",{"_index":940,"t":{"1148":{"position":[[21,2],[549,2]]}}}],["完美",{"_index":1317,"t":{"1521":{"position":[[65,2]]}}}],["宏",{"_index":1405,"t":{"1574":{"position":[[393,1]]}}}],["宗教",{"_index":9,"t":{"845":{"position":[[11,2]]}}}],["官方",{"_index":1100,"t":{"1343":{"position":[[426,2]]},"1358":{"position":[[38,2]]},"1375":{"position":[[213,2]]},"1610":{"position":[[7,2]]},"1613":{"position":[[27,2]]},"1618":{"position":[[27,2]]},"1637":{"position":[[0,2]]},"1654":{"position":[[0,2]]}}}],["定义",{"_index":422,"t":{"921":{"position":[[156,2],[173,2]]},"924":{"position":[[31,2]]},"926":{"position":[[13,2],[53,2]]},"929":{"position":[[105,2]]},"931":{"position":[[99,2],[190,2],[212,2]]},"934":{"position":[[122,2]]},"936":{"position":[[169,2],[247,2]]},"940":{"position":[[21,2],[49,2]]},"950":{"position":[[69,2],[332,2]]},"967":{"position":[[175,2]]},"983":{"position":[[46,2]]},"993":{"position":[[0,2],[50,2],[333,2]]},"1001":{"position":[[208,2]]},"1025":{"position":[[0,2],[91,2],[201,2],[432,2]]},"1037":{"position":[[0,2],[50,2],[249,2]]},"1188":{"position":[[175,2]]},"1209":{"position":[[183,2]]},"1216":{"position":[[46,2]]},"1230":{"position":[[69,2],[332,2]]},"1246":{"position":[[0,2],[50,2],[333,2]]},"1254":{"position":[[0,2],[50,2],[249,2]]},"1264":{"position":[[208,2]]},"1288":{"position":[[0,2],[91,2],[201,2],[432,2]]},"1383":{"position":[[13,2]]},"1414":{"position":[[45,2]]},"1418":{"position":[[125,2],[248,2]]},"1443":{"position":[[183,2]]},"1496":{"position":[[1740,2],[1788,2],[1878,2]]}}}],["定制",{"_index":1229,"t":{"1463":{"position":[[146,2]]}}}],["定时",{"_index":1066,"t":{"1207":{"position":[[108,2]]},"1441":{"position":[[108,2]]}}}],["宝贵",{"_index":19,"t":{"845":{"position":[[47,2]]}}}],["实体",{"_index":177,"t":{"851":{"position":[[175,2]]}}}],["实例",{"_index":571,"t":{"950":{"position":[[427,2]]},"1230":{"position":[[427,2]]},"1389":{"position":[[246,2],[259,2]]}}}],["实现",{"_index":72,"t":{"847":{"position":[[157,2]]},"958":{"position":[[19,2]]},"969":{"position":[[10,2],[52,2]]},"979":{"position":[[20,2]]},"985":{"position":[[415,2]]},"999":{"position":[[3,2]]},"1001":{"position":[[24,2],[76,2],[87,2],[136,2],[287,2],[311,2],[462,2],[982,2]]},"1015":{"position":[[2019,2]]},"1017":{"position":[[6,2]]},"1039":{"position":[[8,2]]},"1047":{"position":[[15,2],[79,2],[250,2]]},"1049":{"position":[[0,2]]},"1059":{"position":[[321,2]]},"1061":{"position":[[150,2]]},"1082":{"position":[[293,2],[303,2]]},"1136":{"position":[[39,2]]},"1190":{"position":[[10,2],[52,2]]},"1209":{"position":[[42,2],[153,2],[223,2],[709,2],[818,2]]},"1212":{"position":[[20,2]]},"1218":{"position":[[415,2]]},"1238":{"position":[[19,2]]},"1256":{"position":[[8,2]]},"1262":{"position":[[3,2]]},"1264":{"position":[[24,2],[76,2],[87,2],[136,2],[287,2],[311,2],[462,2],[982,2]]},"1278":{"position":[[2019,2]]},"1280":{"position":[[6,2]]},"1308":{"position":[[293,2],[303,2]]},"1322":{"position":[[15,2],[79,2],[250,2]]},"1324":{"position":[[0,2]]},"1334":{"position":[[321,2]]},"1336":{"position":[[150,2]]},"1389":{"position":[[91,2]]},"1443":{"position":[[42,2],[153,2],[223,2],[709,2],[818,2]]},"1463":{"position":[[166,2],[206,2]]},"1470":{"position":[[2,2],[49,2],[90,2],[104,2]]},"1484":{"position":[[24,2]]},"1496":{"position":[[949,2],[1049,2],[1264,2],[1447,2],[1566,2],[2076,2]]},"1513":{"position":[[48,2]]},"1547":{"position":[[50,2],[158,2]]},"1585":{"position":[[26,2]]},"1606":{"position":[[15,2]]}}}],["实现目标",{"_index":1093,"t":{"1209":{"position":[[2954,4]]},"1443":{"position":[[2954,4]]}}}],["实用功能",{"_index":976,"t":{"1166":{"position":[[45,4]]}}}],["实践",{"_index":759,"t":{"1019":{"position":[[41,2]]},"1282":{"position":[[41,2]]}}}],["实际",{"_index":173,"t":{"851":{"position":[[166,2]]},"1209":{"position":[[381,2]]},"1395":{"position":[[361,2]]},"1443":{"position":[[381,2]]},"1496":{"position":[[2336,2]]}}}],["实际上",{"_index":1404,"t":{"1574":{"position":[[387,3]]}}}],["客户端",{"_index":1347,"t":{"1543":{"position":[[223,3]]},"1547":{"position":[[96,3],[186,3]]}}}],["家庭",{"_index":286,"t":{"853":{"position":[[0,2]]}}}],["容器",{"_index":1301,"t":{"1513":{"position":[[40,2],[55,2]]},"1519":{"position":[[268,2]]},"1521":{"position":[[77,2]]},"1545":{"position":[[0,2],[27,2]]}}}],["寄存器",{"_index":1394,"t":{"1574":{"position":[[27,3],[56,3],[93,3],[124,3],[133,3],[168,3],[204,3],[240,3],[325,3],[340,3],[415,3]]}}}],["寄生",{"_index":109,"t":{"849":{"position":[[39,2]]}}}],["密不可分",{"_index":234,"t":{"851":{"position":[[383,4]]}}}],["密码",{"_index":842,"t":{"1093":{"position":[[13,2],[27,2]]},"1098":{"position":[[410,2],[501,2]]},"1100":{"position":[[203,2],[441,2],[454,2]]},"1102":{"position":[[3,2]]},"1104":{"position":[[4,2],[247,2]]},"1106":{"position":[[8,2],[19,2],[29,2],[47,2]]},"1108":{"position":[[34,2],[72,2],[133,2],[438,2]]},"1496":{"position":[[870,2]]}}}],["密钥",{"_index":797,"t":{"1051":{"position":[[76,2]]},"1326":{"position":[[76,2]]}}}],["富足",{"_index":250,"t":{"851":{"position":[[468,2]]}}}],["对",{"_index":74,"t":{"847":{"position":[[164,1]]},"849":{"position":[[89,1]]},"851":{"position":[[0,1],[209,1]]},"853":{"position":[[35,1]]},"1209":{"position":[[341,1]]},"1443":{"position":[[341,1]]},"1463":{"position":[[128,1],[208,1]]},"1494":{"position":[[10,1],[44,1]]},"1496":{"position":[[1069,1]]}}}],["对于",{"_index":954,"t":{"1156":{"position":[[0,2]]},"1508":{"position":[[756,2],[942,2],[963,2]]},"1519":{"position":[[252,2]]}}}],["对应",{"_index":928,"t":{"1144":{"position":[[607,2]]},"1170":{"position":[[127,2]]},"1386":{"position":[[23,2]]},"1547":{"position":[[183,2]]}}}],["对比",{"_index":1098,"t":{"1343":{"position":[[417,2]]},"1543":{"position":[[291,2]]}}}],["对称",{"_index":796,"t":{"1051":{"position":[[74,2]]},"1326":{"position":[[74,2]]}}}],["对象",{"_index":1073,"t":{"1209":{"position":[[90,2],[268,2],[334,2],[386,2],[391,2]]},"1443":{"position":[[90,2],[268,2],[334,2],[386,2],[391,2]]},"1470":{"position":[[28,2],[73,2]]},"1494":{"position":[[46,2]]}}}],["寻求",{"_index":90,"t":{"847":{"position":[[217,2]]}}}],["导入",{"_index":792,"t":{"1047":{"position":[[82,2],[2979,2]]},"1072":{"position":[[62,2]]},"1082":{"position":[[182,2],[274,2],[282,2]]},"1298":{"position":[[62,2]]},"1308":{"position":[[182,2],[274,2],[282,2]]},"1322":{"position":[[82,2],[2979,2]]}}}],["导出",{"_index":791,"t":{"1047":{"position":[[18,2]]},"1072":{"position":[[19,2]]},"1084":{"position":[[252,2]]},"1298":{"position":[[19,2]]},"1310":{"position":[[252,2]]},"1322":{"position":[[18,2]]}}}],["导致",{"_index":51,"t":{"847":{"position":[[93,2]]},"1068":{"position":[[468,2]]},"1181":{"position":[[50,2],[114,2]]},"1205":{"position":[[91,2]]},"1439":{"position":[[91,2]]}}}],["封装",{"_index":1045,"t":{"1200":{"position":[[1297,2]]},"1205":{"position":[[102,2]]},"1209":{"position":[[87,2],[229,2],[448,2]]},"1434":{"position":[[1297,2]]},"1439":{"position":[[102,2]]},"1443":{"position":[[87,2],[229,2],[448,2]]}}}],["将",{"_index":321,"t":{"853":{"position":[[137,1]]},"864":{"position":[[7,1]]},"921":{"position":[[95,1],[124,1],[153,1]]},"981":{"position":[[43,1]]},"1005":{"position":[[3,1]]},"1166":{"position":[[53,1]]},"1168":{"position":[[34,1],[106,1]]},"1200":{"position":[[1283,1]]},"1209":{"position":[[50,1],[84,1],[445,1]]},"1214":{"position":[[43,1]]},"1268":{"position":[[3,1]]},"1434":{"position":[[1283,1]]},"1443":{"position":[[50,1],[84,1],[445,1]]},"1496":{"position":[[1845,1],[1913,1]]},"1499":{"position":[[22,1]]},"1501":{"position":[[19,1],[41,1],[168,1]]},"1504":{"position":[[33,1]]},"1508":{"position":[[1055,1]]},"1521":{"position":[[18,1]]},"1608":{"position":[[0,1]]}}}],["小于",{"_index":869,"t":{"1104":{"position":[[226,2]]},"1452":{"position":[[56,2]]}}}],["小写",{"_index":1213,"t":{"1452":{"position":[[255,2]]}}}],["小国寡民",{"_index":97,"t":{"849":{"position":[[0,4]]}}}],["小麦",{"_index":115,"t":{"849":{"position":[[61,2]]}}}],["少",{"_index":1329,"t":{"1524":{"position":[[144,1]]}}}],["尝试",{"_index":1140,"t":{"1375":{"position":[[169,2]]}}}],["尤其",{"_index":43,"t":{"847":{"position":[[70,2]]},"1508":{"position":[[960,2]]}}}],["就",{"_index":837,"t":{"1082":{"position":[[198,1],[306,1]]},"1144":{"position":[[603,1]]},"1168":{"position":[[158,1]]},"1308":{"position":[[198,1],[306,1]]},"1508":{"position":[[500,1],[856,1]]}}}],["尽管",{"_index":1302,"t":{"1513":{"position":[[51,2]]}}}],["局部变量",{"_index":1390,"t":{"1572":{"position":[[45,4]]}}}],["属于",{"_index":850,"t":{"1095":{"position":[[7,2]]}}}],["崛起",{"_index":62,"t":{"847":{"position":[[125,2]]}}}],["崩溃",{"_index":541,"t":{"945":{"position":[[88,2]]},"1225":{"position":[[88,2]]},"1519":{"position":[[203,2]]}}}],["嵌入",{"_index":708,"t":{"1003":{"position":[[110,2]]},"1266":{"position":[[110,2]]}}}],["嵌入式",{"_index":1377,"t":{"1554":{"position":[[17,3],[26,3]]}}}],["嵌套",{"_index":1224,"t":{"1456":{"position":[[234,2]]},"1463":{"position":[[139,2]]}}}],["工业",{"_index":196,"t":{"851":{"position":[[234,2],[265,2]]}}}],["工业革命",{"_index":159,"t":{"851":{"position":[[114,4]]}}}],["工作",{"_index":943,"t":{"1148":{"position":[[196,2],[262,2]]},"1152":{"position":[[252,2]]},"1162":{"position":[[184,2]]},"1200":{"position":[[544,2]]},"1205":{"position":[[447,2]]},"1207":{"position":[[524,2]]},"1434":{"position":[[544,2]]},"1439":{"position":[[447,2]]},"1441":{"position":[[524,2]]},"1508":{"position":[[505,2]]},"1519":{"position":[[210,2]]},"1547":{"position":[[153,2]]},"1664":{"position":[[824,2],[862,2]]}}}],["工具",{"_index":103,"t":{"849":{"position":[[19,2]]},"1019":{"position":[[124,2]]},"1282":{"position":[[124,2]]},"1369":{"position":[[20,2]]},"1389":{"position":[[139,2]]},"1431":{"position":[[65,2]]},"1513":{"position":[[63,2]]},"1521":{"position":[[13,2],[72,2]]},"1550":{"position":[[25,2]]},"1552":{"position":[[122,2]]}}}],["工具箱",{"_index":1026,"t":{"1181":{"position":[[144,3]]}}}],["左",{"_index":1148,"t":{"1383":{"position":[[120,1]]}}}],["巧合",{"_index":106,"t":{"849":{"position":[[26,2]]}}}],["差异",{"_index":1157,"t":{"1386":{"position":[[60,2]]}}}],["已经",{"_index":1293,"t":{"1508":{"position":[[1428,2]]},"1552":{"position":[[97,2]]}}}],["市场机制",{"_index":183,"t":{"851":{"position":[[196,4]]}}}],["市场竞争",{"_index":281,"t":{"851":{"position":[[593,4]]}}}],["布尔",{"_index":1197,"t":{"1422":{"position":[[114,2]]}}}],["布尔值",{"_index":1215,"t":{"1452":{"position":[[325,3]]}}}],["希望",{"_index":274,"t":{"851":{"position":[[567,2]]}}}],["带",{"_index":1058,"t":{"1205":{"position":[[67,1]]},"1207":{"position":[[1876,1]]},"1209":{"position":[[2138,1]]},"1439":{"position":[[67,1]]},"1441":{"position":[[1876,1]]},"1443":{"position":[[2138,1]]}}}],["带有",{"_index":1178,"t":{"1400":{"position":[[7,2]]}}}],["帧",{"_index":1403,"t":{"1574":{"position":[[371,1]]}}}],["帮助",{"_index":337,"t":{"859":{"position":[[25,2]]},"924":{"position":[[66,2]]},"1431":{"position":[[48,2]]},"1550":{"position":[[74,2]]},"1592":{"position":[[12,2]]}}}],["常常",{"_index":381,"t":{"921":{"position":[[11,2]]}}}],["常用",{"_index":1009,"t":{"1170":{"position":[[92,2]]},"1209":{"position":[[47,2]]},"1443":{"position":[[47,2]]},"1499":{"position":[[82,2]]},"1513":{"position":[[37,2]]}}}],["常见",{"_index":884,"t":{"1108":{"position":[[176,2]]},"1463":{"position":[[98,2],[222,2]]}}}],["常见问题",{"_index":1367,"t":{"1547":{"position":[[213,4]]}}}],["干净",{"_index":1303,"t":{"1515":{"position":[[21,2]]}}}],["干扰",{"_index":588,"t":{"960":{"position":[[73,2]]},"1240":{"position":[[73,2]]}}}],["平凡",{"_index":397,"t":{"921":{"position":[[67,2]]}}}],["平凡人",{"_index":389,"t":{"921":{"position":[[32,3]]}}}],["平台",{"_index":1018,"t":{"1181":{"position":[[19,2]]}}}],["平滑",{"_index":761,"t":{"1019":{"position":[[59,2]]},"1282":{"position":[[59,2]]}}}],["平等",{"_index":64,"t":{"847":{"position":[[132,2],[159,2],[198,2]]}}}],["平衡",{"_index":91,"t":{"847":{"position":[[219,2]]}}}],["年",{"_index":1373,"t":{"1552":{"position":[[85,1]]}}}],["年龄",{"_index":1194,"t":{"1414":{"position":[[231,2]]},"1416":{"position":[[223,2]]}}}],["并且",{"_index":502,"t":{"940":{"position":[[56,2]]},"1138":{"position":[[50,2]]}}}],["并发",{"_index":565,"t":{"950":{"position":[[268,2]]},"1009":{"position":[[3,2]]},"1015":{"position":[[1973,2]]},"1019":{"position":[[37,2]]},"1146":{"position":[[42,2]]},"1150":{"position":[[458,2]]},"1164":{"position":[[125,2],[233,2],[258,2],[374,2]]},"1200":{"position":[[208,2]]},"1230":{"position":[[268,2]]},"1272":{"position":[[3,2]]},"1278":{"position":[[1973,2]]},"1282":{"position":[[37,2]]},"1369":{"position":[[15,2]]},"1371":{"position":[[10,2]]},"1381":{"position":[[8,2]]},"1434":{"position":[[208,2]]},"1554":{"position":[[75,2]]}}}],["并非",{"_index":98,"t":{"849":{"position":[[7,2]]},"851":{"position":[[34,2]]}}}],["幸福",{"_index":137,"t":{"851":{"position":[[27,2]]}}}],["广泛",{"_index":1368,"t":{"1550":{"position":[[28,2]]},"1552":{"position":[[115,2]]}}}],["序列化",{"_index":1169,"t":{"1389":{"position":[[143,3],[148,3]]},"1463":{"position":[[11,3],[31,3]]},"1466":{"position":[[65,3],[102,3]]},"1470":{"position":[[170,3]]},"1479":{"position":[[172,3]]},"1484":{"position":[[57,3]]}}}],["库",{"_index":851,"t":{"1095":{"position":[[16,1]]},"1166":{"position":[[21,1]]},"1343":{"position":[[9,1],[428,1]]},"1358":{"position":[[0,1],[40,1],[131,1]]},"1360":{"position":[[132,1]]},"1386":{"position":[[54,1]]},"1406":{"position":[[72,1]]},"1409":{"position":[[29,1]]},"1446":{"position":[[27,1]]},"1463":{"position":[[90,1]]},"1484":{"position":[[19,1]]},"1508":{"position":[[1107,1],[1127,1]]},"1517":{"position":[[35,1]]},"1547":{"position":[[41,1]]},"1583":{"position":[[168,1]]},"1615":{"position":[[12,1]]},"1620":{"position":[[12,1]]},"1635":{"position":[[128,1]]},"1637":{"position":[[14,1]]},"1652":{"position":[[128,1]]},"1654":{"position":[[14,1]]}}}],["应",{"_index":427,"t":{"921":{"position":[[185,1],[195,1]]},"1383":{"position":[[124,1]]}}}],["应当",{"_index":251,"t":{"851":{"position":[[474,2]]}}}],["应用",{"_index":1015,"t":{"1177":{"position":[[226,2]]},"1179":{"position":[[107,2]]},"1429":{"position":[[41,2]]},"1635":{"position":[[115,2]]},"1652":{"position":[[115,2]]}}}],["应用层",{"_index":1350,"t":{"1543":{"position":[[262,3]]}}}],["应用程序",{"_index":1034,"t":{"1181":{"position":[[224,4]]},"1416":{"position":[[114,4]]},"1554":{"position":[[35,4]]}}}],["应该",{"_index":1312,"t":{"1519":{"position":[[124,2]]},"1547":{"position":[[133,2]]}}}],["废弃",{"_index":1433,"t":{"1633":{"position":[[13,2]]},"1635":{"position":[[21,2]]},"1650":{"position":[[13,2]]},"1652":{"position":[[21,2]]}}}],["延迟",{"_index":1342,"t":{"1541":{"position":[[408,2]]},"1543":{"position":[[301,2]]}}}],["建立",{"_index":185,"t":{"851":{"position":[[204,2]]}}}],["建议",{"_index":317,"t":{"853":{"position":[[115,2]]},"1369":{"position":[[52,2]]},"1635":{"position":[[25,2]]},"1652":{"position":[[25,2]]}}}],["开发",{"_index":1249,"t":{"1496":{"position":[[1065,2]]},"1552":{"position":[[32,2]]},"1554":{"position":[[20,2]]},"1635":{"position":[[117,2]]},"1652":{"position":[[117,2]]}}}],["开发人员",{"_index":1371,"t":{"1550":{"position":[[76,4]]}}}],["开发者",{"_index":1025,"t":{"1181":{"position":[[141,3]]},"1389":{"position":[[62,3]]}}}],["开启",{"_index":24,"t":{"847":{"position":[[6,2]]},"1371":{"position":[[19,2]]},"1422":{"position":[[156,2]]}}}],["开头",{"_index":374,"t":{"908":{"position":[[5,2]]},"1452":{"position":[[219,2]]}}}],["开始",{"_index":152,"t":{"851":{"position":[[94,2]]},"1148":{"position":[[194,2],[470,2]]},"1152":{"position":[[250,2]]},"1552":{"position":[[86,2]]},"1568":{"position":[[27,2],[47,2]]}}}],["开放",{"_index":1054,"t":{"1203":{"position":[[634,2]]},"1437":{"position":[[634,2]]}}}],["开销",{"_index":545,"t":{"945":{"position":[[102,2]]},"1106":{"position":[[83,2]]},"1225":{"position":[[102,2]]},"1545":{"position":[[235,2]]}}}],["异常",{"_index":1334,"t":{"1527":{"position":[[1023,2]]},"1532":{"position":[[1205,2]]},"1583":{"position":[[160,2]]}}}],["异步",{"_index":770,"t":{"1022":{"position":[[39,2]]},"1209":{"position":[[160,2],[310,2],[629,2],[3029,2]]},"1285":{"position":[[39,2]]},"1371":{"position":[[3,2],[32,2]]},"1443":{"position":[[160,2],[310,2],[629,2],[3029,2]]}}}],["式",{"_index":983,"t":{"1168":{"position":[[22,1]]},"1200":{"position":[[1235,1]]},"1373":{"position":[[55,1]]},"1434":{"position":[[1235,1]]}}}],["引入",{"_index":1135,"t":{"1373":{"position":[[63,2]]}}}],["引导",{"_index":1297,"t":{"1511":{"position":[[63,2]]}}}],["引用",{"_index":1085,"t":{"1209":{"position":[[359,2]]},"1443":{"position":[[359,2]]}}}],["强",{"_index":494,"t":{"936":{"position":[[227,1]]},"1209":{"position":[[2966,1]]},"1443":{"position":[[2966,1]]},"1519":{"position":[[89,1]]},"1521":{"position":[[86,1]]}}}],["强制",{"_index":979,"t":{"1168":{"position":[[0,2],[32,2]]}}}],["强大",{"_index":1164,"t":{"1389":{"position":[[13,2]]},"1409":{"position":[[43,2]]},"1446":{"position":[[20,2]]},"1513":{"position":[[60,2]]},"1521":{"position":[[10,2]]},"1550":{"position":[[20,2]]}}}],["强盛时期",{"_index":29,"t":{"847":{"position":[[21,4]]}}}],["强行",{"_index":1134,"t":{"1373":{"position":[[61,2]]},"1386":{"position":[[88,2]]}}}],["强调",{"_index":1136,"t":{"1373":{"position":[[74,2]]}}}],["归咎于",{"_index":323,"t":{"853":{"position":[[140,3]]}}}],["当前",{"_index":870,"t":{"1104":{"position":[[228,2]]},"1170":{"position":[[2,2],[71,2]]},"1508":{"position":[[531,2]]},"1568":{"position":[[199,2]]},"1574":{"position":[[290,2],[398,2]]},"1577":{"position":[[25,2]]},"1579":{"position":[[24,2]]},"1623":{"position":[[102,2]]},"1629":{"position":[[121,2]]},"1640":{"position":[[102,2]]},"1646":{"position":[[121,2]]}}}],["当前目录",{"_index":890,"t":{"1115":{"position":[[106,4]]}}}],["形式",{"_index":520,"t":{"942":{"position":[[44,2]]},"1222":{"position":[[44,2]]}}}],["影响",{"_index":308,"t":{"853":{"position":[[74,2]]},"945":{"position":[[92,2]]},"1015":{"position":[[1965,2]]},"1225":{"position":[[92,2]]},"1278":{"position":[[1965,2]]},"1515":{"position":[[38,2]]}}}],["往往",{"_index":47,"t":{"847":{"position":[[83,2],[210,2]]},"851":{"position":[[398,2]]},"853":{"position":[[133,2]]}}}],["很多",{"_index":1276,"t":{"1508":{"position":[[476,2]]}}}],["循环",{"_index":576,"t":{"950":{"position":[[1275,2]]},"954":{"position":[[346,2]]},"993":{"position":[[1220,2]]},"1025":{"position":[[588,2]]},"1209":{"position":[[1946,2]]},"1230":{"position":[[1275,2]]},"1234":{"position":[[346,2]]},"1246":{"position":[[1220,2]]},"1288":{"position":[[588,2]]},"1443":{"position":[[1946,2]]}}}],["微",{"_index":1355,"t":{"1545":{"position":[[142,1]]}}}],["微内核",{"_index":511,"t":{"942":{"position":[[12,3]]},"950":{"position":[[71,3],[186,3],[424,3]]},"954":{"position":[[106,3]]},"960":{"position":[[0,3]]},"993":{"position":[[52,3],[335,3]]},"1025":{"position":[[434,3]]},"1037":{"position":[[52,3],[251,3]]},"1088":{"position":[[128,3]]},"1222":{"position":[[12,3]]},"1230":{"position":[[71,3],[186,3],[424,3]]},"1234":{"position":[[106,3]]},"1240":{"position":[[0,3]]},"1246":{"position":[[52,3],[335,3]]},"1254":{"position":[[52,3],[251,3]]},"1288":{"position":[[434,3]]},"1314":{"position":[[128,3]]}}}],["心理",{"_index":108,"t":{"849":{"position":[[36,2]]}}}],["必填",{"_index":1205,"t":{"1452":{"position":[[15,2]]}}}],["必然",{"_index":83,"t":{"847":{"position":[[192,2]]}}}],["必要",{"_index":1132,"t":{"1373":{"position":[[34,2]]},"1508":{"position":[[42,2],[1104,2]]}}}],["必需",{"_index":1287,"t":{"1508":{"position":[[785,2]]}}}],["必须",{"_index":73,"t":{"847":{"position":[[162,2]]},"1001":{"position":[[1750,2]]},"1082":{"position":[[291,2]]},"1264":{"position":[[1750,2]]},"1308":{"position":[[291,2]]},"1395":{"position":[[30,2]]},"1452":{"position":[[26,2],[113,2],[124,2],[143,2],[190,2],[213,2],[233,2],[252,2],[268,2],[279,2],[299,2],[322,2],[345,2],[365,2],[390,2],[407,2],[424,2],[522,2],[609,2]]}}}],["快",{"_index":859,"t":{"1098":{"position":[[468,1]]},"1348":{"position":[[10,1]]},"1524":{"position":[[78,1],[122,1]]}}}],["忽略",{"_index":839,"t":{"1082":{"position":[[309,2]]},"1308":{"position":[[309,2]]}}}],["忽视",{"_index":387,"t":{"921":{"position":[[26,2]]}}}],["态",{"_index":523,"t":{"942":{"position":[[51,1]]},"945":{"position":[[85,1],[126,1],[130,1]]},"947":{"position":[[84,1]]},"1015":{"position":[[1934,1]]},"1150":{"position":[[43,1],[466,1]]},"1164":{"position":[[27,1],[75,1]]},"1200":{"position":[[1272,1]]},"1222":{"position":[[51,1]]},"1225":{"position":[[85,1],[126,1],[130,1]]},"1227":{"position":[[84,1]]},"1278":{"position":[[1934,1]]},"1434":{"position":[[1272,1]]}}}],["思想",{"_index":666,"t":{"999":{"position":[[26,2]]},"1262":{"position":[[26,2]]}}}],["性",{"_index":1035,"t":{"1181":{"position":[[232,1]]}}}],["性能",{"_index":835,"t":{"1082":{"position":[[153,2]]},"1156":{"position":[[50,2]]},"1164":{"position":[[336,2]]},"1181":{"position":[[116,2],[170,2]]},"1308":{"position":[[153,2]]},"1343":{"position":[[451,2],[484,2]]},"1356":{"position":[[43,2]]},"1358":{"position":[[81,2]]},"1404":{"position":[[15,2]]},"1541":{"position":[[218,2]]},"1543":{"position":[[289,2]]},"1554":{"position":[[12,2]]}}}],["性能比",{"_index":1109,"t":{"1352":{"position":[[51,3]]}}}],["总",{"_index":1001,"t":{"1168":{"position":[[427,1],[466,1]]}}}],["总线",{"_index":569,"t":{"950":{"position":[[299,2]]},"1025":{"position":[[571,2]]},"1230":{"position":[[299,2]]},"1288":{"position":[[571,2]]}}}],["恢复",{"_index":1263,"t":{"1499":{"position":[[99,2]]},"1521":{"position":[[36,2]]}}}],["情况",{"_index":306,"t":{"853":{"position":[[63,2]]},"1130":{"position":[[978,2]]},"1168":{"position":[[78,2]]},"1463":{"position":[[70,2]]}}}],["意义",{"_index":439,"t":{"921":{"position":[[235,2]]}}}],["意味",{"_index":326,"t":{"853":{"position":[[150,2]]}}}],["意味着",{"_index":121,"t":{"849":{"position":[[86,3]]},"851":{"position":[[400,3],[537,3]]}}}],["意见",{"_index":315,"t":{"853":{"position":[[109,2]]}}}],["慢",{"_index":1185,"t":{"1404":{"position":[[28,1]]}}}],["成",{"_index":1046,"t":{"1200":{"position":[[1299,1]]},"1434":{"position":[[1299,1]]}}}],["成为",{"_index":270,"t":{"851":{"position":[[547,2],[610,2]]},"1501":{"position":[[20,2]]},"1552":{"position":[[99,2]]}}}],["成功",{"_index":113,"t":{"849":{"position":[[50,2],[82,2],[110,2]]},"921":{"position":[[164,2]]},"1025":{"position":[[136,2]]},"1200":{"position":[[180,2],[708,2]]},"1288":{"position":[[136,2]]},"1379":{"position":[[81,2]]},"1434":{"position":[[180,2],[708,2]]}}}],["成就",{"_index":400,"t":{"921":{"position":[[75,2]]}}}],["成本",{"_index":663,"t":{"997":{"position":[[95,2]]},"1098":{"position":[[519,2]]},"1104":{"position":[[7,2],[201,2],[474,2]]},"1108":{"position":[[94,2],[153,2]]},"1260":{"position":[[95,2]]}}}],["成败",{"_index":445,"t":{"921":{"position":[[266,2]]}}}],["我们",{"_index":420,"t":{"921":{"position":[[149,2]]},"924":{"position":[[68,2]]},"1122":{"position":[[13,2]]},"1463":{"position":[[122,2]]},"1496":{"position":[[1062,2]]},"1562":{"position":[[75,2]]},"1658":{"position":[[105,2],[184,2]]}}}],["我会",{"_index":599,"t":{"962":{"position":[[41,2]]},"1183":{"position":[[41,2]]}}}],["或者",{"_index":925,"t":{"1144":{"position":[[28,2]]},"1452":{"position":[[630,2]]},"1658":{"position":[[170,2]]}}}],["或许",{"_index":148,"t":{"851":{"position":[[78,2],[344,2]]},"921":{"position":[[110,2],[175,2]]}}}],["戳",{"_index":799,"t":{"1056":{"position":[[28,1]]},"1331":{"position":[[28,1]]}}}],["房地产",{"_index":169,"t":{"851":{"position":[[157,3]]}}}],["所以",{"_index":1448,"t":{"1658":{"position":[[182,2]]},"1662":{"position":[[538,2]]}}}],["所有",{"_index":342,"t":{"864":{"position":[[11,2]]},"875":{"position":[[9,2]]},"926":{"position":[[74,2]]},"934":{"position":[[151,2]]},"940":{"position":[[58,2]]},"950":{"position":[[809,2],[996,2]]},"954":{"position":[[276,2],[528,2]]},"1001":{"position":[[1772,2]]},"1015":{"position":[[1910,2]]},"1056":{"position":[[8,2]]},"1068":{"position":[[456,2]]},"1132":{"position":[[546,2]]},"1148":{"position":[[407,2],[427,2],[534,2]]},"1152":{"position":[[507,2],[590,2]]},"1170":{"position":[[628,2]]},"1209":{"position":[[906,2]]},"1230":{"position":[[809,2],[996,2]]},"1234":{"position":[[276,2],[528,2]]},"1264":{"position":[[1772,2]]},"1278":{"position":[[1910,2]]},"1331":{"position":[[8,2]]},"1369":{"position":[[29,2]]},"1443":{"position":[[906,2]]},"1508":{"position":[[709,2]]},"1574":{"position":[[25,2]]},"1577":{"position":[[31,2]]},"1579":{"position":[[30,2]]},"1658":{"position":[[87,2]]},"1664":{"position":[[173,2]]}}}],["手中",{"_index":313,"t":{"853":{"position":[[103,2]]}}}],["手动",{"_index":852,"t":{"1095":{"position":[[20,2]]},"1140":{"position":[[61,2]]},"1343":{"position":[[437,2]]},"1386":{"position":[[36,2]]},"1615":{"position":[[20,2]]},"1620":{"position":[[20,2]]}}}],["手段",{"_index":762,"t":{"1019":{"position":[[72,2]]},"1282":{"position":[[72,2]]}}}],["才",{"_index":212,"t":{"851":{"position":[[297,1]]},"1170":{"position":[[218,1]]}}}],["才能",{"_index":228,"t":{"851":{"position":[[359,2]]},"1395":{"position":[[137,2]]},"1519":{"position":[[34,2]]}}}],["打印",{"_index":328,"t":{"857":{"position":[[2,2],[15,2],[28,2]]},"859":{"position":[[14,2]]},"1056":{"position":[[21,2]]},"1170":{"position":[[69,2],[125,2]]},"1172":{"position":[[457,2]]},"1331":{"position":[[21,2]]},"1400":{"position":[[273,2]]},"1452":{"position":[[474,2]]},"1568":{"position":[[121,2]]},"1572":{"position":[[18,2]]}}}],["打开",{"_index":1432,"t":{"1625":{"position":[[173,2]]},"1631":{"position":[[182,2]]},"1642":{"position":[[173,2]]},"1648":{"position":[[182,2]]}}}],["打招呼",{"_index":1195,"t":{"1418":{"position":[[173,3]]}}}],["执行",{"_index":336,"t":{"859":{"position":[[20,2]]},"864":{"position":[[0,2]]},"926":{"position":[[81,2]]},"929":{"position":[[64,2],[148,2]]},"931":{"position":[[56,2],[197,2]]},"934":{"position":[[66,2],[149,2]]},"936":{"position":[[98,2],[179,2]]},"938":{"position":[[40,2]]},"940":{"position":[[65,2]]},"1015":{"position":[[2032,2]]},"1134":{"position":[[198,2]]},"1144":{"position":[[37,2],[605,2]]},"1148":{"position":[[19,2],[162,2]]},"1152":{"position":[[23,2]]},"1154":{"position":[[32,2],[239,2],[387,2]]},"1164":{"position":[[98,2]]},"1200":{"position":[[1227,2]]},"1205":{"position":[[114,2]]},"1209":{"position":[[116,2],[312,2],[1037,2],[3020,2]]},"1278":{"position":[[2032,2]]},"1371":{"position":[[34,2]]},"1427":{"position":[[28,2]]},"1434":{"position":[[1227,2]]},"1439":{"position":[[114,2]]},"1443":{"position":[[116,2],[312,2],[1037,2],[3020,2]]},"1501":{"position":[[150,2]]},"1506":{"position":[[63,2]]},"1508":{"position":[[1083,2]]},"1519":{"position":[[36,2]]},"1550":{"position":[[69,2]]},"1562":{"position":[[62,2],[87,2]]},"1568":{"position":[[85,2],[104,2],[175,2],[195,2]]},"1574":{"position":[[311,2]]},"1577":{"position":[[378,2],[424,2]]},"1583":{"position":[[88,2],[190,2]]},"1585":{"position":[[16,2]]},"1613":{"position":[[42,2]]},"1618":{"position":[[42,2]]},"1627":{"position":[[195,2]]},"1644":{"position":[[195,2]]},"1664":{"position":[[628,2]]}}}],["执行命令",{"_index":1082,"t":{"1209":{"position":[[196,4],[377,4]]},"1443":{"position":[[196,4],[377,4]]}}}],["扩展",{"_index":535,"t":{"945":{"position":[[45,2]]},"997":{"position":[[68,2]]},"1001":{"position":[[83,2]]},"1003":{"position":[[29,2]]},"1009":{"position":[[73,2]]},"1015":{"position":[[1941,2],[1994,2]]},"1095":{"position":[[14,2]]},"1209":{"position":[[291,2],[458,2],[3036,2],[6313,2]]},"1225":{"position":[[45,2]]},"1260":{"position":[[68,2]]},"1264":{"position":[[83,2]]},"1266":{"position":[[29,2]]},"1272":{"position":[[73,2]]},"1278":{"position":[[1941,2],[1994,2]]},"1443":{"position":[[291,2],[458,2],[3036,2],[6313,2]]},"1521":{"position":[[103,2]]},"1613":{"position":[[34,2]]},"1618":{"position":[[34,2]]}}}],["扩展性",{"_index":493,"t":{"936":{"position":[[223,3]]},"1200":{"position":[[1276,3]]},"1434":{"position":[[1276,3]]}}}],["扮演",{"_index":259,"t":{"851":{"position":[[501,2]]}}}],["找",{"_index":1151,"t":{"1386":{"position":[[6,1]]}}}],["找到",{"_index":1155,"t":{"1386":{"position":[[21,2]]}}}],["技术",{"_index":204,"t":{"851":{"position":[[267,2],[394,2]]},"997":{"position":[[38,2],[61,2]]},"1260":{"position":[[38,2],[61,2]]},"1513":{"position":[[43,2]]},"1521":{"position":[[80,2]]}}}],["抓取",{"_index":1449,"t":{"1658":{"position":[[192,2]]}}}],["投资者",{"_index":197,"t":{"851":{"position":[[239,3]]}}}],["报错",{"_index":806,"t":{"1068":{"position":[[0,2],[154,2]]},"1375":{"position":[[6,2]]}}}],["抽象",{"_index":681,"t":{"1001":{"position":[[130,2]]},"1264":{"position":[[130,2]]}}}],["抽象类",{"_index":1080,"t":{"1209":{"position":[[190,3]]},"1443":{"position":[[190,3]]}}}],["拆分",{"_index":503,"t":{"940":{"position":[[88,2]]}}}],["拓扑",{"_index":785,"t":{"1037":{"position":[[795,2]]},"1059":{"position":[[1091,2]]},"1254":{"position":[[795,2]]},"1334":{"position":[[1091,2]]}}}],["拷贝",{"_index":1424,"t":{"1594":{"position":[[2,2]]}}}],["持久",{"_index":830,"t":{"1070":{"position":[[4,2]]},"1296":{"position":[[4,2]]},"1463":{"position":[[54,2]]}}}],["持有",{"_index":1084,"t":{"1209":{"position":[[339,2]]},"1443":{"position":[[339,2]]}}}],["持续",{"_index":188,"t":{"851":{"position":[[212,2]]},"1613":{"position":[[94,2]]},"1618":{"position":[[94,2]]}}}],["挂载",{"_index":1266,"t":{"1508":{"position":[[40,2],[81,2],[280,2],[362,2],[467,2],[627,2],[846,2],[1042,2],[1140,2]]},"1519":{"position":[[187,2]]},"1545":{"position":[[45,2]]}}}],["指",{"_index":166,"t":{"851":{"position":[[145,1]]},"997":{"position":[[25,1]]},"1260":{"position":[[25,1]]}}}],["指令",{"_index":1399,"t":{"1574":{"position":[[292,2],[317,2]]},"1608":{"position":[[4,2],[19,2]]}}}],["指向",{"_index":1397,"t":{"1574":{"position":[[265,2]]}}}],["指定",{"_index":602,"t":{"971":{"position":[[53,2]]},"1027":{"position":[[17,2]]},"1192":{"position":[[53,2]]},"1290":{"position":[[17,2]]},"1386":{"position":[[90,2]]},"1452":{"position":[[348,2]]},"1499":{"position":[[40,2]]},"1501":{"position":[[14,2],[114,2],[160,2]]},"1562":{"position":[[11,2]]},"1566":{"position":[[9,2]]},"1568":{"position":[[178,2]]},"1570":{"position":[[193,2]]}}}],["指标",{"_index":733,"t":{"1011":{"position":[[8,2]]},"1274":{"position":[[8,2]]},"1541":{"position":[[371,2]]}}}],["指针",{"_index":1175,"t":{"1395":{"position":[[135,2],[183,2],[304,2],[322,2]]},"1574":{"position":[[263,2],[363,2],[372,2]]}}}],["挫折",{"_index":319,"t":{"853":{"position":[[126,2]]}}}],["捕捉",{"_index":1412,"t":{"1583":{"position":[[8,2],[130,2]]}}}],["捕获",{"_index":897,"t":{"1134":{"position":[[46,2]]}}}],["损坏",{"_index":1160,"t":{"1386":{"position":[[118,2]]},"1511":{"position":[[8,2],[70,2]]}}}],["损耗",{"_index":1184,"t":{"1404":{"position":[[17,2]]}}}],["换句话说",{"_index":1257,"t":{"1499":{"position":[[46,4]]}}}],["掌握",{"_index":312,"t":{"853":{"position":[[98,2]]},"940":{"position":[[139,2]]}}}],["排序",{"_index":786,"t":{"1037":{"position":[[797,2]]},"1059":{"position":[[1093,2]]},"1254":{"position":[[797,2]]},"1334":{"position":[[1093,2]]}}}],["排查",{"_index":810,"t":{"1068":{"position":[[147,2],[201,2],[295,2]]},"1181":{"position":[[190,2]]}}}],["排队",{"_index":1083,"t":{"1209":{"position":[[302,2]]},"1443":{"position":[[302,2]]}}}],["掠夺",{"_index":195,"t":{"851":{"position":[[231,2]]}}}],["接受",{"_index":596,"t":{"962":{"position":[[30,2]]},"1183":{"position":[[30,2]]}}}],["接口",{"_index":558,"t":{"950":{"position":[[77,2]]},"969":{"position":[[50,2]]},"985":{"position":[[413,2]]},"1001":{"position":[[11,2],[29,2],[123,2],[210,2],[227,2],[285,2],[596,2]]},"1025":{"position":[[440,2]]},"1037":{"position":[[58,2],[229,2]]},"1047":{"position":[[4,2],[148,2]]},"1049":{"position":[[4,2]]},"1056":{"position":[[19,2]]},"1082":{"position":[[193,2],[202,2]]},"1190":{"position":[[50,2]]},"1200":{"position":[[345,2]]},"1209":{"position":[[187,2],[226,2],[631,2],[696,2],[911,2],[3115,2]]},"1218":{"position":[[413,2]]},"1230":{"position":[[77,2]]},"1254":{"position":[[58,2],[229,2]]},"1264":{"position":[[11,2],[29,2],[123,2],[210,2],[227,2],[285,2],[596,2]]},"1288":{"position":[[440,2]]},"1308":{"position":[[193,2],[202,2]]},"1322":{"position":[[4,2],[148,2]]},"1324":{"position":[[4,2]]},"1331":{"position":[[19,2]]},"1377":{"position":[[8,2]]},"1434":{"position":[[345,2]]},"1443":{"position":[[187,2],[226,2],[631,2],[696,2],[911,2],[3115,2]]},"1463":{"position":[[203,2]]},"1470":{"position":[[20,2],[65,2],[88,2]]},"1496":{"position":[[1016,2],[1282,2],[1465,2],[1586,2],[2096,2]]},"1508":{"position":[[353,2],[753,2]]},"1545":{"position":[[189,2]]}}}],["接口定义",{"_index":559,"t":{"950":{"position":[[85,4]]},"1025":{"position":[[448,4]]},"1037":{"position":[[66,4]]},"1230":{"position":[[85,4]]},"1254":{"position":[[66,4]]},"1288":{"position":[[448,4]]}}}],["接口类型",{"_index":1167,"t":{"1389":{"position":[[107,4]]}}}],["接收",{"_index":1059,"t":{"1205":{"position":[[76,2]]},"1209":{"position":[[264,2]]},"1439":{"position":[[76,2]]},"1443":{"position":[[264,2]]},"1527":{"position":[[1215,2]]}}}],["接收数据",{"_index":919,"t":{"1142":{"position":[[237,4]]},"1203":{"position":[[407,4]]},"1437":{"position":[[407,4]]}}}],["接收端",{"_index":1049,"t":{"1203":{"position":[[40,3]]},"1437":{"position":[[40,3]]}}}],["接收者",{"_index":1086,"t":{"1209":{"position":[[372,3],[406,3]]},"1443":{"position":[[372,3],[406,3]]}}}],["控制",{"_index":751,"t":{"1015":{"position":[[2000,2]]},"1134":{"position":[[172,2]]},"1144":{"position":[[705,2]]},"1160":{"position":[[19,2]]},"1164":{"position":[[256,2],[299,2],[376,2],[429,2]]},"1207":{"position":[[176,2],[897,2]]},"1209":{"position":[[2074,2],[3009,2]]},"1278":{"position":[[2000,2]]},"1441":{"position":[[176,2],[897,2]]},"1443":{"position":[[2074,2],[3009,2]]},"1524":{"position":[[95,2],[137,2]]},"1543":{"position":[[258,2]]},"1550":{"position":[[71,2]]},"1577":{"position":[[259,2],[305,2]]},"1606":{"position":[[19,2]]},"1661":{"position":[[10,2]]},"1662":{"position":[[10,2]]}}}],["推动",{"_index":61,"t":{"847":{"position":[[119,2]]},"851":{"position":[[423,2],[590,2]]}}}],["推荐",{"_index":505,"t":{"940":{"position":[[119,2]]},"1164":{"position":[[303,2]]},"1431":{"position":[[81,2]]},"1519":{"position":[[272,2]]},"1633":{"position":[[29,2],[111,2]]},"1650":{"position":[[29,2],[111,2]]}}}],["推荐值",{"_index":871,"t":{"1104":{"position":[[230,3]]}}}],["推送",{"_index":612,"t":{"981":{"position":[[54,2]]},"1214":{"position":[[54,2]]}}}],["描述",{"_index":777,"t":{"1025":{"position":[[165,2]]},"1288":{"position":[[165,2]]},"1452":{"position":[[3,2]]},"1568":{"position":[[5,2]]}}}],["描述符",{"_index":1006,"t":{"1168":{"position":[[707,3]]}}}],["提交",{"_index":1090,"t":{"1209":{"position":[[2133,2]]},"1443":{"position":[[2133,2]]}}}],["提供",{"_index":18,"t":{"845":{"position":[[44,2]]},"847":{"position":[[106,2]]},"981":{"position":[[14,2]]},"1093":{"position":[[44,2]]},"1111":{"position":[[9,2]]},"1138":{"position":[[7,2]]},"1156":{"position":[[27,2]]},"1166":{"position":[[40,2]]},"1214":{"position":[[14,2]]},"1343":{"position":[[10,2]]},"1389":{"position":[[49,2]]},"1409":{"position":[[31,2]]},"1414":{"position":[[8,2]]},"1429":{"position":[[8,2]]},"1446":{"position":[[30,2]]},"1460":{"position":[[10,2]]},"1508":{"position":[[340,2],[424,2],[560,2]]},"1513":{"position":[[76,2]]},"1519":{"position":[[56,2]]},"1521":{"position":[[82,2]]},"1547":{"position":[[20,2]]},"1613":{"position":[[29,2],[82,2]]},"1618":{"position":[[29,2],[82,2]]},"1635":{"position":[[123,2]]},"1652":{"position":[[123,2]]}}}],["提前",{"_index":1426,"t":{"1596":{"position":[[38,2]]}}}],["提升",{"_index":160,"t":{"851":{"position":[[118,2]]},"1156":{"position":[[48,2]]},"1181":{"position":[[218,2]]}}}],["提取",{"_index":365,"t":{"894":{"position":[[5,2]]},"898":{"position":[[67,2],[103,2]]},"901":{"position":[[5,2]]},"915":{"position":[[0,2]]},"1406":{"position":[[88,2]]}}}],["提高",{"_index":457,"t":{"924":{"position":[[85,2]]},"997":{"position":[[98,2]]},"1025":{"position":[[310,2]]},"1209":{"position":[[67,2]]},"1260":{"position":[[98,2]]},"1288":{"position":[[310,2]]},"1360":{"position":[[135,2]]},"1443":{"position":[[67,2]]},"1460":{"position":[[70,2]]},"1543":{"position":[[316,2]]}}}],["插件",{"_index":518,"t":{"942":{"position":[[38,2]]},"958":{"position":[[37,2]]},"1222":{"position":[[38,2]]},"1238":{"position":[[37,2]]}}}],["握手",{"_index":823,"t":{"1068":{"position":[[318,2]]}}}],["携带",{"_index":1094,"t":{"1209":{"position":[[2964,2]]},"1443":{"position":[[2964,2]]}}}],["撤销",{"_index":1076,"t":{"1209":{"position":[[145,2]]},"1443":{"position":[[145,2]]}}}],["擅长",{"_index":117,"t":{"849":{"position":[[66,2]]}}}],["操作",{"_index":926,"t":{"1144":{"position":[[41,2]]},"1154":{"position":[[14,2],[42,2],[142,2]]},"1156":{"position":[[7,2],[32,2]]},"1164":{"position":[[205,2]]},"1200":{"position":[[1286,2]]},"1207":{"position":[[1069,2]]},"1209":{"position":[[150,2],[446,2]]},"1356":{"position":[[33,2]]},"1358":{"position":[[175,2]]},"1371":{"position":[[5,2]]},"1389":{"position":[[29,2],[193,2],[226,2]]},"1395":{"position":[[368,2]]},"1434":{"position":[[1286,2]]},"1441":{"position":[[1069,2]]},"1443":{"position":[[150,2],[446,2]]},"1519":{"position":[[39,2]]},"1633":{"position":[[44,2]]},"1650":{"position":[[44,2]]}}}],["操作系统",{"_index":985,"t":{"1168":{"position":[[44,4],[116,4]]},"1552":{"position":[[109,4]]},"1635":{"position":[[76,4]]},"1652":{"position":[[76,4]]}}}],["支持",{"_index":354,"t":{"878":{"position":[[17,2]]},"882":{"position":[[7,2],[26,2]]},"958":{"position":[[70,2]]},"962":{"position":[[19,2]]},"1007":{"position":[[26,2]]},"1015":{"position":[[1990,2]]},"1022":{"position":[[24,2]]},"1034":{"position":[[0,2]]},"1044":{"position":[[12,2]]},"1056":{"position":[[0,2]]},"1072":{"position":[[78,2]]},"1082":{"position":[[270,2]]},"1183":{"position":[[19,2]]},"1200":{"position":[[206,2]]},"1205":{"position":[[49,2]]},"1207":{"position":[[139,2],[209,2],[879,2]]},"1209":{"position":[[143,2],[294,2],[420,2],[473,2],[2067,2],[2141,2],[2962,2],[2998,2],[3693,2]]},"1238":{"position":[[70,2]]},"1251":{"position":[[0,2]]},"1270":{"position":[[26,2]]},"1278":{"position":[[1990,2]]},"1285":{"position":[[24,2]]},"1298":{"position":[[78,2]]},"1308":{"position":[[270,2]]},"1319":{"position":[[12,2]]},"1331":{"position":[[0,2]]},"1348":{"position":[[22,2]]},"1383":{"position":[[3,2]]},"1409":{"position":[[54,2]]},"1418":{"position":[[110,2]]},"1420":{"position":[[122,2]]},"1431":{"position":[[2,2],[10,2],[39,2]]},"1434":{"position":[[206,2]]},"1439":{"position":[[49,2]]},"1441":{"position":[[139,2],[209,2],[879,2]]},"1443":{"position":[[143,2],[294,2],[420,2],[473,2],[2067,2],[2141,2],[2962,2],[2998,2],[3693,2]]},"1446":{"position":[[45,2]]},"1508":{"position":[[944,2]]},"1587":{"position":[[5,2]]}}}],["收养",{"_index":1442,"t":{"1656":{"position":[[16,2]]},"1661":{"position":[[27,2]]}}}],["收到",{"_index":616,"t":{"981":{"position":[[84,2]]},"1142":{"position":[[259,2]]},"1214":{"position":[[84,2]]}}}],["收尾",{"_index":1455,"t":{"1664":{"position":[[860,2]]}}}],["收集",{"_index":974,"t":{"1166":{"position":[[33,2]]}}}],["改为",{"_index":701,"t":{"1001":{"position":[[1743,2]]},"1264":{"position":[[1743,2]]},"1499":{"position":[[38,2]]}}}],["改变",{"_index":1258,"t":{"1499":{"position":[[52,2]]},"1583":{"position":[[120,2]]}}}],["改善",{"_index":133,"t":{"851":{"position":[[14,2]]}}}],["改造",{"_index":779,"t":{"1025":{"position":[[367,2]]},"1288":{"position":[[367,2]]}}}],["攻击",{"_index":879,"t":{"1106":{"position":[[94,2]]}}}],["放在",{"_index":413,"t":{"921":{"position":[[127,2]]},"1082":{"position":[[145,2]]},"1308":{"position":[[145,2]]}}}],["放大",{"_index":382,"t":{"921":{"position":[[13,2]]}}}],["效果",{"_index":1238,"t":{"1470":{"position":[[117,2]]}}}],["效率",{"_index":1117,"t":{"1360":{"position":[[145,2]]}}}],["敏感",{"_index":1246,"t":{"1494":{"position":[[11,2]]},"1496":{"position":[[940,2],[1043,2],[1115,2]]},"1519":{"position":[[83,2]]}}}],["数",{"_index":965,"t":{"1164":{"position":[[235,1]]},"1508":{"position":[[675,1]]}}}],["数值",{"_index":955,"t":{"1156":{"position":[[5,2]]},"1164":{"position":[[118,2]]},"1581":{"position":[[11,2],[69,2]]}}}],["数字",{"_index":1210,"t":{"1452":{"position":[[146,2],[164,2]]}}}],["数据",{"_index":628,"t":{"993":{"position":[[10,2],[341,2]]},"1007":{"position":[[3,2]]},"1022":{"position":[[33,2]]},"1037":{"position":[[257,2]]},"1134":{"position":[[143,2]]},"1138":{"position":[[56,2]]},"1140":{"position":[[30,2]]},"1144":{"position":[[34,2],[600,2]]},"1150":{"position":[[20,2]]},"1164":{"position":[[19,2],[269,2],[345,2]]},"1205":{"position":[[93,2]]},"1246":{"position":[[10,2],[341,2]]},"1254":{"position":[[257,2]]},"1270":{"position":[[3,2]]},"1285":{"position":[[33,2]]},"1343":{"position":[[43,2]]},"1358":{"position":[[73,2]]},"1360":{"position":[[9,2]]},"1371":{"position":[[185,2],[199,2],[209,2]]},"1400":{"position":[[15,2]]},"1439":{"position":[[93,2]]},"1446":{"position":[[23,2]]},"1460":{"position":[[72,2]]},"1463":{"position":[[52,2]]},"1470":{"position":[[176,2]]},"1496":{"position":[[1085,2],[1914,2]]},"1508":{"position":[[447,2],[822,2]]},"1581":{"position":[[129,2]]}}}],["数据处理",{"_index":904,"t":{"1134":{"position":[[221,4]]}}}],["数据库",{"_index":1179,"t":{"1400":{"position":[[27,3]]}}}],["数据格式",{"_index":1228,"t":{"1463":{"position":[[107,4],[129,4]]}}}],["数组",{"_index":637,"t":{"993":{"position":[[255,2]]},"1246":{"position":[[255,2]]},"1352":{"position":[[37,2]]},"1358":{"position":[[141,2]]}}}],["数量",{"_index":938,"t":{"1146":{"position":[[47,2]]}}}],["整个",{"_index":542,"t":{"945":{"position":[[94,2]]},"1225":{"position":[[94,2]]}}}],["整体",{"_index":161,"t":{"851":{"position":[[121,2]]}}}],["文件",{"_index":348,"t":{"871":{"position":[[7,2]]},"875":{"position":[[20,2]]},"940":{"position":[[86,2]]},"1056":{"position":[[74,2]]},"1072":{"position":[[75,2]]},"1075":{"position":[[62,2]]},"1168":{"position":[[705,2]]},"1177":{"position":[[141,2]]},"1298":{"position":[[75,2]]},"1301":{"position":[[62,2]]},"1331":{"position":[[74,2]]},"1356":{"position":[[16,2]]},"1360":{"position":[[67,2]]},"1371":{"position":[[205,2]]},"1496":{"position":[[1038,2]]},"1508":{"position":[[391,2],[610,2],[713,2],[736,2],[782,2],[807,2],[923,2],[1144,2]]},"1511":{"position":[[73,2]]},"1517":{"position":[[40,2]]},"1524":{"position":[[91,2]]},"1527":{"position":[[395,2]]},"1532":{"position":[[422,2]]},"1543":{"position":[[66,2],[161,2],[239,2]]},"1545":{"position":[[53,2]]},"1547":{"position":[[79,2],[91,2]]},"1570":{"position":[[90,2]]},"1594":{"position":[[19,2]]},"1625":{"position":[[21,2],[175,2],[299,2],[334,2]]},"1631":{"position":[[13,2],[184,2],[417,2]]},"1633":{"position":[[42,2]]},"1642":{"position":[[21,2],[175,2],[299,2],[334,2]]},"1648":{"position":[[13,2],[184,2],[417,2]]},"1650":{"position":[[42,2]]}}}],["文件名",{"_index":361,"t":{"887":{"position":[[3,3]]},"894":{"position":[[1,3]]},"898":{"position":[[69,3],[105,3]]},"1075":{"position":[[37,3]]},"1301":{"position":[[37,3]]}}}],["文件系统",{"_index":536,"t":{"945":{"position":[[48,4]]},"1225":{"position":[[48,4]]},"1499":{"position":[[77,4]]},"1501":{"position":[[34,4]]},"1508":{"position":[[47,4],[333,4],[419,4],[554,4]]},"1511":{"position":[[54,4]]},"1519":{"position":[[139,4],[193,4]]},"1524":{"position":[[60,4],[131,4]]}}}],["文化",{"_index":8,"t":{"845":{"position":[[8,2]]},"849":{"position":[[5,2],[53,2],[79,2],[99,2],[107,2]]}}}],["文本",{"_index":340,"t":{"864":{"position":[[2,2],[8,2]]}}}],["文档",{"_index":1204,"t":{"1431":{"position":[[50,2]]},"1463":{"position":[[156,2]]},"1521":{"position":[[105,2]]},"1547":{"position":[[129,2]]},"1610":{"position":[[9,2]]},"1637":{"position":[[2,2]]},"1654":{"position":[[2,2]]}}}],["断点",{"_index":1383,"t":{"1562":{"position":[[82,2]]},"1568":{"position":[[18,2],[73,2]]},"1570":{"position":[[18,2],[59,2],[93,2],[135,2],[165,2],[195,2]]},"1577":{"position":[[360,2],[451,2]]},"1581":{"position":[[6,2],[64,2],[122,2]]},"1583":{"position":[[10,2],[40,2],[64,2],[93,2],[132,2]]},"1608":{"position":[[1,2]]}}}],["断言",{"_index":1102,"t":{"1343":{"position":[[441,2]]},"1358":{"position":[[56,2]]},"1379":{"position":[[79,2]]}}}],["新",{"_index":677,"t":{"1001":{"position":[[85,1]]},"1047":{"position":[[74,1]]},"1102":{"position":[[10,1]]},"1200":{"position":[[341,1]]},"1264":{"position":[[85,1]]},"1322":{"position":[[74,1]]},"1389":{"position":[[255,1]]},"1434":{"position":[[341,1]]},"1496":{"position":[[1175,1]]},"1501":{"position":[[22,1],[45,1],[116,1],[142,1]]},"1506":{"position":[[81,1]]},"1508":{"position":[[2,1],[1115,1],[1435,1]]}}}],["新增",{"_index":703,"t":{"1003":{"position":[[3,2],[136,2]]},"1015":{"position":[[1945,2]]},"1037":{"position":[[227,2]]},"1047":{"position":[[0,2]]},"1059":{"position":[[0,2]]},"1254":{"position":[[227,2]]},"1266":{"position":[[3,2],[136,2]]},"1278":{"position":[[1945,2]]},"1322":{"position":[[0,2]]},"1334":{"position":[[0,2]]}}}],["方式",{"_index":589,"t":{"960":{"position":[[79,2]]},"1001":{"position":[[89,2]]},"1122":{"position":[[18,2]]},"1136":{"position":[[37,2]]},"1138":{"position":[[39,2]]},"1164":{"position":[[0,2]]},"1207":{"position":[[105,2]]},"1209":{"position":[[44,2],[403,2]]},"1240":{"position":[[79,2]]},"1264":{"position":[[89,2]]},"1363":{"position":[[16,2]]},"1367":{"position":[[2,2]]},"1429":{"position":[[28,2]]},"1441":{"position":[[105,2]]},"1443":{"position":[[44,2],[403,2]]},"1519":{"position":[[66,2]]},"1547":{"position":[[106,2]]}}}],["方案",{"_index":1188,"t":{"1406":{"position":[[51,2]]},"1484":{"position":[[41,2],[60,2]]},"1547":{"position":[[31,2]]},"1613":{"position":[[79,2]]},"1618":{"position":[[79,2]]}}}],["方法",{"_index":600,"t":{"967":{"position":[[8,2],[106,2]]},"969":{"position":[[8,2]]},"979":{"position":[[22,2]]},"1001":{"position":[[151,2]]},"1015":{"position":[[1961,2]]},"1039":{"position":[[6,2]]},"1061":{"position":[[148,2]]},"1068":{"position":[[84,2],[149,2]]},"1082":{"position":[[204,2]]},"1086":{"position":[[81,2]]},"1111":{"position":[[19,2]]},"1148":{"position":[[49,2]]},"1188":{"position":[[8,2],[106,2]]},"1190":{"position":[[8,2]]},"1205":{"position":[[128,2]]},"1209":{"position":[[201,2],[285,2]]},"1212":{"position":[[22,2]]},"1256":{"position":[[6,2]]},"1264":{"position":[[151,2]]},"1278":{"position":[[1961,2]]},"1308":{"position":[[204,2]]},"1312":{"position":[[81,2]]},"1336":{"position":[[148,2]]},"1367":{"position":[[54,2]]},"1386":{"position":[[9,2],[26,2]]},"1389":{"position":[[207,2],[220,2]]},"1395":{"position":[[47,2],[356,2]]},"1404":{"position":[[24,2]]},"1414":{"position":[[43,2]]},"1439":{"position":[[128,2]]},"1443":{"position":[[201,2],[285,2]]},"1494":{"position":[[89,2]]},"1496":{"position":[[1095,2],[1911,2],[1953,2]]},"1564":{"position":[[2,2],[38,2],[89,2]]}}}],["方面",{"_index":1315,"t":{"1521":{"position":[[49,2]]}}}],["旁人",{"_index":314,"t":{"853":{"position":[[106,2]]}}}],["无法",{"_index":1016,"t":{"1179":{"position":[[75,2]]},"1203":{"position":[[167,2]]},"1437":{"position":[[167,2]]},"1508":{"position":[[501,2],[641,2],[650,2],[867,2],[1056,2]]},"1511":{"position":[[3,2]]},"1519":{"position":[[206,2],[214,2]]}}}],["无法访问",{"_index":1259,"t":{"1499":{"position":[[68,4]]},"1508":{"position":[[857,4]]}}}],["无论",{"_index":444,"t":{"921":{"position":[[264,2]]},"1154":{"position":[[392,2]]}}}],["无论是",{"_index":1360,"t":{"1547":{"position":[[34,3]]}}}],["无限",{"_index":1242,"t":{"1487":{"position":[[95,2]]}}}],["无需",{"_index":657,"t":{"997":{"position":[[72,2]]},"1003":{"position":[[8,2]]},"1158":{"position":[[353,2]]},"1260":{"position":[[72,2]]},"1266":{"position":[[8,2]]},"1343":{"position":[[444,2]]},"1373":{"position":[[17,2]]},"1596":{"position":[[45,2]]}}}],["日志",{"_index":578,"t":{"952":{"position":[[68,2]]},"1003":{"position":[[138,2]]},"1011":{"position":[[5,2]]},"1056":{"position":[[23,2],[58,2]]},"1061":{"position":[[0,2]]},"1068":{"position":[[293,2],[310,2]]},"1232":{"position":[[68,2]]},"1266":{"position":[[138,2]]},"1274":{"position":[[5,2]]},"1331":{"position":[[23,2],[58,2]]},"1336":{"position":[[0,2]]},"1360":{"position":[[71,2]]},"1547":{"position":[[121,2]]}}}],["日新月异",{"_index":226,"t":{"851":{"position":[[349,4]]}}}],["日期",{"_index":1216,"t":{"1452":{"position":[[353,2]]}}}],["旧",{"_index":790,"t":{"1047":{"position":[[10,1]]},"1059":{"position":[[241,1],[432,1]]},"1322":{"position":[[10,1]]},"1334":{"position":[[241,1],[432,1]]},"1527":{"position":[[136,1]]},"1532":{"position":[[163,1]]},"1543":{"position":[[174,1]]}}}],["旧版",{"_index":727,"t":{"1007":{"position":[[69,2]]},"1270":{"position":[[69,2]]}}}],["旧版本",{"_index":1305,"t":{"1517":{"position":[[31,3]]}}}],["旨在",{"_index":1231,"t":{"1463":{"position":[[158,2]]}}}],["时",{"_index":320,"t":{"853":{"position":[[128,1]]},"1003":{"position":[[7,1]]},"1022":{"position":[[53,1]]},"1072":{"position":[[17,1],[38,1]]},"1106":{"position":[[39,1]]},"1144":{"position":[[36,1]]},"1148":{"position":[[472,1],[509,1]]},"1150":{"position":[[22,1],[462,1]]},"1166":{"position":[[30,1]]},"1203":{"position":[[625,1]]},"1266":{"position":[[7,1]]},"1285":{"position":[[53,1]]},"1298":{"position":[[17,1],[38,1]]},"1343":{"position":[[483,1]]},"1373":{"position":[[9,1]]},"1389":{"position":[[25,1]]},"1395":{"position":[[314,1]]},"1406":{"position":[[7,1],[73,1]]},"1437":{"position":[[625,1]]},"1501":{"position":[[12,1],[32,1]]},"1508":{"position":[[443,1],[1012,1],[1098,1]]},"1511":{"position":[[10,1]]},"1515":{"position":[[13,1]]},"1543":{"position":[[152,1]]},"1550":{"position":[[68,1]]},"1577":{"position":[[369,1],[458,1]]},"1583":{"position":[[122,1],[162,1],[172,1]]},"1596":{"position":[[2,1],[49,1]]}}}],["时代",{"_index":23,"t":{"847":{"position":[[3,2]]},"921":{"position":[[105,2],[159,2]]}}}],["时间",{"_index":715,"t":{"1005":{"position":[[13,2]]},"1022":{"position":[[60,2]]},"1025":{"position":[[346,2]]},"1056":{"position":[[26,2]]},"1144":{"position":[[735,2]]},"1168":{"position":[[388,2],[469,2],[516,2]]},"1268":{"position":[[13,2]]},"1285":{"position":[[60,2]]},"1288":{"position":[[346,2]]},"1331":{"position":[[26,2]]},"1452":{"position":[[355,2]]},"1583":{"position":[[180,2]]},"1661":{"position":[[7,2]]},"1662":{"position":[[7,2]]}}}],["明代",{"_index":402,"t":{"921":{"position":[[80,2]]}}}],["明文",{"_index":846,"t":{"1093":{"position":[[32,2]]},"1106":{"position":[[24,2]]}}}],["明显",{"_index":972,"t":{"1164":{"position":[[340,2]]}}}],["易",{"_index":1042,"t":{"1200":{"position":[[1275,1]]},"1209":{"position":[[3035,1]]},"1434":{"position":[[1275,1]]},"1443":{"position":[[3035,1]]}}}],["易于",{"_index":539,"t":{"945":{"position":[[67,2]]},"1001":{"position":[[81,2]]},"1015":{"position":[[1939,2]]},"1225":{"position":[[67,2]]},"1264":{"position":[[81,2]]},"1278":{"position":[[1939,2]]}}}],["易变",{"_index":713,"t":{"1005":{"position":[[4,2]]},"1268":{"position":[[4,2]]}}}],["易用",{"_index":1200,"t":{"1429":{"position":[[15,2]]}}}],["映射",{"_index":1180,"t":{"1400":{"position":[[30,2]]},"1452":{"position":[[76,2],[97,2]]},"1574":{"position":[[409,2],[429,2],[444,2],[466,2]]},"1631":{"position":[[11,2]]},"1648":{"position":[[11,2]]}}}],["是否",{"_index":818,"t":{"1068":{"position":[[220,2],[402,2]]},"1082":{"position":[[268,2]]},"1100":{"position":[[443,2]]},"1104":{"position":[[33,2]]},"1106":{"position":[[56,2]]},"1108":{"position":[[99,2]]},"1200":{"position":[[178,2]]},"1203":{"position":[[91,2],[180,2],[630,2]]},"1308":{"position":[[268,2]]},"1434":{"position":[[178,2]]},"1437":{"position":[[91,2],[180,2],[630,2]]},"1454":{"position":[[17,2]]},"1577":{"position":[[257,2]]},"1658":{"position":[[5,2]]}}}],["是否是",{"_index":827,"t":{"1068":{"position":[[463,3]]}}}],["显",{"_index":982,"t":{"1168":{"position":[[21,1]]}}}],["显现",{"_index":158,"t":{"851":{"position":[[111,2]]}}}],["显示",{"_index":828,"t":{"1068":{"position":[[476,2]]},"1170":{"position":[[626,2]]},"1568":{"position":[[154,2]]},"1572":{"position":[[43,2],[68,2]]},"1574":{"position":[[91,2]]},"1658":{"position":[[109,2]]}}}],["显著",{"_index":1033,"t":{"1181":{"position":[[216,2]]}}}],["普通",{"_index":410,"t":{"921":{"position":[[114,2]]},"1358":{"position":[[27,2]]},"1367":{"position":[[6,2]]},"1404":{"position":[[22,2]]},"1583":{"position":[[38,2],[62,2]]}}}],["普通人",{"_index":247,"t":{"851":{"position":[[461,3]]},"921":{"position":[[50,3]]}}}],["智",{"_index":145,"t":{"851":{"position":[[68,1]]}}}],["智慧",{"_index":436,"t":{"921":{"position":[[218,2]]}}}],["暂停",{"_index":1002,"t":{"1168":{"position":[[467,2],[514,2]]},"1583":{"position":[[126,2]]}}}],["暴力",{"_index":878,"t":{"1106":{"position":[[92,2]]}}}],["暴力破解",{"_index":875,"t":{"1106":{"position":[[69,4]]}}}],["暴露",{"_index":1254,"t":{"1496":{"position":[[2344,2]]}}}],["更",{"_index":56,"t":{"847":{"position":[[104,1]]},"851":{"position":[[26,1],[403,1]]},"853":{"position":[[86,1]]},"921":{"position":[[204,1]]},"936":{"position":[[226,1]]},"940":{"position":[[158,1]]},"945":{"position":[[134,1]]},"958":{"position":[[72,1]]},"1098":{"position":[[487,1]]},"1140":{"position":[[40,1],[55,1]]},"1164":{"position":[[177,1],[222,1]]},"1168":{"position":[[217,1]]},"1200":{"position":[[1284,1]]},"1209":{"position":[[129,1]]},"1225":{"position":[[134,1]]},"1238":{"position":[[72,1]]},"1409":{"position":[[42,1]]},"1434":{"position":[[1284,1]]},"1443":{"position":[[129,1]]},"1499":{"position":[[37,1],[72,1]]},"1513":{"position":[[59,1]]},"1519":{"position":[[88,1]]},"1521":{"position":[[85,1],[114,1]]},"1524":{"position":[[77,1]]},"1613":{"position":[[84,1]]},"1618":{"position":[[84,1]]}}}],["更加",{"_index":430,"t":{"921":{"position":[[196,2]]},"1377":{"position":[[49,2]]}}}],["更好",{"_index":455,"t":{"924":{"position":[[70,2]]},"1633":{"position":[[94,2]]},"1650":{"position":[[94,2]]}}}],["更慢",{"_index":860,"t":{"1098":{"position":[[491,2]]}}}],["更改",{"_index":1411,"t":{"1581":{"position":[[13,2],[134,2]]}}}],["更新",{"_index":742,"t":{"1015":{"position":[[1914,2]]},"1044":{"position":[[3,2]]},"1051":{"position":[[22,2]]},"1056":{"position":[[5,2]]},"1063":{"position":[[22,2]]},"1104":{"position":[[37,2]]},"1106":{"position":[[49,2]]},"1278":{"position":[[1914,2]]},"1319":{"position":[[3,2]]},"1326":{"position":[[22,2]]},"1331":{"position":[[5,2]]},"1338":{"position":[[22,2]]},"1613":{"position":[[99,2]]},"1618":{"position":[[99,2]]}}}],["替代",{"_index":580,"t":{"958":{"position":[[8,2]]},"1238":{"position":[[8,2]]},"1406":{"position":[[49,2]]},"1545":{"position":[[161,2]]},"1613":{"position":[[77,2]]},"1618":{"position":[[77,2]]},"1633":{"position":[[130,2],[205,2]]},"1650":{"position":[[130,2],[205,2]]}}}],["替换",{"_index":341,"t":{"864":{"position":[[4,2],[22,2]]},"878":{"position":[[0,2],[21,2]]},"882":{"position":[[13,2]]},"945":{"position":[[69,2]]},"1001":{"position":[[978,2]]},"1047":{"position":[[1446,2],[2086,2]]},"1051":{"position":[[1,2],[13,2]]},"1059":{"position":[[20,2],[317,2]]},"1063":{"position":[[1,2],[13,2]]},"1072":{"position":[[15,2]]},"1225":{"position":[[69,2]]},"1264":{"position":[[978,2]]},"1298":{"position":[[15,2]]},"1322":{"position":[[1446,2],[2086,2]]},"1326":{"position":[[1,2],[13,2]]},"1334":{"position":[[20,2],[317,2]]},"1338":{"position":[[1,2],[13,2]]},"1352":{"position":[[26,2]]},"1358":{"position":[[127,2]]},"1608":{"position":[[6,2]]}}}],["最后",{"_index":484,"t":{"931":{"position":[[207,2]]}}}],["最大",{"_index":1010,"t":{"1170":{"position":[[163,2],[186,2]]},"1452":{"position":[[100,2]]}}}],["最小",{"_index":686,"t":{"1001":{"position":[[180,2]]},"1264":{"position":[[180,2]]},"1452":{"position":[[79,2]]}}}],["最小化",{"_index":516,"t":{"942":{"position":[[29,3]]},"1222":{"position":[[29,3]]}}}],["最早",{"_index":1372,"t":{"1552":{"position":[[39,2]]}}}],["最终",{"_index":475,"t":{"931":{"position":[[141,2]]},"1150":{"position":[[399,2]]},"1158":{"position":[[270,2]]}}}],["最近",{"_index":1003,"t":{"1168":{"position":[[510,2]]}}}],["有些",{"_index":1267,"t":{"1508":{"position":[[52,2]]}}}],["有人",{"_index":142,"t":{"851":{"position":[[59,2]]}}}],["有关",{"_index":1274,"t":{"1508":{"position":[[426,2]]}}}],["有助于",{"_index":507,"t":{"940":{"position":[[153,3]]}}}],["有效",{"_index":876,"t":{"1106":{"position":[[88,2]]}}}],["有用",{"_index":1316,"t":{"1521":{"position":[[53,2]]}}}],["有益",{"_index":122,"t":{"849":{"position":[[92,2]]}}}],["服务",{"_index":519,"t":{"942":{"position":[[41,2]]},"945":{"position":[[64,2],[86,2]]},"947":{"position":[[14,2],[41,2]]},"950":{"position":[[75,2],[219,2],[341,2],[566,2],[811,2],[998,2],[1280,2]]},"952":{"position":[[70,2]]},"954":{"position":[[147,2],[278,2],[455,2],[530,2]]},"958":{"position":[[33,2],[47,2]]},"960":{"position":[[36,2]]},"962":{"position":[[21,2],[52,2]]},"964":{"position":[[7,2]]},"967":{"position":[[0,2],[184,2],[269,2],[314,2]]},"971":{"position":[[55,2]]},"979":{"position":[[0,2]]},"983":{"position":[[55,2]]},"985":{"position":[[0,2]]},"990":{"position":[[0,2],[9,2]]},"993":{"position":[[2,2],[7,2],[55,2],[338,2],[405,2],[1187,2],[1198,2],[1225,2],[1242,2],[1622,2],[1836,2]]},"1001":{"position":[[624,2]]},"1022":{"position":[[0,2],[47,2]]},"1025":{"position":[[210,2],[365,2],[438,2],[593,2],[610,2],[975,2],[1161,2]]},"1031":{"position":[[26,2]]},"1034":{"position":[[2,2]]},"1037":{"position":[[2,2],[13,2],[56,2],[195,2],[254,2],[420,2],[786,2],[791,2]]},"1039":{"position":[[0,2]]},"1044":{"position":[[0,2],[14,2]]},"1047":{"position":[[11,2],[75,2],[1448,2],[2088,2],[2213,2]]},"1051":{"position":[[3,2],[15,2]]},"1056":{"position":[[2,2],[10,2],[30,2],[79,2]]},"1059":{"position":[[22,2],[242,2],[319,2],[428,2],[433,2],[716,2],[1082,2],[1087,2]]},"1061":{"position":[[2,2],[891,2]]},"1063":{"position":[[3,2],[15,2]]},"1070":{"position":[[0,2]]},"1072":{"position":[[0,2],[36,2],[67,2],[81,2]]},"1082":{"position":[[14,2],[266,2],[289,2]]},"1183":{"position":[[21,2],[52,2]]},"1185":{"position":[[7,2]]},"1188":{"position":[[0,2],[184,2],[269,2],[314,2]]},"1192":{"position":[[55,2]]},"1212":{"position":[[0,2]]},"1216":{"position":[[55,2]]},"1218":{"position":[[0,2]]},"1222":{"position":[[41,2]]},"1225":{"position":[[64,2],[86,2]]},"1227":{"position":[[14,2],[41,2]]},"1230":{"position":[[75,2],[219,2],[341,2],[566,2],[811,2],[998,2],[1280,2]]},"1232":{"position":[[70,2]]},"1234":{"position":[[147,2],[278,2],[455,2],[530,2]]},"1238":{"position":[[33,2],[47,2]]},"1240":{"position":[[36,2]]},"1243":{"position":[[0,2],[9,2]]},"1246":{"position":[[2,2],[7,2],[55,2],[338,2],[405,2],[1187,2],[1198,2],[1225,2],[1242,2],[1622,2],[1836,2]]},"1251":{"position":[[2,2]]},"1254":{"position":[[2,2],[13,2],[56,2],[195,2],[254,2],[420,2],[786,2],[791,2]]},"1256":{"position":[[0,2]]},"1264":{"position":[[624,2]]},"1285":{"position":[[0,2],[47,2]]},"1288":{"position":[[210,2],[365,2],[438,2],[593,2],[610,2],[975,2],[1161,2]]},"1294":{"position":[[26,2]]},"1296":{"position":[[0,2]]},"1298":{"position":[[0,2],[36,2],[67,2],[81,2]]},"1308":{"position":[[14,2],[266,2],[289,2]]},"1319":{"position":[[0,2],[14,2]]},"1322":{"position":[[11,2],[75,2],[1448,2],[2088,2],[2213,2]]},"1326":{"position":[[3,2],[15,2]]},"1331":{"position":[[2,2],[10,2],[30,2],[79,2]]},"1334":{"position":[[22,2],[242,2],[319,2],[428,2],[433,2],[716,2],[1082,2],[1087,2]]},"1336":{"position":[[2,2],[891,2]]},"1338":{"position":[[3,2],[15,2]]},"1508":{"position":[[597,2]]},"1527":{"position":[[866,2],[1021,2]]},"1532":{"position":[[1044,2],[1203,2]]},"1545":{"position":[[143,2],[155,2],[176,2],[219,2]]},"1547":{"position":[[18,2],[178,2],[208,2]]}}}],["服务器",{"_index":1333,"t":{"1527":{"position":[[779,3],[1225,3],[1285,3]]},"1532":{"position":[[891,3]]},"1541":{"position":[[303,3]]}}}],["服务端",{"_index":1065,"t":{"1207":{"position":[[89,3]]},"1441":{"position":[[89,3]]}}}],["未",{"_index":641,"t":{"993":{"position":[[1194,1]]},"1168":{"position":[[35,1],[107,1]]},"1246":{"position":[[1194,1]]},"1577":{"position":[[261,1],[307,1]]}}}],["未必",{"_index":124,"t":{"849":{"position":[[101,2]]}}}],["未来",{"_index":187,"t":{"851":{"position":[[210,2],[341,2]]},"997":{"position":[[53,2]]},"1011":{"position":[[19,2]]},"1017":{"position":[[9,2]]},"1260":{"position":[[53,2]]},"1274":{"position":[[19,2]]},"1280":{"position":[[9,2]]},"1633":{"position":[[97,2]]},"1650":{"position":[[97,2]]}}}],["未能",{"_index":219,"t":{"851":{"position":[[322,2]]}}}],["本",{"_index":597,"t":{"962":{"position":[[37,1]]},"1183":{"position":[[37,1]]},"1463":{"position":[[153,1]]},"1545":{"position":[[182,1]]},"1547":{"position":[[126,1]]}}}],["本地",{"_index":1323,"t":{"1524":{"position":[[73,2]]},"1547":{"position":[[27,2]]}}}],["本能",{"_index":276,"t":{"851":{"position":[[576,2]]}}}],["本身",{"_index":1313,"t":{"1519":{"position":[[226,2]]}}}],["机",{"_index":1357,"t":{"1545":{"position":[[183,1]]}}}],["机制",{"_index":556,"t":{"947":{"position":[[89,2]]},"958":{"position":[[51,2]]},"997":{"position":[[23,2]]},"1007":{"position":[[62,2]]},"1022":{"position":[[44,2]]},"1181":{"position":[[200,2]]},"1227":{"position":[[89,2]]},"1238":{"position":[[51,2]]},"1260":{"position":[[23,2]]},"1270":{"position":[[62,2]]},"1285":{"position":[[44,2]]},"1524":{"position":[[38,2]]}}}],["机器",{"_index":1378,"t":{"1554":{"position":[[53,2]]}}}],["权利",{"_index":42,"t":{"847":{"position":[[67,2]]}}}],["权限",{"_index":1306,"t":{"1519":{"position":[[0,2],[19,2]]},"1524":{"position":[[93,2],[135,2]]},"1527":{"position":[[397,2],[469,2]]},"1532":{"position":[[424,2],[492,2]]},"1543":{"position":[[68,2],[241,2],[256,2]]},"1547":{"position":[[93,2]]}}}],["李自成",{"_index":393,"t":{"921":{"position":[[54,3]]}}}],["条件",{"_index":745,"t":{"1015":{"position":[[1935,2]]},"1150":{"position":[[44,2],[467,2]]},"1152":{"position":[[17,2],[216,2],[553,2]]},"1164":{"position":[[28,2]]},"1278":{"position":[[1935,2]]},"1383":{"position":[[10,2],[126,2]]},"1570":{"position":[[133,2]]}}}],["来看",{"_index":257,"t":{"851":{"position":[[492,2]]}}}],["来说",{"_index":1286,"t":{"1508":{"position":[[775,2]]}}}],["松",{"_index":689,"t":{"1001":{"position":[[201,1]]},"1264":{"position":[[201,1]]}}}],["极端",{"_index":93,"t":{"847":{"position":[[224,2]]}}}],["构建",{"_index":763,"t":{"1019":{"position":[[103,2]]},"1172":{"position":[[4,2]]},"1179":{"position":[[79,2]]},"1181":{"position":[[177,2]]},"1282":{"position":[[103,2]]},"1431":{"position":[[57,2]]},"1515":{"position":[[1,2]]},"1521":{"position":[[44,2]]}}}],["构造",{"_index":1338,"t":{"1539":{"position":[[117,2]]}}}],["构造函数",{"_index":682,"t":{"1001":{"position":[[146,4]]},"1264":{"position":[[146,4]]}}}],["枚举",{"_index":629,"t":{"993":{"position":[[91,2],[100,2]]},"1246":{"position":[[91,2],[100,2]]}}}],["架构",{"_index":512,"t":{"942":{"position":[[16,2]]},"958":{"position":[[40,2]]},"1222":{"position":[[16,2]]},"1238":{"position":[[40,2]]},"1545":{"position":[[145,2]]},"1574":{"position":[[66,2],[405,2]]}}}],["架构设计",{"_index":649,"t":{"997":{"position":[[33,4]]},"1209":{"position":[[496,4]]},"1260":{"position":[[33,4]]},"1443":{"position":[[496,4]]}}}],["某个",{"_index":948,"t":{"1152":{"position":[[15,2],[37,2]]},"1154":{"position":[[12,2]]},"1513":{"position":[[23,2]]}}}],["某些",{"_index":99,"t":{"849":{"position":[[9,2]]},"1508":{"position":[[365,2],[635,2]]},"1519":{"position":[[146,2]]}}}],["某种",{"_index":1419,"t":{"1583":{"position":[[158,2]]}}}],["查找",{"_index":1346,"t":{"1543":{"position":[[208,2]]}}}],["查看",{"_index":592,"t":{"960":{"position":[[130,2]]},"973":{"position":[[176,2]]},"975":{"position":[[72,2]]},"987":{"position":[[295,2]]},"995":{"position":[[482,2]]},"1031":{"position":[[492,2]]},"1041":{"position":[[591,2]]},"1053":{"position":[[997,2]]},"1065":{"position":[[1407,2]]},"1068":{"position":[[210,2],[282,2],[313,2]]},"1082":{"position":[[264,2]]},"1090":{"position":[[993,2]]},"1194":{"position":[[176,2]]},"1196":{"position":[[72,2]]},"1220":{"position":[[295,2]]},"1240":{"position":[[130,2]]},"1248":{"position":[[482,2]]},"1258":{"position":[[591,2]]},"1294":{"position":[[492,2]]},"1308":{"position":[[264,2]]},"1316":{"position":[[993,2]]},"1328":{"position":[[997,2]]},"1340":{"position":[[1407,2]]},"1568":{"position":[[135,2]]},"1570":{"position":[[163,2]]},"1572":{"position":[[126,2]]},"1574":{"position":[[23,2],[52,2],[260,2]]},"1577":{"position":[[23,2]]},"1579":{"position":[[22,2]]},"1658":{"position":[[3,2]]},"1661":{"position":[[37,2]]}}}],["查询",{"_index":1043,"t":{"1200":{"position":[[1290,2]]},"1348":{"position":[[34,2]]},"1434":{"position":[[1290,2]]},"1658":{"position":[[17,2]]},"1662":{"position":[[579,2]]}}}],["标准",{"_index":774,"t":{"1025":{"position":[[2,2],[51,2],[393,2]]},"1122":{"position":[[25,2]]},"1134":{"position":[[90,2],[118,2],[123,2]]},"1166":{"position":[[19,2]]},"1288":{"position":[[2,2],[51,2],[393,2]]},"1343":{"position":[[7,2]]},"1358":{"position":[[129,2]]},"1463":{"position":[[88,2]]},"1484":{"position":[[17,2]]},"1547":{"position":[[39,2]]},"1615":{"position":[[10,2]]},"1620":{"position":[[10,2]]},"1635":{"position":[[126,2]]},"1652":{"position":[[126,2]]}}}],["标准化",{"_index":765,"t":{"1022":{"position":[[14,3]]},"1285":{"position":[[14,3]]}}}],["标志",{"_index":1198,"t":{"1422":{"position":[[116,2]]},"1574":{"position":[[238,2]]}}}],["标签",{"_index":1168,"t":{"1389":{"position":[[120,2]]},"1400":{"position":[[9,2],[277,2]]},"1446":{"position":[[37,2]]},"1452":{"position":[[0,2]]}}}],["标记",{"_index":1409,"t":{"1581":{"position":[[2,2],[60,2],[118,2]]}}}],["标识",{"_index":1322,"t":{"1524":{"position":[[66,2]]}}}],["栈",{"_index":1007,"t":{"1170":{"position":[[6,1]]},"1524":{"position":[[86,1]]},"1545":{"position":[[234,1]]},"1568":{"position":[[158,1]]},"1574":{"position":[[262,1],[362,1]]}}}],["树",{"_index":1314,"t":{"1521":{"position":[[29,1]]}}}],["校验",{"_index":1139,"t":{"1375":{"position":[[78,2],[220,2]]},"1460":{"position":[[34,2]]},"1463":{"position":[[136,2]]},"1470":{"position":[[99,2],[178,2]]}}}],["核心",{"_index":514,"t":{"942":{"position":[[25,2]]},"950":{"position":[[189,2]]},"960":{"position":[[4,2]]},"997":{"position":[[84,2]]},"1001":{"position":[[175,2]]},"1019":{"position":[[122,2]]},"1209":{"position":[[166,2]]},"1222":{"position":[[25,2]]},"1230":{"position":[[189,2]]},"1240":{"position":[[4,2]]},"1260":{"position":[[84,2]]},"1264":{"position":[[175,2]]},"1282":{"position":[[122,2]]},"1369":{"position":[[18,2]]},"1389":{"position":[[170,2]]},"1391":{"position":[[18,2]]},"1443":{"position":[[166,2]]},"1508":{"position":[[673,2]]}}}],["核心思想",{"_index":513,"t":{"942":{"position":[[19,4]]},"1222":{"position":[[19,4]]}}}],["根",{"_index":1295,"t":{"1511":{"position":[[53,1]]}}}],["根基",{"_index":273,"t":{"851":{"position":[[561,2]]}}}],["根据",{"_index":754,"t":{"1015":{"position":[[2027,2]]},"1027":{"position":[[0,2]]},"1278":{"position":[[2027,2]]},"1290":{"position":[[0,2]]},"1360":{"position":[[121,2]]},"1521":{"position":[[99,2]]},"1574":{"position":[[396,2]]}}}],["根目录",{"_index":1256,"t":{"1499":{"position":[[31,3],[58,3]]},"1501":{"position":[[24,3],[46,3],[118,3],[144,3]]},"1504":{"position":[[36,3]]},"1508":{"position":[[4,3],[1117,3],[1448,3]]}}}],["格式",{"_index":721,"t":{"1007":{"position":[[7,2]]},"1025":{"position":[[6,2],[53,2]]},"1108":{"position":[[138,2]]},"1270":{"position":[[7,2]]},"1288":{"position":[[6,2],[53,2]]},"1452":{"position":[[34,2],[350,2],[378,2]]}}}],["框架",{"_index":1171,"t":{"1389":{"position":[[156,2]]},"1460":{"position":[[56,2]]},"1547":{"position":[[47,2]]}}}],["检查",{"_index":880,"t":{"1108":{"position":[[90,2]]},"1203":{"position":[[413,2],[626,2]]},"1375":{"position":[[83,2]]},"1389":{"position":[[178,2]]},"1437":{"position":[[413,2],[626,2]]},"1543":{"position":[[58,2]]}}}],["检查和",{"_index":1166,"t":{"1389":{"position":[[26,3]]}}}],["检测",{"_index":832,"t":{"1072":{"position":[[40,2]]},"1106":{"position":[[52,2]]},"1298":{"position":[[40,2]]}}}],["概念",{"_index":1079,"t":{"1209":{"position":[[168,2]]},"1443":{"position":[[168,2]]}}}],["模块",{"_index":546,"t":{"945":{"position":[[106,2]]},"947":{"position":[[47,2]]},"1001":{"position":[[3,2]]},"1172":{"position":[[2,2]]},"1225":{"position":[[106,2]]},"1227":{"position":[[47,2]]},"1264":{"position":[[3,2]]}}}],["模块化",{"_index":489,"t":{"936":{"position":[[192,3]]},"945":{"position":[[40,3]]},"1225":{"position":[[40,3]]}}}],["模型",{"_index":729,"t":{"1009":{"position":[[5,2]]},"1015":{"position":[[1986,2]]},"1146":{"position":[[12,2]]},"1207":{"position":[[94,2]]},"1272":{"position":[[5,2]]},"1278":{"position":[[1986,2]]},"1441":{"position":[[94,2]]}}}],["模式",{"_index":355,"t":{"878":{"position":[[19,2]]},"1003":{"position":[[53,2]]},"1015":{"position":[[7611,2]]},"1164":{"position":[[105,2]]},"1209":{"position":[[15,2],[20,2],[441,2]]},"1266":{"position":[[53,2]]},"1278":{"position":[[7611,2]]},"1422":{"position":[[160,2]]},"1443":{"position":[[15,2],[20,2],[441,2]]}}}],["模式匹配",{"_index":359,"t":{"882":{"position":[[28,4]]}}}],["模拟",{"_index":575,"t":{"950":{"position":[[1193,2]]},"952":{"position":[[751,2]]},"967":{"position":[[312,2]]},"985":{"position":[[146,2]]},"1027":{"position":[[184,2]]},"1188":{"position":[[312,2]]},"1200":{"position":[[982,2]]},"1207":{"position":[[1065,2],[1783,2],[1874,2]]},"1218":{"position":[[146,2]]},"1230":{"position":[[1193,2]]},"1232":{"position":[[751,2]]},"1290":{"position":[[184,2]]},"1434":{"position":[[982,2]]},"1441":{"position":[[1065,2],[1783,2],[1874,2]]},"1664":{"position":[[623,2]]}}}],["次数",{"_index":883,"t":{"1108":{"position":[[160,2]]},"1168":{"position":[[428,2]]}}}],["欢迎",{"_index":1199,"t":{"1427":{"position":[[282,2]]}}}],["正在",{"_index":960,"t":{"1162":{"position":[[182,2]]},"1664":{"position":[[822,2]]}}}],["正常",{"_index":1072,"t":{"1207":{"position":[[1785,2],[2130,2]]},"1386":{"position":[[41,2]]},"1441":{"position":[[1785,2],[2130,2]]},"1508":{"position":[[503,2],[1161,2]]},"1519":{"position":[[208,2]]},"1562":{"position":[[60,2]]}}}],["正是",{"_index":278,"t":{"851":{"position":[[581,2]]}}}],["正确",{"_index":891,"t":{"1115":{"position":[[118,2]]},"1508":{"position":[[322,2]]},"1547":{"position":[[101,2]]},"1574":{"position":[[412,2]]}}}],["此时",{"_index":1177,"t":{"1395":{"position":[[147,2],[224,2]]},"1508":{"position":[[1425,2]]},"1577":{"position":[[386,2]]},"1661":{"position":[[17,2],[362,2]]}}}],["步入",{"_index":28,"t":{"847":{"position":[[19,2]]}}}],["步骤",{"_index":1382,"t":{"1559":{"position":[[14,2]]}}}],["武装",{"_index":194,"t":{"851":{"position":[[229,2]]}}}],["死",{"_index":1440,"t":{"1656":{"position":[[9,1],[28,1]]},"1661":{"position":[[15,1],[367,1]]},"1662":{"position":[[16,1]]}}}],["死锁",{"_index":1057,"t":{"1205":{"position":[[56,2]]},"1439":{"position":[[56,2]]}}}],["段",{"_index":724,"t":{"1007":{"position":[[59,1]]},"1011":{"position":[[152,1]]},"1270":{"position":[[59,1]]},"1274":{"position":[[152,1]]},"1367":{"position":[[51,1],[62,1]]},"1389":{"position":[[225,1],[241,1]]},"1400":{"position":[[4,1],[276,1]]},"1406":{"position":[[91,1]]},"1446":{"position":[[36,1]]},"1452":{"position":[[18,1],[613,1]]},"1463":{"position":[[135,1]]},"1494":{"position":[[14,1],[42,1]]},"1658":{"position":[[103,1],[112,1]]}}}],["每个",{"_index":360,"t":{"887":{"position":[[1,2]]},"921":{"position":[[243,2]]},"936":{"position":[[172,2]]},"960":{"position":[[41,2]]},"981":{"position":[[3,2]]},"1001":{"position":[[165,2]]},"1072":{"position":[[65,2]]},"1082":{"position":[[287,2]]},"1148":{"position":[[457,2]]},"1170":{"position":[[172,2]]},"1214":{"position":[[3,2]]},"1240":{"position":[[41,2]]},"1264":{"position":[[165,2]]},"1298":{"position":[[65,2]]},"1308":{"position":[[287,2]]}}}],["每次",{"_index":614,"t":{"981":{"position":[[61,2]]},"1214":{"position":[[61,2]]}}}],["比如",{"_index":490,"t":{"936":{"position":[[198,2]]},"945":{"position":[[21,2]]},"1225":{"position":[[21,2]]},"1508":{"position":[[1069,2]]}}}],["水平",{"_index":162,"t":{"851":{"position":[[125,2]]}}}],["永久",{"_index":933,"t":{"1144":{"position":[[673,2]]},"1207":{"position":[[30,2]]},"1441":{"position":[[30,2]]}}}],["汇编",{"_index":1401,"t":{"1574":{"position":[[315,2]]}}}],["池",{"_index":731,"t":{"1009":{"position":[[26,1]]},"1272":{"position":[[26,1]]}}}],["沙箱",{"_index":1262,"t":{"1499":{"position":[[92,2]]},"1519":{"position":[[265,2]]}}}],["没",{"_index":1131,"t":{"1373":{"position":[[33,1]]}}}],["没有",{"_index":300,"t":{"853":{"position":[[46,2]]},"1082":{"position":[[301,2]]},"1144":{"position":[[624,2]]},"1308":{"position":[[301,2]]},"1501":{"position":[[158,2]]},"1508":{"position":[[358,2],[465,2],[625,2],[844,2],[1040,2]]},"1519":{"position":[[185,2]]},"1662":{"position":[[517,2]]}}}],["泄漏",{"_index":1029,"t":{"1181":{"position":[[165,2]]}}}],["泄露",{"_index":847,"t":{"1093":{"position":[[34,2]]},"1106":{"position":[[26,2]]}}}],["泛",{"_index":1091,"t":{"1209":{"position":[[2927,1],[3695,1],[3977,1],[5609,1]]},"1443":{"position":[[2927,1],[3695,1],[3977,1],[5609,1]]}}}],["泡沫",{"_index":165,"t":{"851":{"position":[[143,2],[327,2]]}}}],["注入",{"_index":670,"t":{"1001":{"position":[[56,2],[141,2],[155,2]]},"1209":{"position":[[397,2]]},"1264":{"position":[[56,2],[141,2],[155,2]]},"1443":{"position":[[397,2]]}}}],["注册",{"_index":552,"t":{"947":{"position":[[16,2]]},"950":{"position":[[216,2],[564,2]]},"954":{"position":[[145,2]]},"1031":{"position":[[21,2]]},"1037":{"position":[[369,2],[418,2]]},"1059":{"position":[[665,2],[714,2]]},"1072":{"position":[[34,2]]},"1082":{"position":[[12,2]]},"1227":{"position":[[16,2]]},"1230":{"position":[[216,2],[564,2]]},"1234":{"position":[[145,2]]},"1254":{"position":[[369,2],[418,2]]},"1294":{"position":[[21,2]]},"1298":{"position":[[34,2]]},"1308":{"position":[[12,2]]},"1334":{"position":[[665,2],[714,2]]},"1527":{"position":[[490,2]]}}}],["注意",{"_index":986,"t":{"1168":{"position":[[50,2]]},"1383":{"position":[[101,2]]},"1547":{"position":[[62,2]]},"1662":{"position":[[509,2]]}}}],["注意事项",{"_index":1120,"t":{"1369":{"position":[[55,4]]}}}],["注解",{"_index":1445,"t":{"1658":{"position":[[74,2]]}}}],["活着",{"_index":392,"t":{"921":{"position":[[45,2]]}}}],["流",{"_index":833,"t":{"1075":{"position":[[73,1]]},"1301":{"position":[[73,1]]},"1371":{"position":[[208,1]]}}}],["流向",{"_index":55,"t":{"847":{"position":[[102,2]]}}}],["流式",{"_index":892,"t":{"1122":{"position":[[16,2]]},"1134":{"position":[[68,2]]},"1358":{"position":[[185,2]]},"1371":{"position":[[183,2]]},"1494":{"position":[[50,2]]}}}],["测试",{"_index":805,"t":{"1063":{"position":[[102,2]]},"1068":{"position":[[400,2],[461,2]]},"1209":{"position":[[462,2],[5976,2]]},"1338":{"position":[[102,2]]},"1443":{"position":[[462,2],[5976,2]]},"1515":{"position":[[11,2]]},"1521":{"position":[[41,2]]},"1543":{"position":[[51,2]]}}}],["测试日志",{"_index":579,"t":{"954":{"position":[[451,4]]},"1234":{"position":[[451,4]]}}}],["测试步骤",{"_index":492,"t":{"936":{"position":[[217,4]]}}}],["浏览器",{"_index":817,"t":{"1068":{"position":[[207,3]]}}}],["浮点",{"_index":1395,"t":{"1574":{"position":[[166,2]]}}}],["消息",{"_index":553,"t":{"947":{"position":[[19,2]]},"962":{"position":[[25,2],[32,2],[49,2]]},"964":{"position":[[4,2]]},"967":{"position":[[4,2],[102,2]]},"971":{"position":[[8,2]]},"981":{"position":[[65,2],[86,2]]},"993":{"position":[[1205,2]]},"1022":{"position":[[17,2]]},"1025":{"position":[[4,2]]},"1142":{"position":[[261,2],[363,2]]},"1144":{"position":[[626,2]]},"1183":{"position":[[25,2],[32,2],[49,2]]},"1185":{"position":[[4,2]]},"1188":{"position":[[4,2],[102,2]]},"1192":{"position":[[8,2]]},"1214":{"position":[[65,2],[86,2]]},"1227":{"position":[[19,2]]},"1246":{"position":[[1205,2]]},"1285":{"position":[[17,2]]},"1288":{"position":[[4,2]]},"1418":{"position":[[333,2]]}}}],["消息传递",{"_index":547,"t":{"945":{"position":[[111,4]]},"1140":{"position":[[15,4]]},"1225":{"position":[[111,4]]}}}],["消费",{"_index":1124,"t":{"1371":{"position":[[236,2]]}}}],["消费者",{"_index":937,"t":{"1146":{"position":[[9,3]]}}}],["涵盖",{"_index":1234,"t":{"1463":{"position":[[220,2]]}}}],["淡化",{"_index":388,"t":{"921":{"position":[[29,2]]}}}],["淮",{"_index":406,"t":{"921":{"position":[[90,1]]}}}],["深入",{"_index":1223,"t":{"1456":{"position":[[231,2]]}}}],["深度",{"_index":15,"t":{"845":{"position":[[26,2]]},"1170":{"position":[[167,2]]}}}],["添加",{"_index":362,"t":{"887":{"position":[[6,2]]},"1011":{"position":[[52,2]]},"1013":{"position":[[45,2]]},"1274":{"position":[[52,2]]},"1276":{"position":[[45,2]]},"1521":{"position":[[112,2]]},"1529":{"position":[[18,2]]},"1534":{"position":[[55,2],[165,2]]},"1541":{"position":[[362,2],[375,2]]},"1543":{"position":[[164,2],[265,2]]},"1547":{"position":[[113,2]]},"1559":{"position":[[6,2]]}}}],["清晰",{"_index":667,"t":{"1001":{"position":[[8,2]]},"1205":{"position":[[104,2],[118,2]]},"1209":{"position":[[3041,2]]},"1264":{"position":[[8,2]]},"1439":{"position":[[104,2],[118,2]]},"1443":{"position":[[3041,2]]}}}],["清理",{"_index":1061,"t":{"1205":{"position":[[139,2]]},"1386":{"position":[[96,2]]},"1439":{"position":[[139,2]]},"1527":{"position":[[134,2],[205,2]]},"1532":{"position":[[161,2],[232,2]]},"1543":{"position":[[172,2]]}}}],["清空",{"_index":1141,"t":{"1375":{"position":[[173,2]]}}}],["源于",{"_index":179,"t":{"851":{"position":[[184,2]]}}}],["源代码",{"_index":1389,"t":{"1568":{"position":[[137,3]]}}}],["源码",{"_index":1380,"t":{"1559":{"position":[[8,2]]}}}],["溢出",{"_index":1012,"t":{"1170":{"position":[[214,2]]}}}],["满足",{"_index":949,"t":{"1152":{"position":[[19,2]]}}}],["滥用",{"_index":1138,"t":{"1373":{"position":[[81,2]]},"1406":{"position":[[15,2]]}}}],["演示",{"_index":1096,"t":{"1209":{"position":[[5586,2]]},"1443":{"position":[[5586,2]]}}}],["演进",{"_index":655,"t":{"997":{"position":[[63,2]]},"1019":{"position":[[61,2]]},"1260":{"position":[[63,2]]},"1282":{"position":[[61,2]]}}}],["灵活",{"_index":509,"t":{"940":{"position":[[159,2]]}}}],["灵活处理",{"_index":1233,"t":{"1463":{"position":[[215,4]]}}}],["灵活性",{"_index":459,"t":{"924":{"position":[[92,3]]},"1025":{"position":[[315,3]]},"1209":{"position":[[72,3]]},"1288":{"position":[[315,3]]},"1443":{"position":[[72,3]]}}}],["点",{"_index":367,"t":{"894":{"position":[[13,1]]},"1001":{"position":[[118,1]]},"1264":{"position":[[118,1]]},"1547":{"position":[[64,1]]}}}],["点击",{"_index":1161,"t":{"1386":{"position":[[126,2]]}}}],["热",{"_index":787,"t":{"1044":{"position":[[2,1]]},"1051":{"position":[[0,1],[12,1],[21,1]]},"1056":{"position":[[4,1]]},"1059":{"position":[[19,1]]},"1063":{"position":[[0,1],[12,1],[21,1]]},"1072":{"position":[[14,1]]},"1298":{"position":[[14,1]]},"1319":{"position":[[2,1]]},"1326":{"position":[[0,1],[12,1],[21,1]]},"1331":{"position":[[4,1]]},"1334":{"position":[[19,1]]},"1338":{"position":[[0,1],[12,1],[21,1]]},"1541":{"position":[[258,1]]}}}],["然后",{"_index":1041,"t":{"1200":{"position":[[1199,2]]},"1395":{"position":[[343,2]]},"1434":{"position":[[1199,2]]},"1496":{"position":[[1891,2]]}}}],["然而",{"_index":30,"t":{"847":{"position":[[26,2]]},"849":{"position":[[76,2]]},"851":{"position":[[30,2],[262,2]]},"853":{"position":[[118,2]]},"1521":{"position":[[56,2]]}}}],["父",{"_index":1406,"t":{"1577":{"position":[[146,1],[197,1],[355,1]]},"1623":{"position":[[154,1]]},"1640":{"position":[[154,1]]},"1658":{"position":[[132,1]]},"1661":{"position":[[46,1],[449,1]]},"1662":{"position":[[21,1],[414,1],[514,1]]},"1664":{"position":[[706,1],[718,1],[769,1],[819,1],[853,1],[873,1]]}}}],["父亲",{"_index":1439,"t":{"1656":{"position":[[6,2],[30,2]]},"1661":{"position":[[12,2],[364,2]]}}}],["父母",{"_index":292,"t":{"853":{"position":[[18,2],[70,2],[143,2]]}}}],["片段",{"_index":495,"t":{"936":{"position":[[241,2]]}}}],["版本",{"_index":861,"t":{"1098":{"position":[[516,2]]},"1179":{"position":[[115,2],[125,2]]},"1181":{"position":[[179,2]]},"1386":{"position":[[55,2],[66,2],[92,2]]},"1515":{"position":[[5,2]]},"1517":{"position":[[10,2]]}}}],["物质",{"_index":268,"t":{"851":{"position":[[540,2]]}}}],["特别",{"_index":1028,"t":{"1181":{"position":[[156,2]]}}}],["特定",{"_index":383,"t":{"921":{"position":[[15,2]]},"1427":{"position":[[30,2]]},"1513":{"position":[[31,2]]},"1515":{"position":[[3,2]]},"1517":{"position":[[8,2]]},"1519":{"position":[[152,2]]},"1521":{"position":[[24,2]]},"1570":{"position":[[12,2]]},"1574":{"position":[[54,2]]},"1579":{"position":[[74,2]]}}}],["特性",{"_index":1055,"t":{"1205":{"position":[[2,2]]},"1389":{"position":[[15,2]]},"1439":{"position":[[2,2]]}}}],["特权",{"_index":1356,"t":{"1545":{"position":[[174,2]]}}}],["特殊",{"_index":990,"t":{"1168":{"position":[[76,2]]},"1574":{"position":[[131,2]]}}}],["特点",{"_index":1319,"t":{"1524":{"position":[[41,2]]}}}],["状态",{"_index":622,"t":{"990":{"position":[[2,2]]},"993":{"position":[[4,2],[57,2],[226,2],[1189,2]]},"1015":{"position":[[1905,2]]},"1017":{"position":[[105,2]]},"1022":{"position":[[26,2]]},"1044":{"position":[[7,2],[18,2]]},"1047":{"position":[[2,2],[20,2],[84,2],[1833,2],[2977,2]]},"1049":{"position":[[2,2]]},"1070":{"position":[[2,2]]},"1072":{"position":[[2,2],[47,2],[73,2]]},"1082":{"position":[[180,2],[272,2],[280,2]]},"1084":{"position":[[250,2]]},"1203":{"position":[[417,2]]},"1209":{"position":[[1030,2]]},"1243":{"position":[[2,2]]},"1246":{"position":[[4,2],[57,2],[226,2],[1189,2]]},"1278":{"position":[[1905,2]]},"1280":{"position":[[105,2]]},"1285":{"position":[[26,2]]},"1296":{"position":[[2,2]]},"1298":{"position":[[2,2],[47,2],[73,2]]},"1308":{"position":[[180,2],[272,2],[280,2]]},"1310":{"position":[[250,2]]},"1319":{"position":[[7,2],[18,2]]},"1322":{"position":[[2,2],[20,2],[84,2],[1833,2],[2977,2]]},"1324":{"position":[[2,2]]},"1437":{"position":[[417,2]]},"1443":{"position":[[1030,2]]},"1494":{"position":[[96,2]]},"1508":{"position":[[398,2],[539,2],[577,2],[687,2]]},"1658":{"position":[[120,2],[165,2],[198,2]]}}}],["独立",{"_index":468,"t":{"926":{"position":[[57,2]]},"936":{"position":[[245,2]]},"947":{"position":[[45,2]]},"960":{"position":[[38,2]]},"1227":{"position":[[45,2]]},"1240":{"position":[[38,2]]}}}],["独裁政权",{"_index":46,"t":{"847":{"position":[[79,4]]}}}],["狭隘",{"_index":426,"t":{"921":{"position":[[179,2]]}}}],["猜测",{"_index":811,"t":{"1068":{"position":[[163,2]]}}}],["率先",{"_index":27,"t":{"847":{"position":[[17,2]]}}}],["环",{"_index":1324,"t":{"1524":{"position":[[75,1]]}}}],["环境",{"_index":1022,"t":{"1181":{"position":[[91,2],[186,2]]},"1499":{"position":[[87,2]]},"1501":{"position":[[147,2]]},"1506":{"position":[[83,2]]},"1508":{"position":[[78,2],[459,2],[984,2],[1080,2],[1157,2],[1382,2],[1445,2]]},"1513":{"position":[[18,2]]},"1515":{"position":[[24,2]]},"1519":{"position":[[135,2],[244,2]]},"1521":{"position":[[46,2]]},"1534":{"position":[[6,2]]},"1545":{"position":[[24,2]]},"1547":{"position":[[111,2]]},"1554":{"position":[[70,2]]}}}],["环境中运行",{"_index":1285,"t":{"1508":{"position":[[767,5]]}}}],["环境变量",{"_index":719,"t":{"1005":{"position":[[33,4]]},"1268":{"position":[[33,4]]},"1375":{"position":[[85,4]]},"1409":{"position":[[64,4]]},"1420":{"position":[[118,4]]},"1431":{"position":[[12,4]]}}}],["现代",{"_index":246,"t":{"851":{"position":[[449,2],[556,2]]},"1513":{"position":[[53,2]]},"1521":{"position":[[75,2]]}}}],["现实",{"_index":87,"t":{"847":{"position":[[204,2]]}}}],["现有",{"_index":704,"t":{"1003":{"position":[[12,2]]},"1015":{"position":[[1967,2]]},"1266":{"position":[[12,2]]},"1278":{"position":[[1967,2]]},"1515":{"position":[[32,2]]}}}],["现象",{"_index":178,"t":{"851":{"position":[[180,2]]}}}],["理想",{"_index":441,"t":{"921":{"position":[[251,2]]}}}],["理解",{"_index":17,"t":{"845":{"position":[[36,2]]},"924":{"position":[[57,2]]},"1547":{"position":[[139,2]]}}}],["瓶颈",{"_index":971,"t":{"1164":{"position":[[338,2]]}}}],["甚至",{"_index":261,"t":{"851":{"position":[[512,2],[545,2]]},"921":{"position":[[221,2]]}}}],["生产",{"_index":1021,"t":{"1181":{"position":[[89,2],[184,2]]},"1534":{"position":[[4,2]]},"1547":{"position":[[109,2],[194,2]]}}}],["生产者",{"_index":936,"t":{"1146":{"position":[[5,3]]}}}],["生命周期",{"_index":555,"t":{"947":{"position":[[24,4]]},"960":{"position":[[27,4]]},"1160":{"position":[[35,4]]},"1209":{"position":[[138,4]]},"1227":{"position":[[24,4]]},"1240":{"position":[[27,4]]},"1443":{"position":[[138,4]]},"1547":{"position":[[81,4]]}}}],["生存",{"_index":440,"t":{"921":{"position":[[248,2]]}}}],["生成",{"_index":854,"t":{"1098":{"position":[[109,2],[406,2],[496,2]]},"1102":{"position":[[8,2]]},"1104":{"position":[[484,2]]},"1108":{"position":[[30,2]]},"1168":{"position":[[540,2]]},"1343":{"position":[[35,2]]},"1371":{"position":[[194,2],[233,2]]},"1386":{"position":[[197,2]]},"1389":{"position":[[135,2]]},"1431":{"position":[[46,2]]}}}],["生活",{"_index":134,"t":{"851":{"position":[[17,2],[76,2],[123,2],[471,2]]},"853":{"position":[[42,2],[79,2],[122,2]]}}}],["用于",{"_index":327,"t":{"857":{"position":[[0,2]]},"924":{"position":[[29,2]]},"950":{"position":[[339,2]]},"967":{"position":[[182,2]]},"983":{"position":[[53,2]]},"1011":{"position":[[118,2]]},"1025":{"position":[[208,2]]},"1059":{"position":[[17,2]]},"1113":{"position":[[13,2]]},"1134":{"position":[[13,2],[44,2],[137,2],[168,2]]},"1166":{"position":[[23,2]]},"1168":{"position":[[71,2]]},"1188":{"position":[[182,2]]},"1200":{"position":[[172,2],[199,2]]},"1216":{"position":[[53,2]]},"1230":{"position":[[339,2]]},"1274":{"position":[[118,2]]},"1288":{"position":[[208,2]]},"1334":{"position":[[17,2]]},"1343":{"position":[[30,2]]},"1381":{"position":[[12,2]]},"1400":{"position":[[12,2]]},"1409":{"position":[[11,2]]},"1434":{"position":[[172,2],[199,2]]},"1452":{"position":[[626,2]]},"1496":{"position":[[936,2],[1022,2],[1111,2]]},"1499":{"position":[[20,2]]},"1508":{"position":[[896,2]]},"1519":{"position":[[126,2]]},"1521":{"position":[[16,2]]},"1550":{"position":[[30,2]]},"1554":{"position":[[5,2]]},"1613":{"position":[[40,2]]},"1618":{"position":[[40,2]]},"1635":{"position":[[111,2]]},"1652":{"position":[[111,2]]}}}],["用户",{"_index":522,"t":{"942":{"position":[[49,2]]},"945":{"position":[[60,2],[83,2],[124,2]]},"947":{"position":[[82,2]]},"1106":{"position":[[6,2],[35,2]]},"1222":{"position":[[49,2]]},"1225":{"position":[[60,2],[83,2],[124,2]]},"1227":{"position":[[82,2]]},"1508":{"position":[[739,2]]},"1519":{"position":[[32,2]]}}}],["用来",{"_index":1298,"t":{"1513":{"position":[[9,2]]},"1577":{"position":[[137,2]]}}}],["用法",{"_index":454,"t":{"924":{"position":[[62,2]]},"1166":{"position":[[64,2]]}}}],["电池",{"_index":1281,"t":{"1508":{"position":[[685,2]]}}}],["瘦身",{"_index":1425,"t":{"1594":{"position":[[72,2]]}}}],["登录",{"_index":873,"t":{"1106":{"position":[[37,2]]},"1508":{"position":[[1007,2]]}}}],["百分比",{"_index":995,"t":{"1168":{"position":[[188,3]]}}}],["盐",{"_index":863,"t":{"1098":{"position":[[524,1]]},"1108":{"position":[[392,1]]}}}],["监听",{"_index":643,"t":{"993":{"position":[[1235,2]]},"1025":{"position":[[603,2]]},"1144":{"position":[[352,2],[574,2],[684,2]]},"1164":{"position":[[283,2],[413,2]]},"1246":{"position":[[1235,2]]},"1288":{"position":[[603,2]]},"1527":{"position":[[314,2]]},"1532":{"position":[[341,2]]}}}],["监听器",{"_index":1332,"t":{"1527":{"position":[[234,3]]},"1532":{"position":[[261,3]]}}}],["监控",{"_index":1337,"t":{"1534":{"position":[[167,2]]},"1541":{"position":[[369,2],[401,2]]},"1547":{"position":[[118,2]]},"1581":{"position":[[9,2],[67,2],[127,2]]},"1583":{"position":[[12,2],[139,2]]}}}],["监测",{"_index":867,"t":{"1104":{"position":[[197,2]]}}}],["目前",{"_index":595,"t":{"962":{"position":[[16,2]]},"1183":{"position":[[16,2]]}}}],["目录",{"_index":351,"t":{"875":{"position":[[6,2]]},"1075":{"position":[[2,2]]},"1301":{"position":[[2,2]]},"1499":{"position":[[43,2]]},"1501":{"position":[[57,2]]},"1506":{"position":[[60,2]]},"1508":{"position":[[311,2],[387,2],[704,2],[893,2]]},"1513":{"position":[[33,2]]},"1521":{"position":[[27,2]]}}}],["目标",{"_index":449,"t":{"924":{"position":[[33,2]]},"926":{"position":[[24,2],[64,2]]},"929":{"position":[[102,2]]},"931":{"position":[[172,2]]},"934":{"position":[[119,2]]},"936":{"position":[[165,2]]},"938":{"position":[[30,2],[43,2]]},"940":{"position":[[17,2],[53,2],[130,2]]},"993":{"position":[[1620,2],[1834,2]]},"997":{"position":[[86,2]]},"1001":{"position":[[0,2]]},"1003":{"position":[[0,2]]},"1005":{"position":[[0,2]]},"1007":{"position":[[0,2]]},"1009":{"position":[[0,2]]},"1011":{"position":[[0,2]]},"1013":{"position":[[0,2]]},"1025":{"position":[[973,2],[1159,2]]},"1168":{"position":[[186,2]]},"1209":{"position":[[416,2]]},"1246":{"position":[[1620,2],[1834,2]]},"1260":{"position":[[86,2]]},"1264":{"position":[[0,2]]},"1266":{"position":[[0,2]]},"1268":{"position":[[0,2]]},"1270":{"position":[[0,2]]},"1272":{"position":[[0,2]]},"1274":{"position":[[0,2]]},"1276":{"position":[[0,2]]},"1288":{"position":[[973,2],[1159,2]]},"1443":{"position":[[416,2]]},"1574":{"position":[[402,2]]},"1583":{"position":[[178,2]]}}}],["盲目",{"_index":200,"t":{"851":{"position":[[247,2]]}}}],["直到",{"_index":921,"t":{"1142":{"position":[[388,2]]},"1148":{"position":[[532,2]]},"1568":{"position":[[68,2]]}}}],["直接",{"_index":668,"t":{"1001":{"position":[[18,2],[191,2]]},"1017":{"position":[[99,2]]},"1037":{"position":[[332,2]]},"1082":{"position":[[307,2]]},"1102":{"position":[[6,2]]},"1254":{"position":[[332,2]]},"1264":{"position":[[18,2],[191,2]]},"1280":{"position":[[99,2]]},"1308":{"position":[[307,2]]},"1352":{"position":[[24,2]]},"1356":{"position":[[31,2]]},"1358":{"position":[[125,2],[173,2]]},"1367":{"position":[[13,2]]},"1414":{"position":[[37,2]]},"1496":{"position":[[1876,2],[2342,2]]},"1564":{"position":[[6,2]]},"1566":{"position":[[4,2]]},"1577":{"position":[[376,2]]},"1635":{"position":[[74,2]]},"1652":{"position":[[74,2]]},"1661":{"position":[[452,2]]}}}],["直观",{"_index":1191,"t":{"1409":{"position":[[46,2]]}}}],["相互",{"_index":487,"t":{"934":{"position":[[131,2]]},"936":{"position":[[259,2]]}}}],["相互促进",{"_index":239,"t":{"851":{"position":[[412,4]]}}}],["相关",{"_index":472,"t":{"929":{"position":[[156,2]]},"1001":{"position":[[193,2],[1774,2]]},"1068":{"position":[[160,2]]},"1264":{"position":[[193,2],[1774,2]]},"1508":{"position":[[918,2]]},"1613":{"position":[[56,2]]},"1618":{"position":[[56,2]]}}}],["相同",{"_index":501,"t":{"940":{"position":[[51,2]]}}}],["相对",{"_index":1104,"t":{"1343":{"position":[[453,2]]},"1501":{"position":[[42,2]]},"1547":{"position":[[55,2]]}}}],["相当于",{"_index":1253,"t":{"1496":{"position":[[1929,3]]}}}],["相比",{"_index":548,"t":{"945":{"position":[[116,2]]},"1225":{"position":[[116,2]]},"1404":{"position":[[20,2]]}}}],["真理",{"_index":264,"t":{"851":{"position":[[521,2]]}}}],["矛盾",{"_index":70,"t":{"847":{"position":[[152,2]]}}}],["知识",{"_index":687,"t":{"1001":{"position":[[182,2]]},"1264":{"position":[[182,2]]}}}],["短信",{"_index":692,"t":{"1001":{"position":[[458,2],[555,2],[1103,2],[1745,2]]},"1264":{"position":[[458,2],[555,2],[1103,2],[1745,2]]}}}],["码",{"_index":767,"t":{"1022":{"position":[[28,1]]},"1285":{"position":[[28,1]]}}}],["破坏",{"_index":726,"t":{"1007":{"position":[[67,2]]},"1270":{"position":[[67,2]]}}}],["硬",{"_index":671,"t":{"1001":{"position":[[60,1]]},"1017":{"position":[[3,1]]},"1264":{"position":[[60,1]]},"1280":{"position":[[3,1]]}}}],["硬件",{"_index":1273,"t":{"1508":{"position":[[402,2],[567,2],[615,2],[645,2],[746,2],[861,2]]}}}],["硬盘",{"_index":1283,"t":{"1508":{"position":[[717,2],[803,2]]}}}],["确保",{"_index":481,"t":{"931":{"position":[[194,2]]},"1154":{"position":[[10,2],[370,2]]},"1158":{"position":[[322,2]]},"1205":{"position":[[1103,2]]},"1439":{"position":[[1103,2]]},"1508":{"position":[[316,2],[1112,2]]},"1543":{"position":[[146,2]]}}}],["确定",{"_index":866,"t":{"1104":{"position":[[31,2]]},"1108":{"position":[[97,2]]}}}],["确实",{"_index":132,"t":{"851":{"position":[[12,2]]}}}],["磁盘",{"_index":831,"t":{"1072":{"position":[[31,2],[43,2]]},"1298":{"position":[[31,2],[43,2]]}}}],["示例",{"_index":591,"t":{"960":{"position":[[97,2]]},"1001":{"position":[[204,2],[1227,2]]},"1003":{"position":[[18,2]]},"1005":{"position":[[28,2]]},"1007":{"position":[[34,2]]},"1009":{"position":[[43,2]]},"1011":{"position":[[27,2]]},"1013":{"position":[[29,2]]},"1075":{"position":[[33,2]]},"1108":{"position":[[251,2]]},"1148":{"position":[[53,2]]},"1150":{"position":[[64,2]]},"1152":{"position":[[45,2]]},"1154":{"position":[[46,2]]},"1170":{"position":[[266,2]]},"1209":{"position":[[4619,2],[5034,2],[6220,2],[6315,2]]},"1240":{"position":[[97,2]]},"1264":{"position":[[204,2],[1227,2]]},"1266":{"position":[[18,2]]},"1268":{"position":[[28,2]]},"1270":{"position":[[34,2]]},"1272":{"position":[[43,2]]},"1274":{"position":[[27,2]]},"1276":{"position":[[29,2]]},"1301":{"position":[[33,2]]},"1343":{"position":[[47,2]]},"1346":{"position":[[36,2]]},"1350":{"position":[[39,2]]},"1354":{"position":[[39,2]]},"1414":{"position":[[340,2]]},"1416":{"position":[[112,2],[342,2]]},"1418":{"position":[[116,2],[537,2]]},"1420":{"position":[[116,2],[286,2]]},"1422":{"position":[[118,2],[328,2]]},"1424":{"position":[[123,2],[252,2]]},"1427":{"position":[[154,2]]},"1443":{"position":[[4619,2],[5034,2],[6220,2],[6315,2]]},"1496":{"position":[[872,2]]},"1521":{"position":[[126,2]]},"1574":{"position":[[474,2]]},"1581":{"position":[[189,2]]},"1603":{"position":[[6,2]]},"1633":{"position":[[116,2]]},"1650":{"position":[[116,2]]}}}],["社会",{"_index":10,"t":{"845":{"position":[[14,2],[41,2]]},"847":{"position":[[190,2]]},"851":{"position":[[451,2]]}}}],["禁用",{"_index":1423,"t":{"1592":{"position":[[5,2]]}}}],["私人",{"_index":44,"t":{"847":{"position":[[73,2]]}}}],["科技",{"_index":232,"t":{"851":{"position":[[371,2],[430,2]]}}}],["科技进步",{"_index":227,"t":{"851":{"position":[[354,4],[425,4]]}}}],["秒",{"_index":929,"t":{"1144":{"position":[[622,1]]},"1162":{"position":[[435,1]]}}}],["程",{"_index":749,"t":{"1015":{"position":[[1993,1]]},"1136":{"position":[[13,1]]},"1142":{"position":[[340,1],[382,1]]},"1148":{"position":[[530,1]]},"1162":{"position":[[382,1],[401,1]]},"1200":{"position":[[547,1],[771,1],[1120,1]]},"1205":{"position":[[418,1],[450,1],[512,1],[517,1]]},"1207":{"position":[[527,1]]},"1278":{"position":[[1993,1]]},"1434":{"position":[[547,1],[771,1],[1120,1]]},"1439":{"position":[[418,1],[450,1],[512,1],[517,1]]},"1441":{"position":[[527,1]]}}}],["程序",{"_index":1165,"t":{"1389":{"position":[[20,2]]},"1499":{"position":[[55,2],[66,2]]},"1508":{"position":[[367,2],[478,2],[637,2],[743,2],[773,2],[854,2],[981,2],[1129,2]]},"1511":{"position":[[65,2]]},"1515":{"position":[[8,2]]},"1517":{"position":[[13,2]]},"1519":{"position":[[198,2]]},"1543":{"position":[[148,2]]},"1550":{"position":[[55,2],[82,2]]},"1554":{"position":[[57,2]]},"1562":{"position":[[13,2]]},"1574":{"position":[[350,2]]},"1577":{"position":[[27,2],[371,2]]},"1579":{"position":[[26,2]]},"1583":{"position":[[26,2],[69,2],[124,2],[141,2],[154,2],[186,2]]},"1587":{"position":[[40,2]]},"1594":{"position":[[77,2]]}}}],["程序执行",{"_index":886,"t":{"1111":{"position":[[28,4]]},"1562":{"position":[[41,4]]}}}],["程序调试",{"_index":1376,"t":{"1554":{"position":[[7,4]]}}}],["程序运行",{"_index":1370,"t":{"1550":{"position":[[64,4]]},"1568":{"position":[[29,4]]},"1583":{"position":[[78,4]]}}}],["程度",{"_index":284,"t":{"851":{"position":[[607,2]]},"1389":{"position":[[88,2]]}}}],["稳定",{"_index":58,"t":{"847":{"position":[[111,2]]},"921":{"position":[[102,2]]},"1343":{"position":[[430,2]]},"1358":{"position":[[42,2]]}}}],["稳定期",{"_index":211,"t":{"851":{"position":[[293,3],[309,3]]}}}],["空",{"_index":893,"t":{"1130":{"position":[[974,1]]},"1377":{"position":[[7,1]]}}}],["空格",{"_index":375,"t":{"908":{"position":[[11,2]]},"915":{"position":[[18,2]]}}}],["空间",{"_index":533,"t":{"945":{"position":[[30,2],[62,2]]},"1225":{"position":[[30,2],[62,2]]},"1508":{"position":[[741,2]]}}}],["立即",{"_index":1050,"t":{"1203":{"position":[[76,2],[160,2]]},"1437":{"position":[[76,2],[160,2]]}}}],["竞",{"_index":744,"t":{"1015":{"position":[[1933,1]]},"1150":{"position":[[42,1],[465,1]]},"1164":{"position":[[26,1],[74,1]]},"1200":{"position":[[1271,1]]},"1278":{"position":[[1933,1]]},"1434":{"position":[[1271,1]]}}}],["竞争",{"_index":908,"t":{"1138":{"position":[[58,2]]},"1140":{"position":[[2,2],[32,2]]},"1164":{"position":[[184,2]]}}}],["章节",{"_index":598,"t":{"962":{"position":[[38,2]]},"1183":{"position":[[38,2]]}}}],["端",{"_index":1048,"t":{"1203":{"position":[[2,1]]},"1437":{"position":[[2,1]]},"1545":{"position":[[218,1]]}}}],["端口",{"_index":1330,"t":{"1524":{"position":[[147,2]]}}}],["端点",{"_index":1336,"t":{"1534":{"position":[[61,2]]}}}],["笔记本电脑",{"_index":1282,"t":{"1508":{"position":[[691,5]]}}}],["符合",{"_index":912,"t":{"1140":{"position":[[41,2]]},"1164":{"position":[[322,2]]}}}],["第",{"_index":376,"t":{"915":{"position":[[7,1]]}}}],["第一个",{"_index":371,"t":{"901":{"position":[[7,3]]},"1132":{"position":[[350,3]]}}}],["第二个",{"_index":895,"t":{"1132":{"position":[[448,3]]},"1203":{"position":[[83,3]]},"1437":{"position":[[83,3]]}}}],["等",{"_index":11,"t":{"845":{"position":[[16,1]]},"945":{"position":[[57,1]]},"960":{"position":[[127,1]]},"1011":{"position":[[15,1]]},"1056":{"position":[[81,1]]},"1160":{"position":[[49,1]]},"1200":{"position":[[1295,1]]},"1209":{"position":[[2994,1]]},"1225":{"position":[[57,1]]},"1240":{"position":[[127,1]]},"1274":{"position":[[15,1]]},"1331":{"position":[[81,1]]},"1371":{"position":[[219,1]]},"1389":{"position":[[158,1]]},"1400":{"position":[[32,1]]},"1406":{"position":[[71,1]]},"1409":{"position":[[68,1]]},"1434":{"position":[[1295,1]]},"1443":{"position":[[2994,1]]},"1463":{"position":[[143,1]]},"1499":{"position":[[101,1]]},"1508":{"position":[[310,1],[498,1],[579,1],[729,1],[877,1],[939,1]]},"1519":{"position":[[180,1]]},"1521":{"position":[[48,1],[128,1]]},"1550":{"position":[[47,1]]}}}],["等于",{"_index":126,"t":{"849":{"position":[[113,2]]},"1452":{"position":[[45,2],[58,2],[115,2]]}}}],["等价",{"_index":1147,"t":{"1383":{"position":[[58,2]]}}}],["等同于",{"_index":1413,"t":{"1583":{"position":[[22,3]]}}}],["等待",{"_index":620,"t":{"985":{"position":[[281,2]]},"1027":{"position":[[490,2]]},"1132":{"position":[[544,2]]},"1142":{"position":[[210,2],[385,2]]},"1148":{"position":[[405,2]]},"1152":{"position":[[13,2],[35,2],[214,2],[509,2],[551,2],[592,2]]},"1162":{"position":[[383,2]]},"1164":{"position":[[41,2],[87,2]]},"1200":{"position":[[513,2],[1225,2]]},"1205":{"position":[[1239,2]]},"1207":{"position":[[153,2],[180,2],[1145,2]]},"1209":{"position":[[4400,2]]},"1218":{"position":[[281,2]]},"1290":{"position":[[490,2]]},"1434":{"position":[[513,2],[1225,2]]},"1439":{"position":[[1239,2]]},"1441":{"position":[[153,2],[180,2],[1145,2]]},"1443":{"position":[[4400,2]]}}}],["等等",{"_index":1420,"t":{"1583":{"position":[[173,2]]}}}],["简化",{"_index":849,"t":{"1093":{"position":[[76,2]]}}}],["简单",{"_index":590,"t":{"960":{"position":[[83,2]]},"1148":{"position":[[46,2]]},"1156":{"position":[[2,2]]},"1240":{"position":[[83,2]]},"1343":{"position":[[461,2]]},"1429":{"position":[[13,2]]},"1519":{"position":[[61,2]]},"1547":{"position":[[57,2]]}}}],["简史",{"_index":6,"t":{"845":{"position":[[3,2]]}}}],["简洁",{"_index":915,"t":{"1140":{"position":[[56,2]]},"1348":{"position":[[47,2]]},"1352":{"position":[[48,2]]},"1358":{"position":[[78,2]]},"1373":{"position":[[76,2]]},"1377":{"position":[[51,2]]}}}],["算法",{"_index":844,"t":{"1093":{"position":[[17,2]]}}}],["管理",{"_index":534,"t":{"945":{"position":[[32,2]]},"947":{"position":[[28,2]]},"960":{"position":[[15,2]]},"990":{"position":[[4,2],[11,2]]},"993":{"position":[[407,2]]},"1034":{"position":[[8,2]]},"1168":{"position":[[62,2]]},"1181":{"position":[[181,2]]},"1200":{"position":[[201,2]]},"1209":{"position":[[133,2],[1028,2]]},"1225":{"position":[[32,2]]},"1227":{"position":[[28,2]]},"1240":{"position":[[15,2]]},"1243":{"position":[[4,2],[11,2]]},"1246":{"position":[[407,2]]},"1251":{"position":[[8,2]]},"1434":{"position":[[201,2]]},"1443":{"position":[[133,2],[1028,2]]},"1508":{"position":[[617,2],[898,2]]},"1545":{"position":[[187,2]]},"1547":{"position":[[71,2]]},"1633":{"position":[[35,2]]},"1650":{"position":[[35,2]]}}}],["管道",{"_index":894,"t":{"1132":{"position":[[187,2]]}}}],["类",{"_index":479,"t":{"931":{"position":[[187,1]]},"1001":{"position":[[1395,1]]},"1209":{"position":[[222,1]]},"1264":{"position":[[1395,1]]},"1443":{"position":[[222,1]]}}}],["类似",{"_index":207,"t":{"851":{"position":[[279,2]]},"871":{"position":[[12,2]]},"1209":{"position":[[436,2]]},"1377":{"position":[[30,2]]},"1409":{"position":[[33,2]]},"1443":{"position":[[436,2]]},"1470":{"position":[[43,2],[106,2]]},"1496":{"position":[[1092,2]]}}}],["类型",{"_index":630,"t":{"993":{"position":[[93,2]]},"1001":{"position":[[51,2],[1235,2],[1389,2]]},"1200":{"position":[[1331,2]]},"1209":{"position":[[424,2],[2967,2],[3023,2]]},"1246":{"position":[[93,2]]},"1264":{"position":[[51,2],[1235,2],[1389,2]]},"1343":{"position":[[439,2]]},"1358":{"position":[[54,2]]},"1365":{"position":[[16,2]]},"1377":{"position":[[27,2]]},"1379":{"position":[[77,2],[93,2]]},"1389":{"position":[[34,2],[176,2]]},"1391":{"position":[[20,2],[42,2]]},"1395":{"position":[[175,2],[252,2]]},"1431":{"position":[[37,2]]},"1434":{"position":[[1331,2]]},"1443":{"position":[[424,2],[2967,2],[3023,2]]},"1452":{"position":[[614,2]]},"1463":{"position":[[141,2],[212,2]]},"1496":{"position":[[1746,2],[1860,2]]}}}],["类型信息",{"_index":1172,"t":{"1389":{"position":[[186,4]]}}}],["系统",{"_index":543,"t":{"945":{"position":[[96,2]]},"997":{"position":[[4,2],[47,2]]},"1019":{"position":[[119,2]]},"1209":{"position":[[69,2],[125,2]]},"1225":{"position":[[96,2]]},"1260":{"position":[[4,2],[47,2]]},"1282":{"position":[[119,2]]},"1443":{"position":[[69,2],[125,2]]},"1499":{"position":[[97,2]]},"1501":{"position":[[63,2]]},"1508":{"position":[[346,2],[396,2],[428,2],[533,2],[565,2],[595,2],[665,2],[953,2],[1010,2]]},"1511":{"position":[[1,2],[27,2],[50,2]]},"1515":{"position":[[29,2]]},"1521":{"position":[[34,2]]},"1543":{"position":[[101,2],[253,2]]},"1554":{"position":[[29,2]]},"1587":{"position":[[10,2]]},"1606":{"position":[[11,2]]},"1613":{"position":[[59,2]]},"1618":{"position":[[59,2]]},"1635":{"position":[[13,2]]},"1652":{"position":[[13,2]]},"1664":{"position":[[376,2]]}}}],["系统命令",{"_index":887,"t":{"1111":{"position":[[32,4]]}}}],["系统文件",{"_index":1268,"t":{"1508":{"position":[[54,4]]},"1519":{"position":[[155,4]]}}}],["系统管理",{"_index":903,"t":{"1134":{"position":[[216,4]]}}}],["系统配置",{"_index":1279,"t":{"1508":{"position":[[620,4]]}}}],["索引",{"_index":1159,"t":{"1386":{"position":[[116,2],[199,2]]}}}],["紧",{"_index":697,"t":{"1001":{"position":[[1224,1]]},"1264":{"position":[[1224,1]]}}}],["累积",{"_index":496,"t":{"938":{"position":[[38,2]]}}}],["繁琐",{"_index":1114,"t":{"1358":{"position":[[144,2]]}}}],["繁荣",{"_index":123,"t":{"849":{"position":[[96,2]]},"851":{"position":[[259,2]]}}}],["繁衍",{"_index":110,"t":{"849":{"position":[[42,2]]}}}],["约",{"_index":1327,"t":{"1524":{"position":[[123,1]]},"1543":{"position":[[305,1],[318,1],[334,1]]}}}],["级",{"_index":1261,"t":{"1499":{"position":[[75,1]]},"1547":{"position":[[196,1]]}}}],["级别",{"_index":801,"t":{"1056":{"position":[[34,2],[60,2]]},"1170":{"position":[[543,2]]},"1331":{"position":[[34,2],[60,2]]}}}],["纵览",{"_index":7,"t":{"845":{"position":[[6,2]]}}}],["线程",{"_index":530,"t":{"945":{"position":[[23,2]]},"1017":{"position":[[108,2]]},"1138":{"position":[[44,2]]},"1152":{"position":[[33,2]]},"1225":{"position":[[23,2]]},"1280":{"position":[[108,2]]},"1579":{"position":[[32,2],[76,2]]}}}],["组",{"_index":1349,"t":{"1543":{"position":[[255,1]]}}}],["组件",{"_index":684,"t":{"1001":{"position":[[167,2],[187,2],[196,2]]},"1264":{"position":[[167,2],[187,2],[196,2]]}}}],["组合",{"_index":705,"t":{"1003":{"position":[[23,2]]},"1207":{"position":[[99,2]]},"1209":{"position":[[400,2]]},"1266":{"position":[[23,2]]},"1441":{"position":[[99,2]]},"1443":{"position":[[400,2]]}}}],["组成部分",{"_index":1027,"t":{"1181":{"position":[[151,4]]}}}],["组织",{"_index":456,"t":{"924":{"position":[[73,2]]}}}],["终止",{"_index":753,"t":{"1015":{"position":[[2023,2]]},"1278":{"position":[[2023,2]]},"1527":{"position":[[1218,2]]},"1541":{"position":[[298,2]]},"1664":{"position":[[176,2]]}}}],["终端",{"_index":1284,"t":{"1508":{"position":[[720,2],[870,2],[916,2],[951,2],[1066,2]]}}}],["终端设备",{"_index":1289,"t":{"1508":{"position":[[837,4],[901,4],[1014,4]]}}}],["经历",{"_index":209,"t":{"851":{"position":[[289,2]]}}}],["经济",{"_index":130,"t":{"851":{"position":[[8,2],[141,2],[177,2],[254,2],[305,2],[612,2]]}}}],["经验",{"_index":434,"t":{"921":{"position":[[212,2]]}}}],["结合",{"_index":934,"t":{"1144":{"position":[[721,2]]},"1164":{"position":[[241,2],[383,2]]},"1406":{"position":[[54,2]]},"1460":{"position":[[41,2]]},"1601":{"position":[[1,2]]}}}],["结尾",{"_index":352,"t":{"875":{"position":[[17,2]]},"908":{"position":[[8,2]]},"1452":{"position":[[239,2]]}}}],["结束",{"_index":944,"t":{"1148":{"position":[[507,2]]},"1164":{"position":[[56,2]]},"1200":{"position":[[517,2]]},"1434":{"position":[[517,2]]},"1577":{"position":[[380,2]]},"1664":{"position":[[646,2],[856,2],[876,2]]}}}],["结构",{"_index":626,"t":{"990":{"position":[[18,2]]},"1001":{"position":[[1768,2]]},"1022":{"position":[[21,2]]},"1113":{"position":[[31,2]]},"1200":{"position":[[98,2],[1312,2]]},"1205":{"position":[[185,2],[287,2]]},"1207":{"position":[[273,2],[375,2]]},"1209":{"position":[[453,2],[1145,2],[3039,2]]},"1243":{"position":[[18,2]]},"1264":{"position":[[1768,2]]},"1285":{"position":[[21,2]]},"1343":{"position":[[481,2]]},"1367":{"position":[[35,2]]},"1389":{"position":[[117,2],[216,2],[236,2]]},"1400":{"position":[[0,2]]},"1434":{"position":[[98,2],[1312,2]]},"1439":{"position":[[185,2],[287,2]]},"1441":{"position":[[273,2],[375,2]]},"1443":{"position":[[453,2],[1145,2],[3039,2]]},"1446":{"position":[[32,2]]},"1456":{"position":[[236,2]]},"1496":{"position":[[945,2],[1120,2]]}}}],["结果",{"_index":469,"t":{"929":{"position":[[76,2]]},"931":{"position":[[68,2]]},"934":{"position":[[78,2]]},"936":{"position":[[111,2]]},"1200":{"position":[[1229,2]]},"1205":{"position":[[208,2]]},"1207":{"position":[[296,2]]},"1209":{"position":[[4402,2]]},"1371":{"position":[[52,2]]},"1434":{"position":[[1229,2]]},"1439":{"position":[[208,2]]},"1441":{"position":[[296,2]]},"1443":{"position":[[4402,2]]}}}],["绕过",{"_index":1325,"t":{"1524":{"position":[[80,2]]}}}],["绝对",{"_index":82,"t":{"847":{"position":[[184,2]]},"851":{"position":[[36,2]]}}}],["统一",{"_index":798,"t":{"1056":{"position":[[17,2]]},"1209":{"position":[[429,2]]},"1331":{"position":[[17,2]]},"1443":{"position":[[429,2]]}}}],["统治",{"_index":155,"t":{"851":{"position":[[104,2]]}}}],["统计",{"_index":999,"t":{"1168":{"position":[[317,2]]}}}],["继承",{"_index":706,"t":{"1003":{"position":[[27,2]]},"1266":{"position":[[27,2]]}}}],["继续",{"_index":941,"t":{"1148":{"position":[[25,2]]}}}],["继续执行",{"_index":947,"t":{"1150":{"position":[[502,4]]},"1568":{"position":[[64,4]]},"1664":{"position":[[772,4]]}}}],["维护",{"_index":510,"t":{"940":{"position":[[163,2]]},"997":{"position":[[93,2]]},"1260":{"position":[[93,2]]},"1552":{"position":[[35,2]]},"1613":{"position":[[96,2]]},"1618":{"position":[[96,2]]},"1633":{"position":[[99,2],[106,2]]},"1635":{"position":[[65,2]]},"1650":{"position":[[99,2],[106,2]]},"1652":{"position":[[65,2]]}}}],["缓冲",{"_index":918,"t":{"1142":{"position":[[156,2],[308,2]]}}}],["缓存",{"_index":1158,"t":{"1386":{"position":[[104,2]]}}}],["缓解",{"_index":229,"t":{"851":{"position":[[361,2]]}}}],["编写",{"_index":508,"t":{"940":{"position":[[156,2]]},"1547":{"position":[[181,2]]},"1550":{"position":[[52,2]]}}}],["编号",{"_index":725,"t":{"1007":{"position":[[60,2]]},"1270":{"position":[[60,2]]}}}],["编码",{"_index":672,"t":{"1001":{"position":[[61,2]]},"1017":{"position":[[4,2]]},"1264":{"position":[[61,2]]},"1280":{"position":[[4,2]]},"1452":{"position":[[376,2]]}}}],["编程",{"_index":647,"t":{"997":{"position":[[1,2]]},"1001":{"position":[[125,2]]},"1207":{"position":[[92,2]]},"1260":{"position":[[1,2]]},"1264":{"position":[[125,2]]},"1373":{"position":[[56,2]]},"1441":{"position":[[92,2]]}}}],["编程语言",{"_index":1369,"t":{"1550":{"position":[[48,4]]}}}],["编译",{"_index":1381,"t":{"1559":{"position":[[10,2]]}}}],["编译器",{"_index":636,"t":{"993":{"position":[[248,3]]},"1246":{"position":[[248,3]]}}}],["缺乏",{"_index":48,"t":{"847":{"position":[[85,2]]}}}],["缺点",{"_index":1099,"t":{"1343":{"position":[[423,2]]},"1348":{"position":[[3,2]]},"1352":{"position":[[3,2]]},"1356":{"position":[[3,2]]}}}],["网关",{"_index":1359,"t":{"1545":{"position":[[210,2],[214,2]]}}}],["网络",{"_index":816,"t":{"1068":{"position":[[192,2],[471,2]]},"1463":{"position":[[58,2]]},"1554":{"position":[[47,2]]}}}],["网络协议",{"_index":1326,"t":{"1524":{"position":[[82,4]]},"1545":{"position":[[230,4]]}}}],["网络接口",{"_index":1280,"t":{"1508":{"position":[[677,4],[873,4]]}}}],["置于",{"_index":408,"t":{"921":{"position":[[98,2]]}}}],["考虑",{"_index":969,"t":{"1164":{"position":[[311,2]]},"1541":{"position":[[339,2]]}}}],["而是",{"_index":104,"t":{"849":{"position":[[22,2]]},"851":{"position":[[277,2]]},"1019":{"position":[[20,2]]},"1282":{"position":[[20,2]]}}}],["而言",{"_index":129,"t":{"851":{"position":[[5,2]]}}}],["耗时",{"_index":1071,"t":{"1207":{"position":[[1067,2]]},"1441":{"position":[[1067,2]]},"1534":{"position":[[361,2]]}}}],["耦",{"_index":676,"t":{"1001":{"position":[[79,1]]},"1209":{"position":[[63,1],[3014,1]]},"1264":{"position":[[79,1]]},"1443":{"position":[[63,1],[3014,1]]}}}],["耦合",{"_index":563,"t":{"950":{"position":[[102,2]]},"1001":{"position":[[202,2],[1225,2]]},"1025":{"position":[[465,2]]},"1037":{"position":[[83,2]]},"1230":{"position":[[102,2]]},"1254":{"position":[[83,2]]},"1264":{"position":[[202,2],[1225,2]]},"1288":{"position":[[465,2]]}}}],["职责",{"_index":528,"t":{"945":{"position":[[4,2]]},"1001":{"position":[[162,2]]},"1225":{"position":[[4,2]]},"1264":{"position":[[162,2]]}}}],["聚合",{"_index":711,"t":{"1003":{"position":[[148,2]]},"1009":{"position":[[50,2]]},"1205":{"position":[[284,2]]},"1207":{"position":[[372,2]]},"1266":{"position":[[148,2]]},"1272":{"position":[[50,2]]},"1439":{"position":[[284,2]]},"1441":{"position":[[372,2]]}}}],["聚居",{"_index":153,"t":{"851":{"position":[[96,2]]}}}],["股票",{"_index":168,"t":{"851":{"position":[[154,2]]}}}],["背景",{"_index":419,"t":{"921":{"position":[[146,2]]}}}],["能",{"_index":1,"t":{"843":{"position":[[0,1],[10,1]]},"847":{"position":[[105,1]]},"853":{"position":[[73,1]]},"979":{"position":[[3,1]]},"1009":{"position":[[7,1]]},"1106":{"position":[[87,1]]},"1212":{"position":[[3,1]]},"1272":{"position":[[7,1]]}}}],["能力",{"_index":710,"t":{"1003":{"position":[[140,2]]},"1019":{"position":[[56,2]]},"1266":{"position":[[140,2]]},"1282":{"position":[[56,2]]}}}],["能够",{"_index":651,"t":{"997":{"position":[[49,2]]},"1209":{"position":[[127,2]]},"1260":{"position":[[49,2]]},"1443":{"position":[[127,2]]},"1508":{"position":[[320,2],[1159,2]]},"1547":{"position":[[135,2]]}}}],["脚本",{"_index":1422,"t":{"1585":{"position":[[23,2]]}}}],["脱离",{"_index":176,"t":{"851":{"position":[[173,2]]}}}],["自主权",{"_index":301,"t":{"853":{"position":[[48,3],[88,3]]}}}],["自信",{"_index":201,"t":{"851":{"position":[[249,2]]}}}],["自动",{"_index":631,"t":{"993":{"position":[[96,2],[251,2]]},"1098":{"position":[[504,2]]},"1162":{"position":[[438,2]]},"1168":{"position":[[57,2]]},"1246":{"position":[[96,2],[251,2]]},"1431":{"position":[[44,2]]},"1543":{"position":[[170,2]]},"1574":{"position":[[407,2]]},"1664":{"position":[[368,2]]}}}],["自动化",{"_index":901,"t":{"1134":{"position":[[210,3]]},"1585":{"position":[[28,3]]}}}],["自定义",{"_index":1030,"t":{"1181":{"position":[[193,3]]},"1427":{"position":[[159,3]]},"1446":{"position":[[47,3]]},"1454":{"position":[[2,3]]},"1463":{"position":[[209,3]]},"1470":{"position":[[25,3],[70,3],[166,3]]},"1479":{"position":[[169,3]]},"1658":{"position":[[97,3]]}}}],["自己",{"_index":298,"t":{"853":{"position":[[36,2],[101,2]]},"960":{"position":[[55,2]]},"993":{"position":[[1484,2]]},"1001":{"position":[[172,2]]},"1025":{"position":[[837,2]]},"1072":{"position":[[70,2]]},"1240":{"position":[[55,2]]},"1246":{"position":[[1484,2]]},"1264":{"position":[[172,2]]},"1288":{"position":[[837,2]]},"1298":{"position":[[70,2]]}}}],["自我",{"_index":118,"t":{"849":{"position":[[68,2]]}}}],["自然",{"_index":54,"t":{"847":{"position":[[100,2]]}}}],["自由",{"_index":63,"t":{"847":{"position":[[129,2],[169,2],[187,2]]}}}],["自私",{"_index":279,"t":{"851":{"position":[[585,2]]}}}],["至少",{"_index":1220,"t":{"1452":{"position":[[535,2]]}}}],["至此",{"_index":1416,"t":{"1583":{"position":[[82,2]]}}}],["航海",{"_index":22,"t":{"847":{"position":[[1,2]]}}}],["艰难",{"_index":149,"t":{"851":{"position":[[82,2]]}}}],["荷兰",{"_index":32,"t":{"847":{"position":[[34,2],[58,2],[122,2]]}}}],["获取",{"_index":350,"t":{"875":{"position":[[0,2]]},"981":{"position":[[119,2]]},"1086":{"position":[[84,2]]},"1115":{"position":[[116,2]]},"1134":{"position":[[88,2],[116,2]]},"1170":{"position":[[0,2]]},"1179":{"position":[[77,2]]},"1209":{"position":[[1586,2],[2715,2]]},"1214":{"position":[[119,2]]},"1312":{"position":[[84,2]]},"1389":{"position":[[69,2],[181,2],[196,2]]},"1391":{"position":[[52,2],[85,2]]},"1395":{"position":[[320,2],[358,2]]},"1443":{"position":[[1586,2],[2715,2]]},"1508":{"position":[[394,2],[527,2],[643,2]]}}}],["菜单栏",{"_index":1162,"t":{"1386":{"position":[[128,3]]}}}],["葡萄牙",{"_index":26,"t":{"847":{"position":[[14,3]]}}}],["虚拟",{"_index":167,"t":{"851":{"position":[[148,2]]},"1508":{"position":[[45,2],[331,2],[417,2],[552,2]]},"1519":{"position":[[191,2]]}}}],["蛋糕",{"_index":140,"t":{"851":{"position":[[46,2]]}}}],["行",{"_index":339,"t":{"861":{"position":[[28,1],[55,1],[76,1]]},"1383":{"position":[[133,1]]},"1570":{"position":[[27,1],[92,1]]}}}],["行为",{"_index":451,"t":{"924":{"position":[[48,2]]},"926":{"position":[[3,2]]},"1003":{"position":[[31,2]]},"1005":{"position":[[44,2]]},"1063":{"position":[[108,2]]},"1266":{"position":[[31,2]]},"1268":{"position":[[44,2]]},"1338":{"position":[[108,2]]}}}],["行号",{"_index":332,"t":{"857":{"position":[[35,2]]}}}],["行时",{"_index":1417,"t":{"1583":{"position":[[84,2]]}}}],["表现",{"_index":1019,"t":{"1181":{"position":[[22,2]]}}}],["表示",{"_index":635,"t":{"993":{"position":[[245,2]]},"1025":{"position":[[134,2],[141,2]]},"1168":{"position":[[144,2]]},"1200":{"position":[[89,2]]},"1246":{"position":[[245,2]]},"1288":{"position":[[134,2],[141,2]]},"1377":{"position":[[23,2]]},"1379":{"position":[[75,2]]},"1391":{"position":[[37,2],[70,2]]},"1434":{"position":[[89,2]]},"1456":{"position":[[229,2]]},"1501":{"position":[[139,2]]},"1508":{"position":[[1034,2]]},"1574":{"position":[[348,2],[360,2]]}}}],["表达式",{"_index":1418,"t":{"1583":{"position":[[103,3],[112,3]]}}}],["西",{"_index":407,"t":{"921":{"position":[[91,1]]}}}],["西班牙",{"_index":25,"t":{"847":{"position":[[10,3]]}}}],["要",{"_index":700,"t":{"1001":{"position":[[1742,1]]},"1102":{"position":[[0,1]]},"1164":{"position":[[230,1]]},"1264":{"position":[[1742,1]]}}}],["要求",{"_index":838,"t":{"1082":{"position":[[285,2]]},"1308":{"position":[[285,2]]},"1519":{"position":[[258,2]]},"1545":{"position":[[196,2]]}}}],["覆盖",{"_index":465,"t":{"926":{"position":[[37,2]]},"929":{"position":[[126,2]]},"931":{"position":[[48,2],[123,2]]},"934":{"position":[[133,2]]},"936":{"position":[[261,2]]},"938":{"position":[[93,2]]},"940":{"position":[[30,2],[132,2]]}}}],["观察",{"_index":1410,"t":{"1581":{"position":[[4,2],[62,2],[120,2]]},"1583":{"position":[[91,2]]}}}],["观念",{"_index":111,"t":{"849":{"position":[[45,2]]}}}],["规则",{"_index":461,"t":{"926":{"position":[[17,2],[34,2],[42,2],[59,2],[71,2],[76,2]]},"931":{"position":[[53,2],[169,2],[201,2]]},"934":{"position":[[160,2]]},"936":{"position":[[174,2],[195,2]]},"938":{"position":[[28,2],[80,2],[91,2]]},"940":{"position":[[12,2],[27,2],[60,2]]},"1005":{"position":[[16,2]]},"1015":{"position":[[1912,2]]},"1200":{"position":[[93,2],[203,2],[342,2]]},"1205":{"position":[[191,2],[827,2]]},"1207":{"position":[[279,2]]},"1209":{"position":[[1340,2],[1588,2],[2717,2]]},"1268":{"position":[[16,2]]},"1278":{"position":[[1912,2]]},"1434":{"position":[[93,2],[203,2],[342,2]]},"1439":{"position":[[191,2],[827,2]]},"1441":{"position":[[279,2]]},"1443":{"position":[[1340,2],[1588,2],[2717,2]]},"1446":{"position":[[52,2]]},"1454":{"position":[[7,2]]},"1470":{"position":[[101,2]]}}}],["规模",{"_index":656,"t":{"997":{"position":[[66,2]]},"1009":{"position":[[9,2]]},"1260":{"position":[[66,2]]},"1272":{"position":[[9,2]]}}}],["规避",{"_index":829,"t":{"1068":{"position":[[504,2]]}}}],["视角",{"_index":20,"t":{"845":{"position":[[49,2]]}}}],["角度",{"_index":256,"t":{"851":{"position":[[490,2]]}}}],["角色",{"_index":260,"t":{"851":{"position":[[509,2]]}}}],["解",{"_index":675,"t":{"1001":{"position":[[78,1]]},"1209":{"position":[[62,1],[3013,1]]},"1264":{"position":[[78,1]]},"1443":{"position":[[62,1],[3013,1]]}}}],["解决",{"_index":808,"t":{"1068":{"position":[[82,2]]}}}],["解密",{"_index":795,"t":{"1047":{"position":[[2982,2]]},"1072":{"position":[[57,2]]},"1298":{"position":[[57,2]]},"1322":{"position":[[2982,2]]},"1496":{"position":[[1054,2]]}}}],["解析",{"_index":728,"t":{"1007":{"position":[[71,2]]},"1144":{"position":[[564,2]]},"1270":{"position":[[71,2]]},"1343":{"position":[[32,2],[50,2],[469,2],[472,2]]},"1348":{"position":[[6,2]]},"1352":{"position":[[29,2]]},"1356":{"position":[[18,2]]},"1358":{"position":[[35,2],[45,2],[121,2],[133,2],[164,2],[187,2]]},"1360":{"position":[[36,2],[58,2],[96,2]]},"1389":{"position":[[115,2]]},"1409":{"position":[[13,2]]},"1424":{"position":[[117,2]]},"1427":{"position":[[23,2],[162,2],[277,2]]},"1429":{"position":[[26,2]]},"1496":{"position":[[1916,2]]}}}],["解释",{"_index":470,"t":{"929":{"position":[[93,2]]},"931":{"position":[[83,2]]},"934":{"position":[[109,2]]},"936":{"position":[[154,2]]},"1142":{"position":[[274,2]]},"1148":{"position":[[438,2]]},"1150":{"position":[[418,2]]},"1152":{"position":[[535,2]]},"1154":{"position":[[346,2]]},"1158":{"position":[[289,2]]},"1162":{"position":[[409,2]]}}}],["解锁",{"_index":917,"t":{"1140":{"position":[[66,2]]}}}],["触发",{"_index":932,"t":{"1144":{"position":[[668,2]]},"1152":{"position":[[41,2],[437,2]]},"1164":{"position":[[84,2]]},"1168":{"position":[[23,2],[129,2],[159,2]]},"1209":{"position":[[329,2]]},"1443":{"position":[[329,2]]},"1608":{"position":[[22,2]]}}}],["警告",{"_index":1150,"t":{"1386":{"position":[[4,2]]}}}],["计数",{"_index":942,"t":{"1148":{"position":[[169,2],[353,2],[454,2],[512,2]]},"1150":{"position":[[246,2],[401,2]]},"1158":{"position":[[272,2]]}}}],["计数器",{"_index":1402,"t":{"1574":{"position":[[352,3]]}}}],["计时",{"_index":739,"t":{"1011":{"position":[[61,2]]},"1274":{"position":[[61,2]]}}}],["计算",{"_index":632,"t":{"993":{"position":[[98,2],[253,2]]},"1106":{"position":[[81,2]]},"1164":{"position":[[120,2]]},"1246":{"position":[[98,2],[253,2]]},"1373":{"position":[[28,2]]}}}],["计算成本",{"_index":857,"t":{"1098":{"position":[[437,4]]},"1108":{"position":[[349,4]]}}}],["订单",{"_index":693,"t":{"1001":{"position":[[867,2],[899,2],[1415,2],[1537,2],[1569,2]]},"1264":{"position":[[867,2],[899,2],[1415,2],[1537,2],[1569,2]]}}}],["认证",{"_index":825,"t":{"1068":{"position":[[398,2]]},"1543":{"position":[[267,2]]}}}],["讨论",{"_index":1318,"t":{"1521":{"position":[[121,2]]}}}],["记录",{"_index":1341,"t":{"1541":{"position":[[404,2]]}}}],["许多",{"_index":1278,"t":{"1508":{"position":[[586,2]]}}}],["讽刺",{"_index":325,"t":{"853":{"position":[[148,2]]}}}],["设备",{"_index":1269,"t":{"1508":{"position":[[351,2],[575,2],[588,2],[653,2],[711,2],[727,2],[734,2],[748,2],[780,2],[805,2],[825,2],[863,2],[921,2]]}}}],["设定",{"_index":1446,"t":{"1658":{"position":[[107,2]]}}}],["设置",{"_index":772,"t":{"1022":{"position":[[56,2]]},"1068":{"position":[[93,2],[289,2]]},"1168":{"position":[[121,2],[166,2],[182,2],[256,2]]},"1170":{"position":[[161,2],[170,2],[532,2]]},"1181":{"position":[[29,2]]},"1200":{"position":[[91,2],[210,2]]},"1205":{"position":[[189,2]]},"1207":{"position":[[67,2],[277,2]]},"1209":{"position":[[1338,2]]},"1285":{"position":[[56,2]]},"1367":{"position":[[57,2]]},"1395":{"position":[[34,2]]},"1434":{"position":[[91,2],[210,2]]},"1439":{"position":[[189,2]]},"1441":{"position":[[67,2],[277,2]]},"1443":{"position":[[1338,2]]},"1527":{"position":[[393,2],[467,2]]},"1532":{"position":[[420,2],[490,2]]},"1543":{"position":[[234,2]]},"1547":{"position":[[86,2]]},"1562":{"position":[[79,2]]},"1568":{"position":[[16,2]]},"1570":{"position":[[16,2],[55,2],[88,2]]},"1577":{"position":[[139,2],[393,2]]},"1664":{"position":[[241,2]]}}}],["设计",{"_index":101,"t":{"849":{"position":[[14,2]]},"950":{"position":[[104,2]]},"962":{"position":[[12,2]]},"997":{"position":[[6,2]]},"999":{"position":[[24,2]]},"1001":{"position":[[116,2]]},"1019":{"position":[[17,2]]},"1025":{"position":[[467,2],[573,2]]},"1037":{"position":[[85,2]]},"1061":{"position":[[4,2]]},"1183":{"position":[[12,2]]},"1200":{"position":[[1236,2]]},"1209":{"position":[[2951,2]]},"1230":{"position":[[104,2]]},"1254":{"position":[[85,2]]},"1260":{"position":[[6,2]]},"1262":{"position":[[24,2]]},"1264":{"position":[[116,2]]},"1282":{"position":[[17,2]]},"1288":{"position":[[467,2],[573,2]]},"1336":{"position":[[4,2]]},"1431":{"position":[[27,2]]},"1434":{"position":[[1236,2]]},"1443":{"position":[[2951,2]]},"1552":{"position":[[88,2]]}}}],["访问",{"_index":566,"t":{"950":{"position":[[270,2]]},"1154":{"position":[[408,2]]},"1164":{"position":[[347,2]]},"1230":{"position":[[270,2]]},"1389":{"position":[[231,2]]},"1501":{"position":[[39,2]]},"1508":{"position":[[324,2],[778,2]]},"1513":{"position":[[29,2]]},"1519":{"position":[[81,2]]},"1524":{"position":[[97,2]]},"1543":{"position":[[226,2]]},"1545":{"position":[[184,2]]},"1574":{"position":[[333,2]]}}}],["证书",{"_index":813,"t":{"1068":{"position":[[171,2],[197,2],[212,2],[218,2],[284,2]]}}}],["证明",{"_index":396,"t":{"921":{"position":[[64,2]]}}}],["识别",{"_index":1156,"t":{"1386":{"position":[[50,2]]}}}],["诊断",{"_index":736,"t":{"1011":{"position":[[21,2]]},"1019":{"position":[[67,2]]},"1181":{"position":[[174,2]]},"1274":{"position":[[21,2]]},"1282":{"position":[[67,2]]},"1547":{"position":[[211,2]]},"1550":{"position":[[80,2]]}}}],["话",{"_index":3,"t":{"843":{"position":[[4,1],[14,1]]}}}],["详细",{"_index":822,"t":{"1068":{"position":[[315,2]]},"1166":{"position":[[54,2]]},"1422":{"position":[[158,2]]},"1521":{"position":[[115,2]]},"1559":{"position":[[12,2]]}}}],["语句",{"_index":923,"t":{"1144":{"position":[[7,2]]},"1383":{"position":[[128,2]]},"1406":{"position":[[42,2]]}}}],["语法",{"_index":460,"t":{"926":{"position":[[0,2]]},"1358":{"position":[[76,2]]}}}],["语言",{"_index":913,"t":{"1140":{"position":[[47,2]]},"1164":{"position":[[328,2]]},"1389":{"position":[[7,2]]},"1446":{"position":[[15,2]]}}}],["说",{"_index":2,"t":{"843":{"position":[[1,1],[11,1]]}}}],["说明",{"_index":855,"t":{"1098":{"position":[[337,2]]},"1100":{"position":[[380,2]]},"1106":{"position":[[3,2]]},"1200":{"position":[[1145,2]]},"1203":{"position":[[127,2],[217,2]]},"1434":{"position":[[1145,2]]},"1437":{"position":[[127,2],[217,2]]}}}],["请求",{"_index":738,"t":{"1011":{"position":[[54,2]]},"1144":{"position":[[733,2]]},"1200":{"position":[[96,2],[1252,2]]},"1205":{"position":[[183,2],[829,2]]},"1207":{"position":[[271,2]]},"1209":{"position":[[51,2],[231,2],[426,2],[707,2],[908,2]]},"1274":{"position":[[54,2]]},"1434":{"position":[[96,2],[1252,2]]},"1439":{"position":[[183,2],[829,2]]},"1441":{"position":[[271,2]]},"1443":{"position":[[51,2],[231,2],[426,2],[707,2],[908,2]]},"1534":{"position":[[355,2]]},"1539":{"position":[[123,2]]},"1541":{"position":[[300,2],[406,2]]}}}],["读取",{"_index":604,"t":{"979":{"position":[[4,2]]},"981":{"position":[[108,2]]},"983":{"position":[[4,2]]},"985":{"position":[[7,2]]},"1072":{"position":[[52,2]]},"1122":{"position":[[20,2]]},"1134":{"position":[[70,2]]},"1168":{"position":[[313,2]]},"1172":{"position":[[0,2]]},"1203":{"position":[[51,2],[623,2]]},"1212":{"position":[[4,2]]},"1214":{"position":[[108,2]]},"1216":{"position":[[4,2]]},"1218":{"position":[[7,2]]},"1298":{"position":[[52,2]]},"1360":{"position":[[1,2]]},"1371":{"position":[[203,2]]},"1437":{"position":[[51,2],[623,2]]},"1539":{"position":[[249,2]]},"1581":{"position":[[71,2],[131,2]]},"1625":{"position":[[19,2],[297,2]]},"1642":{"position":[[19,2],[297,2]]}}}],["读取数据",{"_index":924,"t":{"1144":{"position":[[23,4]]}}}],["调度",{"_index":531,"t":{"945":{"position":[[25,2]]},"1170":{"position":[[116,2]]},"1209":{"position":[[299,2],[1033,2]]},"1225":{"position":[[25,2]]},"1443":{"position":[[299,2],[1033,2]]}}}],["调整",{"_index":730,"t":{"1009":{"position":[[11,2]]},"1098":{"position":[[448,2]]},"1272":{"position":[[11,2]]},"1541":{"position":[[312,2]]}}}],["调用",{"_index":646,"t":{"993":{"position":[[1832,2]]},"1001":{"position":[[594,2]]},"1025":{"position":[[1157,2]]},"1148":{"position":[[473,2],[547,2]]},"1170":{"position":[[4,2]]},"1207":{"position":[[1787,2],[1887,2],[2132,2]]},"1209":{"position":[[271,2]]},"1246":{"position":[[1832,2]]},"1264":{"position":[[594,2]]},"1288":{"position":[[1157,2]]},"1373":{"position":[[47,2]]},"1389":{"position":[[95,2],[209,2],[214,2]]},"1402":{"position":[[3,2],[358,2]]},"1404":{"position":[[26,2]]},"1441":{"position":[[1787,2],[1887,2],[2132,2]]},"1443":{"position":[[271,2]]},"1496":{"position":[[1762,2],[1867,2],[1932,2],[1961,2]]},"1543":{"position":[[103,2]]},"1568":{"position":[[156,2]]},"1606":{"position":[[13,2]]},"1613":{"position":[[61,2]]},"1618":{"position":[[61,2]]},"1635":{"position":[[15,2]]},"1652":{"position":[[15,2]]},"1662":{"position":[[519,2]]},"1664":{"position":[[378,2]]}}}],["调用者",{"_index":1040,"t":{"1200":{"position":[[1156,3]]},"1205":{"position":[[706,3]]},"1207":{"position":[[26,3]]},"1209":{"position":[[324,3]]},"1434":{"position":[[1156,3]]},"1439":{"position":[[706,3]]},"1441":{"position":[[26,3]]},"1443":{"position":[[324,3]]}}}],["调试",{"_index":338,"t":{"859":{"position":[[27,2]]},"945":{"position":[[72,2]]},"1068":{"position":[[291,2],[308,2]]},"1166":{"position":[[25,2]]},"1168":{"position":[[73,2]]},"1170":{"position":[[95,2],[195,2]]},"1181":{"position":[[167,2],[230,2]]},"1225":{"position":[[72,2]]},"1404":{"position":[[8,2]]},"1543":{"position":[[6,2]]},"1550":{"position":[[23,2],[32,2]]},"1552":{"position":[[120,2]]},"1554":{"position":[[23,2],[42,2],[49,2],[63,2],[73,2]]},"1562":{"position":[[9,2]]},"1574":{"position":[[400,2]]},"1577":{"position":[[83,2],[195,2],[262,2],[308,2],[432,2]]},"1585":{"position":[[31,2]]},"1587":{"position":[[12,2]]},"1592":{"position":[[14,2]]},"1603":{"position":[[4,2]]}}}],["调试信息",{"_index":329,"t":{"857":{"position":[[4,4]]},"1594":{"position":[[9,4]]}}}],["谨慎",{"_index":1023,"t":{"1181":{"position":[[94,2]]}}}],["象征",{"_index":272,"t":{"851":{"position":[[552,2]]}}}],["负数",{"_index":994,"t":{"1168":{"position":[[169,2]]}}}],["负责",{"_index":529,"t":{"945":{"position":[[12,2]]},"947":{"position":[[11,2]]},"1205":{"position":[[130,2]]},"1209":{"position":[[114,2],[262,2]]},"1225":{"position":[[12,2]]},"1227":{"position":[[11,2]]},"1439":{"position":[[130,2]]},"1443":{"position":[[114,2],[262,2]]}}}],["负载",{"_index":769,"t":{"1022":{"position":[[35,2]]},"1025":{"position":[[187,2]]},"1285":{"position":[[35,2]]},"1288":{"position":[[187,2]]}}}],["贡献",{"_index":391,"t":{"921":{"position":[[39,2]]}}}],["财产",{"_index":45,"t":{"847":{"position":[[75,2]]}}}],["财富",{"_index":53,"t":{"847":{"position":[[98,2]]},"851":{"position":[[133,2],[533,2],[558,2],[573,2]]}}}],["责任",{"_index":322,"t":{"853":{"position":[[138,2]]}}}],["贪婪",{"_index":181,"t":{"851":{"position":[[189,2],[602,2]]}}}],["贴近",{"_index":433,"t":{"921":{"position":[[205,2]]}}}],["资本",{"_index":52,"t":{"847":{"position":[[95,2]]},"851":{"position":[[150,2],[388,2],[421,2],[437,2]]}}}],["资本主义",{"_index":182,"t":{"851":{"position":[[192,4],[379,4],[495,4]]}}}],["资源",{"_index":1060,"t":{"1205":{"position":[[137,2]]},"1439":{"position":[[137,2]]},"1524":{"position":[[140,2]]},"1635":{"position":[[80,2]]},"1652":{"position":[[80,2]]}}}],["赋予",{"_index":423,"t":{"921":{"position":[[161,2],[230,2]]}}}],["赋值",{"_index":497,"t":{"938":{"position":[[52,2]]}}}],["走向",{"_index":85,"t":{"847":{"position":[[195,2]]}}}],["起来",{"_index":1362,"t":{"1547":{"position":[[52,2]]}}}],["超",{"_index":172,"t":{"851":{"position":[[164,1]]}}}],["超时",{"_index":714,"t":{"1005":{"position":[[11,2]]},"1013":{"position":[[24,2],[47,2]]},"1022":{"position":[[42,2],[58,2]]},"1025":{"position":[[344,2]]},"1134":{"position":[[170,2]]},"1144":{"position":[[703,2]]},"1160":{"position":[[42,2]]},"1162":{"position":[[138,2]]},"1164":{"position":[[136,2],[297,2],[427,2]]},"1207":{"position":[[141,2],[890,2],[1161,2],[1895,2]]},"1209":{"position":[[2139,2],[5974,2]]},"1268":{"position":[[11,2]]},"1276":{"position":[[24,2],[47,2]]},"1285":{"position":[[42,2],[58,2]]},"1288":{"position":[[344,2]]},"1441":{"position":[[141,2],[890,2],[1161,2],[1895,2]]},"1443":{"position":[[2139,2],[5974,2]]},"1541":{"position":[[366,2]]}}}],["越",{"_index":996,"t":{"1168":{"position":[[203,1],[207,1]]}}}],["足够",{"_index":1308,"t":{"1519":{"position":[[16,2]]},"1635":{"position":[[140,2]]},"1652":{"position":[[140,2]]}}}],["跃升",{"_index":214,"t":{"851":{"position":[[301,2]]}}}],["跟踪",{"_index":1013,"t":{"1170":{"position":[[541,2]]},"1543":{"position":[[99,2]]},"1577":{"position":[[144,2],[353,2]]}}}],["跨",{"_index":581,"t":{"958":{"position":[[21,1]]},"1238":{"position":[[21,1]]}}}],["跨平台",{"_index":1435,"t":{"1633":{"position":[[91,3]]},"1650":{"position":[[91,3]]}}}],["路径",{"_index":716,"t":{"1005":{"position":[[18,2]]},"1019":{"position":[[64,2]]},"1268":{"position":[[18,2]]},"1282":{"position":[[64,2]]},"1499":{"position":[[61,2]]},"1501":{"position":[[17,2]]},"1524":{"position":[[64,2]]},"1541":{"position":[[259,2]]},"1577":{"position":[[367,2]]}}}],["路由",{"_index":554,"t":{"947":{"position":[[21,2]]},"958":{"position":[[78,2]]},"993":{"position":[[1617,2]]},"1025":{"position":[[566,2],[970,2]]},"1227":{"position":[[21,2]]},"1238":{"position":[[78,2]]},"1246":{"position":[[1617,2]]},"1288":{"position":[[566,2],[970,2]]},"1527":{"position":[[492,2]]},"1532":{"position":[[602,2]]}}}],["跳转",{"_index":1154,"t":{"1386":{"position":[[19,2]]}}}],["转储",{"_index":1005,"t":{"1168":{"position":[[543,2]]}}}],["转化",{"_index":1237,"t":{"1470":{"position":[[75,2]]}}}],["转发",{"_index":764,"t":{"1022":{"position":[[10,2]]},"1031":{"position":[[292,2]]},"1285":{"position":[[10,2]]},"1294":{"position":[[292,2]]}}}],["转换",{"_index":1236,"t":{"1470":{"position":[[30,2]]},"1496":{"position":[[1849,2]]}}}],["转换成",{"_index":634,"t":{"993":{"position":[[228,3]]},"1246":{"position":[[228,3]]}}}],["软",{"_index":998,"t":{"1168":{"position":[[260,1]]}}}],["软件包",{"_index":1304,"t":{"1515":{"position":[[34,3]]}}}],["软件开发",{"_index":1375,"t":{"1554":{"position":[[0,4]]}}}],["轻松",{"_index":696,"t":{"1001":{"position":[[976,2]]},"1009":{"position":[[71,2]]},"1209":{"position":[[130,2]]},"1264":{"position":[[976,2]]},"1272":{"position":[[71,2]]},"1443":{"position":[[130,2]]}}}],["较",{"_index":858,"t":{"1098":{"position":[[467,1]]},"1343":{"position":[[455,1]]},"1356":{"position":[[49,1]]},"1358":{"position":[[143,1],[192,1]]}}}],["较慢",{"_index":1112,"t":{"1358":{"position":[[49,2]]}}}],["辉煌",{"_index":418,"t":{"921":{"position":[[143,2]]}}}],["输入",{"_index":899,"t":{"1134":{"position":[[141,2]]},"1414":{"position":[[153,2],[227,2]]},"1416":{"position":[[148,2],[219,2]]},"1424":{"position":[[157,2]]},"1427":{"position":[[196,2]]},"1460":{"position":[[32,2]]}}}],["输出",{"_index":344,"t":{"868":{"position":[[34,2]]},"884":{"position":[[87,2],[221,2]]},"898":{"position":[[231,2],[295,2]]},"905":{"position":[[74,2]]},"912":{"position":[[76,2]]},"919":{"position":[[83,2]]},"1056":{"position":[[63,2]]},"1115":{"position":[[123,2]]},"1122":{"position":[[27,2]]},"1134":{"position":[[50,2],[74,2],[92,2],[120,2]]},"1203":{"position":[[466,2],[533,2],[599,2],[704,2],[803,2],[902,2]]},"1209":{"position":[[6218,2]]},"1331":{"position":[[63,2]]},"1402":{"position":[[613,2]]},"1437":{"position":[[466,2],[533,2],[599,2],[704,2],[803,2],[902,2]]},"1443":{"position":[[6218,2]]},"1658":{"position":[[100,2]]}}}],["边",{"_index":1123,"t":{"1371":{"position":[[232,1],[235,1]]}}}],["边界条件",{"_index":740,"t":{"1013":{"position":[[5,4]]},"1276":{"position":[[5,4]]}}}],["迁徙",{"_index":146,"t":{"851":{"position":[[71,2]]}}}],["迁移",{"_index":788,"t":{"1044":{"position":[[9,2],[20,2]]},"1047":{"position":[[1835,2]]},"1319":{"position":[[9,2],[20,2]]},"1322":{"position":[[1835,2]]}}}],["过",{"_index":248,"t":{"851":{"position":[[464,1]]},"1104":{"position":[[9,1],[478,1]]},"1181":{"position":[[31,1],[56,1]]}}}],["过于",{"_index":425,"t":{"921":{"position":[[177,2]]}}}],["过去",{"_index":191,"t":{"851":{"position":[[222,2]]}}}],["过度",{"_index":757,"t":{"1019":{"position":[[15,2]]},"1282":{"position":[[15,2]]}}}],["过时",{"_index":874,"t":{"1106":{"position":[[58,2]]}}}],["过期",{"_index":814,"t":{"1068":{"position":[[176,2]]}}}],["过程",{"_index":824,"t":{"1068":{"position":[[320,2]]},"1207":{"position":[[182,2]]},"1441":{"position":[[182,2]]}}}],["运行",{"_index":521,"t":{"942":{"position":[[46,2]]},"947":{"position":[[79,2]]},"960":{"position":[[52,2]]},"993":{"position":[[1195,2]]},"1059":{"position":[[436,2]]},"1111":{"position":[[12,2]]},"1134":{"position":[[18,2]]},"1166":{"position":[[28,2]]},"1222":{"position":[[46,2]]},"1227":{"position":[[79,2]]},"1240":{"position":[[52,2]]},"1246":{"position":[[1195,2]]},"1334":{"position":[[436,2]]},"1375":{"position":[[186,2]]},"1386":{"position":[[33,2],[38,2]]},"1389":{"position":[[23,2]]},"1414":{"position":[[338,2]]},"1416":{"position":[[340,2]]},"1418":{"position":[[535,2]]},"1420":{"position":[[284,2]]},"1422":{"position":[[326,2]]},"1424":{"position":[[250,2]]},"1501":{"position":[[30,2]]},"1508":{"position":[[441,2],[965,2],[1163,2]]},"1517":{"position":[[4,2]]},"1554":{"position":[[32,2]]},"1577":{"position":[[430,2]]},"1596":{"position":[[0,2],[47,2]]},"1661":{"position":[[354,2]]},"1662":{"position":[[328,2]]}}}],["近代",{"_index":231,"t":{"851":{"position":[[369,2]]}}}],["返回",{"_index":347,"t":{"871":{"position":[[5,2]]},"979":{"position":[[15,2]]},"983":{"position":[[6,2],[172,2],[398,2]]},"985":{"position":[[4,2]]},"993":{"position":[[1842,2]]},"1025":{"position":[[391,2],[1167,2]]},"1037":{"position":[[191,2]]},"1100":{"position":[[459,2],[468,2]]},"1104":{"position":[[222,2]]},"1168":{"position":[[41,2],[113,2]]},"1170":{"position":[[34,2]]},"1200":{"position":[[176,2]]},"1203":{"position":[[78,2],[162,2]]},"1205":{"position":[[206,2]]},"1207":{"position":[[294,2]]},"1209":{"position":[[4640,2],[5611,2]]},"1212":{"position":[[15,2]]},"1216":{"position":[[6,2],[172,2],[398,2]]},"1218":{"position":[[4,2]]},"1246":{"position":[[1842,2]]},"1254":{"position":[[191,2]]},"1288":{"position":[[391,2],[1167,2]]},"1365":{"position":[[5,2]]},"1367":{"position":[[15,2]]},"1371":{"position":[[41,2],[50,2]]},"1395":{"position":[[49,2]]},"1434":{"position":[[176,2]]},"1437":{"position":[[78,2],[162,2]]},"1439":{"position":[[206,2]]},"1441":{"position":[[294,2]]},"1443":{"position":[[4640,2],[5611,2]]},"1496":{"position":[[2334,2]]}}}],["返回值",{"_index":364,"t":{"891":{"position":[[24,3]]},"1203":{"position":[[86,3]]},"1209":{"position":[[2969,3]]},"1365":{"position":[[2,3]]},"1373":{"position":[[6,3],[11,3]]},"1437":{"position":[[86,3]]},"1443":{"position":[[2969,3]]},"1494":{"position":[[6,3]]}}}],["还是",{"_index":1361,"t":{"1547":{"position":[[42,2]]},"1577":{"position":[[149,2]]}}}],["这个",{"_index":255,"t":{"851":{"position":[[488,2]]},"981":{"position":[[39,2]]},"1168":{"position":[[65,2]]},"1214":{"position":[[39,2]]},"1367":{"position":[[59,2]]}}}],["这些",{"_index":1032,"t":{"1181":{"position":[[209,2]]},"1209":{"position":[[118,2]]},"1443":{"position":[[118,2]]},"1508":{"position":[[329,2],[360,2],[385,2],[732,2]]},"1519":{"position":[[189,2]]}}}],["这样",{"_index":265,"t":{"851":{"position":[[526,2]]},"1496":{"position":[[1927,2]]}}}],["这种",{"_index":49,"t":{"847":{"position":[[87,2]]},"851":{"position":[[410,2],[583,2]]},"921":{"position":[[171,2]]}}}],["这边",{"_index":836,"t":{"1082":{"position":[[196,2]]},"1308":{"position":[[196,2]]}}}],["这里",{"_index":1453,"t":{"1662":{"position":[[512,2]]}}}],["进",{"_index":1407,"t":{"1577":{"position":[[311,1]]}}}],["进入",{"_index":215,"t":{"851":{"position":[[307,2]]},"1506":{"position":[[77,2]]},"1508":{"position":[[1372,2],[1430,2]]},"1511":{"position":[[25,2],[48,2]]},"1568":{"position":[[89,2],[107,2]]}}}],["进制",{"_index":1393,"t":{"1572":{"position":[[135,2]]}}}],["进步",{"_index":205,"t":{"851":{"position":[[270,2]]}}}],["进程",{"_index":524,"t":{"942":{"position":[[56,2]]},"958":{"position":[[22,2]]},"1222":{"position":[[56,2]]},"1238":{"position":[[22,2]]},"1499":{"position":[[23,2],[28,2]]},"1501":{"position":[[28,2]]},"1508":{"position":[[318,2],[430,2],[536,2]]},"1513":{"position":[[25,2]]},"1519":{"position":[[76,2],[148,2],[233,2]]},"1521":{"position":[[19,2]]},"1524":{"position":[[28,2],[53,2]]},"1543":{"position":[[212,2]]},"1562":{"position":[[58,2],[69,2]]},"1577":{"position":[[33,2],[79,2],[147,2],[152,2],[198,2],[265,2],[356,2],[365,2]]},"1606":{"position":[[17,2]]},"1623":{"position":[[104,2],[155,2]]},"1627":{"position":[[9,2]]},"1629":{"position":[[123,2]]},"1633":{"position":[[33,2]]},"1640":{"position":[[104,2],[155,2]]},"1644":{"position":[[9,2]]},"1646":{"position":[[123,2]]},"1650":{"position":[[33,2]]},"1656":{"position":[[2,2],[22,2]]},"1658":{"position":[[10,2],[21,2],[89,2],[130,2],[142,2],[174,2],[179,2],[203,2]]},"1661":{"position":[[47,2],[175,2],[273,2],[352,2],[432,2],[450,2]]},"1662":{"position":[[13,2],[22,2],[28,2],[152,2],[250,2],[326,2],[397,2],[415,2],[515,2],[541,2],[548,2],[583,2]]},"1664":{"position":[[180,2],[473,2],[569,2],[581,2],[626,2],[644,2],[707,2],[719,2],[734,2],[770,2],[820,2],[854,2],[874,2]]}}}],["进行",{"_index":557,"t":{"947":{"position":[[120,2]]},"1106":{"position":[[40,2]]},"1164":{"position":[[365,2]]},"1200":{"position":[[23,2]]},"1227":{"position":[[120,2]]},"1395":{"position":[[366,2]]},"1434":{"position":[[23,2]]},"1456":{"position":[[240,2]]},"1460":{"position":[[58,2]]},"1463":{"position":[[144,2]]},"1499":{"position":[[95,2]]},"1501":{"position":[[60,2]]},"1508":{"position":[[613,2],[655,2],[878,2]]},"1577":{"position":[[81,2]]}}}],["进阶",{"_index":1235,"t":{"1463":{"position":[[225,2]]}}}],["远",{"_index":171,"t":{"851":{"position":[[163,1]]}}}],["远程",{"_index":803,"t":{"1056":{"position":[[77,2]]},"1331":{"position":[[77,2]]},"1554":{"position":[[40,2],[51,2]]},"1587":{"position":[[8,2],[38,2]]}}}],["连接",{"_index":1344,"t":{"1543":{"position":[[55,2]]},"1547":{"position":[[104,2]]},"1587":{"position":[[36,2]]}}}],["连接池",{"_index":1339,"t":{"1541":{"position":[[0,3]]}}}],["迟迟",{"_index":1063,"t":{"1207":{"position":[[59,2]]},"1441":{"position":[[59,2]]}}}],["迭代",{"_index":882,"t":{"1108":{"position":[[158,2]]}}}],["追加",{"_index":1044,"t":{"1200":{"position":[[1293,2]]},"1434":{"position":[[1293,2]]}}}],["追求",{"_index":95,"t":{"847":{"position":[[227,2]]},"851":{"position":[[479,2]]}}}],["追踪",{"_index":735,"t":{"1011":{"position":[[13,2],[120,2]]},"1274":{"position":[[13,2],[120,2]]}}}],["退出",{"_index":959,"t":{"1162":{"position":[[141,2],[402,2],[457,2]]},"1205":{"position":[[134,2],[420,2],[519,2],[1118,2],[1174,2]]},"1439":{"position":[[134,2],[420,2],[519,2],[1118,2],[1174,2]]},"1543":{"position":[[150,2]]},"1568":{"position":[[211,2]]},"1577":{"position":[[382,2]]},"1661":{"position":[[434,2],[454,2]]},"1662":{"position":[[399,2]]}}}],["适合",{"_index":1064,"t":{"1207":{"position":[[87,2]]},"1369":{"position":[[34,2]]},"1441":{"position":[[87,2]]}}}],["适应",{"_index":652,"t":{"997":{"position":[[51,2]]},"1019":{"position":[[51,2]]},"1260":{"position":[[51,2]]},"1282":{"position":[[51,2]]}}}],["适当",{"_index":1340,"t":{"1541":{"position":[[310,2]]},"1547":{"position":[[88,2],[115,2]]}}}],["适用",{"_index":476,"t":{"931":{"position":[[158,2],[164,2]]},"936":{"position":[[183,2],[189,2]]},"938":{"position":[[0,2]]},"940":{"position":[[7,2]]},"1093":{"position":[[20,2]]},"1134":{"position":[[65,2],[185,2]]},"1152":{"position":[[10,2]]},"1160":{"position":[[16,2]]},"1164":{"position":[[3,2],[280,2],[410,2]]},"1181":{"position":[[158,2]]},"1343":{"position":[[458,2]]},"1348":{"position":[[37,2]]},"1356":{"position":[[6,2]]},"1358":{"position":[[2,2]]},"1389":{"position":[[99,2]]},"1429":{"position":[[31,2]]},"1460":{"position":[[21,2]]},"1635":{"position":[[8,2],[69,2]]},"1652":{"position":[[8,2],[69,2]]}}}],["逃逸",{"_index":1310,"t":{"1519":{"position":[[78,2],[216,2],[247,2]]}}}],["选",{"_index":778,"t":{"1025":{"position":[[186,1],[342,1]]},"1047":{"position":[[14,1],[78,1]]},"1170":{"position":[[550,1]]},"1288":{"position":[[186,1],[342,1]]},"1322":{"position":[[14,1],[78,1]]},"1501":{"position":[[134,1]]},"1527":{"position":[[401,1]]}}}],["选字",{"_index":1247,"t":{"1494":{"position":[[40,2]]}}}],["选择",{"_index":650,"t":{"997":{"position":[[40,2]]},"1260":{"position":[[40,2]]},"1360":{"position":[[127,2]]},"1386":{"position":[[170,2]]},"1431":{"position":[[84,2]]}}}],["选择权",{"_index":311,"t":{"853":{"position":[[95,3]]}}}],["透支",{"_index":224,"t":{"851":{"position":[[339,2]]}}}],["逐利",{"_index":235,"t":{"851":{"position":[[390,2]]}}}],["逐渐",{"_index":157,"t":{"851":{"position":[[109,2]]}}}],["递增",{"_index":957,"t":{"1158":{"position":[[153,2],[350,2]]}}}],["递归",{"_index":1243,"t":{"1487":{"position":[[97,2]]},"1496":{"position":[[1760,2],[1865,2],[1959,2]]}}}],["通信",{"_index":544,"t":{"945":{"position":[[100,2]]},"947":{"position":[[87,2],[122,2]]},"958":{"position":[[24,2]]},"960":{"position":[[32,2],[77,2]]},"1009":{"position":[[68,2]]},"1013":{"position":[[42,2]]},"1138":{"position":[[34,2]]},"1164":{"position":[[163,2]]},"1200":{"position":[[25,2]]},"1225":{"position":[[100,2]]},"1227":{"position":[[87,2],[122,2]]},"1238":{"position":[[24,2]]},"1240":{"position":[[32,2],[77,2]]},"1272":{"position":[[68,2]]},"1276":{"position":[[42,2]]},"1434":{"position":[[25,2]]},"1524":{"position":[[55,2]]},"1543":{"position":[[19,2]]},"1545":{"position":[[32,2],[201,2]]},"1547":{"position":[[29,2]]}}}],["通信模型",{"_index":1039,"t":{"1200":{"position":[[1151,4]]},"1434":{"position":[[1151,4]]}}}],["通常",{"_index":421,"t":{"921":{"position":[[151,2]]},"1209":{"position":[[337,2]]},"1363":{"position":[[11,2]]},"1443":{"position":[[337,2]]},"1508":{"position":[[1018,2]]},"1519":{"position":[[22,2]]},"1562":{"position":[[72,2]]}}}],["通用",{"_index":1087,"t":{"1209":{"position":[[627,2],[816,2],[3104,2]]},"1360":{"position":[[94,2]]},"1389":{"position":[[137,2]]},"1443":{"position":[[627,2],[816,2],[3104,2]]}}}],["通知",{"_index":690,"t":{"1001":{"position":[[225,2],[309,2],[410,2],[460,2],[557,2],[622,2],[980,2],[1105,2],[1747,2]]},"1152":{"position":[[505,2]]},"1162":{"position":[[447,2]]},"1164":{"position":[[89,2]]},"1205":{"position":[[414,2],[508,2],[1172,2]]},"1264":{"position":[[225,2],[309,2],[410,2],[460,2],[557,2],[622,2],[980,2],[1105,2],[1747,2]]},"1439":{"position":[[414,2],[508,2],[1172,2]]}}}],["通过",{"_index":345,"t":{"871":{"position":[[0,2]]},"942":{"position":[[53,2]]},"981":{"position":[[37,2],[89,2]]},"997":{"position":[[28,2]]},"1001":{"position":[[6,2],[144,2]]},"1003":{"position":[[21,2]]},"1005":{"position":[[31,2]]},"1009":{"position":[[57,2]]},"1015":{"position":[[1916,2],[2003,2]]},"1019":{"position":[[22,2]]},"1022":{"position":[[6,2]]},"1056":{"position":[[15,2]]},"1068":{"position":[[205,2],[391,2],[452,2],[490,2]]},"1136":{"position":[[31,2]]},"1140":{"position":[[13,2]]},"1142":{"position":[[350,2]]},"1181":{"position":[[203,2]]},"1200":{"position":[[1159,2],[1201,2],[1255,2],[1317,2]]},"1205":{"position":[[194,2]]},"1207":{"position":[[282,2]]},"1209":{"position":[[82,2],[393,2]]},"1214":{"position":[[37,2],[89,2]]},"1222":{"position":[[53,2]]},"1260":{"position":[[28,2]]},"1264":{"position":[[6,2],[144,2]]},"1266":{"position":[[21,2]]},"1268":{"position":[[31,2]]},"1272":{"position":[[57,2]]},"1278":{"position":[[1916,2],[2003,2]]},"1282":{"position":[[22,2]]},"1285":{"position":[[6,2]]},"1331":{"position":[[15,2]]},"1371":{"position":[[39,2]]},"1386":{"position":[[17,2],[78,2],[124,2]]},"1389":{"position":[[249,2]]},"1395":{"position":[[302,2],[345,2]]},"1434":{"position":[[1159,2],[1201,2],[1255,2],[1317,2]]},"1439":{"position":[[194,2]]},"1441":{"position":[[282,2]]},"1443":{"position":[[82,2],[393,2]]},"1463":{"position":[[164,2]]},"1470":{"position":[[0,2],[47,2]]},"1496":{"position":[[1738,2],[1893,2]]},"1508":{"position":[[1021,2]]},"1511":{"position":[[38,2]]},"1524":{"position":[[58,2],[89,2]]},"1545":{"position":[[35,2]]},"1547":{"position":[[124,2]]},"1554":{"position":[[45,2]]},"1570":{"position":[[0,2]]},"1577":{"position":[[391,2]]},"1606":{"position":[[3,2]]},"1658":{"position":[[13,2]]},"1661":{"position":[[0,2],[32,2]]},"1662":{"position":[[0,2]]}}}],["通道",{"_index":564,"t":{"950":{"position":[[221,2]]},"981":{"position":[[23,2],[41,2],[92,2]]},"983":{"position":[[138,2]]},"1025":{"position":[[293,2]]},"1144":{"position":[[31,2]]},"1203":{"position":[[415,2],[628,2]]},"1209":{"position":[[433,2]]},"1214":{"position":[[23,2],[41,2],[92,2]]},"1216":{"position":[[138,2]]},"1230":{"position":[[221,2]]},"1288":{"position":[[293,2]]},"1437":{"position":[[415,2],[628,2]]},"1443":{"position":[[433,2]]},"1545":{"position":[[225,2]]}}}],["通配符",{"_index":346,"t":{"871":{"position":[[2,3]]},"878":{"position":[[13,3]]}}}],["速度",{"_index":1105,"t":{"1348":{"position":[[8,2]]},"1358":{"position":[[47,2]]}}}],["逻辑",{"_index":266,"t":{"851":{"position":[[529,2]]},"1001":{"position":[[71,2],[592,2],[869,2],[1114,2],[1539,2]]},"1015":{"position":[[1969,2]]},"1177":{"position":[[229,2]]},"1205":{"position":[[116,2]]},"1209":{"position":[[60,2],[236,2],[383,2]]},"1264":{"position":[[71,2],[592,2],[869,2],[1114,2],[1539,2]]},"1278":{"position":[[1969,2]]},"1427":{"position":[[32,2],[164,2]]},"1439":{"position":[[116,2]]},"1443":{"position":[[60,2],[236,2],[383,2]]},"1470":{"position":[[40,2],[84,2]]},"1479":{"position":[[175,2]]}}}],["遇到",{"_index":318,"t":{"853":{"position":[[124,2]]},"1375":{"position":[[2,2]]}}}],["道德",{"_index":271,"t":{"851":{"position":[[549,2]]}}}],["遵循",{"_index":758,"t":{"1019":{"position":[[24,2]]},"1282":{"position":[[24,2]]}}}],["避免",{"_index":506,"t":{"940":{"position":[[128,2]]},"1007":{"position":[[65,2]]},"1015":{"position":[[1931,2]]},"1022":{"position":[[63,2]]},"1130":{"position":[[981,2]]},"1138":{"position":[[54,2]]},"1140":{"position":[[0,2],[59,2]]},"1144":{"position":[[697,2]]},"1146":{"position":[[32,2]]},"1164":{"position":[[24,2],[181,2]]},"1200":{"position":[[1269,2]]},"1207":{"position":[[149,2]]},"1270":{"position":[[65,2]]},"1278":{"position":[[1931,2]]},"1285":{"position":[[63,2]]},"1406":{"position":[[13,2]]},"1434":{"position":[[1269,2]]},"1441":{"position":[[149,2]]},"1487":{"position":[[93,2]]},"1494":{"position":[[69,2]]},"1496":{"position":[[1758,2],[1863,2],[1956,2]]},"1515":{"position":[[27,2]]},"1541":{"position":[[255,2]]}}}],["邮件",{"_index":691,"t":{"1001":{"position":[[307,2],[408,2],[1253,2],[1354,2]]},"1264":{"position":[[307,2],[408,2],[1253,2],[1354,2]]}}}],["邮箱",{"_index":1207,"t":{"1452":{"position":[[32,2]]}}}],["部分",{"_index":75,"t":{"847":{"position":[[165,2]]},"894":{"position":[[9,2],[21,2]]},"1015":{"position":[[2034,2]]},"1278":{"position":[[2034,2]]},"1501":{"position":[[68,2]]}}}],["部署",{"_index":1366,"t":{"1547":{"position":[[192,2]]}}}],["都",{"_index":80,"t":{"847":{"position":[[181,1]]},"921":{"position":[[226,1]]},"924":{"position":[[28,1]]},"926":{"position":[[78,1]]},"936":{"position":[[176,1]]},"940":{"position":[[62,1]]},"1205":{"position":[[48,1]]},"1369":{"position":[[33,1]]},"1439":{"position":[[48,1]]},"1547":{"position":[[54,1]]}}}],["配置",{"_index":718,"t":{"1005":{"position":[[24,2]]},"1268":{"position":[[24,2]]},"1508":{"position":[[682,2]]},"1527":{"position":[[97,2],[777,2]]},"1529":{"position":[[15,2]]},"1532":{"position":[[125,2],[889,2]]},"1541":{"position":[[3,2],[306,2]]}}}],["配置文件",{"_index":720,"t":{"1005":{"position":[[38,4]]},"1268":{"position":[[38,4]]}}}],["采用",{"_index":1250,"t":{"1496":{"position":[[1090,2]]}}}],["采集",{"_index":147,"t":{"851":{"position":[[74,2]]}}}],["释放",{"_index":946,"t":{"1150":{"position":[[483,2]]}}}],["重",{"_index":1077,"t":{"1209":{"position":[[148,1]]},"1443":{"position":[[148,1]]}}}],["重写",{"_index":660,"t":{"997":{"position":[[80,2]]},"1260":{"position":[[80,2]]}}}],["重启",{"_index":794,"t":{"1047":{"position":[[2211,2]]},"1059":{"position":[[426,2]]},"1322":{"position":[[2211,2]]},"1334":{"position":[[426,2]]},"1664":{"position":[[370,2]]}}}],["重命名",{"_index":644,"t":{"993":{"position":[[1251,3]]},"1025":{"position":[[619,3]]},"1037":{"position":[[426,3]]},"1059":{"position":[[722,3]]},"1082":{"position":[[20,3]]},"1246":{"position":[[1251,3]]},"1254":{"position":[[426,3]]},"1288":{"position":[[619,3]]},"1308":{"position":[[20,3]]},"1334":{"position":[[722,3]]}}}],["重复",{"_index":482,"t":{"931":{"position":[[199,2]]},"940":{"position":[[19,2]]}}}],["重建",{"_index":804,"t":{"1059":{"position":[[324,2]]},"1334":{"position":[[324,2]]}}}],["重新",{"_index":872,"t":{"1104":{"position":[[243,2],[482,2]]},"1106":{"position":[[62,2]]},"1375":{"position":[[184,2]]},"1386":{"position":[[195,2]]}}}],["重新安装",{"_index":1296,"t":{"1511":{"position":[[59,4]]}}}],["重构",{"_index":659,"t":{"997":{"position":[[77,2]]},"1260":{"position":[[77,2]]}}}],["重点",{"_index":1038,"t":{"1200":{"position":[[1147,2]]},"1434":{"position":[[1147,2]]}}}],["重要",{"_index":4,"t":{"843":{"position":[[6,2],[16,2]]},"851":{"position":[[617,2]]},"1166":{"position":[[36,2]]},"1181":{"position":[[149,2]]},"1508":{"position":[[343,2],[957,2]]}}}],["重视",{"_index":39,"t":{"847":{"position":[[60,2]]}}}],["链接",{"_index":607,"t":{"979":{"position":[[26,2]]},"1212":{"position":[[26,2]]},"1583":{"position":[[2,2]]}}}],["链路",{"_index":734,"t":{"1011":{"position":[[11,2]]},"1274":{"position":[[11,2]]}}}],["锁",{"_index":834,"t":{"1082":{"position":[[147,1]]},"1150":{"position":[[485,1]]},"1164":{"position":[[124,1],[183,1]]},"1308":{"position":[[147,1]]}}}],["错误",{"_index":768,"t":{"1022":{"position":[[30,2]]},"1115":{"position":[[121,2]]},"1134":{"position":[[125,2]]},"1285":{"position":[[30,2]]},"1527":{"position":[[1290,2]]},"1543":{"position":[[138,2]]},"1550":{"position":[[86,2]]}}}],["错误处理",{"_index":1031,"t":{"1181":{"position":[[196,4]]},"1363":{"position":[[7,4]]},"1543":{"position":[[166,4]]}}}],["错误率",{"_index":1343,"t":{"1541":{"position":[[411,3]]}}}],["错误码",{"_index":776,"t":{"1025":{"position":[[143,3]]},"1288":{"position":[[143,3]]}}}],["长度",{"_index":638,"t":{"993":{"position":[[258,2]]},"1246":{"position":[[258,2]]},"1452":{"position":[[81,2],[102,2],[111,2]]}}}],["长期",{"_index":662,"t":{"997":{"position":[[91,2]]},"1022":{"position":[[65,2]]},"1260":{"position":[[91,2]]},"1285":{"position":[[65,2]]}}}],["问题",{"_index":737,"t":{"1011":{"position":[[23,2]]},"1019":{"position":[[69,2]]},"1068":{"position":[[173,2],[194,2],[199,2],[473,2],[507,2]]},"1170":{"position":[[118,2],[216,2]]},"1181":{"position":[[172,2],[188,2]]},"1274":{"position":[[23,2]]},"1282":{"position":[[69,2]]},"1386":{"position":[[45,2],[72,2]]},"1511":{"position":[[32,2]]},"1519":{"position":[[2,2]]},"1524":{"position":[[151,2]]},"1543":{"position":[[21,2]]},"1554":{"position":[[77,2]]}}}],["间",{"_index":193,"t":{"851":{"position":[[227,1]]},"945":{"position":[[108,1]]},"1001":{"position":[[5,1]]},"1200":{"position":[[22,1]]},"1225":{"position":[[108,1]]},"1264":{"position":[[5,1]]},"1434":{"position":[[22,1]]},"1545":{"position":[[29,1],[221,1]]}}}],["间通信",{"_index":525,"t":{"942":{"position":[[58,3]]},"950":{"position":[[343,3],[1282,3]]},"967":{"position":[[186,3],[316,3]]},"983":{"position":[[57,3]]},"993":{"position":[[1227,3],[1244,3]]},"1022":{"position":[[2,3]]},"1025":{"position":[[212,3],[595,3],[612,3]]},"1188":{"position":[[186,3],[316,3]]},"1216":{"position":[[57,3]]},"1222":{"position":[[58,3]]},"1230":{"position":[[343,3],[1282,3]]},"1246":{"position":[[1227,3],[1244,3]]},"1285":{"position":[[2,3]]},"1288":{"position":[[212,3],[595,3],[612,3]]},"1524":{"position":[[30,3]]},"1545":{"position":[[2,3],[157,3]]}}}],["间隔",{"_index":840,"t":{"1086":{"position":[[55,2]]},"1312":{"position":[[55,2]]}}}],["队列",{"_index":935,"t":{"1146":{"position":[[2,2]]}}}],["防止",{"_index":499,"t":{"938":{"position":[[89,2]]},"1093":{"position":[[30,2]]},"1106":{"position":[[22,2],[67,2]]},"1144":{"position":[[671,2]]},"1150":{"position":[[40,2],[443,2]]},"1164":{"position":[[72,2]]},"1205":{"position":[[54,2],[74,2],[1202,2]]},"1207":{"position":[[24,2]]},"1439":{"position":[[54,2],[74,2],[1202,2]]},"1441":{"position":[[24,2]]},"1519":{"position":[[74,2],[231,2]]}}}],["阵营",{"_index":415,"t":{"921":{"position":[[132,2]]}}}],["阶层",{"_index":385,"t":{"921":{"position":[[19,2]]}}}],["阻塞",{"_index":773,"t":{"1022":{"position":[[67,2]]},"1142":{"position":[[242,2],[383,2]]},"1144":{"position":[[675,2],[699,2]]},"1148":{"position":[[526,2]]},"1205":{"position":[[1204,2]]},"1207":{"position":[[32,2],[1055,2]]},"1209":{"position":[[4259,2]]},"1285":{"position":[[67,2]]},"1439":{"position":[[1204,2]]},"1441":{"position":[[32,2],[1055,2]]},"1443":{"position":[[4259,2]]},"1664":{"position":[[169,2]]}}}],["阻止",{"_index":877,"t":{"1106":{"position":[[90,2]]}}}],["附加",{"_index":331,"t":{"857":{"position":[[33,2]]}}}],["附带",{"_index":615,"t":{"981":{"position":[[67,2]]},"1214":{"position":[[67,2]]}}}],["降低",{"_index":661,"t":{"997":{"position":[[89,2]]},"1260":{"position":[[89,2]]},"1404":{"position":[[5,2]]},"1543":{"position":[[303,2],[332,2]]}}}],["限制",{"_index":77,"t":{"847":{"position":[[173,2]]},"1144":{"position":[[731,2]]},"1146":{"position":[[40,2]]},"1164":{"position":[[231,2]]},"1168":{"position":[[261,2]]},"1513":{"position":[[21,2]]},"1543":{"position":[[221,2]]}}}],["陷入困境",{"_index":143,"t":{"851":{"position":[[61,4]]}}}],["随之",{"_index":222,"t":{"851":{"position":[[330,2]]}}}],["随之而来",{"_index":154,"t":{"851":{"position":[[99,4]]}}}],["随机",{"_index":780,"t":{"1027":{"position":[[7,2]]},"1290":{"position":[[7,2]]}}}],["隐藏",{"_index":1248,"t":{"1496":{"position":[[1041,2]]}}}],["隔离",{"_index":741,"t":{"1015":{"position":[[1907,2]]},"1278":{"position":[[1907,2]]},"1499":{"position":[[85,2]]},"1513":{"position":[[78,2]]},"1517":{"position":[[29,2]]},"1519":{"position":[[64,2]]},"1521":{"position":[[21,2],[39,2],[70,2],[88,2]]}}}],["难以",{"_index":755,"t":{"1017":{"position":[[11,2]]},"1280":{"position":[[11,2]]}}}],["难度",{"_index":1182,"t":{"1404":{"position":[[10,2]]}}}],["集体经济",{"_index":139,"t":{"851":{"position":[[41,4]]}}}],["集成",{"_index":1354,"t":{"1545":{"position":[[60,2]]}}}],["零",{"_index":1051,"t":{"1203":{"position":[[80,1],[164,1]]},"1437":{"position":[[80,1],[164,1]]}}}],["需",{"_index":1126,"t":{"1371":{"position":[[383,1]]},"1508":{"position":[[1125,1]]}}}],["需求",{"_index":653,"t":{"997":{"position":[[56,2]]},"1164":{"position":[[378,2]]},"1260":{"position":[[56,2]]},"1360":{"position":[[125,2]]},"1406":{"position":[[5,2]]},"1519":{"position":[[132,2]]},"1521":{"position":[[101,2]]}}}],["需要",{"_index":491,"t":{"936":{"position":[[213,2]]},"1001":{"position":[[1108,2]]},"1095":{"position":[[18,2]]},"1104":{"position":[[35,2],[241,2]]},"1108":{"position":[[101,2]]},"1134":{"position":[[188,2]]},"1148":{"position":[[15,2]]},"1150":{"position":[[14,2]]},"1168":{"position":[[703,2]]},"1264":{"position":[[1108,2]]},"1343":{"position":[[435,2]]},"1358":{"position":[[52,2]]},"1360":{"position":[[25,2]]},"1395":{"position":[[300,2],[317,2]]},"1431":{"position":[[55,2]]},"1463":{"position":[[126,2]]},"1496":{"position":[[1070,2]]},"1508":{"position":[[67,2],[1135,2]]},"1517":{"position":[[2,2]]},"1519":{"position":[[12,2],[150,2]]},"1615":{"position":[[18,2]]},"1620":{"position":[[18,2]]},"1635":{"position":[[72,2]]},"1652":{"position":[[72,2]]}}}],["非",{"_index":92,"t":{"847":{"position":[[223,1]]},"1001":{"position":[[17,1],[48,1],[59,1],[133,1]]},"1003":{"position":[[26,1]]},"1025":{"position":[[139,1]]},"1207":{"position":[[1054,1]]},"1209":{"position":[[4258,1]]},"1264":{"position":[[17,1],[48,1],[59,1],[133,1]]},"1266":{"position":[[26,1]]},"1288":{"position":[[139,1]]},"1441":{"position":[[1054,1]]},"1443":{"position":[[4258,1]]},"1664":{"position":[[168,1]]}}}],["非常",{"_index":1292,"t":{"1508":{"position":[[955,2]]},"1521":{"position":[[51,2]]}}}],["非线性",{"_index":206,"t":{"851":{"position":[[273,3]]}}}],["面向",{"_index":680,"t":{"1001":{"position":[[121,2]]},"1264":{"position":[[121,2]]}}}],["革命",{"_index":151,"t":{"851":{"position":[[88,2]]}}}],["项",{"_index":1017,"t":{"1179":{"position":[[198,1]]},"1424":{"position":[[161,1]]}}}],["项目",{"_index":625,"t":{"990":{"position":[[16,2]]},"1243":{"position":[[16,2]]},"1460":{"position":[[28,2]]}}}],["预期",{"_index":216,"t":{"851":{"position":[[314,2]]}}}],["预设",{"_index":1387,"t":{"1564":{"position":[[42,2]]}}}],["领先",{"_index":236,"t":{"851":{"position":[[396,2]]}}}],["领域",{"_index":13,"t":{"845":{"position":[[19,2]]}}}],["颇为",{"_index":287,"t":{"853":{"position":[[4,2]]}}}],["颇具",{"_index":324,"t":{"853":{"position":[[146,2]]}}}],["频率",{"_index":991,"t":{"1168":{"position":[[131,2]]}}}],["频繁",{"_index":997,"t":{"1168":{"position":[[209,2]]}}}],["颜色代码",{"_index":1218,"t":{"1452":{"position":[[397,4]]}}}],["额外",{"_index":1103,"t":{"1343":{"position":[[446,2]]}}}],["风格",{"_index":970,"t":{"1164":{"position":[[330,2]]},"1373":{"position":[[59,2]]}}}],["飞速发展",{"_index":233,"t":{"851":{"position":[[374,4]]}}}],["驱动",{"_index":277,"t":{"851":{"position":[[578,2]]},"1005":{"position":[[42,2]]},"1268":{"position":[[42,2]]}}}],["驱动程序",{"_index":537,"t":{"945":{"position":[[53,4]]},"1225":{"position":[[53,4]]},"1508":{"position":[[590,4]]}}}],["验证",{"_index":864,"t":{"1100":{"position":[[201,2],[439,2]]},"1106":{"position":[[31,2]]},"1108":{"position":[[70,2]]},"1446":{"position":[[25,2],[39,2],[50,2]]},"1452":{"position":[[636,2]]},"1454":{"position":[[5,2],[12,2]]},"1456":{"position":[[242,2]]},"1460":{"position":[[16,2],[67,2]]}}}],["高",{"_index":237,"t":{"851":{"position":[[404,1]]},"945":{"position":[[79,1]]},"1106":{"position":[[85,1]]},"1181":{"position":[[32,1]]},"1225":{"position":[[79,1]]},"1352":{"position":[[69,1]]},"1356":{"position":[[45,1]]},"1358":{"position":[[83,1]]},"1519":{"position":[[128,1],[254,1]]},"1545":{"position":[[192,1]]}}}],["高层",{"_index":1260,"t":{"1499":{"position":[[73,2]]}}}],["高性能",{"_index":1113,"t":{"1358":{"position":[[112,3]]},"1360":{"position":[[27,3]]},"1484":{"position":[[21,3]]},"1524":{"position":[[104,3]]},"1545":{"position":[[204,3]]},"1547":{"position":[[23,3]]}}}],["高效",{"_index":963,"t":{"1164":{"position":[[116,2],[223,2]]},"1377":{"position":[[53,2]]},"1545":{"position":[[30,2]]}}}],["高速",{"_index":217,"t":{"851":{"position":[[318,2],[454,2]]},"1545":{"position":[[223,2]]}}}],["高频",{"_index":973,"t":{"1164":{"position":[[343,2]]}}}],["默认",{"_index":856,"t":{"1098":{"position":[[434,2]]},"1144":{"position":[[39,2]]},"1168":{"position":[[192,2]]},"1414":{"position":[[11,2]]},"1463":{"position":[[68,2]]},"1501":{"position":[[166,2]]},"1577":{"position":[[349,2]]}}}],["默认值",{"_index":992,"t":{"1168":{"position":[[135,3]]},"1409":{"position":[[60,3]]},"1452":{"position":[[617,3]]},"1577":{"position":[[208,3],[297,3]]}}}]],"pipeline":["stemmer"]}}]